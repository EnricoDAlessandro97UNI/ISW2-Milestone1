{"sha":"7cdeb5fa8aaae5e39e2453e7bd9fe057afc886b4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjdjZGViNWZhOGFhYWU1ZTM5ZTI0NTNlN2JkOWZlMDU3YWZjODg2YjQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-05-07T15:22:27Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-05-07T15:23:10Z"},"message":"[SYNCOPE-1308] Now working fine with latest PostgreSQL (needs dedicated views.xml)","tree":{"sha":"addc1ded21cbb5f9acab4549e5c88be702c8132e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/addc1ded21cbb5f9acab4549e5c88be702c8132e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7cdeb5fa8aaae5e39e2453e7bd9fe057afc886b4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7cdeb5fa8aaae5e39e2453e7bd9fe057afc886b4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7cdeb5fa8aaae5e39e2453e7bd9fe057afc886b4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7cdeb5fa8aaae5e39e2453e7bd9fe057afc886b4/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"c40ebf0f29c5a8dfd857fc288a5c172863759a7a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c40ebf0f29c5a8dfd857fc288a5c172863759a7a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c40ebf0f29c5a8dfd857fc288a5c172863759a7a"}],"stats":{"total":291,"additions":291,"deletions":0},"files":[{"sha":"ac1059d903f6ce4fb2560ef3daf0e9658f94a2b4","filename":"deb/core/pom.xml","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cdeb5fa8aaae5e39e2453e7bd9fe057afc886b4/deb%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cdeb5fa8aaae5e39e2453e7bd9fe057afc886b4/deb%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/deb%2Fcore%2Fpom.xml?ref=7cdeb5fa8aaae5e39e2453e7bd9fe057afc886b4","patch":"@@ -200,6 +200,14 @@ under the License.\n         <targetPath>${project.build.directory}/etc</targetPath>\n         <filtering>true</filtering>\n       </resource>\n+      <resource>\n+        <directory>${basedir}/../../fit/core-reference/src/main/resources/postgres</directory>\n+        <includes>\n+          <include>views.xml</include>\n+        </includes>\n+        <targetPath>${project.build.directory}/etc</targetPath>\n+        <filtering>true</filtering>\n+      </resource>\n       <resource>\n         <directory>${project.basedir}/../../ext/saml2sp/logic/src/main/resources</directory>\n         <includes>"},{"sha":"77c8b746a1a8c340e0c5c0f17bdaa833d726dabc","filename":"fit/core-reference/pom.xml","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cdeb5fa8aaae5e39e2453e7bd9fe057afc886b4/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cdeb5fa8aaae5e39e2453e7bd9fe057afc886b4/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=7cdeb5fa8aaae5e39e2453e7bd9fe057afc886b4","patch":"@@ -561,13 +561,24 @@ under the License.\n             <filtering>true</filtering>\n             <excludes>\n               <exclude>provisioning.properties</exclude>\n+              <exclude>views.xml</exclude>\n             </excludes>\n           </resource>\n           <resource>\n             <directory>src/main/resources/postgres</directory>\n             <filtering>true</filtering>\n           </resource>\n         </resources>\n+        <!-- Views need to be customized, so the PostgreSQL-specific views.xml need to be copied to target/test-classes,\n+        e.g. the conf directory, in order to override classpath:views.xml -->\n+        <testResources>\n+          <testResource>\n+            <directory>src/main/resources/postgres</directory>\n+            <includes>\n+              <include>views.xml</include>\n+            </includes>            \n+          </testResource>\n+        </testResources>\n       </build>\n     </profile>\n     "},{"sha":"1427872ae92b19fccbdde6b9be2ab994ddcc24ed","filename":"fit/core-reference/src/main/resources/postgres/views.xml","status":"added","additions":254,"deletions":0,"changes":254,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cdeb5fa8aaae5e39e2453e7bd9fe057afc886b4/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpostgres%2Fviews.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cdeb5fa8aaae5e39e2453e7bd9fe057afc886b4/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpostgres%2Fviews.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpostgres%2Fviews.xml?ref=7cdeb5fa8aaae5e39e2453e7bd9fe057afc886b4","patch":"@@ -0,0 +1,254 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n+<properties>\n+  \n+  <entry key=\"UDynGroupMembers\">\n+    CREATE TABLE UDynGroupMembers(\n+    any_id CHAR(36),\n+    group_id CHAR(36),\n+    UNIQUE(any_id, group_id))\n+  </entry>\n+  <entry key=\"ADynGroupMembers\">\n+    CREATE TABLE ADynGroupMembers(\n+    anyType_id VARCHAR(255),\n+    any_id CHAR(36),\n+    group_id CHAR(36),\n+    UNIQUE(anyType_id, any_id, group_id))\n+  </entry>\n+  <entry key=\"DynRoleMembers\">\n+    CREATE TABLE DynRoleMembers(\n+    any_id CHAR(36),\n+    role_id VARCHAR(255),\n+    UNIQUE(any_id, role_id))\n+  </entry>\n+  <entry key=\"DynRealmMembers\">\n+    CREATE TABLE DynRealmMembers(\n+    any_id CHAR(36),\n+    dynRealm_id VARCHAR(255),\n+    UNIQUE(any_id, dynRealm_id))\n+  </entry>\n+\n+  <!-- user -->\n+  <entry key=\"user_search\">\n+    CREATE VIEW user_search AS\n+ \n+    SELECT u.id as any_id, u.* FROM SyncopeUser u\n+  </entry>\n+  <entry key=\"user_search_unique_attr\">\n+    CREATE VIEW user_search_unique_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM UPlainAttrUniqueValue uav, UPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"user_search_attr\">\n+    CREATE VIEW user_search_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM UPlainAttrValue uav, UPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"user_search_null_attr\">\n+    CREATE VIEW user_search_null_attr AS\n+\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n+    NULL::int4 AS booleanvalue,\n+    NULL::timestamp AS datevalue,\n+    NULL::float8 AS doublevalue,\n+    NULL::int8 AS longvalue,\n+    NULL AS stringvalue\n+    FROM SyncopeUser u CROSS JOIN PlainSchema\n+    LEFT OUTER JOIN UPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n+  </entry>\n+  <entry key=\"user_search_urelationship\">\n+    CREATE VIEW user_search_urelationship AS\n+\n+    SELECT m.user_id AS any_id, m.anyObject_id AS right_any_id, m.type_id AS type\n+    FROM URelationship m\n+  </entry>\n+  <entry key=\"user_search_umembership\">\n+    CREATE VIEW user_search_umembership AS\n+\n+    SELECT m.user_id AS any_id, g.id AS group_id, g.name AS group_name\n+    FROM UMembership m, SyncopeGroup g\n+    WHERE m.group_id = g.id\n+  </entry>\n+  <entry key=\"user_search_role\">\n+    CREATE VIEW user_search_role AS\n+\n+    SELECT ss.user_id AS any_id, ss.role_id AS role_id\n+    FROM SyncopeUser_SyncopeRole ss\n+  </entry>\n+  <entry key=\"user_search_resource\">\n+    CREATE VIEW user_search_resource AS\n+\n+    SELECT st.user_id AS any_id, st.resource_id AS resource_id\n+    FROM SyncopeUser_ExternalResource st\n+  </entry>\n+  <entry key=\"user_search_group_res\">\n+    CREATE VIEW user_search_group_res AS\n+\n+    SELECT m.user_id AS any_id, st.resource_id AS resource_id\n+    FROM UMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n+    WHERE m.group_id = r.id AND st.group_id = r.id\n+  </entry>\n+\n+  <!-- anyObject -->\n+  <entry key=\"anyObject_search\">\n+    CREATE VIEW anyObject_search AS\n+ \n+    SELECT a.id as any_id, a.* FROM AnyObject a\n+  </entry>\n+  <entry key=\"anyObject_search_unique_attr\">\n+    CREATE VIEW anyObject_search_unique_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM APlainAttrUniqueValue uav, APlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"anyObject_search_attr\">\n+    CREATE VIEW anyObject_search_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM APlainAttrValue uav, APlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"anyObject_search_null_attr\">\n+    CREATE VIEW anyObject_search_null_attr AS\n+\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n+    NULL::int4 AS booleanvalue,\n+    NULL::timestamp AS datevalue,\n+    NULL::float8 AS doublevalue,\n+    NULL::int8 AS longvalue,\n+    NULL AS stringvalue\n+    FROM AnyObject u CROSS JOIN PlainSchema\n+    LEFT OUTER JOIN APlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n+  </entry>\n+  <entry key=\"anyObject_search_arelationship\">\n+    CREATE VIEW anyObject_search_arelationship AS\n+\n+    SELECT m.left_anyObject_id AS any_id, m.right_anyObject_id AS right_any_id, m.type_id AS type\n+    FROM ARelationship m\n+  </entry>\n+  <entry key=\"anyObject_search_amembership\">\n+    CREATE VIEW anyObject_search_amembership AS\n+\n+    SELECT m.anyObject_id AS any_id, g.id AS group_id, g.name AS group_name\n+    FROM AMembership m, SyncopeGroup g\n+    WHERE m.group_id = g.id\n+  </entry>\n+  <entry key=\"anyObject_search_resource\">\n+    CREATE VIEW anyObject_search_resource AS\n+\n+    SELECT st.anyObject_id AS any_id, st.resource_id AS resource_id\n+    FROM AnyObject_ExternalResource st\n+  </entry>\n+  <entry key=\"anyObject_search_group_res\">\n+    CREATE VIEW anyObject_search_group_res AS\n+\n+    SELECT m.anyObject_id AS any_id, st.resource_id AS resource_id\n+    FROM AMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n+    WHERE m.group_id = r.id AND st.group_id = r.id\n+  </entry>\n+\n+  <!-- group -->\n+  <entry key=\"group_search\">\n+    CREATE VIEW group_search AS\n+ \n+    SELECT r.id as any_id, r.* FROM SyncopeGroup r\n+  </entry>\n+  <entry key=\"group_search_unique_attr\">\n+    CREATE VIEW group_search_unique_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM GPlainAttrUniqueValue uav, GPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"group_search_attr\">\n+    CREATE VIEW group_search_attr AS\n+\n+    SELECT ua.owner_id AS any_id,\n+    ua.schema_id AS schema_id,\n+    uav.booleanvalue AS booleanvalue,\n+    uav.datevalue AS datevalue,\n+    uav.doublevalue AS doublevalue,\n+    uav.longvalue AS longvalue,\n+    uav.stringvalue AS stringvalue\n+    FROM GPlainAttrValue uav, GPlainAttr ua\n+    WHERE uav.attribute_id = ua.id\n+  </entry>\n+  <entry key=\"group_search_null_attr\">\n+    CREATE VIEW group_search_null_attr AS\n+\n+    SELECT u.id AS any_id,\n+    PlainSchema.id AS schema_id,\n+    NULL::int4 AS booleanvalue,\n+    NULL::timestamp AS datevalue,\n+    NULL::float8 AS doublevalue,\n+    NULL::int8 AS longvalue,\n+    NULL AS stringvalue\n+    FROM SyncopeGroup u CROSS JOIN PlainSchema\n+    LEFT OUTER JOIN GPlainAttr ua ON (PlainSchema.id = ua.schema_id AND ua.owner_id = u.id)\n+    WHERE ua.id IS NULL\n+  </entry>\n+  <entry key=\"group_search_resource\">\n+    CREATE VIEW group_search_resource AS\n+\n+    SELECT st.group_id AS any_id, st.resource_id AS resource_id\n+    FROM SyncopeGroup_ExternalResource st\n+  </entry>\n+\n+</properties>"},{"sha":"0a29ab0aff290725ed6db703a9d2cc4e9def36f5","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/systemadministration/dbms.adoc","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cdeb5fa8aaae5e39e2453e7bd9fe057afc886b4/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fdbms.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cdeb5fa8aaae5e39e2453e7bd9fe057afc886b4/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fdbms.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fsystemadministration%2Fdbms.adoc?ref=7cdeb5fa8aaae5e39e2453e7bd9fe057afc886b4","patch":"@@ -47,6 +47,15 @@ Master.orm=META-INF/spring-orm.xml\n This assumes that you have a PostgreSQL instance running on localhost, listening on its default port 5432 with a\n database `syncope` fully accessible by user `syncope` with password `syncope`.\n \n+Download\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/fit/core-reference/src/main/resources/postgres/views.xml[views.xml^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/tree/master/fit/core-reference/src/main/resources/postgres/views.xml[views.xml^]\n+endif::[]\n+and save it under `core/src/main/resources/`.\n+\n ===== MySQL\n \n In `provisioning.properties`:\n@@ -167,3 +176,12 @@ Master.audit.sql=audit_sqlserver.sql\n [WARNING]\n This assumes that you have a MS SQL Server instance running on localhost, listening on its default port 1344 with a\n database `syncope` fully accessible by user `syncope` with password `syncope`.\n+\n+Download\n+ifeval::[\"{snapshotOrRelease}\" == \"release\"]\n+https://github.com/apache/syncope/blob/syncope-{docVersion}/fit/core-reference/src/main/resources/sqlserver/views.xml[views.xml^]\n+endif::[]\n+ifeval::[\"{snapshotOrRelease}\" == \"snapshot\"]\n+https://github.com/apache/syncope/tree/master/fit/core-reference/src/main/resources/sqlserver/views.xml[views.xml^]\n+endif::[]\n+and save it under `core/src/main/resources/`."}]}