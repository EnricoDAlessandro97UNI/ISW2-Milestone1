{"sha":"e8c80ab9ffe0b717a178fed74a181ae733e15a26","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmU4YzgwYWI5ZmZlMGI3MTdhMTc4ZmVkNzRhMTgxYWU3MzNlMTVhMjY=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-03-28T15:29:47Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-03-28T15:29:47Z"},"message":"SYNCOPE-41 #comment provided fields to store email attribute type/schema\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1306418 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"bee94c42c77466adfceb14d40a92dea369269a2f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/bee94c42c77466adfceb14d40a92dea369269a2f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e8c80ab9ffe0b717a178fed74a181ae733e15a26","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e8c80ab9ffe0b717a178fed74a181ae733e15a26","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e8c80ab9ffe0b717a178fed74a181ae733e15a26","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e8c80ab9ffe0b717a178fed74a181ae733e15a26/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"941a5c62233d13f4d0a27cf2408f7a32be0f42e5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/941a5c62233d13f4d0a27cf2408f7a32be0f42e5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/941a5c62233d13f4d0a27cf2408f7a32be0f42e5"}],"stats":{"total":489,"additions":352,"deletions":137},"files":[{"sha":"872729b8591571da1d52769b56df487d8f7d6ceb","filename":"client/src/main/java/org/syncope/client/to/NotificationTO.java","status":"modified","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8c80ab9ffe0b717a178fed74a181ae733e15a26/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FNotificationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8c80ab9ffe0b717a178fed74a181ae733e15a26/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FNotificationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FNotificationTO.java?ref=e8c80ab9ffe0b717a178fed74a181ae733e15a26","patch":"@@ -22,6 +22,7 @@\n import java.util.List;\n import org.syncope.client.AbstractBaseBean;\n import org.syncope.client.search.NodeCond;\n+import org.syncope.types.IntMappingType;\n import org.syncope.types.TraceLevel;\n \n public class NotificationTO extends AbstractBaseBean {\n@@ -36,6 +37,10 @@ public class NotificationTO extends AbstractBaseBean {\n \n     private NodeCond recipients;\n \n+    private IntMappingType recipientAttrType;\n+\n+    private String recipientAttrName;\n+\n     private boolean selfAsRecipient;\n \n     private String sender;\n@@ -90,6 +95,22 @@ public void setRecipients(NodeCond recipients) {\n         this.recipients = recipients;\n     }\n \n+    public String getRecipientAttrName() {\n+        return recipientAttrName;\n+    }\n+\n+    public void setRecipientAttrName(String recipientAttrName) {\n+        this.recipientAttrName = recipientAttrName;\n+    }\n+\n+    public IntMappingType getRecipientAttrType() {\n+        return recipientAttrType;\n+    }\n+\n+    public void setRecipientAttrType(IntMappingType recipientAttrType) {\n+        this.recipientAttrType = recipientAttrType;\n+    }\n+\n     public boolean isSelfAsRecipient() {\n         return selfAsRecipient;\n     }"},{"sha":"d9917444ddb30fc5d15c0240eaa75bb747066efb","filename":"client/src/main/java/org/syncope/types/IntMappingType.java","status":"modified","additions":34,"deletions":7,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8c80ab9ffe0b717a178fed74a181ae733e15a26/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FIntMappingType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8c80ab9ffe0b717a178fed74a181ae733e15a26/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FIntMappingType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FIntMappingType.java?ref=e8c80ab9ffe0b717a178fed74a181ae733e15a26","patch":"@@ -19,6 +19,8 @@\n package org.syncope.types;\n \n import java.util.EnumSet;\n+import java.util.HashSet;\n+import java.util.Set;\n \n /**\n  * Internal attribute mapping type.\n@@ -62,17 +64,45 @@ public AttributableType getAttributableType() {\n      * Get attribute types for a certain attributable type.\n      *\n      * @param attributableType attributable type\n+     * @param toBeFiltered types to be filtered from the result.\n      * @return set of attribute types.\n      */\n-    public static EnumSet<?> getAttributeTypes(final AttributableType attributableType) {\n+    public static Set<IntMappingType> getAttributeTypes(\n+            final AttributableType attributableType, final Set<IntMappingType> toBeFiltered) {\n+\n+        final Set<IntMappingType> res = getAttributeTypes(attributableType);\n+        res.removeAll(toBeFiltered);\n+\n+        return res;\n+    }\n+\n+    /**\n+     * Get attribute types for a certain attributable type.\n+     *\n+     * @param attributableType attributable type\n+     * @return set of attribute types.\n+     */\n+    public static Set<IntMappingType> getAttributeTypes(final AttributableType attributableType) {\n+        final EnumSet<?> enumset;\n+\n         switch (attributableType) {\n             case ROLE:\n-                return EnumSet.allOf(RoleMappingType.class);\n+                enumset = EnumSet.allOf(RoleMappingType.class);\n+                break;\n             case MEMBERSHIP:\n-                return EnumSet.allOf(MembershipMappingType.class);\n+                enumset = EnumSet.allOf(MembershipMappingType.class);\n+                break;\n             default:\n-                return EnumSet.allOf(UserMappingType.class);\n+                enumset = EnumSet.allOf(UserMappingType.class);\n+        }\n+\n+        final Set<IntMappingType> res = new HashSet<IntMappingType>();\n+\n+        for (Object obj : enumset) {\n+            res.add(IntMappingType.valueOf(obj.toString()));\n         }\n+\n+        return res;\n     }\n \n     /**\n@@ -104,7 +134,6 @@ private enum UserMappingType {\n         SyncopeUserId,\n         Password,\n         Username;\n-\n     }\n \n     /**\n@@ -115,7 +144,6 @@ private enum RoleMappingType {\n         RoleSchema,\n         RoleDerivedSchema,\n         RoleVirtualSchema;\n-\n     }\n \n     /**\n@@ -126,6 +154,5 @@ private enum MembershipMappingType {\n         MembershipSchema,\n         MembershipDerivedSchema,\n         MembershipVirtualSchema;\n-\n     }\n }"},{"sha":"30a914675cd9454582b28bc548cc9b9622f68e56","filename":"console/src/main/java/org/syncope/console/pages/NotificationModalPage.java","status":"modified","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8c80ab9ffe0b717a178fed74a181ae733e15a26/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8c80ab9ffe0b717a178fed74a181ae733e15a26/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java?ref=e8c80ab9ffe0b717a178fed74a181ae733e15a26","patch":"@@ -18,9 +18,15 @@\n  */\n package org.syncope.console.pages;\n \n+import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n@@ -29,17 +35,21 @@\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.apache.wicket.validation.validator.EmailAddressValidator;\n import org.syncope.client.to.NotificationTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.pages.panels.UserSearchPanel;\n import org.syncope.console.rest.NotificationRestClient;\n+import org.syncope.console.rest.SchemaRestClient;\n import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.syncope.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.syncope.types.AttributableType;\n+import org.syncope.types.IntMappingType;\n import org.syncope.types.TraceLevel;\n \n class NotificationModalPage extends BaseModalPage {\n@@ -49,6 +59,14 @@ class NotificationModalPage extends BaseModalPage {\n     @SpringBean\n     private NotificationRestClient restClient;\n \n+    @SpringBean\n+    private SchemaRestClient schemaRestClient;\n+\n+    /**\n+     * OnChange event name.\n+     */\n+    private static String onchange = \"onchange\";\n+\n     public NotificationModalPage(final PageReference callPageRef, final ModalWindow window,\n             final NotificationTO notificationTO, final boolean createFlag) {\n \n@@ -81,6 +99,39 @@ public NotificationModalPage(final PageReference callPageRef, final ModalWindow\n         final UserSearchPanel about = new UserSearchPanel(\"about\", notificationTO.getAbout());\n         form.add(about);\n \n+        final AjaxDropDownChoicePanel<IntMappingType> recipientAttrType = new AjaxDropDownChoicePanel<IntMappingType>(\n+                \"recipientAttrType\",\n+                new ResourceModel(\"recipientAttrType\", \"recipientAttrType\").getObject(),\n+                new PropertyModel<IntMappingType>(notificationTO, \"recipientAttrType\"));\n+\n+        final Set<IntMappingType> toBeFiltered = new HashSet<IntMappingType>();\n+        toBeFiltered.add(IntMappingType.SyncopeUserId);\n+        toBeFiltered.add(IntMappingType.Password);\n+\n+        recipientAttrType.setChoices(new ArrayList<IntMappingType>(\n+                (Set<IntMappingType>) IntMappingType.getAttributeTypes(AttributableType.USER, toBeFiltered)));\n+\n+        recipientAttrType.setRequired(true);\n+        form.add(recipientAttrType);\n+\n+        final AjaxDropDownChoicePanel<String> recipientAttrName = new AjaxDropDownChoicePanel<String>(\n+                \"recipientAttrName\",\n+                new ResourceModel(\"recipientAttrName\", \"recipientAttrName\").getObject(),\n+                new PropertyModel(notificationTO, \"recipientAttrName\"));\n+\n+        recipientAttrName.setChoices(getSchemaNames(notificationTO.getRecipientAttrType()));\n+        recipientAttrName.setRequired(true);\n+        form.add(recipientAttrName);\n+\n+        recipientAttrType.getField().add(new AjaxFormComponentUpdatingBehavior(onchange) {\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                recipientAttrName.setChoices(getSchemaNames(notificationTO.getRecipientAttrType()));\n+                target.add(recipientAttrName);\n+            }\n+        });\n+\n         final AjaxPalettePanel events = new AjaxPalettePanel(\"events\", new PropertyModel(notificationTO, \"events\"),\n                 new ListModel<String>(restClient.getEvents()));\n         form.add(events);\n@@ -136,4 +187,23 @@ protected void onError(final AjaxRequestTarget target, final Form form) {\n \n         add(form);\n     }\n+\n+    private List<String> getSchemaNames(final IntMappingType type) {\n+        if (type == null) {\n+            return Collections.EMPTY_LIST;\n+        }\n+\n+        switch (type) {\n+            case UserSchema:\n+                return schemaRestClient.getSchemaNames(AttributableType.USER);\n+            case UserDerivedSchema:\n+                return schemaRestClient.getDerivedSchemaNames(AttributableType.USER);\n+            case UserVirtualSchema:\n+                return schemaRestClient.getVirtualSchemaNames(AttributableType.USER);\n+            case Username:\n+                return Collections.singletonList(\"Username\");\n+            default:\n+                return Collections.EMPTY_LIST;\n+        }\n+    }\n }"},{"sha":"f904bc545b52c4d9a2292423d7d120d9a04c6717","filename":"console/src/main/java/org/syncope/console/pages/panels/ResourceMappingPanel.java","status":"modified","additions":2,"deletions":7,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8c80ab9ffe0b717a178fed74a181ae733e15a26/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8c80ab9ffe0b717a178fed74a181ae733e15a26/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java?ref=e8c80ab9ffe0b717a178fed74a181ae733e15a26","patch":"@@ -21,7 +21,6 @@\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n-import java.util.EnumSet;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n@@ -287,7 +286,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         \"mandatoryCondition\", \"mandatoryCondition\").getObject(), new PropertyModel(mappingTO,\n                         \"mandatoryCondition\"));\n \n-                mandatory.setChoices(Arrays.asList(new String[] { \"true\", \"false\" }));\n+                mandatory.setChoices(Arrays.asList(new String[]{\"true\", \"false\"}));\n \n                 mandatory.setStyleShet(shortFieldStyle);\n \n@@ -546,11 +545,7 @@ private List<IntMappingType> getAttributeTypes(final AttributableType entity) {\n         final List<IntMappingType> res = new ArrayList<IntMappingType>();\n \n         if (entity != null) {\n-            final EnumSet types = IntMappingType.getAttributeTypes(AttributableType.valueOf(entity.toString()));\n-\n-            for (Object type : types) {\n-                res.add(IntMappingType.valueOf(type.toString()));\n-            }\n+            res.addAll(IntMappingType.getAttributeTypes(AttributableType.valueOf(entity.toString())));\n         }\n \n         return res;"},{"sha":"6b0a713c63061b5e47b233d3ca157b62fdd5fe4f","filename":"console/src/main/resources/org/syncope/console/pages/NotificationModalPage.html","status":"modified","additions":93,"deletions":75,"changes":168,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8c80ab9ffe0b717a178fed74a181ae733e15a26/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8c80ab9ffe0b717a178fed74a181ae733e15a26/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.html?ref=e8c80ab9ffe0b717a178fed74a181ae733e15a26","patch":"@@ -13,90 +13,108 @@\n  under the License.\n -->\n <wicket:extend>\n-    <div style=\"margin:10px\">\n-        <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n-        <form wicket:id=\"form\">\n-            <div id=\"tabs\">\n-                <ul>\n-                    <li  class=\"tabs-selected\"><a href=\"#notification\"><span><wicket:message key=\"notification\"/></span></a></li>\n-                    <li><a href=\"#about\"><span><wicket:message key=\"about\"/></span></a></li>\n-                    <li><a href=\"#events\"><span><wicket:message key=\"events\"/></span></a></li>\n-                    <li><a href=\"#recipients\"><span><wicket:message key=\"recipients\"/></span></a></li>\n-                </ul>\n+  <div style=\"margin:10px\">\n+    <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n+    <form wicket:id=\"form\">\n+      <div id=\"tabs\">\n+        <ul>\n+          <li  class=\"tabs-selected\"><a href=\"#notification\"><span><wicket:message key=\"notification\"/></span></a></li>\n+          <li><a href=\"#about\"><span><wicket:message key=\"about\"/></span></a></li>\n+          <li><a href=\"#events\"><span><wicket:message key=\"events\"/></span></a></li>\n+          <li><a href=\"#recipients\"><span><wicket:message key=\"recipients\"/></span></a></li>\n+        </ul>\n \n-                <div id=\"notification\">\n-                    <div id=\"formtable\">\n-                        <div class=\"tablerow\">\n-                            <div class=\"tablecolumn_label medium_fixedsize\">\n-                                <label for=\"sender\"><wicket:message key=\"sender\"/></label>\n-                            </div>\n-                            <div class=\"tablecolumn_field medium_dynamicsize\">\n-                                <span wicket:id=\"sender\">[sender]</span>\n-                            </div>\n-                        </div>\n+        <div id=\"notification\">\n+          <div id=\"formtable\">\n+            <div class=\"tablerow\">\n+              <div class=\"tablecolumn_label medium_fixedsize\">\n+                <label for=\"sender\"><wicket:message key=\"sender\"/></label>\n+              </div>\n+              <div class=\"tablecolumn_field medium_dynamicsize\">\n+                <span wicket:id=\"sender\">[sender]</span>\n+              </div>\n+            </div>\n+\n+            <div class=\"tablerow\">\n+              <div class=\"tablecolumn_label medium_fixedsize\">\n+                <label for=\"subject\"><wicket:message key=\"subject\"/></label>\n+              </div>\n+              <div class=\"tablecolumn_field medium_dynamicsize\">\n+                <span wicket:id=\"subject\">[subject]</span>\n+              </div>\n+            </div>\n+\n+            <div class=\"tablerow\">\n+              <div class=\"tablecolumn_label medium_fixedsize\">\n+                <label for=\"recipientAttrType\"><wicket:message key=\"recipientAttrType\"/></label>\n+              </div>\n+              <div class=\"tablecolumn_field medium_dynamicsize\">\n+                <span wicket:id=\"recipientAttrType\">[recipientAttrType]</span>\n+              </div>\n+            </div>\n \n-                        <div class=\"tablerow\">\n-                            <div class=\"tablecolumn_label medium_fixedsize\">\n-                                <label for=\"subject\"><wicket:message key=\"subject\"/></label>\n-                            </div>\n-                            <div class=\"tablecolumn_field medium_dynamicsize\">\n-                                <span wicket:id=\"subject\">[subject]</span>\n-                            </div>\n-                        </div>\n+            <div class=\"tablerow\">\n+              <div class=\"tablecolumn_label medium_fixedsize\">\n+                <label for=\"recipientAttrName\"><wicket:message key=\"recipientAttrName\"/></label>\n+              </div>\n+              <div class=\"tablecolumn_field medium_dynamicsize\">\n+                <span wicket:id=\"recipientAttrName\">[recipientAttrName]</span>\n+              </div>\n+            </div>\n \n-                        <div class=\"tablerow\">\n-                            <div class=\"tablecolumn_label medium_fixedsize\">\n-                                <label for=\"template\"><wicket:message key=\"template\"/></label>\n-                            </div>\n-                            <div class=\"tablecolumn_field medium_dynamicsize\">\n-                                <span wicket:id=\"template\">[template]</span>\n-                            </div>\n-                        </div>\n+            <div class=\"tablerow\">\n+              <div class=\"tablecolumn_label medium_fixedsize\">\n+                <label for=\"template\"><wicket:message key=\"template\"/></label>\n+              </div>\n+              <div class=\"tablecolumn_field medium_dynamicsize\">\n+                <span wicket:id=\"template\">[template]</span>\n+              </div>\n+            </div>\n \n-                        <div class=\"tablerow\">\n-                            <div class=\"tablecolumn_label medium_fixedsize\">\n-                                <label for=\"traceLevel\"><wicket:message key=\"traceLevel\"/></label>\n-                            </div>\n-                            <div class=\"tablecolumn_field medium_dynamicsize\">\n-                                <span wicket:id=\"traceLevel\">[traceLevel]</span>\n-                            </div>\n-                        </div>\n-                    </div>\n+            <div class=\"tablerow\">\n+              <div class=\"tablecolumn_label medium_fixedsize\">\n+                <label for=\"traceLevel\"><wicket:message key=\"traceLevel\"/></label>\n+              </div>\n+              <div class=\"tablecolumn_field medium_dynamicsize\">\n+                <span wicket:id=\"traceLevel\">[traceLevel]</span>\n+              </div>\n+            </div>\n+          </div>\n \n-                    <script type=\"text/javascript\">\n-                        $(function() {\n-                            $('div#notification div#formtable div.tablerow:even').addClass(\"alt\");\n-                        });\n-                    </script>\n-                </div>\n+          <script type=\"text/javascript\">\n+            $(function() {\n+              $('div#notification div#formtable div.tablerow:even').addClass(\"alt\");\n+            });\n+          </script>\n+        </div>\n \n-                <div id=\"about\">\n-                    <span wicket:id=\"about\"/>\n-                </div>\n+        <div id=\"about\">\n+          <span wicket:id=\"about\"/>\n+        </div>\n \n-                <div id=\"events\">\n-                    <span wicket:id=\"events\"/>\n-                </div>\n+        <div id=\"events\">\n+          <span wicket:id=\"events\"/>\n+        </div>\n \n-                <div id=\"recipients\">\n-                    <span wicket:id=\"recipients\"/>\n+        <div id=\"recipients\">\n+          <span wicket:id=\"recipients\"/>\n \n-                    <div class=\"tablerow\">\n-                        <div class=\"tablecolumn_label medium_fixedsize\">\n-                            <label for=\"selfAsRecipient\"><wicket:message key=\"selfAsRecipient\"/></label>\n-                        </div>\n-                        <div class=\"tablecolumn_field medium_dynamicsize\">\n-                            <span wicket:id=\"selfAsRecipient\">[selfAsRecipient]</span>\n-                        </div>\n-                    </div>\n-                </div>\n+          <div class=\"tablerow\">\n+            <div class=\"tablecolumn_label medium_fixedsize\">\n+              <label for=\"selfAsRecipient\"><wicket:message key=\"selfAsRecipient\"/></label>\n             </div>\n-\n-            <div style=\"margin: 20px 10px 0\">\n-                <input type=\"submit\"\n-                       class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                       wicket:id=\"apply\"/>\n+            <div class=\"tablecolumn_field medium_dynamicsize\">\n+              <span wicket:id=\"selfAsRecipient\">[selfAsRecipient]</span>\n             </div>\n-        </form>\n-    </div>\n+          </div>\n+        </div>\n+      </div>\n+\n+      <div style=\"margin: 20px 10px 0\">\n+        <input type=\"submit\"\n+               class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+               wicket:id=\"apply\"/>\n+      </div>\n+    </form>\n+  </div>\n </wicket:extend>\n\\ No newline at end of file"},{"sha":"5078ae56ce0c1cde8f55000f33d404822920971d","filename":"console/src/main/resources/org/syncope/console/pages/NotificationModalPage.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8c80ab9ffe0b717a178fed74a181ae733e15a26/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8c80ab9ffe0b717a178fed74a181ae733e15a26/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.properties?ref=e8c80ab9ffe0b717a178fed74a181ae733e15a26","patch":"@@ -25,3 +25,5 @@ about=About\n events=Events\n recipients=Recipients\n selfAsRecipient=Include users matching About\n+recipientAttrType=Recipients e-mail attribute type\n+recipientAttrName=Recipients e-mail attribute schema"},{"sha":"99e3b312697d67839a4e1600ad9b69686cc3a853","filename":"console/src/main/resources/org/syncope/console/pages/NotificationModalPage_it.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8c80ab9ffe0b717a178fed74a181ae733e15a26/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8c80ab9ffe0b717a178fed74a181ae733e15a26/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage_it.properties?ref=e8c80ab9ffe0b717a178fed74a181ae733e15a26","patch":"@@ -25,3 +25,5 @@ about=Soggetti\n events=Eventi\n recipients=Destinatari\n selfAsRecipient=Including i soggetti\n+recipientAttrType=Tipo attributo e-mail destinatari\n+recipientAttrName=Shcema attributo e-mail destinatari"},{"sha":"2c2425b53f9972227db6ceb4ba50d0c407411e10","filename":"core/src/main/java/org/syncope/core/notification/NotificationManager.java","status":"modified","additions":65,"deletions":21,"changes":86,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8c80ab9ffe0b717a178fed74a181ae733e15a26/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8c80ab9ffe0b717a178fed74a181ae733e15a26/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java?ref=e8c80ab9ffe0b717a178fed74a181ae733e15a26","patch":"@@ -18,6 +18,7 @@\n  */\n package org.syncope.core.notification;\n \n+import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n@@ -36,20 +37,25 @@\n import org.syncope.core.persistence.beans.NotificationTask;\n import org.syncope.core.persistence.beans.TaskExec;\n import org.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.syncope.core.persistence.beans.user.UAttr;\n+import org.syncope.core.persistence.beans.user.UDerAttr;\n+import org.syncope.core.persistence.beans.user.UVirAttr;\n import org.syncope.core.persistence.dao.ConfDAO;\n import org.syncope.core.persistence.dao.NotificationDAO;\n import org.syncope.core.persistence.dao.TaskDAO;\n import org.syncope.core.persistence.dao.UserDAO;\n import org.syncope.core.persistence.dao.UserSearchDAO;\n import org.syncope.core.scheduling.NotificationJob;\n+import org.syncope.core.util.ConnObjectUtil;\n import org.syncope.core.workflow.WorkflowResult;\n+import org.syncope.types.IntMappingType;\n \n /**\n  * Create notification tasks that will be executed by NotificationJob.\n  *\n  * @see NotificationTask\n  */\n-@Transactional(rollbackFor = { Throwable.class })\n+@Transactional(rollbackFor = {Throwable.class})\n public class NotificationManager {\n \n     /**\n@@ -96,6 +102,8 @@ public class NotificationManager {\n     @Autowired\n     private NotificationJob notificationJob;\n \n+    @Autowired\n+    private ConnObjectUtil connObjectUtil;\n     /**\n      * Create a notification task.\n      *\n@@ -104,29 +112,38 @@ public class NotificationManager {\n      * @param emailSchema name of user schema containing e-mail address\n      * @return notification task, fully populated\n      */\n-    private NotificationTask getNotificationTask(final Notification notification, final SyncopeUser user,\n-            final String emailSchema) {\n+    private NotificationTask getNotificationTask(final Notification notification, final SyncopeUser user) {\n \n-        Set<String> recipients = new HashSet<String>();\n-        for (SyncopeUser recipient : searchDAO.search(notification.getRecipients())) {\n+        connObjectUtil.retrieveVirAttrValues(user);\n+        \n+        final IntMappingType recipientAttrType = notification.getRecipientAttrType();\n+        final String recipientAttrName = notification.getRecipientAttrName();\n+\n+        final List<SyncopeUser> recipients = new ArrayList<SyncopeUser>();\n+        recipients.addAll(searchDAO.search(notification.getRecipients()));\n \n-            if (recipient.getAttribute(emailSchema) == null) {\n-                LOG.error(\"{} cannot be notified no {} attribute present\", recipient, emailSchema);\n-            } else {\n-                recipients.add(recipient.getAttribute(emailSchema).getValuesAsStrings().get(0));\n-            }\n-        }\n         if (notification.isSelfAsRecipient()) {\n-            if (user.getAttribute(emailSchema) == null) {\n-                LOG.error(\"{} cannot be notified no {} attribute present\", user, emailSchema);\n+            recipients.add(user);\n+        }\n+\n+        Set<String> recipientEmails = new HashSet<String>();\n+\n+        for (SyncopeUser recipient : recipients) {\n+            \n+            connObjectUtil.retrieveVirAttrValues(recipient);\n+\n+            String email = getRecipientEmail(recipientAttrType, recipientAttrName, user);\n+\n+            if (email == null) {\n+                LOG.error(\"{} cannot be notified. No {} attribute present\", recipient, recipientAttrName);\n             } else {\n-                recipients.add(user.getAttribute(emailSchema).getValuesAsStrings().get(0));\n+                recipientEmails.add(email);\n             }\n         }\n \n         NotificationTask task = new NotificationTask();\n         task.setTraceLevel(notification.getTraceLevel());\n-        task.setRecipients(recipients);\n+        task.setRecipients(recipientEmails);\n         task.setSender(notification.getSender());\n         task.setSubject(notification.getSubject());\n \n@@ -136,8 +153,8 @@ private NotificationTask getNotificationTask(final Notification notification, fi\n             model.put(attr.getSchema().getName(), values.isEmpty()\n                     ? \"\"\n                     : (values.size() == 1\n-                            ? values.iterator().next()\n-                            : values));\n+                    ? values.iterator().next()\n+                    : values));\n         }\n \n         String htmlBody;\n@@ -165,23 +182,22 @@ private NotificationTask getNotificationTask(final Notification notification, fi\n      * @param wfResult workflow result\n      * @throws NotFoundException if user contained in the workflow result cannot be found\n      */\n-    public void createTasks(final WorkflowResult<Long> wfResult) throws NotFoundException {\n+    public void createTasks(final WorkflowResult<Long> wfResult)\n+            throws NotFoundException {\n \n         SyncopeUser user = userDAO.find(wfResult.getResult());\n         if (user == null) {\n             throw new NotFoundException(\"User \" + wfResult.getResult());\n         }\n \n-        final String emailSchema = confDAO.find(\"email.schema\", \"email\").getValue();\n-\n         for (Notification notification : notificationDAO.findAll()) {\n             if (searchDAO.matches(user, notification.getAbout())) {\n                 Set<String> events = new HashSet<String>(notification.getEvents());\n                 events.retainAll(wfResult.getPerformedTasks());\n \n                 if (!events.isEmpty()) {\n                     LOG.debug(\"Creating notification task for events {} about {}\", events, user);\n-                    taskDAO.save(getNotificationTask(notification, user, emailSchema));\n+                    taskDAO.save(getNotificationTask(notification, user));\n                 } else {\n                     LOG.debug(\"No events found about {}\", user);\n                 }\n@@ -192,4 +208,32 @@ public void createTasks(final WorkflowResult<Long> wfResult) throws NotFoundExce\n     public TaskExec execute(final NotificationTask task) {\n         return notificationJob.executeSingle(task);\n     }\n+\n+    private String getRecipientEmail(\n+            final IntMappingType recipientAttrType, final String recipientAttrName, final SyncopeUser user) {\n+\n+        final String email;\n+\n+        switch (recipientAttrType) {\n+            case Username:\n+                email = user.getUsername();\n+                break;\n+            case UserSchema:\n+                UAttr attr = user.getAttribute(recipientAttrName);\n+                email = attr == null || attr.getValuesAsStrings().isEmpty() ? null : attr.getValuesAsStrings().get(0);\n+                break;\n+            case UserVirtualSchema:\n+                UVirAttr virAttr = user.getVirtualAttribute(recipientAttrName);\n+                email = virAttr == null || virAttr.getValues().isEmpty() ? null : virAttr.getValues().get(0);\n+                break;\n+            case UserDerivedSchema:\n+                UDerAttr derAttr = user.getDerivedAttribute(recipientAttrName);\n+                email = derAttr == null ? null : derAttr.getValue(user.getAttributes());\n+                break;\n+            default:\n+                email = null;\n+        }\n+\n+        return email;\n+    }\n }"},{"sha":"a9e33f1dee0983c0d12c404726777d61cb166bf7","filename":"core/src/main/java/org/syncope/core/persistence/beans/Notification.java","status":"modified","additions":27,"deletions":3,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8c80ab9ffe0b717a178fed74a181ae733e15a26/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8c80ab9ffe0b717a178fed74a181ae733e15a26/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java?ref=e8c80ab9ffe0b717a178fed74a181ae733e15a26","patch":"@@ -37,6 +37,7 @@\n import org.syncope.client.search.NodeCond;\n import org.syncope.core.persistence.validation.entity.NotificationCheck;\n import org.syncope.client.util.XMLSerializer;\n+import org.syncope.types.IntMappingType;\n import org.syncope.types.TraceLevel;\n \n @NotificationCheck\n@@ -61,6 +62,13 @@ public class Notification extends AbstractBaseBean {\n     @Lob\n     private String xmlRecipients;\n \n+    @NotNull\n+    @Enumerated(EnumType.STRING)\n+    private IntMappingType recipientAttrType;\n+\n+    @NotNull\n+    private String recipientAttrName;\n+\n     @Column(nullable = false)\n     @Basic\n     @Min(0)\n@@ -76,8 +84,8 @@ public class Notification extends AbstractBaseBean {\n     @NotNull\n     private String template;\n \n-    @Enumerated(EnumType.STRING)\n     @NotNull\n+    @Enumerated(EnumType.STRING)\n     private TraceLevel traceLevel;\n \n     public Notification() {\n@@ -91,7 +99,7 @@ public Long getId() {\n     }\n \n     public NodeCond getAbout() {\n-        NodeCond result = XMLSerializer.<NodeCond> deserialize(xmlAbout);\n+        NodeCond result = XMLSerializer.<NodeCond>deserialize(xmlAbout);\n         if (result == null) {\n             result = new NodeCond();\n         }\n@@ -107,7 +115,7 @@ public void setAbout(NodeCond about) {\n     }\n \n     public NodeCond getRecipients() {\n-        NodeCond result = XMLSerializer.<NodeCond> deserialize(xmlRecipients);\n+        NodeCond result = XMLSerializer.<NodeCond>deserialize(xmlRecipients);\n         if (result == null) {\n             result = new NodeCond();\n         }\n@@ -122,6 +130,22 @@ public void setRecipients(NodeCond recipients) {\n         xmlRecipients = XMLSerializer.serialize(recipients);\n     }\n \n+    public String getRecipientAttrName() {\n+        return recipientAttrName;\n+    }\n+\n+    public void setRecipientAttrName(String recipientAttrName) {\n+        this.recipientAttrName = recipientAttrName;\n+    }\n+\n+    public IntMappingType getRecipientAttrType() {\n+        return recipientAttrType;\n+    }\n+\n+    public void setRecipientAttrType(IntMappingType recipientAttrType) {\n+        this.recipientAttrType = recipientAttrType;\n+    }\n+\n     public List<String> getEvents() {\n         return events;\n     }"},{"sha":"f1d5b5860cf3355a004ee577a80af233d20ff09b","filename":"core/src/main/java/org/syncope/core/rest/data/NotificationDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8c80ab9ffe0b717a178fed74a181ae733e15a26/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FNotificationDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8c80ab9ffe0b717a178fed74a181ae733e15a26/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FNotificationDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FNotificationDataBinder.java?ref=e8c80ab9ffe0b717a178fed74a181ae733e15a26","patch":"@@ -26,7 +26,7 @@\n @Component\n public class NotificationDataBinder {\n \n-    private static final String[] IGNORE_PROPERTIES = { \"id\", \"about\", \"recipients\" };\n+    private static final String[] IGNORE_PROPERTIES = {\"id\", \"about\", \"recipients\"};\n \n     public NotificationTO getNotificationTO(final Notification notification) {\n         NotificationTO result = new NotificationTO();"},{"sha":"2114a75374071c615867d1f8c13a136ad73ccf20","filename":"core/src/main/java/org/syncope/core/util/SchemaMappingUtil.java","status":"modified","additions":12,"deletions":11,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8c80ab9ffe0b717a178fed74a181ae733e15a26/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FSchemaMappingUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8c80ab9ffe0b717a178fed74a181ae733e15a26/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FSchemaMappingUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FSchemaMappingUtil.java?ref=e8c80ab9ffe0b717a178fed74a181ae733e15a26","patch":"@@ -148,8 +148,8 @@ public static Map.Entry<AbstractSchema, List<AbstractAttrValue>> getIntValues(fi\n             case UserSchema:\n             case RoleSchema:\n             case MembershipSchema:\n-                schema = schemaDAO.find(mapping.getIntAttrName(), SchemaMappingUtil.getIntMappingTypeClass(mapping\n-                        .getIntMappingType()));\n+                schema = schemaDAO.find(mapping.getIntAttrName(), SchemaMappingUtil.getIntMappingTypeClass(mapping.\n+                        getIntMappingType()));\n \n                 for (AbstractAttributable attributable : attributables) {\n                     final UAttr attr = attributable.getAttribute(mapping.getIntAttrName());\n@@ -161,8 +161,8 @@ public static Map.Entry<AbstractSchema, List<AbstractAttrValue>> getIntValues(fi\n                     }\n \n                     LOG.debug(\"Retrieved attribute {}\" + \"\\n* IntAttrName {}\" + \"\\n* IntMappingType {}\"\n-                            + \"\\n* Attribute values {}\", new Object[] { attr, mapping.getIntAttrName(),\n-                            mapping.getIntMappingType(), values });\n+                            + \"\\n* Attribute values {}\", new Object[]{attr, mapping.getIntAttrName(),\n+                                mapping.getIntMappingType(), values});\n                 }\n \n                 break;\n@@ -183,8 +183,8 @@ public static Map.Entry<AbstractSchema, List<AbstractAttrValue>> getIntValues(fi\n                     }\n \n                     LOG.debug(\"Retrieved virtual attribute {}\" + \"\\n* IntAttrName {}\" + \"\\n* IntMappingType {}\"\n-                            + \"\\n* Attribute values {}\", new Object[] { virAttr, mapping.getIntAttrName(),\n-                            mapping.getIntMappingType(), values });\n+                            + \"\\n* Attribute values {}\", new Object[]{virAttr, mapping.getIntAttrName(),\n+                                mapping.getIntMappingType(), values});\n                 }\n                 break;\n \n@@ -201,8 +201,8 @@ public static Map.Entry<AbstractSchema, List<AbstractAttrValue>> getIntValues(fi\n                     }\n \n                     LOG.debug(\"Retrieved attribute {}\" + \"\\n* IntAttrName {}\" + \"\\n* IntMappingType {}\"\n-                            + \"\\n* Attribute values {}\", new Object[] { derAttr, mapping.getIntAttrName(),\n-                            mapping.getIntMappingType(), values });\n+                            + \"\\n* Attribute values {}\", new Object[]{derAttr, mapping.getIntAttrName(),\n+                                mapping.getIntMappingType(), values});\n                 }\n                 break;\n \n@@ -240,12 +240,13 @@ public static Map.Entry<AbstractSchema, List<AbstractAttrValue>> getIntValues(fi\n         return new DefaultMapEntry(schema, values);\n     }\n \n-    public static List<String> getIntValueAsStrings(final AbstractAttributable attributable, final SchemaMapping mapping) {\n+    public static List<String> getIntValueAsStrings(\n+            final AbstractAttributable attributable, final SchemaMapping mapping) {\n         return getIntValueAsStrings(attributable, mapping, null);\n     }\n \n-    public static List<String> getIntValueAsStrings(final AbstractAttributable attributable,\n-            final SchemaMapping mapping, String clearPassword) {\n+    public static List<String> getIntValueAsStrings(\n+            final AbstractAttributable attributable, final SchemaMapping mapping, String clearPassword) {\n \n         List<String> value = new ArrayList<String>();\n "},{"sha":"74fe53d3bb6ca35fb6979ffe2e0ebc416b168ce9","filename":"core/src/main/resources/content.xml","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8c80ab9ffe0b717a178fed74a181ae733e15a26/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8c80ab9ffe0b717a178fed74a181ae733e15a26/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=e8c80ab9ffe0b717a178fed74a181ae733e15a26","patch":"@@ -23,7 +23,6 @@ under the License.\n   <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n   <SyncopeConf confKey=\"smtp.host\" confValue=\"smtp.ngi.it\"/>\n   <SyncopeConf confKey=\"smtp.port\" confValue=\"25\"/>\n-  <SyncopeConf confKey=\"email.schema\" confValue=\"email\"/>\n   <SyncopeConf confKey=\"connid.bundles.directory\" confValue=\"${bundles.directory}\"/>\n   <SyncopeConf confKey=\"password.cipher.algorithm\" confValue=\"MD5\"/>\n   <SyncopeConf confKey=\"createRequest.allowed\" confValue=\"false\"/>"},{"sha":"c48f2e43676662d56f57b0348152e4db9d77d04e","filename":"core/src/test/java/org/syncope/core/persistence/dao/NotificationTest.java","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8c80ab9ffe0b717a178fed74a181ae733e15a26/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FNotificationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8c80ab9ffe0b717a178fed74a181ae733e15a26/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FNotificationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FNotificationTest.java?ref=e8c80ab9ffe0b717a178fed74a181ae733e15a26","patch":"@@ -33,6 +33,7 @@\n import org.syncope.core.persistence.beans.Notification;\n import org.syncope.core.persistence.validation.entity.InvalidEntityException;\n import org.syncope.types.EntityViolationType;\n+import org.syncope.types.IntMappingType;\n \n @Transactional\n public class NotificationTest extends AbstractTest {\n@@ -70,8 +71,8 @@ public void save() {\n         AttributeCond fullnameLeafCond2 = new AttributeCond(AttributeCond.Type.LIKE);\n         fullnameLeafCond2.setSchema(\"fullname\");\n         fullnameLeafCond2.setExpression(\"%i%\");\n-        NodeCond about = NodeCond.getAndCond(NodeCond.getLeafCond(fullnameLeafCond1), NodeCond\n-                .getLeafCond(fullnameLeafCond2));\n+        NodeCond about = NodeCond.getAndCond(NodeCond.getLeafCond(fullnameLeafCond1), NodeCond.getLeafCond(\n+                fullnameLeafCond2));\n \n         notification.setAbout(about);\n \n@@ -81,6 +82,9 @@ public void save() {\n \n         notification.setRecipients(recipients);\n \n+        notification.setRecipientAttrName(\"email\");\n+        notification.setRecipientAttrType(IntMappingType.UserSchema);\n+\n         notification.setSender(\"syncope@syncope-idm.org\");\n         notification.setSubject(\"Test notification\");\n         notification.setTemplate(\"test\");\n@@ -104,6 +108,9 @@ public void saveWithException() {\n \n         notification.setRecipients(recipients);\n \n+        notification.setRecipientAttrName(\"email\");\n+        notification.setRecipientAttrType(IntMappingType.UserSchema);\n+\n         notification.setSender(\"syncope@syncope-idm.org\");\n         notification.setSubject(\"Test notification\");\n         notification.setTemplate(\"test\");"},{"sha":"7a31ae6555489c2ede36dba2498246b3e69308de","filename":"core/src/test/java/org/syncope/core/rest/NotificationTestITCase.java","status":"modified","additions":10,"deletions":6,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8c80ab9ffe0b717a178fed74a181ae733e15a26/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8c80ab9ffe0b717a178fed74a181ae733e15a26/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java?ref=e8c80ab9ffe0b717a178fed74a181ae733e15a26","patch":"@@ -29,6 +29,7 @@\n import org.syncope.client.to.NotificationTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n+import org.syncope.types.IntMappingType;\n import org.syncope.types.SyncopeClientExceptionType;\n import org.syncope.types.TraceLevel;\n \n@@ -65,8 +66,8 @@ public void create() {\n         AttributeCond fullnameLeafCond2 = new AttributeCond(AttributeCond.Type.LIKE);\n         fullnameLeafCond2.setSchema(\"fullname\");\n         fullnameLeafCond2.setExpression(\"%i%\");\n-        NodeCond about = NodeCond.getAndCond(NodeCond.getLeafCond(fullnameLeafCond1), NodeCond\n-                .getLeafCond(fullnameLeafCond2));\n+        NodeCond about = NodeCond.getAndCond(NodeCond.getLeafCond(fullnameLeafCond1), NodeCond.getLeafCond(\n+                fullnameLeafCond2));\n \n         notificationTO.setAbout(about);\n \n@@ -76,12 +77,16 @@ public void create() {\n \n         notificationTO.setRecipients(recipients);\n \n+        notificationTO.setRecipientAttrName(\"email\");\n+        notificationTO.setRecipientAttrType(IntMappingType.UserSchema);\n+\n         notificationTO.setSender(\"syncope@syncope-idm.org\");\n         notificationTO.setSubject(\"Test notification\");\n         notificationTO.setTemplate(\"test\");\n \n-        NotificationTO actual = restTemplate.postForObject(BASE_URL + \"notification/create.json\", notificationTO,\n-                NotificationTO.class);\n+        NotificationTO actual =\n+                restTemplate.postForObject(BASE_URL + \"notification/create.json\", notificationTO, NotificationTO.class);\n+        \n         assertNotNull(actual);\n         assertNotNull(actual.getId());\n         notificationTO.setId(actual.getId());\n@@ -122,8 +127,7 @@ public void delete() {\n \n         SyncopeClientException exception = null;\n         try {\n-            restTemplate\n-                    .getForObject(BASE_URL + \"notification/read/{notificationId}.json\", NotificationTO.class, \"101\");\n+            restTemplate.getForObject(BASE_URL + \"notification/read/{notificationId}.json\", NotificationTO.class, \"101\");\n         } catch (SyncopeClientCompositeErrorException e) {\n             exception = e.getException(SyncopeClientExceptionType.NotFound);\n         }"},{"sha":"9b6e8c933addad41ddce9ee2475571c6260e5087","filename":"core/src/test/resources/content.xml","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e8c80ab9ffe0b717a178fed74a181ae733e15a26/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e8c80ab9ffe0b717a178fed74a181ae733e15a26/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=e8c80ab9ffe0b717a178fed74a181ae733e15a26","patch":"@@ -23,7 +23,6 @@ under the License.\n   <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n   <SyncopeConf confKey=\"smtp.host\" confValue=\"not-existing\"/>\n   <SyncopeConf confKey=\"smtp.port\" confValue=\"25\"/>\n-  <SyncopeConf confKey=\"email.schema\" confValue=\"email\"/>\n   <SyncopeConf confKey=\"connid.bundles.directory\" confValue=\"${bundles.directory}\"/>\n   <SyncopeConf confKey=\"password.cipher.algorithm\" confValue=\"MD5\"/>\n   <SyncopeConf confKey=\"createRequest.allowed\" confValue=\"true\"/>\n@@ -593,10 +592,12 @@ under the License.\n     \n   <Notification id=\"100\" sender=\"test@syncope-idm.org\" subject=\"Test subject\" template=\"test\" selfAsRecipient=\"0\" traceLevel=\"ALL\"\n                 xmlAbout=\"%3Corg.syncope.client.search.NodeCond%3E%0A++%3Ctype%3EAND%3C%2Ftype%3E%0A++%3CleftNodeCond%3E%0A++++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++++%3CattributeCond%3E%0A++++++%3Ctype%3ELIKE%3C%2Ftype%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cexpression%3E%25o%25%3C%2Fexpression%3E%0A++++%3C%2FattributeCond%3E%0A++%3C%2FleftNodeCond%3E%0A++%3CrightNodeCond%3E%0A++++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++++%3CattributeCond%3E%0A++++++%3Ctype%3ELIKE%3C%2Ftype%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cexpression%3E%25i%25%3C%2Fexpression%3E%0A++++%3C%2FattributeCond%3E%0A++%3C%2FrightNodeCond%3E%0A%3C%2Forg.syncope.client.search.NodeCond%3E\"\n-                xmlRecipients=\"%3Corg.syncope.client.search.NodeCond%3E%0A++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++%3CmembershipCond%3E%0A++++%3CroleId%3E7%3C%2FroleId%3E%0A++%3C%2FmembershipCond%3E%0A%3C%2Forg.syncope.client.search.NodeCond%3E\"/>\n+                xmlRecipients=\"%3Corg.syncope.client.search.NodeCond%3E%0A++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++%3CmembershipCond%3E%0A++++%3CroleId%3E7%3C%2FroleId%3E%0A++%3C%2FmembershipCond%3E%0A%3C%2Forg.syncope.client.search.NodeCond%3E\"\n+                recipientAttrType=\"UserSchema\" recipientAttrName=\"email\"/>\n   <Notification id=\"101\" sender=\"test@syncope-idm.org\" subject=\"Test subject\" template=\"test\" selfAsRecipient=\"0\" traceLevel=\"ALL\"\n                 xmlAbout=\"%3Corg.syncope.client.search.NodeCond%3E%0A++%3Ctype%3EAND%3C%2Ftype%3E%0A++%3CleftNodeCond%3E%0A++++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++++%3CattributeCond%3E%0A++++++%3Ctype%3ELIKE%3C%2Ftype%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cexpression%3E%25o%25%3C%2Fexpression%3E%0A++++%3C%2FattributeCond%3E%0A++%3C%2FleftNodeCond%3E%0A++%3CrightNodeCond%3E%0A++++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++++%3CattributeCond%3E%0A++++++%3Ctype%3ELIKE%3C%2Ftype%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cexpression%3E%25i%25%3C%2Fexpression%3E%0A++++%3C%2FattributeCond%3E%0A++%3C%2FrightNodeCond%3E%0A%3C%2Forg.syncope.client.search.NodeCond%3E\"\n-                xmlRecipients=\"%3Corg.syncope.client.search.NodeCond%3E%0A++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++%3CmembershipCond%3E%0A++++%3CroleId%3E7%3C%2FroleId%3E%0A++%3C%2FmembershipCond%3E%0A%3C%2Forg.syncope.client.search.NodeCond%3E\"/>\n+                xmlRecipients=\"%3Corg.syncope.client.search.NodeCond%3E%0A++%3Ctype%3ELEAF%3C%2Ftype%3E%0A++%3CmembershipCond%3E%0A++++%3CroleId%3E7%3C%2FroleId%3E%0A++%3C%2FmembershipCond%3E%0A%3C%2Forg.syncope.client.search.NodeCond%3E\"\n+                recipientAttrType=\"UserSchema\" recipientAttrName=\"email\"/>\n   <Notification_events Notification_id=\"100\" events=\"unexisting1\"/>\n   <Notification_events Notification_id=\"100\" events=\"unexisting2\"/>\n   <Notification_events Notification_id=\"101\" events=\"unexisting1\"/>"}]}