{"sha":"21a175aea1a6103b0838a8c3195a17520cb32d7f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjIxYTE3NWFlYTFhNjEwM2IwODM4YThjMzE5NWExNzUyMGNiMzJkN2Y=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-11-08T15:15:25Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-11-08T15:15:25Z"},"message":"fix 'About' condition about SYNCOPE-422 Syncope-423\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1540069 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9f96394167ab5deeccdfac94bbd7dd92dd53eb9c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9f96394167ab5deeccdfac94bbd7dd92dd53eb9c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/21a175aea1a6103b0838a8c3195a17520cb32d7f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/21a175aea1a6103b0838a8c3195a17520cb32d7f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/21a175aea1a6103b0838a8c3195a17520cb32d7f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/21a175aea1a6103b0838a8c3195a17520cb32d7f/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"c96be1684f1884f698731eb1469faa8ea0c8c271","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c96be1684f1884f698731eb1469faa8ea0c8c271","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c96be1684f1884f698731eb1469faa8ea0c8c271"}],"stats":{"total":30,"additions":12,"deletions":18},"files":[{"sha":"c482bf7b9a0c24b5f98f1a709aee87f012a33077","filename":"core/src/main/java/org/apache/syncope/core/notification/NotificationManager.java","status":"modified","additions":12,"deletions":18,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/21a175aea1a6103b0838a8c3195a17520cb32d7f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/21a175aea1a6103b0838a8c3195a17520cb32d7f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java?ref=21a175aea1a6103b0838a8c3195a17520cb32d7f","patch":"@@ -50,8 +50,6 @@\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.TaskDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n-import org.apache.syncope.core.rest.controller.RoleController;\n-import org.apache.syncope.core.rest.controller.UserController;\n import org.apache.syncope.core.rest.data.UserDataBinder;\n import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.EntitlementUtil;\n@@ -68,7 +66,7 @@\n  *\n  * @see NotificationTask\n  */\n-@Transactional(rollbackFor = { Throwable.class })\n+@Transactional(rollbackFor = {Throwable.class})\n public class NotificationManager {\n \n     /**\n@@ -218,22 +216,18 @@ public void createTasks(\n         AttributableType attributableType = null;\n         AbstractAttributable attributable = null;\n \n-        if (UserController.class.getSimpleName().equals(category)) {\n+        if (before instanceof UserTO) {\n             attributableType = AttributableType.USER;\n-\n-            if (before instanceof UserTO) {\n-                attributable = userDAO.find(((UserTO) before).getId());\n-            } else if (output instanceof UserTO) {\n-                attributable = userDAO.find(((UserTO) output).getId());\n-            }\n-        } else if (RoleController.class.getSimpleName().equals(category)) {\n+            attributable = userDAO.find(((UserTO) before).getId());\n+        } else if (output instanceof UserTO) {\n+            attributableType = AttributableType.USER;\n+            attributable = userDAO.find(((UserTO) output).getId());\n+        } else if (before instanceof RoleTO) {\n             attributableType = AttributableType.ROLE;\n-\n-            if (before instanceof RoleTO) {\n-                attributable = roleDAO.find(((RoleTO) before).getId());\n-            } else if (output instanceof RoleTO) {\n-                attributable = roleDAO.find(((RoleTO) output).getId());\n-            }\n+            attributable = roleDAO.find(((RoleTO) before).getId());\n+        } else if (output instanceof RoleTO) {\n+            attributableType = AttributableType.ROLE;\n+            attributable = roleDAO.find(((RoleTO) output).getId());\n         }\n \n         LOG.debug(\"Search notification for [{}]{}\", attributableType, attributable);\n@@ -249,7 +243,7 @@ public void createTasks(\n                 LOG.debug(\"No events found about {}\", attributable);\n             } else if (attributableType == null || attributable == null || notification.getAbout() == null\n                     || searchDAO.matches(attributable, notification.getAbout(),\n-                            AttributableUtil.getInstance(attributableType))) {\n+                    AttributableUtil.getInstance(attributableType))) {\n \n                 LOG.debug(\"Creating notification task for events {} about {}\", events, attributable);\n "}]}