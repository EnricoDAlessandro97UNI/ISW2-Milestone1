{"sha":"02824d269ad4674873513d58b270e8cdb473c739","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjAyODI0ZDI2OWFkNDY3NDg3MzUxM2Q1OGIyNzBlOGNkYjQ3M2M3Mzk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-05-18T09:49:12Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-05-18T09:57:04Z"},"message":"[SYNCOPE-1560] Proper use of Wicket model, removing duplicate AjaxFormSubmitBehavior","tree":{"sha":"b8536cbd77995e48c1e88eb6951463b6eb9a7294","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b8536cbd77995e48c1e88eb6951463b6eb9a7294"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/02824d269ad4674873513d58b270e8cdb473c739","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/02824d269ad4674873513d58b270e8cdb473c739","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/02824d269ad4674873513d58b270e8cdb473c739","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/02824d269ad4674873513d58b270e8cdb473c739/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"029e50a76d1e0bf5ee1e0a31275d4f54ae6095ec","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/029e50a76d1e0bf5ee1e0a31275d4f54ae6095ec","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/029e50a76d1e0bf5ee1e0a31275d4f54ae6095ec"}],"stats":{"total":95,"additions":38,"deletions":57},"files":[{"sha":"cc6ae541105257cac11e8cdc3ea8467fc79f25e8","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/CSVPullWizardBuilder.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/02824d269ad4674873513d58b270e8cdb473c739/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FCSVPullWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/02824d269ad4674873513d58b270e8cdb473c739/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FCSVPullWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FCSVPullWizardBuilder.java?ref=02824d269ad4674873513d58b270e8cdb473c739","patch":"@@ -129,25 +129,24 @@ public class Details extends WizardStep {\n         private static final long serialVersionUID = -4736870165235853919L;\n \n         public Details(final CSVPullSpec spec) {\n+            ListModel<FileUpload> fileUploadModel = new ListModel<>(new ArrayList<>());\n             FileInputConfig csvFile = new FileInputConfig().\n                     showUpload(false).showRemove(false).showPreview(false).\n                     browseClass(\"btn btn-success\").browseIcon(\"<i class=\\\"fas fa-folder-open\\\"></i> &nbsp;\");\n             String language = SyncopeConsoleSession.get().getLocale().getLanguage();\n             if (!Locale.ENGLISH.getLanguage().equals(language)) {\n                 csvFile.withLocale(language);\n             }\n-            BootstrapFileInputField csvUpload =\n-                    new BootstrapFileInputField(\"csvUpload\", new ListModel<>(new ArrayList<>()), csvFile);\n-            csvUpload.setRequired(true);\n-            csvUpload.setOutputMarkupId(true);\n+            BootstrapFileInputField csvUpload = new BootstrapFileInputField(\"csvUpload\", fileUploadModel, csvFile);\n             csvUpload.add(new AjaxFormSubmitBehavior(Constants.ON_CHANGE) {\n \n                 private static final long serialVersionUID = 5538299138211283825L;\n \n                 @Override\n                 protected void onSubmit(final AjaxRequestTarget target) {\n-                    FileUpload uploadedFile = csvUpload.getFileUpload();\n-                    if (uploadedFile != null) {\n+                    if (!fileUploadModel.getObject().isEmpty()) {\n+                        FileUpload uploadedFile = fileUploadModel.getObject().get(0);\n+\n                         if (maxUploadSize != null && uploadedFile.getSize() > maxUploadSize.bytes()) {\n                             SyncopeConsoleSession.get().error(getString(\"tooLargeFile\").\n                                     replace(\"${maxUploadSizeB}\", String.valueOf(maxUploadSize.bytes())).\n@@ -159,7 +158,7 @@ protected void onSubmit(final AjaxRequestTarget target) {\n                     }\n                 }\n             });\n-            add(csvUpload);\n+            add(csvUpload.setRequired(true).setOutputMarkupId(true));\n \n             add(new CSVConfPanel(\"csvconf\", spec));\n         }"},{"sha":"58e2ef656acb9391872d0c12059b3f36a0ffb701","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":15,"deletions":16,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/02824d269ad4674873513d58b270e8cdb473c739/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/02824d269ad4674873513d58b270e8cdb473c739/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=02824d269ad4674873513d58b270e8cdb473c739","patch":"@@ -179,35 +179,34 @@ public void onClick(final AjaxRequestTarget target) {\n         downloadLink.setOutputMarkupId(true);\n         uploadForm.add(downloadLink);\n \n+        ListModel<FileUpload> fileUploadModel = new ListModel<>(new ArrayList<>());\n         FileInputConfig config = new FileInputConfig().\n                 showUpload(false).showRemove(false).showPreview(false).\n                 browseClass(\"btn btn-success\").browseIcon(\"<i class=\\\"fas fa-folder-open\\\"></i> &nbsp;\");\n-            String language = SyncopeConsoleSession.get().getLocale().getLanguage();\n-            if (!Locale.ENGLISH.getLanguage().equals(language)) {\n-                config.withLocale(language);\n-            }\n-\n-        fileUpload = new BootstrapFileInputField(\"fileUpload\", new ListModel<>(new ArrayList<>()), config);\n-        fileUpload.setOutputMarkupId(true);\n-\n+        String language = SyncopeConsoleSession.get().getLocale().getLanguage();\n+        if (!Locale.ENGLISH.getLanguage().equals(language)) {\n+            config.withLocale(language);\n+        }\n+        fileUpload = new BootstrapFileInputField(\"fileUpload\", fileUploadModel, config);\n         fileUpload.add(new AjaxFormSubmitBehavior(Constants.ON_CHANGE) {\n \n             private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target) {\n-                FileUpload uploadedFile = fileUpload.getFileUpload();\n-                if (uploadedFile != null) {\n-                    if (maxUploadSize != null && uploadedFile.getSize() > maxUploadSize.bytes()) {\n+                if (!fileUploadModel.getObject().isEmpty()) {\n+                    FileUpload uploaded = fileUploadModel.getObject().get(0);\n+\n+                    if (maxUploadSize != null && uploaded.getSize() > maxUploadSize.bytes()) {\n                         // SYNCOPE-1213 manage directly max upload file size (if set in properties file)\n                         SyncopeConsoleSession.get().error(getString(\"tooLargeFile\").\n                                 replace(\"${maxUploadSizeB}\", String.valueOf(maxUploadSize.bytes())).\n                                 replace(\"${maxUploadSizeMB}\", String.valueOf(maxUploadSize.bytes() / 1000000L)));\n                         ((BasePage) getPageReference().getPage()).getNotificationPanel().refresh(target);\n                     } else {\n-                        byte[] uploadedBytes = uploadedFile.getBytes();\n-                        String uploaded = Base64.getEncoder().encodeToString(uploadedBytes);\n-                        field.setModelObject(uploaded);\n+                        byte[] uploadedBytes = uploaded.getBytes();\n+                        String uploadedEncoded = Base64.getEncoder().encodeToString(uploadedBytes);\n+                        field.setModelObject(uploadedEncoded);\n                         target.add(field);\n \n                         if (previewer == null) {\n@@ -219,8 +218,8 @@ protected void onSubmit(final AjaxRequestTarget target) {\n                             uploadForm.addOrReplace(fileUpload);\n                         }\n \n-                        setVisibleFileButtons(StringUtils.isNotBlank(uploaded));\n-                        downloadLink.setEnabled(StringUtils.isNotBlank(uploaded));\n+                        setVisibleFileButtons(StringUtils.isNotBlank(uploadedEncoded));\n+                        downloadLink.setEnabled(StringUtils.isNotBlank(uploadedEncoded));\n \n                         target.add(uploadForm);\n                     }"},{"sha":"1a752cb5b532e774bfc13947f33cbf6c2311fe98","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":11,"deletions":9,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/02824d269ad4674873513d58b270e8cdb473c739/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/02824d269ad4674873513d58b270e8cdb473c739/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=02824d269ad4674873513d58b270e8cdb473c739","patch":"@@ -177,6 +177,7 @@ public void onClick(final AjaxRequestTarget target) {\n         downloadLink.setOutputMarkupId(true);\n         uploadForm.add(downloadLink);\n \n+        ListModel<FileUpload> fileUploadModel = new ListModel<>(new ArrayList<>());\n         FileInputConfig config = new FileInputConfig().\n                 showUpload(false).showRemove(false).showPreview(false).\n                 browseClass(\"btn btn-success\").browseIcon(\"<i class=\\\"fas fa-folder-open\\\"></i> &nbsp;\");\n@@ -185,7 +186,7 @@ public void onClick(final AjaxRequestTarget target) {\n             config.withLocale(language);\n         }\n \n-        fileUpload = new BootstrapFileInputField(\"fileUpload\", new ListModel<>(new ArrayList<>()), config);\n+        fileUpload = new BootstrapFileInputField(\"fileUpload\", fileUploadModel, config);\n         fileUpload.setOutputMarkupId(true);\n \n         fileUpload.add(new AjaxFormSubmitBehavior(Constants.ON_CHANGE) {\n@@ -194,18 +195,19 @@ public void onClick(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target) {\n-                FileUpload uploadedFile = fileUpload.getFileUpload();\n-                if (uploadedFile != null) {\n-                    if (maxUploadSize != null && uploadedFile.getSize() > maxUploadSize.bytes()) {\n+                if (!fileUploadModel.getObject().isEmpty()) {\n+                    FileUpload uploaded = fileUploadModel.getObject().get(0);\n+\n+                    if (maxUploadSize != null && uploaded.getSize() > maxUploadSize.bytes()) {\n                         // SYNCOPE-1213 manage directly max upload file size (if set in properties file)\n                         SyncopeEnduserSession.get().error(getString(\"tooLargeFile\").\n                                 replace(\"${maxUploadSizeB}\", String.valueOf(maxUploadSize.bytes())).\n                                 replace(\"${maxUploadSizeMB}\", String.valueOf(maxUploadSize.bytes() / 1000000L)));\n                         ((BaseWebPage) getPageReference().getPage()).getNotificationPanel().refresh(target);\n                     } else {\n-                        byte[] uploadedBytes = uploadedFile.getBytes();\n-                        String uploaded = Base64.getEncoder().encodeToString(uploadedBytes);\n-                        field.setModelObject(uploaded);\n+                        byte[] uploadedBytes = uploaded.getBytes();\n+                        String uploadedEncoded = Base64.getEncoder().encodeToString(uploadedBytes);\n+                        field.setModelObject(uploadedEncoded);\n                         target.add(field);\n \n                         if (previewer == null) {\n@@ -217,8 +219,8 @@ protected void onSubmit(final AjaxRequestTarget target) {\n                             uploadForm.addOrReplace(fileUpload);\n                         }\n \n-                        setVisibleFileButtons(StringUtils.isNotBlank(uploaded));\n-                        downloadLink.setEnabled(StringUtils.isNotBlank(uploaded));\n+                        setVisibleFileButtons(StringUtils.isNotBlank(uploadedEncoded));\n+                        downloadLink.setEnabled(StringUtils.isNotBlank(uploadedEncoded));\n \n                         target.add(uploadForm);\n                     }"},{"sha":"37bee93eb269490706e0ee9f78592bec4f9e5c2a","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/panels/ImportMetadata.java","status":"modified","additions":6,"deletions":25,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/02824d269ad4674873513d58b270e8cdb473c739/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImportMetadata.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/02824d269ad4674873513d58b270e8cdb473c739/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImportMetadata.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImportMetadata.java?ref=02824d269ad4674873513d58b270e8cdb473c739","patch":"@@ -20,23 +20,19 @@\n \n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.fileinput.BootstrapFileInputField;\n import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.fileinput.FileInputConfig;\n-import java.io.ByteArrayInputStream;\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Locale;\n-import org.apache.commons.lang3.ArrayUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.rest.SAML2IdPsRestClient;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.form.AjaxFormSubmitBehavior;\n import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.form.upload.FileUpload;\n-import org.apache.wicket.model.Model;\n import org.apache.wicket.model.util.ListModel;\n \n public class ImportMetadata extends TogglePanel<Serializable> {\n@@ -49,42 +45,27 @@ public ImportMetadata(final String id, final WebMarkupContainer container, final\n         Form<?> form = new Form<>(\"metadataForm\");\n         addInnerObject(form);\n \n-        Model<byte[]> metadata = new Model<>();\n-\n+        ListModel<FileUpload> fileUploadModel = new ListModel<>(new ArrayList<>());\n         FileInputConfig config = new FileInputConfig().\n                 showUpload(false).showRemove(false).showPreview(false).\n                 browseClass(\"btn btn-success\").browseIcon(\"<i class=\\\"fas fa-folder-open\\\"></i> &nbsp;\");\n         String language = SyncopeConsoleSession.get().getLocale().getLanguage();\n         if (!Locale.ENGLISH.getLanguage().equals(language)) {\n             config.withLocale(language);\n         }\n-        BootstrapFileInputField fileUpload =\n-                new BootstrapFileInputField(\"fileUpload\", new ListModel<>(new ArrayList<>()), config);\n-        fileUpload.setOutputMarkupId(true);\n-        fileUpload.add(new AjaxFormSubmitBehavior(Constants.ON_CHANGE) {\n-\n-            private static final long serialVersionUID = 5538299138211283825L;\n-\n-            @Override\n-            protected void onSubmit(final AjaxRequestTarget target) {\n-                FileUpload uploadedFile = fileUpload.getFileUpload();\n-                if (uploadedFile != null) {\n-                    metadata.setObject(uploadedFile.getBytes());\n-                }\n-            }\n-        });\n-        form.add(fileUpload);\n+        BootstrapFileInputField fileUpload = new BootstrapFileInputField(\"fileUpload\", fileUploadModel, config);\n+        form.add(fileUpload.setOutputMarkupId(true));\n \n         form.add(new AjaxSubmitLink(\"doUpload\", form) {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target) {\n-                if (ArrayUtils.isNotEmpty(metadata.getObject())) {\n+                if (!fileUploadModel.getObject().isEmpty()) {\n+                    FileUpload uploaded = fileUploadModel.getObject().get(0);\n                     try {\n-                        SAML2IdPsRestClient.importIdPs(new ByteArrayInputStream(metadata.getObject()));\n-                        metadata.setObject(null);\n+                        SAML2IdPsRestClient.importIdPs(uploaded.getInputStream());\n \n                         SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n                         toggle(target, false);"}]}