{"sha":"a167a8390c504a310155bf695470454dcf629cd9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmExNjdhODM5MGM1MDRhMzEwMTU1YmY2OTU0NzA0NTRkY2Y2MjljZDk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-06-24T13:25:18Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-06-24T13:25:18Z"},"message":"[SYNCOPE-290] Implementation completed\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1605077 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8dce015ca34e2bcdc3aa1ffde4367e1b7a2d38c2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8dce015ca34e2bcdc3aa1ffde4367e1b7a2d38c2"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a167a8390c504a310155bf695470454dcf629cd9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a167a8390c504a310155bf695470454dcf629cd9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a167a8390c504a310155bf695470454dcf629cd9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a167a8390c504a310155bf695470454dcf629cd9/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"0e47448acfc5d1504a603242d1a9181cec73d780","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0e47448acfc5d1504a603242d1a9181cec73d780","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0e47448acfc5d1504a603242d1a9181cec73d780"}],"stats":{"total":3174,"additions":1588,"deletions":1586},"files":[{"sha":"3b2e02a205255aa1fcd44ac5c66546e77b0a947a","filename":"common/src/main/java/org/apache/syncope/common/services/ConfigurationService.java","status":"modified","additions":15,"deletions":32,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConfigurationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConfigurationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FConfigurationService.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -22,17 +22,14 @@\n import javax.ws.rs.Consumes;\r\n import javax.ws.rs.DELETE;\r\n import javax.ws.rs.GET;\r\n-import javax.ws.rs.POST;\r\n import javax.ws.rs.PUT;\r\n import javax.ws.rs.Path;\r\n import javax.ws.rs.PathParam;\r\n import javax.ws.rs.Produces;\r\n import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n-import org.apache.cxf.jaxrs.model.wadl.Description;\r\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\r\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\r\n-import org.apache.syncope.common.to.ConfigurationTO;\r\n+import org.apache.syncope.common.to.AttributeTO;\r\n+import org.apache.syncope.common.to.ConfTO;\r\n import org.apache.syncope.common.wrap.MailTemplate;\r\n import org.apache.syncope.common.wrap.Validator;\r\n \r\n@@ -72,52 +69,38 @@ public interface ConfigurationService extends JAXRSService {\n     List<Validator> getValidators();\r\n \r\n     /**\r\n-     * Returns configuration parameter with matching key.\r\n+     * Returns all configuration parameters.\r\n      *\r\n-     * @param key identifier of configuration to be read\r\n-     * @return configuration parameter with matching key\r\n+     * @return all configuration parameters\r\n      */\r\n     @GET\r\n-    @Path(\"{key}\")\r\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-    ConfigurationTO read(@PathParam(\"key\") String key);\r\n+    ConfTO list();\r\n \r\n     /**\r\n-     * Returns list of all configuration parameters.\r\n+     * Returns configuration parameter with matching key.\r\n      *\r\n-     * @return list of all configuration parameters\r\n+     * @param key identifier of configuration to be read\r\n+     * @return configuration parameter with matching key\r\n      */\r\n     @GET\r\n+    @Path(\"{key}\")\r\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-    List<ConfigurationTO> list();\r\n-\r\n-    /**\r\n-     * Creates a new configuration parameter.\r\n-     *\r\n-     * @param configurationTO Configuration to be stored.\r\n-     * @return <tt>Response</tt> object featuring <tt>Location</tt> header of created configuration\r\n-     */\r\n-    @Descriptions({\r\n-        @Description(target = DocTarget.RESPONSE, value = \"Featuring <tt>Location</tt> header of created configuration\")\r\n-    })\r\n-    @POST\r\n-    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-    Response create(ConfigurationTO configurationTO);\r\n+    AttributeTO read(@PathParam(\"key\") String key);\r\n \r\n     /**\r\n-     * Updates configuration parameter for the given key.\r\n+     * Creates / updates the configuration parameter with the given key.\r\n      *\r\n-     * @param key configuration parameter key\r\n-     * @param configurationTO new configuration\r\n+     * @param key parameter key\r\n+     * @param value parameter value\r\n      */\r\n     @PUT\r\n     @Path(\"{key}\")\r\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\r\n-    void update(@PathParam(\"key\") String key, ConfigurationTO configurationTO);\r\n+    void set(@PathParam(\"key\") String key, AttributeTO value);\r\n \r\n     /**\r\n-     * Deletes configuration with matching key.\r\n+     * Deletes the configuration parameter with matching key.\r\n      *\r\n      * @param key configuration parameter key\r\n      */\r"},{"sha":"d4174a88a114584c0d67b782949d3353102a0a69","filename":"common/src/main/java/org/apache/syncope/common/to/ConfTO.java","status":"renamed","additions":30,"deletions":34,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConfTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConfTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConfTO.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -1,34 +1,30 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.dao;\n-\n-public class MissingConfKeyException extends RuntimeException {\n-\tprivate static final long serialVersionUID = -3257107672657462752L;\n-\t\n-\tprivate String confKey;\n-\n-    public MissingConfKeyException(final String confKey) {\n-        super();\n-        this.confKey = confKey;\n-    }\n-\n-    public String getConfKey() {\n-        return confKey;\n-    }\n-}\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *   http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.syncope.common.to;\r\n+\r\n+import javax.xml.bind.annotation.XmlRootElement;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n+@XmlRootElement(name = \"conf\")\r\n+@XmlType\r\n+public class ConfTO extends AbstractAttributableTO {\r\n+\r\n+    private static final long serialVersionUID = -3825039700228595590L;\r\n+\r\n+}\r","previous_filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/MissingConfKeyException.java"},{"sha":"1b6485f3300c177111626e6a606aefe690b802da","filename":"common/src/main/java/org/apache/syncope/common/to/ConfigurationTO.java","status":"removed","additions":0,"deletions":51,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e47448acfc5d1504a603242d1a9181cec73d780/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConfigurationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e47448acfc5d1504a603242d1a9181cec73d780/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConfigurationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FConfigurationTO.java?ref=0e47448acfc5d1504a603242d1a9181cec73d780","patch":"@@ -1,51 +0,0 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.\r\n- */\r\n-package org.apache.syncope.common.to;\r\n-\r\n-import javax.xml.bind.annotation.XmlRootElement;\r\n-import javax.xml.bind.annotation.XmlType;\r\n-\r\n-import org.apache.syncope.common.AbstractBaseBean;\r\n-\r\n-@XmlRootElement(name = \"configuration\")\r\n-@XmlType\r\n-public class ConfigurationTO extends AbstractBaseBean {\r\n-\r\n-    private static final long serialVersionUID = -3825039700228595590L;\r\n-\r\n-    private String key;\r\n-\r\n-    private String value;\r\n-\r\n-    public String getKey() {\r\n-        return key;\r\n-    }\r\n-\r\n-    public void setKey(final String key) {\r\n-        this.key = key;\r\n-    }\r\n-\r\n-    public String getValue() {\r\n-        return value;\r\n-    }\r\n-\r\n-    public void setValue(final String value) {\r\n-        this.value = value;\r\n-    }\r\n-}\r"},{"sha":"42e5b12de22e9af630b693ff4b03ba12672174df","filename":"common/src/main/java/org/apache/syncope/common/types/AttributableType.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAttributableType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAttributableType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAttributableType.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -25,6 +25,7 @@ public enum AttributableType {\n \r\n     USER,\r\n     ROLE,\r\n-    MEMBERSHIP\r\n+    MEMBERSHIP,\r\n+    CONFIGURATION;\r\n \r\n }\r"},{"sha":"a0bfe1512e8e78b99df6a0ece6d4a743ec59839e","filename":"common/src/main/java/org/apache/syncope/common/types/ClientExceptionType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FClientExceptionType.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -47,8 +47,8 @@ public enum ClientExceptionType {\n     InvalidMSchema(Response.Status.BAD_REQUEST),\r\n     InvalidMDerSchema(Response.Status.BAD_REQUEST),\r\n     InvalidMVirSchema(Response.Status.BAD_REQUEST),\r\n+    InvalidCSchema(Response.Status.BAD_REQUEST),\r\n     InvalidSchemaMapping(Response.Status.BAD_REQUEST),\r\n-    InvalidSyncopeConf(Response.Status.BAD_REQUEST),\r\n     InvalidSyncopeUser(Response.Status.BAD_REQUEST),\r\n     InvalidExternalResource(Response.Status.BAD_REQUEST),\r\n     InvalidNotification(Response.Status.BAD_REQUEST),\r"},{"sha":"5029b06d27f5aeb06bc9390526c55d9d4fc540f8","filename":"common/src/test/java/org/apache/syncope/common/JSONTest.java","status":"modified","additions":0,"deletions":29,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/common%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FJSONTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/common%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FJSONTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2FJSONTest.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -19,46 +19,17 @@\n package org.apache.syncope.common;\n \n import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertNotNull;\n \n import com.fasterxml.jackson.databind.ObjectMapper;\n import java.io.IOException;\n import java.io.StringWriter;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n import org.apache.syncope.common.report.UserReportletConf;\n-import org.apache.syncope.common.to.ConfigurationTO;\n import org.apache.syncope.common.to.ReportTO;\n import org.apache.syncope.common.to.WorkflowFormPropertyTO;\n import org.junit.Test;\n \n public class JSONTest {\n \n-    @Test\n-    public void lists() throws IOException {\n-        List<ConfigurationTO> confList = new ArrayList<ConfigurationTO>();\n-        ConfigurationTO configuration = new ConfigurationTO();\n-        configuration.setKey(\"key1\");\n-        configuration.setValue(\"value1\");\n-        confList.add(configuration);\n-        configuration = new ConfigurationTO();\n-        configuration.setKey(\"key2\");\n-        configuration.setValue(\"value2\");\n-        confList.add(configuration);\n-\n-        ObjectMapper mapper = new ObjectMapper();\n-\n-        StringWriter writer = new StringWriter();\n-        mapper.writeValue(writer, confList);\n-\n-        List<ConfigurationTO> unserializedSchemas = Arrays.asList(mapper.readValue(writer.toString(),\n-                ConfigurationTO[].class));\n-        for (ConfigurationTO unserializedSchema : unserializedSchemas) {\n-            assertNotNull(unserializedSchema);\n-        }\n-    }\n-\n     @Test\n     public void map() throws IOException {\n         WorkflowFormPropertyTO prop = new WorkflowFormPropertyTO();"},{"sha":"c70f2f2c74b160b78e52099a14d3fe260e8878d6","filename":"console/src/main/java/org/apache/syncope/console/commons/Constants.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -46,6 +46,8 @@ public final class Constants {\n \n     public static final String PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW = \"users.virtual.attributes.view\";\n \n+    public static final String PREF_CONF_SCHEMA_PAGINATOR_ROWS = \"conf.schema.paginator.rows\";\n+\n     public static final String PREF_USER_SCHEMA_PAGINATOR_ROWS = \"user.schema.paginator.rows\";\n \n     public static final String PREF_USER_DER_SCHEMA_PAGINATOR_ROWS = \"user.derived.schema.paginator.rows\";\n@@ -70,8 +72,6 @@ public final class Constants {\n \n     public static final String PREF_CONNECTORS_PAGINATOR_ROWS = \"connectors.paginator.rows\";\n \n-    public static final String PREF_CONFIGURATION_PAGINATOR_ROWS = \"configuration.paginator.rows\";\n-\n     public static final String PREF_NOTIFICATION_PAGINATOR_ROWS = \"notification.paginator.rows\";\n \n     public static final String PREF_PROPAGATION_TASKS_PAGINATOR_ROWS = \"proagationtasks.paginator.rows\";"},{"sha":"56b24a10546572ac1dfe29b53f6f331ca81c8e46","filename":"console/src/main/java/org/apache/syncope/console/pages/Configuration.java","status":"modified","additions":42,"deletions":190,"changes":232,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -25,20 +25,23 @@\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.core.LoggerContext;\n import org.apache.logging.log4j.core.config.LoggerConfig;\n import org.apache.syncope.common.SyncopeConstants;\n-import org.apache.syncope.common.to.ConfigurationTO;\n import org.apache.syncope.common.to.LoggerTO;\n import org.apache.syncope.common.to.NotificationTO;\n import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.common.types.LoggerLevel;\n import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.to.AttributeTO;\n+import org.apache.syncope.common.to.ConfTO;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.HttpResourceStream;\n import org.apache.syncope.console.commons.PreferenceManager;\n import org.apache.syncope.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.console.pages.panels.AttributesPanel;\n import org.apache.syncope.console.pages.panels.PoliciesPanel;\n import org.apache.syncope.console.rest.ConfigurationRestClient;\n import org.apache.syncope.console.rest.LoggerRestClient;\n@@ -53,6 +56,7 @@\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n@@ -72,6 +76,7 @@\n import org.apache.wicket.markup.html.list.PropertyListView;\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.AbstractReadOnlyModel;\n+import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n@@ -106,14 +111,6 @@ public class Configuration extends BasePage {\n     @SpringBean\n     private PreferenceManager prefMan;\n \n-    private final ModalWindow createConfigWin;\n-\n-    private final ModalWindow editConfigWin;\n-\n-    private static final int CONFIG_WIN_HEIGHT = 200;\n-\n-    private static final int CONFIG_WIN_WIDTH = 350;\n-\n     private final ModalWindow createNotificationWin;\n \n     private final ModalWindow editNotificationWin;\n@@ -122,19 +119,13 @@ public class Configuration extends BasePage {\n \n     private static final int NOTIFICATION_WIN_WIDTH = 1100;\n \n-    private WebMarkupContainer confContainer;\n-\n     private WebMarkupContainer notificationContainer;\n \n-    private int confPaginatorRows;\n-\n     private int notificationPaginatorRows;\n \n     public Configuration() {\n         super();\n \n-        add(createConfigWin = new ModalWindow(\"createConfigurationWin\"));\n-        add(editConfigWin = new ModalWindow(\"editConfigurationWin\"));\n         setupSyncopeConf();\n \n         add(new PoliciesPanel(\"passwordPoliciesPanel\", getPageReference(), PolicyType.PASSWORD));\n@@ -160,7 +151,7 @@ public Configuration() {\n         }\n \n         BookmarkablePageLink<Void> activitiModeler =\n-                 new BookmarkablePageLink<Void>(\"activitiModeler\", ActivitiModelerPopupPage.class);\n+                new BookmarkablePageLink<Void>(\"activitiModeler\", ActivitiModelerPopupPage.class);\n         activitiModeler.setPopupSettings(new VeilPopupSettings().setHeight(600).setWidth(800));\n         MetaDataRoleAuthorizationStrategy.authorize(activitiModeler, ENABLE,\n                 xmlRolesReader.getAllAllowedRoles(\"Configuration\", \"workflowDefRead\"));\n@@ -178,7 +169,7 @@ public Configuration() {\n         activitiModeler.setEnabled(activitiModelerEnabled);\n \n         BookmarkablePageLink<Void> xmlEditor =\n-                 new BookmarkablePageLink<Void>(\"xmlEditor\", XMLEditorPopupPage.class);\n+                new BookmarkablePageLink<Void>(\"xmlEditor\", XMLEditorPopupPage.class);\n         xmlEditor.setPopupSettings(new VeilPopupSettings().setHeight(480).setWidth(800));\n         MetaDataRoleAuthorizationStrategy.authorize(xmlEditor, ENABLE,\n                 xmlRolesReader.getAllAllowedRoles(\"Configuration\", \"workflowDefRead\"));\n@@ -212,7 +203,7 @@ protected byte[] getImageData(final IResource.Attributes attributes) {\n \n         // Logger stuff\n         PropertyListView<LoggerTO> coreLoggerList =\n-                 new LoggerPropertyList(null, \"corelogger\", loggerRestClient.listLogs());\n+                new LoggerPropertyList(null, \"corelogger\", loggerRestClient.listLogs());\n         WebMarkupContainer coreLoggerContainer = new WebMarkupContainer(\"coreLoggerContainer\");\n         coreLoggerContainer.add(coreLoggerList);\n         coreLoggerContainer.setOutputMarkupId(true);\n@@ -223,7 +214,7 @@ protected byte[] getImageData(final IResource.Attributes attributes) {\n \n         ConsoleLoggerController consoleLoggerController = new ConsoleLoggerController();\n         PropertyListView<LoggerTO> consoleLoggerList =\n-                 new LoggerPropertyList(consoleLoggerController, \"consolelogger\", consoleLoggerController.getLoggers());\n+                new LoggerPropertyList(consoleLoggerController, \"consolelogger\", consoleLoggerController.getLoggers());\n         WebMarkupContainer consoleLoggerContainer = new WebMarkupContainer(\"consoleLoggerContainer\");\n         consoleLoggerContainer.add(consoleLoggerList);\n         consoleLoggerContainer.setOutputMarkupId(true);\n@@ -233,125 +224,52 @@ protected byte[] getImageData(final IResource.Attributes attributes) {\n         add(consoleLoggerContainer);\n     }\n \n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     private void setupSyncopeConf() {\n-        confPaginatorRows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_CONFIGURATION_PAGINATOR_ROWS);\n-\n-        final List<IColumn<ConfigurationTO, String>> confColumns = new ArrayList<IColumn<ConfigurationTO, String>>();\n-        confColumns.add(new PropertyColumn<ConfigurationTO, String>(new ResourceModel(\"key\"), \"key\", \"key\"));\n-        confColumns.add(new PropertyColumn<ConfigurationTO, String>(new ResourceModel(\"value\"), \"value\", \"value\"));\n-\n-        confColumns.add(new AbstractColumn<ConfigurationTO, String>(new ResourceModel(\"actions\", \"\")) {\n-\n-            private static final long serialVersionUID = 2054811145491901166L;\n-\n-            @Override\n-            public String getCssClass() {\n-                return \"action\";\n-            }\n-\n-            @Override\n-            public void populateItem(final Item<ICellPopulator<ConfigurationTO>> cellItem, final String componentId,\n-                    final IModel<ConfigurationTO> model) {\n-\n-                final ConfigurationTO configurationTO = model.getObject();\n-\n-                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model, getPageReference());\n-\n-                panel.add(new ActionLink() {\n-\n-                    private static final long serialVersionUID = -3722207913631435501L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-\n-                        editConfigWin.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                            private static final long serialVersionUID = -7834632442532690940L;\n-\n-                            @Override\n-                            public Page createPage() {\n-                                return new ConfigurationModalPage(Configuration.this.getPageReference(), editConfigWin,\n-                                        configurationTO, false);\n-                            }\n-                        });\n-\n-                        editConfigWin.show(target);\n-                    }\n-                }, ActionLink.ActionType.EDIT, \"Configuration\");\n-\n-                panel.add(new ActionLink() {\n-\n-                    private static final long serialVersionUID = -3722207913631435501L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        try {\n-                            confRestClient.deleteConfiguration(configurationTO.getKey());\n-                        } catch (SyncopeClientException e) {\n-                            LOG.error(\"While deleting a conf key\", e);\n-                            error(e.getMessage());\n-                            return;\n-                        }\n-\n-                        info(getString(Constants.OPERATION_SUCCEEDED));\n-                        feedbackPanel.refresh(target);\n-\n-                        target.add(confContainer);\n-                    }\n-                }, ActionLink.ActionType.DELETE, \"Configuration\");\n-\n-                cellItem.add(panel);\n-            }\n-        });\n-\n-        final AjaxFallbackDefaultDataTable<ConfigurationTO, String> confTable =\n-                 new AjaxFallbackDefaultDataTable<ConfigurationTO, String>(\n-                        \"syncopeconf\", confColumns, new SyncopeConfProvider(), confPaginatorRows);\n-\n-        confContainer = new WebMarkupContainer(\"confContainer\");\n-        confContainer.add(confTable);\n-        confContainer.setOutputMarkupId(true);\n+        WebMarkupContainer parameters = new WebMarkupContainer(\"parameters\");\n+        add(parameters);\n+        MetaDataRoleAuthorizationStrategy.authorize(parameters, ENABLE, xmlRolesReader.getAllAllowedRoles(\n+                \"Configuration\", \"list\"));\n \n-        add(confContainer);\n+        final ConfTO conf = confRestClient.list();\n \n-        createConfigWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        createConfigWin.setInitialHeight(CONFIG_WIN_HEIGHT);\n-        createConfigWin.setInitialWidth(CONFIG_WIN_WIDTH);\n-        createConfigWin.setCookieName(\"create-configuration-modal\");\n+        final Form<?> form = new Form<Void>(\"confForm\");\n+        form.setModel(new CompoundPropertyModel(conf));\n+        parameters.add(form);\n \n-        editConfigWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        editConfigWin.setInitialHeight(CONFIG_WIN_HEIGHT);\n-        editConfigWin.setInitialWidth(CONFIG_WIN_WIDTH);\n-        editConfigWin.setCookieName(\"edit-configuration-modal\");\n+        form.add(new AttributesPanel(\"parameters\", conf, form, false));\n \n-        setWindowClosedCallback(createConfigWin, confContainer);\n-        setWindowClosedCallback(editConfigWin, confContainer);\n-\n-        AjaxLink createConfigurationLink = new AjaxLink(\"createConfigurationLink\") {\n+        IndicatingAjaxLink<Void> save = new IndicatingAjaxLink<Void>(\"saveParameters\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n+                final ConfTO updatedConf = (ConfTO) form.getModelObject();\n \n-                createConfigWin.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                    private static final long serialVersionUID = -7834632442532690940L;\n+                try {\n+                    for (AttributeTO attr : updatedConf.getAttrs()) {\n+                        if (attr.getValues().isEmpty()\n+                                || attr.getValues().equals(Collections.singletonList(StringUtils.EMPTY))) {\n \n-                    @Override\n-                    public Page createPage() {\n-                        return new ConfigurationModalPage(Configuration.this.getPageReference(), createConfigWin,\n-                                new ConfigurationTO(), true);\n+                            confRestClient.delete(attr.getSchema());\n+                        } else {\n+                            confRestClient.set(attr);\n+                        }\n                     }\n-                });\n \n-                createConfigWin.show(target);\n+                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                    feedbackPanel.refresh(target);\n+                } catch (Exception e) {\n+                    LOG.error(\"While updating configuration parameters\", e);\n+                    error(getString(Constants.ERROR) + \": \" + e.getMessage());\n+                    feedbackPanel.refresh(target);\n+                }\n             }\n         };\n-\n-        MetaDataRoleAuthorizationStrategy.authorize(createConfigurationLink, ENABLE, xmlRolesReader.getAllAllowedRoles(\n-                \"Configuration\", \"create\"));\n-        add(createConfigurationLink);\n+        MetaDataRoleAuthorizationStrategy.authorize(save, ENABLE, xmlRolesReader.getAllAllowedRoles(\n+                \"Configuration\", \"set\"));\n+        form.add(save);\n \n         Link<Void> dbExportLink = new Link<Void>(\"dbExportLink\") {\n \n@@ -372,34 +290,9 @@ public void onClick() {\n                 }\n             }\n         };\n-\n         MetaDataRoleAuthorizationStrategy.authorize(dbExportLink, ENABLE, xmlRolesReader.getAllAllowedRoles(\n-                \"Configuration\", \"read\"));\n+                \"Configuration\", \"export\"));\n         add(dbExportLink);\n-\n-        @SuppressWarnings(\"rawtypes\")\n-        Form confPaginatorForm = new Form(\"confPaginatorForm\");\n-\n-        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n-        final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n-                new PropertyModel(this, \"confPaginatorRows\"), prefMan.getPaginatorChoices());\n-\n-        rowsChooser.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(), getResponse(), Constants.PREF_CONFIGURATION_PAGINATOR_ROWS, String.valueOf(\n-                        confPaginatorRows));\n-                confTable.setItemsPerPage(confPaginatorRows);\n-\n-                target.add(confContainer);\n-            }\n-        });\n-\n-        confPaginatorForm.add(rowsChooser);\n-        add(confPaginatorForm);\n     }\n \n     private void setupNotification() {\n@@ -483,7 +376,7 @@ public void onClick(final AjaxRequestTarget target) {\n         });\n \n         final AjaxFallbackDefaultDataTable<NotificationTO, String> notificationTable =\n-                 new AjaxFallbackDefaultDataTable<NotificationTO, String>(\n+                new AjaxFallbackDefaultDataTable<NotificationTO, String>(\n                         \"notificationTable\", notificationCols, new NotificationProvider(), notificationPaginatorRows);\n \n         notificationContainer = new WebMarkupContainer(\"notificationContainer\");\n@@ -556,47 +449,6 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         add(notificationPaginatorForm);\n     }\n \n-    private class SyncopeConfProvider extends SortableDataProvider<ConfigurationTO, String> {\n-\n-        private static final long serialVersionUID = -276043813563988590L;\n-\n-        private SortableDataProviderComparator<ConfigurationTO> comparator;\n-\n-        public SyncopeConfProvider() {\n-            //Default sorting\n-            setSort(\"key\", SortOrder.ASCENDING);\n-            comparator = new SortableDataProviderComparator<ConfigurationTO>(this);\n-        }\n-\n-        @Override\n-        public Iterator<ConfigurationTO> iterator(final long first, final long count) {\n-            List<ConfigurationTO> list = confRestClient.getAllConfigurations();\n-\n-            Collections.sort(list, comparator);\n-\n-            return list.subList((int) first, (int) first + (int) count).iterator();\n-        }\n-\n-        @Override\n-        public long size() {\n-            return confRestClient.getAllConfigurations().size();\n-        }\n-\n-        @Override\n-        public IModel<ConfigurationTO> model(final ConfigurationTO configuration) {\n-\n-            return new AbstractReadOnlyModel<ConfigurationTO>() {\n-\n-                private static final long serialVersionUID = 774694801558497248L;\n-\n-                @Override\n-                public ConfigurationTO getObject() {\n-                    return configuration;\n-                }\n-            };\n-        }\n-    }\n-\n     private class NotificationProvider extends SortableDataProvider<NotificationTO, String> {\n \n         private static final long serialVersionUID = -276043813563988590L;"},{"sha":"b0fdef5c5fe6184fc578f7e3da231ecab5bd89e1","filename":"console/src/main/java/org/apache/syncope/console/pages/ConfigurationModalPage.java","status":"removed","additions":0,"deletions":135,"changes":135,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e47448acfc5d1504a603242d1a9181cec73d780/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e47448acfc5d1504a603242d1a9181cec73d780/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java?ref=0e47448acfc5d1504a603242d1a9181cec73d780","patch":"@@ -1,135 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.console.pages;\n-\n-import org.apache.syncope.common.to.ConfigurationTO;\n-import org.apache.syncope.common.SyncopeClientException;\n-import org.apache.syncope.console.rest.ConfigurationRestClient;\n-import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n-import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.model.CompoundPropertyModel;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.model.ResourceModel;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n-\n-/**\n- * Modal window with Connector form.\n- */\n-public class ConfigurationModalPage extends BaseModalPage {\n-\n-    private static final long serialVersionUID = -5266230025217580098L;\n-\n-    @SpringBean\n-    private ConfigurationRestClient configurationsRestClient;\n-\n-    private final AjaxButton submit;\n-\n-    /**\n-     * ConfigurationModalPage constructor.\n-     *\n-     * @param pageRef base\n-     * @param window\n-     * @param configurationTO\n-     * @param createFlag true for CREATE and false for UPDATE operation\n-     */\n-    public ConfigurationModalPage(final PageReference pageRef, final ModalWindow window,\n-            final ConfigurationTO configurationTO, final boolean createFlag) {\n-\n-        Form<ConfigurationTO> form =\n-                 new Form<ConfigurationTO>(FORM, new CompoundPropertyModel<ConfigurationTO>(configurationTO));\n-\n-        final AjaxTextFieldPanel key = new AjaxTextFieldPanel(\"key\", \"key\",\n-                new PropertyModel<String>(configurationTO, \"key\"));\n-        form.add(key);\n-        key.setEnabled(createFlag);\n-        key.addRequiredLabel();\n-\n-        final AjaxTextFieldPanel value = new AjaxTextFieldPanel(\"value\", \"value\",\n-                new PropertyModel<String>(configurationTO, \"value\"));\n-        form.add(value);\n-\n-        submit = new IndicatingAjaxButton(APPLY, new Model<String>(getString(SUBMIT))) {\n-\n-            private static final long serialVersionUID = -958724007591692537L;\n-\n-            @Override\n-            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                try {\n-                    if (createFlag) {\n-                        configurationsRestClient.createConfiguration(configurationTO);\n-                    } else {\n-                        configurationsRestClient.updateConfiguration(configurationTO);\n-                    }\n-\n-                    Configuration callerPage = (Configuration) pageRef.getPage();\n-                    callerPage.setModalResult(true);\n-\n-                    window.close(target);\n-                } catch (SyncopeClientException e) {\n-                    if (createFlag) {\n-                        error(getString(\"error_insert\"));\n-                    } else {\n-                        error(getString(\"error_updating\"));\n-                    }\n-                    feedbackPanel.refresh(target);\n-                    LOG.error(\"While creating or updating configuration {}\", configurationTO, e);\n-                }\n-            }\n-\n-            @Override\n-            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n-                feedbackPanel.refresh(target);\n-            }\n-        };\n-\n-        final IndicatingAjaxButton cancel = new IndicatingAjaxButton(CANCEL, new ResourceModel(CANCEL)) {\n-\n-            private static final long serialVersionUID = -958724007591692537L;\n-\n-            @Override\n-            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                window.close(target);\n-            }\n-\n-            @Override\n-            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n-            }\n-        };\n-\n-        cancel.setDefaultFormProcessing(false);\n-        form.add(cancel);\n-\n-        String allowedRoles = createFlag\n-                ? xmlRolesReader.getAllAllowedRoles(\"Configuration\", \"create\")\n-                : xmlRolesReader.getAllAllowedRoles(\"Configuration\", \"update\");\n-\n-        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE, allowedRoles);\n-\n-        form.add(submit);\n-\n-        add(form);\n-    }\n-}"},{"sha":"bae28cc5f0114fb9c909583f23108e118a7c2d62","filename":"console/src/main/java/org/apache/syncope/console/pages/Schema.java","status":"modified","additions":15,"deletions":9,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -30,7 +30,6 @@\n import java.util.Map;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.to.AbstractSchemaTO;\n-import org.apache.syncope.common.to.SchemaTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.SchemaType;\n import org.apache.syncope.console.commons.Constants;\n@@ -102,6 +101,9 @@ public class Schema extends BasePage {\n                 private static final long serialVersionUID = 3109256773218160485L;\n \n                 {\n+                    put(new SimpleEntry<AttributableType, SchemaType>(\n+                                    AttributableType.CONFIGURATION, SchemaType.NORMAL),\n+                            Constants.PREF_CONF_SCHEMA_PAGINATOR_ROWS);\n                     put(new SimpleEntry<AttributableType, SchemaType>(AttributableType.USER, SchemaType.NORMAL),\n                             Constants.PREF_USER_SCHEMA_PAGINATOR_ROWS);\n                     put(new SimpleEntry<AttributableType, SchemaType>(AttributableType.USER, SchemaType.DERIVED),\n@@ -152,17 +154,19 @@ public Schema() {\n             List<ITab> tabs = new ArrayList<ITab>();\n \n             for (final SchemaType schemaType : SchemaType.values()) {\n-                final String schemaTypeAsString = schemaType.name().toLowerCase();\n+                if (attrType != AttributableType.CONFIGURATION || schemaType == SchemaType.NORMAL) {\n+                    final String schemaTypeAsString = schemaType.name().toLowerCase();\n \n-                tabs.add(new AbstractTab(new Model<String>(getString(schemaTypeAsString))) {\n+                    tabs.add(new AbstractTab(new Model<String>(getString(schemaTypeAsString))) {\n \n-                    private static final long serialVersionUID = -5861786415855103549L;\n+                        private static final long serialVersionUID = -5861786415855103549L;\n \n-                    @Override\n-                    public WebMarkupContainer getPanel(final String panelId) {\n-                        return new SchemaTypePanel(panelId, attrType, schemaType);\n-                    }\n-                });\n+                        @Override\n+                        public WebMarkupContainer getPanel(final String panelId) {\n+                            return new SchemaTypePanel(panelId, attrType, schemaType);\n+                        }\n+                    });\n+                }\n             }\n \n             add(new JQueryUITabbedPanel(attrTypeAsString + \"Tabs\", tabs));\n@@ -178,6 +182,7 @@ private <T extends AbstractSchemaModalPage> List<IColumn> getColumns(\n \n         for (final String field : fields) {\n             final Field clazzField = ReflectionUtils.findField(schemaType.getToClass(), field);\n+\n             if (clazzField != null) {\n                 if (clazzField.getType().equals(Boolean.class) || clazzField.getType().equals(boolean.class)) {\n                     columns.add(new AbstractColumn<AbstractSchemaTO, String>(new ResourceModel(field)) {\n@@ -355,6 +360,7 @@ public Page createPage() {\n         MetaDataRoleAuthorizationStrategy.authorize(link, ENABLE, allowedCreateRoles);\n \n         return link;\n+\n     }\n \n     private class SchemaProvider extends SortableDataProvider<AbstractSchemaTO, String> {"},{"sha":"61c28af911d5a7fc116ec738a4169d7e5d98278e","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AttributesPanel.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -165,11 +165,13 @@ private void setSchemas() {\n             filter(schemaTOs, allowed);\n         } else if (entityTO instanceof UserTO) {\n             schemaTOs = schemaRestClient.getSchemas(AttributableType.USER);\n-        } else {\n+        } else if (entityTO instanceof MembershipTO) {\n             schemaTOs = schemaRestClient.getSchemas(AttributableType.MEMBERSHIP);\n             Set<String> allowed = new HashSet<String>(\n                     roleRestClient.read(((MembershipTO) entityTO).getRoleId()).getMAttrTemplates());\n             filter(schemaTOs, allowed);\n+        } else {\n+            schemaTOs = schemaRestClient.getSchemas(AttributableType.CONFIGURATION);\n         }\n \n         schemas.clear();"},{"sha":"7a5b559c5068d228954be031a4e19f85e94b4ff5","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/NotificationPanel.java","status":"modified","additions":14,"deletions":1,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FNotificationPanel.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -19,7 +19,9 @@\n package org.apache.syncope.console.pages.panels;\n \n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.console.commons.Constants;\n import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.ajax.AjaxEventBehavior;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.feedback.FeedbackMessage;\n import org.apache.wicket.feedback.IFeedbackMessageFilter;\n@@ -45,6 +47,17 @@ public NotificationPanel(final String id, final String additionalCSSClass,\n \n         super(id, feedbackMessageFilter);\n \n+        this.add(new AjaxEventBehavior(Constants.ON_CLICK) {\n+\n+            private static final long serialVersionUID = -7133385027739964990L;\n+\n+            @Override\n+            protected void onEvent(final AjaxRequestTarget target) {\n+                target.appendJavaScript(\n+                        \"setTimeout(\\\"$('div#\" + getMarkupId() + \"').fadeOut('normal')\\\", 0);\");\n+            }\n+        });\n+\n         this.additionalCSSClass = StringUtils.isBlank(additionalCSSClass)\n                 ? DEFAULT_ADDITIONAL_CSS_CLASS\n                 : additionalCSSClass;\n@@ -54,7 +67,7 @@ public NotificationPanel(final String id, final String additionalCSSClass,\n         setOutputMarkupId(true);\n \n         // Add the additional cssClass and hide the element by default\n-        add(new AttributeModifier(\"class\", new Model<String>(this.CSS_CLASS + \" \" + this.additionalCSSClass)));\n+        add(new AttributeModifier(\"class\", new Model<String>(CSS_CLASS + \" \" + this.additionalCSSClass)));\n         add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0;\")));\n     }\n "},{"sha":"8fa94795f2d4142fadfe20b180badc042edf9415","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/PushTasksPanel.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPushTasksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPushTasksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPushTasksPanel.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.console.pages.panels;\n \n-import static org.apache.syncope.console.pages.panels.AbstractTasks.TASKS;\n-\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.common.SyncopeClientException;"},{"sha":"71fd2b5c91de3a83df3a36b439e82082bb128eeb","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/SyncTasksPanel.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasksPanel.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.console.pages.panels;\n \n-import static org.apache.syncope.console.pages.panels.AbstractTasks.TASKS;\n-\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.common.SyncopeClientException;"},{"sha":"e281eed5f28ae962f06d82c4fca7995137afd246","filename":"console/src/main/java/org/apache/syncope/console/rest/ConfigurationRestClient.java","status":"modified","additions":7,"deletions":31,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -18,55 +18,31 @@\n  */\n package org.apache.syncope.console.rest;\n \n-import java.util.List;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.common.services.ConfigurationService;\n-import org.apache.syncope.common.to.ConfigurationTO;\n+import org.apache.syncope.common.to.AttributeTO;\n+import org.apache.syncope.common.to.ConfTO;\n import org.springframework.stereotype.Component;\n \n @Component\n public class ConfigurationRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = 7692363064029538722L;\n \n-    /**\n-     * Get all stored configurations.\n-     *\n-     * @return ConfigurationTOs\n-     */\n-    public List<ConfigurationTO> getAllConfigurations() {\n+    public ConfTO list() {\n         return getService(ConfigurationService.class).list();\n     }\n \n-    public ConfigurationTO readConfiguration(final String key) {\n+    public AttributeTO read(final String key) {\n         return getService(ConfigurationService.class).read(key);\n     }\n \n-    /**\n-     * Create a new configuration.\n-     *\n-     * @param configurationTO\n-     */\n-    public void createConfiguration(final ConfigurationTO configurationTO) {\n-        getService(ConfigurationService.class).create(configurationTO);\n+    public void set(final AttributeTO attributeTO) {\n+        getService(ConfigurationService.class).set(attributeTO.getSchema(), attributeTO);\n     }\n \n-    /**\n-     * Update an existing configuration.\n-     *\n-     * @param configurationTO\n-     */\n-    public void updateConfiguration(final ConfigurationTO configurationTO) {\n-        getService(ConfigurationService.class).update(configurationTO.getKey(), configurationTO);\n-    }\n-\n-    /**\n-     * Delete a configuration by key.\n-     */\n-    public ConfigurationTO deleteConfiguration(final String key) {\n-        ConfigurationTO response = getService(ConfigurationService.class).read(key);\n+    public void delete(final String key) {\n         getService(ConfigurationService.class).delete(key);\n-        return response;\n     }\n \n     public Response dbExport() {"},{"sha":"23476f143b1c6065faac5afb6cca20f3df1f705d","filename":"console/src/main/resources/authorizations.xml","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -201,16 +201,16 @@ under the License.\n       <entitlement>CONFIGURATION_LIST</entitlement>\n     </action>\n \n-    <action id=\"create\">\n-      <entitlement>CONFIGURATION_CREATE</entitlement>\n+    <action id=\"export\">\n+      <entitlement>CONFIGURATION_EXPORT</entitlement>\n     </action>\n \n     <action id=\"read\">\n       <entitlement>CONFIGURATION_READ</entitlement>\n     </action>\n \n-    <action id=\"update\">\n-      <entitlement>CONFIGURATION_UPDATE</entitlement>\n+    <action id=\"set\">\n+      <entitlement>CONFIGURATION_SET</entitlement>\n     </action>\n \n     <action id=\"delete\">"},{"sha":"223b27a12a358a3bacabd9c3bf97a723a45ed6b4","filename":"console/src/main/resources/org/apache/syncope/console/SyncopeApplication.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -51,3 +51,4 @@ jexl_info=This field expects a JEXL expression, for example:\n jexl_ex1=surname + ',' + firstname\n jexl_ex2='new.' + surname\n jexl_syntax_url=Full JEXL reference\n+create=Create"},{"sha":"3a54be58a7313c66c13d874e01b4c075efeaec7d","filename":"console/src/main/resources/org/apache/syncope/console/SyncopeApplication_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_it.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -50,3 +50,4 @@ jexl_info=In questo campo possono essere inserite espressioni di tipo JEXL, per\n jexl_ex1=surname + ',' + firstname\n jexl_ex2='new.' + surname\n jexl_syntax_url=Sintassi JEXL completa\n+create=Crea"},{"sha":"dd9ecd74c80b0bc8c99ee559084468870b6544e8","filename":"console/src/main/resources/org/apache/syncope/console/SyncopeApplication_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSyncopeApplication_pt_BR.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -50,3 +50,4 @@ jexl_info=Este campo \\u00e9 designado a uma express\\u00e3o do tipo JEXL, por exe\n jexl_ex1=sobrenome + ',' + nome\n jexl_ex2='novo.' + sobrenome\n jexl_syntax_url=Refer\\u00eancia JEXL completa\n+create=Criar"},{"sha":"5c1e84a12679c893067bcc03b2a96f6f79e8adbc","filename":"console/src/main/resources/org/apache/syncope/console/pages/Configuration.html","status":"modified","additions":9,"deletions":23,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.html?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -39,29 +39,15 @@\n         <li><a href=\"#logs\"><span><wicket:message key=\"logs\"/></span></a></li>\n       </ul>\n \n-      <div id=\"parameters\">\n-        <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n-          <span wicket:id=\"confContainer\">\n-            <table class=\"ui-widget ui-widget-content table-hover\"\n-                   wicket:id=\"syncopeconf\"/>\n-          </span>\n-\n-          <span style=\"float:right\">\n-            <form wicket:id=\"confPaginatorForm\" style=\"display:inline\">\n-              <label><wicket:message key=\"displayRows\"/></label>\n-              <select class=\"text ui-widget-content ui-corner-all\"\n-                      wicket:id=\"rowsChooser\"/>\n-            </form>\n-          </span>\n-        </div>\n+      <div id=\"parameters\" wicket:id=\"parameters\" style=\"width: 700px;\">\n+        <form wicket:id=\"confForm\">\n+          <span wicket:id=\"parameters\">[parameters]</span>\n \n-        <div wicket:id=\"createConfigurationWin\">[Show modal window for creating configuration]</div>\n-        <div wicket:id=\"editConfigurationWin\">[Show modal window for editing configuration]</div>\n-\n-        <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-           wicket:id=\"createConfigurationLink\">\n-          <wicket:message key=\"create_configuration\"/>\n-        </a>\n+          <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+             wicket:id=\"saveParameters\">\n+            <wicket:message key=\"apply\"/>\n+          </a>        \n+        </form>\n       </div>\n       <div id=\"policies\">\n         <ul>\n@@ -102,7 +88,7 @@\n \n         <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n            wicket:id=\"createNotificationLink\">\n-          <wicket:message key=\"create_notification\"/>\n+          <wicket:message key=\"create\"/>\n         </a>\n       </div>\n       <div id=\"workflow\">"},{"sha":"8da7bd22d67d9b24280b98b3a4c3e4acce0fb0c1","filename":"console/src/main/resources/org/apache/syncope/console/pages/Configuration.properties","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -14,8 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-key=Key\n-value=Value\n parameters=Parameters\n password=Password\n account=Account\n@@ -26,16 +24,15 @@ coreLog=Core Log\n consoleLog=Console Log\n edit=Edit\n delete=Delete\n-create_configuration=Create new configuration\n db_export=DB export\n logger=Logger\n level=Level\n events=Events\n template=Template\n traceLevel=Trace level\n-create_notification=Create new notification\n subject=Subject\n noActivitiEnabledForUsers=Activiti not enabled for users\n policies=Policies\n logs=Logs\n active=Enabled\n+apply=Save"},{"sha":"b773414f4693876fbaa86e0dc59f602c9f9d0469","filename":"console/src/main/resources/org/apache/syncope/console/pages/ConfigurationModalPage.html","status":"removed","additions":0,"deletions":53,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e47448acfc5d1504a603242d1a9181cec73d780/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e47448acfc5d1504a603242d1a9181cec73d780/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.html?ref=0e47448acfc5d1504a603242d1a9181cec73d780","patch":"@@ -1,53 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:extend>\n-    <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\" /></p>\n-    <div style=\"margin: 5px;\">\n-      <form wicket:id=\"form\">\n-        <div id=\"formtable\">\n-          <div class=\"tablerow alt\">\n-            <div class=\"tablecolumn_label short_dynamicsize\">\n-              <label for=\"key\"><wicket:message key=\"key\"/></label>\n-            </div>\n-            <div class=\"tablecolumn_field medium_dynamicsize\">\n-              <span wicket:id=\"key\">[key]</span>\n-            </div>\n-          </div>\n-          <div class=\"tablerow\">\n-            <div class=\"tablecolumn_label short_dynamicsize\">\n-              <label for=\"value\"><wicket:message key=\"value\"/></label>\n-            </div>\n-            <div class=\"tablecolumn_field medium_dynamicsize\">\n-              <span wicket:id=\"value\">[value]</span>\n-            </div>\n-          </div>\n-        </div>\n-        <div style=\"margin: 10px 0px 0\">\n-          <input type=\"submit\"\n-                 class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                 wicket:id=\"apply\"/>\n-          <input type=\"button\"\n-                 class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                 wicket:id=\"cancel\"/>\n-        </div>\n-      </form>\n-    </div>\n-  </wicket:extend>\n-</html>"},{"sha":"36d03e83c76b43988158b9af8c974f8a5d297685","filename":"console/src/main/resources/org/apache/syncope/console/pages/ConfigurationModalPage.properties","status":"removed","additions":0,"deletions":22,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e47448acfc5d1504a603242d1a9181cec73d780/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e47448acfc5d1504a603242d1a9181cec73d780/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.properties?ref=0e47448acfc5d1504a603242d1a9181cec73d780","patch":"@@ -1,22 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-title=Edit parameter\n-submit=Save\n-key=Key\n-value=Value\n-error_insert=Error occurred during creation\n-error_updating=Error occurred during update"},{"sha":"dece55d9f7ee74f253217b72926f636f92b5aa2c","filename":"console/src/main/resources/org/apache/syncope/console/pages/ConfigurationModalPage_it.properties","status":"removed","additions":0,"deletions":22,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e47448acfc5d1504a603242d1a9181cec73d780/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e47448acfc5d1504a603242d1a9181cec73d780/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage_it.properties?ref=0e47448acfc5d1504a603242d1a9181cec73d780","patch":"@@ -1,22 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-title=Gestisci parametro\n-submit=Salva\n-key=Chiave\n-value=Valore\n-error_insert=Errore durante la creazione\n-error_updating=Errore durante l'aggiornamento"},{"sha":"292c1cc371d8eca6b591e9f06adb6c0d27f51da0","filename":"console/src/main/resources/org/apache/syncope/console/pages/ConfigurationModalPage_pt_BR.properties","status":"removed","additions":0,"deletions":22,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e47448acfc5d1504a603242d1a9181cec73d780/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e47448acfc5d1504a603242d1a9181cec73d780/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage_pt_BR.properties?ref=0e47448acfc5d1504a603242d1a9181cec73d780","patch":"@@ -1,22 +0,0 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-title=Alterar Par\\u00E2metro\n-submit=Salvar\n-key=Chave\n-value=Valor\n-error_insert=Um erro ocorreu durante a cria\\u00E7\\u00E3o\n-error_updating=Um erro ocorreu durante a atualiza\\u00E7\\u00E3o"},{"sha":"fd7c96dc761e75d25c22ba859b6bfc2452ae72f5","filename":"console/src/main/resources/org/apache/syncope/console/pages/Configuration_it.properties","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration_it.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -14,8 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-key=Chiave\n-value=Valore\n parameters=Parametri\n password=Password\n account=Account\n@@ -26,16 +24,15 @@ coreLog=Log Core\n consoleLog=Log Console\n edit=Modifica\n delete=Rimuovi\n-create_configuration=Crea nuova configurazione\n db_export=Esportazione DB\n logger=Logger\n level=Livello\n events=Eventi\n template=Modello\n traceLevel=Tracciamento\n-create_notification=Crea nuova notifica\n subject=Oggetto\n noActivitiEnabledForUsers=Activiti non configurato per gli utenti\n policies=Politiche\n logs=Logs\n active=Abilitata\n+apply=Salva"},{"sha":"326915ffa628c9cc6dcae12c463dfdc9e582eb3b","filename":"console/src/main/resources/org/apache/syncope/console/pages/Configuration_pt_BR.properties","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration_pt_BR.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -14,8 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-key=Chave\n-value=Valor\n parameters=Par\\u00e2metros\n password=Senha\n account=Conta\n@@ -26,16 +24,15 @@ coreLog=Log Central\n consoleLog=Log do Console\n edit=Editar\n delete=Excluir\n-create_configuration=Criar Nova configura\\u00e7\\u00e3o\n db_export=Exportar Banco de Dados\n logger=Logger\n level=N\\u00edvel\n events=Eventos\n template=Template\n traceLevel=N\\u00edvel de Trace\n-create_notification=Criar nova notifica\\u00e7\\u00e3o\n subject=Assunto\n noActivitiEnabledForUsers=Activiti n\\u00e3o habilitado para usu\\u00e1rios\n policies=Pol\\u00edticas\n logs=Logs\n active=Ativada\n+apply=Salvar"},{"sha":"e39980a6c7ed61326235ee13926859fd24fa8414","filename":"console/src/main/resources/org/apache/syncope/console/pages/DerSchemaModalPage.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDerSchemaModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDerSchemaModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDerSchemaModalPage.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -14,7 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-create_attribute=Create new attribute\n required_alert=All form fields are required.\n expression=Expression\n existing_schemas=Existing Schemas:"},{"sha":"425e118d17a73498014d9a15714de895e4f231ff","filename":"console/src/main/resources/org/apache/syncope/console/pages/DerSchemaModalPage_it.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDerSchemaModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDerSchemaModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDerSchemaModalPage_it.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -14,7 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-create_attribute=Crea nuovo attributo\n required_alert=Tutti i campi sono richiesti.\n expression=Expression\n existing_schemas=Schemi presenti:"},{"sha":"df3aff8e37a5a5ba4557555c19157d53106ea241","filename":"console/src/main/resources/org/apache/syncope/console/pages/DerSchemaModalPage_pt_BR.properties","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDerSchemaModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDerSchemaModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDerSchemaModalPage_pt_BR.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -14,9 +14,8 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-create_attribute=Criar novo atributo\n-required_alert=Todos os campos do formaul\\u00E1rio s\\u00E3o obrigat\\u00F3rios\n-expression=Express\\u00E3o\n+required_alert=Todos os campos do formaul\\u00e1rio s\\u00e3o obrigat\\u00f3rios\n+expression=Express\\u00e3o\n existing_schemas=Esquemas Existentes\\:\n edit_attribute=Alterar Atributo\n attributes=Atributos Derivados"},{"sha":"456f7a33ee1238b7d6674f9c35710e0eae9b2958","filename":"console/src/main/resources/org/apache/syncope/console/pages/Reports.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.html?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -40,7 +40,7 @@\n \n         <div wicket:id=\"reportWin\">[Show modal window for report editing]</div>\n         <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"createLink\">\n-          <wicket:message key=\"create_report\"/>\n+          <wicket:message key=\"create\"/>\n         </a>\n \n       </div>"},{"sha":"06ebacafd43f86044fe04771c3d0933de9b78ab7","filename":"console/src/main/resources/org/apache/syncope/console/pages/Reports.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -15,7 +15,6 @@\n # specific language governing permissions and limitations\n # under the License.\n audit=Audit\n-create_report=Create new report\n lastExec=Last Execution\n nextExec=Next Execution\n latestExecStatus=Last status"},{"sha":"24b62ba20c717884c3fca6a752724516b0549d11","filename":"console/src/main/resources/org/apache/syncope/console/pages/Reports_it.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports_it.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -15,7 +15,6 @@\n # specific language governing permissions and limitations\n # under the License.\n audit=Audit\n-create_report=Crea un nuovo rapporto\n lastExec=Ultima Esecuzione\n nextExec=Prossima Esecuzione\n latestExecStatus=Ultimo stato"},{"sha":"c688a0625c535f44caad89f0671b6bb5395c88dd","filename":"console/src/main/resources/org/apache/syncope/console/pages/Reports_pt_BR.properties","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReports_pt_BR.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -15,11 +15,10 @@\n # specific language governing permissions and limitations\n # under the License.\n audit=Auditar\n-create_report=Criar novo relat\\u00F3rio\n-lastExec=\\u00DAltima Execu\\u00E7\\u00E3o\n-nextExec=Pr\\u00F3xima Execu\\u00E7\\u00E3o\n-latestExecStatus=\\u00DAltimo Estatus\n+lastExec=\\u00daltima Execu\\u00e7\\u00e3o\n+nextExec=Pr\\u00f3xima Execu\\u00e7\\u00e3o\n+latestExecStatus=\\u00daltimo Estatus\n category=Categoria\n subcategory=Subcategoria\n-startDate=Data de in\\u00EDcio\n+startDate=Data de in\\u00edcio\n endDate=Data Final\n\\ No newline at end of file"},{"sha":"a6c4722add7c50f8861a58c1df9cd670dec5f7b1","filename":"console/src/main/resources/org/apache/syncope/console/pages/ResourceModalPage.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -18,7 +18,6 @@ resource=Resource details\n umapping=User mapping\n connectorProperties=Connector properties\n security=Security\n-create_attribute=Create new resource\n required_alert=All form fields are required\n connector=Connector\n existing_resources=Existing resources"},{"sha":"11c29349b70cf13a60f7057d173b3425eb49ff4b","filename":"console/src/main/resources/org/apache/syncope/console/pages/ResourceModalPage_it.properties","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -18,8 +18,6 @@ resource=Dettagli Risorsa\n umapping=Mapping utenti\n connectorProperties=Propriet\\u00e0\\u00a0 Connettore\n security=Sicurezza\n-\n-create_attribute=Crea nuova risorsa\n required_alert=Tutti i campi sono richiesti\n connector=Connettore\n existing_resources=Risorse esistenti"},{"sha":"a43c61cabe2c9f364860378ee1e15b50b6a746f7","filename":"console/src/main/resources/org/apache/syncope/console/pages/ResourceModalPage_pt_BR.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_pt_BR.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -18,7 +18,6 @@ resource=Detalhes de Recursos\n umapping=Mapeamento de usu\\u00e1rios\n connectorProperties=Propriedades de Conectores\n security=Seguran\\u00e7a\n-create_attribute=Criar novo recurso\n required_alert=Todos os campos deste formul\\u00e1rio s\\u00e3o obrigat\\u00f3rios\n connector=Conector\n existing_resources=Recursos Existentes"},{"sha":"fb6b8a1c15ec957034bfa456a50dffd2b500497c","filename":"console/src/main/resources/org/apache/syncope/console/pages/Resources.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -17,7 +17,7 @@\n tab1=Resources\n edit=Edit\n delete=Delete\n-create-resource=Create new resource\n+create-resource=Create\n propagationPriority=Propagation priority\n propagationPrimary=Propagation primary\n \n@@ -27,7 +27,7 @@ version=Version\n bundleName=Bundle name\n edit=Edit\n delete=Delete\n-create-connector=Create new connector\n+create-connector=Create\n delete_error=Operation forbidden:the connector you're trying to delete is connected to a Resource\n connector=Connector\n reloadConnectors=Reload connectors"},{"sha":"80a518535d1f92294e1aa5110b1f2a962c5fe816","filename":"console/src/main/resources/org/apache/syncope/console/pages/Resources_it.properties","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources_it.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -17,12 +17,12 @@\n tab1=Risorse\n edit=Modifica\n delete=Rimuovi\n-create-resource=Crea nuova risorsa\n+create-resource=Crea\n propagationPriority=Priorit\\u00e0 in propagazione\n propagationPrimary=Primaria in propagazione\n \n tab2=Connettori\n-create-connector=Crea nuovo connettore\n+create-connector=Crea\n version=Versione\n bundleName=Bundle name\n edit=Modifica\n@@ -31,5 +31,4 @@ delete_error=Operazione vietata: il connettore che si desidera rimuovere \\u00e8\n displayName=Nome visualizzato\n connector=Connettore\n reloadConnectors=Ricarica connettori\n-confirmReloadConnectors=QQuesta richiesta \\u00e8 potenzialmente dannosa per le operazioni in corso, proseguire?\n-uesta richiesta \\u00e8 potenzialmente dannosa per le operazioni in corso, proseguire?\n+confirmReloadConnectors=Questa richiesta \\u00e8 potenzialmente dannosa per le operazioni in corso, proseguire?"},{"sha":"a631352038ecb2d76b172f248f8d8640792febb6","filename":"console/src/main/resources/org/apache/syncope/console/pages/Resources_pt_BR.properties","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources_pt_BR.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -17,16 +17,16 @@\n tab1=Recursos\n edit=Alterar\n delete=Excluir\n-create-resource=Criar novo recurso\n-propagationPriority=Prioridade de propaga\\u00E7\\u00E3o\n-propagationPrimary=Propaga\\u00E7\\u00E3o prim\\u00E1ria\n+create-resource=Criar\n+propagationPriority=Prioridade de propaga\\u00e7\\u00e3o\n+propagationPrimary=Propaga\\u00e7\\u00e3o prim\\u00e1ria\n \n tab2=Conectores\n displayName=Mostar\n-version=Vers\\u00E3o\n+version=Vers\\u00e3o\n bundleName=Nome do Pacote\n-create-connector=Criar novo conector\n-delete_error=Opera\\u00E7\\u00E3o n\\u00E3o permitida\\: o conector que voc\\u00EA est\\u00E1 tentando excluir est\\u00E1 conectado a um recurso\n+create-connector=Criar\n+delete_error=Opera\\u00e7\\u00e3o n\\u00e3o permitida\\: o conector que voc\\u00ea est\\u00e1 tentando excluir est\\u00e1 conectado a um recurso\n connector=Conector\n reloadConnectors=Carregar Conector\n-confirmReloadConnectors=Esta requis\\u00E7\\u00E3o \\u00E9 potencialmente perigosa para opera\\u00E7\\u00F5es em execu\\u00E7\\u00E3o, prosseguir?\n+confirmReloadConnectors=Esta requis\\u00e7\\u00e3o \\u00e9 potencialmente perigosa para opera\\u00e7\\u00f5es em execu\\u00e7\\u00e3o, prosseguir?"},{"sha":"acc761eccd34405e1f61276dddd2bd594b291b59","filename":"console/src/main/resources/org/apache/syncope/console/pages/Schema$SchemaTypePanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema%24SchemaTypePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema%24SchemaTypePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema%24SchemaTypePanel.html?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -35,7 +35,7 @@\n \n     <a wicket:id=\"createSchemaLink\"\n        class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">\n-      <wicket:message key=\"create_attribute\"/>\n+      <wicket:message key=\"create\"/>\n     </a>\n   </wicket:panel>\n </html>"},{"sha":"de6d1e219cd46745704de495d757038b925ca82f","filename":"console/src/main/resources/org/apache/syncope/console/pages/Schema.html","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.html?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -35,11 +35,15 @@\n \n     <div id=\"tabs\">\n       <ul>\n-        <li class=\"tabs-selected\"><a href=\"#uschema\"><wicket:message key=\"user\"/></a></li>\n+        <li class=\"tabs-selected\"><a href=\"#cschema\"><wicket:message key=\"configuration\"/></a></li>\n+        <li><a href=\"#uschema\"><wicket:message key=\"user\"/></a></li>\n         <li><a href=\"#mschema\"><wicket:message key=\"membership\"/></a></li>\n         <li><a href=\"#rschema\"><wicket:message key=\"role\"/></a></li>\n       </ul>\n \n+      <div id=\"cschema\">\n+        <div wicket:id=\"configurationTabs\"/>\n+      </div>\n       <div id=\"uschema\">\n         <div wicket:id=\"userTabs\"/>\n       </div>"},{"sha":"b5d81f99c2547d05692eb167b7d43c2124b3fd52","filename":"console/src/main/resources/org/apache/syncope/console/pages/Schema.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -17,7 +17,6 @@\n user=User\n role=Role\n membership=Membership\n-create_attribute=Create new attribute\n required_alert=All fields are required\n mandatory=Mandatory\n multivalue=Multivalue"},{"sha":"58c5708f8ddebdf71fe2c1d8d537fd4477407d8b","filename":"console/src/main/resources/org/apache/syncope/console/pages/SchemaModalPage.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -18,7 +18,6 @@ tab1=Attributes\n tab2=Derived attributes\n tab3=User attributes\n tab4=User derived attributes\n-create_attribute=Create new attribute\n required_alert=All form fields are required.\n mandatoryCondition=Mandatory\n enumerationValues= Enumeration values"},{"sha":"74eed7d03e52e1cbe5acb4e282c42cd3956ddcb8","filename":"console/src/main/resources/org/apache/syncope/console/pages/SchemaModalPage_it.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_it.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -18,7 +18,6 @@ tab1=Attributi\n tab2=Attributi derivati\n tab3=Attributi utenti\n tab4=Attributi utenti derivati\n-create_attribute=Crea nuovo attributo\n required_alert=Tutti i campi sono richiesti\n mandatoryCondition=Obbligatorio\n enumerationValues= Valori enumeration"},{"sha":"a026c178d9edeb2c4b4f0a28c112aa48a90de665","filename":"console/src/main/resources/org/apache/syncope/console/pages/SchemaModalPage_pt_BR.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_pt_BR.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -18,7 +18,6 @@ tab1=Atributos\n tab2=Atributos derivados\n tab3=Atributos de usu\\u00e1rios\n tab4=Atributos derivados de usu\\u00e1rios\n-create_attribute=Criar novo atributo\n required_alert=Todos os campos s\\u00e3o obrigat\\u00f3rios\n mandatoryCondition=obrigat\\u00f3rio\n enumerationValues= Valores enumerados"},{"sha":"611ed9cd8ea0abddba6a8c14a8962711b06b41ff","filename":"console/src/main/resources/org/apache/syncope/console/pages/Schema_it.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema_it.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -17,7 +17,6 @@\n user=Utente\n role=Ruolo\n membership=Membership\n-create_attribute=Crea nuovo attributo\n required_alert=Tutti i campi sono richiesti.\n mandatory=Obbligatorio\n multivalue=Multivalore"},{"sha":"8d76c3bb7734ba98a8f8ce2f733349e8509dead2","filename":"console/src/main/resources/org/apache/syncope/console/pages/Schema_pt_BR.properties","status":"modified","additions":9,"deletions":10,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchema_pt_BR.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -14,23 +14,22 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-user=Usu\\u00E1rio\n-role=Fun\\u00E7\\u00E3o\n+user=Usu\\u00e1rio\n+role=Fun\\u00e7\\u00e3o\n membership=Membro\n-create_attribute=Criar novo atributo\n-required_alert=Todos os campos s\\u00E3o requeridos\n-mandatory=Obrigat\\u00F3rio\n+required_alert=Todos os campos s\\u00e3o requeridos\n+mandatory=Obrigat\\u00f3rio\n multivalue=Multivalorado\n type=Tipo\n-validatorClass=classe de Valida\\u00E7\\u00E3o\n-conversionPattern=Padr\\u00E3o de Convers\\u00E3o\n+validatorClass=classe de Valida\\u00e7\\u00e3o\n+conversionPattern=Padr\\u00e3o de Convers\\u00e3o\n edit=Editar\n delete=Remover\n attributes=Atributos\n-expression=Express\\u00E3o\n+expression=Express\\u00e3o\n normal=Normal\n derived=Derivado\n virtual=Virtual\n-mandatoryCondition=Mandat\\u00F3rio\n-uniqueConstraint=\\u00DAnico\n+mandatoryCondition=Mandat\\u00f3rio\n+uniqueConstraint=\\u00danico\n readonly=Apenas leitura"},{"sha":"e302ea104f2da9c589bb908d8e0bd1a536d4647f","filename":"console/src/main/resources/org/apache/syncope/console/pages/Users.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers.html?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -42,7 +42,7 @@\n \n         <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n            wicket:id=\"createLink\">\n-          <wicket:message key=\"create_user\"/>\n+          <wicket:message key=\"create\"/>\n         </a>\n       </div>\n "},{"sha":"8ad9ae6fd7e80b49263189a63dd08a1bf6beadfe","filename":"console/src/main/resources/org/apache/syncope/console/pages/Users.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -17,7 +17,6 @@\n tab1=List\n tab2=Search\n search=Search\n-create_user=Create new user\n search_results_title=Search results:\n search_noResults=No matches found.\n search_error=Error:search's format is invalid"},{"sha":"708bfedda109ed77f6f78d4c8f4a8529838ac85a","filename":"console/src/main/resources/org/apache/syncope/console/pages/Users_it.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers_it.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -17,7 +17,6 @@\n tab1=Elenco\n tab2=Ricerca\n search=Cerca\n-create_user=Crea nuovo utente\n search_results_title=Risultati ricerca:\n search_noResults=Nessuna corrispondenza trovata.\n search_error=Errore:il formato di ricerca non \\u00e8 valido"},{"sha":"7ab105383ccaf4789f8db1d4a98bbd87e3ef19fd","filename":"console/src/main/resources/org/apache/syncope/console/pages/Users_pt_BR.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers_pt_BR.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -17,7 +17,6 @@\n tab1=Lista\n tab2=Buscar\n search=Buscar\n-create_user=Criar novo usu\\u00e1rio\n search_results_title=Resultados de pesquisa\\:\n search_noResults=Nenhum resultado encontrado\n search_error=Erro\\: formato de busca incorreto."},{"sha":"ef0cb6ad9d78d4e5990747795f39c7f6c8ef6d73","filename":"console/src/main/resources/org/apache/syncope/console/pages/VirSchemaModalPage.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirSchemaModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirSchemaModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirSchemaModalPage.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -14,7 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-create_attribute=Create new attribute\n required_alert=All form fields are required.\n existing_schemas=Existing Schemas:\n edit_attribute=Edit attribute"},{"sha":"21c2d3c161dc3fa88d4df3b6f8791538cfa6dc26","filename":"console/src/main/resources/org/apache/syncope/console/pages/VirSchemaModalPage_it.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirSchemaModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirSchemaModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirSchemaModalPage_it.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -14,7 +14,6 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-create_attribute=Crea nuovo attributo\n required_alert=Tutti i campi sono richiesti.\n existing_schemas=Schemi presenti:\n edit_attribute=Modifica attributo"},{"sha":"1d0de8a0eeb4574cb8b01209630ec86a6fc45735","filename":"console/src/main/resources/org/apache/syncope/console/pages/VirSchemaModalPage_pt_BR.properties","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirSchemaModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirSchemaModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirSchemaModalPage_pt_BR.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -14,8 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-create_attribute=Criar novo atributo\n-required_alert=Todos os campos do formul\\u00E1rio s\\u00E3o obrigat\\u00F3rios\n+required_alert=Todos os campos do formul\\u00e1rio s\\u00e3o obrigat\\u00f3rios\n existing_schemas=Esquemas Existentes\\:\n edit_attribute=Editar Atributo\n attributes=Atributos Virtuais"},{"sha":"cbe6296bdcc9f7f6ecf94f0a2b1ed8d26cf7f3f4","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/AbstractSyncTasksPanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSyncTasksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSyncTasksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSyncTasksPanel.html?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -35,7 +35,7 @@\n     </div>\n     <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n        wicket:id=\"createLink\">\n-      <wicket:message key=\"create_task\"/>\n+      <wicket:message key=\"create\"/>\n     </a>\n   </wicket:panel>\n </html>\n\\ No newline at end of file"},{"sha":"afab11d84d5a735e4b1a37f715655738ca1e6c9c","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/PoliciesPanel.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -20,7 +20,6 @@ type=Type\n title=Account Policies\n delete=Delete\n edit=Edit\n-create=Create\n displayRows=Rows per page\n \n #-----------------------------"},{"sha":"fcbd7c2d1fcfcf1a2b7c9b4bed677bb01c640106","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/PoliciesPanel_it.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel_it.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -20,7 +20,6 @@ type=Tipo\n title=Account Policy\n delete=Rimuovi\n edit=Modifica\n-create=Crea\n displayRows=Righe per pagina\n \n #-----------------------------"},{"sha":"caa7ae24e1b02aa8fdd0eb3b87f18b16e4d29a6f","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/PoliciesPanel_pt_BR.properties","status":"modified","additions":9,"deletions":10,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel_pt_BR.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -15,21 +15,20 @@\n # specific language governing permissions and limitations\n # under the License.\n id=Identificador\n-description=Descri\\u00E7\\u00E3o\n+description=Descri\\u00e7\\u00e3o\n type=Tipo\n-title=Pol\\u00EDticas de Conta\n+title=Pol\\u00edticas de Conta\n delete=Excluir\n edit=Modificar\n-create=Criar\n-displayRows=Linhas por p\\u00E1gina\n+displayRows=Linhas por p\\u00e1gina\n \n #-----------------------------\n # Policy Type\n #-----------------------------\n-ACCOUNT=Pol\\u00EDtica de Conta\n-GLOBAL_ACCOUNT=Pol\\u00EDtica Global de Conta\n-PASSWORD=Pol\\u00EDtica de Senha\n-GLOBAL_PASSWORD=Pol\\u00EDtica Global de Senha\n-SYNC=Pol\\u00EDtica de Sincroniza\\u00E7\\u00E3o\n-GLOBAL_SYNC=Pol\\u00EDtica Global de Sincroniza\\u00E7\\u00E3o\n+ACCOUNT=Pol\\u00edtica de Conta\n+GLOBAL_ACCOUNT=Pol\\u00edtica Global de Conta\n+PASSWORD=Pol\\u00edtica de Senha\n+GLOBAL_PASSWORD=Pol\\u00edtica Global de Senha\n+SYNC=Pol\\u00edtica de Sincroniza\\u00e7\\u00e3o\n+GLOBAL_SYNC=Pol\\u00edtica Global de Sincroniza\\u00e7\\u00e3o\n #-----------------------------\n\\ No newline at end of file"},{"sha":"497da5a057519882667e65bd77d362dd1f3bcec9","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/PushTasksPanel.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPushTasksPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPushTasksPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPushTasksPanel.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -25,6 +25,5 @@ delete=Delete\n edit=Edit\n execute=Execute\n executeDryRun=Dry run\n-create_task=Create new task\n userTemplate=User template\n latestExecStatus=Last status"},{"sha":"abb82a46cf5060fc240245b618d2493b62d36bd6","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/PushTasksPanel_it.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPushTasksPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPushTasksPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPushTasksPanel_it.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -25,6 +25,5 @@ delete=Rimuovi\n edit=Modifica\n execute=Esegui\n executeDryRun=Esecuzione simulata\n-create_task=Crea nuovo task\n userTemplate=Modello utente\n latestExecStatus=Ultimo stato"},{"sha":"054af39b0b926742241da6b9c4002f98d07a24aa","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/PushTasksPanel_pt_BR.properties","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPushTasksPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPushTasksPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPushTasksPanel_pt_BR.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -16,15 +16,14 @@\n # under the License.\n id=Identificador\n name=Nome\n-description=Descri\\u00E7\\u00E3o\n+description=Descri\\u00e7\\u00e3o\n resourceName=Nome do Recurso\n-lastExec=\\u00DAltima Execu\\u00E7\\u00E3o\n-nextExec=Pr\\u00F3xima Execu\\u00E7\\u00E3o\n+lastExec=\\u00daltima Execu\\u00e7\\u00e3o\n+nextExec=Pr\\u00f3xima Execu\\u00e7\\u00e3o\n detail=Detalhe\n delete=Remove\n edit=Alterar\n execute=Executar\n executeDryRun=Executar (Ensaio)\n-create_task=Criar Nova Tarefa\n userTemplate=Usar Template\n-latestExecStatus=\\u00DAltimo Estatus\n+latestExecStatus=\\u00daltimo Estatus"},{"sha":"7ac78ada6164b24d9fee07fc97ea8deb349a5f82","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/SchedTasks.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.html?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -36,7 +36,7 @@\n     </div>\n     <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n        wicket:id=\"createLink\">\n-      <wicket:message key=\"create_task\"/>\n+      <wicket:message key=\"create\"/>\n     </a>\n   </wicket:panel>\n </html>\n\\ No newline at end of file"},{"sha":"98b50fe7b805811706dba12a1a98fe62542b95a3","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/SchedTasks.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -25,5 +25,4 @@ delete=Delete\n edit=Edit\n execute=Execute\n executeDryRun=Dry run\n-create_task=Create new task\n latestExecStatus=Last status"},{"sha":"f02331024f45ed32a7d6d37856afec18a283a28f","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/SchedTasks_it.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks_it.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -25,5 +25,4 @@ delete=Rimuovi\n edit=Modifica\n execute=Esegui\n executeDryRun=Esecuzione simulata\n-create_task=Crea nuovo task\n latestExecStatus=Ultimo stato"},{"sha":"0bca81c3348336d59d945a6adb9f18dc0d5e61ff","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/SchedTasks_pt_BR.properties","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSchedTasks_pt_BR.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -16,14 +16,13 @@\n # under the License.\n id=Identificador\n name=Nome\n-description=Descri\\u00E7\\u00E3o\n+description=Descri\\u00e7\\u00e3o\n class=Classe\n-lastExec=\\u00DAltima Execu\\u00E7\\u00E3o\n-nextExec=Pr\\u00F3xima Execu\\u00E7\\u00E3o\n+lastExec=\\u00daltima Execu\\u00e7\\u00e3o\n+nextExec=Pr\\u00f3xima Execu\\u00e7\\u00e3o\n detail=Detalhe\n delete=Remover\n edit=Editar\n execute=Executar\n executeDryRun=Executar (Ensaio)\n-create_task=Criar Nova Tarefa\n-latestExecStatus=\\u00DAltimo Estatus\n+latestExecStatus=\\u00daltimo Estatus"},{"sha":"497da5a057519882667e65bd77d362dd1f3bcec9","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/SyncTasksPanel.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasksPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasksPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasksPanel.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -25,6 +25,5 @@ delete=Delete\n edit=Edit\n execute=Execute\n executeDryRun=Dry run\n-create_task=Create new task\n userTemplate=User template\n latestExecStatus=Last status"},{"sha":"abb82a46cf5060fc240245b618d2493b62d36bd6","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/SyncTasksPanel_it.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasksPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasksPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasksPanel_it.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -25,6 +25,5 @@ delete=Rimuovi\n edit=Modifica\n execute=Esegui\n executeDryRun=Esecuzione simulata\n-create_task=Crea nuovo task\n userTemplate=Modello utente\n latestExecStatus=Ultimo stato"},{"sha":"054af39b0b926742241da6b9c4002f98d07a24aa","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/SyncTasksPanel_pt_BR.properties","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasksPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasksPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasksPanel_pt_BR.properties?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -16,15 +16,14 @@\n # under the License.\n id=Identificador\n name=Nome\n-description=Descri\\u00E7\\u00E3o\n+description=Descri\\u00e7\\u00e3o\n resourceName=Nome do Recurso\n-lastExec=\\u00DAltima Execu\\u00E7\\u00E3o\n-nextExec=Pr\\u00F3xima Execu\\u00E7\\u00E3o\n+lastExec=\\u00daltima Execu\\u00e7\\u00e3o\n+nextExec=Pr\\u00f3xima Execu\\u00e7\\u00e3o\n detail=Detalhe\n delete=Remove\n edit=Alterar\n execute=Executar\n executeDryRun=Executar (Ensaio)\n-create_task=Criar Nova Tarefa\n userTemplate=Usar Template\n-latestExecStatus=\\u00DAltimo Estatus\n+latestExecStatus=\\u00daltimo Estatus"},{"sha":"8d8a90acbcec528248cda387cf6ee26045dbf003","filename":"console/src/test/java/org/apache/syncope/console/AccessTestITCase.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FAccessTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FAccessTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FAccessTestITCase.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -27,18 +27,19 @@ public void clickAround() {\n         selenium.click(\"css=img[alt=\\\"Schema\\\"]\");\n         selenium.waitForPageToLoad(\"30000\");\n \n+        selenium.click(\"//div[@id='tabs']/ul/li[2]/a\");\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"xpath=//div[@id='uschema']/div/div/span/ul/li[2]/a\\\");\",\n                 \"30000\");\n \n         selenium.click(\"//div[@id='uschema']/div/div/span/ul/li[2]/a\");\n         selenium.click(\"//div[@id='uschema']/div/div/span/ul/li[3]/a\");\n \n-        selenium.click(\"//div[@id='tabs']/ul/li[2]/a\");\n+        selenium.click(\"//div[@id='tabs']/ul/li[3]/a\");\n \n         selenium.click(\"//div[@id='mschema']/div/div/span/ul/li[2]/a\");\n         selenium.click(\"//div[@id='mschema']/div/div/span/ul/li[3]/a\");\n \n-        selenium.click(\"//div[@id='tabs']/ul/li[3]/a\");\n+        selenium.click(\"//div[@id='tabs']/ul/li[4]/a\");\n \n         selenium.click(\"//div[@id='rschema']/div/div/span/ul/li[2]/a\");\n         selenium.click(\"//div[@id='rschema']/div/div/span/ul/li[3]/a\");"},{"sha":"e9c42075206bad86cebc934b2e3009b189c8da5a","filename":"console/src/test/java/org/apache/syncope/console/ConfigurationTestITCase.java","status":"modified","additions":8,"deletions":64,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -23,42 +23,17 @@\n public class ConfigurationTestITCase extends AbstractTest {\n \n     @Test\n-    public void browseCreateModal() {\n+    public void editParameters() {\n         selenium.click(\"css=img[alt=\\\"Configuration\\\"]\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//a[contains(text(),'Create new configuration')]\");\n-\n-        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//input[@name='key:textField']\\\");\", \"30000\");\n-\n-        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//iframe\\\");\", \"30000\");\n-        selenium.selectFrame(\"index=0\");\n-\n-        selenium.type(\"name=key:textField\", \"test1\");\n-        selenium.type(\"name=value:textField\", \"value1\");\n-        selenium.click(\"name=apply\");\n-\n-        seleniumDriver.switchTo().defaultContent();\n+        selenium.click(\"//span[contains(text(), 'log.lastlogindate')]/../../div[2]/span/input\");\n+        selenium.click(\"//div[@id='parameters']/form/a\");\n \n         selenium.waitForCondition(\"selenium.isTextPresent(\\\"Operation executed successfully\\\");\", \"30000\");\n     }\n \n-    @Test\n-    public void browseEditModal() {\n-        selenium.click(\"css=img[alt=\\\"Configuration\\\"]\");\n-\n-        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n-\n-        selenium.click(\"//tr/td[3]/div/span[12]/a\");\n-\n-        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//input[@name='key:textField']\\\");\", \"30000\");\n-\n-        assertEquals(\"authentication.statuses\", selenium.getAttribute(\"//input[@name='key:textField']@value\"));\n-\n-        selenium.click(\"css=a.w_close\");\n-    }\n-\n     @Test\n     public void browsePasswordPolicy() {\n         selenium.click(\"css=img[alt=\\\"Configuration\\\"]\");\n@@ -92,19 +67,6 @@ public void browseWorkflowDef() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='workflow']/div/span/img\\\");\", \"30000\");\n     }\n \n-    @Test\n-    public void delete() {\n-        selenium.click(\"css=img[alt=\\\"Configuration\\\"]\");\n-\n-        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n-\n-        selenium.click(\"//tr[3]/td[3]/div/span[14]/a\");\n-\n-        assertTrue(selenium.getConfirmation().equals(\"Do you really want to delete the selected item(s)?\"));\n-\n-        selenium.waitForCondition(\"selenium.isTextPresent(\" + \"\\\"Operation executed successfully\\\");\", \"30000\");\n-    }\n-\n     @Test\n     public void setLogLevel() {\n         selenium.click(\"css=img[alt=\\\"Configuration\\\"]\");\n@@ -126,7 +88,7 @@ public void createNotification() {\n \n         selenium.click(\"//div[@id='tabs']/ul/li[3]/a\");\n \n-        selenium.click(\"//a[contains(text(),'Create new notification')]\");\n+        selenium.click(\"//div[@id='notifications']/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//div[2]/form/div[3]/div/div/div/div/label\\\");\", \"30000\");\n@@ -211,7 +173,7 @@ public void createDisabledNotification() {\n \n         selenium.click(\"//div[@id='tabs']/ul/li[3]/a\");\n \n-        selenium.click(\"//a[contains(text(),'Create new notification')]\");\n+        selenium.click(\"//div[@id='notifications']/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//div[2]/form/div[3]/div/div/div/div/label\\\");\", \"30000\");\n@@ -291,24 +253,6 @@ public void createDisabledNotification() {\n         seleniumDriver.switchTo().defaultContent();\n     }\n \n-    @Test\n-    public void issueSYNCOPE189() {\n-        selenium.click(\"css=img[alt=\\\"Configuration\\\"]\");\n-\n-        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n-\n-        selenium.click(\"//a[contains(text(),'Create new configuration')]\");\n-\n-        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//input[@name='key:textField']\\\");\", \"30000\");\n-\n-        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//iframe\\\");\", \"30000\");\n-        selenium.selectFrame(\"index=0\");\n-\n-        selenium.keyPressNative(\"27\");\n-\n-        seleniumDriver.switchTo().defaultContent();\n-    }\n-\n     @Test\n     public void issueSYNCOPE446() {\n         selenium.click(\"css=img[alt=\\\"Configuration\\\"]\");\n@@ -317,7 +261,7 @@ public void issueSYNCOPE446() {\n \n         selenium.click(\"//div[@id='tabs']/ul/li[3]/a\");\n \n-        selenium.click(\"//a[contains(text(),'Create new notification')]\");\n+        selenium.click(\"//div[@id='notifications']/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//div[2]/form/div[3]/div/div/div/div/label\\\");\", \"30000\");\n@@ -390,9 +334,9 @@ public void issueSYNCOPE446() {\n         selenium.select(\n                 \"//select[@name='aboutContainer:roleAbout:searchFormContainer:searchView:0:property']\",\n                 \"label=ROLE_CREATE\");\n-        \n+\n         selenium.click(\"//div[2]/form/div[3]/ul/li[4]/a/span\");\n-        \n+\n         selenium.click(\"//input[@name='recipientsContainer:checkRecipients:checkboxField']\");\n \n         selenium.type("},{"sha":"15bcd71dd2bbe613e53ffbff16024bcc1960f86c","filename":"console/src/test/java/org/apache/syncope/console/SchemaTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSchemaTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSchemaTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FSchemaTestITCase.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -28,7 +28,7 @@ public void create() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//div[@id='tabs']/ul/li[3]/a\");\n+        selenium.click(\"//div[@id='tabs']/ul/li[4]/a\");\n         selenium.click(\"//div[@id='rschema']/div/div/div/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//*[@id='_wicket_window_0']\\\");\", \"30000\");"},{"sha":"8708175377c38b80a10a7f7e1115157e9241034e","filename":"console/src/test/java/org/apache/syncope/console/TaskTestITCase.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FTaskTestITCase.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -79,7 +79,7 @@ public void issueSYNCOPE148() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[@id='tabs']/ul/li[3]/a/span\");\n-        selenium.click(\"//a[contains(text(),'Create new task')]\");\n+        selenium.click(\"//a[contains(text(),'Create')]\");\n \n         selenium.waitForCondition(\n                 \"selenium.isElementPresent(\\\"//div[2]/form/div[2]/div/div/span/div/div[2]/div/label\\\");\", \"30000\");\n@@ -102,8 +102,7 @@ public void issueSYNCOPE473() {\n         selenium.click(\"//div[@id='tabs']/ul/li[5]/a/span\");\n         selenium.click(\"//div[5]/span/a\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//iframe\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//iframe\\\");\", \"30000\");\n \n         selenium.selectFrame(\"index=0\");\n "},{"sha":"5a72f9ad5f550d8078d5c9a643a651bd9b94a7af","filename":"console/src/test/java/org/apache/syncope/console/UserTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FUserTestITCase.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -29,7 +29,7 @@ public void browseCreateModal() {\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n-        selenium.click(\"//a[contains(text(),'Create new user')]\");\n+        selenium.click(\"//div[@id='tabs-1']/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\\\"//iframe\\\");\", \"30000\");\n         selenium.selectFrame(\"index=0\");"},{"sha":"98684399be8af81916615e142519650fc4a5ff35","filename":"core/src/main/java/org/apache/syncope/core/init/ContentUpgrader.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FContentUpgrader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FContentUpgrader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FContentUpgrader.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -34,7 +34,7 @@\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.Policy;\n import org.apache.syncope.core.persistence.beans.SyncTask;\n-import org.apache.syncope.core.persistence.beans.SyncopeConf;\n+import org.apache.syncope.core.persistence.beans.conf.CAttr;\n import org.apache.syncope.core.persistence.dao.ConfDAO;\n import org.apache.syncope.core.persistence.dao.ConnInstanceDAO;\n import org.apache.syncope.core.persistence.dao.NotificationDAO;\n@@ -110,9 +110,9 @@ private String upgradeSyncopeConf() {\n             throw new IllegalArgumentException(\"No local ConnId location was found, aborting\");\n         }\n \n-        SyncopeConf cipher = confDAO.find(\"password.cipher.algorithm\");\n-        if (\"MD5\".equals(cipher.getValue())) {\n-            cipher.setValue(CipherAlgorithm.SMD5.name());\n+        CAttr cipher = confDAO.find(\"password.cipher.algorithm\", CipherAlgorithm.AES.name());\n+        if (\"MD5\".equals(cipher.getValuesAsStrings().get(0))) {\n+            cipher.getValues().get(0).setStringValue(CipherAlgorithm.SMD5.name());\n         }\n \n         return localConnIdLocation.toString();"},{"sha":"894ed5383cdf728b80e251a2d62ba1355c991eed","filename":"core/src/main/java/org/apache/syncope/core/init/JobInstanceLoader.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -33,6 +33,7 @@\n import org.apache.syncope.core.persistence.beans.SchedTask;\n import org.apache.syncope.core.persistence.beans.SyncTask;\n import org.apache.syncope.core.persistence.beans.Task;\n+import org.apache.syncope.core.persistence.beans.conf.CAttr;\n import org.apache.syncope.core.persistence.dao.ConfDAO;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.apache.syncope.core.persistence.dao.ReportDAO;\n@@ -259,16 +260,15 @@ public void load() {\n         }\n \n         // 2. NotificationJob\n-        final String notificationJobCronExp =\n-                confDAO.find(\"notificationjob.cronExpression\", NotificationJob.DEFAULT_CRON_EXP).getValue();\n-        if (StringUtils.isBlank(notificationJobCronExp)) {\n+        CAttr notificationJobCronExp = confDAO.find(\"notificationjob.cronExpression\", NotificationJob.DEFAULT_CRON_EXP);\n+        if (StringUtils.isBlank(notificationJobCronExp.getValuesAsStrings().get(0))) {\n             LOG.debug(\"Empty value provided for NotificationJob's cron, not registering anything on Quartz\");\n         } else {\n             LOG.debug(\"NotificationJob's cron expression: {} - registering Quartz job and trigger\",\n                     notificationJobCronExp);\n \n             try {\n-                registerJob(null, NotificationJob.class.getName(), notificationJobCronExp);\n+                registerJob(null, NotificationJob.class.getName(), notificationJobCronExp.getValuesAsStrings().get(0));\n             } catch (Exception e) {\n                 LOG.error(\"While loading NotificationJob instance\", e);\n             }"},{"sha":"e2a70d3e43a4a2f77ad0398c6ca108e8889d80b7","filename":"core/src/main/java/org/apache/syncope/core/notification/NotificationJob.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationJob.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -89,7 +89,7 @@ enum Status {\n \n     private void init() {\n         try {\n-            maxRetries = Long.valueOf(confDAO.find(\"notification.maxRetries\", \"0\").getValue());\n+            maxRetries = confDAO.find(\"notification.maxRetries\", \"0\").getValues().get(0).getLongValue();\n         } catch (NumberFormatException e) {\n             LOG.error(\"Invalid maximum number of retries, retries disabled\", e);\n             maxRetries = 0;\n@@ -106,7 +106,7 @@ public TaskExec executeSingle(final NotificationTask task) {\n         boolean retryPossible = true;\n \n         if (StringUtils.isBlank(task.getSubject()) || task.getRecipients().isEmpty()\n-            || StringUtils.isBlank(task.getHtmlBody()) || StringUtils.isBlank(task.getTextBody())) {\n+                || StringUtils.isBlank(task.getHtmlBody()) || StringUtils.isBlank(task.getTextBody())) {\n \n             String message = \"Could not fetch all required information for sending e-mails:\\n\"\n                     + task.getRecipients() + \"\\n\"\n@@ -149,10 +149,10 @@ public TaskExec executeSingle(final NotificationTask task) {\n                     switch (task.getTraceLevel()) {\n                         case ALL:\n                             report.append(\"FROM: \").append(task.getSender()).append('\\n').\n-                                append(\"TO: \").append(to).append('\\n').\n-                                append(\"SUBJECT: \").append(task.getSubject()).append('\\n').append('\\n').\n-                                append(task.getTextBody()).append('\\n').append('\\n').\n-                                append(task.getHtmlBody()).append('\\n');\n+                                    append(\"TO: \").append(to).append('\\n').\n+                                    append(\"SUBJECT: \").append(task.getSubject()).append('\\n').append('\\n').\n+                                    append(task.getTextBody()).append('\\n').append('\\n').\n+                                    append(task.getHtmlBody()).append('\\n');\n                             break;\n \n                         case SUMMARY:"},{"sha":"8e08be0c1c146c81565cd28bd3724a575892e741","filename":"core/src/main/java/org/apache/syncope/core/notification/NotificationManager.java","status":"modified","additions":32,"deletions":33,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -26,31 +26,32 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n-\n import org.apache.syncope.common.SyncopeConstants;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.AuditElements;\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.IntMappingType;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.common.util.LoggerEventUtils;\n import org.apache.syncope.core.connid.ConnObjectUtil;\n+import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n+import org.apache.syncope.core.persistence.beans.AbstractSubject;\n import org.apache.syncope.core.persistence.beans.Notification;\n import org.apache.syncope.core.persistence.beans.NotificationTask;\n-import org.apache.syncope.core.persistence.beans.SyncopeConf;\n import org.apache.syncope.core.persistence.beans.TaskExec;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.beans.user.UAttr;\n import org.apache.syncope.core.persistence.beans.user.UDerAttr;\n import org.apache.syncope.core.persistence.beans.user.UVirAttr;\n-import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n import org.apache.syncope.core.persistence.dao.ConfDAO;\n import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n import org.apache.syncope.core.persistence.dao.NotificationDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n+import org.apache.syncope.core.persistence.dao.SubjectSearchDAO;\n import org.apache.syncope.core.persistence.dao.TaskDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\n@@ -74,7 +75,7 @@\n  *\n  * @see NotificationTask\n  */\n-@Transactional(rollbackFor = {Throwable.class})\n+@Transactional(rollbackFor = { Throwable.class })\n public class NotificationManager {\n \n     /**\n@@ -122,7 +123,7 @@ public class NotificationManager {\n      * User Search DAO.\n      */\n     @Autowired\n-    private AttributableSearchDAO searchDAO;\n+    private SubjectSearchDAO searchDAO;\n \n     /**\n      * Task DAO.\n@@ -172,7 +173,7 @@ private NotificationTask getNotificationTask(\n         if (notification.getRecipients() != null) {\n             recipients.addAll(searchDAO.<SyncopeUser>search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n                     SearchCondConverter.convert(notification.getRecipients()),\n-                    Collections.<OrderByClause>emptyList(), AttributableUtil.getInstance(AttributableType.USER)));\n+                    Collections.<OrderByClause>emptyList(), SubjectType.USER));\n         }\n \n         if (notification.isSelfAsRecipient() && attributable instanceof SyncopeUser) {\n@@ -258,24 +259,24 @@ public void createTasks(\n             final Object output,\n             final Object... input) {\n \n-        AttributableType attributableType = null;\n-        AbstractAttributable attributable = null;\n+        SubjectType subjectType = null;\n+        AbstractSubject subject = null;\n \n         if (before instanceof UserTO) {\n-            attributableType = AttributableType.USER;\n-            attributable = userDAO.find(((UserTO) before).getId());\n+            subjectType = SubjectType.USER;\n+            subject = userDAO.find(((UserTO) before).getId());\n         } else if (output instanceof UserTO) {\n-            attributableType = AttributableType.USER;\n-            attributable = userDAO.find(((UserTO) output).getId());\n+            subjectType = SubjectType.USER;\n+            subject = userDAO.find(((UserTO) output).getId());\n         } else if (before instanceof RoleTO) {\n-            attributableType = AttributableType.ROLE;\n-            attributable = roleDAO.find(((RoleTO) before).getId());\n+            subjectType = SubjectType.ROLE;\n+            subject = roleDAO.find(((RoleTO) before).getId());\n         } else if (output instanceof RoleTO) {\n-            attributableType = AttributableType.ROLE;\n-            attributable = roleDAO.find(((RoleTO) output).getId());\n+            subjectType = SubjectType.ROLE;\n+            subject = roleDAO.find(((RoleTO) output).getId());\n         }\n \n-        LOG.debug(\"Search notification for [{}]{}\", attributableType, attributable);\n+        LOG.debug(\"Search notification for [{}]{}\", subjectType, subject);\n \n         for (Notification notification : notificationDAO.findAll()) {\n             LOG.debug(\"Notification available user about {}\", notification.getUserAbout());\n@@ -287,17 +288,15 @@ public void createTasks(\n                         type, category, subcategory, event, condition)));\n \n                 if (events.isEmpty()) {\n-                    LOG.debug(\"No events found about {}\", attributable);\n-                } else if (attributableType == null || attributable == null\n+                    LOG.debug(\"No events found about {}\", subject);\n+                } else if (subjectType == null || subject == null\n                         || notification.getUserAbout() == null || notification.getRoleAbout() == null\n-                        || searchDAO.matches(attributable,\n-                                SearchCondConverter.convert(notification.getUserAbout()),\n-                                AttributableUtil.getInstance(attributableType))\n-                        || searchDAO.matches(attributable,\n-                                SearchCondConverter.convert(notification.getRoleAbout()),\n-                                AttributableUtil.getInstance(attributableType))) {\n+                        || searchDAO.matches(subject,\n+                                SearchCondConverter.convert(notification.getUserAbout()), subjectType)\n+                        || searchDAO.matches(subject,\n+                                SearchCondConverter.convert(notification.getRoleAbout()), subjectType)) {\n \n-                    LOG.debug(\"Creating notification task for events {} about {}\", events, attributable);\n+                    LOG.debug(\"Creating notification task for events {} about {}\", events, subject);\n \n                     final Map<String, Object> model = new HashMap<String, Object>();\n                     model.put(\"type\", type);\n@@ -309,13 +308,13 @@ public void createTasks(\n                     model.put(\"output\", output);\n                     model.put(\"input\", input);\n \n-                    if (attributable instanceof SyncopeUser) {\n-                        model.put(\"user\", userDataBinder.getUserTO((SyncopeUser) attributable));\n-                    } else if (attributable instanceof SyncopeRole) {\n-                        model.put(\"role\", roleDataBinder.getRoleTO((SyncopeRole) attributable));\n+                    if (subject instanceof SyncopeUser) {\n+                        model.put(\"user\", userDataBinder.getUserTO((SyncopeUser) subject));\n+                    } else if (subject instanceof SyncopeRole) {\n+                        model.put(\"role\", roleDataBinder.getRoleTO((SyncopeRole) subject));\n                     }\n \n-                    taskDAO.save(getNotificationTask(notification, attributable, model));\n+                    taskDAO.save(getNotificationTask(notification, subject, model));\n                 }\n             } else {\n                 LOG.debug(\"Notification {}, userAbout {}, roleAbout {} is deactivated, \"\n@@ -414,8 +413,8 @@ public long countExecutionsWithStatus(final Long taskId, final String status) {\n \n     protected Map<String, String> findAllSyncopeConfs() {\n         Map<String, String> syncopeConfMap = new HashMap<String, String>();\n-        for (SyncopeConf conf : confDAO.findAll()) {\n-            syncopeConfMap.put(conf.getKey(), conf.getValue());\n+        for (AbstractAttr attr : confDAO.get().getAttrs()) {\n+            syncopeConfMap.put(attr.getSchema().getName(), attr.getValuesAsStrings().get(0));\n         }\n         return syncopeConfMap;\n     }"},{"sha":"b63b85c8e6f56b225aa6b0c70018ef0daabed24e","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/SyncopeConf.java","status":"removed","additions":0,"deletions":54,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e47448acfc5d1504a603242d1a9181cec73d780/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e47448acfc5d1504a603242d1a9181cec73d780/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeConf.java?ref=0e47448acfc5d1504a603242d1a9181cec73d780","patch":"@@ -1,54 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.beans;\n-\n-import javax.persistence.Column;\n-import javax.persistence.Entity;\n-import javax.persistence.Id;\n-import org.apache.syncope.core.persistence.validation.entity.SyncopeConfCheck;\n-\n-@Entity\n-@SyncopeConfCheck\n-public class SyncopeConf extends AbstractBaseBean {\n-\n-    private static final long serialVersionUID = -899341077670090120L;\n-\n-    @Id\n-    @Column(name = \"confKey\")\n-    private String key;\n-\n-    @Column(name = \"confValue\")\n-    private String value;\n-\n-    public String getKey() {\n-        return key;\n-    }\n-\n-    public void setKey(final String key) {\n-        this.key = key;\n-    }\n-\n-    public String getValue() {\n-        return value;\n-    }\n-\n-    public void setValue(final String value) {\n-        this.value = value;\n-    }\n-}"},{"sha":"bd9f3b8e37680ea1b47e620427616b2c4c326675","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/conf/CAttr.java","status":"added","additions":153,"deletions":0,"changes":153,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fconf%2FCAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fconf%2FCAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fconf%2FCAttr.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -0,0 +1,153 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.beans.conf;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.persistence.CascadeType;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.OneToMany;\n+import javax.persistence.OneToOne;\n+import javax.validation.Valid;\n+import org.apache.syncope.core.persistence.beans.AbstractAttr;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n+import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n+\n+/**\n+ * User attribute.\n+ */\n+@Entity\n+public class CAttr extends AbstractAttr {\n+\n+    private static final long serialVersionUID = 6333601983691157406L;\n+\n+    /**\n+     * Auto-generated id for this table.\n+     */\n+    @Id\n+    private Long id;\n+\n+    /**\n+     * The owner of this attribute.\n+     */\n+    @ManyToOne(fetch = FetchType.EAGER)\n+    private SyncopeConf owner;\n+\n+    /**\n+     * The schema of this attribute.\n+     */\n+    @ManyToOne(fetch = FetchType.EAGER)\n+    @JoinColumn(name = \"schema_name\")\n+    private CSchema schema;\n+\n+    /**\n+     * Values of this attribute (if schema is not UNIQUE).\n+     */\n+    @OneToMany(cascade = CascadeType.MERGE, orphanRemoval = true, mappedBy = \"attribute\")\n+    @Valid\n+    private List<CAttrValue> values;\n+\n+    /**\n+     * Value of this attribute (if schema is UNIQUE).\n+     */\n+    @OneToOne(cascade = CascadeType.ALL, mappedBy = \"attribute\")\n+    @Valid\n+    private CAttrUniqueValue uniqueValue;\n+\n+    /**\n+     * Default constructor.\n+     */\n+    public CAttr() {\n+        super();\n+        values = new ArrayList<CAttrValue>();\n+    }\n+\n+    @Override\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public <T extends AbstractAttributable> T getOwner() {\n+        return (T) owner;\n+    }\n+\n+    @Override\n+    public <T extends AbstractAttributable> void setOwner(final T owner) {\n+        if (!(owner instanceof SyncopeConf)) {\n+            throw new ClassCastException(\"owner is expected to be typed SyncopeConf: \" + owner.getClass().getName());\n+        }\n+        this.owner = (SyncopeConf) owner;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public <T extends AbstractNormalSchema> T getSchema() {\n+        return (T) schema;\n+    }\n+\n+    public void setSchema(final CSchema schema) {\n+        this.schema = schema;\n+    }\n+\n+    @Override\n+    public <T extends AbstractAttrValue> boolean addValue(final T attributeValue) {\n+        if (!(attributeValue instanceof CAttrValue)) {\n+            throw new ClassCastException(\"attributeValue is expected to be typed CAttrValue: \" + attributeValue.\n+                    getClass().getName());\n+        }\n+        return values.add((CAttrValue) attributeValue);\n+    }\n+\n+    @Override\n+    public <T extends AbstractAttrValue> boolean removeValue(final T attributeValue) {\n+        if (!(attributeValue instanceof CAttrValue)) {\n+            throw new ClassCastException(\"attributeValue is expected to be typed UAttrValue: \" + attributeValue.\n+                    getClass().getName());\n+        }\n+        return values.remove((CAttrValue) attributeValue);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public <T extends AbstractAttrValue> List<T> getValues() {\n+        return (List<T>) values;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public <T extends AbstractAttrValue> T getUniqueValue() {\n+        return (T) uniqueValue;\n+    }\n+\n+    @Override\n+    public <T extends AbstractAttrValue> void setUniqueValue(final T uniqueAttributeValue) {\n+        if (!(uniqueAttributeValue instanceof CAttrUniqueValue)) {\n+            throw new ClassCastException(\"uniqueAttributeValue is expected to be typed CAttrUniqueValue: \"\n+                    + uniqueAttributeValue.getClass().getName());\n+        }\n+        this.uniqueValue = (CAttrUniqueValue) uniqueAttributeValue;\n+    }\n+}"},{"sha":"700de5fd491b578d319664aaa2c2690361f9f9f9","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/conf/CAttrUniqueValue.java","status":"added","additions":77,"deletions":0,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fconf%2FCAttrUniqueValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fconf%2FCAttrUniqueValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fconf%2FCAttrUniqueValue.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.beans.conf;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.OneToOne;\n+import org.apache.syncope.core.persistence.beans.AbstractAttr;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrUniqueValue;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n+\n+@Entity\n+public class CAttrUniqueValue extends AbstractAttrUniqueValue {\n+\n+    private static final long serialVersionUID = -64080804563305387L;\n+\n+    @Id\n+    private Long id;\n+\n+    @OneToOne(optional = false)\n+    private CAttr attribute;\n+\n+    @ManyToOne(optional = false)\n+    @JoinColumn(name = \"schema_name\")\n+    private CSchema schema;\n+\n+    @Override\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public <T extends AbstractAttr> T getAttribute() {\n+        return (T) attribute;\n+    }\n+\n+    @Override\n+    public <T extends AbstractAttr> void setAttribute(final T attribute) {\n+        if (!(attribute instanceof CAttr)) {\n+            throw new ClassCastException(\"expected type CAttr, found: \" + attribute.getClass().getName());\n+        }\n+        this.attribute = (CAttr) attribute;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public <T extends AbstractNormalSchema> T getSchema() {\n+        return (T) schema;\n+    }\n+\n+    @Override\n+    public <T extends AbstractNormalSchema> void setSchema(final T schema) {\n+        if (!(schema instanceof CSchema)) {\n+            throw new ClassCastException(\"expected type CSchema, found: \" + schema.getClass().getName());\n+        }\n+        this.schema = (CSchema) schema;\n+    }\n+}"},{"sha":"1e39efcfceba957d928102b8d86e7c322ed6f92c","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/conf/CAttrValue.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fconf%2FCAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fconf%2FCAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fconf%2FCAttrValue.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.beans.conf;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.Inheritance;\n+import javax.persistence.InheritanceType;\n+import javax.persistence.ManyToOne;\n+import javax.validation.constraints.NotNull;\n+import org.apache.syncope.core.persistence.beans.AbstractAttr;\n+import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n+\n+@Entity\n+@Inheritance(strategy = InheritanceType.TABLE_PER_CLASS)\n+public class CAttrValue extends AbstractAttrValue {\n+\n+    private static final long serialVersionUID = -6259576015647897446L;\n+\n+    @Id\n+    private Long id;\n+\n+    @ManyToOne\n+    @NotNull\n+    private CAttr attribute;\n+\n+    @Override\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public <T extends AbstractAttr> T getAttribute() {\n+        return (T) attribute;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public <T extends AbstractAttr> void setAttribute(final T attribute) {\n+        if (!(attribute instanceof CAttr)) {\n+            throw new ClassCastException(\"expected type CAttr, found: \" + attribute.getClass().getName());\n+        }\n+        this.attribute = (CAttr) attribute;\n+    }\n+}"},{"sha":"3175a6b77c24b76daa24fd1bc36c1deac1b27ff6","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/conf/CSchema.java","status":"renamed","additions":8,"deletions":17,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fconf%2FCSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fconf%2FCSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fconf%2FCSchema.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -16,25 +16,16 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.validation.entity;\n+package org.apache.syncope.core.persistence.beans.conf;\n \n-import java.lang.annotation.Documented;\n-import java.lang.annotation.ElementType;\n-import java.lang.annotation.Retention;\n-import java.lang.annotation.RetentionPolicy;\n-import java.lang.annotation.Target;\n-import javax.validation.Constraint;\n-import javax.validation.Payload;\n+import javax.persistence.Cacheable;\n+import javax.persistence.Entity;\n+import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n \n-@Target({ElementType.TYPE})\n-@Retention(RetentionPolicy.RUNTIME)\n-@Constraint(validatedBy = SyncopeConfValidator.class)\n-@Documented\n-public @interface SyncopeConfCheck {\n+@Entity\n+@Cacheable\n+public class CSchema extends AbstractNormalSchema {\n \n-    String message() default \"{org.apache.syncope.core.validation.syncopeConf}\";\n+    private static final long serialVersionUID = 3363019039331594433L;\n \n-    Class<?>[] groups() default {};\n-\n-    Class<? extends Payload>[] payload() default {};\n }","previous_filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SyncopeConfCheck.java"},{"sha":"c291706c8e0f93c67adff49a343e92fd67d67576","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/conf/SyncopeConf.java","status":"added","additions":133,"deletions":0,"changes":133,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fconf%2FSyncopeConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fconf%2FSyncopeConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fconf%2FSyncopeConf.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -0,0 +1,133 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.beans.conf;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import javax.persistence.Cacheable;\n+import javax.persistence.CascadeType;\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.OneToMany;\n+import javax.validation.Valid;\n+import org.apache.syncope.core.persistence.beans.AbstractAttr;\n+import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n+import org.apache.syncope.core.persistence.beans.AbstractDerAttr;\n+import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n+\n+@Entity\n+@Cacheable\n+public class SyncopeConf extends AbstractAttributable {\n+\n+    private static final long serialVersionUID = -5281258853142421875L;\n+\n+    @Id\n+    private Long id;\n+\n+    @OneToMany(cascade = CascadeType.ALL, mappedBy = \"owner\")\n+    @Valid\n+    private List<CAttr> attrs;\n+\n+    public SyncopeConf() {\n+        super();\n+\n+        attrs = new ArrayList<CAttr>();\n+    }\n+\n+    @Override\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(final Long id) {\n+        this.id = id;\n+    }\n+\n+    @Override\n+    public <T extends AbstractAttr> boolean addAttr(final T attr) {\n+        if (!(attr instanceof CAttr)) {\n+            throw new ClassCastException(\"attribute is expected to be typed CAttr: \" + attr.getClass().getName());\n+        }\n+        return attrs.add((CAttr) attr);\n+    }\n+\n+    @Override\n+    public <T extends AbstractAttr> boolean removeAttr(final T attr) {\n+        if (!(attr instanceof CAttr)) {\n+            throw new ClassCastException(\"attribute is expected to be typed CAttr: \" + attr.getClass().getName());\n+        }\n+        return attrs.remove((CAttr) attr);\n+    }\n+\n+    @Override\n+    public List<? extends AbstractAttr> getAttrs() {\n+        return attrs;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public void setAttrs(final List<? extends AbstractAttr> attrs) {\n+        this.attrs.clear();\n+        if (attrs != null && !attrs.isEmpty()) {\n+            this.attrs.addAll((List<CAttr>) attrs);\n+        }\n+    }\n+\n+    @Override\n+    public <T extends AbstractDerAttr> boolean addDerAttr(final T derAttr) {\n+        return false;\n+    }\n+\n+    @Override\n+    public <T extends AbstractDerAttr> boolean removeDerAttr(final T derAttr) {\n+        return false;\n+    }\n+\n+    @Override\n+    public List<? extends AbstractDerAttr> getDerAttrs() {\n+        return Collections.emptyList();\n+    }\n+\n+    @Override\n+    public void setDerAttrs(final List<? extends AbstractDerAttr> derAttrs) {\n+        // no support for derived attributes\n+    }\n+\n+    @Override\n+    public <T extends AbstractVirAttr> boolean addVirAttr(final T virAttr) {\n+        return false;\n+    }\n+\n+    @Override\n+    public <T extends AbstractVirAttr> boolean removeVirAttr(final T virAttr) {\n+        return false;\n+    }\n+\n+    @Override\n+    public List<? extends AbstractVirAttr> getVirAttrs() {\n+        return Collections.emptyList();\n+    }\n+\n+    @Override\n+    public void setVirAttrs(final List<? extends AbstractVirAttr> virAttrs) {\n+        // no support for virtual attributes\n+    }\n+\n+}"},{"sha":"561df537ab202996fa6f561492c36080142e834a","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/ConfDAO.java","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConfDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConfDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConfDAO.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -18,20 +18,18 @@\n  */\n package org.apache.syncope.core.persistence.dao;\n \n-import java.util.List;\n-\n-import org.apache.syncope.core.persistence.beans.SyncopeConf;\n-import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n+import org.apache.syncope.core.persistence.beans.conf.CAttr;\n+import org.apache.syncope.core.persistence.beans.conf.SyncopeConf;\n \n public interface ConfDAO extends DAO {\n \n-    SyncopeConf find(String name) throws MissingConfKeyException;\n+    CAttr find(String key);\n \n-    SyncopeConf find(String name, String defaultValue);\n+    CAttr find(String key, String defaultValue);\n \n-    List<SyncopeConf> findAll();\n+    SyncopeConf get();\n \n-    SyncopeConf save(SyncopeConf syncopeConfiguration) throws InvalidEntityException;\n+    SyncopeConf save(CAttr attr);\n \n-    void delete(String name);\n+    SyncopeConf delete(String key);\n }"},{"sha":"ce64072180ce0c511c35374f29c52978997cea08","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/RoleDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -30,7 +30,7 @@\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n \n-public interface RoleDAO extends AttributableDAO {\n+public interface RoleDAO extends SubjectDAO {\n \n     SyncopeRole find(Long id);\n "},{"sha":"1ef372108cfcded821aede5f01d14fc419dabb63","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/SubjectDAO.java","status":"renamed","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSubjectDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSubjectDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSubjectDAO.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -21,20 +21,20 @@\n import java.util.List;\n \n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n-import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n+import org.apache.syncope.core.persistence.beans.AbstractSubject;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.util.AttributableUtil;\n \n-public interface AttributableDAO extends DAO {\n+public interface SubjectDAO extends DAO {\n \n-    <T extends AbstractAttributable> List<T> findByAttrValue(String schemaName,\n+    <T extends AbstractSubject> List<T> findByAttrValue(String schemaName,\n             AbstractAttrValue attrValue, AttributableUtil attrUtil);\n \n-    <T extends AbstractAttributable> AbstractAttributable findByAttrUniqueValue(String schemaName,\n+    <T extends AbstractSubject> T findByAttrUniqueValue(String schemaName,\n             AbstractAttrValue attrUniqueValue, AttributableUtil attrUtil);\n \n-    <T extends AbstractAttributable> List<T> findByDerAttrValue(String schemaName, String value,\n+    <T extends AbstractSubject> List<T> findByDerAttrValue(String schemaName, String value,\n             AttributableUtil attrUtil);\n \n-    <T extends AbstractAttributable> List<T> findByResource(ExternalResource resource, Class<T> reference);\n+    <T extends AbstractSubject> List<T> findByResource(ExternalResource resource, Class<T> reference);\n }","previous_filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/AttributableDAO.java"},{"sha":"686f87eada79d431f42dd8d0540f4a4945e99375","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/SubjectSearchDAO.java","status":"renamed","additions":16,"deletions":18,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSubjectSearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSubjectSearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSubjectSearchDAO.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -20,64 +20,62 @@\n \n import java.util.List;\n import java.util.Set;\n-\n-import org.apache.syncope.core.persistence.dao.search.SearchCond;\n-import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n+import org.apache.syncope.common.types.SubjectType;\n+import org.apache.syncope.core.persistence.beans.AbstractSubject;\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\n-import org.apache.syncope.core.util.AttributableUtil;\n+import org.apache.syncope.core.persistence.dao.search.SearchCond;\n \n-public interface AttributableSearchDAO extends DAO {\n+public interface SubjectSearchDAO extends DAO {\n \n     /**\n      * @param adminRoles the set of admin roles owned by the caller\n      * @param searchCondition the search condition\n-     * @param attrUtil AttributeUtil\n+     * @param type user or role\n      * @return size of search result\n      */\n-    int count(Set<Long> adminRoles, SearchCond searchCondition, AttributableUtil attrUtil);\n+    int count(Set<Long> adminRoles, SearchCond searchCondition, SubjectType type);\n \n     /**\n      * @param adminRoles the set of admin roles owned by the caller\n      * @param searchCondition the search condition\n-     * @param attrUtil AttributeUtil\n+     * @param type user or role\n      * @param <T> user/role\n      * @return the list of users/roles matching the given search condition\n      */\n-    <T extends AbstractAttributable> List<T> search(Set<Long> adminRoles, SearchCond searchCondition,\n-            AttributableUtil attrUtil);\n+    <T extends AbstractSubject> List<T> search(Set<Long> adminRoles, SearchCond searchCondition, SubjectType type);\n \n     /**\n      * @param adminRoles the set of admin roles owned by the caller\n      * @param searchCondition the search condition\n      * @param orderBy list of ordering clauses\n-     * @param attrUtil AttributeUtil\n+     * @param type user or role\n      * @param <T> user/role\n      * @return the list of users/roles matching the given search condition\n      */\n-    <T extends AbstractAttributable> List<T> search(Set<Long> adminRoles, SearchCond searchCondition,\n-            List<OrderByClause> orderBy, AttributableUtil attrUtil);\n+    <T extends AbstractSubject> List<T> search(Set<Long> adminRoles, SearchCond searchCondition,\n+            List<OrderByClause> orderBy, SubjectType type);\n \n     /**\n      * @param adminRoles the set of admin roles owned by the caller\n      * @param searchCondition the search condition\n      * @param page position of the first result, start from 1\n      * @param itemsPerPage number of results per page\n      * @param orderBy list of ordering clauses\n-     * @param attrUtil AttributeUtil\n+     * @param type user or role\n      * @param <T> user/role\n      * @return the list of users/roles matching the given search condition (in the given page)\n      */\n-    <T extends AbstractAttributable> List<T> search(Set<Long> adminRoles, SearchCond searchCondition,\n-            int page, int itemsPerPage, List<OrderByClause> orderBy, AttributableUtil attrUtil);\n+    <T extends AbstractSubject> List<T> search(Set<Long> adminRoles, SearchCond searchCondition,\n+            int page, int itemsPerPage, List<OrderByClause> orderBy, SubjectType type);\n \n     /**\n      * Verify if user/role matches the given search condition.\n      *\n      * @param subject to be checked\n      * @param searchCondition to be verified\n-     * @param attrUtil AttributeUtil\n+     * @param type user or role\n      * @param <T> user/role\n      * @return true if user/role matches searchCondition\n      */\n-    <T extends AbstractAttributable> boolean matches(T subject, SearchCond searchCondition, AttributableUtil attrUtil);\n+    <T extends AbstractSubject> boolean matches(T subject, SearchCond searchCondition, SubjectType type);\n }","previous_filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/AttributableSearchDAO.java"},{"sha":"6e919f009272202388cc4ccb9c60305780b9d24b","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/UserDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserDAO.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -27,7 +27,7 @@\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n \n-public interface UserDAO extends AttributableDAO {\n+public interface UserDAO extends SubjectDAO {\n \n     SyncopeUser find(Long id);\n "},{"sha":"134709428b54783db0d13e72a22892c3a801cc9a","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/AbstractSubjectDAOImpl.java","status":"renamed","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractSubjectDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractSubjectDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractSubjectDAOImpl.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -37,14 +37,15 @@\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractDerSchema;\n import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractSubject;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n-import org.apache.syncope.core.persistence.dao.AttributableDAO;\n+import org.apache.syncope.core.persistence.dao.SubjectDAO;\n import org.apache.syncope.core.persistence.dao.DerSchemaDAO;\n import org.apache.syncope.core.persistence.dao.SchemaDAO;\n import org.apache.syncope.core.util.AttributableUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n \n-public abstract class AbstractAttributableDAOImpl extends AbstractDAOImpl implements AttributableDAO {\n+public abstract class AbstractSubjectDAOImpl extends AbstractDAOImpl implements SubjectDAO {\n \n     @Autowired\n     protected SchemaDAO schemaDAO;\n@@ -80,7 +81,6 @@ private List<String> split(final String attrValue, final List<String> literals)\n      * @param value derived attribute value\n      * @param attrUtil USER / ROLE\n      * @return where clauses to use to build the query\n-     * @throws IllegalArgumentException in case of errors retrieving identifiers\n      */\n     private Set<String> getWhereClause(final String expression, final String value, final AttributableUtil attrUtil) {\n         final Parser parser = new Parser(new StringReader(expression));\n@@ -204,7 +204,7 @@ public int compare(final String t, final String t1) {\n     protected abstract TypedQuery<AbstractAttrValue> findByAttrValueQuery(final String entityName);\n \n     @Override\n-    public <T extends AbstractAttributable> List<T> findByAttrValue(final String schemaName,\n+    public <T extends AbstractSubject> List<T> findByAttrValue(final String schemaName,\n             final AbstractAttrValue attrValue, final AttributableUtil attrUtil) {\n \n         AbstractNormalSchema schema = schemaDAO.find(schemaName, attrUtil.schemaClass());\n@@ -244,7 +244,7 @@ public <T extends AbstractAttributable> List<T> findByAttrValue(final String sch\n     }\n \n     @Override\n-    public <T extends AbstractAttributable> AbstractAttributable findByAttrUniqueValue(final String schemaName,\n+    public <T extends AbstractSubject> T findByAttrUniqueValue(final String schemaName,\n             final AbstractAttrValue attrUniqueValue, final AttributableUtil attrUtil) {\n \n         AbstractNormalSchema schema = schemaDAO.find(schemaName, attrUtil.schemaClass());\n@@ -276,7 +276,7 @@ public <T extends AbstractAttributable> AbstractAttributable findByAttrUniqueVal\n      * @return list of users / roles\n      */\n     @Override\n-    public <T extends AbstractAttributable> List<T> findByDerAttrValue(final String schemaName, final String value,\n+    public <T extends AbstractSubject> List<T> findByDerAttrValue(final String schemaName, final String value,\n             final AttributableUtil attrUtil) {\n \n         AbstractDerSchema schema = derSchemaDAO.find(schemaName, attrUtil.derSchemaClass());\n@@ -323,7 +323,7 @@ public <T extends AbstractAttributable> List<T> findByDerAttrValue(final String\n     }\n \n     @Override\n-    public <T extends AbstractAttributable> List<T> findByResource(final ExternalResource resource,\n+    public <T extends AbstractSubject> List<T> findByResource(final ExternalResource resource,\n             final Class<T> reference) {\n \n         TypedQuery<T> query = entityManager.createQuery(\"SELECT e FROM \" + reference.getSimpleName() + \" e \"","previous_filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/AbstractAttributableDAOImpl.java"},{"sha":"ef7a012c29438603eb1f436d2140e0d103d14bbd","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/ConfDAOImpl.java","status":"modified","additions":44,"deletions":26,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConfDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConfDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FConfDAOImpl.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -18,56 +18,74 @@\n  */\n package org.apache.syncope.core.persistence.dao.impl;\n \n-import java.util.List;\n-import javax.persistence.TypedQuery;\n-import org.apache.syncope.core.persistence.beans.SyncopeConf;\n+import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.core.persistence.beans.conf.CAttr;\n+import org.apache.syncope.core.persistence.beans.conf.CSchema;\n+import org.apache.syncope.core.persistence.beans.conf.SyncopeConf;\n import org.apache.syncope.core.persistence.dao.ConfDAO;\n-import org.apache.syncope.core.persistence.dao.MissingConfKeyException;\n+import org.apache.syncope.core.persistence.dao.SchemaDAO;\n+import org.apache.syncope.core.util.AttributableUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n \n @Repository\n public class ConfDAOImpl extends AbstractDAOImpl implements ConfDAO {\n \n+    @Autowired\n+    private SchemaDAO schemaDAO;\n+\n+    @Transactional(readOnly = true)\n+    @Override\n+    public CAttr find(final String key) {\n+        return get().getAttr(key);\n+    }\n+\n+    @Transactional(readOnly = true)\n     @Override\n-    public SyncopeConf find(final String name) throws MissingConfKeyException {\n-        SyncopeConf result = find(name, null);\n+    public CAttr find(final String key, final String defaultValue) {\n+        CAttr result = get().getAttr(key);\n         if (result == null) {\n-            throw new MissingConfKeyException(name);\n+            result = new CAttr();\n+            result.setSchema(schemaDAO.find(key, CSchema.class));\n+\n+            result.addValue(defaultValue, AttributableUtil.getInstance(AttributableType.CONFIGURATION));\n         }\n \n         return result;\n     }\n \n     @Override\n-    public SyncopeConf find(final String name, final String defaultValue) {\n-        SyncopeConf syncopeConf = entityManager.find(SyncopeConf.class, name);\n+    public SyncopeConf get() {\n+        SyncopeConf instance = entityManager.find(SyncopeConf.class, 1L);\n+        if (instance == null) {\n+            instance = new SyncopeConf();\n+            instance.setId(1L);\n \n-        if (syncopeConf == null && defaultValue != null) {\n-            syncopeConf = new SyncopeConf();\n-            syncopeConf.setKey(name);\n-            syncopeConf.setValue(defaultValue);\n+            instance = entityManager.merge(instance);\n         }\n \n-        return syncopeConf;\n+        return instance;\n     }\n \n     @Override\n-    public List<SyncopeConf> findAll() {\n-        TypedQuery<SyncopeConf> query = entityManager.createQuery(\"SELECT e FROM SyncopeConf e\", SyncopeConf.class);\n-        return query.getResultList();\n-    }\n+    public SyncopeConf save(final CAttr attr) {\n+        delete(attr.getSchema().getName());\n \n-    @Override\n-    public SyncopeConf save(final SyncopeConf syncopeConfiguration) {\n-        return entityManager.merge(syncopeConfiguration);\n+        SyncopeConf instance = get();\n+        instance.addAttr(attr);\n+        return entityManager.merge(instance);\n     }\n \n     @Override\n-    public void delete(final String name) {\n-        try {\n-            entityManager.remove(find(name));\n-        } catch (MissingConfKeyException e) {\n-            LOG.error(\"Could not find configuration key '\" + name + \"'\");\n+    public SyncopeConf delete(final String key) {\n+        SyncopeConf instance = get();\n+        CAttr attr = instance.getAttr(key);\n+        if (attr != null) {\n+            instance.removeAttr(attr);\n+            instance = entityManager.merge(instance);\n         }\n+\n+        return instance;\n     }\n }"},{"sha":"f1f69d932380a9664eed5831781fc6da30e62969","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/ContentLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FContentLoader.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -22,7 +22,7 @@\n import javax.xml.parsers.SAXParser;\n import javax.xml.parsers.SAXParserFactory;\n import org.apache.commons.io.IOUtils;\n-import org.apache.syncope.core.persistence.beans.SyncopeConf;\n+import org.apache.syncope.core.persistence.beans.conf.SyncopeConf;\n import org.apache.syncope.core.util.ContentLoaderHandler;\n import org.springframework.dao.DataAccessException;\n import org.springframework.jdbc.core.JdbcTemplate;"},{"sha":"d094ac74e903b2416e1e81c0f51a31ef7ceceee8","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/RoleDAOImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -68,7 +68,7 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Repository\n-public class RoleDAOImpl extends AbstractAttributableDAOImpl implements RoleDAO {\n+public class RoleDAOImpl extends AbstractSubjectDAOImpl implements RoleDAO {\n \n     @Autowired\n     private UserDAO userDAO;"},{"sha":"f3ce185b84660c9c6168bbce86b58eb8a5bbef47","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/SearchSupport.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSearchSupport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSearchSupport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSearchSupport.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -20,9 +20,8 @@\n \n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.AttributeSchemaType;\n-import org.apache.syncope.core.util.AttributableUtil;\n+import org.apache.syncope.common.types.SubjectType;\n \n class SearchSupport {\n \n@@ -48,10 +47,10 @@ public int hashCode() {\n         }\n     }\n \n-    private final AttributableType type;\n+    private final SubjectType type;\n \n-    public SearchSupport(final AttributableUtil attrUtil) {\n-        this.type = attrUtil.getType();\n+    public SearchSupport(final SubjectType type) {\n+        this.type = type;\n     }\n \n     public String fieldName(final AttributeSchemaType type) {\n@@ -91,15 +90,13 @@ public SearchView field() {\n \n         switch (type) {\n             case USER:\n+            default:\n                 result = \"user_search\";\n                 break;\n \n             case ROLE:\n                 result = \"role_search\";\n                 break;\n-\n-            case MEMBERSHIP:\n-            default:\n         }\n \n         return new SearchView(\"sv\", result);"},{"sha":"5d0f2f04708685c5443d957ed47ceb8032f01710","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/SubjectSearchDAOImpl.java","status":"renamed","additions":81,"deletions":76,"changes":157,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSubjectSearchDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSubjectSearchDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FSubjectSearchDAOImpl.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -32,16 +32,16 @@\n import javax.validation.constraints.Max;\n import javax.validation.constraints.Min;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.AttributeSchemaType;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n-import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n-import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n+import org.apache.syncope.core.persistence.beans.AbstractSubject;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.SchemaDAO;\n+import org.apache.syncope.core.persistence.dao.SubjectSearchDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n-import org.apache.syncope.core.persistence.dao.search.AttributableCond;\n+import org.apache.syncope.core.persistence.dao.search.SubjectCond;\n import org.apache.syncope.core.persistence.dao.search.AttributeCond;\n import org.apache.syncope.core.persistence.dao.search.EntitlementCond;\n import org.apache.syncope.core.persistence.dao.search.MembershipCond;\n@@ -55,7 +55,7 @@\n import org.springframework.util.ReflectionUtils;\n \n @Repository\n-public class AttributableSearchDAOImpl extends AbstractDAOImpl implements AttributableSearchDAO {\n+public class SubjectSearchDAOImpl extends AbstractDAOImpl implements SubjectSearchDAO {\n \n     private static final String EMPTY_ATTR_QUERY = \"SELECT subject_id FROM user_search_attr WHERE 1=2\";\n \n@@ -68,17 +68,17 @@ public class AttributableSearchDAOImpl extends AbstractDAOImpl implements Attrib\n     @Autowired\n     private SchemaDAO schemaDAO;\n \n-    private String getAdminRolesFilter(final Set<Long> adminRoles, final AttributableUtil attrUtil) {\n+    private String getAdminRolesFilter(final Set<Long> adminRoles, final SubjectType type) {\n         final StringBuilder adminRolesFilter = new StringBuilder();\n \n-        if (attrUtil.getType() == AttributableType.USER) {\n+        if (type == SubjectType.USER) {\n             adminRolesFilter.append(\"SELECT syncopeUser_id AS subject_id FROM Membership M1 WHERE syncopeRole_id IN (\").\n                     append(\"SELECT syncopeRole_id FROM Membership M2 WHERE M2.syncopeUser_id=M1.syncopeUser_id \").\n                     append(\"AND syncopeRole_id NOT IN (\");\n         }\n \n         adminRolesFilter.append(\"SELECT id AS \").\n-                append(attrUtil.getType() == AttributableType.USER ? \"syncopeRole\" : \"subject\").\n+                append(type == SubjectType.USER ? \"syncopeRole\" : \"subject\").\n                 append(\"_id FROM SyncopeRole\");\n \n         boolean firstRole = true;\n@@ -88,31 +88,30 @@ private String getAdminRolesFilter(final Set<Long> adminRoles, final Attributabl\n                 adminRolesFilter.append(\" WHERE\");\n                 firstRole = false;\n             } else {\n-                adminRolesFilter.append(attrUtil.getType() == AttributableType.USER ? \" OR\" : \" AND\");\n+                adminRolesFilter.append(type == SubjectType.USER ? \" OR\" : \" AND\");\n             }\n-            adminRolesFilter.append(attrUtil.getType() == AttributableType.USER\n-                    ? \" id=\" : \" id <>\").append(adminRoleId);\n+            adminRolesFilter.append(type == SubjectType.USER ? \" id=\" : \" id <>\").append(adminRoleId);\n         }\n \n-        if (attrUtil.getType() == AttributableType.USER) {\n+        if (type == SubjectType.USER) {\n             adminRolesFilter.append(\"))\");\n         }\n \n         return adminRolesFilter.toString();\n     }\n \n     @Override\n-    public int count(final Set<Long> adminRoles, final SearchCond searchCondition, final AttributableUtil attrUtil) {\n+    public int count(final Set<Long> adminRoles, final SearchCond searchCondition, final SubjectType type) {\n         List<Object> parameters = Collections.synchronizedList(new ArrayList<Object>());\n \n         // 1. get the query string from the search condition\n-        SearchSupport svs = new SearchSupport(attrUtil);\n-        StringBuilder queryString = getQuery(searchCondition, parameters, attrUtil, svs);\n+        SearchSupport svs = new SearchSupport(type);\n+        StringBuilder queryString = getQuery(searchCondition, parameters, type, svs);\n \n         // 2. take into account administrative roles\n         queryString.insert(0, \"SELECT u.subject_id FROM (\");\n         queryString.append(\") u WHERE subject_id NOT IN (\");\n-        queryString.append(getAdminRolesFilter(adminRoles, attrUtil)).append(')');\n+        queryString.append(getAdminRolesFilter(adminRoles, type)).append(')');\n \n         // 3. prepare the COUNT query\n         queryString.insert(0, \"SELECT COUNT(subject_id) FROM (\");\n@@ -130,23 +129,23 @@ public int count(final Set<Long> adminRoles, final SearchCond searchCondition, f\n     }\n \n     @Override\n-    public <T extends AbstractAttributable> List<T> search(final Set<Long> adminRoles, final SearchCond searchCondition,\n-            final AttributableUtil attrUtil) {\n+    public <T extends AbstractSubject> List<T> search(final Set<Long> adminRoles, final SearchCond searchCondition,\n+            final SubjectType type) {\n \n-        return search(adminRoles, searchCondition, Collections.<OrderByClause>emptyList(), attrUtil);\n+        return search(adminRoles, searchCondition, Collections.<OrderByClause>emptyList(), type);\n     }\n \n     @Override\n-    public <T extends AbstractAttributable> List<T> search(final Set<Long> adminRoles, final SearchCond searchCondition,\n-            final List<OrderByClause> orderBy, final AttributableUtil attrUtil) {\n+    public <T extends AbstractSubject> List<T> search(final Set<Long> adminRoles, final SearchCond searchCondition,\n+            final List<OrderByClause> orderBy, final SubjectType type) {\n \n-        return search(adminRoles, searchCondition, -1, -1, orderBy, attrUtil);\n+        return search(adminRoles, searchCondition, -1, -1, orderBy, type);\n     }\n \n     @Override\n-    public <T extends AbstractAttributable> List<T> search(final Set<Long> adminRoles, final SearchCond searchCondition,\n+    public <T extends AbstractSubject> List<T> search(final Set<Long> adminRoles, final SearchCond searchCondition,\n             final int page, final int itemsPerPage, final List<OrderByClause> orderBy,\n-            final AttributableUtil attrUtil) {\n+            final SubjectType type) {\n \n         List<T> result = Collections.<T>emptyList();\n \n@@ -155,9 +154,9 @@ public <T extends AbstractAttributable> List<T> search(final Set<Long> adminRole\n \n             if (searchCondition != null && searchCondition.isValid()) {\n                 try {\n-                    result = doSearch(adminRoles, searchCondition, page, itemsPerPage, orderBy, attrUtil);\n+                    result = doSearch(adminRoles, searchCondition, page, itemsPerPage, orderBy, type);\n                 } catch (Exception e) {\n-                    LOG.error(\"While searching for {}\", attrUtil.getType(), e);\n+                    LOG.error(\"While searching for {}\", type, e);\n                 }\n             } else {\n                 LOG.error(\"Invalid search condition:\\n{}\", searchCondition);\n@@ -168,14 +167,14 @@ public <T extends AbstractAttributable> List<T> search(final Set<Long> adminRole\n     }\n \n     @Override\n-    public <T extends AbstractAttributable> boolean matches(final T user, final SearchCond searchCondition,\n-            final AttributableUtil attrUtil) {\n+    public <T extends AbstractSubject> boolean matches(final T subject, final SearchCond searchCondition,\n+            final SubjectType type) {\n \n         List<Object> parameters = Collections.synchronizedList(new ArrayList<Object>());\n \n         // 1. get the query string from the search condition\n-        SearchSupport svs = new SearchSupport(attrUtil);\n-        StringBuilder queryString = getQuery(searchCondition, parameters, attrUtil, svs);\n+        SearchSupport svs = new SearchSupport(type);\n+        StringBuilder queryString = getQuery(searchCondition, parameters, type, svs);\n \n         boolean matches;\n         if (queryString.length() == 0) {\n@@ -184,7 +183,7 @@ public <T extends AbstractAttributable> boolean matches(final T user, final Sear\n         } else {\n             // 2. take into account the passed user\n             queryString.insert(0, \"SELECT u.subject_id FROM (\");\n-            queryString.append(\") u WHERE subject_id=?\").append(setParameter(parameters, user.getId()));\n+            queryString.append(\") u WHERE subject_id=?\").append(setParameter(parameters, subject.getId()));\n \n             // 3. prepare the search query\n             Query query = entityManager.createNativeQuery(queryString.toString());\n@@ -234,7 +233,7 @@ private StringBuilder buildSelect(final OrderBySupport orderBySupport) {\n         return select;\n     }\n \n-    private StringBuilder buildWhere(final OrderBySupport orderBySupport, final AttributableUtil attrUtil) {\n+    private StringBuilder buildWhere(final OrderBySupport orderBySupport, final SubjectType type) {\n         final StringBuilder where = new StringBuilder(\" u\");\n         for (SearchSupport.SearchView searchView : orderBySupport.views) {\n             where.append(',').append(searchView.name).append(' ').append(searchView.alias);\n@@ -268,16 +267,18 @@ private StringBuilder buildOrderBy(final OrderBySupport orderBySupport) {\n         return orderBy;\n     }\n \n-    private OrderBySupport parseOrderBy(final AttributableUtil attrUtil, final SearchSupport svs,\n+    private OrderBySupport parseOrderBy(final SubjectType type, final SearchSupport svs,\n             final List<OrderByClause> orderByClauses) {\n \n+        final AttributableUtil attrUtil = AttributableUtil.getInstance(type.asAttributableType());\n+\n         OrderBySupport orderBySupport = new OrderBySupport();\n \n         for (OrderByClause clause : orderByClauses) {\n             OrderBySupport.Item obs = new OrderBySupport.Item();\n \n-            Field attributableField = ReflectionUtils.findField(attrUtil.attributableClass(), clause.getField());\n-            if (attributableField == null) {\n+            Field subjectField = ReflectionUtils.findField(attrUtil.attributableClass(), clause.getField());\n+            if (subjectField == null) {\n                 AbstractNormalSchema schema = schemaDAO.find(clause.getField(), attrUtil.schemaClass());\n                 if (schema != null) {\n                     if (schema.isUniqueConstraint()) {\n@@ -321,27 +322,27 @@ private OrderBySupport parseOrderBy(final AttributableUtil attrUtil, final Searc\n     }\n \n     @SuppressWarnings(\"unchecked\")\n-    private <T extends AbstractAttributable> List<T> doSearch(final Set<Long> adminRoles,\n+    private <T extends AbstractSubject> List<T> doSearch(final Set<Long> adminRoles,\n             final SearchCond nodeCond, final int page, final int itemsPerPage, final List<OrderByClause> orderBy,\n-            final AttributableUtil attrUtil) {\n+            final SubjectType type) {\n \n         List<Object> parameters = Collections.synchronizedList(new ArrayList<Object>());\n \n         // 1. get the query string from the search condition\n-        SearchSupport svs = new SearchSupport(attrUtil);\n-        StringBuilder queryString = getQuery(nodeCond, parameters, attrUtil, svs);\n+        SearchSupport svs = new SearchSupport(type);\n+        StringBuilder queryString = getQuery(nodeCond, parameters, type, svs);\n \n         // 2. take into account administrative roles and ordering\n-        OrderBySupport orderBySupport = parseOrderBy(attrUtil, svs, orderBy);\n+        OrderBySupport orderBySupport = parseOrderBy(type, svs, orderBy);\n         if (queryString.charAt(0) == '(') {\n             queryString.insert(0, buildSelect(orderBySupport));\n-            queryString.append(buildWhere(orderBySupport, attrUtil));\n+            queryString.append(buildWhere(orderBySupport, type));\n         } else {\n             queryString.insert(0, buildSelect(orderBySupport).append('('));\n-            queryString.append(')').append(buildWhere(orderBySupport, attrUtil));\n+            queryString.append(')').append(buildWhere(orderBySupport, type));\n         }\n         queryString.\n-                append(getAdminRolesFilter(adminRoles, attrUtil)).append(')').\n+                append(getAdminRolesFilter(adminRoles, type)).append(')').\n                 append(buildOrderBy(orderBySupport));\n \n         // 3. prepare the search query\n@@ -370,12 +371,12 @@ private <T extends AbstractAttributable> List<T> doSearch(final Set<Long> adminR\n                 actualId = ((Number) subjectId).longValue();\n             }\n \n-            T subject = attrUtil.getType() == AttributableType.USER\n+            T subject = type == SubjectType.USER\n                     ? (T) userDAO.find(actualId)\n                     : (T) roleDAO.find(actualId);\n             if (subject == null) {\n                 LOG.error(\"Could not find {} with id {}, even though returned by the native query\",\n-                        attrUtil.getType(), subjectId);\n+                        type, subjectId);\n             } else {\n                 if (!result.contains(subject)) {\n                     result.add(subject);\n@@ -387,47 +388,47 @@ private <T extends AbstractAttributable> List<T> doSearch(final Set<Long> adminR\n     }\n \n     private StringBuilder getQuery(final SearchCond nodeCond, final List<Object> parameters,\n-            final AttributableUtil attrUtil, final SearchSupport svs) {\n+            final SubjectType type, final SearchSupport svs) {\n \n         StringBuilder query = new StringBuilder();\n \n         switch (nodeCond.getType()) {\n \n             case LEAF:\n             case NOT_LEAF:\n-                if (nodeCond.getMembershipCond() != null && AttributableType.USER == attrUtil.getType()) {\n+                if (nodeCond.getMembershipCond() != null && SubjectType.USER == type) {\n                     query.append(getQuery(nodeCond.getMembershipCond(), nodeCond.getType() == SearchCond.Type.NOT_LEAF,\n                             parameters, svs));\n                 }\n                 if (nodeCond.getResourceCond() != null) {\n                     query.append(getQuery(nodeCond.getResourceCond(),\n-                            nodeCond.getType() == SearchCond.Type.NOT_LEAF, parameters, attrUtil, svs));\n+                            nodeCond.getType() == SearchCond.Type.NOT_LEAF, parameters, type, svs));\n                 }\n                 if (nodeCond.getEntitlementCond() != null) {\n                     query.append(getQuery(nodeCond.getEntitlementCond(),\n                             nodeCond.getType() == SearchCond.Type.NOT_LEAF, parameters, svs));\n                 }\n                 if (nodeCond.getAttributeCond() != null) {\n                     query.append(getQuery(nodeCond.getAttributeCond(),\n-                            nodeCond.getType() == SearchCond.Type.NOT_LEAF, parameters, attrUtil, svs));\n+                            nodeCond.getType() == SearchCond.Type.NOT_LEAF, parameters, type, svs));\n                 }\n-                if (nodeCond.getAttributableCond() != null) {\n-                    query.append(getQuery(nodeCond.getAttributableCond(),\n-                            nodeCond.getType() == SearchCond.Type.NOT_LEAF, parameters, attrUtil, svs));\n+                if (nodeCond.getSubjectCond() != null) {\n+                    query.append(getQuery(nodeCond.getSubjectCond(),\n+                            nodeCond.getType() == SearchCond.Type.NOT_LEAF, parameters, type, svs));\n                 }\n                 break;\n \n             case AND:\n-                query.append(getQuery(nodeCond.getLeftNodeCond(), parameters, attrUtil, svs)).\n+                query.append(getQuery(nodeCond.getLeftNodeCond(), parameters, type, svs)).\n                         append(\" AND subject_id IN ( \").\n-                        append(getQuery(nodeCond.getRightNodeCond(), parameters, attrUtil, svs)).\n+                        append(getQuery(nodeCond.getRightNodeCond(), parameters, type, svs)).\n                         append(\")\");\n                 break;\n \n             case OR:\n-                query.append(getQuery(nodeCond.getLeftNodeCond(), parameters, attrUtil, svs)).\n+                query.append(getQuery(nodeCond.getLeftNodeCond(), parameters, type, svs)).\n                         append(\" OR subject_id IN ( \").\n-                        append(getQuery(nodeCond.getRightNodeCond(), parameters, attrUtil, svs)).\n+                        append(getQuery(nodeCond.getRightNodeCond(), parameters, type, svs)).\n                         append(\")\");\n                 break;\n \n@@ -458,7 +459,7 @@ private String getQuery(final MembershipCond cond, final boolean not, final List\n     }\n \n     private String getQuery(final ResourceCond cond, final boolean not, final List<Object> parameters,\n-            final AttributableUtil attrUtil, final SearchSupport svs) {\n+            final SubjectType type, final SearchSupport svs) {\n \n         final StringBuilder query = new StringBuilder(\"SELECT DISTINCT subject_id FROM \").\n                 append(svs.field().name).append(\" WHERE \");\n@@ -474,7 +475,7 @@ private String getQuery(final ResourceCond cond, final boolean not, final List<O\n                 append(\" WHERE resource_name=?\").\n                 append(setParameter(parameters, cond.getResourceName()));\n \n-        if (attrUtil.getType() == AttributableType.USER) {\n+        if (type == SubjectType.USER) {\n             query.append(\" UNION SELECT DISTINCT subject_id FROM \").\n                     append(svs.roleResource().name).\n                     append(\" WHERE resource_name=?\").\n@@ -504,7 +505,7 @@ private void fillAttributeQuery(final StringBuilder query, final AbstractAttrVal\n             final AbstractNormalSchema schema, final AttributeCond cond, final boolean not,\n             final List<Object> parameters, final SearchSupport svs) {\n \n-        String column = (cond instanceof AttributableCond)\n+        String column = (cond instanceof SubjectCond)\n                 ? cond.getSchema()\n                 : \"' AND \" + svs.fieldName(schema.getType());\n \n@@ -530,7 +531,7 @@ private void fillAttributeQuery(final StringBuilder query, final AbstractAttrVal\n                     }\n                     query.append(\" LIKE ?\").append(setParameter(parameters, cond.getExpression()));\n                 } else {\n-                    if (!(cond instanceof AttributableCond)) {\n+                    if (!(cond instanceof SubjectCond)) {\n                         query.append(\"' AND\");\n                     }\n                     query.append(\" 1=2\");\n@@ -593,7 +594,9 @@ private void fillAttributeQuery(final StringBuilder query, final AbstractAttrVal\n     }\n \n     private String getQuery(final AttributeCond cond, final boolean not, final List<Object> parameters,\n-            final AttributableUtil attrUtil, final SearchSupport svs) {\n+            final SubjectType type, final SearchSupport svs) {\n+\n+        final AttributableUtil attrUtil = AttributableUtil.getInstance(type.asAttributableType());\n \n         AbstractNormalSchema schema = schemaDAO.find(cond.getSchema(), attrUtil.schemaClass());\n         if (schema == null) {\n@@ -639,29 +642,31 @@ private String getQuery(final AttributeCond cond, final boolean not, final List<\n     }\n \n     @SuppressWarnings(\"rawtypes\")\n-    private String getQuery(final AttributableCond cond, final boolean not, final List<Object> parameters,\n-            final AttributableUtil attrUtil, final SearchSupport svs) {\n+    private String getQuery(final SubjectCond cond, final boolean not, final List<Object> parameters,\n+            final SubjectType type, final SearchSupport svs) {\n+\n+        final AttributableUtil attrUtil = AttributableUtil.getInstance(type.asAttributableType());\n \n-        Field attributableField = ReflectionUtils.findField(attrUtil.attributableClass(), cond.getSchema());\n-        if (attributableField == null) {\n+        Field subjectField = ReflectionUtils.findField(attrUtil.attributableClass(), cond.getSchema());\n+        if (subjectField == null) {\n             LOG.warn(\"Ignoring invalid schema '{}'\", cond.getSchema());\n             return EMPTY_ATTR_QUERY;\n         }\n \n         AbstractNormalSchema schema = attrUtil.newSchema();\n-        schema.setName(attributableField.getName());\n-        for (AttributeSchemaType type : AttributeSchemaType.values()) {\n-            if (attributableField.getType().isAssignableFrom(type.getType())) {\n-                schema.setType(type);\n+        schema.setName(subjectField.getName());\n+        for (AttributeSchemaType attrSchemaType : AttributeSchemaType.values()) {\n+            if (subjectField.getType().isAssignableFrom(attrSchemaType.getType())) {\n+                schema.setType(attrSchemaType);\n             }\n         }\n \n-        // Deal with Attributable Integer fields logically mapping to boolean values\n+        // Deal with subject Integer fields logically mapping to boolean values\n         // (SyncopeRole.inheritAttributes, for example)\n         boolean foundBooleanMin = false;\n         boolean foundBooleanMax = false;\n-        if (Integer.class.equals(attributableField.getType())) {\n-            for (Annotation annotation : attributableField.getAnnotations()) {\n+        if (Integer.class.equals(subjectField.getType())) {\n+            for (Annotation annotation : subjectField.getAnnotations()) {\n                 if (Min.class.equals(annotation.annotationType())) {\n                     foundBooleanMin = ((Min) annotation).value() == 0;\n                 } else if (Max.class.equals(annotation.annotationType())) {\n@@ -679,14 +684,14 @@ private String getQuery(final AttributableCond cond, final boolean not, final Li\n             }\n         }\n \n-        // Deal with Attributable fields representing relationships to other entities\n+        // Deal with subject fields representing relationships to other entities\n         // Only _id and _name are suppored\n-        if (attributableField.getType().getAnnotation(Entity.class) != null) {\n-            if (BeanUtils.findDeclaredMethodWithMinimalParameters(attributableField.getType(), \"getId\") != null) {\n+        if (subjectField.getType().getAnnotation(Entity.class) != null) {\n+            if (BeanUtils.findDeclaredMethodWithMinimalParameters(subjectField.getType(), \"getId\") != null) {\n                 cond.setSchema(cond.getSchema() + \"_id\");\n                 schema.setType(AttributeSchemaType.Long);\n             }\n-            if (BeanUtils.findDeclaredMethodWithMinimalParameters(attributableField.getType(), \"getName\") != null) {\n+            if (BeanUtils.findDeclaredMethodWithMinimalParameters(subjectField.getType(), \"getName\") != null) {\n                 cond.setSchema(cond.getSchema() + \"_name\");\n                 schema.setType(AttributeSchemaType.String);\n             }","previous_filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/AttributableSearchDAOImpl.java"},{"sha":"2bd51266480905f59c228fb255ea5dcd714f304d","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/UserDAOImpl.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserDAOImpl.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -25,17 +25,18 @@\n import javax.persistence.TypedQuery;\n \n import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.beans.user.UAttrValue;\n-import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n+import org.apache.syncope.core.persistence.dao.SubjectSearchDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n-import org.apache.syncope.core.persistence.dao.search.AttributableCond;\n+import org.apache.syncope.core.persistence.dao.search.SubjectCond;\n import org.apache.syncope.core.persistence.dao.search.AttributeCond;\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.dao.search.SearchCond;\n@@ -44,10 +45,10 @@\n import org.springframework.stereotype.Repository;\n \n @Repository\n-public class UserDAOImpl extends AbstractAttributableDAOImpl implements UserDAO {\n+public class UserDAOImpl extends AbstractSubjectDAOImpl implements UserDAO {\n \n     @Autowired\n-    private AttributableSearchDAO searchDAO;\n+    private SubjectSearchDAO searchDAO;\n \n     @Autowired\n     private RoleDAO roleDAO;\n@@ -145,7 +146,7 @@ public final List<SyncopeUser> findAll(final Set<Long> adminRoles, final int pag\n     }\n \n     private SearchCond getAllMatchingCond() {\n-        AttributableCond idCond = new AttributableCond(AttributeCond.Type.ISNOTNULL);\n+        SubjectCond idCond = new SubjectCond(AttributeCond.Type.ISNOTNULL);\n         idCond.setSchema(\"id\");\n         return SearchCond.getLeafCond(idCond);\n     }\n@@ -154,13 +155,12 @@ private SearchCond getAllMatchingCond() {\n     public List<SyncopeUser> findAll(final Set<Long> adminRoles,\n             final int page, final int itemsPerPage, final List<OrderByClause> orderBy) {\n \n-        return searchDAO.search(adminRoles, getAllMatchingCond(), page, itemsPerPage, orderBy,\n-                AttributableUtil.getInstance(AttributableType.USER));\n+        return searchDAO.search(adminRoles, getAllMatchingCond(), page, itemsPerPage, orderBy, SubjectType.USER);\n     }\n \n     @Override\n     public final int count(final Set<Long> adminRoles) {\n-        return searchDAO.count(adminRoles, getAllMatchingCond(), AttributableUtil.getInstance(AttributableType.USER));\n+        return searchDAO.count(adminRoles, getAllMatchingCond(), SubjectType.USER);\n     }\n \n     @Override"},{"sha":"d83c04ae66e52a495c606994ed8f744112d559ac","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/search/SearchCond.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fsearch%2FSearchCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fsearch%2FSearchCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fsearch%2FSearchCond.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -35,7 +35,7 @@ public enum Type {\n \r\n     private Type type;\r\n \r\n-    private AttributableCond attributableCond;\r\n+    private SubjectCond subjectCond;\r\n \r\n     private AttributeCond attributeCond;\r\n \r\n@@ -53,8 +53,8 @@ public static SearchCond getLeafCond(final AttributeCond attributeCond) {\n         SearchCond nodeCond = new SearchCond();\r\n \r\n         nodeCond.type = Type.LEAF;\r\n-        if (attributeCond instanceof AttributableCond) {\r\n-            nodeCond.attributableCond = (AttributableCond) attributeCond;\r\n+        if (attributeCond instanceof SubjectCond) {\r\n+            nodeCond.subjectCond = (SubjectCond) attributeCond;\r\n         } else {\r\n             nodeCond.attributeCond = attributeCond;\r\n         }\r\n@@ -156,12 +156,12 @@ public static SearchCond getOrCond(final List<SearchCond> conditions) {\n         }\r\n     }\r\n \r\n-    public AttributableCond getAttributableCond() {\r\n-        return attributableCond;\r\n+    public SubjectCond getSubjectCond() {\r\n+        return subjectCond;\r\n     }\r\n \r\n-    public void setAttributableCond(final AttributableCond attributableCond) {\r\n-        this.attributableCond = attributableCond;\r\n+    public void setSubjectCond(final SubjectCond subjectCond) {\r\n+        this.subjectCond = subjectCond;\r\n     }\r\n \r\n     public AttributeCond getAttributeCond() {\r\n@@ -230,9 +230,9 @@ public boolean isValid() {\n         switch (type) {\r\n             case LEAF:\r\n             case NOT_LEAF:\r\n-                isValid = (attributableCond != null || attributeCond != null || membershipCond != null\r\n+                isValid = (subjectCond != null || attributeCond != null || membershipCond != null\r\n                         || resourceCond != null || entitlementCond != null)\r\n-                        && (attributableCond == null || attributableCond.isValid())\r\n+                        && (subjectCond == null || subjectCond.isValid())\r\n                         && (attributeCond == null || attributeCond.isValid())\r\n                         && (membershipCond == null || membershipCond.isValid())\r\n                         && (resourceCond == null || resourceCond.isValid())\r"},{"sha":"ed7d13a614a428b4421fcdd7f2efbc51b80ac6d9","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/search/SubjectCond.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fsearch%2FSubjectCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fsearch%2FSubjectCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fsearch%2FSubjectCond.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -21,14 +21,14 @@\n /**\r\n  * Search condition to be applied when comparing bean field values.\r\n  */\r\n-public class AttributableCond extends AttributeCond {\r\n+public class SubjectCond extends AttributeCond {\r\n \r\n     private static final long serialVersionUID = -1880319220462653955L;\r\n \r\n-    public AttributableCond() {\r\n+    public SubjectCond() {\r\n     }\r\n \r\n-    public AttributableCond(final Type conditionType) {\r\n+    public SubjectCond(final Type conditionType) {\r\n         super(conditionType);\r\n     }\r\n }\r","previous_filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/search/AttributableCond.java"},{"sha":"7bc1215b09010bad90f59f714bff2e8fb40242b7","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SchemaNameValidator.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaNameValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaNameValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaNameValidator.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -29,6 +29,8 @@\n import org.apache.commons.lang3.ClassUtils;\n \n import org.apache.syncope.common.types.EntityViolationType;\n+import org.apache.syncope.core.persistence.beans.conf.CSchema;\n+import org.apache.syncope.core.persistence.beans.conf.SyncopeConf;\n import org.apache.syncope.core.persistence.beans.membership.MDerSchema;\n import org.apache.syncope.core.persistence.beans.membership.MSchema;\n import org.apache.syncope.core.persistence.beans.membership.MVirSchema;\n@@ -50,10 +52,13 @@ public class SchemaNameValidator extends AbstractValidator<SchemaNameCheck, Obje\n \n     private static final List<String> UNALLOWED_RSCHEMA_NAMES = new ArrayList<String>();\n \n+    private static final List<String> UNALLOWED_CSCHEMA_NAMES = new ArrayList<String>();\n+\n     static {\n         initUnallowedSchemaNames(SyncopeUser.class, UNALLOWED_USCHEMA_NAMES);\n         initUnallowedSchemaNames(Membership.class, UNALLOWED_MSCHEMA_NAMES);\n         initUnallowedSchemaNames(SyncopeRole.class, UNALLOWED_RSCHEMA_NAMES);\n+        initUnallowedSchemaNames(SyncopeConf.class, UNALLOWED_CSCHEMA_NAMES);\n     }\n \n     private static void initUnallowedSchemaNames(final Class<?> entityClass, final List<String> names) {\n@@ -102,6 +107,9 @@ public boolean isValid(final Object object, final ConstraintValidatorContext con\n         } else if (object instanceof RVirSchema) {\n             schemaName = ((RVirSchema) object).getName();\n             unallowedNames = UNALLOWED_RSCHEMA_NAMES;\n+        } else if (object instanceof CSchema) {\n+            schemaName = ((CSchema) object).getName();\n+            unallowedNames = UNALLOWED_CSCHEMA_NAMES;\n         } else {\n             schemaName = null;\n             unallowedNames = Collections.emptyList();"},{"sha":"06b67186878b7aa929689b8826495cd23c9e0743","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SyncopeConfValidator.java","status":"removed","additions":0,"deletions":42,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e47448acfc5d1504a603242d1a9181cec73d780/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeConfValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e47448acfc5d1504a603242d1a9181cec73d780/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeConfValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeConfValidator.java?ref=0e47448acfc5d1504a603242d1a9181cec73d780","patch":"@@ -1,42 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.validation.entity;\n-\n-import javax.validation.ConstraintValidatorContext;\n-import org.apache.syncope.common.types.EntityViolationType;\n-import org.apache.syncope.core.persistence.beans.SyncopeConf;\n-\n-public class SyncopeConfValidator extends AbstractValidator<SyncopeConfCheck, SyncopeConf> {\n-\n-    @Override\n-    public boolean isValid(final SyncopeConf syncopeConf, final ConstraintValidatorContext context) {\n-        boolean isValid = true;\n-\n-        if (!NAME_PATTERN.matcher(syncopeConf.getKey()).matches()) {\n-            isValid = false;\n-\n-            context.disableDefaultConstraintViolation();\n-            context.buildConstraintViolationWithTemplate(\n-                    getTemplate(EntityViolationType.InvalidName, \"Invalid SyncopeConf key\")).\n-                    addNode(\"name\").addConstraintViolation();\n-        }\n-\n-        return isValid;\n-    }\n-}"},{"sha":"210f38ad31f28e8d2607666d1d378f000ef27072","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/LDAPPasswordPropagationActions.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FLDAPPasswordPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FLDAPPasswordPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FLDAPPasswordPropagationActions.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -48,7 +48,7 @@\n  * hash algorithm property of the LDAP Connector.\n  */\n public class LDAPPasswordPropagationActions extends DefaultPropagationActions {\n-    \n+\n     private static final String CLEARTEXT = \"CLEARTEXT\";\n \n     @Autowired\n@@ -61,12 +61,12 @@ public void before(final PropagationTask task, final ConnectorObject beforeObj)\n \n         if (AttributableType.USER == task.getSubjectType()) {\n             SyncopeUser user = userDAO.find(task.getSubjectId());\n-            \n+\n             if (user != null && user.getPassword() != null) {\n                 Attribute missing = AttributeUtil.find(\n                         PropagationTaskExecutor.MANDATORY_MISSING_ATTR_NAME,\n                         task.getAttributes());\n-                \n+\n                 ConnInstance connInstance = task.getResource().getConnector();\n                 String cipherAlgorithm = getCipherAlgorithm(connInstance);\n                 if (missing != null && missing.getValue() != null && missing.getValue().size() == 1\n@@ -76,10 +76,10 @@ && cipherAlgorithmMatches(getCipherAlgorithm(connInstance), user.getCipherAlgori\n                     String password = user.getPassword().toLowerCase();\n                     byte[] decodedPassword = Hex.decode(password);\n                     byte[] base64EncodedPassword = Base64.encode(decodedPassword);\n-                    \n-                    String cipherPlusPassword = \n-                        (\"{\" + cipherAlgorithm.toLowerCase() + \"}\" + new String(base64EncodedPassword));\n-                    \n+\n+                    String cipherPlusPassword =\n+                            (\"{\" + cipherAlgorithm.toLowerCase() + \"}\" + new String(base64EncodedPassword));\n+\n                     Attribute passwordAttribute = AttributeBuilder.buildPassword(\n                             new GuardedString(cipherPlusPassword.toCharArray()));\n \n@@ -92,7 +92,7 @@ && cipherAlgorithmMatches(getCipherAlgorithm(connInstance), user.getCipherAlgori\n             }\n         }\n     }\n-    \n+\n     private String getCipherAlgorithm(ConnInstance connInstance) {\n         String cipherAlgorithm = CLEARTEXT;\n         for (Iterator<ConnConfProperty> propertyIterator = connInstance.getConfiguration().iterator();\n@@ -106,21 +106,21 @@ private String getCipherAlgorithm(ConnInstance connInstance) {\n         }\n         return cipherAlgorithm;\n     }\n-    \n+\n     private boolean cipherAlgorithmMatches(String connectorAlgorithm, CipherAlgorithm userAlgorithm) {\n         if (userAlgorithm == null) {\n             return false;\n         }\n-    \n+\n         if (connectorAlgorithm.equals(userAlgorithm.name())) {\n             return true;\n         }\n-        \n+\n         // Special check for \"SHA\" (user sync'd from LDAP)\n         if (\"SHA\".equals(connectorAlgorithm) && \"SHA1\".equals(userAlgorithm.name())) {\n             return true;\n         }\n-        \n+\n         return false;\n     }\n "},{"sha":"67969a2b242d5bac41a72636c91862277bd504f7","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PropagationManager.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -35,7 +35,6 @@\n import org.apache.syncope.common.types.MappingPurpose;\n import org.apache.syncope.common.types.ResourceOperation;\n import org.apache.syncope.core.connid.ConnObjectUtil;\n-import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.AbstractSubject;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n@@ -191,7 +190,7 @@ public List<PropagationTask> getRoleCreateTaskIds(final WorkflowResult<Long> wfR\n         return getCreateTaskIds(role, null, null, wfResult.getPropByRes(), noPropResourceNames);\n     }\n \n-    protected List<PropagationTask> getCreateTaskIds(final AbstractAttributable attributable,\n+    protected List<PropagationTask> getCreateTaskIds(final AbstractSubject subject,\n             final String password, final Boolean enable,\n             final PropagationByResource propByRes, final Set<String> noPropResourceNames) {\n \n@@ -203,7 +202,7 @@ protected List<PropagationTask> getCreateTaskIds(final AbstractAttributable attr\n             propByRes.get(ResourceOperation.CREATE).removeAll(noPropResourceNames);\n         }\n \n-        return createTasks(attributable, password, true, null, null, null, null, enable, false, propByRes);\n+        return createTasks(subject, password, true, null, null, null, null, enable, false, propByRes);\n     }\n \n     /**\n@@ -558,7 +557,7 @@ public List<PropagationTask> getRoleDeleteTaskIds(\n     }\n \n     protected List<PropagationTask> getDeleteTaskIds(\n-            final AbstractAttributable attributable,\n+            final AbstractSubject subject,\n             final Set<String> resourceNames,\n             final Collection<String> noPropResourceNames) {\n \n@@ -567,7 +566,7 @@ protected List<PropagationTask> getDeleteTaskIds(\n         if (noPropResourceNames != null && !noPropResourceNames.isEmpty()) {\n             propByRes.get(ResourceOperation.DELETE).removeAll(noPropResourceNames);\n         }\n-        return createTasks(attributable, null, false, null, null, null, null, false, true, propByRes);\n+        return createTasks(subject, null, false, null, null, null, null, false, true, propByRes);\n     }\n \n     /**\n@@ -586,7 +585,7 @@ protected List<PropagationTask> getDeleteTaskIds(\n      * @param propByRes operation to be performed per resource\n      * @return list of propagation tasks created\n      */\n-    protected <T extends AbstractAttributable> List<PropagationTask> createTasks(final T subject,\n+    protected <T extends AbstractSubject> List<PropagationTask> createTasks(final T subject,\n             final String password, final boolean changePwd,\n             final Set<String> vAttrsToBeRemoved, final Map<String, AttributeMod> vAttrsToBeUpdated,\n             final Set<String> membVAttrsToBeRemoved, final Map<String, AttributeMod> membVAttrsToBeUpdatedMap,"},{"sha":"987640197601e02d370f7f95eca3aa994f86d0be","filename":"core/src/main/java/org/apache/syncope/core/report/RoleReportlet.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FRoleReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FRoleReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FRoleReportlet.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -29,16 +29,15 @@\n import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.common.to.AttributeTO;\n import org.apache.syncope.common.to.RoleTO;\n-import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n-import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n+import org.apache.syncope.core.persistence.dao.SubjectSearchDAO;\n import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\n import org.apache.syncope.core.rest.data.RoleDataBinder;\n import org.apache.syncope.core.rest.data.SearchCondConverter;\n-import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.xml.sax.ContentHandler;\n@@ -57,7 +56,7 @@ public class RoleReportlet extends AbstractReportlet<RoleReportletConf> {\n     private RoleDAO roleDAO;\n \n     @Autowired\n-    private AttributableSearchDAO searchDAO;\n+    private SubjectSearchDAO searchDAO;\n \n     @Autowired\n     private RoleDataBinder roleDataBinder;\n@@ -69,8 +68,7 @@ private List<SyncopeRole> getPagedRoles(final int page) {\n             result = roleDAO.findAll();\n         } else {\n             result = searchDAO.search(adminRoleIds, SearchCondConverter.convert(conf.getMatchingCond()),\n-                    page, PAGE_SIZE, Collections.<OrderByClause>emptyList(),\n-                    AttributableUtil.getInstance(AttributableType.ROLE));\n+                    page, PAGE_SIZE, Collections.<OrderByClause>emptyList(), SubjectType.ROLE);\n         }\n \n         return result;\n@@ -81,8 +79,7 @@ private int count() {\n \n         return conf.getMatchingCond() == null\n                 ? roleDAO.findAll().size()\n-                : searchDAO.count(adminRoleIds, SearchCondConverter.convert(conf.getMatchingCond()),\n-                        AttributableUtil.getInstance(AttributableType.ROLE));\n+                : searchDAO.count(adminRoleIds, SearchCondConverter.convert(conf.getMatchingCond()), SubjectType.ROLE);\n     }\n \n     private void doExtractResources(final ContentHandler handler, final AbstractSubjectTO subjectTO)"},{"sha":"8b9893817b59f3ee73b441e9e40f1a514f97fefe","filename":"core/src/main/java/org/apache/syncope/core/report/UserReportlet.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -30,17 +30,16 @@\n import org.apache.syncope.common.to.AttributeTO;\n import org.apache.syncope.common.to.MembershipTO;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n+import org.apache.syncope.core.persistence.dao.SubjectSearchDAO;\n import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\n import org.apache.syncope.core.rest.data.RoleDataBinder;\n import org.apache.syncope.core.rest.data.SearchCondConverter;\n import org.apache.syncope.core.rest.data.UserDataBinder;\n-import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.DataFormat;\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -60,7 +59,7 @@ public class UserReportlet extends AbstractReportlet<UserReportletConf> {\n     private UserDAO userDAO;\n \n     @Autowired\n-    private AttributableSearchDAO searchDAO;\n+    private SubjectSearchDAO searchDAO;\n \n     @Autowired\n     private UserDataBinder userDataBinder;\n@@ -76,8 +75,7 @@ private List<SyncopeUser> getPagedUsers(final int page) {\n             result = userDAO.findAll(adminRoleIds, page, PAGE_SIZE);\n         } else {\n             result = searchDAO.search(adminRoleIds, SearchCondConverter.convert(conf.getMatchingCond()),\n-                    page, PAGE_SIZE, Collections.<OrderByClause>emptyList(),\n-                    AttributableUtil.getInstance(AttributableType.USER));\n+                    page, PAGE_SIZE, Collections.<OrderByClause>emptyList(), SubjectType.USER);\n         }\n \n         return result;\n@@ -88,8 +86,7 @@ private int count() {\n \n         return conf.getMatchingCond() == null\n                 ? userDAO.count(adminRoleIds)\n-                : searchDAO.count(adminRoleIds, SearchCondConverter.convert(conf.getMatchingCond()),\n-                        AttributableUtil.getInstance(AttributableType.USER));\n+                : searchDAO.count(adminRoleIds, SearchCondConverter.convert(conf.getMatchingCond()), SubjectType.USER);\n     }\n \n     private void doExtractResources(final ContentHandler handler, final AbstractSubjectTO subjectTO)"},{"sha":"8886c7eb656d777f591394efb2a90615d69c9441","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/AbstractSubjectController.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractSubjectController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractSubjectController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FAbstractSubjectController.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -19,12 +19,12 @@\n package org.apache.syncope.core.rest.controller;\n \n import java.util.List;\n-import org.apache.syncope.common.mod.AbstractAttributableMod;\n-import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.mod.AbstractSubjectMod;\n+import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.dao.search.SearchCond;\n \n-public abstract class AbstractAttributableController<T extends AbstractAttributableTO, V extends AbstractAttributableMod>\n+public abstract class AbstractSubjectController<T extends AbstractSubjectTO, V extends AbstractSubjectMod>\n         extends AbstractResourceAssociator<T> {\n \n     public abstract T read(Long id);","previous_filename":"core/src/main/java/org/apache/syncope/core/rest/controller/AbstractAttributableController.java"},{"sha":"181dfab2915e6d00171f35696996a218ede3490f","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ConfigurationController.java","status":"modified","additions":19,"deletions":68,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -21,17 +21,15 @@\n import java.io.IOException;\n import java.io.OutputStream;\n import java.lang.reflect.Method;\n-import java.util.ArrayList;\n import java.util.HashSet;\n-import java.util.List;\n import java.util.Set;\n-import org.apache.commons.lang3.ArrayUtils;\n-import org.apache.syncope.common.to.ConfigurationTO;\n+import org.apache.syncope.common.to.AttributeTO;\n+import org.apache.syncope.common.to.ConfTO;\n import org.apache.syncope.core.init.ImplementationClassNamesLoader;\n import org.apache.syncope.core.init.WorkflowAdapterLoader;\n-import org.apache.syncope.core.persistence.beans.SyncopeConf;\n+import org.apache.syncope.core.persistence.beans.conf.CAttr;\n import org.apache.syncope.core.persistence.dao.ConfDAO;\n-import org.apache.syncope.core.persistence.dao.MissingConfKeyException;\n+import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.apache.syncope.core.persistence.validation.attrvalue.Validator;\n import org.apache.syncope.core.rest.data.ConfigurationDataBinder;\n import org.apache.syncope.core.util.ContentExporter;\n@@ -43,7 +41,7 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Component\n-public class ConfigurationController extends AbstractTransactionalController<ConfigurationTO> {\n+public class ConfigurationController extends AbstractTransactionalController<ConfTO> {\n \n     @Autowired\n     private ConfDAO confDAO;\n@@ -63,56 +61,29 @@ public class ConfigurationController extends AbstractTransactionalController<Con\n     @Autowired\n     private WorkflowAdapterLoader wfAdapterLoader;\n \n-    @PreAuthorize(\"hasRole('CONFIGURATION_CREATE')\")\n-    public ConfigurationTO create(final ConfigurationTO configurationTO) {\n-\n-        SyncopeConf conf = binder.create(configurationTO);\n-        conf = confDAO.save(conf);\n-\n-        return binder.getConfigurationTO(conf);\n-    }\n-\n     @PreAuthorize(\"hasRole('CONFIGURATION_DELETE')\")\n-    public ConfigurationTO delete(final String key) {\n-        SyncopeConf conf = confDAO.find(key);\n-        ConfigurationTO confToDelete = binder.getConfigurationTO(conf);\n+    public void delete(final String key) {\n         confDAO.delete(key);\n-        return confToDelete;\n     }\n \n     @PreAuthorize(\"hasRole('CONFIGURATION_LIST')\")\n-    public List<ConfigurationTO> list() {\n-        List<SyncopeConf> configurations = confDAO.findAll();\n-        List<ConfigurationTO> configurationTOs = new ArrayList<ConfigurationTO>(configurations.size());\n-\n-        for (SyncopeConf configuration : configurations) {\n-            configurationTOs.add(binder.getConfigurationTO(configuration));\n-        }\n-\n-        return configurationTOs;\n+    public ConfTO list() {\n+        return binder.getConfTO(confDAO.get());\n     }\n \n     @PreAuthorize(\"hasRole('CONFIGURATION_READ')\")\n-    public ConfigurationTO read(final String key) {\n-        ConfigurationTO result;\n-        try {\n-            SyncopeConf conf = confDAO.find(key);\n-            result = binder.getConfigurationTO(conf);\n-        } catch (MissingConfKeyException e) {\n-            LOG.error(\"Could not find configuration key '\" + key + \"', returning null\");\n-\n-            result = new ConfigurationTO();\n-            result.setKey(key);\n+    public AttributeTO read(final String key) {\n+        CAttr conf = confDAO.find(key);\n+        if (conf == null) {\n+            throw new NotFoundException(\"Configuration key \" + key);\n         }\n \n-        return result;\n+        return binder.getAttributeTO(conf);\n     }\n \n-    @PreAuthorize(\"hasRole('CONFIGURATION_UPDATE')\")\n-    public ConfigurationTO update(final ConfigurationTO configurationTO) {\n-        SyncopeConf conf = confDAO.find(configurationTO.getKey());\n-        conf.setValue(configurationTO.getValue());\n-        return binder.getConfigurationTO(conf);\n+    @PreAuthorize(\"hasRole('CONFIGURATION_SET')\")\n+    public void set(final AttributeTO value) {\n+        confDAO.save(binder.getAttribute(value));\n     }\n \n     @PreAuthorize(\"hasRole('CONFIGURATION_LIST')\")\n@@ -148,7 +119,7 @@ public Set<String> getMailTemplates() {\n         return htmlTemplates;\n     }\n \n-    @PreAuthorize(\"hasRole('CONFIGURATION_READ')\")\n+    @PreAuthorize(\"hasRole('CONFIGURATION_EXPORT')\")\n     @Transactional(readOnly = true)\n     public void export(final OutputStream os) {\n         try {\n@@ -163,29 +134,9 @@ public void export(final OutputStream os) {\n      * {@inheritDoc}\n      */\n     @Override\n-    protected ConfigurationTO resolveReference(final Method method, final Object... args)\n+    protected ConfTO resolveReference(final Method method, final Object... args)\n             throws UnresolvedReferenceException {\n-        String key = null;\n-\n-        if (ArrayUtils.isNotEmpty(args)) {\n-            for (int i = 0; key == null && i < args.length; i++) {\n-                if (args[i] instanceof String) {\n-                    key = (String) args[i];\n-                } else if (args[i] instanceof ConfigurationTO) {\n-                    key = ((ConfigurationTO) args[i]).getKey();\n-                }\n-            }\n-        }\n-\n-        if (key != null) {\n-            try {\n-                return binder.getConfigurationTO(confDAO.find(key));\n-            } catch (Throwable ignore) {\n-                LOG.debug(\"Unresolved reference\", ignore);\n-                throw new UnresolvedReferenceException(ignore);\n-            }\n-        }\n \n         throw new UnresolvedReferenceException();\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"53a20290afac2593317d2ab3e851e8a9655a6062","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -30,13 +30,13 @@\n import org.apache.syncope.common.mod.RoleMod;\n import org.apache.syncope.core.persistence.dao.search.SearchCond;\n import org.apache.syncope.common.to.RoleTO;\n-import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n+import org.apache.syncope.core.persistence.dao.SubjectSearchDAO;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n@@ -48,7 +48,6 @@\n import org.apache.syncope.core.rest.data.AttributableTransformer;\n import org.apache.syncope.core.rest.data.RoleDataBinder;\n import org.apache.syncope.core.util.ApplicationContextProvider;\n-import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.apache.syncope.core.workflow.WorkflowResult;\n import org.apache.syncope.core.workflow.role.RoleWorkflowAdapter;\n@@ -66,7 +65,7 @@\n  * @see AbstractTransactionalController\n  */\n @Component\n-public class RoleController extends AbstractAttributableController<RoleTO, RoleMod> {\n+public class RoleController extends AbstractSubjectController<RoleTO, RoleMod> {\n \n     @Autowired\n     protected RoleDAO roleDAO;\n@@ -75,7 +74,7 @@ public class RoleController extends AbstractAttributableController<RoleTO, RoleM\n     protected UserDAO userDAO;\n \n     @Autowired\n-    protected AttributableSearchDAO searchDAO;\n+    protected SubjectSearchDAO searchDAO;\n \n     @Autowired\n     protected RoleDataBinder binder;\n@@ -202,7 +201,7 @@ public List<RoleTO> list(final int page, final int size, final List<OrderByClaus\n     @Override\n     public int searchCount(final SearchCond searchCondition) {\n         final Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames());\n-        return searchDAO.count(adminRoleIds, searchCondition, AttributableUtil.getInstance(AttributableType.ROLE));\n+        return searchDAO.count(adminRoleIds, searchCondition, SubjectType.ROLE);\n     }\n \n     @PreAuthorize(\"isAuthenticated()\")\n@@ -213,7 +212,7 @@ public List<RoleTO> search(final SearchCond searchCondition, final int page, fin\n \n         final List<SyncopeRole> matchingRoles = searchDAO.search(\n                 EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames()),\n-                searchCondition, page, size, orderBy, AttributableUtil.getInstance(AttributableType.ROLE));\n+                searchCondition, page, size, orderBy, SubjectType.ROLE);\n \n         final List<RoleTO> result = new ArrayList<RoleTO>(matchingRoles.size());\n         for (SyncopeRole role : matchingRoles) {"},{"sha":"8b789f07c38aed20608e3a2e46cc9e0addec488f","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":8,"deletions":14,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -36,15 +36,15 @@\n import org.apache.syncope.common.reqres.BulkActionResult.Status;\n import org.apache.syncope.common.to.MembershipTO;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.SyncopeClientException;\n import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.mod.MembershipMod;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n+import org.apache.syncope.core.persistence.dao.SubjectSearchDAO;\n import org.apache.syncope.core.persistence.dao.ConfDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n@@ -57,7 +57,6 @@\n import org.apache.syncope.core.rest.data.AttributableTransformer;\n import org.apache.syncope.core.rest.data.UserDataBinder;\n import org.apache.syncope.core.util.ApplicationContextProvider;\n-import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.apache.syncope.core.workflow.WorkflowResult;\n import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n@@ -74,7 +73,7 @@\n  * @see AbstractTransactionalController\n  */\n @Component\n-public class UserController extends AbstractAttributableController<UserTO, UserMod> {\n+public class UserController extends AbstractSubjectController<UserTO, UserMod> {\n \n     @Autowired\n     protected UserDAO userDAO;\n@@ -83,7 +82,7 @@ public class UserController extends AbstractAttributableController<UserTO, UserM\n     protected RoleDAO roleDAO;\n \n     @Autowired\n-    protected AttributableSearchDAO searchDAO;\n+    protected SubjectSearchDAO searchDAO;\n \n     @Autowired\n     protected ConfDAO confDAO;\n@@ -103,8 +102,9 @@ public class UserController extends AbstractAttributableController<UserTO, UserM\n     @Autowired\n     protected AttributableTransformer attrTransformer;\n \n+    @Transactional(readOnly = true)\n     public boolean isSelfRegistrationAllowed() {\n-        return Boolean.valueOf(confDAO.find(\"selfRegistration.allowed\", \"false\").getValue());\n+        return confDAO.find(\"selfRegistration.allowed\", \"false\").getValues().get(0).getBooleanValue();\n     }\n \n     @PreAuthorize(\"hasRole('USER_READ')\")\n@@ -129,7 +129,7 @@ public int count() {\n     @Override\n     public int searchCount(final SearchCond searchCondition) {\n         return searchDAO.count(EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames()),\n-                searchCondition, AttributableUtil.getInstance(AttributableType.USER));\n+                searchCondition, SubjectType.USER);\n     }\n \n     @PreAuthorize(\"hasRole('USER_LIST')\")\n@@ -169,8 +169,7 @@ public List<UserTO> search(final SearchCond searchCondition, final int page, fin\n \n         final List<SyncopeUser> matchingUsers = searchDAO.search(\n                 EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames()),\n-                searchCondition, page, size, orderBy,\n-                AttributableUtil.getInstance(AttributableType.USER));\n+                searchCondition, page, size, orderBy, SubjectType.USER);\n \n         final List<UserTO> result = new ArrayList<UserTO>(matchingUsers.size());\n         for (SyncopeUser user : matchingUsers) {\n@@ -182,11 +181,6 @@ public List<UserTO> search(final SearchCond searchCondition, final int page, fin\n \n     @PreAuthorize(\"isAnonymous() or hasRole(T(org.apache.syncope.common.SyncopeConstants).ANONYMOUS_ENTITLEMENT)\")\n     public UserTO createSelf(final UserTO userTO) {\n-        if (!isSelfRegistrationAllowed()) {\n-            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unauthorized);\n-            sce.getElements().add(\"SelfRegistration forbidden by configuration\");\n-        }\n-\n         return doCreate(userTO);\n     }\n "},{"sha":"a712fda2ebc602bd302795456c3266772faad3bd","filename":"core/src/main/java/org/apache/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -154,7 +154,7 @@ protected <T extends AbstractSchema> T getSchema(final String schemaName, final\n         return result;\n     }\n \n-    private <T extends AbstractNormalSchema> T getNormalSchema(final String schemaName, final Class<T> reference) {\n+    protected <T extends AbstractNormalSchema> T getNormalSchema(final String schemaName, final Class<T> reference) {\n         T schema = null;\n         if (StringUtils.isNotBlank(schemaName)) {\n             schema = schemaDAO.find(schemaName, reference);"},{"sha":"0a468cf6395b15de2701f933e315468c66661d75","filename":"core/src/main/java/org/apache/syncope/core/rest/data/ConfigurationDataBinder.java","status":"modified","additions":46,"deletions":13,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConfigurationDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConfigurationDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConfigurationDataBinder.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -18,26 +18,59 @@\n  */\n package org.apache.syncope.core.rest.data;\n \n-import org.apache.syncope.common.to.ConfigurationTO;\n-import org.apache.syncope.core.persistence.beans.SyncopeConf;\n+import java.util.Collections;\n+import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.to.AttributeTO;\n+import org.apache.syncope.common.to.ConfTO;\n+import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n+import org.apache.syncope.core.persistence.beans.ExternalResource;\n+import org.apache.syncope.core.persistence.beans.conf.CAttr;\n+import org.apache.syncope.core.persistence.beans.conf.CSchema;\n+import org.apache.syncope.core.persistence.beans.conf.SyncopeConf;\n+import org.apache.syncope.core.persistence.dao.NotFoundException;\n+import org.apache.syncope.core.util.AttributableUtil;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class ConfigurationDataBinder {\n+public class ConfigurationDataBinder extends AbstractAttributableDataBinder {\n \n-    public SyncopeConf create(final ConfigurationTO configurationTO) {\n-        SyncopeConf syncopeConfiguration = new SyncopeConf();\n-        syncopeConfiguration.setKey(configurationTO.getKey());\n-        syncopeConfiguration.setValue(configurationTO.getValue());\n+    public ConfTO getConfTO(final SyncopeConf conf) {\n+        final ConfTO confTO = new ConfTO();\n+        confTO.setId(conf.getId());\n \n-        return syncopeConfiguration;\n+        fillTO(confTO, conf.getAttrs(),\n+                conf.getDerAttrs(), conf.getVirAttrs(), Collections.<ExternalResource>emptySet());\n+\n+        return confTO;\n+    }\n+\n+    public AttributeTO getAttributeTO(final CAttr attr) {\n+        final AttributeTO attributeTO = new AttributeTO();\n+        attributeTO.setSchema(attr.getSchema().getName());\n+        attributeTO.getValues().addAll(attr.getValuesAsStrings());\n+        attributeTO.setReadonly(attr.getSchema().isReadonly());\n+\n+        return attributeTO;\n     }\n \n-    public ConfigurationTO getConfigurationTO(final SyncopeConf syncopeConfiguration) {\n-        ConfigurationTO configurationTO = new ConfigurationTO();\n-        configurationTO.setKey(syncopeConfiguration.getKey());\n-        configurationTO.setValue(syncopeConfiguration.getValue());\n+    public CAttr getAttribute(final AttributeTO attributeTO) {\n+        CSchema schema = getNormalSchema(attributeTO.getSchema(), CSchema.class);\n+        if (schema == null) {\n+            throw new NotFoundException(\"Conf schema \" + attributeTO.getSchema());\n+        } else {\n+            SyncopeClientException invalidValues = SyncopeClientException.build(ClientExceptionType.InvalidValues);\n+\n+            CAttr attr = new CAttr();\n+            attr.setSchema(schema);\n+            fillAttribute(attributeTO.getValues(), AttributableUtil.getInstance(AttributableType.CONFIGURATION),\n+                    schema, attr, invalidValues);\n \n-        return configurationTO;\n+            if (!invalidValues.isEmpty()) {\n+                throw invalidValues;\n+            }\n+            return attr;\n+        }\n     }\n+\n }"},{"sha":"2c28173368329b5115df3dc05fd4c102538e0747","filename":"core/src/main/java/org/apache/syncope/core/rest/data/SearchCondVisitor.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSearchCondVisitor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSearchCondVisitor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSearchCondVisitor.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -30,7 +30,7 @@\n import org.apache.syncope.common.search.SpecialAttr;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.core.persistence.dao.search.AttributableCond;\n+import org.apache.syncope.core.persistence.dao.search.SubjectCond;\n import org.apache.syncope.core.persistence.dao.search.AttributeCond;\n import org.apache.syncope.core.persistence.dao.search.EntitlementCond;\n import org.apache.syncope.core.persistence.dao.search.MembershipCond;\n@@ -62,7 +62,7 @@ public SearchCondVisitor(final Map<String, String> fieldMap) {\n \n     private AttributeCond createAttributeCond(final String schema) {\n         AttributeCond attributeCond = ATTRIBUTABLE_FIELDS.contains(schema)\n-                ? new AttributableCond()\n+                ? new SubjectCond()\n                 : new AttributeCond();\n         attributeCond.setSchema(schema);\n         return attributeCond;\n@@ -124,10 +124,10 @@ private SearchCond visitPrimitive(final SearchCondition<SearchBean> sc) {\n                             && leaf.getAttributeCond().getType() == AttributeCond.Type.ISNULL) {\n \n                         leaf.getAttributeCond().setType(AttributeCond.Type.ISNOTNULL);\n-                    } else if (leaf.getAttributableCond() != null\n-                            && leaf.getAttributableCond().getType() == AttributableCond.Type.ISNULL) {\n+                    } else if (leaf.getSubjectCond() != null\n+                            && leaf.getSubjectCond().getType() == SubjectCond.Type.ISNULL) {\n \n-                        leaf.getAttributableCond().setType(AttributeCond.Type.ISNOTNULL);\n+                        leaf.getSubjectCond().setType(AttributeCond.Type.ISNOTNULL);\n                     } else {\n                         leaf = SearchCond.getNotLeafCond(leaf);\n                     }"},{"sha":"e3d350a40d96d758ff71a7fe202e5f2eb5691c1a","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -187,7 +187,8 @@ public SyncopeUser getUserFromUsername(final String username) {\n      * @return cipher algorithm.\n      */\n     private CipherAlgorithm getPredefinedCipherAlgoritm() {\n-        final String algorithm = confDAO.find(\"password.cipher.algorithm\", \"AES\").getValue();\n+        final String algorithm = confDAO.find(\n+                \"password.cipher.algorithm\", CipherAlgorithm.AES.name()).getValues().get(0).getStringValue();\n \n         try {\n             return CipherAlgorithm.valueOf(algorithm);"},{"sha":"acace5bc3aa82c4a594193d8d73bfc15aeeed62e","filename":"core/src/main/java/org/apache/syncope/core/rest/utils/RestServiceExceptionMapper.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Futils%2FRestServiceExceptionMapper.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -40,7 +40,6 @@\n import org.apache.syncope.common.SyncopeClientCompositeException;\r\n import org.apache.syncope.common.SyncopeClientException;\r\n import org.apache.syncope.common.reqres.ErrorTO;\r\n-import org.apache.syncope.core.persistence.dao.MissingConfKeyException;\r\n import org.apache.syncope.core.persistence.dao.NotFoundException;\r\n import org.apache.syncope.core.persistence.validation.attrvalue.ParsingValidationException;\r\n import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\r\n@@ -166,9 +165,6 @@ private ResponseBuilder getSyncopeClientCompositeExceptionResponse(final Syncope\n     private ResponseBuilder processNotFoundExceptions(final Exception ex) {\r\n         if (ex instanceof javax.ws.rs.NotFoundException || ex instanceof NotFoundException) {\r\n             return builder(Response.Status.NOT_FOUND, ClientExceptionType.NotFound, getExMessage(ex));\r\n-        } else if (ex instanceof MissingConfKeyException) {\r\n-            return builder(Response.Status.NOT_FOUND, ClientExceptionType.NotFound,\r\n-                    getMessage(ex, ((MissingConfKeyException) ex).getConfKey()));\r\n         }\r\n \r\n         return null;\r"},{"sha":"b6b4cab1855c8efa624af446049726e14e054280","filename":"core/src/main/java/org/apache/syncope/core/security/SyncopeAuthenticationProvider.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -20,12 +20,11 @@\n \n import java.util.Date;\n import javax.annotation.Resource;\n-import org.apache.commons.lang3.ArrayUtils;\n import org.apache.syncope.common.types.AuditElements;\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.CipherAlgorithm;\n import org.apache.syncope.core.audit.AuditManager;\n-import org.apache.syncope.core.persistence.beans.SyncopeConf;\n+import org.apache.syncope.core.persistence.beans.conf.CAttr;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.ConfDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n@@ -124,10 +123,9 @@ public Authentication authenticate(final Authentication authentication)\n                     throw new DisabledException(\"User \" + user.getUsername() + \" is suspended\");\n                 }\n \n-                SyncopeConf authStatuses = confDAO.find(\"authentication.statuses\", null);\n+                CAttr authStatuses = confDAO.find(\"authentication.statuses\");\n                 if (authStatuses != null) {\n-                    String[] statuses = authStatuses.getValue().split(\"\\\\|\");\n-                    if (!ArrayUtils.contains(statuses, user.getStatus())) {\n+                    if (!authStatuses.getValuesAsStrings().contains(user.getStatus())) {\n                         throw new DisabledException(\"User \" + user.getUsername() + \" not allowed to authenticate\");\n                     }\n                 }\n@@ -163,7 +161,9 @@ public Authentication authenticate(final Authentication authentication)\n             LOG.debug(\"User {} successfully authenticated, with roles {}\",\n                     authentication.getPrincipal(), token.getAuthorities());\n \n-            if (user != null && Boolean.valueOf(confDAO.find(\"log.lastlogindate\", Boolean.toString(true)).getValue())) {\n+            if (user != null && confDAO.find(\"log.lastlogindate\", Boolean.toString(true)).\n+                    getValues().get(0).getBooleanValue()) {\n+\n                 user.setLastLoginDate(new Date());\n                 user.setFailedLogins(0);\n                 userDAO.save(user);"},{"sha":"5fda2f02e61117dc57525f408c3fd8d63ad39878","filename":"core/src/main/java/org/apache/syncope/core/services/ConfigurationServiceImpl.java","status":"modified","additions":7,"deletions":21,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConfigurationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConfigurationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FConfigurationServiceImpl.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -20,19 +20,16 @@\n \r\n import java.io.IOException;\r\n import java.io.OutputStream;\r\n-import java.net.URI;\r\n import java.util.List;\r\n import javax.ws.rs.core.HttpHeaders;\r\n-\r\n import javax.ws.rs.core.MediaType;\r\n import javax.ws.rs.core.Response;\r\n import javax.ws.rs.core.StreamingOutput;\r\n-\r\n import org.apache.syncope.common.services.ConfigurationService;\r\n-import org.apache.syncope.common.to.ConfigurationTO;\r\n+import org.apache.syncope.common.to.AttributeTO;\r\n+import org.apache.syncope.common.to.ConfTO;\r\n import org.apache.syncope.common.wrap.MailTemplate;\r\n import org.apache.syncope.common.wrap.Validator;\r\n-import org.apache.syncope.common.types.RESTHeaders;\r\n import org.apache.syncope.common.util.CollectionWrapper;\r\n import org.apache.syncope.core.persistence.dao.impl.ContentLoader;\r\n import org.apache.syncope.core.rest.controller.ConfigurationController;\r\n@@ -45,15 +42,6 @@ public class ConfigurationServiceImpl extends AbstractServiceImpl implements Con\n     @Autowired\r\n     private ConfigurationController controller;\r\n \r\n-    @Override\r\n-    public Response create(final ConfigurationTO configurationTO) {\r\n-        ConfigurationTO created = controller.create(configurationTO);\r\n-        URI location = uriInfo.getAbsolutePathBuilder().path(created.getKey()).build();\r\n-        return Response.created(location).\r\n-                header(RESTHeaders.RESOURCE_ID, created.getKey()).\r\n-                build();\r\n-    }\r\n-\r\n     @Override\r\n     public Response export() {\r\n         StreamingOutput sout = new StreamingOutput() {\r\n@@ -75,30 +63,28 @@ public void delete(final String key) {\n     }\r\n \r\n     @Override\r\n-    @SuppressWarnings(\"unchecked\")\r\n     public List<MailTemplate> getMailTemplates() {\r\n         return CollectionWrapper.wrap(controller.getMailTemplates(), MailTemplate.class);\r\n     }\r\n \r\n     @Override\r\n-    @SuppressWarnings(\"unchecked\")\r\n     public List<Validator> getValidators() {\r\n         return CollectionWrapper.wrap(controller.getValidators(), Validator.class);\r\n     }\r\n \r\n     @Override\r\n-    public List<ConfigurationTO> list() {\r\n+    public ConfTO list() {\r\n         return controller.list();\r\n     }\r\n \r\n     @Override\r\n-    public ConfigurationTO read(final String key) {\r\n+    public AttributeTO read(final String key) {\r\n         return controller.read(key);\r\n-\r\n     }\r\n \r\n     @Override\r\n-    public void update(final String key, final ConfigurationTO configurationTO) {\r\n-        controller.update(configurationTO);\r\n+    public void set(final String key, final AttributeTO value) {\r\n+        value.setSchema(key);\r\n+        controller.set(value);\r\n     }\r\n }\r"},{"sha":"c8d3e93a2b3177339a443602772be5bdc590b65f","filename":"core/src/main/java/org/apache/syncope/core/services/UserSelfServiceImpl.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserSelfServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserSelfServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserSelfServiceImpl.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -20,9 +20,11 @@\n \n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.SyncopeClientException;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.services.UserSelfService;\n import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.types.RESTHeaders;\n import org.apache.syncope.core.rest.controller.UserController;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -43,6 +45,12 @@ public Response getOptions() {\n \n     @Override\n     public Response create(final UserTO userTO) {\n+        if (!controller.isSelfRegistrationAllowed()) {\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unauthorized);\n+            sce.getElements().add(\"SelfRegistration forbidden by configuration\");\n+            throw sce;\n+        }\n+\n         UserTO created = controller.createSelf(userTO);\n         return createResponse(created.getId(), created).build();\n     }"},{"sha":"0d2d3a45fa4db366c57e56fe85fcd5c1c23ef620","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/PushJob.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FPushJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FPushJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FPushJob.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -23,23 +23,22 @@\n import java.util.List;\n import java.util.Set;\n import org.apache.commons.lang.StringUtils;\n-import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.common.types.SyncPolicySpec;\n import org.apache.syncope.core.persistence.beans.PushTask;\n import org.apache.syncope.core.persistence.beans.role.RMapping;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.beans.user.UMapping;\n-import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n+import org.apache.syncope.core.persistence.dao.SubjectSearchDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\n import org.apache.syncope.core.propagation.Connector;\n import org.apache.syncope.core.rest.data.SearchCondConverter;\n import org.apache.syncope.core.sync.PushActions;\n import org.apache.syncope.core.sync.SyncResult;\n import org.apache.syncope.core.util.ApplicationContextProvider;\n-import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -64,7 +63,7 @@ public class PushJob extends AbstractSyncJob<PushTask, PushActions> {\n      * Search DAO.\n      */\n     @Autowired\n-    private AttributableSearchDAO searchDAO;\n+    private SubjectSearchDAO searchDAO;\n \n     /**\n      * Role DAO.\n@@ -159,7 +158,7 @@ private List<SyncopeUser> getUsers(final Set<Long> authorizations, final PushTas\n         } else {\n             return searchDAO.<SyncopeUser>search(\n                     authorizations, SearchCondConverter.convert(filter),\n-                    Collections.<OrderByClause>emptyList(), AttributableUtil.getInstance(AttributableType.USER));\n+                    Collections.<OrderByClause>emptyList(), SubjectType.USER);\n         }\n     }\n \n@@ -170,7 +169,7 @@ private List<SyncopeRole> getRoles(final Set<Long> authorizations, final PushTas\n         } else {\n             return searchDAO.<SyncopeRole>search(\n                     authorizations, SearchCondConverter.convert(filter),\n-                    Collections.<OrderByClause>emptyList(), AttributableUtil.getInstance(AttributableType.ROLE));\n+                    Collections.<OrderByClause>emptyList(), SubjectType.ROLE);\n         }\n     }\n }"},{"sha":"a6c350df9d937f46b007ae6ad73e88f7e3902087","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/SyncopePushResultHandler.java","status":"modified","additions":11,"deletions":17,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopePushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopePushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopePushResultHandler.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -28,14 +28,14 @@\n import org.apache.syncope.common.types.AuditElements;\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.ResourceOperation;\n-import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n+import org.apache.syncope.core.persistence.beans.AbstractSubject;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.PushTask;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.propagation.TimeoutException;\n import org.apache.syncope.core.propagation.impl.AbstractPropagationTaskExecutor;\n-import org.apache.syncope.core.rest.controller.AbstractAttributableController;\n+import org.apache.syncope.core.rest.controller.AbstractSubjectController;\n import org.apache.syncope.core.sync.PushActions;\n import org.apache.syncope.core.sync.SyncResult;\n import org.apache.syncope.core.util.AttributableUtil;\n@@ -56,50 +56,44 @@ public Map<Long, String> getRoleOwnerMap() {\n     }\n \n     @Transactional\n-    public boolean handle(final AbstractAttributable attributable) {\n+    public boolean handle(final AbstractSubject subject) {\n         try {\n-            doHandle(attributable);\n+            doHandle(subject);\n             return true;\n         } catch (JobExecutionException e) {\n             LOG.error(\"Synchronization failed\", e);\n             return false;\n         }\n     }\n \n-    /**\n-     * Look into SyncDelta and take necessary actions (create / update / delete) on user(s).\n-     *\n-     * @param delta returned by the underlying connector\n-     * @throws JobExecutionException in case of synchronization failure.\n-     */\n-    protected final void doHandle(final AbstractAttributable attributable)\n+    protected final void doHandle(final AbstractSubject subject)\n             throws JobExecutionException {\n \n         if (results == null) {\n             results = new ArrayList<SyncResult>();\n         }\n \n-        final AttributableUtil attrUtil = AttributableUtil.getInstance(attributable);\n+        final AttributableUtil attrUtil = AttributableUtil.getInstance(subject);\n \n         final SyncResult result = new SyncResult();\n         results.add(result);\n \n-        result.setId(attributable.getId());\n+        result.setId(subject.getId());\n         result.setSubjectType(attrUtil.getType());\n \n-        final AbstractAttributableController<?, ?> controller;\n-        final AbstractAttributable toBeHandled;\n+        final AbstractSubjectController<?, ?> controller;\n+        final AbstractSubject toBeHandled;\n         final Boolean enabled;\n \n         if (attrUtil.getType() == AttributableType.USER) {\n-            toBeHandled = userDataBinder.getUserFromId(attributable.getId());\n+            toBeHandled = userDataBinder.getUserFromId(subject.getId());\n             result.setName(((SyncopeUser) toBeHandled).getUsername());\n             enabled = getSyncTask().isSyncStatus()\n                     ? ((SyncopeUser) toBeHandled).isSuspended() ? Boolean.FALSE : Boolean.TRUE\n                     : null;\n             controller = userController;\n         } else {\n-            toBeHandled = roleDataBinder.getRoleFromId(attributable.getId());\n+            toBeHandled = roleDataBinder.getRoleFromId(subject.getId());\n             result.setName(((SyncopeRole) toBeHandled).getName());\n             enabled = null;\n             controller = roleController;"},{"sha":"bdcae0e1a188cdb694f450c6fdf97e69ba718a89","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/SyncopeSyncResultHandler.java","status":"modified","additions":34,"deletions":34,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -31,10 +31,6 @@\n import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.mod.RoleMod;\n import org.apache.syncope.common.mod.UserMod;\n-import org.apache.syncope.core.persistence.dao.search.AttributableCond;\n-import org.apache.syncope.core.persistence.dao.search.AttributeCond;\n-import org.apache.syncope.core.persistence.dao.search.SearchCond;\n-import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.common.to.AttributeTO;\n import org.apache.syncope.common.to.RoleTO;\n@@ -44,35 +40,39 @@\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.MappingPurpose;\n import org.apache.syncope.common.types.ResourceOperation;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.common.types.SyncPolicySpec;\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n-import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractSubject;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.SyncPolicy;\n import org.apache.syncope.core.persistence.beans.SyncTask;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.apache.syncope.core.persistence.dao.PolicyDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.SchemaDAO;\n+import org.apache.syncope.core.persistence.dao.SubjectSearchDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n+import org.apache.syncope.core.persistence.dao.search.AttributeCond;\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\n+import org.apache.syncope.core.persistence.dao.search.SearchCond;\n+import org.apache.syncope.core.persistence.dao.search.SubjectCond;\n import org.apache.syncope.core.persistence.validation.attrvalue.ParsingValidationException;\n import org.apache.syncope.core.propagation.PropagationByResource;\n import org.apache.syncope.core.propagation.PropagationException;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n import org.apache.syncope.core.propagation.impl.PropagationManager;\n-import org.apache.syncope.core.rest.controller.AbstractAttributableController;\n+import org.apache.syncope.core.rest.controller.AbstractSubjectController;\n import org.apache.syncope.core.rest.controller.UnauthorizedRoleException;\n import org.apache.syncope.core.rest.data.AttributableTransformer;\n import org.apache.syncope.core.sync.SyncActions;\n-import org.apache.syncope.core.sync.SyncResult;\n import org.apache.syncope.core.sync.SyncCorrelationRule;\n+import org.apache.syncope.core.sync.SyncResult;\n import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.apache.syncope.core.workflow.WorkflowResult;\n@@ -126,7 +126,7 @@ public class SyncopeSyncResultHandler extends AbstractSyncopeResultHandler<SyncT\n      * Search DAO.\n      */\n     @Autowired\n-    protected AttributableSearchDAO searchDAO;\n+    protected SubjectSearchDAO searchDAO;\n \n     /**\n      * Propagation Manager.\n@@ -181,17 +181,17 @@ protected List<Long> findByAccountIdItem(final String uid, final AttributableUti\n                     }\n                 }\n \n-                List<AbstractAttributable> subjects =\n+                List<AbstractSubject> subjects =\n                         userDAO.findByAttrValue(accountIdItem.getIntAttrName(), value, attrUtil);\n-                for (AbstractAttributable subject : subjects) {\n+                for (AbstractSubject subject : subjects) {\n                     result.add(subject.getId());\n                 }\n                 break;\n \n             case UserDerivedSchema:\n             case RoleDerivedSchema:\n                 subjects = userDAO.findByDerAttrValue(accountIdItem.getIntAttrName(), uid, attrUtil);\n-                for (AbstractAttributable subject : subjects) {\n+                for (AbstractSubject subject : subjects) {\n                     result.add(subject.getId());\n                 }\n                 break;\n@@ -231,23 +231,23 @@ protected List<Long> findByAccountIdItem(final String uid, final AttributableUti\n         return result;\n     }\n \n-    protected List<Long> search(final SearchCond searchCond, final AttributableUtil attrUtil) {\n+    protected List<Long> search(final SearchCond searchCond, final SubjectType type) {\n         final List<Long> result = new ArrayList<Long>();\n \n-        final List<AbstractAttributable> subjects = searchDAO.search(\n+        final List<AbstractSubject> subjects = searchDAO.search(\n                 EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n-                searchCond, Collections.<OrderByClause>emptyList(), attrUtil);\n-        for (AbstractAttributable subject : subjects) {\n+                searchCond, Collections.<OrderByClause>emptyList(), type);\n+        for (AbstractSubject subject : subjects) {\n             result.add(subject.getId());\n         }\n \n         return result;\n     }\n \n     protected List<Long> findByCorrelationRule(\n-            final ConnectorObject connObj, final SyncCorrelationRule rule, final AttributableUtil attrUtil) {\n+            final ConnectorObject connObj, final SyncCorrelationRule rule, final SubjectType type) {\n \n-        return search(rule.getSearchCond(connObj), attrUtil);\n+        return search(rule.getSearchCond(connObj), type);\n     }\n \n     protected List<Long> findByAttributableSearch(\n@@ -287,7 +287,7 @@ protected List<Long> findByAttributableSearch(\n             if (\"id\".equalsIgnoreCase(schema) || \"username\".equalsIgnoreCase(schema)\n                     || \"name\".equalsIgnoreCase(schema)) {\n \n-                AttributableCond cond = new AttributableCond();\n+                SubjectCond cond = new SubjectCond();\n                 cond.setSchema(schema);\n                 cond.setType(type);\n                 cond.setExpression(expression);\n@@ -307,7 +307,7 @@ protected List<Long> findByAttributableSearch(\n                     : SearchCond.getAndCond(searchCond, nodeCond);\n         }\n \n-        return search(searchCond, attrUtil);\n+        return search(searchCond, SubjectType.valueOf(attrUtil.getType().name()));\n     }\n \n     /**\n@@ -342,7 +342,7 @@ protected List<Long> findExisting(final String uid, final ConnectorObject connOb\n         return syncRule == null ? altSearchSchemas == null || altSearchSchemas.isEmpty()\n                 ? findByAccountIdItem(uid, attrUtil)\n                 : findByAttributableSearch(connObj, altSearchSchemas, attrUtil)\n-                : findByCorrelationRule(connObj, syncRule, attrUtil);\n+                : findByCorrelationRule(connObj, syncRule, SubjectType.valueOf(attrUtil.getType().name()));\n     }\n \n     public Long findMatchingAttributableId(final ObjectClass objectClass, final String name) {\n@@ -410,7 +410,7 @@ protected List<SyncResult> create(\n             final SyncDelta delta, final AttributableUtil attrUtil, final boolean dryRun)\n             throws JobExecutionException {\n \n-        final AbstractAttributableTO subjectTO =\n+        final AbstractSubjectTO subjectTO =\n                 connObjectUtil.getSubjectTO(delta.getObject(), syncTask, attrUtil);\n \n         SyncDelta _delta = delta;\n@@ -422,7 +422,7 @@ protected List<SyncResult> create(\n     }\n \n     private List<SyncResult> create(\n-            final AbstractAttributableTO subjectTO,\n+            final AbstractSubjectTO subjectTO,\n             final SyncDelta delta,\n             final AttributableUtil attrUtil,\n             final String operation,\n@@ -440,7 +440,7 @@ private List<SyncResult> create(\n         result.setStatus(SyncResult.Status.SUCCESS);\n \n         // Attributable transformation (if configured)\n-        AbstractAttributableTO actual = attrTransformer.transform(subjectTO);\n+        AbstractSubjectTO actual = attrTransformer.transform(subjectTO);\n         LOG.debug(\"Transformed: {}\", actual);\n \n         if (dryRun) {\n@@ -668,7 +668,7 @@ protected List<SyncResult> update(SyncDelta delta, final List<Long> subjects, fi\n             LOG.debug(\"About to update {}\", id);\n \n             Object output;\n-            AbstractAttributableTO before = null;\n+            AbstractSubjectTO before = null;\n             Result resultStatus;\n \n             final SyncResult result = new SyncResult();\n@@ -678,7 +678,7 @@ protected List<SyncResult> update(SyncDelta delta, final List<Long> subjects, fi\n             result.setId(id);\n \n             try {\n-                final AbstractAttributableTO updated;\n+                final AbstractSubjectTO updated;\n                 if (AttributableType.USER == attrUtil.getType()) {\n                     final Map.Entry<UserTO, UserTO> res = updateUser(id, delta, dryRun, result);\n                     before = res.getKey();\n@@ -754,7 +754,7 @@ protected List<SyncResult> deprovision(\n \n         final List<SyncResult> updResults = new ArrayList<SyncResult>();\n \n-        final AbstractAttributableController<?, ?> controller;\n+        final AbstractSubjectController<?, ?> controller;\n         if (AttributableType.USER == attrUtil.getType()) {\n             controller = userController;\n         } else {\n@@ -773,7 +773,7 @@ protected List<SyncResult> deprovision(\n             result.setStatus(SyncResult.Status.SUCCESS);\n             result.setId(id);\n \n-            final AbstractAttributableTO before = controller.read(id);\n+            final AbstractSubjectTO before = controller.read(id);\n             result.setName(before instanceof UserTO ? UserTO.class.cast(before).getUsername()\n                     : before instanceof RoleTO ? RoleTO.class.cast(before).getName() : null);\n \n@@ -794,7 +794,7 @@ protected List<SyncResult> deprovision(\n \n                     output = controller.read(id);\n                     for (SyncActions action : actions) {\n-                        action.after(this, delta, AbstractAttributableTO.class.cast(output), result);\n+                        action.after(this, delta, AbstractSubjectTO.class.cast(output), result);\n                     }\n                 } else {\n                     output = before;\n@@ -861,7 +861,7 @@ protected List<SyncResult> link(\n \n         final List<SyncResult> updResults = new ArrayList<SyncResult>();\n \n-        final AbstractAttributableController<?, ?> controller;\n+        final AbstractSubjectController<?, ?> controller;\n         if (AttributableType.USER == attrUtil.getType()) {\n             controller = userController;\n         } else {\n@@ -880,7 +880,7 @@ protected List<SyncResult> link(\n             result.setStatus(SyncResult.Status.SUCCESS);\n             result.setId(id);\n \n-            final AbstractAttributableTO before = controller.read(id);\n+            final AbstractSubjectTO before = controller.read(id);\n             result.setName(before instanceof UserTO ? UserTO.class.cast(before).getUsername()\n                     : before instanceof RoleTO ? RoleTO.class.cast(before).getName() : null);\n \n@@ -900,7 +900,7 @@ protected List<SyncResult> link(\n \n                     output = controller.read(id);\n                     for (SyncActions action : actions) {\n-                        action.after(this, delta, AbstractAttributableTO.class.cast(output), result);\n+                        action.after(this, delta, AbstractSubjectTO.class.cast(output), result);\n                     }\n                 } else {\n                     output = before;\n@@ -967,7 +967,7 @@ protected List<SyncResult> delete(SyncDelta delta, final List<Long> subjects, fi\n             Object output = null;\n             Result resultStatus = Result.FAILURE;\n \n-            AbstractAttributableTO before = null;\n+            AbstractSubjectTO before = null;\n \n             try {\n                 before = AttributableType.USER == attrUtil.getType()\n@@ -1059,7 +1059,7 @@ protected List<SyncResult> delete(SyncDelta delta, final List<Long> subjects, fi\n     }\n \n     /**\n-     * Look into SyncDelta and take necessary actions (create / update / delete) on user(s).\n+     * Look into SyncDelta and take necessary actions (create / update / delete) on user(s) / role(s).\n      *\n      * @param delta returned by the underlying connector\n      * @throws JobExecutionException in case of synchronization failure."},{"sha":"9d921e1604fd31fb8b18dab6f308b0b4750929c7","filename":"core/src/main/java/org/apache/syncope/core/util/AttributableUtil.java","status":"modified","additions":87,"deletions":9,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -24,13 +24,13 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.AbstractSubjectTO;\n+import org.apache.syncope.common.to.ConfTO;\n import org.apache.syncope.common.to.MembershipTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.IntMappingType;\n import org.apache.syncope.common.types.MappingPurpose;\n-import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.common.types.SyncPolicySpec;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractAttrTemplate;\n@@ -43,6 +43,11 @@\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.AbstractVirSchema;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n+import org.apache.syncope.core.persistence.beans.conf.CAttr;\n+import org.apache.syncope.core.persistence.beans.conf.CAttrUniqueValue;\n+import org.apache.syncope.core.persistence.beans.conf.CAttrValue;\n+import org.apache.syncope.core.persistence.beans.conf.CSchema;\n+import org.apache.syncope.core.persistence.beans.conf.SyncopeConf;\n import org.apache.syncope.core.persistence.beans.membership.MAttr;\n import org.apache.syncope.core.persistence.beans.membership.MAttrTemplate;\n import org.apache.syncope.core.persistence.beans.membership.MAttrUniqueValue;\n@@ -128,6 +133,9 @@ public static AttributableUtil getInstance(final AbstractAttributable attributab\n         if (attributable instanceof Membership) {\n             type = AttributableType.MEMBERSHIP;\n         }\n+        if (attributable instanceof SyncopeConf) {\n+            type = AttributableType.CONFIGURATION;\n+        }\n \n         if (type == null) {\n             throw new IllegalArgumentException(\"Attributable type not supported: \" + attributable.getClass().getName());\n@@ -152,6 +160,9 @@ public <T extends AbstractAttributable> Class<T> attributableClass() {\n                 result = Membership.class;\n                 break;\n \n+            case CONFIGURATION:\n+                result = SyncopeConf.class;\n+\n             case USER:\n             default:\n                 result = SyncopeUser.class;\n@@ -180,6 +191,7 @@ public String getAccountLink(final ExternalResource resource) {\n                     }\n                     break;\n                 case MEMBERSHIP:\n+                case CONFIGURATION:\n                 default:\n             }\n         }\n@@ -278,7 +290,7 @@ public <T extends AbstractMappingItem> List<T> getMappingItems(\n     }\n \n     public <T extends AbstractMappingItem> Class<T> mappingItemClass() {\n-        Class result;\n+        Class result = null;\n \n         switch (type) {\n             case USER:\n@@ -288,15 +300,16 @@ public <T extends AbstractMappingItem> Class<T> mappingItemClass() {\n                 result = RMappingItem.class;\n                 break;\n             case MEMBERSHIP:\n-            default:\n                 result = AbstractMappingItem.class;\n+            case CONFIGURATION:\n+            default:\n         }\n \n         return result;\n     }\n \n     public IntMappingType intMappingType() {\n-        IntMappingType result;\n+        IntMappingType result = null;\n \n         switch (type) {\n             case ROLE:\n@@ -306,16 +319,17 @@ public IntMappingType intMappingType() {\n                 result = IntMappingType.MembershipSchema;\n                 break;\n             case USER:\n-            default:\n                 result = IntMappingType.UserSchema;\n                 break;\n+            case CONFIGURATION:\n+            default:\n         }\n \n         return result;\n     }\n \n     public IntMappingType derIntMappingType() {\n-        IntMappingType result;\n+        IntMappingType result = null;\n \n         switch (type) {\n             case ROLE:\n@@ -325,16 +339,17 @@ public IntMappingType derIntMappingType() {\n                 result = IntMappingType.MembershipDerivedSchema;\n                 break;\n             case USER:\n-            default:\n                 result = IntMappingType.UserDerivedSchema;\n                 break;\n+            case CONFIGURATION:\n+            default:\n         }\n \n         return result;\n     }\n \n     public IntMappingType virIntMappingType() {\n-        IntMappingType result;\n+        IntMappingType result = null;\n \n         switch (type) {\n             case ROLE:\n@@ -344,9 +359,10 @@ public IntMappingType virIntMappingType() {\n                 result = IntMappingType.MembershipVirtualSchema;\n                 break;\n             case USER:\n-            default:\n                 result = IntMappingType.UserVirtualSchema;\n                 break;\n+            case CONFIGURATION:\n+            default:\n         }\n \n         return result;\n@@ -365,6 +381,10 @@ public <T extends AbstractNormalSchema> Class<T> schemaClass() {\n             case MEMBERSHIP:\n                 result = MSchema.class;\n                 break;\n+            case CONFIGURATION:\n+                result = CSchema.class;\n+                break;\n+            default:\n         }\n \n         return result;\n@@ -385,6 +405,12 @@ public <T extends AbstractNormalSchema> T newSchema() {\n             case MEMBERSHIP:\n                 result = (T) new MSchema();\n                 break;\n+\n+            case CONFIGURATION:\n+                result = (T) new CSchema();\n+                break;\n+\n+            default:\n         }\n \n         return result;\n@@ -403,6 +429,8 @@ public <T extends AbstractDerSchema> Class<T> derSchemaClass() {\n             case MEMBERSHIP:\n                 result = MDerSchema.class;\n                 break;\n+            case CONFIGURATION:\n+            default:\n         }\n \n         return result;\n@@ -421,6 +449,8 @@ public <T extends AbstractVirSchema> Class<T> virSchemaClass() {\n             case MEMBERSHIP:\n                 result = MVirSchema.class;\n                 break;\n+            case CONFIGURATION:\n+            default:\n         }\n \n         return result;\n@@ -439,6 +469,8 @@ public <T extends AbstractDerSchema> T newDerSchema() {\n             case MEMBERSHIP:\n                 result = (T) new MDerSchema();\n                 break;\n+            case CONFIGURATION:\n+            default:\n         }\n \n         return result;\n@@ -457,6 +489,8 @@ public <T extends AbstractAttrTemplate> Class<T> attrTemplateClass() {\n             case MEMBERSHIP:\n                 result = MAttrTemplate.class;\n                 break;\n+            case CONFIGURATION:\n+            default:\n         }\n \n         return result;\n@@ -475,6 +509,9 @@ public <T extends AbstractAttr> Class<T> attrClass() {\n             case MEMBERSHIP:\n                 result = MAttr.class;\n                 break;\n+            case CONFIGURATION:\n+                result = CAttr.class;\n+            default:\n         }\n \n         return result;\n@@ -493,6 +530,9 @@ public <T extends AbstractAttr> T newAttr() {\n             case MEMBERSHIP:\n                 result = (T) new MAttr();\n                 break;\n+            case CONFIGURATION:\n+                result = (T) new CAttr();\n+            default:\n         }\n \n         return result;\n@@ -511,6 +551,8 @@ public <T extends AbstractAttrTemplate> Class<T> derAttrTemplateClass() {\n             case MEMBERSHIP:\n                 result = MDerAttrTemplate.class;\n                 break;\n+            case CONFIGURATION:\n+            default:\n         }\n \n         return result;\n@@ -529,6 +571,8 @@ public <T extends AbstractDerAttr> Class<T> derAttrClass() {\n             case MEMBERSHIP:\n                 result = MDerAttr.class;\n                 break;\n+            case CONFIGURATION:\n+            default:\n         }\n \n         return result;\n@@ -547,6 +591,8 @@ public <T extends AbstractAttrTemplate> Class<T> virAttrTemplateClass() {\n             case MEMBERSHIP:\n                 result = MVirAttrTemplate.class;\n                 break;\n+            case CONFIGURATION:\n+            default:\n         }\n \n         return result;\n@@ -565,6 +611,8 @@ public <T extends AbstractVirAttr> Class<T> virAttrClass() {\n             case MEMBERSHIP:\n                 result = MVirAttr.class;\n                 break;\n+            case CONFIGURATION:\n+            default:\n         }\n \n         return result;\n@@ -583,6 +631,8 @@ public <T extends AbstractDerAttr> T newDerAttr() {\n             case MEMBERSHIP:\n                 result = (T) new MDerAttr();\n                 break;\n+            case CONFIGURATION:\n+            default:\n         }\n \n         return result;\n@@ -601,6 +651,8 @@ public <T extends AbstractVirAttr> T newVirAttr() {\n             case MEMBERSHIP:\n                 result = (T) new MVirAttr();\n                 break;\n+            case CONFIGURATION:\n+            default:\n         }\n \n         return result;\n@@ -619,6 +671,8 @@ public <T extends AbstractVirSchema> T newVirSchema() {\n             case MEMBERSHIP:\n                 result = (T) new MVirSchema();\n                 break;\n+            case CONFIGURATION:\n+            default:\n         }\n \n         return result;\n@@ -637,6 +691,10 @@ public <T extends AbstractAttrValue> Class<T> attrValueClass() {\n             case MEMBERSHIP:\n                 result = MAttrValue.class;\n                 break;\n+            case CONFIGURATION:\n+                result = CAttrValue.class;\n+                break;\n+            default:\n         }\n \n         return result;\n@@ -655,6 +713,10 @@ public <T extends AbstractAttrValue> T newAttrValue() {\n             case MEMBERSHIP:\n                 result = (T) new MAttrValue();\n                 break;\n+            case CONFIGURATION:\n+                result = (T) new CAttrValue();\n+                break;\n+            default:\n         }\n \n         return result;\n@@ -673,6 +735,10 @@ public <T extends AbstractAttrValue> Class<T> attrUniqueValueClass() {\n             case MEMBERSHIP:\n                 result = MAttrUniqueValue.class;\n                 break;\n+            case CONFIGURATION:\n+                result = CAttrUniqueValue.class;\n+                break;\n+            default:\n         }\n \n         return result;\n@@ -691,6 +757,10 @@ public <T extends AbstractAttrValue> T newAttrUniqueValue() {\n             case MEMBERSHIP:\n                 result = (T) new MAttrUniqueValue();\n                 break;\n+            case CONFIGURATION:\n+                result = (T) new CAttrUniqueValue();\n+                break;\n+            default:\n         }\n \n         return result;\n@@ -707,6 +777,7 @@ public List<String> getAltSearchSchemas(final SyncPolicySpec policySpec) {\n                 result = policySpec.getrAltSearchSchemas();\n                 break;\n             case MEMBERSHIP:\n+            case CONFIGURATION:\n             default:\n         }\n \n@@ -724,6 +795,7 @@ public SyncCorrelationRule getCorrelationRule(final SyncPolicySpec policySpec) {\n                 clazz = policySpec.getRoleJavaRule();\n                 break;\n             case MEMBERSHIP:\n+            case CONFIGURATION:\n             default:\n                 clazz = null;\n         }\n@@ -754,6 +826,10 @@ public <T extends AbstractAttributableTO> T newAttributableTO() {\n             case MEMBERSHIP:\n                 result = (T) new MembershipTO();\n                 break;\n+            case CONFIGURATION:\n+                result = (T) new ConfTO();\n+                break;\n+            default:\n         }\n \n         return result;\n@@ -770,6 +846,8 @@ public <T extends AbstractSubjectTO> T newSubjectTO() {\n                 result = (T) new RoleTO();\n                 break;\n             case MEMBERSHIP:\n+            case CONFIGURATION:\n+            default:\n                 break;\n         }\n "},{"sha":"0fa0ca86b6f95b846d7d3356f48171bcf07e8397","filename":"core/src/main/java/org/apache/syncope/core/util/MappingUtil.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -43,6 +43,7 @@\n import org.apache.syncope.core.persistence.beans.AbstractDerAttr;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n+import org.apache.syncope.core.persistence.beans.AbstractSubject;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.AbstractVirSchema;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n@@ -139,7 +140,7 @@ public static <T extends AbstractMappingItem> Set<T> getMatchingMappingItems(fin\n      * @param resource target resource\n      * @return account link + prepared attributes\n      */\n-    public static <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> prepareAttributes(\n+    public static <T extends AbstractSubject> Map.Entry<String, Set<Attribute>> prepareAttributes(\n             final AttributableUtil attrUtil, final T subject, final String password, final boolean changePwd,\n             final Set<String> vAttrsToBeRemoved, final Map<String, AttributeMod> vAttrsToBeUpdated,\n             final Set<String> membVAttrsToBeRemoved, final Map<String, AttributeMod> membVAttrsToBeUpdated,\n@@ -640,7 +641,6 @@ public static List<AbstractAttrValue> getIntValues(final ExternalResource resour\n      * @param attributable attributable\n      * @param accountIdItem accountId mapping item\n      * @param resource external resource\n-     * @param accountIdItem accountid mapping item\n      * @return accountId internal value\n      */\n     public static String getAccountIdValue(final AbstractAttributable attributable, final ExternalResource resource,"},{"sha":"cfc345ac2662d98c5b92616132bec30f7985630b","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/task/GenerateToken.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2Ftask%2FGenerateToken.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2Ftask%2FGenerateToken.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2Ftask%2FGenerateToken.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -36,8 +36,8 @@ protected void doExecute(final String executionId) {\n                 (SyncopeUser) runtimeService.getVariable(executionId, ActivitiUserWorkflowAdapter.SYNCOPE_USER);\n \n         user.generateToken(\n-                Integer.parseInt(confDAO.find(\"token.length\", \"256\").getValue()),\n-                Integer.parseInt(confDAO.find(\"token.expireTime\", \"60\").getValue()));\n+                confDAO.find(\"token.length\", \"256\").getValues().get(0).getLongValue().intValue(),\n+                confDAO.find(\"token.expireTime\", \"60\").getValues().get(0).getLongValue().intValue());\n \n         runtimeService.setVariable(executionId, ActivitiUserWorkflowAdapter.SYNCOPE_USER, user);\n     }"},{"sha":"68fbc657d7602cc24fbe953274040ee53bad71bc","filename":"core/src/main/resources/META-INF/orm.xml","status":"modified","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -37,6 +37,7 @@ under the License.\n   <table-generator name=\"SEQ_UAttrValue\" pk-column-value=\"SEQ_UAttrValue\" initial-value=\"100\"/>\n   <table-generator name=\"SEQ_RAttrValue\" pk-column-value=\"SEQ_RAttrValue\" initial-value=\"100\"/>\n   <table-generator name=\"SEQ_MAttrValue\" pk-column-value=\"SEQ_MAttrValue\" initial-value=\"100\"/>\n+  <table-generator name=\"SEQ_CAttrValue\" pk-column-value=\"SEQ_CAttrValue\" initial-value=\"100\"/>\n \n   <entity class=\"org.apache.syncope.core.persistence.beans.user.SyncopeUser\">\n     <attributes>\n@@ -131,6 +132,14 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n+  <entity class=\"org.apache.syncope.core.persistence.beans.conf.CAttr\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_CAttr\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_CAttr\" pk-column-value=\"SEQ_CAttr\" initial-value=\"1000\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n     \n   <entity class=\"org.apache.syncope.core.persistence.beans.user.UAttrValue\">\n     <attributes>\n@@ -240,6 +249,42 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n+  <entity class=\"org.apache.syncope.core.persistence.beans.conf.CAttrValue\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_CAttrValue\" strategy=\"TABLE\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n+  <entity class=\"org.apache.syncope.core.persistence.beans.conf.CAttrUniqueValue\">\n+    <table>\n+      <unique-constraint>\n+        <column-name>booleanValue</column-name>\n+        <column-name>schema_name</column-name>\n+      </unique-constraint>\n+      <unique-constraint>\n+        <column-name>dateValue</column-name>\n+        <column-name>schema_name</column-name>\n+      </unique-constraint>\n+      <unique-constraint>\n+        <column-name>stringValue</column-name>\n+        <column-name>schema_name</column-name>\n+      </unique-constraint>\n+      <unique-constraint>\n+        <column-name>doubleValue</column-name>\n+        <column-name>schema_name</column-name>\n+      </unique-constraint>\n+      <unique-constraint>\n+        <column-name>longValue</column-name>\n+        <column-name>schema_name</column-name>\n+      </unique-constraint>\n+    </table>\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_CAttrValue\" strategy=\"TABLE\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n \n   <entity class=\"org.apache.syncope.core.persistence.beans.Task\">\n     <attributes>"},{"sha":"ef91e6561df61e7e462ca3ead7057eef21ea7261","filename":"core/src/main/resources/META-INF/orm.xml.oracle","status":"modified","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.oracle","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.oracle","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.oracle?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -38,6 +38,7 @@ under the License.\n   <table-generator name=\"SEQ_UAttrValue\" pk-column-value=\"SEQ_UAttrValue\" initial-value=\"100\"/>\n   <table-generator name=\"SEQ_RAttrValue\" pk-column-value=\"SEQ_RAttrValue\" initial-value=\"100\"/>\n   <table-generator name=\"SEQ_MAttrValue\" pk-column-value=\"SEQ_MAttrValue\" initial-value=\"100\"/>\n+  <table-generator name=\"SEQ_CAttrValue\" pk-column-value=\"SEQ_CAttrValue\" initial-value=\"100\"/>\n \n   <entity class=\"org.apache.syncope.core.persistence.beans.user.SyncopeUser\">\n     <attributes>\n@@ -132,6 +133,14 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n+  <entity class=\"org.apache.syncope.core.persistence.beans.conf.CAttr\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_CAttr\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_CAttr\" pk-column-value=\"SEQ_CAttr\" initial-value=\"1000\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n \n   <entity class=\"org.apache.syncope.core.persistence.beans.user.UAttrValue\">\n     <attributes>\n@@ -205,6 +214,30 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n+  <entity class=\"org.apache.syncope.core.persistence.beans.membership.CAttrValue\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_CAttrValue\" strategy=\"TABLE\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n+  <entity class=\"org.apache.syncope.core.persistence.beans.conf.CAttrUniqueValue\">\n+    <table>\n+      <unique-constraint>\n+        <column-name>booleanValue</column-name>\n+        <column-name>dateValue</column-name>\n+        <column-name>stringValue</column-name>\n+        <column-name>doubleValue</column-name>\n+        <column-name>longValue</column-name>\n+        <column-name>schema_name</column-name>\n+      </unique-constraint>\n+    </table>\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_CAttrValue\" strategy=\"TABLE\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n \n   <entity class=\"org.apache.syncope.core.persistence.beans.Task\">\n     <attributes>"},{"sha":"edc088ba9836292193d39d9775ad6f2a64ad1039","filename":"core/src/main/resources/META-INF/orm.xml.sqlserver","status":"modified","additions":46,"deletions":1,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.sqlserver","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.sqlserver","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.sqlserver?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -38,6 +38,7 @@ under the License.\n   <table-generator name=\"SEQ_UAttrValue\" pk-column-value=\"SEQ_UAttrValue\" initial-value=\"100\"/>\n   <table-generator name=\"SEQ_RAttrValue\" pk-column-value=\"SEQ_RAttrValue\" initial-value=\"100\"/>\n   <table-generator name=\"SEQ_MAttrValue\" pk-column-value=\"SEQ_MAttrValue\" initial-value=\"100\"/>\n+  <table-generator name=\"SEQ_CAttrValue\" pk-column-value=\"SEQ_CAttrValue\" initial-value=\"100\"/>\n \n   <entity class=\"org.apache.syncope.core.persistence.beans.user.SyncopeUser\">\n     <attributes>\n@@ -132,7 +133,15 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n-    \n+  <entity class=\"org.apache.syncope.core.persistence.beans.conf.CAttr\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_CAttr\" strategy=\"TABLE\"/>\n+        <table-generator name=\"SEQ_CAttr\" pk-column-value=\"SEQ_CAttr\" initial-value=\"1000\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n+      \n   <entity class=\"org.apache.syncope.core.persistence.beans.user.UAttrValue\">\n     <attributes>\n       <id name=\"id\">\n@@ -229,6 +238,42 @@ under the License.\n       </id>\n     </attributes>\n   </entity>\n+  <entity class=\"org.apache.syncope.core.persistence.beans.conf.CAttrValue\">\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_CAttrValue\" strategy=\"TABLE\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n+  <entity class=\"org.apache.syncope.core.persistence.beans.conf.CAttrUniqueValue\">\n+    <table>\n+      <unique-constraint>\n+        <column-name>booleanValue</column-name>\n+        <column-name>schema_name</column-name>\n+      </unique-constraint>\n+      <unique-constraint>\n+        <column-name>dateValue</column-name>\n+        <column-name>schema_name</column-name>\n+      </unique-constraint>\n+      <unique-constraint>\n+        <column-name>stringValue</column-name>\n+        <column-name>schema_name</column-name>\n+      </unique-constraint>\n+      <unique-constraint>\n+        <column-name>doubleValue</column-name>\n+        <column-name>schema_name</column-name>\n+      </unique-constraint>\n+      <unique-constraint>\n+        <column-name>longValue</column-name>\n+        <column-name>schema_name</column-name>\n+      </unique-constraint>\n+    </table>\n+    <attributes>\n+      <id name=\"id\">\n+        <generated-value generator=\"SEQ_CAttrValue\" strategy=\"TABLE\"/>\n+      </id>\n+    </attributes>\n+  </entity>\n \n   <entity class=\"org.apache.syncope.core.persistence.beans.Task\">\n     <attributes>"},{"sha":"1117cbe92309f493e0ebbf7db5ff7d1393060128","filename":"core/src/main/resources/content.xml","status":"modified","additions":45,"deletions":11,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -18,20 +18,54 @@ specific language governing permissions and limitations\n under the License.\n -->\n <dataset>\n-  <SyncopeConf confKey=\"password.cipher.algorithm\" confValue=\"SHA1\"/>\n+  <SyncopeConf id=\"1\" \n+               creator=\"admin\" lastModifier=\"admin\"\n+               creationDate=\"2014-06-20 11:00:00\" lastChangeDate=\"2014-06-20 11:00:00\"/>\n+\n+  <CSchema name=\"password.cipher.algorithm\" type=\"String\"\n+           mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CAttr id=\"1\" owner_id=\"1\" schema_name=\"password.cipher.algorithm\"/>\n+  <CAttrValue id=\"1\" attribute_id=\"1\" stringValue=\"SHA1\"/>\n+\n   <!-- notificationjob.cronExpression:\n   + not existing: NotificationJob runs according to Notification.DEFAULT_CRON_EXP\n   + provided as empty string: NotificationJob disabled\n   + provided as non-empty string: NotificationJob runs according to the given value -->\n-  <SyncopeConf confKey=\"notificationjob.cronExpression\" confValue=\"\"/>\n-  <SyncopeConf confKey=\"notification.maxRetries\" confValue=\"0\"/>\n-  <SyncopeConf confKey=\"token.length\" confValue=\"256\"/>\n-  <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n-  <SyncopeConf confKey=\"selfRegistration.allowed\" confValue=\"true\"/>\n-  <!-- when needing to provide more values, use '|' as separator and no spaces -->\n-  <SyncopeConf confKey=\"authentication.statuses\" confValue=\"active\"/>\n+  <CSchema name=\"notificationjob.cronExpression\" type=\"String\"\n+           mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CAttr id=\"2\" owner_id=\"1\" schema_name=\"notificationjob.cronExpression\"/>\n+  <CAttrValue id=\"2\" attribute_id=\"2\" stringValue=\"\"/>\n+\n+  <CSchema name=\"notification.maxRetries\" type=\"Long\"\n+           mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CAttr id=\"3\" owner_id=\"1\" schema_name=\"notification.maxRetries\"/>\n+  <CAttrValue id=\"3\" attribute_id=\"3\" longValue=\"0\"/>\n+\n+  <CSchema name=\"token.length\" type=\"Long\"\n+           mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CAttr id=\"4\" owner_id=\"1\" schema_name=\"token.length\"/>\n+  <CAttrValue id=\"4\" attribute_id=\"4\" longValue=\"256\"/>\n+\n+  <CSchema name=\"token.expireTime\" type=\"Long\"\n+           mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CAttr id=\"5\" owner_id=\"1\" schema_name=\"token.expireTime\"/>\n+  <CAttrValue id=\"5\" attribute_id=\"5\" longValue=\"60\"/>\n+\n+  <CSchema name=\"selfRegistration.allowed\" type=\"Boolean\"\n+           mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CAttr id=\"6\" owner_id=\"1\" schema_name=\"selfRegistration.allowed\"/>\n+  <CAttrValue id=\"6\" attribute_id=\"6\" booleanValue=\"1\"/>\n+\n+  <CSchema name=\"authentication.statuses\" type=\"String\"\n+           mandatoryCondition=\"true\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CAttr id=\"7\" owner_id=\"1\" schema_name=\"authentication.statuses\"/>\n+  <CAttrValue id=\"7\" attribute_id=\"7\" stringValue=\"active\"/>\n+\n   <!-- Save user login date upon successful authentication -->\n-  <SyncopeConf confKey=\"log.lastlogindate\" confValue=\"true\"/>\n+  <CSchema name=\"log.lastlogindate\" type=\"Boolean\"\n+           mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CAttr id=\"10\" owner_id=\"1\" schema_name=\"log.lastlogindate\"/>\n+  <CAttrValue id=\"10\" attribute_id=\"10\" booleanValue=\"1\"/>\n     \n   <!-- Authentication and authorization -->\n   <Entitlement name=\"SCHEMA_LIST\"/>\n@@ -62,10 +96,10 @@ under the License.\n   <Entitlement name=\"CONNECTOR_UPDATE\"/>\n   <Entitlement name=\"CONNECTOR_DELETE\"/>\n   <Entitlement name=\"CONNECTOR_RELOAD\"/>\n+  <Entitlement name=\"CONFIGURATION_EXPORT\"/>\n   <Entitlement name=\"CONFIGURATION_LIST\"/>\n-  <Entitlement name=\"CONFIGURATION_CREATE\"/>\n   <Entitlement name=\"CONFIGURATION_READ\"/>\n-  <Entitlement name=\"CONFIGURATION_UPDATE\"/>\n+  <Entitlement name=\"CONFIGURATION_SET\"/>\n   <Entitlement name=\"CONFIGURATION_DELETE\"/>\n   <Entitlement name=\"TASK_LIST\"/>\n   <Entitlement name=\"TASK_CREATE\"/>"},{"sha":"85c4f11f7f2dc2f28565bcb3dbca6fcad93b8611","filename":"core/src/test/java/org/apache/syncope/core/notification/NotificationTest.java","status":"modified","additions":12,"deletions":9,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationTest.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -19,17 +19,15 @@\n package org.apache.syncope.core.notification;\n \n import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n \n import com.icegreen.greenmail.util.GreenMail;\n import com.icegreen.greenmail.util.ServerSetup;\n-\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Random;\n import java.util.Set;\n-\n import javax.annotation.Resource;\n import javax.mail.Flags.Flag;\n import javax.mail.Folder;\n@@ -43,12 +41,13 @@\n import org.apache.syncope.common.to.NotificationTaskTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.IntMappingType;\n import org.apache.syncope.common.types.TraceLevel;\n import org.apache.syncope.core.persistence.beans.Entitlement;\n import org.apache.syncope.core.persistence.beans.Notification;\n import org.apache.syncope.core.persistence.beans.NotificationTask;\n-import org.apache.syncope.core.persistence.beans.SyncopeConf;\n+import org.apache.syncope.core.persistence.beans.conf.CAttr;\n import org.apache.syncope.core.persistence.dao.ConfDAO;\n import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n import org.apache.syncope.core.persistence.dao.NotificationDAO;\n@@ -57,6 +56,7 @@\n import org.apache.syncope.core.rest.controller.RoleController;\n import org.apache.syncope.core.rest.controller.TaskController;\n import org.apache.syncope.core.rest.controller.UserController;\n+import org.apache.syncope.core.util.AttributableUtil;\n import org.junit.AfterClass;\n import org.junit.Before;\n import org.junit.BeforeClass;\n@@ -402,9 +402,10 @@ public void notifyByMailWithRetry() throws Exception {\n         userController.create(userTO);\n \n         // 3. Set number of retries\n-        SyncopeConf retryConf = confDAO.find(\"notification.maxRetries\");\n-        retryConf.setValue(\"5\");\n-        confDAO.save(retryConf);\n+        CAttr maxRetries = confDAO.find(\"notification.maxRetries\", \"5\");\n+        maxRetries.getValues().clear();\n+        maxRetries.addValue(\"5\", AttributableUtil.getInstance(AttributableType.CONFIGURATION));\n+        confDAO.save(maxRetries);\n         confDAO.flush();\n \n         // 4. Stop mail server to force error sending mail\n@@ -430,8 +431,10 @@ public void notifyByMailWithRetry() throws Exception {\n         startGreenMail();\n \n         // 8. reset number of retries\n-        retryConf.setValue(\"0\");\n-        confDAO.save(retryConf);\n+        maxRetries = confDAO.find(\"notification.maxRetries\", \"5\");\n+        maxRetries.getValues().clear();\n+        maxRetries.addValue(\"0\", AttributableUtil.getInstance(AttributableType.CONFIGURATION));\n+        confDAO.save(maxRetries);\n         confDAO.flush();\n     }\n "},{"sha":"259b52234579f83f56ab1973d0de0b5bf39223ee","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/AttributableSearchTest.java","status":"modified","additions":48,"deletions":53,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributableSearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributableSearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributableSearchTest.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -28,17 +28,15 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-\n-import org.apache.syncope.core.persistence.dao.search.AttributableCond;\n-import org.apache.syncope.core.persistence.dao.search.AttributeCond;\n-import org.apache.syncope.core.persistence.dao.search.MembershipCond;\n-import org.apache.syncope.core.persistence.dao.search.SearchCond;\n-import org.apache.syncope.core.persistence.dao.search.ResourceCond;\n-import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.persistence.dao.search.AttributeCond;\n+import org.apache.syncope.core.persistence.dao.search.MembershipCond;\n import org.apache.syncope.core.persistence.dao.search.OrderByClause;\n-import org.apache.syncope.core.util.AttributableUtil;\n+import org.apache.syncope.core.persistence.dao.search.ResourceCond;\n+import org.apache.syncope.core.persistence.dao.search.SearchCond;\n+import org.apache.syncope.core.persistence.dao.search.SubjectCond;\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n@@ -59,7 +57,7 @@ public class AttributableSearchTest {\n     private RoleDAO roleDAO;\n \n     @Autowired\n-    private AttributableSearchDAO searchDAO;\n+    private SubjectSearchDAO searchDAO;\n \n     @Autowired\n     private EntitlementDAO entitlementDAO;\n@@ -72,13 +70,11 @@ public void userMatch() {\n         MembershipCond membershipCond = new MembershipCond();\n         membershipCond.setRoleId(5L);\n \n-        assertFalse(searchDAO.matches(user, SearchCond.getLeafCond(membershipCond),\n-                AttributableUtil.getInstance(AttributableType.USER)));\n+        assertFalse(searchDAO.matches(user, SearchCond.getLeafCond(membershipCond), SubjectType.USER));\n \n         membershipCond.setRoleId(1L);\n \n-        assertTrue(searchDAO.matches(user, SearchCond.getLeafCond(membershipCond),\n-                AttributableUtil.getInstance(AttributableType.USER)));\n+        assertTrue(searchDAO.matches(user, SearchCond.getLeafCond(membershipCond), SubjectType.USER));\n     }\n \n     @Test\n@@ -90,8 +86,7 @@ public void roleMatch() {\n         attrCond.setSchema(\"show\");\n         attrCond.setType(AttributeCond.Type.ISNOTNULL);\n \n-        assertTrue(searchDAO.matches(role, SearchCond.getLeafCond(attrCond),\n-                AttributableUtil.getInstance(AttributableType.ROLE)));\n+        assertTrue(searchDAO.matches(role, SearchCond.getLeafCond(attrCond), SubjectType.ROLE));\n     }\n \n     @Test\n@@ -116,8 +111,8 @@ public void searchWithLikeCondition() {\n \n         assertTrue(cond.isValid());\n \n-        List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond,\n-                AttributableUtil.getInstance(AttributableType.USER));\n+        List<SyncopeUser> users =\n+                searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond, SubjectType.USER);\n         assertNotNull(users);\n         assertEquals(1, users.size());\n     }\n@@ -131,8 +126,8 @@ public void searchWithNotCondition() {\n         SearchCond cond = SearchCond.getNotLeafCond(fullnameLeafCond);\n         assertTrue(cond.isValid());\n \n-        List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond,\n-                AttributableUtil.getInstance(AttributableType.USER));\n+        List<SyncopeUser> users =\n+                searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond, SubjectType.USER);\n         assertNotNull(users);\n         assertEquals(4, users.size());\n \n@@ -153,8 +148,8 @@ public void searchByBoolean() {\n         SearchCond cond = SearchCond.getLeafCond(coolLeafCond);\n         assertTrue(cond.isValid());\n \n-        List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond,\n-                AttributableUtil.getInstance(AttributableType.USER));\n+        List<SyncopeUser> users =\n+                searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond, SubjectType.USER);\n         assertNotNull(users);\n         assertEquals(1, users.size());\n \n@@ -185,13 +180,13 @@ public void searchByPageAndSize() {\n \n         List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n                 cond, 1, 2, Collections.<OrderByClause>emptyList(),\n-                AttributableUtil.getInstance(AttributableType.USER));\n+                SubjectType.USER);\n         assertNotNull(users);\n         assertEquals(1, users.size());\n \n         users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n                 cond, 2, 2, Collections.<OrderByClause>emptyList(),\n-                AttributableUtil.getInstance(AttributableType.USER));\n+                SubjectType.USER);\n         assertNotNull(users);\n         assertTrue(users.isEmpty());\n     }\n@@ -203,7 +198,7 @@ public void searchByMembership() {\n \n         List<SyncopeUser> users = searchDAO.search(\n                 EntitlementUtil.getRoleIds(entitlementDAO.findAll()), SearchCond.getLeafCond(membershipCond),\n-                AttributableUtil.getInstance(AttributableType.USER));\n+                SubjectType.USER);\n         assertNotNull(users);\n         assertEquals(2, users.size());\n \n@@ -212,7 +207,7 @@ public void searchByMembership() {\n \n         users = searchDAO.search(\n                 EntitlementUtil.getRoleIds(entitlementDAO.findAll()), SearchCond.getNotLeafCond(membershipCond),\n-                AttributableUtil.getInstance(AttributableType.USER));\n+                SubjectType.USER);\n         assertNotNull(users);\n         assertEquals(5, users.size());\n     }\n@@ -224,7 +219,7 @@ public void searchByIsNull() {\n \n         List<SyncopeUser> users = searchDAO.search(\n                 EntitlementUtil.getRoleIds(entitlementDAO.findAll()), SearchCond.getLeafCond(coolLeafCond),\n-                AttributableUtil.getInstance(AttributableType.USER));\n+                SubjectType.USER);\n         assertNotNull(users);\n         assertEquals(4, users.size());\n \n@@ -233,7 +228,7 @@ public void searchByIsNull() {\n \n         users = searchDAO.search(\n                 EntitlementUtil.getRoleIds(entitlementDAO.findAll()), SearchCond.getLeafCond(coolLeafCond),\n-                AttributableUtil.getInstance(AttributableType.USER));\n+                SubjectType.USER);\n         assertNotNull(users);\n         assertEquals(1, users.size());\n     }\n@@ -252,27 +247,27 @@ public void searchByResource() {\n \n         List<SyncopeUser> users = searchDAO.search(\n                 EntitlementUtil.getRoleIds(entitlementDAO.findAll()), searchCondition,\n-                AttributableUtil.getInstance(AttributableType.USER));\n+                SubjectType.USER);\n \n         assertNotNull(users);\n         assertEquals(1, users.size());\n     }\n \n     @Test\n     public void searchByUsernameAndId() {\n-        AttributableCond usernameLeafCond = new AttributableCond(AttributableCond.Type.EQ);\n+        SubjectCond usernameLeafCond = new SubjectCond(SubjectCond.Type.EQ);\n         usernameLeafCond.setSchema(\"username\");\n         usernameLeafCond.setExpression(\"rossini\");\n \n-        AttributableCond idRightCond = new AttributableCond(AttributableCond.Type.LT);\n+        SubjectCond idRightCond = new SubjectCond(SubjectCond.Type.LT);\n         idRightCond.setSchema(\"id\");\n         idRightCond.setExpression(\"2\");\n \n         SearchCond searchCondition = SearchCond.getOrCond(SearchCond.getLeafCond(usernameLeafCond),\n                 SearchCond.getLeafCond(idRightCond));\n \n         List<SyncopeUser> matchingUsers = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n-                searchCondition, AttributableUtil.getInstance(AttributableType.USER));\n+                searchCondition, SubjectType.USER);\n \n         assertNotNull(matchingUsers);\n         assertEquals(1, matchingUsers.size());\n@@ -282,11 +277,11 @@ public void searchByUsernameAndId() {\n \n     @Test\n     public void searchByRolenameAndId() {\n-        AttributableCond rolenameLeafCond = new AttributableCond(AttributableCond.Type.EQ);\n+        SubjectCond rolenameLeafCond = new SubjectCond(SubjectCond.Type.EQ);\n         rolenameLeafCond.setSchema(\"name\");\n         rolenameLeafCond.setExpression(\"root\");\n \n-        AttributableCond idRightCond = new AttributableCond(AttributableCond.Type.LT);\n+        SubjectCond idRightCond = new SubjectCond(SubjectCond.Type.LT);\n         idRightCond.setSchema(\"id\");\n         idRightCond.setExpression(\"2\");\n \n@@ -296,7 +291,7 @@ public void searchByRolenameAndId() {\n         assertTrue(searchCondition.isValid());\n \n         List<SyncopeRole> matchingRoles = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n-                searchCondition, AttributableUtil.getInstance(AttributableType.ROLE));\n+                searchCondition, SubjectType.ROLE);\n \n         assertNotNull(matchingRoles);\n         assertEquals(1, matchingRoles.size());\n@@ -306,7 +301,7 @@ public void searchByRolenameAndId() {\n \n     @Test\n     public void searchByUsernameAndFullname() {\n-        AttributableCond usernameLeafCond = new AttributableCond(AttributableCond.Type.EQ);\n+        SubjectCond usernameLeafCond = new SubjectCond(SubjectCond.Type.EQ);\n         usernameLeafCond.setSchema(\"username\");\n         usernameLeafCond.setExpression(\"rossini\");\n \n@@ -319,15 +314,15 @@ public void searchByUsernameAndFullname() {\n \n         List<SyncopeUser> matchingUsers =\n                 searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), searchCondition,\n-                        AttributableUtil.getInstance(AttributableType.USER));\n+                        SubjectType.USER);\n \n         assertNotNull(matchingUsers);\n         assertEquals(2, matchingUsers.size());\n     }\n \n     @Test\n     public void searchById() {\n-        AttributableCond idLeafCond = new AttributableCond(AttributableCond.Type.LT);\n+        SubjectCond idLeafCond = new SubjectCond(SubjectCond.Type.LT);\n         idLeafCond.setSchema(\"id\");\n         idLeafCond.setExpression(\"2\");\n \n@@ -336,21 +331,21 @@ public void searchById() {\n \n         List<SyncopeUser> users =\n                 searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), searchCondition,\n-                        AttributableUtil.getInstance(AttributableType.USER));\n+                        SubjectType.USER);\n \n         assertNotNull(users);\n         assertEquals(1, users.size());\n         assertEquals(1L, users.iterator().next().getId().longValue());\n \n-        idLeafCond = new AttributableCond(AttributableCond.Type.LT);\n+        idLeafCond = new SubjectCond(SubjectCond.Type.LT);\n         idLeafCond.setSchema(\"id\");\n         idLeafCond.setExpression(\"4\");\n \n         searchCondition = SearchCond.getNotLeafCond(idLeafCond);\n         assertTrue(searchCondition.isValid());\n \n         users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), searchCondition,\n-                AttributableUtil.getInstance(AttributableType.USER));\n+                SubjectType.USER);\n \n         assertNotNull(users);\n         assertEquals(2, users.size());\n@@ -365,7 +360,7 @@ public void searchById() {\n \n     @Test\n     public void userOrderBy() {\n-        AttributableCond usernameLeafCond = new AttributableCond(AttributableCond.Type.EQ);\n+        SubjectCond usernameLeafCond = new SubjectCond(SubjectCond.Type.EQ);\n         usernameLeafCond.setSchema(\"username\");\n         usernameLeafCond.setExpression(\"rossini\");\n         AttributeCond idRightCond = new AttributeCond(AttributeCond.Type.LIKE);\n@@ -386,15 +381,15 @@ public void userOrderBy() {\n \n         List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n                 searchCondition, Collections.singletonList(orderByClause),\n-                AttributableUtil.getInstance(AttributableType.USER));\n+                SubjectType.USER);\n         assertEquals(searchDAO.count(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n-                searchCondition, AttributableUtil.getInstance(AttributableType.USER)),\n+                searchCondition, SubjectType.USER),\n                 users.size());\n     }\n \n     @Test\n     public void roleOrderBy() {\n-        AttributableCond idLeafCond = new AttributableCond(AttributableCond.Type.LIKE);\n+        SubjectCond idLeafCond = new SubjectCond(SubjectCond.Type.LIKE);\n         idLeafCond.setSchema(\"name\");\n         idLeafCond.setExpression(\"%r\");\n         SearchCond searchCondition = SearchCond.getLeafCond(idLeafCond);\n@@ -405,9 +400,9 @@ public void roleOrderBy() {\n \n         List<SyncopeRole> roles = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n                 searchCondition, Collections.singletonList(orderByClause),\n-                AttributableUtil.getInstance(AttributableType.ROLE));\n+                SubjectType.ROLE);\n         assertEquals(searchDAO.count(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n-                searchCondition, AttributableUtil.getInstance(AttributableType.ROLE)),\n+                searchCondition, SubjectType.ROLE),\n                 roles.size());\n     }\n \n@@ -424,7 +419,7 @@ public void issue202() {\n         assertTrue(searchCondition.isValid());\n \n         List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n-                searchCondition, AttributableUtil.getInstance(AttributableType.USER));\n+                searchCondition, SubjectType.USER);\n         assertNotNull(users);\n         assertEquals(2, users.size());\n         boolean found = false;\n@@ -438,30 +433,30 @@ public void issue202() {\n \n     @Test\n     public void issue242() {\n-        AttributableCond cond = new AttributableCond(AttributeCond.Type.LIKE);\n+        SubjectCond cond = new SubjectCond(AttributeCond.Type.LIKE);\n         cond.setSchema(\"id\");\n         cond.setExpression(\"test%\");\n \n         SearchCond searchCondition = SearchCond.getLeafCond(cond);\n         assertTrue(searchCondition.isValid());\n \n         List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n-                searchCondition, AttributableUtil.getInstance(AttributableType.USER));\n+                searchCondition, SubjectType.USER);\n         assertNotNull(users);\n         assertTrue(users.isEmpty());\n     }\n \n     @Test\n     public void issueSYNCOPE46() {\n-        AttributableCond cond = new AttributableCond(AttributeCond.Type.LIKE);\n+        SubjectCond cond = new SubjectCond(AttributeCond.Type.LIKE);\n         cond.setSchema(\"username\");\n         cond.setExpression(\"%ossin%\");\n \n         SearchCond searchCondition = SearchCond.getLeafCond(cond);\n         assertTrue(searchCondition.isValid());\n \n         List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n-                searchCondition, AttributableUtil.getInstance(AttributableType.USER));\n+                searchCondition, SubjectType.USER);\n         assertNotNull(users);\n         assertEquals(1, users.size());\n     }\n@@ -471,15 +466,15 @@ public void issueSYNCOPE433() {\n         AttributeCond isNullCond = new AttributeCond(AttributeCond.Type.ISNULL);\n         isNullCond.setSchema(\"loginDate\");\n \n-        AttributableCond likeCond = new AttributableCond(AttributeCond.Type.LIKE);\n+        SubjectCond likeCond = new SubjectCond(AttributeCond.Type.LIKE);\n         likeCond.setSchema(\"username\");\n         likeCond.setExpression(\"%ossin%\");\n \n         SearchCond searchCond = SearchCond.getOrCond(\n                 SearchCond.getLeafCond(isNullCond), SearchCond.getLeafCond(likeCond));\n \n         Integer count = searchDAO.count(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), searchCond,\n-                AttributableUtil.getInstance(AttributableType.USER));\n+                SubjectType.USER);\n         assertNotNull(count);\n         assertTrue(count > 0);\n     }"},{"sha":"8d85bd527dd75c2a7953cefc06a9bca56c21c8ef","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/ConfTest.java","status":"modified","additions":61,"deletions":5,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConfTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConfTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FConfTest.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -18,12 +18,19 @@\n  */\n package org.apache.syncope.core.persistence.dao;\n \n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n+import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.AttributeSchemaType;\n import org.apache.syncope.common.types.EntityViolationType;\n-import org.apache.syncope.core.persistence.beans.SyncopeConf;\n+import org.apache.syncope.core.persistence.beans.conf.CAttr;\n+import org.apache.syncope.core.persistence.beans.conf.CSchema;\n import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n+import org.apache.syncope.core.util.AttributableUtil;\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n@@ -34,13 +41,62 @@ public class ConfTest extends AbstractDAOTest {\n     @Autowired\n     private ConfDAO confDAO;\n \n+    @Autowired\n+    private SchemaDAO schemaDAO;\n+\n     @Test\n-    public void issueSYNCOPE418() {\n-        SyncopeConf conf = new SyncopeConf();\n-        conf.setKey(\"http://schemas.examples.org/security/authorization/organizationUnit\");\n+    public void read() {\n+        CAttr conf = confDAO.find(\"selfRegistration.allowed\");\n+        assertNotNull(conf);\n+        assertTrue(conf.getValues().get(0).getBooleanValue());\n+\n+        conf = confDAO.find(\"authentication.statuses\");\n+        assertNotNull(conf);\n+        assertEquals(2, conf.getValues().size());\n+\n+        conf = confDAO.find(\"non.existing\");\n+        assertNull(conf);\n+    }\n+\n+    @Test\n+    public void setAndDelete() {\n+        // 1. create CSChema\n+        CSchema useless = new CSchema();\n+        useless.setName(\"useless\");\n+        useless.setType(AttributeSchemaType.Date);\n+        useless.setConversionPattern(\"yyyy-MM-dd\");\n+        useless = schemaDAO.save(useless);\n+\n+        // 2. create conf\n+        CAttr newConf = new CAttr();\n+        newConf.setSchema(useless);\n+        newConf.addValue(\"2014-06-20\", AttributableUtil.getInstance(AttributableType.CONFIGURATION));\n+        confDAO.save(newConf);\n \n+        CAttr actual = confDAO.find(\"useless\");\n+        assertEquals(actual.getValuesAsStrings(), newConf.getValuesAsStrings());\n+\n+        // 3. update conf\n+        newConf.getValues().clear();\n+        newConf.addValue(\"2014-06-20\", AttributableUtil.getInstance(AttributableType.CONFIGURATION));\n+        confDAO.save(newConf);\n+\n+        actual = confDAO.find(\"useless\");\n+        assertEquals(actual.getValuesAsStrings(), newConf.getValuesAsStrings());\n+\n+        // 4. delete conf\n+        confDAO.delete(\"useless\");\n+        assertNull(confDAO.find(\"useless\"));\n+    }\n+\n+    @Test\n+    public void issueSYNCOPE418() {\n         try {\n-            confDAO.save(conf);\n+            CSchema failing = new CSchema();\n+            failing.setName(\"http://schemas.examples.org/security/authorization/organizationUnit\");\n+            failing.setType(AttributeSchemaType.String);\n+            schemaDAO.save(failing);\n+\n             fail();\n         } catch (InvalidEntityException e) {\n             assertTrue(e.hasViolation(EntityViolationType.InvalidName));"},{"sha":"75d577c5335f5ad6bf7876c22c4e245f2f7fa8a2","filename":"core/src/test/java/org/apache/syncope/core/persistence/relationships/AttributableSearchTest.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FAttributableSearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FAttributableSearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FAttributableSearchTest.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -28,13 +28,12 @@\n \n import org.apache.syncope.core.persistence.dao.search.AttributeCond;\n import org.apache.syncope.core.persistence.dao.search.SearchCond;\n-import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.apache.syncope.core.persistence.dao.AttributableSearchDAO;\n+import org.apache.syncope.core.persistence.dao.SubjectSearchDAO;\n import org.apache.syncope.core.persistence.dao.EntitlementDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n-import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.EntitlementUtil;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n@@ -44,16 +43,16 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @RunWith(SpringJUnit4ClassRunner.class)\n-@ContextConfiguration(locations = {\"classpath:syncopeContext.xml\", \"classpath:persistenceContext.xml\",\n-    \"classpath:schedulingContext.xml\", \"classpath:workflowContext.xml\"})\n+@ContextConfiguration(locations = { \"classpath:syncopeContext.xml\", \"classpath:persistenceContext.xml\",\n+    \"classpath:schedulingContext.xml\", \"classpath:workflowContext.xml\" })\n @Transactional\n public class AttributableSearchTest {\n \n     @Autowired\n     private RoleDAO roleDAO;\n \n     @Autowired\n-    private AttributableSearchDAO searchDAO;\n+    private SubjectSearchDAO searchDAO;\n \n     @Autowired\n     private EntitlementDAO entitlementDAO;\n@@ -73,8 +72,8 @@ public void issueSYNCOPE95() {\n         final SearchCond cond = SearchCond.getLeafCond(coolLeafCond);\n         assertTrue(cond.isValid());\n \n-        final List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond,\n-                AttributableUtil.getInstance(AttributableType.USER));\n+        final List<SyncopeUser> users =\n+                searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond, SubjectType.USER);\n         assertNotNull(users);\n         assertEquals(1, users.size());\n "},{"sha":"01c3d2b5078babfae7b097236507e0ac02568595","filename":"core/src/test/java/org/apache/syncope/core/rest/ConfigurationTestITCase.java","status":"modified","additions":42,"deletions":42,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -27,19 +27,20 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.UnsupportedEncodingException;\n-import java.util.List;\n import javax.ws.rs.core.HttpHeaders;\n-\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-\n import org.apache.commons.io.IOUtils;\n import org.apache.syncope.common.SyncopeConstants;\n-import org.apache.syncope.common.services.ConfigurationService;\n-import org.apache.syncope.common.to.ConfigurationTO;\n+import org.apache.syncope.common.to.ConfTO;\n import org.apache.syncope.common.types.EntityViolationType;\n-import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.to.AttributeTO;\n+import org.apache.syncope.common.to.SchemaTO;\n+import org.apache.syncope.common.types.AttributableType;\n+import org.apache.syncope.common.types.AttributeSchemaType;\n+import org.apache.syncope.common.types.ClientExceptionType;\n+import org.apache.syncope.common.types.SchemaType;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n@@ -49,16 +50,19 @@ public class ConfigurationTestITCase extends AbstractTest {\n \n     @Test\n     public void create() {\n-        ConfigurationTO configurationTO = new ConfigurationTO();\n-        configurationTO.setKey(\"testKey\");\n-        configurationTO.setValue(\"testValue\");\n+        SchemaTO testKey = new SchemaTO();\n+        testKey.setName(\"testKey\");\n+        testKey.setType(AttributeSchemaType.String);\n+        createSchema(AttributableType.CONFIGURATION, SchemaType.NORMAL, testKey);\n \n-        Response response = configurationService.create(configurationTO);\n-        assertNotNull(response);\n-        assertEquals(Response.Status.CREATED.getStatusCode(), response.getStatusInfo().getStatusCode());\n-        ConfigurationTO newConfigurationTO = getObject(response.getLocation(), ConfigurationService.class,\n-                ConfigurationTO.class);\n-        assertEquals(configurationTO, newConfigurationTO);\n+        AttributeTO conf = new AttributeTO();\n+        conf.setSchema(\"testKey\");\n+        conf.getValues().add(\"testValue\");\n+\n+        configurationService.set(conf.getSchema(), conf);\n+\n+        AttributeTO actual = configurationService.read(conf.getSchema());\n+        assertEquals(actual, conf);\n     }\n \n     @Test\n@@ -69,7 +73,7 @@ public void delete() throws UnsupportedEncodingException {\n             assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n \n-        ConfigurationTO tokenLengthTO = configurationService.read(\"token.length\");\n+        AttributeTO tokenLength = configurationService.read(\"token.length\");\n \n         configurationService.delete(\"token.length\");\n         try {\n@@ -78,43 +82,38 @@ public void delete() throws UnsupportedEncodingException {\n             assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n \n-        Response response = configurationService.create(tokenLengthTO);\n-        assertNotNull(response);\n-        assertEquals(Response.Status.CREATED.getStatusCode(), response.getStatusInfo().getStatusCode());\n-        ConfigurationTO newConfigurationTO = getObject(response.getLocation(), ConfigurationService.class,\n-                ConfigurationTO.class);\n-        assertEquals(tokenLengthTO, newConfigurationTO);\n+        configurationService.set(tokenLength.getSchema(), tokenLength);\n+\n+        AttributeTO actual = configurationService.read(tokenLength.getSchema());\n+        assertEquals(actual, tokenLength);\n     }\n \n     @Test\n     public void list() {\n-        List<ConfigurationTO> configurations = configurationService.list();\n-        assertNotNull(configurations);\n-        for (ConfigurationTO configuration : configurations) {\n-            assertNotNull(configuration);\n+        ConfTO wholeConf = configurationService.list();\n+        assertNotNull(wholeConf);\n+        for (AttributeTO conf : wholeConf.getAttrs()) {\n+            assertNotNull(conf);\n         }\n     }\n \n     @Test\n     public void read() {\n-        ConfigurationTO configurationTO = configurationService.read(\"token.expireTime\");\n-\n-        assertNotNull(configurationTO);\n+        AttributeTO conf = configurationService.read(\"token.expireTime\");\n+        assertNotNull(conf);\n     }\n \n     @Test\n     public void update() {\n-        ConfigurationTO configurationTO = configurationService.read(\"token.expireTime\");\n-        int value = Integer.parseInt(configurationTO.getValue());\n+        AttributeTO expireTime = configurationService.read(\"token.expireTime\");\n+        int value = Integer.parseInt(expireTime.getValues().get(0));\n         value++;\n-        configurationTO.setValue(value + \"\");\n+        expireTime.getValues().set(0, value + \"\");\n \n-        configurationService.update(configurationTO.getKey(), configurationTO);\n-        ConfigurationTO newConfigurationTO = configurationService.read(configurationTO.getKey());\n-        assertEquals(configurationTO, newConfigurationTO);\n+        configurationService.set(expireTime.getSchema(), expireTime);\n \n-        newConfigurationTO = configurationService.read(\"token.expireTime\");\n-        assertEquals(configurationTO, newConfigurationTO);\n+        AttributeTO newConfigurationTO = configurationService.read(expireTime.getSchema());\n+        assertEquals(expireTime, newConfigurationTO);\n     }\n \n     @Test\n@@ -135,18 +134,19 @@ public void dbExport() throws IOException {\n \n     @Test\n     public void issueSYNCOPE418() {\n-        ConfigurationTO configurationTO = new ConfigurationTO();\n-        configurationTO.setKey(\"http://schemas.examples.org/security/authorization/organizationUnit\");\n+        SchemaTO failing = new SchemaTO();\n+        failing.setName(\"http://schemas.examples.org/security/authorization/organizationUnit\");\n+        failing.setType(AttributeSchemaType.String);\n \n         try {\n-            configurationService.create(configurationTO);\n+            createSchema(AttributableType.CONFIGURATION, SchemaType.NORMAL, failing);\n             fail();\n         } catch (SyncopeClientException e) {\n-            assertEquals(ClientExceptionType.InvalidSyncopeConf, e.getType());\n+            assertEquals(ClientExceptionType.InvalidCSchema, e.getType());\n \n             assertNotNull(e.getElements());\n             assertEquals(1, e.getElements().size());\n-            assertTrue(e.getElements().iterator().next().toString().contains(EntityViolationType.InvalidName.name()));\n+            assertTrue(e.getElements().iterator().next().contains(EntityViolationType.InvalidName.name()));\n         }\n     }\n }"},{"sha":"f66471f0859b2fe1331180ccac936c70016701c1","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":19,"deletions":22,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -57,7 +57,6 @@\n import org.apache.syncope.common.services.UserSelfService;\n import org.apache.syncope.common.services.UserService;\n import org.apache.syncope.common.to.AttributeTO;\n-import org.apache.syncope.common.to.ConfigurationTO;\n import org.apache.syncope.common.to.ConnObjectTO;\n import org.apache.syncope.common.to.MappingItemTO;\n import org.apache.syncope.common.to.MappingTO;\n@@ -1390,16 +1389,13 @@ public void issueSYNCOPE185() {\n \n     @Test()\n     public void issueSYNCOPE51() {\n-        ConfigurationTO defaultConfigurationTO = configurationService.read(\"password.cipher.algorithm\");\n-\n-        ConfigurationTO configurationTO = new ConfigurationTO();\n-        configurationTO.setKey(\"password.cipher.algorithm\");\n-        configurationTO.setValue(\"MD5\");\n-\n-        configurationService.update(configurationTO.getKey(), configurationTO);\n-        ConfigurationTO newConfTO = configurationService.read(configurationTO.getKey());\n-\n-        assertEquals(configurationTO, newConfTO);\n+        AttributeTO defaultCA = configurationService.read(\"password.cipher.algorithm\");\n+        final String originalCAValue = defaultCA.getValues().get(0);\n+        defaultCA.getValues().set(0, \"MD5\");\n+        configurationService.set(defaultCA.getSchema(), defaultCA);\n+        \n+        AttributeTO newCA = configurationService.read(defaultCA.getSchema());\n+        assertEquals(defaultCA, newCA);\n \n         UserTO userTO = getSampleTO(\"syncope51@syncope.apache.org\");\n         userTO.setPassword(\"password\");\n@@ -1409,13 +1405,14 @@ public void issueSYNCOPE51() {\n             fail(\"Create user should not succeed\");\n         } catch (SyncopeClientException e) {\n             assertEquals(ClientExceptionType.NotFound, e.getType());\n-            assertTrue(e.getElements().iterator().next().toString().contains(\"MD5\"));\n+            assertTrue(e.getElements().iterator().next().contains(\"MD5\"));\n         }\n \n-        configurationService.update(defaultConfigurationTO.getKey(), defaultConfigurationTO);\n-        ConfigurationTO oldConfTO = configurationService.read(defaultConfigurationTO.getKey());\n-\n-        assertEquals(defaultConfigurationTO, oldConfTO);\n+        defaultCA.getValues().set(0, originalCAValue);\n+        configurationService.set(defaultCA.getSchema(), defaultCA);\n+        \n+        AttributeTO oldCA = configurationService.read(defaultCA.getSchema());\n+        assertEquals(defaultCA, oldCA);\n     }\n \n     @Test\n@@ -1546,12 +1543,12 @@ public void issueSYNCOPE122() {\n     @Test\n     public void isseSYNCOPE136AES() {\n         // 1. read configured cipher algorithm in order to be able to restore it at the end of test\n-        ConfigurationTO pwdCipherAlgo = configurationService.read(\"password.cipher.algorithm\");\n-        final String origpwdCipherAlgo = pwdCipherAlgo.getValue();\n+        AttributeTO pwdCipherAlgo = configurationService.read(\"password.cipher.algorithm\");\n+        final String origpwdCipherAlgo = pwdCipherAlgo.getValues().get(0);\n \n         // 2. set AES password cipher algorithm\n-        pwdCipherAlgo.setValue(\"AES\");\n-        configurationService.update(pwdCipherAlgo.getKey(), pwdCipherAlgo);\n+        pwdCipherAlgo.getValues().set(0, \"AES\");\n+        configurationService.set(pwdCipherAlgo.getSchema(), pwdCipherAlgo);\n \n         // 3. create user with no resources\n         UserTO userTO = getUniqueSampleTO(\"syncope136_AES@apache.org\");\n@@ -1578,8 +1575,8 @@ public void isseSYNCOPE136AES() {\n         assertEquals(PropagationTaskExecStatus.SUBMITTED, prop.getStatus());\n \n         // 6. restore initial cipher algorithm\n-        pwdCipherAlgo.setValue(origpwdCipherAlgo);\n-        configurationService.update(pwdCipherAlgo.getKey(), pwdCipherAlgo);\n+        pwdCipherAlgo.getValues().set(0, origpwdCipherAlgo);\n+        configurationService.set(pwdCipherAlgo.getSchema(), pwdCipherAlgo);\n     }\n \n     @Test"},{"sha":"aa09d111984af81cdf16a4a870f9a94783347c07","filename":"core/src/test/java/org/apache/syncope/core/rest/data/SearchCondConverterTest.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSearchCondConverterTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSearchCondConverterTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FSearchCondConverterTest.java?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -23,7 +23,7 @@\n import org.apache.syncope.client.SyncopeClient;\n import org.apache.syncope.common.search.SpecialAttr;\n import org.apache.syncope.core.AbstractNonDAOTest;\n-import org.apache.syncope.core.persistence.dao.search.AttributableCond;\n+import org.apache.syncope.core.persistence.dao.search.SubjectCond;\n import org.apache.syncope.core.persistence.dao.search.AttributeCond;\n import org.apache.syncope.core.persistence.dao.search.EntitlementCond;\n import org.apache.syncope.core.persistence.dao.search.MembershipCond;\n@@ -38,7 +38,7 @@ public void eq() {\n         String fiqlExpression = SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(\"rossini\").query();\n         assertEquals(\"username==rossini\", fiqlExpression);\n \n-        AttributableCond attrCond = new AttributableCond(AttributeCond.Type.EQ);\n+        SubjectCond attrCond = new SubjectCond(AttributeCond.Type.EQ);\n         attrCond.setSchema(\"username\");\n         attrCond.setExpression(\"rossini\");\n         SearchCond simpleCond = SearchCond.getLeafCond(attrCond);\n@@ -51,7 +51,7 @@ public void like() {\n         String fiqlExpression = SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(\"ros*\").query();\n         assertEquals(\"username==ros*\", fiqlExpression);\n \n-        AttributeCond attrCond = new AttributableCond(AttributeCond.Type.LIKE);\n+        AttributeCond attrCond = new SubjectCond(AttributeCond.Type.LIKE);\n         attrCond.setSchema(\"username\");\n         attrCond.setExpression(\"ros%\");\n         SearchCond simpleCond = SearchCond.getLeafCond(attrCond);"},{"sha":"12cbd77a8d91369cf400b0c4231e095531602bf0","filename":"core/src/test/resources/content.xml","status":"modified","additions":46,"deletions":11,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -18,20 +18,55 @@ specific language governing permissions and limitations\n under the License.\n -->\n <dataset>\n-  <SyncopeConf confKey=\"password.cipher.algorithm\" confValue=\"SHA1\"/>\n+  <SyncopeConf id=\"1\" \n+               creator=\"admin\" lastModifier=\"admin\"\n+               creationDate=\"2014-06-20 11:00:00\" lastChangeDate=\"2014-06-20 11:00:00\"/>\n+\n+  <CSchema name=\"password.cipher.algorithm\" type=\"String\"\n+           mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CAttr id=\"1\" owner_id=\"1\" schema_name=\"password.cipher.algorithm\"/>\n+  <CAttrValue id=\"1\" attribute_id=\"1\" stringValue=\"SHA1\"/>\n+\n   <!-- notificationjob.cronExpression:\n   + not existing: NotificationJob runs according to Notification.DEFAULT_CRON_EXP\n   + provided as empty string: NotificationJob disabled\n   + provided as non-empty string: NotificationJob runs according to the given value -->\n-  <SyncopeConf confKey=\"notificationjob.cronExpression\" confValue=\"\"/>\n-  <SyncopeConf confKey=\"notification.maxRetries\" confValue=\"3\"/>\n-  <SyncopeConf confKey=\"token.length\" confValue=\"256\"/>\n-  <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n-  <SyncopeConf confKey=\"selfRegistration.allowed\" confValue=\"true\"/>\n-  <!-- when needing to provide more values, use '|' as separator and no spaces -->\n-  <SyncopeConf confKey=\"authentication.statuses\" confValue=\"created|active\"/>\n+  <CSchema name=\"notificationjob.cronExpression\" type=\"String\"\n+           mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CAttr id=\"2\" owner_id=\"1\" schema_name=\"notificationjob.cronExpression\"/>\n+  <CAttrValue id=\"2\" attribute_id=\"2\" stringValue=\"\"/>\n+\n+  <CSchema name=\"notification.maxRetries\" type=\"Long\"\n+           mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CAttr id=\"3\" owner_id=\"1\" schema_name=\"notification.maxRetries\"/>\n+  <CAttrValue id=\"3\" attribute_id=\"3\" longValue=\"3\"/>\n+\n+  <CSchema name=\"token.length\" type=\"Long\"\n+           mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CAttr id=\"4\" owner_id=\"1\" schema_name=\"token.length\"/>\n+  <CAttrValue id=\"4\" attribute_id=\"4\" longValue=\"256\"/>\n+\n+  <CSchema name=\"token.expireTime\" type=\"Long\"\n+           mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CAttr id=\"5\" owner_id=\"1\" schema_name=\"token.expireTime\"/>\n+  <CAttrValue id=\"5\" attribute_id=\"5\" longValue=\"60\"/>\n+\n+  <CSchema name=\"selfRegistration.allowed\" type=\"Boolean\"\n+           mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CAttr id=\"6\" owner_id=\"1\" schema_name=\"selfRegistration.allowed\"/>\n+  <CAttrValue id=\"6\" attribute_id=\"6\" booleanValue=\"1\"/>\n+\n+  <CSchema name=\"authentication.statuses\" type=\"String\"\n+           mandatoryCondition=\"true\" multivalue=\"1\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CAttr id=\"7\" owner_id=\"1\" schema_name=\"authentication.statuses\"/>\n+  <CAttrValue id=\"7\" attribute_id=\"7\" stringValue=\"created\"/>\n+  <CAttrValue id=\"8\" attribute_id=\"7\" stringValue=\"active\"/>\n+\n   <!-- Save user login date upon successful authentication -->\n-  <SyncopeConf confKey=\"log.lastlogindate\" confValue=\"true\"/>\n+  <CSchema name=\"log.lastlogindate\" type=\"Boolean\"\n+           mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n+  <CAttr id=\"10\" owner_id=\"1\" schema_name=\"log.lastlogindate\"/>\n+  <CAttrValue id=\"10\" attribute_id=\"10\" booleanValue=\"1\"/>\n \n   <!-- sample policies -->\n   <Policy DTYPE=\"SyncPolicy\" id=\"1\" description=\"global sync policy\" type=\"GLOBAL_SYNC\" specification=\"%3Corg.apache.syncope.common.types.SyncPolicySpec%3E%0A++%3CuAltSearchSchemas%2F%3E%0A++%3CrAltSearchSchemas%2F%3E%0A%3C%2Forg.apache.syncope.common.types.SyncPolicySpec%3E\"/>\n@@ -923,10 +958,10 @@ under the License.\n   <Entitlement name=\"CONNECTOR_UPDATE\"/>\n   <Entitlement name=\"CONNECTOR_DELETE\"/>\n   <Entitlement name=\"CONNECTOR_RELOAD\"/>\n+  <Entitlement name=\"CONFIGURATION_EXPORT\"/>\n   <Entitlement name=\"CONFIGURATION_LIST\"/>\n-  <Entitlement name=\"CONFIGURATION_CREATE\"/>\n   <Entitlement name=\"CONFIGURATION_READ\"/>\n-  <Entitlement name=\"CONFIGURATION_UPDATE\"/>\n+  <Entitlement name=\"CONFIGURATION_SET\"/>\n   <Entitlement name=\"CONFIGURATION_DELETE\"/>\n   <Entitlement name=\"TASK_LIST\"/>\n   <Entitlement name=\"TASK_CREATE\"/>"},{"sha":"60886b1fb1a1f1b1fa95b8630dfde152c9bd9589","filename":"pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a167a8390c504a310155bf695470454dcf629cd9/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a167a8390c504a310155bf695470454dcf629cd9/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=a167a8390c504a310155bf695470454dcf629cd9","patch":"@@ -1125,6 +1125,7 @@ under the License.\n                 <downloadDir>${settings.localRepository}/org/codehaus/cargo/cargo-container-archives</downloadDir>\n                 <extractDir>${project.build.directory}/cargo/extract</extractDir>\n               </zipUrlInstaller>\n+              <timeout>240000</timeout>\n               <log>${cargo.log}</log>\n               <output>${cargo.output}</output>    \n             </container>"}]}