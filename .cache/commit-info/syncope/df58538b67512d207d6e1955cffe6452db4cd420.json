{"sha":"df58538b67512d207d6e1955cffe6452db4cd420","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRmNTg1MzhiNjc1MTJkMjA3ZDZlMTk1NWNmZmU2NDUyZGI0Y2Q0MjA=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2012-01-20T12:15:19Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2012-01-20T12:15:19Z"},"message":"Update issue 238\nFixing console behavior + reducing core WAR size\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/branches/0_8_X_ASL@1247363 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a25ebce09f2800050737f16af2ba0624bd0cbd09","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a25ebce09f2800050737f16af2ba0624bd0cbd09"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/df58538b67512d207d6e1955cffe6452db4cd420","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/df58538b67512d207d6e1955cffe6452db4cd420","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/df58538b67512d207d6e1955cffe6452db4cd420","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/df58538b67512d207d6e1955cffe6452db4cd420/comments","author":null,"committer":null,"parents":[{"sha":"4b4392feb77a1ffdf84a6c8c8da1c840032d4091","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4b4392feb77a1ffdf84a6c8c8da1c840032d4091","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4b4392feb77a1ffdf84a6c8c8da1c840032d4091"}],"stats":{"total":604,"additions":434,"deletions":170},"files":[{"sha":"9a237af0eb366fc30896d87f88b8261a7a7b0cec","filename":"archetype/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/archetype%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/archetype%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fpom.xml?ref=df58538b67512d207d6e1955cffe6452db4cd420","patch":"@@ -19,14 +19,14 @@\n     <parent>\n         <groupId>org.syncope</groupId>\n         <artifactId>syncope</artifactId>\n-        <version>0.8-SNAPSHOT</version>\n+        <version>0.8-ASL-SNAPSHOT</version>\n     </parent>\n \n     <name>Syncope archetype</name>\n     <description>Syncope archetype</description>\n     <groupId>org.syncope</groupId>\n     <artifactId>syncope-archetype</artifactId>\n-    <version>0.8-SNAPSHOT</version>\n+    <version>0.8-ASL-SNAPSHOT</version>\n     <packaging>maven-archetype</packaging>\n \n     <properties>"},{"sha":"6585229c870cc7a4d8a500bdb70715b74d2e7cfd","filename":"archetype/src/main/resources/archetype-resources/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fpom.xml?ref=df58538b67512d207d6e1955cffe6452db4cd420","patch":"@@ -13,7 +13,7 @@\n     <packaging>pom</packaging>\r\n \r\n     <properties>\r\n-        <syncope.version>0.8-SNAPSHOT</syncope.version>\r\n+        <syncope.version>0.8-ASL-SNAPSHOT</syncope.version>\r\n \r\n         <connid.soap.version>1.1</connid.soap.version>\r\n         <connid.db.table.version>2.1</connid.db.table.version>\r"},{"sha":"36b2a69a82ec61b087099b72a76283ea06cb211f","filename":"build-tools/pom.xml","status":"modified","additions":0,"deletions":9,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/build-tools%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/build-tools%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fpom.xml?ref=df58538b67512d207d6e1955cffe6452db4cd420","patch":"@@ -38,14 +38,6 @@\n         <dependency>\n             <groupId>org.apache.directory.server</groupId>\n             <artifactId>apacheds-all</artifactId>\n-            <exclusions>\n-                <!-- shared-ldap-schema module needs to be excluded to avoid\n-                     multiple schema resources on the classpath-->\n-                <exclusion>\n-                    <groupId>org.apache.directory.shared</groupId>\n-                    <artifactId>shared-ldap-schema</artifactId>\n-                </exclusion>\n-            </exclusions>\n         </dependency>\n         \n         <dependency>\n@@ -68,7 +60,6 @@\n         <dependency>\n             <groupId>com.h2database</groupId>\n             <artifactId>h2</artifactId>\n-            <scope>compile</scope>\n         </dependency>\n         \n         <dependency>"},{"sha":"e9e1ab9004ad688b6b45edcb57719a90e0b26b5c","filename":"client/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/client%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/client%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fpom.xml?ref=df58538b67512d207d6e1955cffe6452db4cd420","patch":"@@ -45,6 +45,11 @@\n             <artifactId>jackson-mapper-asl</artifactId>\n         </dependency>\n \n+        <dependency>\n+            <groupId>org.apache.httpcomponents</groupId>\n+            <artifactId>httpclient</artifactId>\n+        </dependency>\n+\n         <dependency>\n             <groupId>ch.qos.logback</groupId>\n             <artifactId>logback-core</artifactId>"},{"sha":"2e94af7062f1b00442ff20e111c9e816077c398f","filename":"client/src/main/java/org/syncope/client/http/PreemptiveAuthHttpRequestFactory.java","status":"added","additions":74,"deletions":0,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fhttp%2FPreemptiveAuthHttpRequestFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fhttp%2FPreemptiveAuthHttpRequestFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fhttp%2FPreemptiveAuthHttpRequestFactory.java?ref=df58538b67512d207d6e1955cffe6452db4cd420","patch":"@@ -0,0 +1,74 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.client.http;\n+\n+import java.net.URI;\n+import org.apache.http.HttpHost;\n+import org.apache.http.auth.AuthScope;\n+import org.apache.http.client.AuthCache;\n+import org.apache.http.client.protocol.ClientContext;\n+import org.apache.http.conn.ClientConnectionManager;\n+import org.apache.http.impl.auth.BasicScheme;\n+import org.apache.http.impl.client.BasicAuthCache;\n+import org.apache.http.params.HttpParams;\n+import org.apache.http.protocol.BasicHttpContext;\n+import org.apache.http.protocol.HttpContext;\n+import org.springframework.http.HttpMethod;\n+import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;\n+\n+/**\n+ * Factory for DefaultContextHttpClient, with preemptive BASIC authentication.\n+ *\n+ * @see DefaultContextHttpClient\n+ */\n+public class PreemptiveAuthHttpRequestFactory\n+        extends HttpComponentsClientHttpRequestFactory {\n+\n+    private final HttpHost targetHost;\n+\n+    public PreemptiveAuthHttpRequestFactory(\n+            final String host, final int port, final String scheme) {\n+\n+        super();\n+        targetHost = new HttpHost(host, port, scheme);\n+    }\n+\n+    public PreemptiveAuthHttpRequestFactory(\n+            final String host, final int port, final String scheme,\n+            final ClientConnectionManager conman, final HttpParams params) {\n+\n+        super();\n+        targetHost = new HttpHost(host, port, scheme);\n+    }\n+\n+    public AuthScope getAuthScope() {\n+        return new AuthScope(targetHost.getHostName(), targetHost.getPort());\n+    }\n+\n+    @Override\n+    protected HttpContext createHttpContext(final HttpMethod httpMethod,\n+            final URI uri) {\n+\n+        AuthCache authCache = new BasicAuthCache();\n+        // Generate BASIC scheme object and add it to the local auth cache\n+        BasicScheme basicAuth = new BasicScheme();\n+        authCache.put(targetHost, basicAuth);\n+\n+        // Add AuthCache to the execution context\n+        BasicHttpContext localcontext = new BasicHttpContext();\n+        localcontext.setAttribute(ClientContext.AUTH_CACHE, authCache);\n+\n+        return localcontext;\n+    }\n+}"},{"sha":"3bed634ef201f1a7801926535976d216147ab82c","filename":"console/pom.xml","status":"modified","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=df58538b67512d207d6e1955cffe6452db4cd420","patch":"@@ -36,6 +36,23 @@\n             <version>${project.version}</version>\n         </dependency>\n         \n+        <!-- Only needed for running core alongside -->\n+        <dependency>\n+            <groupId>org.apache.openjpa</groupId>\n+            <artifactId>openjpa-all</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>net.sf.ehcache</groupId>\n+            <artifactId>ehcache-core</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.codehaus.groovy</groupId>\n+            <artifactId>groovy-all</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+        \n         <dependency>\n             <groupId>javax.servlet</groupId>\n             <artifactId>servlet-api</artifactId>\n@@ -255,6 +272,21 @@\n                                 <groupId>com.h2database</groupId>\n                                 <artifactId>h2</artifactId>\n                             </dependency>\n+                            \n+                            <dependency>\n+                                <groupId>org.apache.openjpa</groupId>\n+                                <artifactId>openjpa-all</artifactId>\n+                            </dependency>\n+\n+                            <dependency>\n+                                <groupId>net.sf.ehcache</groupId>\n+                                <artifactId>ehcache-core</artifactId>\n+                            </dependency>\n+\n+                            <dependency>\n+                                <groupId>org.codehaus.groovy</groupId>\n+                                <artifactId>groovy-all</artifactId>\n+                            </dependency>\n                         </dependencies>\n                     </container>\n                     <configuration>"},{"sha":"1531e4bdcd879600233243df6ce75027d782139b","filename":"console/src/main/java/org/syncope/console/pages/Login.java","status":"modified","additions":42,"deletions":43,"changes":85,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java?ref=df58538b67512d207d6e1955cffe6452db4cd420","patch":"@@ -19,9 +19,7 @@\n import java.util.List;\n import java.util.Locale;\n import org.apache.http.HttpResponse;\n-import org.apache.http.auth.AuthScope;\n import org.apache.http.auth.UsernamePasswordCredentials;\n-import org.apache.http.client.HttpClient;\n import org.apache.http.client.methods.HttpGet;\n import org.apache.http.impl.client.DefaultHttpClient;\n import org.apache.http.util.EntityUtils;\n@@ -48,8 +46,8 @@\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;\n import org.springframework.web.client.RestTemplate;\n+import org.syncope.client.http.PreemptiveAuthHttpRequestFactory;\n import org.syncope.client.to.UserTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.SyncopeSession;\n@@ -75,9 +73,6 @@ public class Login extends WebPage {\n     @SpringBean\n     private RestTemplate restTemplate;\n \n-    @SpringBean\n-    private HttpClient httpClient;\n-\n     @SpringBean(name = \"baseURL\")\n     private String baseURL;\n \n@@ -115,13 +110,10 @@ public Login(final PageParameters parameters) {\n             @Override\n             public void onSubmit() {\n                 String[] entitlements = authenticate(\n-                        userIdField.getRawInput(),\n-                        passwordField.getRawInput());\n+                        userIdField.getRawInput(), passwordField.getRawInput());\n \n-                SyncopeSession.get().setUserId(\n-                        userIdField.getRawInput());\n-                SyncopeSession.get().setEntitlements(\n-                        entitlements);\n+                SyncopeSession.get().setUserId(userIdField.getRawInput());\n+                SyncopeSession.get().setEntitlements(entitlements);\n                 SyncopeSession.get().setCoreVersion(getCoreVersion());\n \n                 setResponsePage(WelcomePage.class, parameters);\n@@ -144,37 +136,38 @@ public void onSubmit() {\n         add(editProfileModalWin);\n \n         Fragment selfRegFrag;\n-        if (restTemplate.getForObject(\n-                baseURL + \"user/request/create/allowed\",\n+        if (restTemplate.getForObject(baseURL + \"user/request/create/allowed\",\n                 Boolean.class)) {\n \n             selfRegFrag =\n                     new Fragment(\"selfRegistration\", \"selfRegAllowed\", this);\n \n-            AjaxLink selfRegLink =\n-                    new IndicatingAjaxLink(\"link\") {\n-\n-                        private static final long serialVersionUID =\n-                                -7978723352517770644L;\n-\n-                        @Override\n-                        public void onClick(final AjaxRequestTarget target) {\n-                            editProfileModalWin.setPageCreator(\n-                                    new ModalWindow.PageCreator() {\n-\n-                                        @Override\n-                                        public Page createPage() {\n-                                            return new UserModalPage(\n-                                                    Login.this.getPageReference(),\n-                                                    editProfileModalWin,\n-                                                    new UserTO(),\n-                                                    UserModalPage.Mode.SELF);\n-                                        }\n-                                    });\n-\n-                            editProfileModalWin.show(target);\n-                        }\n-                    };\n+            AjaxLink selfRegLink = new IndicatingAjaxLink(\"link\") {\n+\n+                private static final long serialVersionUID =\n+                        -7978723352517770644L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target) {\n+                    editProfileModalWin.setPageCreator(\n+                            new ModalWindow.PageCreator() {\n+\n+                                private static final long serialVersionUID =\n+                                        -7834632442532690940L;\n+\n+                                @Override\n+                                public Page createPage() {\n+                                    return new UserModalPage(\n+                                            Login.this.getPageReference(),\n+                                            editProfileModalWin,\n+                                            new UserTO(),\n+                                            UserModalPage.Mode.SELF);\n+                                }\n+                            });\n+\n+                    editProfileModalWin.show(target);\n+                }\n+            };\n             selfRegLink.add(\n                     new Label(\"linkTitle\", getString(\"selfRegistration\")));\n \n@@ -190,14 +183,16 @@ public Page createPage() {\n     }\n \n     private String[] authenticate(final String userId, final String password) {\n-        HttpComponentsClientHttpRequestFactory requestFactory =\n-                ((HttpComponentsClientHttpRequestFactory) restTemplate.\n+        // 1. Set provided credentials to check\n+        PreemptiveAuthHttpRequestFactory requestFactory =\n+                ((PreemptiveAuthHttpRequestFactory) restTemplate.\n                 getRequestFactory());\n         ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n+                getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(),\n                 new UsernamePasswordCredentials(userId, password));\n \n-        //2.Search authorizations for user specified by credentials\n+        // 2. Search authorizations for user specified by credentials\n         String[] entitlements = null;\n         try {\n             entitlements = restTemplate.getForObject(\n@@ -211,10 +206,14 @@ private String[] authenticate(final String userId, final String password) {\n     }\n \n     private String getCoreVersion() {\n+        PreemptiveAuthHttpRequestFactory requestFactory =\n+                ((PreemptiveAuthHttpRequestFactory) restTemplate.\n+                getRequestFactory());\n+\n         String version = \"\";\n         try {\n             HttpGet get = new HttpGet(baseURL + \"../version.jsp\");\n-            HttpResponse response = httpClient.execute(get);\n+            HttpResponse response = requestFactory.getHttpClient().execute(get);\n             version = EntityUtils.toString(response.getEntity()).trim();\n         } catch (IOException e) {\n             LOG.error(\"While fetching core version\", e);"},{"sha":"4f2b450761e557ef870c473e94aaf0f9ba527ab9","filename":"console/src/main/resources/applicationContext.xml","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml?ref=df58538b67512d207d6e1955cffe6452db4cd420","patch":"@@ -17,6 +17,8 @@\n        http://www.springframework.org/schema/aop\n        http://www.springframework.org/schema/aop/spring-aop.xsd\">\n \n+    <context:component-scan base-package=\"org.syncope.console.rest\"/>\n+\n     <bean id=\"propertyConfigurer\"\n           class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n         <property name=\"locations\">\n@@ -27,7 +29,7 @@\n     </bean>\n \n     <bean id=\"baseURL\" class=\"java.lang.String\">\n-        <constructor-arg value=\"${baseURL}\"/>\n+        <constructor-arg value=\"${scheme}://${host}:${port}${path}\"/>\n     </bean>\n \n     <bean id=\"version\" class=\"java.lang.String\">\n@@ -49,13 +51,13 @@\n \n     <bean id=\"httpClientConnManager\" class=\"org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager\"/>\n     <bean id=\"httpClientParams\" class=\"org.apache.http.params.SyncBasicHttpParams\"/>\n-    <bean id=\"httpClient\" class=\"org.apache.http.impl.client.ContentEncodingHttpClient\">\n+    <bean id=\"httpClientFactory\" class=\"org.syncope.client.http.PreemptiveAuthHttpRequestFactory\">\n+        <constructor-arg value=\"${host}\"/>\n+        <constructor-arg value=\"${port}\"/>\n+        <constructor-arg value=\"${scheme}\"/>\n         <constructor-arg ref=\"httpClientConnManager\"/>\n         <constructor-arg ref=\"httpClientParams\"/>\n     </bean>\n-    <bean id=\"httpClientFactory\" class=\"org.springframework.http.client.HttpComponentsClientHttpRequestFactory\">\n-        <constructor-arg ref=\"httpClient\"/>\n-    </bean>\n     <bean id=\"restTemplate\" class=\"org.springframework.web.client.RestTemplate\">\n         <constructor-arg ref=\"httpClientFactory\"/>\n "},{"sha":"bd504703f88d90b9df0e961e23a7b335712ffdce","filename":"console/src/main/resources/configuration.properties","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/console%2Fsrc%2Fmain%2Fresources%2Fconfiguration.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/console%2Fsrc%2Fmain%2Fresources%2Fconfiguration.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Fconfiguration.properties?ref=df58538b67512d207d6e1955cffe6452db4cd420","patch":"@@ -1,2 +1,5 @@\n-baseURL=http://localhost:9080/syncope/rest/\n+scheme=http\n+host=localhost\n+port=9080\n+path=/syncope/rest/\n version=${project.version}"},{"sha":"3e8f2d7c84b6a6d232b225165df80d6841392142","filename":"console/src/main/resources/logback.xml","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/console%2Fsrc%2Fmain%2Fresources%2Flogback.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/console%2Fsrc%2Fmain%2Fresources%2Flogback.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Flogback.xml?ref=df58538b67512d207d6e1955cffe6452db4cd420","patch":"@@ -62,11 +62,7 @@\n         <appender-ref ref=\"main\"/>\n     </logger>\n \n-    <logger name=\"org.apache.commons.httpclient\" additivity=\"false\">\n-        <level value=\"INFO\"/>\n-        <appender-ref ref=\"test\"/>\n-    </logger>\n-    <logger name=\"httpclient\" additivity=\"false\">\n+    <logger name=\"org.apache.http\" additivity=\"false\">\n         <level value=\"INFO\"/>\n         <appender-ref ref=\"test\"/>\n     </logger>"},{"sha":"7a6e7a3f5e49e445827510a52c4263abe3006d6d","filename":"core/pom.xml","status":"modified","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=df58538b67512d207d6e1955cffe6452db4cd420","patch":"@@ -96,6 +96,18 @@\n             <groupId>org.springframework</groupId>\n             <artifactId>spring-context</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>org.springframework</groupId>\n+            <artifactId>spring-context-support</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework</groupId>\n+            <artifactId>spring-asm</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework</groupId>\n+            <artifactId>spring-aop</artifactId>\n+        </dependency>\n         <dependency>\n             <groupId>org.springframework</groupId>\n             <artifactId>spring-tx</artifactId>\n@@ -108,6 +120,10 @@\n             <groupId>org.springframework</groupId>\n             <artifactId>spring-orm</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>org.springframework</groupId>\n+            <artifactId>spring-web</artifactId>\n+        </dependency>\n         <dependency>\n             <groupId>org.springframework</groupId>\n             <artifactId>spring-webmvc</artifactId>\n@@ -116,6 +132,14 @@\n             <groupId>org.springframework</groupId>\n             <artifactId>spring-oxm</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>org.springframework</groupId>\n+            <artifactId>spring-expression</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.security</groupId>\n+            <artifactId>spring-security-core</artifactId>\n+        </dependency>\n         <dependency>\n             <groupId>org.springframework.security</groupId>\n             <artifactId>spring-security-web</artifactId>\n@@ -161,16 +185,19 @@\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-all</artifactId>\n+            <scope>provided</scope>\n         </dependency>\n \n         <dependency>\n             <groupId>net.sf.ehcache</groupId>\n             <artifactId>ehcache-core</artifactId>\n+            <scope>provided</scope>\n         </dependency>\n \n         <dependency>\n             <groupId>org.codehaus.groovy</groupId>\n             <artifactId>groovy-all</artifactId>\n+            <scope>provided</scope>\n         </dependency>\n             \n         <dependency>\n@@ -468,6 +495,21 @@\n                                 <groupId>${jdbcdriver.groupId}</groupId>\n                                 <artifactId>${jdbcdriver.artifactId}</artifactId>\n                             </dependency>\n+\n+                            <dependency>\n+                                <groupId>org.apache.openjpa</groupId>\n+                                <artifactId>openjpa-all</artifactId>\n+                            </dependency>\n+\n+                            <dependency>\n+                                <groupId>net.sf.ehcache</groupId>\n+                                <artifactId>ehcache-core</artifactId>\n+                            </dependency>\n+\n+                            <dependency>\n+                                <groupId>org.codehaus.groovy</groupId>\n+                                <artifactId>groovy-all</artifactId>\n+                            </dependency>\n                         </dependencies>\n                     </container>\n                     <configuration>"},{"sha":"c3980a15002e7a8ccb91f8a4e6a435e88ec96b79","filename":"core/src/test/java/org/syncope/core/rest/AbstractTest.java","status":"modified","additions":9,"deletions":5,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=df58538b67512d207d6e1955cffe6452db4cd420","patch":"@@ -15,18 +15,17 @@\n package org.syncope.core.rest;\n \n import javax.sql.DataSource;\n-import org.apache.http.auth.AuthScope;\n import org.apache.http.auth.UsernamePasswordCredentials;\n import org.apache.http.impl.client.DefaultHttpClient;\n import org.junit.Before;\n import org.junit.runner.RunWith;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;\n import org.springframework.test.context.ContextConfiguration;\n import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n import org.springframework.web.client.RestTemplate;\n+import org.syncope.client.http.PreemptiveAuthHttpRequestFactory;\n \n @RunWith(SpringJUnit4ClassRunner.class)\n @ContextConfiguration(locations = {\n@@ -50,13 +49,18 @@ public abstract class AbstractTest {\n     @Autowired\n     protected DataSource testDataSource;\n \n+    protected RestTemplate anonymousRestTemplate() {\n+        return new RestTemplate();\n+    }\n+\n     @Before\n     public void setupRestTemplate() {\n-        HttpComponentsClientHttpRequestFactory requestFactory =\n-                ((HttpComponentsClientHttpRequestFactory) restTemplate.\n+        PreemptiveAuthHttpRequestFactory requestFactory =\n+                ((PreemptiveAuthHttpRequestFactory) restTemplate.\n                 getRequestFactory());\n         ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n+                getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(),\n                 new UsernamePasswordCredentials(\"admin\", \"password\"));\n     }\n }"},{"sha":"268b01ef6cf6fdc57a357caa86f9326bfcab56cd","filename":"core/src/test/java/org/syncope/core/rest/AuthenticationTestITCase.java","status":"modified","additions":59,"deletions":28,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java?ref=df58538b67512d207d6e1955cffe6452db4cd420","patch":"@@ -25,8 +25,8 @@\n import org.apache.http.impl.client.DefaultHttpClient;\n import org.junit.Test;\n import org.springframework.http.HttpStatus;\n-import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;\n import org.springframework.web.client.HttpClientErrorException;\n+import org.syncope.client.http.PreemptiveAuthHttpRequestFactory;\n import org.syncope.client.search.AttributeCond;\n import org.syncope.client.search.NodeCond;\n import org.syncope.client.to.AttributeTO;\n@@ -38,6 +38,24 @@\n \n public class AuthenticationTestITCase extends AbstractTest {\n \n+    @Test\n+    public void testAdminEntitlements() {\n+        // 1. as anonymous, read all available entitlements\n+        Set<String> allEntitlements = new HashSet<String>(\n+                Arrays.asList(anonymousRestTemplate().getForObject(\n+                BASE_URL + \"auth/allentitlements.json\", String[].class)));\n+        assertNotNull(allEntitlements);\n+        assertFalse(allEntitlements.isEmpty());\n+\n+        // 2. as admin, read own entitlements\n+        super.setupRestTemplate();\n+        Set<String> adminEntitlements = new HashSet<String>(\n+                Arrays.asList(restTemplate.getForObject(\n+                BASE_URL + \"auth/entitlements.json\", String[].class)));\n+\n+        assertEquals(allEntitlements, adminEntitlements);\n+    }\n+\n     @Test\n     public void testUserSchemaAuthorization() {\n         // 0. create a role that can only read schemas\n@@ -81,11 +99,12 @@ public void testUserSchemaAuthorization() {\n         assertNotNull(schemaTO);\n \n         // 4. read the schema created above (as user) - success\n-        HttpComponentsClientHttpRequestFactory requestFactory =\n-                ((HttpComponentsClientHttpRequestFactory) restTemplate.\n+        PreemptiveAuthHttpRequestFactory requestFactory =\n+                ((PreemptiveAuthHttpRequestFactory) restTemplate.\n                 getRequestFactory());\n         ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n+                getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(),\n                 new UsernamePasswordCredentials(\n                 userTO.getUsername(), \"password123\"));\n \n@@ -112,7 +131,7 @@ public void testUserSchemaAuthorization() {\n \n         assertNotNull(userTO);\n         assertNotNull(userTO.getLastLoginDate());\n-        assertEquals(new Integer(0), userTO.getFailedLogins());\n+        assertEquals(Integer.valueOf(0), userTO.getFailedLogins());\n     }\n \n     @Test\n@@ -131,11 +150,12 @@ public void testUserRead() {\n                 BASE_URL + \"user/create\", userTO, UserTO.class);\n         assertNotNull(userTO);\n \n-        HttpComponentsClientHttpRequestFactory requestFactory =\n-                ((HttpComponentsClientHttpRequestFactory) restTemplate.\n+        PreemptiveAuthHttpRequestFactory requestFactory =\n+                ((PreemptiveAuthHttpRequestFactory) restTemplate.\n                 getRequestFactory());\n         ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n+                getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(),\n                 new UsernamePasswordCredentials(\n                 userTO.getUsername(), \"password123\"));\n \n@@ -144,7 +164,8 @@ public void testUserRead() {\n         assertNotNull(readUserTO);\n \n         ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n+                getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(),\n                 new UsernamePasswordCredentials(\"user2\", \"password\"));\n \n         HttpClientErrorException exception = null;\n@@ -177,11 +198,12 @@ public void testUserSearch() {\n                 userTO, UserTO.class);\n         assertNotNull(userTO);\n \n-        HttpComponentsClientHttpRequestFactory requestFactory =\n-                ((HttpComponentsClientHttpRequestFactory) restTemplate.\n+        PreemptiveAuthHttpRequestFactory requestFactory =\n+                ((PreemptiveAuthHttpRequestFactory) restTemplate.\n                 getRequestFactory());\n         ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n+                getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(),\n                 new UsernamePasswordCredentials(\n                 userTO.getUsername(), \"password123\"));\n \n@@ -202,7 +224,8 @@ public void testUserSearch() {\n         assertTrue(userIds.contains(1L));\n \n         ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n+                getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(),\n                 new UsernamePasswordCredentials(\"user2\", \"password\"));\n \n         matchedUsers = Arrays.asList(\n@@ -236,11 +259,12 @@ public void checkFailedLogins() {\n                 BASE_URL + \"user/create\", userTO, UserTO.class);\n         assertNotNull(userTO);\n \n-        HttpComponentsClientHttpRequestFactory requestFactory =\n-                ((HttpComponentsClientHttpRequestFactory) restTemplate.\n+        PreemptiveAuthHttpRequestFactory requestFactory =\n+                ((PreemptiveAuthHttpRequestFactory) restTemplate.\n                 getRequestFactory());\n         ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n+                getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(),\n                 new UsernamePasswordCredentials(\n                 userTO.getUsername(), \"password123\"));\n \n@@ -250,12 +274,13 @@ public void checkFailedLogins() {\n \n         assertNotNull(readUserTO);\n         assertNotNull(readUserTO.getFailedLogins());\n-        assertEquals(new Integer(0), readUserTO.getFailedLogins());\n+        assertEquals(Integer.valueOf(0), readUserTO.getFailedLogins());\n \n         // authentications failed ...\n \n         ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n+                getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(),\n                 new UsernamePasswordCredentials(\n                 userTO.getUsername(), \"wrongpwd1\"));\n \n@@ -290,10 +315,11 @@ public void checkFailedLogins() {\n                 UserTO.class, userTO.getId());\n         assertNotNull(readUserTO);\n         assertNotNull(readUserTO.getFailedLogins());\n-        assertEquals(new Integer(2), readUserTO.getFailedLogins());\n+        assertEquals(Integer.valueOf(2), readUserTO.getFailedLogins());\n \n         ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n+                getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(),\n                 new UsernamePasswordCredentials(\n                 userTO.getUsername(), \"password123\"));\n \n@@ -302,7 +328,7 @@ public void checkFailedLogins() {\n                 UserTO.class, userTO.getId());\n         assertNotNull(readUserTO);\n         assertNotNull(readUserTO.getFailedLogins());\n-        assertEquals(new Integer(0), readUserTO.getFailedLogins());\n+        assertEquals(Integer.valueOf(0), readUserTO.getFailedLogins());\n     }\n \n     @Test\n@@ -322,11 +348,12 @@ public void checkUserSuspension() {\n                 BASE_URL + \"user/create\", userTO, UserTO.class);\n         assertNotNull(userTO);\n \n-        HttpComponentsClientHttpRequestFactory requestFactory =\n-                ((HttpComponentsClientHttpRequestFactory) restTemplate.\n+        PreemptiveAuthHttpRequestFactory requestFactory =\n+                ((PreemptiveAuthHttpRequestFactory) restTemplate.\n                 getRequestFactory());\n         ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n+                getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(),\n                 new UsernamePasswordCredentials(\n                 userTO.getUsername(), \"password123\"));\n \n@@ -341,7 +368,8 @@ public void checkUserSuspension() {\n         // authentications failed ...\n \n         ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n+                getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(),\n                 new UsernamePasswordCredentials(\n                 userTO.getUsername(), \"wrongpwd1\"));\n \n@@ -393,7 +421,8 @@ public void checkUserSuspension() {\n \n         // last authentication before suspension\n         ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n+                getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(),\n                 new UsernamePasswordCredentials(\n                 userTO.getUsername(), \"wrongpwd1\"));\n \n@@ -423,7 +452,8 @@ public void checkUserSuspension() {\n         // check for authentication\n \n         ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n+                getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(),\n                 new UsernamePasswordCredentials(\n                 userTO.getUsername(), \"password123\"));\n \n@@ -449,7 +479,8 @@ public void checkUserSuspension() {\n         assertEquals(\"active\", userTO.getStatus());\n \n         ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n+                getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(),\n                 new UsernamePasswordCredentials(\n                 userTO.getUsername(), \"password123\"));\n "},{"sha":"4b9272d2cdb21780f49493ddcb3c8e2eb8ab9955","filename":"core/src/test/java/org/syncope/core/rest/UserRequestTestITCase.java","status":"modified","additions":19,"deletions":37,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserRequestTestITCase.java?ref=df58538b67512d207d6e1955cffe6452db4cd420","patch":"@@ -18,14 +18,13 @@\n \n import java.util.Arrays;\n import java.util.List;\n-import org.apache.http.auth.AuthScope;\n import org.apache.http.auth.Credentials;\n import org.apache.http.auth.UsernamePasswordCredentials;\n import org.apache.http.impl.client.DefaultHttpClient;\n import org.junit.Test;\n import org.springframework.http.HttpStatus;\n-import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;\n import org.springframework.web.client.HttpStatusCodeException;\n+import org.syncope.client.http.PreemptiveAuthHttpRequestFactory;\n import org.syncope.client.mod.UserMod;\n import org.syncope.client.search.AttributeCond;\n import org.syncope.client.search.NodeCond;\n@@ -40,11 +39,12 @@ public class UserRequestTestITCase extends AbstractTest {\n \n     @Test\n     public void selfRead() {\n-        HttpComponentsClientHttpRequestFactory requestFactory =\n-                ((HttpComponentsClientHttpRequestFactory) restTemplate.\n+        PreemptiveAuthHttpRequestFactory requestFactory =\n+                ((PreemptiveAuthHttpRequestFactory) restTemplate.\n                 getRequestFactory());\n         ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n+                getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(),\n                 new UsernamePasswordCredentials(\"user1\", \"password\"));\n \n         try {\n@@ -90,34 +90,15 @@ public void create() {\n                 configurationTO, ConfigurationTO.class);\n         assertNotNull(configurationTO);\n \n-        // 4. be anonymous\n-        HttpComponentsClientHttpRequestFactory requestFactory =\n-                ((HttpComponentsClientHttpRequestFactory) restTemplate.\n-                getRequestFactory());\n-        ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n-                new Credentials() {\n-\n-                    @Override\n-                    public Principal getUserPrincipal() {\n-                        return null;\n-                    }\n-\n-                    @Override\n-                    public String getPassword() {\n-                        return null;\n-                    }\n-                });\n-\n-        // 5. now request user create works\n-        UserRequestTO request = restTemplate.postForObject(\n+        // 4. as anonymous, request user create works\n+        UserRequestTO request = anonymousRestTemplate().postForObject(\n                 BASE_URL + \"user/request/create\", userTO, UserRequestTO.class);\n         assertNotNull(request);\n \n-        // 6. switch back to admin\n+        // 5. switch back to admin\n         super.setupRestTemplate();\n \n-        // 7. try to find user\n+        // 6. try to find user\n         AttributeCond attrCond = new AttributeCond(AttributeCond.Type.EQ);\n         attrCond.setSchema(\"userId\");\n         attrCond.setExpression(\"selfcreate@syncope-idm.org\");\n@@ -127,7 +108,7 @@ public String getPassword() {\n                 NodeCond.getLeafCond(attrCond), UserTO[].class));\n         assertTrue(matchingUsers.isEmpty());\n \n-        // 8. actually create user\n+        // 7. actually create user\n         userTO = restTemplate.postForObject(\n                 BASE_URL + \"user/create\", request.getUserTO(), UserTO.class);\n         assertNotNull(userTO);\n@@ -157,11 +138,12 @@ public void update() {\n         }\n \n         // 3. auth as user just created\n-        HttpComponentsClientHttpRequestFactory requestFactory =\n-                ((HttpComponentsClientHttpRequestFactory) restTemplate.\n+        PreemptiveAuthHttpRequestFactory requestFactory =\n+                ((PreemptiveAuthHttpRequestFactory) restTemplate.\n                 getRequestFactory());\n         ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n+                getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(),\n                 new UsernamePasswordCredentials(userTO.getUsername(),\n                 initialPassword));\n \n@@ -226,11 +208,12 @@ public void delete() {\n         }\n \n         // 3. auth as user just created\n-        HttpComponentsClientHttpRequestFactory requestFactory =\n-                ((HttpComponentsClientHttpRequestFactory) restTemplate.\n+        PreemptiveAuthHttpRequestFactory requestFactory =\n+                ((PreemptiveAuthHttpRequestFactory) restTemplate.\n                 getRequestFactory());\n         ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n+                getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(),\n                 new UsernamePasswordCredentials(userTO.getUsername(),\n                 initialPassword));\n \n@@ -254,8 +237,7 @@ public void delete() {\n \n         // 8. user does not exist any more\n         try {\n-            actual = restTemplate.getForObject(BASE_URL\n-                    + \"user/read/{userId}.json\",\n+            restTemplate.getForObject(BASE_URL + \"user/read/{userId}.json\",\n                     UserTO.class, userTO.getId());\n             fail();\n         } catch (HttpStatusCodeException e) {"},{"sha":"d0c7011261e1df759016b098b1322dec748c525e","filename":"core/src/test/java/org/syncope/core/rest/UserTestITCase.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=df58538b67512d207d6e1955cffe6452db4cd420","patch":"@@ -25,15 +25,14 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n-import org.apache.http.auth.AuthScope;\n import org.apache.http.auth.UsernamePasswordCredentials;\n import org.apache.http.impl.client.DefaultHttpClient;\n import org.junit.Test;\n import org.springframework.dao.EmptyResultDataAccessException;\n import org.springframework.http.HttpStatus;\n-import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;\n import org.springframework.jdbc.core.JdbcTemplate;\n import org.springframework.web.client.HttpStatusCodeException;\n+import org.syncope.client.http.PreemptiveAuthHttpRequestFactory;\n import org.syncope.client.mod.AttributeMod;\n import org.syncope.client.mod.MembershipMod;\n import org.syncope.client.mod.UserMod;\n@@ -667,11 +666,12 @@ public void createWithReject() {\n \n         // 3. claim task from user1, not in role 7 (designated for \n         // approval in workflow definition): fail\n-        HttpComponentsClientHttpRequestFactory requestFactory =\n-                ((HttpComponentsClientHttpRequestFactory) restTemplate.\n+        PreemptiveAuthHttpRequestFactory requestFactory =\n+                ((PreemptiveAuthHttpRequestFactory) restTemplate.\n                 getRequestFactory());\n         ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n+                getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(),\n                 new UsernamePasswordCredentials(\"user1\", \"password\"));\n \n         SyncopeClientException sce = null;\n@@ -686,7 +686,8 @@ public void createWithReject() {\n \n         // 4. claim task from user4, in to role 7\n         ((DefaultHttpClient) requestFactory.getHttpClient()).\n-                getCredentialsProvider().setCredentials(AuthScope.ANY,\n+                getCredentialsProvider().setCredentials(\n+                requestFactory.getAuthScope(),\n                 new UsernamePasswordCredentials(\"user4\", \"password\"));\n \n         form = restTemplate.getForObject("},{"sha":"fb727c7fbaf019f32795a0c4934c0cce600d3eb4","filename":"core/src/test/resources/restClientContext.xml","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/core%2Fsrc%2Ftest%2Fresources%2FrestClientContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/core%2Fsrc%2Ftest%2Fresources%2FrestClientContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2FrestClientContext.xml?ref=df58538b67512d207d6e1955cffe6452db4cd420","patch":"@@ -19,13 +19,13 @@\n \n     <bean id=\"httpClientConnManager\" class=\"org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager\"/>\n     <bean id=\"httpClientParams\" class=\"org.apache.http.params.SyncBasicHttpParams\"/>\n-    <bean id=\"httpClient\" class=\"org.apache.http.impl.client.ContentEncodingHttpClient\">\n+    <bean id=\"httpClientFactory\" class=\"org.syncope.client.http.PreemptiveAuthHttpRequestFactory\">\n+        <constructor-arg value=\"localhost\"/>\n+        <constructor-arg value=\"9080\"/>\n+        <constructor-arg value=\"http\"/>\n         <constructor-arg ref=\"httpClientConnManager\"/>\n         <constructor-arg ref=\"httpClientParams\"/>\n     </bean>\n-    <bean id=\"httpClientFactory\" class=\"org.springframework.http.client.HttpComponentsClientHttpRequestFactory\">\n-        <constructor-arg ref=\"httpClient\"/>\n-    </bean>\n     <bean id=\"restTemplate\" class=\"org.springframework.web.client.RestTemplate\">\n         <constructor-arg ref=\"httpClientFactory\"/>\n "},{"sha":"c0e18f39b921ad4567bc4aae8b75578361cb210c","filename":"hibernate-enhancer/pom.xml","status":"modified","additions":3,"deletions":15,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/hibernate-enhancer%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/hibernate-enhancer%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/hibernate-enhancer%2Fpom.xml?ref=df58538b67512d207d6e1955cffe6452db4cd420","patch":"@@ -19,25 +19,14 @@\n     <parent>\n         <groupId>org.syncope</groupId>\n         <artifactId>syncope</artifactId>\n-        <version>0.8-SNAPSHOT</version>\n+        <version>0.8-ASL-SNAPSHOT</version>\n     </parent>\n \n     <name>Syncope Hibernate enhancer</name>\n-    <description>Syncope Hibernate enhancer</description>\n+    <description>When using Hibernate as JPA provider, enhance entities.</description>\n     <groupId>org.syncope</groupId>\n     <artifactId>syncope-hibernate-enhancer</artifactId>\n-    <build>\n-        <plugins>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-compiler-plugin</artifactId>\n-                <version>2.3.2</version>\n-                <configuration>\n-                    <showDeprecation>true</showDeprecation>\n-                </configuration>\n-            </plugin>\n-        </plugins>\n-    </build>\n+\n     <dependencies>\n         <dependency>\n             <groupId>org.javassist</groupId>\n@@ -56,7 +45,6 @@\n             <artifactId>geronimo-jpa_2.0_spec</artifactId> \n             <scope>provided</scope>\n         </dependency>\n-        \n     </dependencies>\n \n     <reporting>"},{"sha":"6d9841a53984b5dee066f0bd1519b338ddc6f0ff","filename":"pom.xml","status":"modified","additions":93,"deletions":9,"changes":102,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=df58538b67512d207d6e1955cffe6452db4cd420","patch":"@@ -31,9 +31,8 @@\n     </parent>\n \n     <url>http://www.syncope-idm.org/</url>\n-    <prerequisites>\n-        <maven>[3.0.3,)</maven>\n-    </prerequisites>\n+\n+    <inceptionYear>2010</inceptionYear>\n \n     <licenses>\n         <license>\n@@ -53,6 +52,11 @@\n         <system>Google Code</system>\n         <url>http://code.google.com/p/syncope/issues/</url>\n     </issueManagement>\n+    \n+    <ciManagement>\n+        <system>Jenkins</system>\n+        <url>http://jenkins.syncope-idm.org/</url>\n+    </ciManagement>\n \n     <mailingLists>\n         <mailingList>\n@@ -66,7 +70,56 @@\n             <archive>http://groups.google.com/group/syncope-users</archive>\n         </mailingList>\n     </mailingLists>\n+    \n+    <developers>\n+        <developer>\n+            <id>chicchiricco</id>\n+            <name>Francesco Chicchiriccò</name>\n+            <organization>Tirasa</organization>\n+            <organizationUrl>http://www.tirasa.net/</organizationUrl>\n+            <roles>\n+                <role>Owner</role>\n+            </roles>\n+            <url>https://people.apache.org/~ilgrosso/</url>\n+        </developer>\n+        <developer>\n+            <id>fabio.martelli</id>\n+            <name>Fabio Martelli</name>\n+            <organization>Tirasa</organization>\n+            <organizationUrl>http://www.tirasa.net/</organizationUrl>\n+            <roles>\n+                <role>Owner</role>\n+            </roles>\n+        </developer>\n+        <developer>\n+            <id>mdisabatinodidiodoro</id>\n+            <name>Marco Di Sabatino Di Diodoro</name>\n+            <organization>Tirasa</organization>\n+            <organizationUrl>http://www.tirasa.net/</organizationUrl>\n+            <roles>\n+                <role>Committer</role>\n+            </roles>\n+        </developer>        \n+    </developers>\n+    \n+    <contributors>\n+        <contributor>\n+            <name>Massimiliano Perrone</name>            \n+            <organization>Tirasa</organization>\n+            <organizationUrl>http://www.tirasa.net/</organizationUrl>\n+        </contributor>\n+        <contributor>\n+            <name>Geert Van der Ploeg</name>\n+        </contributor>\n+        <contributor>\n+            <name>Simone Tripodi</name>\n+        </contributor>\n+    </contributors>\n \n+    <prerequisites>\n+        <maven>[3.0.3,)</maven>\n+    </prerequisites>\n+    \n     <properties>\n         <targetJdk>1.6</targetJdk>\n         \n@@ -102,7 +155,7 @@\n         <openjpa.version>2.2.0-SNAPSHOT</openjpa.version>\n         <ehcache.version>2.5.0</ehcache.version>\n \n-        <wicket.version>1.5.3</wicket.version>\n+        <wicket.version>1.5-SNAPSHOT</wicket.version>\n \n         <groovy.version>1.8.4</groovy.version>\n \n@@ -259,6 +312,21 @@\n                 <artifactId>spring-context</artifactId>\n                 <version>${spring.version}</version>\n             </dependency>\n+            <dependency>\n+                <groupId>org.springframework</groupId>\n+                <artifactId>spring-context-support</artifactId>\n+                <version>${spring.version}</version>\n+            </dependency>\n+            <dependency>\n+                <groupId>org.springframework</groupId>\n+                <artifactId>spring-aop</artifactId>\n+                <version>${spring.version}</version>\n+            </dependency>\n+            <dependency>\n+                <groupId>org.springframework</groupId>\n+                <artifactId>spring-asm</artifactId>\n+                <version>${spring.version}</version>\n+            </dependency>\n             <dependency>\n                 <groupId>org.springframework</groupId>\n                 <artifactId>spring-jdbc</artifactId>\n@@ -269,6 +337,11 @@\n                 <artifactId>spring-orm</artifactId>\n                 <version>${spring.version}</version>\n             </dependency>\n+            <dependency>\n+                <groupId>org.springframework</groupId>\n+                <artifactId>spring-web</artifactId>\n+                <version>${spring.version}</version>\n+            </dependency>\n             <dependency>\n                 <groupId>org.springframework</groupId>\n                 <artifactId>spring-webmvc</artifactId>\n@@ -286,7 +359,12 @@\n             </dependency>\n             <dependency>\n                 <groupId>org.springframework</groupId>\n-                <artifactId>spring-web</artifactId>\n+                <artifactId>spring-expression</artifactId>\n+                <version>${spring.version}</version>\n+            </dependency>\n+            <dependency>\n+                <groupId>org.springframework.security</groupId>\n+                <artifactId>spring-security-core</artifactId>\n                 <version>${spring.version}</version>\n             </dependency>\n             <dependency>\n@@ -318,6 +396,11 @@\n                 <version>${aspectj.version}</version>\n             </dependency>\n \n+            <dependency>\n+                <groupId>org.codehaus.jackson</groupId>\n+                <artifactId>jackson-core-asl</artifactId>\n+                <version>${jackson.version}</version>\n+            </dependency>\n             <dependency>\n                 <groupId>org.codehaus.jackson</groupId>\n                 <artifactId>jackson-mapper-asl</artifactId>\n@@ -635,7 +718,7 @@\n                 <plugin>\n                     <groupId>org.codehaus.mojo</groupId>\n                     <artifactId>selenium-maven-plugin</artifactId>\n-                    <version>2.1</version>\n+                    <version>2.2</version>\n                 </plugin>\n                 <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n@@ -707,7 +790,7 @@\n                             </zipUrlInstaller>\n                             <log>${cargo.log}</log>\n                             <output>${cargo.output}</output>    \n-                        </container>    \n+                        </container>\n                     </configuration>\n                 </plugin>\n                 <plugin>\n@@ -751,7 +834,7 @@\n                 <dependencies>    \n                     <dependency>\n                         <groupId>org.syncope</groupId>\n-                        <artifactId>syncope-build-tools</artifactId>\n+                        <artifactId>syncope-quality</artifactId>\n                         <version>${project.version}</version>\n                         <classifier>classes</classifier>\n                     </dependency>\n@@ -764,7 +847,7 @@\n                 <dependencies>    \n                     <dependency>\n                         <groupId>org.syncope</groupId>\n-                        <artifactId>syncope-build-tools</artifactId>\n+                        <artifactId>syncope-quality</artifactId>\n                         <version>${project.version}</version>\n                         <classifier>classes</classifier>\n                     </dependency>\n@@ -865,6 +948,7 @@\n \n     <modules>\n         <module>build-tools</module>\n+        <module>quality</module>\n         <module>hibernate-enhancer</module>\n         <module>client</module>\n         <module>core</module>"},{"sha":"ec250de5ae1f7d76dc255d053338dd53940f860c","filename":"quality/pom.xml","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/quality%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/quality%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/quality%2Fpom.xml?ref=df58538b67512d207d6e1955cffe6452db4cd420","patch":"@@ -0,0 +1,30 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>org.syncope</groupId>\n+        <artifactId>syncope</artifactId>\n+        <version>0.8-ASL-SNAPSHOT</version>\n+    </parent>\n+\n+    <name>Syncope quality</name>\n+    <description>Configuration for widely used quality enforcement plugins: pmd, checkstyle, findbugs...</description>\n+    <groupId>org.syncope</groupId>\n+    <artifactId>syncope-quality</artifactId>\n+    \n+</project>"},{"sha":"7e408ff18cd445e0f3215f2b609421b9cb725133","filename":"quality/src/main/resources/org/syncope/checkstyle.xml","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/quality%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcheckstyle.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/quality%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcheckstyle.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/quality%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fcheckstyle.xml?ref=df58538b67512d207d6e1955cffe6452db4cd420","previous_filename":"build-tools/src/main/resources/org/syncope/checkstyle.xml"},{"sha":"5d4472f5f5536831fcc9082e45e943c64a2ca1ca","filename":"quality/src/main/resources/org/syncope/pmd.xml","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/df58538b67512d207d6e1955cffe6452db4cd420/quality%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fpmd.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/df58538b67512d207d6e1955cffe6452db4cd420/quality%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fpmd.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/quality%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fpmd.xml?ref=df58538b67512d207d6e1955cffe6452db4cd420","previous_filename":"build-tools/src/main/resources/org/syncope/pmd.xml"}]}