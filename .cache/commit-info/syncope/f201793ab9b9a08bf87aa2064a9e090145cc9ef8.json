{"sha":"f201793ab9b9a08bf87aa2064a9e090145cc9ef8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmYyMDE3OTNhYjliOWEwOGJmODdhYTIwNjRhOWUwOTAxNDVjYzllZjg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-01-21T07:23:49Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-01-21T07:23:49Z"},"message":"[SYNCOPE-1418] All based on Spring Boot now","tree":{"sha":"0ac2d15dc46bb01767fa8069678159751454a67f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0ac2d15dc46bb01767fa8069678159751454a67f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f201793ab9b9a08bf87aa2064a9e090145cc9ef8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f201793ab9b9a08bf87aa2064a9e090145cc9ef8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f201793ab9b9a08bf87aa2064a9e090145cc9ef8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69"}],"stats":{"total":15053,"additions":9688,"deletions":5365},"files":[{"sha":"d9230a68be92b0d02e4c4edda924fcaf189ba8ed","filename":"archetype/pom.xml","status":"modified","additions":13,"deletions":14,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/archetype%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/archetype%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -126,6 +126,13 @@ under the License.\n         </includes>\n       </resource>\n \n+      <resource>\n+        <directory>../core/starter/src/main/resources</directory>\n+        <includes>\n+          <include>application.properties</include>\n+        </includes>\n+        <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/main/resources</targetPath>\n+      </resource>\n       <resource>\n         <directory>../core/provisioning-java/src/main/resources</directory>\n         <excludes>\n@@ -136,8 +143,6 @@ under the License.\n       <resource>\n         <directory>../core/persistence-jpa/src/main/resources</directory>\n         <excludes>\n-          <exclude>*Context.xml</exclude>\n-          <exclude>domains.xml</exclude>\n           <exclude>META-INF/spring-persistence.xml</exclude>\n         </excludes>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/main/resources</targetPath>\n@@ -149,9 +154,6 @@ under the License.\n       <resource>\n         <directory>../core/logic/src/main/resources</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/main/resources</targetPath>\n-        <excludes>\n-          <exclude>*Context.xml</exclude>\n-        </excludes>\n       </resource>\n       <resource>\n         <directory>../core/spring/src/main/resources</directory>\n@@ -164,7 +166,7 @@ under the License.\n         <directory>../fit/core-reference/src/main/resources</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/main/resources</targetPath>\n         <includes>\n-          <include>coreContext.xml</include>\n+          <include>application-embedded.properties</include>\n           <include>log4j2.xml</include>\n         </includes>\n       </resource>\n@@ -198,13 +200,6 @@ under the License.\n           <include>userWorkflow.bpmn20.xml</include>\n         </includes>\n       </resource>\n-      <resource>\n-        <directory>../fit/core-reference/src/main/webapp</directory>\n-        <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/test/resources</targetPath>\n-        <includes>\n-          <include>*.jsp</include>\n-        </includes>\n-      </resource>\n       <resource>\n         <directory>../fit/core-reference/src/main/webapp/WEB-INF</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/core/src/main/webapp/WEB-INF</targetPath>\n@@ -219,9 +214,10 @@ under the License.\n       </resource>\n             \n       <resource>\n-        <directory>../client/console/src/main/resources</directory>\n+        <directory>../client/idrepo/console/src/main/resources</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/console/src/main/resources</targetPath>\n         <includes>\n+          <include>application.properties</include>\n           <include>console.properties</include>\n         </includes>\n       </resource>\n@@ -243,6 +239,7 @@ under the License.\n         <directory>../fit/console-reference/src/main/resources</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/console/src/main/resources</targetPath>\n         <includes>\n+          <include>application-embedded.properties</include>\n           <include>log4j2.xml</include>\n         </includes>\n       </resource>\n@@ -271,6 +268,7 @@ under the License.\n         <directory>../client/enduser/src/main/resources</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/enduser/src/main/resources</targetPath>\n         <includes>\n+          <include>application.properties</include>\n           <include>enduser.properties</include>\n           <include>customFormAttributes.json</include>\n           <include>customTemplate.json</include>\n@@ -298,6 +296,7 @@ under the License.\n         <directory>../fit/enduser-reference/src/main/resources</directory>\n         <targetPath>${project.build.outputDirectory}/archetype-resources/enduser/src/main/resources</targetPath>\n         <includes>\n+          <include>application-embedded.properties</include>\n           <include>log4j2.xml</include>\n         </includes>\n       </resource>"},{"sha":"7d2e04a2cf92e587e372bfdbef45f20aee3c9ebe","filename":"archetype/src/main/resources/archetype-resources/console/pom.xml","status":"modified","additions":32,"deletions":54,"changes":86,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -33,68 +33,15 @@ under the License.\n   <packaging>war</packaging>\n \n   <dependencies>\n-\n-    <dependency> \n-      <groupId>javax.servlet</groupId> \n-      <artifactId>javax.servlet-api</artifactId> \n-    </dependency>\n-    <dependency>\n-      <groupId>javax.servlet.jsp</groupId>\n-      <artifactId>javax.servlet.jsp-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>javax.servlet</groupId>\n-      <artifactId>jstl</artifactId>\n-    </dependency>\n-\n     <dependency>\n       <groupId>${groupId}</groupId>\n       <artifactId>syncope-common</artifactId>\n       <version>${project.version}</version>\n     </dependency>  \n-    \n+\n     <dependency>\n       <groupId>org.apache.syncope.client.idm</groupId>\n       <artifactId>syncope-client-idm-console</artifactId>\n-    </dependency>\n-    \n-    <dependency>\n-      <groupId>org.slf4j</groupId>\n-      <artifactId>slf4j-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-core</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>com.lmax</groupId>\n-      <artifactId>disruptor</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-slf4j-impl</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>commons-logging</groupId>\n-      <artifactId>commons-logging</artifactId>\n-      <scope>provided</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.slf4j</groupId>\n-      <artifactId>jcl-over-slf4j</artifactId>\n-    </dependency>\n-    \n-    <dependency>\n-      <groupId>org.webjars</groupId>\n-      <artifactId>jquery-ui</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.webjars</groupId>\n-      <artifactId>codemirror</artifactId>\n     </dependency>    \n   </dependencies>\n \n@@ -165,5 +112,36 @@ under the License.\n         </resources>\n       </build>\n     </profile>\n+    \n+    <profile>\n+      <id>executable</id>\n+      \n+      <dependencies>\n+        <dependency>\n+          <groupId>org.springframework.boot</groupId>\n+          <artifactId>spring-boot-starter-undertow</artifactId>\n+        </dependency>\n+      </dependencies>\n+        \n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-maven-plugin</artifactId>\n+            <configuration>\n+              <mainClass>org.apache.syncope.client.console.SyncopeConsoleApplication</mainClass>\n+              <layout>ZIP</layout>\n+            </configuration>\n+            <executions>\n+              <execution>\n+                <goals>\n+                  <goal>repackage</goal>\n+                </goals>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n   </profiles>\n </project>"},{"sha":"994ddebaf8403339e2c0b2f3a787aa0177111a8d","filename":"archetype/src/main/resources/archetype-resources/core/pom.xml","status":"modified","additions":44,"deletions":64,"changes":108,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -33,79 +33,19 @@ under the License.\n   <packaging>war</packaging>\n \n   <dependencies>\n-    <dependency> \n-      <groupId>javax.servlet</groupId> \n-      <artifactId>javax.servlet-api</artifactId> \n-    </dependency>\n-    <dependency>\n-      <groupId>javax.servlet.jsp</groupId>\n-      <artifactId>javax.servlet.jsp-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>javax.servlet</groupId>\n-      <artifactId>jstl</artifactId>\n-    </dependency>\n-    \n     <dependency>\n       <groupId>${groupId}</groupId>\n       <artifactId>syncope-common</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n     \n-    <dependency>\n-      <groupId>org.apache.syncope.core.idm</groupId>\n-      <artifactId>syncope-core-idm-rest-cxf</artifactId>\n-    </dependency>\n     <dependency>\n       <groupId>org.apache.syncope.core</groupId>\n-      <artifactId>syncope-core-workflow-java</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.syncope.core</groupId>\n-      <artifactId>syncope-core-persistence-jpa</artifactId>\n-    </dependency>\n-  \n-    <dependency>\n-      <groupId>org.slf4j</groupId>\n-      <artifactId>slf4j-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-core</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>com.lmax</groupId>\n-      <artifactId>disruptor</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-slf4j-impl</artifactId>\n+      <artifactId>syncope-core-starter</artifactId>\n     </dependency>\n     <dependency>\n-      <groupId>commons-logging</groupId>\n-      <artifactId>commons-logging</artifactId>\n-      <scope>provided</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.slf4j</groupId>\n-      <artifactId>jcl-over-slf4j</artifactId>\n-    </dependency>\n-    \n-    <dependency>\n-      <groupId>org.webjars</groupId>\n-      <artifactId>jquery</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.webjars</groupId>\n-      <artifactId>jquery-ui</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.webjars</groupId>\n-      <artifactId>highlightjs</artifactId>\n+      <groupId>org.apache.syncope.core.idm</groupId>\n+      <artifactId>syncope-core-idm-rest-cxf</artifactId>\n     </dependency>\n   </dependencies>\n \n@@ -160,7 +100,7 @@ under the License.\n       \n       <dependencies>\n         <dependency>\n-\t  <groupId>org.apache.syncope.ext.flowable</groupId>\n+          <groupId>org.apache.syncope.ext.flowable</groupId>\n           <artifactId>syncope-ext-flowable-rest-cxf</artifactId>\n           <version>${syncope.version}</version>\n         </dependency>\n@@ -238,6 +178,46 @@ under the License.\n         </resources>\n       </build>\n     </profile>\n+    \n+    <profile>\n+      <!--\n+      This profile builds an executable war file.\n+      In order for the app to run, it is necessary to include the conf directory and the JDBC driver in the runtime\n+      classpath; according to official docs [1] this can be achieved by setting the LOADER_PATH env variable as follows:\n+      \n+      export LOADER_PATH=/path/to/conf/dir,/path/to/jdbc-driver.jar\n+      \n+      [1] https://docs.spring.io/spring-boot/docs/current/reference/html/executable-jar.html\n+      -->\n+      <id>executable</id>\n+      \n+      <dependencies>\n+        <dependency>\n+          <groupId>org.springframework.boot</groupId>\n+          <artifactId>spring-boot-starter-undertow</artifactId>\n+        </dependency>\n+      </dependencies>\n+        \n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-maven-plugin</artifactId>\n+            <configuration>\n+              <mainClass>org.apache.syncope.core.starter.SyncopeCoreApplication</mainClass>\n+              <layout>ZIP</layout>\n+            </configuration>\n+            <executions>\n+              <execution>\n+                <goals>\n+                  <goal>repackage</goal>\n+                </goals>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n   </profiles>\n \n </project>"},{"sha":"291d95a37b0c1e0d666fb26b63dd955955ae190c","filename":"archetype/src/main/resources/archetype-resources/enduser/pom.xml","status":"modified","additions":43,"deletions":53,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fenduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fenduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fenduser%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -33,20 +33,6 @@ under the License.\n   <packaging>war</packaging>\n \n   <dependencies>\n-\n-    <dependency> \n-      <groupId>javax.servlet</groupId> \n-      <artifactId>javax.servlet-api</artifactId> \n-    </dependency>\n-    <dependency>\n-      <groupId>javax.servlet.jsp</groupId>\n-      <artifactId>javax.servlet.jsp-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>javax.servlet</groupId>\n-      <artifactId>jstl</artifactId>\n-    </dependency>\n-\n     <dependency>\n       <groupId>${groupId}</groupId>\n       <artifactId>syncope-common</artifactId>\n@@ -57,36 +43,6 @@ under the License.\n       <groupId>org.apache.syncope.client</groupId>\n       <artifactId>syncope-client-enduser</artifactId>\n     </dependency>\n-    \n-    <dependency>\n-      <groupId>org.slf4j</groupId>\n-      <artifactId>slf4j-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-core</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>com.lmax</groupId>\n-      <artifactId>disruptor</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-slf4j-impl</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>commons-logging</groupId>\n-      <artifactId>commons-logging</artifactId>\n-      <scope>provided</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.slf4j</groupId>\n-      <artifactId>jcl-over-slf4j</artifactId>\n-    </dependency>\n   </dependencies>\n \n   <build>\n@@ -239,9 +195,6 @@ under the License.\n                     <copy file=\"../core/target/test-classes/connid.properties\" \n                           todir=\"../core/target/syncope/WEB-INF/classes\" \n                           overwrite=\"true\"/>\n-                    <copy file=\"../core/target/test-classes/db.jsp\" \n-                          todir=\"../core/target/syncope\" \n-                          overwrite=\"true\"/>\n \n                     <copy file=\"${project.build.directory}/test-classes/enduser.properties\" \n                           todir=\"${project.build.directory}/${project.build.finalName}/WEB-INF/classes\" \n@@ -276,21 +229,27 @@ under the License.\n             <inherited>true</inherited>\n             <configuration>\n               <container>\n+                <containerId>tomcat9x</containerId>\n+                <zipUrlInstaller>\n+                  <url>http://central.maven.org/maven2/org/apache/tomcat/tomcat/${tomcat.version}/tomcat-${tomcat.version}.zip</url>\n+                  <downloadDir>${settings.localRepository}/org/codehaus/cargo/cargo-container-archives</downloadDir>\n+                  <extractDir>${project.build.directory}/cargo/extract</extractDir>\n+                </zipUrlInstaller>\n                 <dependencies>\n                   <dependency>\n                     <groupId>com.h2database</groupId>\n                     <artifactId>h2</artifactId>\n                   </dependency>\n                 </dependencies>\n+                <timeout>300000</timeout>\n+                <log>${cargo.log}</log>\n+                <output>${cargo.output}</output> \n               </container>\n               <configuration>\n-                <type>standalone</type>\n                 <properties>\n-                  <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>\n-                  <cargo.tomcat.ajp.port>${cargo.tomcat.ajp.port}</cargo.tomcat.ajp.port>\n-                  <cargo.rmi.port>${cargo.rmi.port}</cargo.rmi.port>\n-\n-                  <cargo.jvmargs>-noverify -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC</cargo.jvmargs>\n+                  <cargo.jvmargs>\n+                    -Dspring.profiles.active=embedded\n+                    -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xmx1024m -Xms512m</cargo.jvmargs>\n                 </properties>\n               </configuration>\n               <deployables>\n@@ -380,5 +339,36 @@ under the License.\n         </resources>\n       </build>\n     </profile>\n+    \n+    <profile>\n+      <id>executable</id>\n+      \n+      <dependencies>\n+        <dependency>\n+          <groupId>org.springframework.boot</groupId>\n+          <artifactId>spring-boot-starter-undertow</artifactId>\n+        </dependency>\n+      </dependencies>\n+        \n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-maven-plugin</artifactId>\n+            <configuration>\n+              <mainClass>org.apache.syncope.client.enduser.SyncopeEnduserApplication</mainClass>\n+              <layout>ZIP</layout>\n+            </configuration>\n+            <executions>\n+              <execution>\n+                <goals>\n+                  <goal>repackage</goal>\n+                </goals>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n   </profiles>\n </project>"},{"sha":"4e38af7d3cb361922d84badd65a256475bcc97a4","filename":"archetype/src/main/resources/meta-pom.xml","status":"modified","additions":3,"deletions":8,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/archetype%2Fsrc%2Fmain%2Fresources%2Fmeta-pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/archetype%2Fsrc%2Fmain%2Fresources%2Fmeta-pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Fmeta-pom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -54,19 +54,14 @@ under the License.\n         <version>${syncope.version}</version>\n       </dependency>\n       \n-      <dependency>\n-        <groupId>org.apache.syncope.core.idm</groupId>\n-        <artifactId>syncope-core-idm-rest-cxf</artifactId>\n-        <version>${syncope.version}</version>\n-      </dependency>\n       <dependency>\n         <groupId>org.apache.syncope.core</groupId>\n-        <artifactId>syncope-core-workflow-java</artifactId>\n+        <artifactId>syncope-core-starter</artifactId>\n         <version>${syncope.version}</version>\n       </dependency>\n       <dependency>\n-        <groupId>org.apache.syncope.core</groupId>\n-        <artifactId>syncope-core-persistence-jpa</artifactId>\n+        <groupId>org.apache.syncope.core.idm</groupId>\n+        <artifactId>syncope-core-idm-rest-cxf</artifactId>\n         <version>${syncope.version}</version>\n       </dependency>\n         "},{"sha":"481326d40a895ba2449388b48a394ddab718320a","filename":"client/enduser/pom.xml","status":"modified","additions":39,"deletions":3,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -45,8 +45,12 @@ under the License.\n     </dependency>\n \n     <dependency>\n-      <groupId>org.springframework</groupId>\n-      <artifactId>spring-context</artifactId>\n+      <groupId>com.giffing.wicket.spring.boot.starter</groupId>\n+      <artifactId>wicket-spring-boot-starter</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-starter-log4j2</artifactId>\n     </dependency>\n     \n     <dependency>\n@@ -181,11 +185,35 @@ under the License.\n       <artifactId>jquery-ui</artifactId>\n     </dependency>\n \n-    <!--Logging-->\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-api</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-api</artifactId>\n+    </dependency>\n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n       <artifactId>log4j-core</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>com.lmax</groupId>\n+      <artifactId>disruptor</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>commons-logging</groupId>\n+      <artifactId>commons-logging</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>jcl-over-slf4j</artifactId>\n+    </dependency>\n     \n     <!-- TEST -->\n     <dependency>\n@@ -209,6 +237,14 @@ under the License.\n         <directory>src/main/resources</directory>\n         <filtering>true</filtering>\n       </resource>\n+\n+      <resource>\n+        <directory>${basedir}/../../src/main/resources</directory>\n+        <filtering>true</filtering>\n+        <includes>\n+          <include>banner.txt</include>\n+        </includes>\n+      </resource>\n     </resources>    \n   </build>\n </project>"},{"sha":"c96da757dac3b603013382d1b0e0c0bd950fb341","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserApplication.java","status":"modified","additions":30,"deletions":336,"changes":366,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -18,350 +18,44 @@\n  */\n package org.apache.syncope.client.enduser;\n \n-import com.fasterxml.jackson.core.type.TypeReference;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import java.io.File;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.Serializable;\n-import java.util.HashMap;\n-import java.util.Map;\n-import org.apache.syncope.client.enduser.pages.HomePage;\n-import java.util.Properties;\n-import org.apache.commons.io.FileUtils;\n-import org.apache.commons.io.monitor.FileAlterationListener;\n-import org.apache.commons.io.monitor.FileAlterationListenerAdaptor;\n-import org.apache.commons.io.monitor.FileAlterationMonitor;\n-import org.apache.commons.io.monitor.FileAlterationObserver;\n-import org.apache.commons.lang3.BooleanUtils;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.enduser.annotations.Resource;\n+import com.giffing.wicket.spring.boot.starter.web.config.WicketWebInitializerAutoConfig.WebSocketWicketWebInitializerAutoConfiguration;\n import org.apache.syncope.client.enduser.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.enduser.init.EnduserInitializer;\n-import org.apache.syncope.client.enduser.model.CustomAttributesInfo;\n-import org.apache.syncope.client.enduser.model.CustomTemplateInfo;\n-import org.apache.syncope.client.enduser.resources.CaptchaResource;\n-import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n-import org.apache.syncope.common.lib.PropertyUtils;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.wicket.Page;\n-import org.apache.wicket.Session;\n-import org.apache.wicket.WicketRuntimeException;\n-import org.apache.wicket.protocol.http.WebApplication;\n-import org.apache.wicket.request.Request;\n-import org.apache.wicket.request.Response;\n-import org.apache.wicket.request.resource.AbstractResource;\n-import org.apache.wicket.request.resource.IResource;\n-import org.apache.wicket.request.resource.ResourceReference;\n-import org.apache.wicket.util.lang.Args;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class SyncopeEnduserApplication extends WebApplication implements Serializable {\n-\n-    private static final long serialVersionUID = -6445919351044845120L;\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(SyncopeEnduserApplication.class);\n-\n-    private static final String ENDUSER_PROPERTIES = \"enduser.properties\";\n-\n-    private static final String CUSTOM_FORM_ATTRIBUTES_FILE = \"customFormAttributes.json\";\n-\n-    private static final String CUSTOM_TEMPLATE_FILE = \"customTemplate.json\";\n-\n-    public static SyncopeEnduserApplication get() {\n-        return (SyncopeEnduserApplication) WebApplication.get();\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration;\n+import org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration;\n+import org.springframework.boot.builder.SpringApplicationBuilder;\n+import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;\n+import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n+\n+@SpringBootApplication\n+@EnableAutoConfiguration(exclude = {\n+    ErrorMvcAutoConfiguration.class,\n+    HttpMessageConvertersAutoConfiguration.class })\n+public class SyncopeEnduserApplication extends SpringBootServletInitializer implements WebMvcConfigurer {\n+\n+    public static void main(final String[] args) {\n+        SpringApplication.run(SyncopeEnduserApplication.class, args);\n     }\n \n-    private String domain;\n-\n-    private String adminUser;\n-\n-    private String anonymousUser;\n-\n-    private String anonymousKey;\n-\n-    private boolean captchaEnabled;\n-\n-    private boolean xsrfEnabled;\n-\n-    private Integer maxUploadFileSizeMB;\n-\n-    private SyncopeClientFactoryBean clientFactory;\n-\n-    private Map<String, CustomAttributesInfo> customFormAttributes;\n-\n-    private CustomTemplateInfo customTemplate;\n-\n-    private static final ObjectMapper MAPPER = new ObjectMapper();\n-\n     @Override\n-    protected void init() {\n-        super.init();\n-\n-        // read enduser.properties\n-        Properties props = PropertyUtils.read(getClass(), ENDUSER_PROPERTIES, \"enduser.directory\").getLeft();\n-\n-        domain = props.getProperty(\"domain\", SyncopeConstants.MASTER_DOMAIN);\n-        adminUser = props.getProperty(\"adminUser\");\n-        Args.notNull(adminUser, \"<adminUser>\");\n-        anonymousUser = props.getProperty(\"anonymousUser\");\n-        Args.notNull(anonymousUser, \"<anonymousUser>\");\n-        anonymousKey = props.getProperty(\"anonymousKey\");\n-        Args.notNull(anonymousKey, \"<anonymousKey>\");\n-\n-        captchaEnabled = Boolean.parseBoolean(props.getProperty(\"captcha\"));\n-        Args.notNull(captchaEnabled, \"<captcha>\");\n-\n-        xsrfEnabled = Boolean.parseBoolean(props.getProperty(\"xsrf\"));\n-        Args.notNull(xsrfEnabled, \"<xsrf>\");\n-\n-        String scheme = props.getProperty(\"scheme\");\n-        Args.notNull(scheme, \"<scheme>\");\n-        String host = props.getProperty(\"host\");\n-        Args.notNull(host, \"<host>\");\n-        String port = props.getProperty(\"port\");\n-        Args.notNull(port, \"<port>\");\n-        String rootPath = props.getProperty(\"rootPath\");\n-        Args.notNull(rootPath, \"<rootPath>\");\n-        String useGZIPCompression = props.getProperty(\"useGZIPCompression\");\n-        Args.notNull(useGZIPCompression, \"<useGZIPCompression>\");\n-        maxUploadFileSizeMB = props.getProperty(\"maxUploadFileSizeMB\") == null\n-                ? null\n-                : Integer.valueOf(props.getProperty(\"maxUploadFileSizeMB\"));\n-\n-        clientFactory = new SyncopeClientFactoryBean().\n-                setAddress(scheme + \"://\" + host + \":\" + port + StringUtils.prependIfMissing(rootPath, \"/\")).\n-                setContentType(SyncopeClientFactoryBean.ContentType.JSON).\n-                setUseCompression(BooleanUtils.toBoolean(useGZIPCompression));\n-\n-        // read customFormAttributes.json\n-        File enduserDir;\n-        try (InputStream is = getClass().getResourceAsStream(\"/\" + CUSTOM_FORM_ATTRIBUTES_FILE)) {\n-            customFormAttributes = MAPPER.readValue(is,\n-                    new TypeReference<HashMap<String, CustomAttributesInfo>>() {\n-            });\n-            enduserDir = new File(props.getProperty(\"enduser.directory\"));\n-            boolean existsEnduserDir = enduserDir.exists() && enduserDir.canRead() && enduserDir.isDirectory();\n-            if (existsEnduserDir) {\n-                File customFormAttributesFile = FileUtils.getFile(enduserDir, CUSTOM_FORM_ATTRIBUTES_FILE);\n-                if (customFormAttributesFile.exists()\n-                        && customFormAttributesFile.canRead()\n-                        && customFormAttributesFile.isFile()) {\n-                    customFormAttributes = MAPPER.readValue(FileUtils.openInputStream(customFormAttributesFile),\n-                            new TypeReference<HashMap<String, CustomAttributesInfo>>() {\n-                    });\n-                }\n-            }\n-            FileAlterationObserver observer = existsEnduserDir\n-                    ? new FileAlterationObserver(enduserDir,\n-                            pathname -> StringUtils.contains(pathname.getPath(), CUSTOM_FORM_ATTRIBUTES_FILE))\n-                    : new FileAlterationObserver(getClass().getResource(\"/\" + CUSTOM_FORM_ATTRIBUTES_FILE).getFile(),\n-                            pathname -> StringUtils.contains(pathname.getPath(), CUSTOM_FORM_ATTRIBUTES_FILE));\n-\n-            FileAlterationMonitor monitor = new FileAlterationMonitor(5000);\n-\n-            FileAlterationListener listener = new FileAlterationListenerAdaptor() {\n-\n-                @Override\n-                public void onFileChange(final File file) {\n-                    try {\n-                        LOG.trace(\"{} has changed. Reloading form attributes customization configuration.\",\n-                                CUSTOM_FORM_ATTRIBUTES_FILE);\n-                        customFormAttributes = MAPPER.readValue(FileUtils.openInputStream(file),\n-                                new TypeReference<HashMap<String, CustomAttributesInfo>>() {\n-                        });\n-                    } catch (IOException e) {\n-                        e.printStackTrace(System.err);\n-                    }\n-                }\n-\n-                @Override\n-                public void onFileCreate(final File file) {\n-                    try {\n-                        LOG.trace(\"{} has been created. Loading form attributes customization configuration.\",\n-                                CUSTOM_FORM_ATTRIBUTES_FILE);\n-                        customFormAttributes = MAPPER.readValue(FileUtils.openInputStream(file),\n-                                new TypeReference<HashMap<String, CustomAttributesInfo>>() {\n-                        });\n-                    } catch (IOException e) {\n-                        e.printStackTrace(System.err);\n-                    }\n-                }\n-\n-                @Override\n-                public void onFileDelete(final File file) {\n-                    LOG.trace(\"{} has been deleted. Resetting form attributes customization configuration.\",\n-                            CUSTOM_FORM_ATTRIBUTES_FILE);\n-                    customFormAttributes = null;\n-                }\n-            };\n-\n-            observer.addListener(listener);\n-            monitor.addObserver(observer);\n-            monitor.start();\n-        } catch (Exception e) {\n-            throw new WicketRuntimeException(\"Could not read \" + CUSTOM_FORM_ATTRIBUTES_FILE, e);\n-        }\n-\n-        // read customTemplate.json\n-        try (InputStream is = getClass().getResourceAsStream(\"/\" + CUSTOM_TEMPLATE_FILE)) {\n-            customTemplate = MAPPER.readValue(is, CustomTemplateInfo.class);\n-            enduserDir = new File(props.getProperty(\"enduser.directory\"));\n-            boolean existsEnduserDir = enduserDir.exists() && enduserDir.canRead() && enduserDir.isDirectory();\n-            if (existsEnduserDir) {\n-                File customTemplateFile = FileUtils.getFile(enduserDir, CUSTOM_TEMPLATE_FILE);\n-                if (customTemplateFile.exists()\n-                        && customTemplateFile.canRead()\n-                        && customTemplateFile.isFile()) {\n-                    customTemplate = MAPPER.readValue(FileUtils.openInputStream(customTemplateFile),\n-                            CustomTemplateInfo.class);\n-                }\n-            }\n-            FileAlterationObserver observer = existsEnduserDir\n-                    ? new FileAlterationObserver(enduserDir,\n-                            pathname -> StringUtils.contains(pathname.getPath(), CUSTOM_TEMPLATE_FILE))\n-                    : new FileAlterationObserver(getClass().getResource(\"/\" + CUSTOM_TEMPLATE_FILE).getFile(),\n-                            pathname -> StringUtils.contains(pathname.getPath(), CUSTOM_TEMPLATE_FILE));\n-\n-            FileAlterationMonitor monitor = new FileAlterationMonitor(5000);\n-\n-            FileAlterationListener listener = new FileAlterationListenerAdaptor() {\n-\n-                @Override\n-                public void onFileChange(final File file) {\n-                    try {\n-                        LOG.trace(\"{} has changed. Reloading app customization configuration.\",\n-                                CUSTOM_TEMPLATE_FILE);\n-                        customTemplate = MAPPER.readValue(FileUtils.openInputStream(file),\n-                                CustomTemplateInfo.class);\n-                    } catch (IOException e) {\n-                        e.printStackTrace(System.err);\n-                    }\n-                }\n-\n-                @Override\n-                public void onFileCreate(final File file) {\n-                    try {\n-                        LOG.trace(\"{} has been created. Loading app customization configuration.\",\n-                                CUSTOM_TEMPLATE_FILE);\n-                        customTemplate = MAPPER.readValue(FileUtils.openInputStream(file),\n-                                CustomTemplateInfo.class);\n-                    } catch (IOException e) {\n-                        e.printStackTrace(System.err);\n-                    }\n-                }\n-\n-                @Override\n-                public void onFileDelete(final File file) {\n-                    LOG.trace(\"{} has been deleted. Resetting app customization configuration.\",\n-                            CUSTOM_TEMPLATE_FILE);\n-                    customTemplate = null;\n-                }\n-            };\n-\n-            observer.addListener(listener);\n-            monitor.addObserver(observer);\n-            monitor.start();\n-        } catch (Exception e) {\n-            throw new WicketRuntimeException(\"Could not read \" + CUSTOM_TEMPLATE_FILE, e);\n-        }\n-\n-        // mount resources\n-        ClassPathScanImplementationLookup lookup = (ClassPathScanImplementationLookup) getServletContext().\n-                getAttribute(EnduserInitializer.CLASSPATH_LOOKUP);\n-        for (Class<? extends AbstractResource> resource : lookup.getResources()) {\n-            Resource annotation = resource.getAnnotation(Resource.class);\n-            if (annotation == null) {\n-                LOG.debug(\"No @Resource annotation found on {}, ignoring\", resource.getName());\n-            } else {\n-                try {\n-                    AbstractResource instance = resource.getDeclaredConstructor().newInstance();\n-\n-                    mountResource(annotation.path(), new ResourceReference(annotation.key()) {\n-\n-                        private static final long serialVersionUID = -128426276529456602L;\n-\n-                        @Override\n-                        public IResource getResource() {\n-                            return instance;\n-                        }\n-                    });\n-                } catch (Exception e) {\n-                    LOG.error(\"Could not instantiate {}\", resource.getName(), e);\n-                }\n-            }\n-        }\n-        //mount captcha resource only if captcha is enabled\n-        if (captchaEnabled) {\n-            mountResource(\"/api/captcha\", new ResourceReference(\"captcha\") {\n-\n-                private static final long serialVersionUID = -128426276529456602L;\n-\n-                @Override\n-                public IResource getResource() {\n-                    return new CaptchaResource();\n-                }\n-            });\n-        }\n+    protected SpringApplicationBuilder configure(final SpringApplicationBuilder builder) {\n+        builder.properties(WebSocketWicketWebInitializerAutoConfiguration.REGISTER_SERVER_ENDPOINT_ENABLED + \"=false\");\n+        return super.configure(builder);\n     }\n \n     @Override\n-    public Class<? extends Page> getHomePage() {\n-        return HomePage.class;\n-    }\n-\n-    @Override\n-    public Session newSession(final Request request, final Response response) {\n-        return new SyncopeEnduserSession(request);\n-    }\n-\n-    public String getDomain() {\n-        return domain;\n-    }\n-\n-    public String getAdminUser() {\n-        return adminUser;\n-    }\n-\n-    public String getAnonymousUser() {\n-        return anonymousUser;\n-    }\n-\n-    public String getAnonymousKey() {\n-        return anonymousKey;\n-    }\n-\n-    public SyncopeClientFactoryBean getClientFactory() {\n-        return clientFactory;\n-    }\n-\n-    public boolean isCaptchaEnabled() {\n-        return captchaEnabled;\n-    }\n-\n-    public boolean isXsrfEnabled() {\n-        return xsrfEnabled;\n-    }\n-\n-    public Integer getMaxUploadFileSizeMB() {\n-        return maxUploadFileSizeMB;\n-    }\n-\n-    public Map<String, CustomAttributesInfo> getCustomFormAttributes() {\n-        return customFormAttributes;\n-    }\n-\n-    public void setCustomFormAttributes(final Map<String, CustomAttributesInfo> customFormAttributes) {\n-        this.customFormAttributes.clear();\n-        this.customFormAttributes.putAll(customFormAttributes);\n-    }\n-\n-    public void setCustomTemplate(final CustomTemplateInfo customTemplate) {\n-        this.customTemplate = customTemplate;\n+    public void addViewControllers(final ViewControllerRegistry registry) {\n+        registry.addViewController(\"/app/\").setViewName(\"forward:/app/index.html\");\n     }\n \n-    public CustomTemplateInfo getCustomTemplate() {\n-        return customTemplate;\n+    @Bean\n+    public ClassPathScanImplementationLookup classPathScanImplementationLookup() {\n+        ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();\n+        lookup.load();\n+        return lookup;\n     }\n }"},{"sha":"1e7977b0a9fb94fe3b3087a296b6cf82c20ca907","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserSession.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -74,10 +74,10 @@ public SyncopeEnduserSession(final Request request) {\n         // define cookie utility to manage application cookies\n         cookieUtils = new CookieUtils();\n \n-        anonymousClient = SyncopeEnduserApplication.get().getClientFactory().\n+        anonymousClient = SyncopeWebApplication.get().getClientFactory().\n                 create(new AnonymousAuthenticationHandler(\n-                        SyncopeEnduserApplication.get().getAnonymousUser(),\n-                        SyncopeEnduserApplication.get().getAnonymousKey()));\n+                        SyncopeWebApplication.get().getAnonymousUser(),\n+                        SyncopeWebApplication.get().getAnonymousKey()));\n         platformInfo = anonymousClient.getService(SyncopeService.class).platform();\n \n         datePlainSchemas = anonymousClient.getService(SchemaService.class).\n@@ -106,8 +106,8 @@ public boolean authenticate(final String username, final String password) {\n         boolean authenticated = false;\n \n         try {\n-            client = SyncopeEnduserApplication.get().getClientFactory().\n-                    setDomain(SyncopeEnduserApplication.get().getDomain()).\n+            client = SyncopeWebApplication.get().getClientFactory().\n+                    setDomain(SyncopeWebApplication.get().getDomain()).\n                     create(username, password);\n \n             afterAuthentication(username);\n@@ -124,8 +124,8 @@ public boolean authenticate(final String jwt) {\n         boolean authenticated = false;\n \n         try {\n-            client = SyncopeEnduserApplication.get().getClientFactory().\n-                    setDomain(SyncopeEnduserApplication.get().getDomain()).create(jwt);\n+            client = SyncopeWebApplication.get().getClientFactory().\n+                    setDomain(SyncopeWebApplication.get().getDomain()).create(jwt);\n \n             afterAuthentication(null);\n "},{"sha":"f6ba9ad398d148858999512fb5c56301dd150adb","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeWebApplication.java","status":"added","additions":368,"deletions":0,"changes":368,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeWebApplication.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,368 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser;\n+\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.giffing.wicket.spring.boot.starter.app.WicketBootSecuredWebApplication;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.apache.syncope.client.enduser.pages.HomePage;\n+import java.util.Properties;\n+import org.apache.commons.io.FileUtils;\n+import org.apache.commons.io.monitor.FileAlterationListener;\n+import org.apache.commons.io.monitor.FileAlterationListenerAdaptor;\n+import org.apache.commons.io.monitor.FileAlterationMonitor;\n+import org.apache.commons.io.monitor.FileAlterationObserver;\n+import org.apache.commons.lang3.BooleanUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.enduser.annotations.Resource;\n+import org.apache.syncope.client.enduser.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.client.enduser.model.CustomAttributesInfo;\n+import org.apache.syncope.client.enduser.model.CustomTemplateInfo;\n+import org.apache.syncope.client.enduser.resources.CaptchaResource;\n+import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n+import org.apache.syncope.common.lib.PropertyUtils;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.wicket.Page;\n+import org.apache.wicket.Session;\n+import org.apache.wicket.WicketRuntimeException;\n+import org.apache.wicket.protocol.http.WebApplication;\n+import org.apache.wicket.request.Request;\n+import org.apache.wicket.request.Response;\n+import org.apache.wicket.request.resource.AbstractResource;\n+import org.apache.wicket.request.resource.IResource;\n+import org.apache.wicket.request.resource.ResourceReference;\n+import org.apache.wicket.util.lang.Args;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class SyncopeWebApplication extends WicketBootSecuredWebApplication {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(SyncopeWebApplication.class);\n+\n+    private static final String ENDUSER_PROPERTIES = \"enduser.properties\";\n+\n+    private static final String CUSTOM_FORM_ATTRIBUTES_FILE = \"customFormAttributes.json\";\n+\n+    private static final String CUSTOM_TEMPLATE_FILE = \"customTemplate.json\";\n+\n+    public static SyncopeWebApplication get() {\n+        return (SyncopeWebApplication) WebApplication.get();\n+    }\n+\n+    @Autowired\n+    private ClassPathScanImplementationLookup lookup;\n+\n+    private String domain;\n+\n+    private String adminUser;\n+\n+    private String anonymousUser;\n+\n+    private String anonymousKey;\n+\n+    private boolean captchaEnabled;\n+\n+    private boolean xsrfEnabled;\n+\n+    private Integer maxUploadFileSizeMB;\n+\n+    private SyncopeClientFactoryBean clientFactory;\n+\n+    private Map<String, CustomAttributesInfo> customFormAttributes;\n+\n+    private CustomTemplateInfo customTemplate;\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n+\n+    @Override\n+    protected void init() {\n+        super.init();\n+\n+        // read enduser.properties\n+        Properties props = PropertyUtils.read(getClass(), ENDUSER_PROPERTIES, \"enduser.directory\");\n+\n+        domain = props.getProperty(\"domain\", SyncopeConstants.MASTER_DOMAIN);\n+        adminUser = props.getProperty(\"adminUser\");\n+        Args.notNull(adminUser, \"<adminUser>\");\n+        anonymousUser = props.getProperty(\"anonymousUser\");\n+        Args.notNull(anonymousUser, \"<anonymousUser>\");\n+        anonymousKey = props.getProperty(\"anonymousKey\");\n+        Args.notNull(anonymousKey, \"<anonymousKey>\");\n+\n+        captchaEnabled = Boolean.parseBoolean(props.getProperty(\"captcha\"));\n+        Args.notNull(captchaEnabled, \"<captcha>\");\n+\n+        xsrfEnabled = Boolean.parseBoolean(props.getProperty(\"xsrf\"));\n+        Args.notNull(xsrfEnabled, \"<xsrf>\");\n+\n+        String scheme = props.getProperty(\"scheme\");\n+        Args.notNull(scheme, \"<scheme>\");\n+        String host = props.getProperty(\"host\");\n+        Args.notNull(host, \"<host>\");\n+        String port = props.getProperty(\"port\");\n+        Args.notNull(port, \"<port>\");\n+        String rootPath = props.getProperty(\"rootPath\");\n+        Args.notNull(rootPath, \"<rootPath>\");\n+        String useGZIPCompression = props.getProperty(\"useGZIPCompression\");\n+        Args.notNull(useGZIPCompression, \"<useGZIPCompression>\");\n+        maxUploadFileSizeMB = props.getProperty(\"maxUploadFileSizeMB\") == null\n+                ? null\n+                : Integer.valueOf(props.getProperty(\"maxUploadFileSizeMB\"));\n+\n+        clientFactory = new SyncopeClientFactoryBean().\n+                setAddress(scheme + \"://\" + host + \":\" + port + StringUtils.prependIfMissing(rootPath, \"/\")).\n+                setContentType(SyncopeClientFactoryBean.ContentType.JSON).\n+                setUseCompression(BooleanUtils.toBoolean(useGZIPCompression));\n+\n+        // read customFormAttributes.json\n+        File enduserDir;\n+        try (InputStream is = getClass().getResourceAsStream(\"/\" + CUSTOM_FORM_ATTRIBUTES_FILE)) {\n+            customFormAttributes = MAPPER.readValue(is,\n+                    new TypeReference<HashMap<String, CustomAttributesInfo>>() {\n+            });\n+            enduserDir = new File(props.getProperty(\"enduser.directory\"));\n+            boolean existsEnduserDir = enduserDir.exists() && enduserDir.canRead() && enduserDir.isDirectory();\n+            if (existsEnduserDir) {\n+                File customFormAttributesFile = FileUtils.getFile(enduserDir, CUSTOM_FORM_ATTRIBUTES_FILE);\n+                if (customFormAttributesFile.exists()\n+                        && customFormAttributesFile.canRead()\n+                        && customFormAttributesFile.isFile()) {\n+                    customFormAttributes = MAPPER.readValue(FileUtils.openInputStream(customFormAttributesFile),\n+                            new TypeReference<HashMap<String, CustomAttributesInfo>>() {\n+                    });\n+                }\n+            }\n+            FileAlterationObserver observer = existsEnduserDir\n+                    ? new FileAlterationObserver(enduserDir,\n+                            pathname -> StringUtils.contains(pathname.getPath(), CUSTOM_FORM_ATTRIBUTES_FILE))\n+                    : new FileAlterationObserver(getClass().getResource(\"/\" + CUSTOM_FORM_ATTRIBUTES_FILE).getFile(),\n+                            pathname -> StringUtils.contains(pathname.getPath(), CUSTOM_FORM_ATTRIBUTES_FILE));\n+\n+            FileAlterationMonitor monitor = new FileAlterationMonitor(5000);\n+\n+            FileAlterationListener listener = new FileAlterationListenerAdaptor() {\n+\n+                @Override\n+                public void onFileChange(final File file) {\n+                    try {\n+                        LOG.trace(\"{} has changed. Reloading form attributes customization configuration.\",\n+                                CUSTOM_FORM_ATTRIBUTES_FILE);\n+                        customFormAttributes = MAPPER.readValue(FileUtils.openInputStream(file),\n+                                new TypeReference<HashMap<String, CustomAttributesInfo>>() {\n+                        });\n+                    } catch (IOException e) {\n+                        e.printStackTrace(System.err);\n+                    }\n+                }\n+\n+                @Override\n+                public void onFileCreate(final File file) {\n+                    try {\n+                        LOG.trace(\"{} has been created. Loading form attributes customization configuration.\",\n+                                CUSTOM_FORM_ATTRIBUTES_FILE);\n+                        customFormAttributes = MAPPER.readValue(FileUtils.openInputStream(file),\n+                                new TypeReference<HashMap<String, CustomAttributesInfo>>() {\n+                        });\n+                    } catch (IOException e) {\n+                        e.printStackTrace(System.err);\n+                    }\n+                }\n+\n+                @Override\n+                public void onFileDelete(final File file) {\n+                    LOG.trace(\"{} has been deleted. Resetting form attributes customization configuration.\",\n+                            CUSTOM_FORM_ATTRIBUTES_FILE);\n+                    customFormAttributes = null;\n+                }\n+            };\n+\n+            observer.addListener(listener);\n+            monitor.addObserver(observer);\n+            monitor.start();\n+        } catch (Exception e) {\n+            throw new WicketRuntimeException(\"Could not read \" + CUSTOM_FORM_ATTRIBUTES_FILE, e);\n+        }\n+\n+        // read customTemplate.json\n+        try (InputStream is = getClass().getResourceAsStream(\"/\" + CUSTOM_TEMPLATE_FILE)) {\n+            customTemplate = MAPPER.readValue(is, CustomTemplateInfo.class);\n+            enduserDir = new File(props.getProperty(\"enduser.directory\"));\n+            boolean existsEnduserDir = enduserDir.exists() && enduserDir.canRead() && enduserDir.isDirectory();\n+            if (existsEnduserDir) {\n+                File customTemplateFile = FileUtils.getFile(enduserDir, CUSTOM_TEMPLATE_FILE);\n+                if (customTemplateFile.exists()\n+                        && customTemplateFile.canRead()\n+                        && customTemplateFile.isFile()) {\n+                    customTemplate = MAPPER.readValue(FileUtils.openInputStream(customTemplateFile),\n+                            CustomTemplateInfo.class);\n+                }\n+            }\n+            FileAlterationObserver observer = existsEnduserDir\n+                    ? new FileAlterationObserver(enduserDir,\n+                            pathname -> StringUtils.contains(pathname.getPath(), CUSTOM_TEMPLATE_FILE))\n+                    : new FileAlterationObserver(getClass().getResource(\"/\" + CUSTOM_TEMPLATE_FILE).getFile(),\n+                            pathname -> StringUtils.contains(pathname.getPath(), CUSTOM_TEMPLATE_FILE));\n+\n+            FileAlterationMonitor monitor = new FileAlterationMonitor(5000);\n+\n+            FileAlterationListener listener = new FileAlterationListenerAdaptor() {\n+\n+                @Override\n+                public void onFileChange(final File file) {\n+                    try {\n+                        LOG.trace(\"{} has changed. Reloading app customization configuration.\",\n+                                CUSTOM_TEMPLATE_FILE);\n+                        customTemplate = MAPPER.readValue(FileUtils.openInputStream(file),\n+                                CustomTemplateInfo.class);\n+                    } catch (IOException e) {\n+                        e.printStackTrace(System.err);\n+                    }\n+                }\n+\n+                @Override\n+                public void onFileCreate(final File file) {\n+                    try {\n+                        LOG.trace(\"{} has been created. Loading app customization configuration.\",\n+                                CUSTOM_TEMPLATE_FILE);\n+                        customTemplate = MAPPER.readValue(FileUtils.openInputStream(file),\n+                                CustomTemplateInfo.class);\n+                    } catch (IOException e) {\n+                        e.printStackTrace(System.err);\n+                    }\n+                }\n+\n+                @Override\n+                public void onFileDelete(final File file) {\n+                    LOG.trace(\"{} has been deleted. Resetting app customization configuration.\",\n+                            CUSTOM_TEMPLATE_FILE);\n+                    customTemplate = null;\n+                }\n+            };\n+\n+            observer.addListener(listener);\n+            monitor.addObserver(observer);\n+            monitor.start();\n+        } catch (Exception e) {\n+            throw new WicketRuntimeException(\"Could not read \" + CUSTOM_TEMPLATE_FILE, e);\n+        }\n+\n+        // mount resources\n+        for (Class<? extends AbstractResource> resource : lookup.getResources()) {\n+            Resource annotation = resource.getAnnotation(Resource.class);\n+            if (annotation == null) {\n+                LOG.debug(\"No @Resource annotation found on {}, ignoring\", resource.getName());\n+            } else {\n+                try {\n+                    AbstractResource instance = resource.getDeclaredConstructor().newInstance();\n+\n+                    mountResource(annotation.path(), new ResourceReference(annotation.key()) {\n+\n+                        private static final long serialVersionUID = -128426276529456602L;\n+\n+                        @Override\n+                        public IResource getResource() {\n+                            return instance;\n+                        }\n+                    });\n+                } catch (Exception e) {\n+                    LOG.error(\"Could not instantiate {}\", resource.getName(), e);\n+                }\n+            }\n+        }\n+        //mount captcha resource only if captcha is enabled\n+        if (captchaEnabled) {\n+            mountResource(\"/api/captcha\", new ResourceReference(\"captcha\") {\n+\n+                private static final long serialVersionUID = -128426276529456602L;\n+\n+                @Override\n+                public IResource getResource() {\n+                    return new CaptchaResource();\n+                }\n+            });\n+        }\n+    }\n+\n+    @Override\n+    public Class<? extends Page> getHomePage() {\n+        return HomePage.class;\n+    }\n+\n+    @Override\n+    public Session newSession(final Request request, final Response response) {\n+        return new SyncopeEnduserSession(request);\n+    }\n+\n+    public String getDomain() {\n+        return domain;\n+    }\n+\n+    public String getAdminUser() {\n+        return adminUser;\n+    }\n+\n+    public String getAnonymousUser() {\n+        return anonymousUser;\n+    }\n+\n+    public String getAnonymousKey() {\n+        return anonymousKey;\n+    }\n+\n+    public SyncopeClientFactoryBean getClientFactory() {\n+        return clientFactory;\n+    }\n+\n+    public boolean isCaptchaEnabled() {\n+        return captchaEnabled;\n+    }\n+\n+    public boolean isXsrfEnabled() {\n+        return xsrfEnabled;\n+    }\n+\n+    public Integer getMaxUploadFileSizeMB() {\n+        return maxUploadFileSizeMB;\n+    }\n+\n+    public Map<String, CustomAttributesInfo> getCustomFormAttributes() {\n+        return customFormAttributes;\n+    }\n+\n+    public void setCustomFormAttributes(final Map<String, CustomAttributesInfo> customFormAttributes) {\n+        this.customFormAttributes.clear();\n+        this.customFormAttributes.putAll(customFormAttributes);\n+    }\n+\n+    public void setCustomTemplate(final CustomTemplateInfo customTemplate) {\n+        this.customTemplate = customTemplate;\n+    }\n+\n+    public CustomTemplateInfo getCustomTemplate() {\n+        return customTemplate;\n+    }\n+}"},{"sha":"4f60fc9b5dcbfe58fe5965292380cfe8adf38402","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/adapters/PlatformInfoAdapter.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FPlatformInfoAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FPlatformInfoAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FPlatformInfoAdapter.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.client.enduser.adapters;\n \n import java.util.Map;\n-import org.apache.syncope.client.enduser.SyncopeEnduserApplication;\n+import org.apache.syncope.client.enduser.SyncopeWebApplication;\n import org.apache.syncope.client.enduser.model.CustomAttributesInfo;\n import org.apache.syncope.client.enduser.model.PlatformInfoRequest;\n import org.apache.syncope.common.lib.info.PlatformInfo;\n@@ -33,9 +33,9 @@ public static PlatformInfoRequest toPlatformInfoRequest(final PlatformInfo platf\n         request.setSelfRegAllowed(platformInfo.isSelfRegAllowed());\n         request.setPwdResetRequiringSecurityQuestions(platformInfo.isPwdResetRequiringSecurityQuestions());\n         request.setVersion(platformInfo.getVersion());\n-        request.setCaptchaEnabled(SyncopeEnduserApplication.get().isCaptchaEnabled());\n-        if (SyncopeEnduserApplication.get().getMaxUploadFileSizeMB() != null) {\n-            request.setMaxUploadFileSizeMB(SyncopeEnduserApplication.get().getMaxUploadFileSizeMB());\n+        request.setCaptchaEnabled(SyncopeWebApplication.get().isCaptchaEnabled());\n+        if (SyncopeWebApplication.get().getMaxUploadFileSizeMB() != null) {\n+            request.setMaxUploadFileSizeMB(SyncopeWebApplication.get().getMaxUploadFileSizeMB());\n         }\n         request.setCustomFormAttributes(customFormAttributes);\n "},{"sha":"6295cd2d05eea1b686ef3b6e057123729d4821e8","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/init/EnduserInitializer.java","status":"removed","additions":0,"deletions":51,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Finit%2FEnduserInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Finit%2FEnduserInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Finit%2FEnduserInitializer.java?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,51 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.enduser.init;\n-\n-import javax.servlet.ServletContextEvent;\n-import javax.servlet.ServletContextListener;\n-import javax.servlet.annotation.WebListener;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-/**\n- * Take care of all initializations needed by Syncope Enduser to run up and safe.\n- */\n-@WebListener\n-public class EnduserInitializer implements ServletContextListener {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(EnduserInitializer.class);\n-\n-    public static final String CLASSPATH_LOOKUP = \"CLASSPATH_LOOKUP\";\n-\n-    @Override\n-    public void contextInitialized(final ServletContextEvent sce) {\n-        ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();\n-        lookup.load();\n-        sce.getServletContext().setAttribute(CLASSPATH_LOOKUP, lookup);\n-\n-        LOG.debug(\"Initialization completed\");\n-    }\n-\n-    @Override\n-    public void contextDestroyed(final ServletContextEvent sce) {\n-        // nothing to do\n-    }\n-\n-}"},{"sha":"c94877824cd48547a02fa03413492638f92bec9a","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/BaseResource.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FBaseResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FBaseResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FBaseResource.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -22,7 +22,7 @@\n import com.fasterxml.jackson.databind.ObjectMapper;\n import javax.servlet.http.HttpServletRequest;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.enduser.SyncopeEnduserApplication;\n+import org.apache.syncope.client.enduser.SyncopeWebApplication;\n import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.wicket.request.resource.AbstractResource;\n@@ -40,15 +40,15 @@ public abstract class BaseResource extends AbstractResource {\n \n     protected final boolean xsrfCheck(final HttpServletRequest request) {\n         final String requestXSRFHeader = request.getHeader(SyncopeEnduserConstants.XSRF_HEADER_NAME);\n-        return SyncopeEnduserApplication.get().isXsrfEnabled()\n+        return SyncopeWebApplication.get().isXsrfEnabled()\n                 ? StringUtils.isNotBlank(requestXSRFHeader)\n                 && SyncopeEnduserSession.get().getCookieUtils().\n                         getCookie(SyncopeEnduserConstants.XSRF_COOKIE).getValue().equals(requestXSRFHeader)\n                 : true;\n     }\n \n     protected final boolean captchaCheck(final String enteredCaptcha, final Object currentCaptcha) {\n-        return SyncopeEnduserApplication.get().isCaptchaEnabled()\n+        return SyncopeWebApplication.get().isCaptchaEnabled()\n                 ? StringUtils.isBlank(currentCaptcha.toString()) || enteredCaptcha == null\n                 ? false\n                 : enteredCaptcha.equals(currentCaptcha.toString())"},{"sha":"ec62a08c1aa6e9d71366af193426b33f6e3e52a8","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/DynamicTemplateResource.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FDynamicTemplateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FDynamicTemplateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FDynamicTemplateResource.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -25,7 +25,7 @@\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.enduser.SyncopeEnduserApplication;\n+import org.apache.syncope.client.enduser.SyncopeWebApplication;\n import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.annotations.Resource;\n@@ -60,7 +60,7 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n \n                 @Override\n                 public void writeData(final IResource.Attributes attributes) throws IOException {\n-                    CustomTemplateInfo customTemplate = SyncopeEnduserApplication.get().getCustomTemplate();\n+                    CustomTemplateInfo customTemplate = SyncopeWebApplication.get().getCustomTemplate();\n                     attributes.getResponse().write(MAPPER.writeValueAsString(customTemplate));\n                 }\n             });"},{"sha":"e49581617f059e10114eaa4994b4870c2a2ab0e4","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/ExternalResourceResource.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FExternalResourceResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FExternalResourceResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FExternalResourceResource.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -25,7 +25,7 @@\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.syncope.client.enduser.SyncopeEnduserApplication;\n+import org.apache.syncope.client.enduser.SyncopeWebApplication;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.annotations.Resource;\n import org.apache.syncope.client.enduser.model.CustomTemplateInfo;\n@@ -53,7 +53,7 @@ protected AbstractResource.ResourceResponse newResourceResponse(final IResource.\n             }\n \n             CustomTemplateInfo customTemplate =\n-                    SyncopeEnduserApplication.get().getCustomTemplate();\n+                    SyncopeWebApplication.get().getCustomTemplate();\n             final List<String> resources = customTemplate.getWizard().getSteps().containsKey(\"groups\")\n                     ? SyncopeEnduserSession.get().\n                             getService(SyncopeService.class).platform().getResources()"},{"sha":"90019130b6b12f91faa2cffd3820f8fb164f68cb","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/GroupResource.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FGroupResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FGroupResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FGroupResource.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -29,7 +29,7 @@\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.syncope.client.enduser.SyncopeEnduserApplication;\n+import org.apache.syncope.client.enduser.SyncopeWebApplication;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.annotations.Resource;\n import org.apache.syncope.client.enduser.model.CustomTemplateInfo;\n@@ -59,7 +59,7 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n             }\n \n             CustomTemplateInfo customTemplate =\n-                    SyncopeEnduserApplication.get().getCustomTemplate();\n+                    SyncopeWebApplication.get().getCustomTemplate();\n             final GroupResponse groupResponse = new GroupResponse();\n             if (customTemplate.getWizard().getSteps().containsKey(\"groups\")) {\n                 String realm = URLDecoder.decode(attributes.getParameters().get(\"realm\")."},{"sha":"12bd30f8a58d36ffc972bb22aa247afa86491c7d","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/InfoResource.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FInfoResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FInfoResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FInfoResource.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -25,7 +25,7 @@\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.enduser.SyncopeEnduserApplication;\n+import org.apache.syncope.client.enduser.SyncopeWebApplication;\n import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.adapters.PlatformInfoAdapter;\n@@ -63,7 +63,7 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n                 @Override\n                 public void writeData(final IResource.Attributes attributes) throws IOException {\n                     Map<String, CustomAttributesInfo> customFormAttributes =\n-                            SyncopeEnduserApplication.get().getCustomFormAttributes();\n+                            SyncopeWebApplication.get().getCustomFormAttributes();\n                     attributes.getResponse().write(\n                             MAPPER.writeValueAsString(\n                                     PlatformInfoAdapter.toPlatformInfoRequest("},{"sha":"8e4086e62efbd522fd03c3654e586e3293409b55","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/LoginResource.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FLoginResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FLoginResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FLoginResource.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -24,7 +24,7 @@\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.enduser.SyncopeEnduserApplication;\n+import org.apache.syncope.client.enduser.SyncopeWebApplication;\n import org.apache.syncope.client.enduser.model.Credentials;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.annotations.Resource;\n@@ -61,7 +61,7 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n                 LOG.error(\"Could not read credentials from request: username is blank!\");\n                 response.setError(Response.Status.BAD_REQUEST.getStatusCode(),\n                         \"ErrorMessage{{ Could not read credentials from request: username is blank! }}\");\n-            } else if (!SyncopeEnduserApplication.get().getAdminUser().equalsIgnoreCase(username)\n+            } else if (!SyncopeWebApplication.get().getAdminUser().equalsIgnoreCase(username)\n                     && SyncopeEnduserSession.get().authenticate(username, password)) {\n                 // user has been authenticated successfully\n                 response.setTextEncoding(StandardCharsets.UTF_8.name());"},{"sha":"8ebee911a2660dcede6b5fa9587675d6a032071b","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SchemaResource.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -29,7 +29,7 @@\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.enduser.SyncopeEnduserApplication;\n+import org.apache.syncope.client.enduser.SyncopeWebApplication;\n import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.annotations.Resource;\n@@ -90,9 +90,9 @@ protected AbstractResource.ResourceResponse newResourceResponse(final IResource.\n \n             // USER from customization, if empty or null ignore it, use it to filter attributes otherwise\n             Map<String, CustomAttributesInfo> customFormAttributes =\n-                    SyncopeEnduserApplication.get().getCustomFormAttributes();\n+                    SyncopeWebApplication.get().getCustomFormAttributes();\n             CustomTemplateInfo customTemplate =\n-                    SyncopeEnduserApplication.get().getCustomTemplate();\n+                    SyncopeWebApplication.get().getCustomTemplate();\n \n             SchemaService schemaService = SyncopeEnduserSession.get().getService(SchemaService.class);\n             final List<SchemaTO> plainSchemas = classes.isEmpty()"},{"sha":"4e8aea65343156dec3b17eb6517f6de1e6bd2ad0","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfCreateResource.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -24,7 +24,7 @@\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.SerializationUtils;\n-import org.apache.syncope.client.enduser.SyncopeEnduserApplication;\n+import org.apache.syncope.client.enduser.SyncopeWebApplication;\n import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.annotations.Resource;\n@@ -83,7 +83,7 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n \n                 // check if request is compliant with customization form rules\n                 if (Validation.isCompliant(userTO,\n-                        SyncopeEnduserApplication.get().getCustomFormAttributes(), true)) {\n+                        SyncopeWebApplication.get().getCustomFormAttributes(), true)) {\n \n                     // 1. membership attributes management\n                     Set<Attr> membAttrs = new HashSet<>();"},{"sha":"3425ca0f65106a3905aba0ba8ab46d4893ae917e","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfReadResource.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -27,7 +27,7 @@\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.SerializationUtils;\n-import org.apache.syncope.client.enduser.SyncopeEnduserApplication;\n+import org.apache.syncope.client.enduser.SyncopeWebApplication;\n import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.annotations.Resource;\n@@ -97,7 +97,7 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n                 membership.getVirAttrs().clear();\n             }\n             // USER from customization, if empty or null ignore it, use it to filter attributes otherwise\n-            applyFromCustomization(userTO, SyncopeEnduserApplication.get().getCustomFormAttributes());\n+            applyFromCustomization(userTO, SyncopeWebApplication.get().getCustomFormAttributes());\n \n             // 1.1 Date -> millis conversion for PLAIN attributes of USER\n             for (PlainSchemaTO plainSchema : SyncopeEnduserSession.get().getDatePlainSchemas()) {"},{"sha":"897cb25679064fbbfc4f0ee74ac5529a99faa46c","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfUpdateResource.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfUpdateResource.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -25,7 +25,7 @@\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.SerializationUtils;\n-import org.apache.syncope.client.enduser.SyncopeEnduserApplication;\n+import org.apache.syncope.client.enduser.SyncopeWebApplication;\n import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.client.enduser.annotations.Resource;\n@@ -67,7 +67,7 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n \n             UserTO userTO = MAPPER.readValue(request.getReader().readLine(), UserTO.class);\n             Map<String, CustomAttributesInfo> customFormAttributes =\n-                    SyncopeEnduserApplication.get().getCustomFormAttributes();\n+                    SyncopeWebApplication.get().getCustomFormAttributes();\n \n             // check if request is compliant with customization form rules\n             if (Validation.isCompliant(userTO, customFormAttributes, false)) {"},{"sha":"d33e0f65ee311cd77d3b3b2db145327fe68fa656","filename":"client/enduser/src/main/resources/META-INF/web-fragment.xml","status":"removed","additions":0,"deletions":46,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,46 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<web-fragment xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n-              xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-              xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee \n-                                  http://xmlns.jcp.org/xml/ns/javaee/web-fragment_3_1.xsd\"\n-              id=\"${pom.artifactId}\" version=\"3.1\">\n-  \n-  <filter>\n-    <filter-name>SyncopeEnduser</filter-name>\n-    <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>\n-    <init-param>\n-      <param-name>applicationClassName</param-name>\n-      <param-value>org.apache.syncope.client.enduser.SyncopeEnduserApplication</param-value>\n-    </init-param>\n-    <init-param>\n-      <param-name>filterMappingUrlPattern</param-name>\n-      <param-value>/*</param-value>\n-    </init-param>\n-  </filter>\n-  \n-  <filter-mapping>\n-    <filter-name>SyncopeEnduser</filter-name>\n-    <url-pattern>/*</url-pattern>\n-    <dispatcher>REQUEST</dispatcher>\n-    <dispatcher>INCLUDE</dispatcher>\n-  </filter-mapping>\n-  \n-</web-fragment>"},{"sha":"dfd8b8dbde6dbe26297ea1605a40516b05e0f4ea","filename":"client/enduser/src/main/resources/application.properties","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,25 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+spring.application.name=Apache Syncope ${syncope.version} Enduser\n+spring.groovy.template.check-template-location=false\n+spring.main.banner-mode=log\n+\n+spring.http.encoding.charset=UTF-8\n+spring.http.encoding.enabled=true\n+spring.http.encoding.force=true\n+\n+server.servlet.contextPath=/syncope-enduser"},{"sha":"55414fd396090a12dd2094e948f275332a41ae52","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMAnyDirectoryPanelAditionalActionLinksProvider.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAditionalActionLinksProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAditionalActionLinksProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMAnyDirectoryPanelAditionalActionLinksProvider.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -39,6 +39,8 @@\n public class IdMAnyDirectoryPanelAditionalActionLinksProvider\n         implements AnyDirectoryPanelAditionalActionLinksProvider {\n \n+    private static final long serialVersionUID = -1698293704237878993L;\n+\n     @Override\n     public List<Action<UserTO>> get(\n             final UserTO modelObject,"},{"sha":"407aafbae27cea15f9a6cc5d3662a0378d3a15e6","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMExternalResourceProvider.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMExternalResourceProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMExternalResourceProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMExternalResourceProvider.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -25,6 +25,8 @@\n \n public class IdMExternalResourceProvider implements ExternalResourceProvider {\n \n+    private static final long serialVersionUID = 6335503820405008093L;\n+\n     @Override\n     public List<String> get() {\n         return new ResourceRestClient().list().stream().map(EntityTO::getKey).collect(Collectors.toList());"},{"sha":"8c43cae25c8a307d207b9b9294876a62e5c34ab0","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMStatusProvider.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMStatusProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMStatusProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMStatusProvider.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -30,6 +30,8 @@\n \n public class IdMStatusProvider implements StatusProvider {\n \n+    private static final long serialVersionUID = 1875374599950896631L;\n+\n     @Override\n     public List<Triple<ConnObjectTO, ConnObjectWrapper, String>> get(\n             final AnyTO any, final Collection<String> resources) {"},{"sha":"ecc06051c7ba274f9f73c06afa089d57a5996e88","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/commons/IdMVirSchemaDetailsPanelProvider.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMVirSchemaDetailsPanelProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMVirSchemaDetailsPanelProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FIdMVirSchemaDetailsPanelProvider.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -24,6 +24,8 @@\n \n public class IdMVirSchemaDetailsPanelProvider implements VirSchemaDetailsPanelProvider {\n \n+    private static final long serialVersionUID = -173141337550903982L;\n+\n     @Override\n     public Panel get(final String id, final VirSchemaTO schemaTO) {\n         return new VirSchemaDetails(\"details\", schemaTO);"},{"sha":"8eee0c2a620514dcece5e07859478dda1b9cc5ce","filename":"client/idrepo/console/pom.xml","status":"modified","additions":41,"deletions":4,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -45,8 +45,12 @@ under the License.\n     </dependency>\n \n     <dependency>\n-      <groupId>org.springframework</groupId>\n-      <artifactId>spring-context</artifactId>\n+      <groupId>com.giffing.wicket.spring.boot.starter</groupId>\n+      <artifactId>wicket-spring-boot-starter</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-starter-log4j2</artifactId>\n     </dependency>\n       \n     <dependency>\n@@ -147,11 +151,36 @@ under the License.\n       <groupId>org.webjars</groupId>\n       <artifactId>jQuery-slimScroll</artifactId>\n     </dependency>\n-    \n+\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-api</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-api</artifactId>\n+    </dependency>\n     <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n       <artifactId>log4j-core</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>com.lmax</groupId>\n+      <artifactId>disruptor</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>commons-logging</groupId>\n+      <artifactId>commons-logging</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>jcl-over-slf4j</artifactId>\n+    </dependency>\n   </dependencies>\n   \n   <build>\n@@ -181,7 +210,15 @@ under the License.\n           <include>**/*.woff2</include>\n         </includes>\n       </resource>\n-      \n+\n+      <resource>\n+        <directory>${basedir}/../../../src/main/resources</directory>\n+        <filtering>true</filtering>\n+        <includes>\n+          <include>banner.txt</include>\n+        </includes>\n+      </resource>\n+\n       <resource>\n         <directory>${basedir}</directory>\n         <targetPath>META-INF</targetPath>"},{"sha":"14d1d0c152804396f061819398367dccea4289ab","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/BookmarkablePageLinkBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FBookmarkablePageLinkBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FBookmarkablePageLinkBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FBookmarkablePageLinkBuilder.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -33,7 +33,7 @@ public static <T extends BasePage> BookmarkablePageLink<T> build(\n             final String key, final String id, final Class<T> defaultPageClass) {\n \n         @SuppressWarnings(\"unchecked\")\n-        Class<T> pageClass = (Class<T>) SyncopeConsoleApplication.get().getPageClass(key);\n+        Class<T> pageClass = (Class<T>) SyncopeWebApplication.get().getPageClass(key);\n         return new BookmarkablePageLink<>(\n                 id,\n                 pageClass == null ? defaultPageClass : pageClass);"},{"sha":"ee78fc769ddbee7d076f58e356c55b1d1e58cbb3","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleApplication.java","status":"modified","additions":32,"deletions":330,"changes":362,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -18,343 +18,45 @@\n  */\n package org.apache.syncope.client.console;\n \n-import de.agilecoders.wicket.core.Bootstrap;\n-import de.agilecoders.wicket.core.settings.BootstrapSettings;\n-import de.agilecoders.wicket.core.settings.IBootstrapSettings;\n-import de.agilecoders.wicket.core.settings.SingleThemeProvider;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.Enumeration;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Locale;\n-import java.util.Map;\n-import java.util.Properties;\n-import java.util.stream.Collectors;\n-import org.apache.commons.collections4.ListUtils;\n-import org.apache.commons.lang3.BooleanUtils;\n-import org.apache.commons.lang3.ClassUtils;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.annotations.Resource;\n-import org.apache.syncope.client.console.commons.AnyDirectoryPanelAditionalActionLinksProvider;\n-import org.apache.syncope.client.console.commons.AnyWizardBuilderAdditionalSteps;\n-import org.apache.syncope.client.console.commons.Constants;\n+import com.giffing.wicket.spring.boot.starter.web.config.WicketWebInitializerAutoConfig.WebSocketWicketWebInitializerAutoConfiguration;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.console.init.ConsoleInitializer;\n-import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.pages.Dashboard;\n-import org.apache.syncope.client.console.pages.MustChangePassword;\n-import org.apache.syncope.client.console.pages.Login;\n-import org.apache.syncope.client.console.themes.AdminLTE;\n-import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n-import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n-import org.apache.syncope.common.lib.PropertyUtils;\n-import org.apache.syncope.common.lib.SyncopeConstants;\n-import org.apache.syncope.common.lib.to.EntityTO;\n-import org.apache.syncope.common.rest.api.service.DomainService;\n-import org.apache.wicket.Page;\n-import org.apache.wicket.authroles.authentication.AbstractAuthenticatedWebSession;\n-import org.apache.wicket.authroles.authentication.AuthenticatedWebApplication;\n-import org.apache.wicket.authroles.authentication.AuthenticatedWebSession;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.markup.html.WebPage;\n-import org.apache.wicket.protocol.http.CsrfPreventionRequestCycleListener;\n-import org.apache.wicket.protocol.http.WebApplication;\n-import org.apache.wicket.request.resource.AbstractResource;\n-import org.apache.wicket.request.resource.IResource;\n-import org.apache.wicket.request.resource.ResourceReference;\n-import org.apache.wicket.resource.JQueryResourceReference;\n-import org.apache.wicket.util.lang.Args;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.apache.syncope.client.console.commons.ExternalResourceProvider;\n-import org.apache.syncope.client.console.commons.StatusProvider;\n-import org.apache.syncope.client.console.commons.VirSchemaDetailsPanelProvider;\n-\n-public class SyncopeConsoleApplication extends AuthenticatedWebApplication {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(SyncopeConsoleApplication.class);\n-\n-    private static final String CONSOLE_PROPERTIES = \"console.properties\";\n-\n-    public static final List<Locale> SUPPORTED_LOCALES = Collections.unmodifiableList(Arrays.asList(\n-            new Locale[] {\n-                Locale.ENGLISH, Locale.ITALIAN, new Locale(\"pt\", \"BR\"), new Locale(\"ru\"), Locale.JAPANESE\n-            }));\n-\n-    public static SyncopeConsoleApplication get() {\n-        return (SyncopeConsoleApplication) WebApplication.get();\n-    }\n-\n-    private String site;\n-\n-    private String anonymousUser;\n-\n-    private String anonymousKey;\n-\n-    private String reconciliationReportKey;\n-\n-    private String scheme;\n-\n-    private String host;\n-\n-    private String port;\n-\n-    private String rootPath;\n-\n-    private String useGZIPCompression;\n-\n-    private Integer maxUploadFileSizeMB;\n-\n-    private Integer maxWaitTime;\n-\n-    private Integer corePoolSize;\n-\n-    private Integer maxPoolSize;\n-\n-    private Integer queueCapacity;\n-\n-    private List<String> domains;\n-\n-    private ExternalResourceProvider resourceProvider;\n-\n-    private AnyWizardBuilderAdditionalSteps anyWizardBuilderAdditionalSteps;\n-\n-    private StatusProvider statusProvider;\n-\n-    private VirSchemaDetailsPanelProvider virSchemaDetailsPanelProvider;\n-\n-    private AnyDirectoryPanelAditionalActionLinksProvider anyDirectoryPanelAditionalActionLinksProvider;\n-\n-    private Map<String, Class<? extends BasePage>> pageClasses;\n-\n-    @SuppressWarnings(\"unchecked\")\n-    protected void populatePageClasses(final Properties props) {\n-        Enumeration<String> propNames = (Enumeration<String>) props.propertyNames();\n-        while (propNames.hasMoreElements()) {\n-            String name = propNames.nextElement();\n-            if (name.startsWith(\"page.\")) {\n-                try {\n-                    Class<?> clazz = ClassUtils.getClass(props.getProperty(name));\n-                    if (BasePage.class.isAssignableFrom(clazz)) {\n-                        pageClasses.put(\n-                                StringUtils.substringAfter(\"page.\", name), (Class<? extends BasePage>) clazz);\n-                    } else {\n-                        LOG.warn(\"{} does not extend {}, ignoring...\", clazz.getName(), BasePage.class.getName());\n-                    }\n-                } catch (ClassNotFoundException e) {\n-                    LOG.error(\"While looking for class identified by property '{}'\", name, e);\n-                }\n-            }\n-        }\n+import org.apache.syncope.client.console.init.MIMETypesLoader;\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration;\n+import org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration;\n+import org.springframework.boot.builder.SpringApplicationBuilder;\n+import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\n+import org.springframework.context.annotation.Bean;\n+\n+@SpringBootApplication\n+@EnableAutoConfiguration(exclude = {\n+    ErrorMvcAutoConfiguration.class,\n+    HttpMessageConvertersAutoConfiguration.class })\n+public class SyncopeConsoleApplication extends SpringBootServletInitializer {\n+\n+    public static void main(final String[] args) {\n+        SpringApplication.run(SyncopeConsoleApplication.class, args);\n     }\n \n     @Override\n-    protected void init() {\n-        super.init();\n-\n-        // read console.properties\n-        Properties props = PropertyUtils.read(getClass(), CONSOLE_PROPERTIES, \"console.directory\").getLeft();\n-\n-        site = props.getProperty(\"site\");\n-        Args.notNull(site, \"<site>\");\n-        anonymousUser = props.getProperty(\"anonymousUser\");\n-        Args.notNull(anonymousUser, \"<anonymousUser>\");\n-        anonymousKey = props.getProperty(\"anonymousKey\");\n-        Args.notNull(anonymousKey, \"<anonymousKey>\");\n-\n-        scheme = props.getProperty(\"scheme\");\n-        Args.notNull(scheme, \"<scheme>\");\n-        host = props.getProperty(\"host\");\n-        Args.notNull(host, \"<host>\");\n-        port = props.getProperty(\"port\");\n-        Args.notNull(port, \"<port>\");\n-        rootPath = props.getProperty(\"rootPath\");\n-        Args.notNull(rootPath, \"<rootPath>\");\n-        useGZIPCompression = props.getProperty(\"useGZIPCompression\");\n-        Args.notNull(useGZIPCompression, \"<useGZIPCompression>\");\n-        maxUploadFileSizeMB = props.getProperty(\"maxUploadFileSizeMB\") == null\n-                ? null\n-                : Integer.valueOf(props.getProperty(\"maxUploadFileSizeMB\"));\n-\n-        maxWaitTime = Integer.valueOf(props.getProperty(\"maxWaitTimeOnApplyChanges\", \"30\"));\n-\n-        // Resource connections check thread pool size\n-        corePoolSize = Integer.valueOf(props.getProperty(\"executor.corePoolSize\", \"5\"));\n-        maxPoolSize = Integer.valueOf(props.getProperty(\"executor.maxPoolSize\", \"10\"));\n-        queueCapacity = Integer.valueOf(props.getProperty(\"executor.queueCapacity\", \"50\"));\n-\n-        String csrf = props.getProperty(\"csrf\");\n-\n-        // process page properties\n-        pageClasses = new HashMap<>();\n-        populatePageClasses(props);\n-        pageClasses = Collections.unmodifiableMap(pageClasses);\n-\n-        // Application settings\n-        IBootstrapSettings settings = new BootstrapSettings();\n-\n-        // set theme provider\n-        settings.setThemeProvider(new SingleThemeProvider(new AdminLTE()));\n-\n-        // install application settings\n-        Bootstrap.install(this, settings);\n-\n-        getResourceSettings().setUseMinifiedResources(true);\n-\n-        getResourceSettings().setThrowExceptionOnMissingResource(true);\n-\n-        getJavaScriptLibrarySettings().setJQueryReference(JQueryResourceReference.getV2());\n-\n-        getSecuritySettings().setAuthorizationStrategy(new MetaDataRoleAuthorizationStrategy(this));\n-\n-        ClassPathScanImplementationLookup lookup = (ClassPathScanImplementationLookup) getServletContext().\n-                getAttribute(ConsoleInitializer.CLASSPATH_LOOKUP);\n-        resourceProvider = lookup.getResourceProvider();\n-        anyWizardBuilderAdditionalSteps = lookup.getAnyWizardBuilderAdditionalSteps();\n-        statusProvider = lookup.getStatusProvider();\n-        virSchemaDetailsPanelProvider = lookup.getVirSchemaDetailsPanelProvider();\n-        anyDirectoryPanelAditionalActionLinksProvider = lookup.getAnyDirectoryPanelAditionalActionLinksProvider();\n-        lookup.getPageClasses().\n-                forEach(cls -> MetaDataRoleAuthorizationStrategy.authorize(cls, Constants.ROLE_AUTHENTICATED));\n-\n-        getMarkupSettings().setStripWicketTags(true);\n-        getMarkupSettings().setCompressWhitespace(true);\n-\n-        if (BooleanUtils.toBoolean(csrf)) {\n-            getRequestCycleListeners().add(new CsrfPreventionRequestCycleListener());\n-        }\n-        getRequestCycleListeners().add(new SyncopeConsoleRequestCycleListener());\n-\n-        mountPage(\"/login\", getSignInPageClass());\n-\n-        try {\n-            reconciliationReportKey = props.getProperty(\"reconciliationReportKey\");\n-        } catch (NumberFormatException e) {\n-            LOG.error(\"While parsing reconciliationReportKey\", e);\n-        }\n-        Args.notNull(reconciliationReportKey, \"<reconciliationReportKey>\");\n-\n-        for (Class<? extends AbstractResource> resource : lookup.getResources()) {\n-            Resource annotation = resource.getAnnotation(Resource.class);\n-            try {\n-                AbstractResource instance = resource.getDeclaredConstructor().newInstance();\n-\n-                mountResource(annotation.path(), new ResourceReference(annotation.key()) {\n-\n-                    private static final long serialVersionUID = -128426276529456602L;\n-\n-                    @Override\n-                    public IResource getResource() {\n-                        return instance;\n-                    }\n-                });\n-            } catch (Exception e) {\n-                LOG.error(\"Could not instantiate {}\", resource.getName(), e);\n-            }\n-        }\n-\n-        // enable component path\n-        if (getDebugSettings().isAjaxDebugModeEnabled()) {\n-            getDebugSettings().setComponentPathAttributeName(\"syncope-path\");\n-        }\n-    }\n-\n-    @Override\n-    protected Class<? extends AbstractAuthenticatedWebSession> getWebSessionClass() {\n-        return SyncopeConsoleSession.class;\n-    }\n-\n-    @Override\n-    protected Class<? extends WebPage> getSignInPageClass() {\n-        return Login.class;\n-    }\n-\n-    @Override\n-    public Class<? extends Page> getHomePage() {\n-        return AuthenticatedWebSession.get().isSignedIn()\n-                && SyncopeConsoleSession.get().getSelfTO().isMustChangePassword()\n-                ? MustChangePassword.class\n-                : Dashboard.class;\n-    }\n-\n-    public Class<? extends BasePage> getPageClass(final String key) {\n-        return pageClasses.get(key);\n-    }\n-\n-    public String getSite() {\n-        return site;\n-    }\n-\n-    public String getAnonymousUser() {\n-        return anonymousUser;\n-    }\n-\n-    public String getAnonymousKey() {\n-        return anonymousKey;\n-    }\n-\n-    public String getReconciliationReportKey() {\n-        return reconciliationReportKey;\n-    }\n-\n-    public Integer getMaxUploadFileSizeMB() {\n-        return maxUploadFileSizeMB;\n-    }\n-\n-    public Integer getMaxWaitTimeInSeconds() {\n-        return maxWaitTime;\n-    }\n-\n-    public Integer getCorePoolSize() {\n-        return corePoolSize;\n-    }\n-\n-    public Integer getMaxPoolSize() {\n-        return maxPoolSize;\n-    }\n-\n-    public Integer getQueueCapacity() {\n-        return queueCapacity;\n-    }\n-\n-    public SyncopeClientFactoryBean newClientFactory() {\n-        return new SyncopeClientFactoryBean().\n-                setAddress(scheme + \"://\" + host + \":\" + port + StringUtils.prependIfMissing(rootPath, \"/\")).\n-                setUseCompression(BooleanUtils.toBoolean(useGZIPCompression));\n-    }\n-\n-    public List<String> getDomains() {\n-        synchronized (LOG) {\n-            if (domains == null) {\n-                domains = newClientFactory().create(\n-                        new AnonymousAuthenticationHandler(anonymousUser, anonymousKey)).\n-                        getService(DomainService.class).list().stream().map(EntityTO::getKey).\n-                        collect(Collectors.toList());\n-                domains.add(0, SyncopeConstants.MASTER_DOMAIN);\n-                domains = ListUtils.unmodifiableList(domains);\n-            }\n-        }\n-        return domains;\n-    }\n-\n-    public ExternalResourceProvider getResourceProvider() {\n-        return resourceProvider;\n-    }\n-\n-    public AnyWizardBuilderAdditionalSteps getAnyWizardBuilderAdditionalSteps() {\n-        return anyWizardBuilderAdditionalSteps;\n-    }\n-\n-    public StatusProvider getStatusProvider() {\n-        return statusProvider;\n+    protected SpringApplicationBuilder configure(final SpringApplicationBuilder builder) {\n+        builder.properties(WebSocketWicketWebInitializerAutoConfiguration.REGISTER_SERVER_ENDPOINT_ENABLED + \"=false\");\n+        return super.configure(builder);\n     }\n \n-    public VirSchemaDetailsPanelProvider getVirSchemaDetailsPanelProvider() {\n-        return virSchemaDetailsPanelProvider;\n+    @Bean\n+    public ClassPathScanImplementationLookup classPathScanImplementationLookup() {\n+        ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();\n+        lookup.load();\n+        return lookup;\n     }\n \n-    public AnyDirectoryPanelAditionalActionLinksProvider getAnyDirectoryPanelAditionalActionLinksProvider() {\n-        return anyDirectoryPanelAditionalActionLinksProvider;\n+    @Bean\n+    public MIMETypesLoader mimeTypesLoader() {\n+        MIMETypesLoader mimeTypesLoader = new MIMETypesLoader();\n+        mimeTypesLoader.load();\n+        return mimeTypesLoader;\n     }\n }"},{"sha":"7aad67421d12a7163e94940f388f079f43ca5ca5","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleSession.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -94,20 +94,20 @@ public static SyncopeConsoleSession get() {\n     public SyncopeConsoleSession(final Request request) {\n         super(request);\n \n-        clientFactory = SyncopeConsoleApplication.get().newClientFactory();\n+        clientFactory = SyncopeWebApplication.get().newClientFactory();\n         anonymousClient = clientFactory.\n                 create(new AnonymousAuthenticationHandler(\n-                        SyncopeConsoleApplication.get().getAnonymousUser(),\n-                        SyncopeConsoleApplication.get().getAnonymousKey()));\n+                        SyncopeWebApplication.get().getAnonymousUser(),\n+                        SyncopeWebApplication.get().getAnonymousKey()));\n \n         platformInfo = anonymousClient.getService(SyncopeService.class).platform();\n         systemInfo = anonymousClient.getService(SyncopeService.class).system();\n \n         executor = new ThreadPoolTaskExecutor();\n         executor.setWaitForTasksToCompleteOnShutdown(false);\n-        executor.setCorePoolSize(SyncopeConsoleApplication.get().getCorePoolSize());\n-        executor.setMaxPoolSize(SyncopeConsoleApplication.get().getMaxPoolSize());\n-        executor.setQueueCapacity(SyncopeConsoleApplication.get().getQueueCapacity());\n+        executor.setCorePoolSize(SyncopeWebApplication.get().getCorePoolSize());\n+        executor.setMaxPoolSize(SyncopeWebApplication.get().getMaxPoolSize());\n+        executor.setQueueCapacity(SyncopeWebApplication.get().getQueueCapacity());\n         executor.initialize();\n     }\n "},{"sha":"e59aa76ed523fb8fc6b7e31134454e9f493abe0c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SyncopeWebApplication.java","status":"added","additions":363,"deletions":0,"changes":363,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,363 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console;\n+\n+import com.giffing.wicket.spring.boot.starter.app.WicketBootSecuredWebApplication;\n+import de.agilecoders.wicket.core.Bootstrap;\n+import de.agilecoders.wicket.core.settings.BootstrapSettings;\n+import de.agilecoders.wicket.core.settings.IBootstrapSettings;\n+import de.agilecoders.wicket.core.settings.SingleThemeProvider;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.Enumeration;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.stream.Collectors;\n+import org.apache.commons.collections4.ListUtils;\n+import org.apache.commons.lang3.BooleanUtils;\n+import org.apache.commons.lang3.ClassUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.annotations.Resource;\n+import org.apache.syncope.client.console.commons.AnyDirectoryPanelAditionalActionLinksProvider;\n+import org.apache.syncope.client.console.commons.AnyWizardBuilderAdditionalSteps;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.pages.Dashboard;\n+import org.apache.syncope.client.console.pages.MustChangePassword;\n+import org.apache.syncope.client.console.pages.Login;\n+import org.apache.syncope.client.console.themes.AdminLTE;\n+import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n+import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n+import org.apache.syncope.common.lib.PropertyUtils;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.to.EntityTO;\n+import org.apache.syncope.common.rest.api.service.DomainService;\n+import org.apache.wicket.Page;\n+import org.apache.wicket.authroles.authentication.AbstractAuthenticatedWebSession;\n+import org.apache.wicket.authroles.authentication.AuthenticatedWebSession;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.protocol.http.CsrfPreventionRequestCycleListener;\n+import org.apache.wicket.protocol.http.WebApplication;\n+import org.apache.wicket.request.resource.AbstractResource;\n+import org.apache.wicket.request.resource.IResource;\n+import org.apache.wicket.request.resource.ResourceReference;\n+import org.apache.wicket.resource.JQueryResourceReference;\n+import org.apache.wicket.util.lang.Args;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.apache.syncope.client.console.commons.ExternalResourceProvider;\n+import org.apache.syncope.client.console.commons.StatusProvider;\n+import org.apache.syncope.client.console.commons.VirSchemaDetailsPanelProvider;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class SyncopeWebApplication extends WicketBootSecuredWebApplication {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(SyncopeWebApplication.class);\n+\n+    private static final String CONSOLE_PROPERTIES = \"console.properties\";\n+\n+    public static final List<Locale> SUPPORTED_LOCALES = Collections.unmodifiableList(Arrays.asList(\n+            new Locale[] {\n+                Locale.ENGLISH, Locale.ITALIAN, new Locale(\"pt\", \"BR\"), new Locale(\"ru\"), Locale.JAPANESE\n+            }));\n+\n+    public static SyncopeWebApplication get() {\n+        return (SyncopeWebApplication) WebApplication.get();\n+    }\n+\n+    @Autowired\n+    private ClassPathScanImplementationLookup lookup;\n+\n+    private String site;\n+\n+    private String anonymousUser;\n+\n+    private String anonymousKey;\n+\n+    private String reconciliationReportKey;\n+\n+    private String scheme;\n+\n+    private String host;\n+\n+    private String port;\n+\n+    private String rootPath;\n+\n+    private String useGZIPCompression;\n+\n+    private Integer maxUploadFileSizeMB;\n+\n+    private Integer maxWaitTime;\n+\n+    private Integer corePoolSize;\n+\n+    private Integer maxPoolSize;\n+\n+    private Integer queueCapacity;\n+\n+    private List<String> domains;\n+\n+    private ExternalResourceProvider resourceProvider;\n+\n+    private AnyWizardBuilderAdditionalSteps anyWizardBuilderAdditionalSteps;\n+\n+    private StatusProvider statusProvider;\n+\n+    private VirSchemaDetailsPanelProvider virSchemaDetailsPanelProvider;\n+\n+    private AnyDirectoryPanelAditionalActionLinksProvider anyDirectoryPanelAditionalActionLinksProvider;\n+\n+    private Map<String, Class<? extends BasePage>> pageClasses;\n+\n+    @SuppressWarnings(\"unchecked\")\n+    protected void populatePageClasses(final Properties props) {\n+        Enumeration<String> propNames = (Enumeration<String>) props.propertyNames();\n+        while (propNames.hasMoreElements()) {\n+            String name = propNames.nextElement();\n+            if (name.startsWith(\"page.\")) {\n+                try {\n+                    Class<?> clazz = ClassUtils.getClass(props.getProperty(name));\n+                    if (BasePage.class.isAssignableFrom(clazz)) {\n+                        pageClasses.put(\n+                                StringUtils.substringAfter(\"page.\", name), (Class<? extends BasePage>) clazz);\n+                    } else {\n+                        LOG.warn(\"{} does not extend {}, ignoring...\", clazz.getName(), BasePage.class.getName());\n+                    }\n+                } catch (ClassNotFoundException e) {\n+                    LOG.error(\"While looking for class identified by property '{}'\", name, e);\n+                }\n+            }\n+        }\n+    }\n+\n+    @Override\n+    protected void init() {\n+        super.init();\n+\n+        // read console.properties\n+        Properties props = PropertyUtils.read(getClass(), CONSOLE_PROPERTIES, \"console.directory\");\n+\n+        site = props.getProperty(\"site\");\n+        Args.notNull(site, \"<site>\");\n+        anonymousUser = props.getProperty(\"anonymousUser\");\n+        Args.notNull(anonymousUser, \"<anonymousUser>\");\n+        anonymousKey = props.getProperty(\"anonymousKey\");\n+        Args.notNull(anonymousKey, \"<anonymousKey>\");\n+\n+        scheme = props.getProperty(\"scheme\");\n+        Args.notNull(scheme, \"<scheme>\");\n+        host = props.getProperty(\"host\");\n+        Args.notNull(host, \"<host>\");\n+        port = props.getProperty(\"port\");\n+        Args.notNull(port, \"<port>\");\n+        rootPath = props.getProperty(\"rootPath\");\n+        Args.notNull(rootPath, \"<rootPath>\");\n+        useGZIPCompression = props.getProperty(\"useGZIPCompression\");\n+        Args.notNull(useGZIPCompression, \"<useGZIPCompression>\");\n+        maxUploadFileSizeMB = props.getProperty(\"maxUploadFileSizeMB\") == null\n+                ? null\n+                : Integer.valueOf(props.getProperty(\"maxUploadFileSizeMB\"));\n+\n+        maxWaitTime = Integer.valueOf(props.getProperty(\"maxWaitTimeOnApplyChanges\", \"30\"));\n+\n+        // Resource connections check thread pool size\n+        corePoolSize = Integer.valueOf(props.getProperty(\"executor.corePoolSize\", \"5\"));\n+        maxPoolSize = Integer.valueOf(props.getProperty(\"executor.maxPoolSize\", \"10\"));\n+        queueCapacity = Integer.valueOf(props.getProperty(\"executor.queueCapacity\", \"50\"));\n+\n+        String csrf = props.getProperty(\"csrf\");\n+\n+        // process page properties\n+        pageClasses = new HashMap<>();\n+        populatePageClasses(props);\n+        pageClasses = Collections.unmodifiableMap(pageClasses);\n+\n+        // Application settings\n+        IBootstrapSettings settings = new BootstrapSettings();\n+\n+        // set theme provider\n+        settings.setThemeProvider(new SingleThemeProvider(new AdminLTE()));\n+\n+        // install application settings\n+        Bootstrap.install(this, settings);\n+\n+        getResourceSettings().setUseMinifiedResources(true);\n+\n+        getResourceSettings().setThrowExceptionOnMissingResource(true);\n+\n+        getJavaScriptLibrarySettings().setJQueryReference(JQueryResourceReference.getV2());\n+\n+        getSecuritySettings().setAuthorizationStrategy(new MetaDataRoleAuthorizationStrategy(this));\n+\n+        resourceProvider = lookup.getResourceProvider();\n+        anyWizardBuilderAdditionalSteps = lookup.getAnyWizardBuilderAdditionalSteps();\n+        statusProvider = lookup.getStatusProvider();\n+        virSchemaDetailsPanelProvider = lookup.getVirSchemaDetailsPanelProvider();\n+        anyDirectoryPanelAditionalActionLinksProvider = lookup.getAnyDirectoryPanelAditionalActionLinksProvider();\n+        lookup.getPageClasses().\n+                forEach(cls -> MetaDataRoleAuthorizationStrategy.authorize(cls, Constants.ROLE_AUTHENTICATED));\n+\n+        getMarkupSettings().setStripWicketTags(true);\n+        getMarkupSettings().setCompressWhitespace(true);\n+\n+        if (BooleanUtils.toBoolean(csrf)) {\n+            getRequestCycleListeners().add(new CsrfPreventionRequestCycleListener());\n+        }\n+        getRequestCycleListeners().add(new SyncopeConsoleRequestCycleListener());\n+\n+        mountPage(\"/login\", getSignInPageClass());\n+\n+        try {\n+            reconciliationReportKey = props.getProperty(\"reconciliationReportKey\");\n+        } catch (NumberFormatException e) {\n+            LOG.error(\"While parsing reconciliationReportKey\", e);\n+        }\n+        Args.notNull(reconciliationReportKey, \"<reconciliationReportKey>\");\n+\n+        for (Class<? extends AbstractResource> resource : lookup.getResources()) {\n+            Resource annotation = resource.getAnnotation(Resource.class);\n+            try {\n+                AbstractResource instance = resource.getDeclaredConstructor().newInstance();\n+\n+                mountResource(annotation.path(), new ResourceReference(annotation.key()) {\n+\n+                    private static final long serialVersionUID = -128426276529456602L;\n+\n+                    @Override\n+                    public IResource getResource() {\n+                        return instance;\n+                    }\n+                });\n+            } catch (Exception e) {\n+                LOG.error(\"Could not instantiate {}\", resource.getName(), e);\n+            }\n+        }\n+\n+        // enable component path\n+        if (getDebugSettings().isAjaxDebugModeEnabled()) {\n+            getDebugSettings().setComponentPathAttributeName(\"syncope-path\");\n+        }\n+    }\n+\n+    @Override\n+    protected Class<? extends AbstractAuthenticatedWebSession> getWebSessionClass() {\n+        return SyncopeConsoleSession.class;\n+    }\n+\n+    @Override\n+    protected Class<? extends WebPage> getSignInPageClass() {\n+        return Login.class;\n+    }\n+\n+    @Override\n+    public Class<? extends Page> getHomePage() {\n+        return AuthenticatedWebSession.get().isSignedIn()\n+                && SyncopeConsoleSession.get().getSelfTO().isMustChangePassword()\n+                ? MustChangePassword.class\n+                : Dashboard.class;\n+    }\n+\n+    public Class<? extends BasePage> getPageClass(final String key) {\n+        return pageClasses.get(key);\n+    }\n+\n+    public String getSite() {\n+        return site;\n+    }\n+\n+    public String getAnonymousUser() {\n+        return anonymousUser;\n+    }\n+\n+    public String getAnonymousKey() {\n+        return anonymousKey;\n+    }\n+\n+    public String getReconciliationReportKey() {\n+        return reconciliationReportKey;\n+    }\n+\n+    public Integer getMaxUploadFileSizeMB() {\n+        return maxUploadFileSizeMB;\n+    }\n+\n+    public Integer getMaxWaitTimeInSeconds() {\n+        return maxWaitTime;\n+    }\n+\n+    public Integer getCorePoolSize() {\n+        return corePoolSize;\n+    }\n+\n+    public Integer getMaxPoolSize() {\n+        return maxPoolSize;\n+    }\n+\n+    public Integer getQueueCapacity() {\n+        return queueCapacity;\n+    }\n+\n+    public SyncopeClientFactoryBean newClientFactory() {\n+        return new SyncopeClientFactoryBean().\n+                setAddress(scheme + \"://\" + host + \":\" + port + StringUtils.prependIfMissing(rootPath, \"/\")).\n+                setUseCompression(BooleanUtils.toBoolean(useGZIPCompression));\n+    }\n+\n+    public List<String> getDomains() {\n+        synchronized (LOG) {\n+            if (domains == null) {\n+                domains = newClientFactory().create(\n+                        new AnonymousAuthenticationHandler(anonymousUser, anonymousKey)).\n+                        getService(DomainService.class).list().stream().map(EntityTO::getKey).\n+                        collect(Collectors.toList());\n+                domains.add(0, SyncopeConstants.MASTER_DOMAIN);\n+                domains = ListUtils.unmodifiableList(domains);\n+            }\n+        }\n+        return domains;\n+    }\n+\n+    public ExternalResourceProvider getResourceProvider() {\n+        return resourceProvider;\n+    }\n+\n+    public AnyWizardBuilderAdditionalSteps getAnyWizardBuilderAdditionalSteps() {\n+        return anyWizardBuilderAdditionalSteps;\n+    }\n+\n+    public StatusProvider getStatusProvider() {\n+        return statusProvider;\n+    }\n+\n+    public VirSchemaDetailsPanelProvider getVirSchemaDetailsPanelProvider() {\n+        return virSchemaDetailsPanelProvider;\n+    }\n+\n+    public AnyDirectoryPanelAditionalActionLinksProvider getAnyDirectoryPanelAditionalActionLinksProvider() {\n+        return anyDirectoryPanelAditionalActionLinksProvider;\n+    }\n+}"},{"sha":"b56fecc2ec7bdd54f2509ee2674ff5d5516a38ae","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/AnyDirectoryPanelAditionalActionLinksProvider.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDirectoryPanelAditionalActionLinksProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDirectoryPanelAditionalActionLinksProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDirectoryPanelAditionalActionLinksProvider.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.commons;\n \n+import java.io.Serializable;\n import java.util.List;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.Action;\n@@ -27,7 +28,7 @@\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.PageReference;\n \n-public interface AnyDirectoryPanelAditionalActionLinksProvider {\n+public interface AnyDirectoryPanelAditionalActionLinksProvider extends Serializable {\n \n     List<Action<UserTO>> get(\n             UserTO modelObject,"},{"sha":"60878a8d14733333cc40c92853e5199cbe52f8bd","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/EmptyAnyDirectoryPanelAditionalActionLinksProvider.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyAnyDirectoryPanelAditionalActionLinksProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyAnyDirectoryPanelAditionalActionLinksProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyAnyDirectoryPanelAditionalActionLinksProvider.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -31,6 +31,8 @@\n public class EmptyAnyDirectoryPanelAditionalActionLinksProvider\n         implements AnyDirectoryPanelAditionalActionLinksProvider {\n \n+    private static final long serialVersionUID = 121356001392126568L;\n+\n     @Override\n     public List<Action<UserTO>> get(\n             final UserTO modelObject,"},{"sha":"3437a55e749e183322c2c6863cb53994e6d76cfa","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/EmptyExternalResourceProvider.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyExternalResourceProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyExternalResourceProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyExternalResourceProvider.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -23,6 +23,8 @@\n \n public class EmptyExternalResourceProvider implements ExternalResourceProvider {\n \n+    private static final long serialVersionUID = 3002474783308961295L;\n+\n     @Override\n     public List<String> get() {\n         return Collections.emptyList();"},{"sha":"0dd9f44a5e369d51491be22b10bf307bf121c2f5","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/EmptyStatusProvider.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyStatusProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyStatusProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyStatusProvider.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -28,6 +28,8 @@\n \n public class EmptyStatusProvider implements StatusProvider {\n \n+    private static final long serialVersionUID = -7948190795547208134L;\n+\n     @Override\n     public List<Triple<ConnObjectTO, ConnObjectWrapper, String>> get(\n             final AnyTO any, final Collection<String> resources) {"},{"sha":"dfcb293fc6ae9e37729dc8803d81a77bc249a85e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/EmptyVirSchemaDetailsPanelProvider.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyVirSchemaDetailsPanelProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyVirSchemaDetailsPanelProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FEmptyVirSchemaDetailsPanelProvider.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -24,6 +24,8 @@\n \n public class EmptyVirSchemaDetailsPanelProvider implements VirSchemaDetailsPanelProvider {\n \n+    private static final long serialVersionUID = 1972241879030801082L;\n+\n     @Override\n     public Panel get(final String id, final VirSchemaTO schemaTO) {\n         return new EmptyPanel(id);"},{"sha":"1f58363878a29f03a3bbc6acc91828ec3f40e704","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/ExternalResourceProvider.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FExternalResourceProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FExternalResourceProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FExternalResourceProvider.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -18,9 +18,10 @@\n  */\n package org.apache.syncope.client.console.commons;\n \n+import java.io.Serializable;\n import java.util.List;\n \n-public interface ExternalResourceProvider {\n+public interface ExternalResourceProvider extends Serializable {\n \n     List<String> get();\n }"},{"sha":"fc85cb53540b487a04a5eea7bd3866130cad6cbb","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/PreviewUtils.java","status":"modified","additions":8,"deletions":16,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FPreviewUtils.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -19,25 +19,18 @@\n package org.apache.syncope.client.console.commons;\n \n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.console.init.ConsoleInitializer;\n import org.apache.syncope.client.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n import org.apache.syncope.client.console.wicket.markup.html.form.preview.DefaultPreviewer;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n import org.springframework.util.ClassUtils;\n \n-public final class PreviewUtils {\n+@Component\n+public class PreviewUtils {\n \n-    public static PreviewUtils getInstance() {\n-        return new PreviewUtils();\n-    }\n-\n-    private final ClassPathScanImplementationLookup classPathScanImplementationLookup;\n-\n-    private PreviewUtils() {\n-        classPathScanImplementationLookup = (ClassPathScanImplementationLookup) SyncopeConsoleApplication.get().\n-                getServletContext().getAttribute(ConsoleInitializer.CLASSPATH_LOOKUP);\n-    }\n+    @Autowired\n+    private ClassPathScanImplementationLookup lookup;\n \n     public AbstractBinaryPreviewer getDefaultPreviewer(final String mimeType) {\n         return new DefaultPreviewer(\"previewer\", mimeType);\n@@ -48,13 +41,12 @@ public AbstractBinaryPreviewer getPreviewer(final String mimeType) {\n             return null;\n         }\n \n-        Class<? extends AbstractBinaryPreviewer> previewer =\n-                classPathScanImplementationLookup.getPreviewerClass(mimeType);\n+        Class<? extends AbstractBinaryPreviewer> previewer = lookup.getPreviewerClass(mimeType);\n         try {\n             return previewer == null\n                     ? null\n                     : ClassUtils.getConstructorIfAvailable(previewer, String.class, String.class).\n-                    newInstance(new Object[] { \"previewer\", mimeType });\n+                            newInstance(new Object[] { \"previewer\", mimeType });\n         } catch (Exception e) {\n             return null;\n         }"},{"sha":"a098cf8cf352d8f8b7d8aa1727c71a556c11bd11","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/StatusProvider.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FStatusProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FStatusProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FStatusProvider.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -18,14 +18,15 @@\n  */\n package org.apache.syncope.client.console.commons;\n \n+import java.io.Serializable;\n import java.util.Collection;\n import java.util.List;\n import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.client.console.commons.status.ConnObjectWrapper;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n \n-public interface StatusProvider {\n+public interface StatusProvider extends Serializable {\n \n     List<Triple<ConnObjectTO, ConnObjectWrapper, String>> get(AnyTO any, Collection<String> resources);\n }"},{"sha":"83a68d1144585f83a5017fa39664a661c189eb56","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/commons/VirSchemaDetailsPanelProvider.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FVirSchemaDetailsPanelProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FVirSchemaDetailsPanelProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FVirSchemaDetailsPanelProvider.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -18,10 +18,11 @@\n  */\n package org.apache.syncope.client.console.commons;\n \n+import java.io.Serializable;\n import org.apache.syncope.common.lib.to.VirSchemaTO;\n import org.apache.wicket.markup.html.panel.Panel;\n \n-public interface VirSchemaDetailsPanelProvider {\n+public interface VirSchemaDetailsPanelProvider extends Serializable {\n \n     Panel get(String id, VirSchemaTO schemaTO);\n }"},{"sha":"c93da79f327d42044676672424081e093881b1ac","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/init/ConsoleInitializer.java","status":"removed","additions":0,"deletions":56,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FConsoleInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FConsoleInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FConsoleInitializer.java?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,56 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.init;\n-\n-import javax.servlet.ServletContextEvent;\n-import javax.servlet.ServletContextListener;\n-import javax.servlet.annotation.WebListener;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-/**\n- * Take care of all initializations needed by Syncope Console to run up and safe.\n- */\n-@WebListener\n-public class ConsoleInitializer implements ServletContextListener {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ConsoleInitializer.class);\n-\n-    public static final String CLASSPATH_LOOKUP = \"CLASSPATH_LOOKUP\";\n-\n-    public static final String MIMETYPES_LOADER = \"MIMETYPES_LOADER\";\n-\n-    @Override\n-    public void contextInitialized(final ServletContextEvent sce) {\n-        ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();\n-        lookup.load();\n-        sce.getServletContext().setAttribute(CLASSPATH_LOOKUP, lookup);\n-\n-        MIMETypesLoader mimeTypes = new MIMETypesLoader();\n-        mimeTypes.load();\n-        sce.getServletContext().setAttribute(MIMETYPES_LOADER, mimeTypes);\n-\n-        LOG.debug(\"Initialization completed\");\n-    }\n-\n-    @Override\n-    public void contextDestroyed(final ServletContextEvent sce) {\n-        // nothing to do\n-    }\n-}"},{"sha":"36b91558b424ea1d0040632ce491fefca5904df8","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -23,14 +23,12 @@\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.annotations.ExtPage;\n import org.apache.syncope.client.console.annotations.IdMPage;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.HttpResourceStream;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.console.init.ConsoleInitializer;\n import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.syncope.client.console.rest.ConfRestClient;\n import org.apache.syncope.client.console.wicket.markup.head.MetaHeaderItem;\n@@ -66,6 +64,7 @@\n import org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.apache.wicket.request.resource.ContentDisposition;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.apache.wicket.util.time.Duration;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -78,6 +77,9 @@ public class BasePage extends WebPage implements IAjaxIndicatorAware {\n \n     protected static final HeaderItem META_IE_EDGE = new MetaHeaderItem(\"X-UA-Compatible\", \"IE=edge\");\n \n+    @SpringBean\n+    protected ClassPathScanImplementationLookup lookup;\n+\n     protected final WebMarkupContainer body;\n \n     protected NotificationPanel notificationPanel;\n@@ -89,9 +91,6 @@ public BasePage() {\n     public BasePage(final PageParameters parameters) {\n         super(parameters);\n \n-        ClassPathScanImplementationLookup lookup = (ClassPathScanImplementationLookup) SyncopeConsoleApplication.get().\n-                getServletContext().getAttribute(ConsoleInitializer.CLASSPATH_LOOKUP);\n-\n         body = new WebMarkupContainer(\"body\");\n         Serializable leftMenuCollapse = SyncopeConsoleSession.get().getAttribute(Constants.MENU_COLLAPSE);\n         if ((leftMenuCollapse instanceof Boolean) && ((Boolean) leftMenuCollapse)) {"},{"sha":"1757bf68dfa9237add2185509fdc4ddb94d8fe95","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/Dashboard.java","status":"modified","additions":1,"deletions":8,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FDashboard.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -21,9 +21,6 @@\n import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n import java.util.ArrayList;\n import java.util.List;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n-import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.console.init.ConsoleInitializer;\n import org.apache.syncope.client.console.panels.DashboardAccessTokensPanel;\n import org.apache.syncope.client.console.panels.DashboardControlPanel;\n import org.apache.syncope.client.console.panels.DashboardExtensionsPanel;\n@@ -82,11 +79,7 @@ public Panel getPanel(final String panelId) {\n             }\n         });\n \n-        ClassPathScanImplementationLookup classPathScanImplementationLookup =\n-                (ClassPathScanImplementationLookup) SyncopeConsoleApplication.get().\n-                        getServletContext().getAttribute(ConsoleInitializer.CLASSPATH_LOOKUP);\n-        final List<Class<? extends BaseExtWidget>> extWidgetClasses =\n-                classPathScanImplementationLookup.getExtWidgetClasses();\n+        List<Class<? extends BaseExtWidget>> extWidgetClasses = lookup.getExtWidgetClasses();\n         if (!extWidgetClasses.isEmpty()) {\n             tabs.add(new AbstractTab(new ResourceModel(\"extensions\")) {\n "},{"sha":"a1e0ebe7732d2363fd1cfe4f518b87c36cfb2cac","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/Login.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogin.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -23,11 +23,10 @@\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Locale;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.console.init.ConsoleInitializer;\n import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -47,6 +46,7 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -56,6 +56,9 @@ public class Login extends WebPage {\n \n     private static final long serialVersionUID = 5889157642852559004L;\n \n+    @SpringBean\n+    private ClassPathScanImplementationLookup lookup;\n+\n     private final NotificationPanel notificationPanel;\n \n     private final StatelessForm<Void> form;\n@@ -111,7 +114,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         form.add(languageSelect);\n \n         DomainDropDown domainSelect = new DomainDropDown(\"domain\");\n-        if (SyncopeConsoleApplication.get().getDomains().size() == 1) {\n+        if (SyncopeWebApplication.get().getDomains().size() == 1) {\n             domainSelect.setOutputMarkupPlaceholderTag(true);\n         }\n         domainSelect.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_BLUR) {\n@@ -139,7 +142,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target) {\n-                if (SyncopeConsoleApplication.get().getAnonymousUser().equals(usernameField.getRawInput())) {\n+                if (SyncopeWebApplication.get().getAnonymousUser().equals(usernameField.getRawInput())) {\n                     throw new AccessControlException(\"Illegal username\");\n                 }\n \n@@ -161,11 +164,8 @@ protected void onSubmit(final AjaxRequestTarget target) {\n         form.add(submitButton);\n         form.setDefaultButton(submitButton);\n \n-        ClassPathScanImplementationLookup classPathScanImplementationLookup =\n-                (ClassPathScanImplementationLookup) SyncopeConsoleApplication.get().\n-                        getServletContext().getAttribute(ConsoleInitializer.CLASSPATH_LOOKUP);\n         List<Panel> ssoLoginFormPanels = new ArrayList<>();\n-        classPathScanImplementationLookup.getSSOLoginFormPanels().forEach(ssoLoginFormPanel -> {\n+        lookup.getSSOLoginFormPanels().forEach(ssoLoginFormPanel -> {\n             try {\n                 ssoLoginFormPanels.add(ssoLoginFormPanel.getConstructor(String.class).newInstance(\"ssoLogin\"));\n             } catch (Exception e) {\n@@ -204,7 +204,7 @@ public String getDisplayValue(final Locale locale) {\n         }\n \n         LocaleDropDown(final String id) {\n-            super(id, SyncopeConsoleApplication.SUPPORTED_LOCALES);\n+            super(id, SyncopeWebApplication.SUPPORTED_LOCALES);\n \n             setChoiceRenderer(new LocaleRenderer());\n             setModel(new IModel<Locale>() {\n@@ -240,7 +240,7 @@ private class DomainDropDown extends BootstrapSelect<String> {\n         private static final long serialVersionUID = -7401167913360133325L;\n \n         DomainDropDown(final String id) {\n-            super(id, SyncopeConsoleApplication.get().getDomains());\n+            super(id, SyncopeWebApplication.get().getDomains());\n \n             setModel(new IModel<String>() {\n "},{"sha":"ad064edd3bcaaa7d5a586f67bc7daafadc460997","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -22,7 +22,7 @@\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.notifications.NotificationTasks;\n@@ -131,7 +131,7 @@ protected boolean statusCondition(final AnyObjectTO modelObject) {\n         }, ActionType.CLONE, AnyEntitlement.CREATE.getFor(type)).setRealm(realm);\n \n         if (wizardInModal) {\n-            SyncopeConsoleApplication.get().getAnyDirectoryPanelAditionalActionLinksProvider().get(\n+            SyncopeWebApplication.get().getAnyDirectoryPanelAditionalActionLinksProvider().get(\n                     type,\n                     model.getObject(),\n                     realm,"},{"sha":"7776fcd52330e1c913782669581cbecebb38a2a5","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/DashboardOverviewPanel.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardOverviewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardOverviewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDashboardOverviewPanel.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -30,6 +30,7 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.util.time.Duration;\n \n public class DashboardOverviewPanel extends Panel {\n@@ -63,11 +64,12 @@ public DashboardOverviewPanel(final String id) {\n         container.setOutputMarkupId(true);\n         add(container);\n \n-        totalUsers = new NumberWidget(\n-                \"totalUsers\", \"bg-yellow\", numbers.getTotalUsers(), getString(\"users\"), \"ion ion-person\");\n+        totalUsers = new NumberWidget(\"totalUsers\", \"bg-yellow\", numbers.getTotalUsers(),\n+                new ResourceModel(\"users\").getObject(), \"ion ion-person\");\n         container.add(totalUsers);\n         totalGroups = new NumberWidget(\n-                \"totalGroups\", \"bg-red\", numbers.getTotalGroups(), getString(\"groups\"), \"ion ion-person-stalker\");\n+                \"totalGroups\", \"bg-red\", numbers.getTotalGroups(),\n+                new ResourceModel(\"groups\").getObject(), \"ion ion-person-stalker\");\n         container.add(totalGroups);\n \n         Triple<Integer, String, String> built = buildTotalAny1OrRoles(numbers);\n@@ -154,7 +156,7 @@ private Triple<Integer, String, String> buildTotalAny1OrRoles(final NumbersInfo\n         String icon;\n         if (numbers.getAnyType1() == null) {\n             number = numbers.getTotalRoles();\n-            label = getString(\"roles\");\n+            label = new ResourceModel(\"roles\").getObject();\n             icon = \"fa fa-users\";\n         } else {\n             number = numbers.getTotalAny1();\n@@ -170,7 +172,7 @@ private Triple<Integer, String, String> buildTotalAny2OrResources(final NumbersI\n         String icon;\n         if (numbers.getAnyType2() == null) {\n             number = numbers.getTotalResources();\n-            label = getString(\"resources\");\n+            label = new ResourceModel(\"resources\").getObject();\n             icon = \"fa fa-database\";\n         } else {\n             number = numbers.getTotalAny2();"},{"sha":"2c7e192777e6a2f626c136420383cbaaf5d321a8","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/GroupDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -24,7 +24,7 @@\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.layout.FormLayoutInfoUtils;\n@@ -309,7 +309,7 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                 String.format(\"%s,%s\", StandardEntitlement.TASK_CREATE, StandardEntitlement.TASK_EXECUTE)).\n                 setRealm(realm);\n \n-        SyncopeConsoleApplication.get().getAnyDirectoryPanelAditionalActionLinksProvider().get(\n+        SyncopeWebApplication.get().getAnyDirectoryPanelAditionalActionLinksProvider().get(\n                 model.getObject(),\n                 realm,\n                 altDefaultModal,"},{"sha":"3b7ddd2eed47b4fc89fe1fb31d632cb15cc9cdc4","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ImplementationModalPanel.java","status":"modified","additions":14,"deletions":20,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImplementationModalPanel.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -27,11 +27,9 @@\n import java.util.Optional;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n-import org.apache.syncope.client.console.init.ConsoleInitializer;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n@@ -50,6 +48,7 @@\n import org.apache.wicket.markup.html.form.TextArea;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.apache.wicket.util.io.IOUtils;\n \n public class ImplementationModalPanel extends AbstractModalPanel<ImplementationTO> {\n@@ -65,6 +64,9 @@ private enum ViewMode {\n \n     private static final ObjectMapper MAPPER = new ObjectMapper();\n \n+    @SpringBean\n+    private ClassPathScanImplementationLookup lookup;\n+\n     private final ImplementationRestClient restClient = new ImplementationRestClient();\n \n     private final ImplementationTO implementation;\n@@ -103,33 +105,29 @@ public ImplementationModalPanel(\n                     ? new ArrayList<>(javaClasses.get().getClasses())\n                     : new ArrayList<>();\n         } else if (viewMode == ViewMode.JSON_BODY) {\n-            ClassPathScanImplementationLookup implementationLookup =\n-                    (ClassPathScanImplementationLookup) SyncopeConsoleApplication.get().\n-                            getServletContext().getAttribute(ConsoleInitializer.CLASSPATH_LOOKUP);\n-\n             switch (implementation.getType()) {\n                 case REPORTLET:\n-                    classes = implementationLookup.getReportletConfs().keySet().stream().\n+                    classes = lookup.getReportletConfs().keySet().stream().\n                             collect(Collectors.toList());\n                     break;\n \n                 case ACCOUNT_RULE:\n-                    classes = implementationLookup.getAccountRuleConfs().keySet().stream().\n+                    classes = lookup.getAccountRuleConfs().keySet().stream().\n                             collect(Collectors.toList());\n                     break;\n \n                 case PASSWORD_RULE:\n-                    classes = implementationLookup.getPasswordRuleConfs().keySet().stream().\n+                    classes = lookup.getPasswordRuleConfs().keySet().stream().\n                             collect(Collectors.toList());\n                     break;\n \n                 case PULL_CORRELATION_RULE:\n-                    classes = implementationLookup.getPullCorrelationRuleConfs().keySet().stream().\n+                    classes = lookup.getPullCorrelationRuleConfs().keySet().stream().\n                             collect(Collectors.toList());\n                     break;\n \n                 case PUSH_CORRELATION_RULE:\n-                    classes = implementationLookup.getPushCorrelationRuleConfs().keySet().stream().\n+                    classes = lookup.getPushCorrelationRuleConfs().keySet().stream().\n                             collect(Collectors.toList());\n                     break;\n \n@@ -263,30 +261,26 @@ public ImplementationModalPanel(\n \n             @Override\n             protected void onEvent(final AjaxRequestTarget target) {\n-                ClassPathScanImplementationLookup implementationLookup =\n-                        (ClassPathScanImplementationLookup) SyncopeConsoleApplication.get().\n-                                getServletContext().getAttribute(ConsoleInitializer.CLASSPATH_LOOKUP);\n-\n                 Class<?> clazz = null;\n                 switch (implementation.getType()) {\n                     case REPORTLET:\n-                        clazz = implementationLookup.getReportletConfs().get(jsonClass.getModelObject());\n+                        clazz = lookup.getReportletConfs().get(jsonClass.getModelObject());\n                         break;\n \n                     case ACCOUNT_RULE:\n-                        clazz = implementationLookup.getAccountRuleConfs().get(jsonClass.getModelObject());\n+                        clazz = lookup.getAccountRuleConfs().get(jsonClass.getModelObject());\n                         break;\n \n                     case PASSWORD_RULE:\n-                        clazz = implementationLookup.getPasswordRuleConfs().get(jsonClass.getModelObject());\n+                        clazz = lookup.getPasswordRuleConfs().get(jsonClass.getModelObject());\n                         break;\n \n                     case PULL_CORRELATION_RULE:\n-                        clazz = implementationLookup.getPullCorrelationRuleConfs().get(jsonClass.getModelObject());\n+                        clazz = lookup.getPullCorrelationRuleConfs().get(jsonClass.getModelObject());\n                         break;\n \n                     case PUSH_CORRELATION_RULE:\n-                        clazz = implementationLookup.getPushCorrelationRuleConfs().get(jsonClass.getModelObject());\n+                        clazz = lookup.getPushCorrelationRuleConfs().get(jsonClass.getModelObject());\n                         break;\n \n                     default:"},{"sha":"e81fd1ecf0420c90fdd0d8e6c36a5da1f384b796","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/ParametersCreateWizardSchemaStep.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardSchemaStep.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardSchemaStep.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FParametersCreateWizardSchemaStep.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -22,10 +22,8 @@\n import java.util.List;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.PropertyList;\n-import org.apache.syncope.client.console.init.ConsoleInitializer;\n import org.apache.syncope.client.console.init.MIMETypesLoader;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n@@ -46,13 +44,14 @@\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n \n public class ParametersCreateWizardSchemaStep extends WizardStep {\n \n     private static final long serialVersionUID = -7843275202297616553L;\n \n-    private static final MIMETypesLoader MIME_TYPES_LOADER = (MIMETypesLoader) SyncopeConsoleApplication.get().\n-            getServletContext().getAttribute(ConsoleInitializer.MIMETYPES_LOADER);\n+    @SpringBean\n+    private MIMETypesLoader mimeTypesLoader;\n \n     private final ImplementationRestClient implRestClient = new ImplementationRestClient();\n \n@@ -357,7 +356,8 @@ private void showHide(final PlainSchemaTO schema, final AjaxDropDownChoicePanel<\n             cipherAlgorithm.setModelObject(null);\n \n             binaryParams.setVisible(true);\n-            mimeType.setChoices(MIME_TYPES_LOADER.getMimeTypes());\n+            mimeType.setChoices(mimeTypesLoader.getMimeTypes());\n+\n             schema.setValidator(\"BinaryValidator\");\n         } else {\n             conversionParams.setVisible(false);"},{"sha":"c91e43684f4c8558d1c7359fb116ec2ec8940c73","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/PlainSchemaDetails.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FPlainSchemaDetails.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -26,10 +26,8 @@\n import java.util.List;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.PropertyList;\n-import org.apache.syncope.client.console.init.ConsoleInitializer;\n import org.apache.syncope.client.console.init.MIMETypesLoader;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n@@ -50,14 +48,15 @@\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.apache.wicket.util.string.Strings;\n \n public class PlainSchemaDetails extends AbstractSchemaDetailsPanel {\n \n     private static final long serialVersionUID = 5378100729213456451L;\n \n-    private static final MIMETypesLoader MIME_TYPES_LOADER = (MIMETypesLoader) SyncopeConsoleApplication.get().\n-            getServletContext().getAttribute(ConsoleInitializer.MIMETYPES_LOADER);\n+    @SpringBean\n+    private MIMETypesLoader mimeTypesLoader;\n \n     private final ImplementationRestClient implRestClient = new ImplementationRestClient();\n \n@@ -393,7 +392,7 @@ private void showHide(final PlainSchemaTO schema, final AjaxDropDownChoicePanel<\n             cipherAlgorithm.setModelObject(null);\n \n             binaryParams.setVisible(true);\n-            mimeType.setChoices(MIME_TYPES_LOADER.getMimeTypes());\n+            mimeType.setChoices(mimeTypesLoader.getMimeTypes());\n \n             schema.setValidator(\"BinaryValidator\");\n         } else {"},{"sha":"73d18ca3b7a372fdeca0409e2d2990278aa8c0ce","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -28,7 +28,7 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.commons.lang3.tuple.Triple;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.commons.ConnIdSpecialName;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.ITabComponent;\n@@ -163,7 +163,7 @@ public void onClick(final AjaxRequestTarget target, final RealmTO ignore) {\n \n             @Override\n             public boolean isVisible() {\n-                return SyncopeConsoleApplication.get().getSecuritySettings().getAuthorizationStrategy().\n+                return SyncopeWebApplication.get().getSecuritySettings().getAuthorizationStrategy().\n                         isActionAuthorized(this, RENDER);\n             }\n         });\n@@ -184,7 +184,7 @@ public WebMarkupContainer getPanel(final String panelId) {\n \n                 @Override\n                 public boolean isVisible() {\n-                    return SyncopeConsoleApplication.get().getSecuritySettings().getAuthorizationStrategy().\n+                    return SyncopeWebApplication.get().getSecuritySettings().getAuthorizationStrategy().\n                             isActionAuthorized(this, RENDER);\n                 }\n             });"},{"sha":"5371af3f739d0812881b86737e6e95e6d9758660","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/RealmDetails.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -22,7 +22,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.stream.Collectors;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n@@ -97,7 +97,7 @@ protected List<String> load() {\n \n         @Override\n         protected List<String> load() {\n-            return SyncopeConsoleApplication.get().getResourceProvider().get();\n+            return SyncopeWebApplication.get().getResourceProvider().get();\n         }\n     };\n "},{"sha":"ad75eb4128f1f6ca20b77109bf9cc0ded04a236d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypeWizardBuilder.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypeWizardBuilder.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -27,7 +27,7 @@\n import org.apache.commons.lang3.LocaleUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.MutablePair;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n@@ -115,7 +115,7 @@ public Details(final SchemaTO modelObject) {\n                     break;\n \n                 case VIRTUAL:\n-                    detailsPanel = SyncopeConsoleApplication.get().getVirSchemaDetailsPanelProvider().\n+                    detailsPanel = SyncopeWebApplication.get().getVirSchemaDetailsPanelProvider().\n                             get(\"details\", (VirSchemaTO) modelObject);\n                     break;\n \n@@ -166,7 +166,7 @@ public void setObject(final String object) {\n                         }\n                     });\n                     locale.setRequired(true).hideLabel();\n-                    locale.setChoices(SyncopeConsoleApplication.SUPPORTED_LOCALES.stream().\n+                    locale.setChoices(SyncopeWebApplication.SUPPORTED_LOCALES.stream().\n                             map(Objects::toString).collect(Collectors.toList()));\n                     locale.addValidator(validatable -> {\n                         try {"},{"sha":"1305213585643883cd7cfaeb9105d481f448ffc1","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/UserDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -24,7 +24,7 @@\n import java.util.List;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.notifications.NotificationTasks;\n@@ -236,7 +236,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                         setRealms(realm, model.getObject().getDynRealms());\n             }\n \n-            SyncopeConsoleApplication.get().getAnyDirectoryPanelAditionalActionLinksProvider().get(\n+            SyncopeWebApplication.get().getAnyDirectoryPanelAditionalActionLinksProvider().get(\n                     model.getObject(),\n                     realm,\n                     altDefaultModal,"},{"sha":"28b4ce149fdb64296d00f0bf0ee9112adc6ae39d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/search/AbstractSearchPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -24,7 +24,7 @@\n import java.util.function.Function;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n@@ -194,7 +194,7 @@ protected Map<String, PlainSchemaTO> load() {\n \n             @Override\n             protected List<String> load() {\n-                return SyncopeConsoleApplication.get().getResourceProvider().get();\n+                return SyncopeWebApplication.get().getResourceProvider().get();\n             }\n         };\n     }"},{"sha":"2fe81331f834e67d6ca13abf5dc13bae4b25b30e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/policies/PolicyModalPanelBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyModalPanelBuilder.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -23,7 +23,7 @@\n import java.util.Arrays;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.BasePage;\n@@ -89,7 +89,7 @@ public class Profile extends AbstractModalPanel<T> {\n \n             @Override\n             protected List<String> load() {\n-                return SyncopeConsoleApplication.get().getResourceProvider().get();\n+                return SyncopeWebApplication.get().getResourceProvider().get();\n             }\n         };\n "},{"sha":"cac77e35d94bc823fbce7641cccac3c492b3187e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDownload.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDownload.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDownload.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDownload.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -19,22 +19,21 @@\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.commons.HttpResourceStream;\n-import org.apache.syncope.client.console.init.ConsoleInitializer;\n import org.apache.syncope.client.console.init.MIMETypesLoader;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.behavior.AbstractAjaxBehavior;\n import org.apache.wicket.request.handler.resource.ResourceStreamRequestHandler;\n import org.apache.wicket.request.resource.ContentDisposition;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.apache.wicket.util.time.Duration;\n \n public abstract class AjaxDownload extends AbstractAjaxBehavior {\n \n     private static final long serialVersionUID = 7203445884857810583L;\n \n-    private static final MIMETypesLoader MIME_TYPES_LOADER = (MIMETypesLoader) SyncopeConsoleApplication.get().\n-            getServletContext().getAttribute(ConsoleInitializer.MIMETYPES_LOADER);\n+    @SpringBean\n+    private MIMETypesLoader mimeTypesLoader;\n \n     private final String name;\n \n@@ -73,7 +72,7 @@ public void onRequest() {\n         String key = StringUtils.isNotBlank(fileKey) ? fileKey + \"_\" : \"\";\n         String ext = \"\";\n         if (StringUtils.isNotBlank(mimeType)) {\n-            String extByMimeType = MIME_TYPES_LOADER.getFileExt(mimeType);\n+            String extByMimeType = mimeTypesLoader.getFileExt(mimeType);\n             ext = StringUtils.isBlank(extByMimeType) ? \".bin\" : (\".\" + extByMimeType);\n         }\n         String fileName = key + (stream.getFilename() == null ? name : stream.getFilename()) + ext;"},{"sha":"e380ceb8a1d5e611c392a101c7c32b9909f88424","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/BinaryFieldPanel.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FBinaryFieldPanel.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -31,7 +31,7 @@\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.HttpResourceStream;\n@@ -55,13 +55,15 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.util.ListModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.apache.wicket.util.lang.Bytes;\n \n public class BinaryFieldPanel extends FieldPanel<String> {\n \n     private static final long serialVersionUID = 6264462604183088931L;\n \n-    private static final PreviewUtils PREVIEW_UTILS = PreviewUtils.getInstance();\n+    @SpringBean\n+    private PreviewUtils previewUtils;\n \n     private final String mimeType;\n \n@@ -93,16 +95,17 @@ public BinaryFieldPanel(\n             final IModel<String> model,\n             final String mimeType,\n             final String fileKey) {\n+\n         super(id, name, model);\n         this.model = model;\n         this.fileKey = fileKey;\n         this.mimeType = mimeType;\n \n-        previewer = PREVIEW_UTILS.getPreviewer(mimeType);\n+        previewer = previewUtils.getPreviewer(mimeType);\n \n-        maxUploadSize = SyncopeConsoleApplication.get().getMaxUploadFileSizeMB() == null\n+        maxUploadSize = SyncopeWebApplication.get().getMaxUploadFileSizeMB() == null\n                 ? null\n-                : Bytes.megabytes(SyncopeConsoleApplication.get().getMaxUploadFileSizeMB());\n+                : Bytes.megabytes(SyncopeWebApplication.get().getMaxUploadFileSizeMB());\n         uploadForm = new StatelessForm<>(\"uploadForm\");\n         uploadForm.setMultiPart(true);\n         add(uploadForm);\n@@ -274,7 +277,7 @@ public FieldPanel<String> setNewModel(final IModel<String> model) {\n         if (StringUtils.isNotBlank(modelObj)) {\n             final Component panelPreview;\n             if (previewer == null) {\n-                panelPreview = PREVIEW_UTILS.getDefaultPreviewer(mimeType);\n+                panelPreview = previewUtils.getDefaultPreviewer(mimeType);\n             } else {\n                 panelPreview = previewer.preview(modelObj);\n             }"},{"sha":"48d42c62c5703e69fea798e0f84bc4bebc65ba85","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ImageModalPanel.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FImageModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FImageModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FImageModalPanel.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -54,5 +54,4 @@ protected byte[] getImageData(final IResource.Attributes attributes) {\n         image.setOutputMarkupId(true);\n         add(image);\n     }\n-\n }"},{"sha":"ffa2e545239b5078a90090c89f81a189a5e511e0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/widgets/ReconciliationWidget.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -33,7 +33,7 @@\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n@@ -122,12 +122,12 @@ protected void onTimer(final AjaxRequestTarget target) {\n                 if (isCheckReconciliationJob()) {\n                     try {\n                         restClient.listJobs().stream().\n-                                filter(jobTO -> SyncopeConsoleApplication.get().\n+                                filter(jobTO -> SyncopeWebApplication.get().\n                                 getReconciliationReportKey().equals(jobTO.getRefKey())).\n                                 findFirst().ifPresent(reportJobTO -> {\n                                     if (!reportJobTO.isRunning()) {\n                                         LOG.debug(\"Report {} is not running\",\n-                                                SyncopeConsoleApplication.get().getReconciliationReportKey());\n+                                                SyncopeWebApplication.get().getReconciliationReportKey());\n \n                                         overlay.setVisible(false);\n \n@@ -150,7 +150,7 @@ protected void onTimer(final AjaxRequestTarget target) {\n         overlay.setVisible(false);\n         container.add(overlay);\n \n-        this.reconciliationReportKey = SyncopeConsoleApplication.get().getReconciliationReportKey();\n+        this.reconciliationReportKey = SyncopeWebApplication.get().getReconciliationReportKey();\n \n         ReportTO reconciliationReport = null;\n         if (SyncopeConsoleSession.get().owns(StandardEntitlement.REPORT_READ)) {"},{"sha":"c7976337fe142158f184f14cde2c8a42df8f704c","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/AjaxWizard.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAjaxWizard.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -29,7 +29,7 @@\n import java.util.concurrent.TimeoutException;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.wicket.Component;\n@@ -382,7 +382,7 @@ private Serializable onApply(final AjaxRequestTarget target) throws TimeoutExcep\n                     SyncopeConsoleSession.get().execute(new ApplyFuture(target));\n \n             Pair<Serializable, Serializable> res =\n-                    executor.get(SyncopeConsoleApplication.get().getMaxWaitTimeInSeconds(), TimeUnit.SECONDS);\n+                    executor.get(SyncopeWebApplication.get().getMaxWaitTimeInSeconds(), TimeUnit.SECONDS);\n \n             if (res.getLeft() != null) {\n                 send(pageRef.getPage(), Broadcast.BUBBLE, res.getLeft());"},{"sha":"e91e667f1678dbbd5e36eacb94498a80d2bbca59","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.client.console.wizards.any;\n \n import java.util.List;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.layout.AbstractAnyFormLayout;\n import org.apache.syncope.client.console.layout.AnyForm;\n import org.apache.syncope.client.console.layout.AnyObjectFormLayoutInfo;\n@@ -155,7 +155,7 @@ public PageReference getPageReference() {\n             wizardModel.add(new Relationships(modelObject, pageRef));\n         }\n \n-        SyncopeConsoleApplication.get().getAnyWizardBuilderAdditionalSteps().\n+        SyncopeWebApplication.get().getAnyWizardBuilderAdditionalSteps().\n                 buildModelSteps(modelObject, wizardModel, formLayoutInfo);\n \n         return wizardModel;"},{"sha":"6594b13f674525a1238fe8a821b7b9310bb2608b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Groups.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroups.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -27,7 +27,7 @@\n import org.apache.commons.collections4.ListUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.jaxrs.ext.search.client.CompleteCondition;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.rest.DynRealmRestClient;\n import org.apache.syncope.client.console.rest.GroupRestClient;\n@@ -209,7 +209,7 @@ public boolean evaluate() {\n         return (anyTO instanceof GroupTO\n                 ? !allDynRealms.isEmpty()\n                 : !allDynRealms.isEmpty() || !groupsModel.getObject().isEmpty())\n-                && SyncopeConsoleApplication.get().getSecuritySettings().getAuthorizationStrategy().\n+                && SyncopeWebApplication.get().getSecuritySettings().getAuthorizationStrategy().\n                         isActionAuthorized(this, RENDER);\n     }\n "},{"sha":"859c71d63bce5c6eac3d8106128e1b1c8edad964","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Ownership.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -24,7 +24,7 @@\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.search.AnySelectionDirectoryPanel;\n import org.apache.syncope.client.console.panels.search.GroupSearchPanel;\n@@ -344,7 +344,7 @@ public void onEvent(final IEvent<?> event) {\n \n     @Override\n     public boolean evaluate() {\n-        return SyncopeConsoleApplication.get().getSecuritySettings().getAuthorizationStrategy().\n+        return SyncopeWebApplication.get().getSecuritySettings().getAuthorizationStrategy().\n                 isActionAuthorized(this, RENDER);\n     }\n }"},{"sha":"5c13dbed5eb0c11d6b0dc21dc45f4f92a5d0a76a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Resources.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -22,7 +22,7 @@\n import java.util.Collections;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -86,9 +86,9 @@ public void setObject(final List<String> object) {\n \n     @Override\n     public boolean evaluate() {\n-        if (SyncopeConsoleApplication.get().getSecuritySettings().\n+        if (SyncopeWebApplication.get().getSecuritySettings().\n                 getAuthorizationStrategy().isActionAuthorized(this, RENDER)) {\n-            available.setObject(SyncopeConsoleApplication.get().getResourceProvider().get());\n+            available.setObject(SyncopeWebApplication.get().getResourceProvider().get());\n             return !available.getObject().isEmpty();\n         } else {\n             return false;"},{"sha":"913e867bb129ff860544c2d807568de260b4ce6e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Roles.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -24,7 +24,7 @@\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.ListUtils;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.rest.RoleRestClient;\n import org.apache.syncope.client.console.wicket.ajax.markup.html.LabelInfo;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n@@ -73,7 +73,7 @@ public <T extends AnyTO> Roles(final AnyWrapper<?> modelObject) {\n \n         this.setOutputMarkupId(true);\n \n-        allRoles = SyncopeConsoleApplication.get().getSecuritySettings().getAuthorizationStrategy().\n+        allRoles = SyncopeWebApplication.get().getSecuritySettings().getAuthorizationStrategy().\n                 isActionAuthorized(this, RENDER)\n                 ? new RoleRestClient().list().stream().map(EntityTO::getKey).collect(Collectors.toList())\n                 : Collections.<String>emptyList();\n@@ -91,7 +91,7 @@ public <T extends AnyTO> Roles(final AnyWrapper<?> modelObject) {\n     @Override\n     public final boolean evaluate() {\n         return CollectionUtils.isNotEmpty(allRoles)\n-                && SyncopeConsoleApplication.get().getSecuritySettings().getAuthorizationStrategy().\n+                && SyncopeWebApplication.get().getSecuritySettings().getAuthorizationStrategy().\n                         isActionAuthorized(this, RENDER);\n     }\n }"},{"sha":"3857969d71e79ef41154889b949e4e1b36b4484b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/StatusPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -26,7 +26,7 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.commons.lang3.tuple.Triple;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.status.ConnObjectWrapper;\n import org.apache.syncope.client.console.commons.status.Status;\n@@ -69,7 +69,7 @@ public <T extends AnyTO> StatusPanel(\n \n         super(id);\n         init(any, model,\n-                SyncopeConsoleApplication.get().getStatusProvider().get(any, any.getResources()), pageRef, false);\n+                SyncopeWebApplication.get().getStatusProvider().get(any, any.getResources()), pageRef, false);\n     }\n \n     public <T extends AnyTO> StatusPanel("},{"sha":"092331a5beb6fadc0a43b9d3e11433dfec33c66e","filename":"client/idrepo/console/src/main/resources/META-INF/web-fragment.xml","status":"removed","additions":0,"deletions":46,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,46 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<web-fragment xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n-              xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-              xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee \n-                                  http://xmlns.jcp.org/xml/ns/javaee/web-fragment_3_1.xsd\"\n-              id=\"${pom.artifactId}\" version=\"3.1\">\n-    \n-  <filter>\n-    <filter-name>SyncopeConsole</filter-name>\n-    <filter-class>org.apache.wicket.protocol.ws.javax.JavaxWebSocketFilter</filter-class>\n-    <init-param>\n-      <param-name>filterMappingUrlPattern</param-name>\n-      <param-value>/*</param-value>\n-    </init-param>\n-    <init-param>\n-      <param-name>applicationClassName</param-name>\n-      <param-value>org.apache.syncope.client.console.SyncopeConsoleApplication</param-value>\n-    </init-param>\n-  </filter>\n-    \n-  <filter-mapping>\n-    <filter-name>SyncopeConsole</filter-name>\n-    <url-pattern>/*</url-pattern>\n-    <dispatcher>REQUEST</dispatcher>\n-    <dispatcher>INCLUDE</dispatcher>\n-  </filter-mapping>\n-\n-</web-fragment>"},{"sha":"ce58400da242eeb4049d40c18fcc1ad68e4ba472","filename":"client/idrepo/console/src/main/resources/application.properties","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,25 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+spring.application.name=Apache Syncope ${syncope.version} Console\n+spring.groovy.template.check-template-location=false\n+spring.main.banner-mode=log\n+\n+spring.http.encoding.charset=UTF-8\n+spring.http.encoding.enabled=true\n+spring.http.encoding.force=true\n+\n+server.servlet.contextPath=/syncope-console"},{"sha":"39cb2ae9fa73d43efc16d4bbb131f1831a063af1","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/SyncopeWebApplication.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication.properties?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication.properties"},{"sha":"4480641131e5ddaf6b7e571b9d581c65f0741b04","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/SyncopeWebApplication_it.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_it.properties?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_it.properties"},{"sha":"4433d8ab9ae53aa5ac035c6b0ab79f10ebd58c76","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/SyncopeWebApplication_ja.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_ja.properties?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_ja.properties"},{"sha":"49262040db13e746ce954c8985d1ff787f404930","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/SyncopeWebApplication_pt_BR.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_pt_BR.properties?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_pt_BR.properties"},{"sha":"c1cef7cf0a636d09d0830c560f02f6c8d599a92c","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/SyncopeWebApplication_ru.properties","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeWebApplication_ru.properties?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","previous_filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_ru.properties"},{"sha":"a9145f0d068396d0d9616ccea3f1f2d4f449229b","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/widgets/CompletenessWidget.html","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FCompletenessWidget.html?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -27,7 +27,6 @@ <h3 class=\"box-title\"><wicket:message key=\"configurationStatus\"/></h3>\n               <i class=\"fa fa-wrench\"></i>\n             </button>\n             <ul class=\"dropdown-menu\" role=\"menu\">\n-              <li><a href=\"#\" wicket:id=\"topology\"><wicket:message key=\"createResourceOrPullTask\"/></a></li>\n               <li><a href=\"#\" wicket:id=\"policies\"><wicket:message key=\"createPolicy\"/></a></li>\n               <li><a href=\"#\" wicket:id=\"notifications\"><wicket:message key=\"createNotification\"/></a></li>\n               <li><a href=\"#\" wicket:id=\"types\"><wicket:message key=\"createVirSchemaOrAnyType\"/></a></li>"},{"sha":"95d09581c968c27ab25b16a64e6222e07bc6e945","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/PropertyUtils.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FPropertyUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FPropertyUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FPropertyUtils.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -22,7 +22,6 @@\n import java.io.FileInputStream;\n import java.io.InputStream;\n import java.util.Properties;\n-import org.apache.commons.lang3.tuple.Pair;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -33,18 +32,17 @@ public final class PropertyUtils {\n \n     private static final Logger LOG = LoggerFactory.getLogger(PropertyUtils.class);\n \n-    public static Pair<Properties, File> read(\n+    public static Properties read(\n             final Class<?> clazz, final String propertiesFileName, final String confDirProp) {\n \n         Properties props = new Properties();\n-        File confDir = null;\n \n         try (InputStream is = clazz.getResourceAsStream(\"/\" + propertiesFileName)) {\n             props.load(is);\n \n             String confDirName = props.getProperty(confDirProp);\n             if (confDirName != null) {\n-                confDir = new File(confDirName);\n+                File confDir = new File(confDirName);\n                 if (confDir.exists() && confDir.canRead() && confDir.isDirectory()) {\n                     File confDirProps = new File(confDir, propertiesFileName);\n                     if (confDirProps.exists() && confDirProps.canRead() && confDirProps.isFile()) {\n@@ -60,7 +58,7 @@ public static Pair<Properties, File> read(\n             throw new RuntimeException(\"Could not read \" + propertiesFileName, e);\n         }\n \n-        return Pair.of(props, confDir);\n+        return props;\n     }\n \n     /**"},{"sha":"540eccd5c868759ff2acd4817eade57f29994689","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/request/DomainCR.java","status":"added","additions":197,"deletions":0,"changes":197,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FDomainCR.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FDomainCR.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Frequest%2FDomainCR.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,197 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.request;\n+\n+import java.io.Serializable;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.types.CipherAlgorithm;\n+\n+@XmlRootElement(name = \"domainCR\")\n+@XmlType\n+public class DomainCR implements Serializable {\n+\n+    private static final long serialVersionUID = 3842608635517859919L;\n+\n+    public static class Builder {\n+\n+        private final DomainCR conf;\n+\n+        public Builder(final String domainName) {\n+            this.conf = new DomainCR();\n+            this.conf.domainName = domainName;\n+        }\n+\n+        public Builder jdbcDriver(final String jdbcDriver) {\n+            this.conf.jdbcDriver = jdbcDriver;\n+            return this;\n+        }\n+\n+        public Builder jdbcURL(final String jdbcURL) {\n+            this.conf.jdbcURL = jdbcURL;\n+            return this;\n+        }\n+\n+        public Builder dbSchema(final String dbSchema) {\n+            if (StringUtils.isNotBlank(dbSchema)) {\n+                this.conf.dbSchema = dbSchema;\n+            }\n+            return this;\n+        }\n+\n+        public Builder dbUsername(final String dbUsername) {\n+            this.conf.dbUsername = dbUsername;\n+            return this;\n+        }\n+\n+        public Builder dbPassword(final String dbPassword) {\n+            this.conf.dbPassword = dbPassword;\n+            return this;\n+        }\n+\n+        public Builder transactionIsolation(final String transactionIsolation) {\n+            this.conf.transactionIsolation = transactionIsolation;\n+            return this;\n+        }\n+\n+        public Builder maxPoolSize(final int maxPoolSize) {\n+            this.conf.maxPoolSize = maxPoolSize;\n+            return this;\n+        }\n+\n+        public Builder minIdle(final int minIdle) {\n+            this.conf.minIdle = minIdle;\n+            return this;\n+        }\n+\n+        public Builder auditSql(final String auditSql) {\n+            this.conf.auditSql = auditSql;\n+            return this;\n+        }\n+\n+        public Builder orm(final String orm) {\n+            this.conf.orm = orm;\n+            return this;\n+        }\n+\n+        public Builder databasePlatform(final String databasePlatform) {\n+            this.conf.databasePlatform = databasePlatform;\n+            return this;\n+        }\n+\n+        public Builder adminPassword(final String adminPassword) {\n+            this.conf.adminPassword = adminPassword;\n+            return this;\n+        }\n+\n+        public Builder adminCipherAlgorithm(final CipherAlgorithm adminCipherAlgorithm) {\n+            this.conf.adminCipherAlgorithm = adminCipherAlgorithm;\n+            return this;\n+        }\n+\n+        public DomainCR build() {\n+            return this.conf;\n+        }\n+    }\n+\n+    private String domainName;\n+\n+    private String jdbcDriver;\n+\n+    private String jdbcURL;\n+\n+    private String dbSchema;\n+\n+    private String dbUsername;\n+\n+    private String dbPassword;\n+\n+    private String transactionIsolation = \"TRANSACTION_READ_COMMITTED\";\n+\n+    private int maxPoolSize = 10;\n+\n+    private int minIdle = 2;\n+\n+    private String auditSql = \"audit.sql\";\n+\n+    private String orm = \"META-INF/spring-orm.xml\";\n+\n+    private String databasePlatform;\n+\n+    private String adminPassword;\n+\n+    private CipherAlgorithm adminCipherAlgorithm = CipherAlgorithm.SHA512;\n+\n+    public String getDomainName() {\n+        return domainName;\n+    }\n+\n+    public String getJdbcDriver() {\n+        return jdbcDriver;\n+    }\n+\n+    public String getJdbcURL() {\n+        return jdbcURL;\n+    }\n+\n+    public String getDbSchema() {\n+        return dbSchema;\n+    }\n+\n+    public String getDbUsername() {\n+        return dbUsername;\n+    }\n+\n+    public String getDbPassword() {\n+        return dbPassword;\n+    }\n+\n+    public String getTransactionIsolation() {\n+        return transactionIsolation;\n+    }\n+\n+    public int getMaxPoolSize() {\n+        return maxPoolSize;\n+    }\n+\n+    public int getMinIdle() {\n+        return minIdle;\n+    }\n+\n+    public String getAuditSql() {\n+        return auditSql;\n+    }\n+\n+    public String getOrm() {\n+        return orm;\n+    }\n+\n+    public String getDatabasePlatform() {\n+        return databasePlatform;\n+    }\n+\n+    public String getAdminPassword() {\n+        return adminPassword;\n+    }\n+\n+    public CipherAlgorithm getAdminCipherAlgorithm() {\n+        return adminCipherAlgorithm;\n+    }\n+}"},{"sha":"933e8774974641926860896d2fe2a4fd5214b164","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/AnyTypeLogic.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyTypeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyTypeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyTypeLogic.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -34,6 +34,7 @@\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.provisioning.api.data.AnyTypeDataBinder;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.dao.InvalidDataAccessApiUsageException;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n@@ -118,7 +119,7 @@ public AnyTypeTO delete(final String key) {\n \n         try {\n             return binder.delete(anyType);\n-        } catch (IllegalArgumentException e) {\n+        } catch (IllegalArgumentException | InvalidDataAccessApiUsageException e) {\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidRequest);\n             sce.getElements().add(e.getMessage());\n             throw sce;"},{"sha":"a8f4e682f6432c062c4d26baec3daf050f0c752f","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/LoggerLogic.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLoggerLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLoggerLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLoggerLogic.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -66,6 +66,7 @@\n import org.springframework.core.type.classreading.CachingMetadataReaderFactory;\n import org.springframework.core.type.classreading.MetadataReader;\n import org.springframework.core.type.classreading.MetadataReaderFactory;\n+import org.springframework.dao.InvalidDataAccessApiUsageException;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n@@ -247,7 +248,7 @@ public LoggerTO setLogLevel(final String name, final Level level) {\n     public void enableAudit(final AuditLoggerName auditLoggerName) {\n         try {\n             setLevel(auditLoggerName.toLoggerName(), Level.DEBUG, LoggerType.AUDIT);\n-        } catch (IllegalArgumentException e) {\n+        } catch (IllegalArgumentException | InvalidDataAccessApiUsageException e) {\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidLogger);\n             sce.getElements().add(e.getMessage());\n             throw sce;\n@@ -299,7 +300,7 @@ public void disableAudit(final AuditLoggerName auditLoggerName) {\n             delete(auditLoggerName.toLoggerName(), LoggerType.AUDIT);\n         } catch (NotFoundException e) {\n             LOG.debug(\"Ignoring disable of non existing logger {}\", auditLoggerName.toLoggerName());\n-        } catch (IllegalArgumentException e) {\n+        } catch (IllegalArgumentException | InvalidDataAccessApiUsageException e) {\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidLogger);\n             sce.getElements().add(e.getMessage());\n             throw sce;"},{"sha":"475e2eff1c9c122fb6bf2ae52f163272a353a3de","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/LogicContext.java","status":"added","additions":69,"deletions":0,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLogicContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLogicContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLogicContext.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic;\n+\n+import org.apache.syncope.core.persistence.api.ImplementationLookup;\n+import org.springframework.context.EnvironmentAware;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.EnableAspectJAutoProxy;\n+import org.springframework.context.annotation.PropertySource;\n+import org.springframework.core.env.Environment;\n+\n+@PropertySource(\"classpath:logic.properties\")\n+@PropertySource(value = \"file:${conf.directory}/logic.properties\", ignoreResourceNotFound = true)\n+@ComponentScan(\"org.apache.syncope.core.logic\")\n+@EnableAspectJAutoProxy\n+@Configuration\n+public class LogicContext implements EnvironmentAware {\n+\n+    private Environment env;\n+\n+    @Override\n+    public void setEnvironment(final Environment env) {\n+        this.env = env;\n+    }\n+\n+    @Bean\n+    public String version() {\n+        return env.getProperty(\"version\");\n+    }\n+\n+    @Bean\n+    public String buildNumber() {\n+        return env.getProperty(\"buildNumber\");\n+    }\n+\n+    @Bean\n+    public LogicInvocationHandler logicInvocationHandler()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (LogicInvocationHandler) Class.forName(env.getProperty(\"logicInvocationHandler\")).\n+                newInstance();\n+    }\n+\n+    @Bean\n+    public ImplementationLookup classPathScanImplementationLookup()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (ImplementationLookup) Class.forName(env.getProperty(\"classPathScanImplementationLookup\")).\n+                newInstance();\n+    }\n+}"},{"sha":"befe11772243e50a2d71c82f4aeaa17c69d092d1","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/TaskLogic.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -67,6 +67,7 @@\n import org.quartz.JobKey;\n import org.quartz.SchedulerException;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.dao.InvalidDataAccessApiUsageException;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n@@ -191,7 +192,7 @@ public <T extends TaskTO> Pair<Integer, List<T>> search(\n                     collect(Collectors.toList());\n \n             return Pair.of(count, result);\n-        } catch (IllegalArgumentException e) {\n+        } catch (IllegalArgumentException | InvalidDataAccessApiUsageException e) {\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidRequest);\n             sce.getElements().add(e.getMessage());\n             throw sce;"},{"sha":"79f1c87e515c7baf2ec7656d99435edf2f90ecda","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/init/ClassPathScanImplementationLookup.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -89,7 +89,7 @@ public class ClassPathScanImplementationLookup implements ImplementationLookup {\n     private Set<Class<?>> auditAppenderClasses;\n \n     @Override\n-    public Integer getPriority() {\n+    public int getOrder() {\n         return Integer.MIN_VALUE;\n     }\n \n@@ -102,8 +102,8 @@ protected String getBasePackage() {\n         return DEFAULT_BASE_PACKAGE;\n     }\n \n-    @Override\n     @SuppressWarnings(\"unchecked\")\n+    @Override\n     public void load() {\n         classNames = new EnumMap<>(ImplementationType.class);\n         for (ImplementationType type : ImplementationType.values()) {"},{"sha":"41716cbcf00a9afc7a3896df34feb7e4f5badebf","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/init/EntitlementLoader.java","status":"modified","additions":10,"deletions":14,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FEntitlementLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FEntitlementLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FEntitlementLoader.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -18,39 +18,35 @@\n  */\n package org.apache.syncope.core.logic.init;\n \n-import java.util.Map;\n import javax.sql.DataSource;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.core.provisioning.api.EntitlementsHolder;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n-import org.apache.syncope.core.persistence.api.DomainsHolder;\n-import org.apache.syncope.core.persistence.api.SyncopeLoader;\n+import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class EntitlementLoader implements SyncopeLoader {\n-\n-    @Autowired\n-    private DomainsHolder domainsHolder;\n+public class EntitlementLoader implements SyncopeCoreLoader {\n \n     @Autowired\n     private EntitlementAccessor entitlementAccessor;\n \n     @Override\n-    public Integer getPriority() {\n+    public int getOrder() {\n         return 900;\n     }\n \n     @Override\n     public void load() {\n         EntitlementsHolder.getInstance().init(StandardEntitlement.values());\n+    }\n \n-        for (Map.Entry<String, DataSource> entry : domainsHolder.getDomains().entrySet()) {\n-            AuthContextUtils.execWithAuthContext(entry.getKey(), () -> {\n-                entitlementAccessor.addEntitlementsForAnyTypes();\n-                return null;\n-            });\n-        }\n+    @Override\n+    public void load(final String domain, final DataSource datasource) {\n+        AuthContextUtils.execWithAuthContext(domain, () -> {\n+            entitlementAccessor.addEntitlementsForAnyTypes();\n+            return null;\n+        });\n     }\n }"},{"sha":"2903a10e93ea04e11d34d615d70b1eac4709e42e","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/init/LoggerLoader.java","status":"modified","additions":36,"deletions":39,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FLoggerLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FLoggerLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FLoggerLoader.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -39,9 +39,8 @@\n import org.apache.syncope.core.logic.audit.AuditAppender;\n import org.apache.syncope.core.logic.MemoryAppender;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n-import org.apache.syncope.core.persistence.api.DomainsHolder;\n import org.apache.syncope.core.persistence.api.ImplementationLookup;\n-import org.apache.syncope.core.persistence.api.SyncopeLoader;\n+import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.springframework.beans.BeansException;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -50,10 +49,7 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class LoggerLoader implements SyncopeLoader {\n-\n-    @Autowired\n-    private DomainsHolder domainsHolder;\n+public class LoggerLoader implements SyncopeCoreLoader {\n \n     @Autowired\n     private LoggerAccessor loggerAccessor;\n@@ -64,21 +60,11 @@ public class LoggerLoader implements SyncopeLoader {\n     private final Map<String, MemoryAppender> memoryAppenders = new HashMap<>();\n \n     @Override\n-    public Integer getPriority() {\n+    public int getOrder() {\n         return 300;\n     }\n \n-    @Override\n-    public void load() {\n-        LoggerContext ctx = (LoggerContext) LogManager.getContext(false);\n-\n-        ctx.getConfiguration().getAppenders().entrySet().stream().\n-                filter(entry -> (entry.getValue() instanceof MemoryAppender)).\n-                forEach(entry -> {\n-                    memoryAppenders.put(entry.getKey(), (MemoryAppender) entry.getValue());\n-                });\n-\n-        // Audit table and DataSource for each configured domain\n+    private ColumnConfig[] buildColumnConfigs(final LoggerContext ctx) {\n         ColumnConfig[] columnConfigs = {\n             ColumnConfig.newBuilder().\n             setConfiguration(ctx.getConfiguration()).setName(\"EVENT_DATE\").setEventTimestamp(true).build(),\n@@ -91,33 +77,44 @@ public void load() {\n             ColumnConfig.newBuilder().setUnicode(false).\n             setConfiguration(ctx.getConfiguration()).setName(\"THROWABLE\").setPattern(\"%ex{full}\").build()\n         };\n-        ColumnMapping[] columnMappings = new ColumnMapping[0];\n-\n-        for (Map.Entry<String, DataSource> entry : domainsHolder.getDomains().entrySet()) {\n-            Appender appender = ctx.getConfiguration().getAppender(\"audit_for_\" + entry.getKey());\n-            if (appender == null) {\n-                appender = JdbcAppender.newBuilder().\n-                        withName(\"audit_for_\" + entry.getKey()).\n-                        withIgnoreExceptions(false).\n-                        setConnectionSource(new DataSourceConnectionSource(entry.getKey(), entry.getValue())).\n-                        setBufferSize(0).\n-                        setTableName(\"SYNCOPEAUDIT\").\n-                        setColumnConfigs(columnConfigs).\n-                        setColumnMappings(columnMappings).\n-                        build();\n-                appender.start();\n-                ctx.getConfiguration().addAppender(appender);\n-            }\n \n-            LoggerConfig logConf = new LoggerConfig(AuditLoggerName.getAuditLoggerName(entry.getKey()), null, false);\n+        return columnConfigs;\n+    }\n+\n+    @Override\n+    public void load(final String domain, final DataSource datasource) {\n+        LoggerContext ctx = (LoggerContext) LogManager.getContext(false);\n+\n+        ctx.getConfiguration().getAppenders().entrySet().stream().\n+                filter(entry -> (entry.getValue() instanceof MemoryAppender)).\n+                forEach(entry -> {\n+                    memoryAppenders.put(entry.getKey(), (MemoryAppender) entry.getValue());\n+                });\n+\n+        // Audit table and DataSource for the given domain\n+        Appender appender = ctx.getConfiguration().getAppender(\"audit_for_\" + domain);\n+        if (appender == null) {\n+            appender = JdbcAppender.newBuilder().\n+                    withName(\"audit_for_\" + domain).\n+                    withIgnoreExceptions(false).\n+                    setConnectionSource(new DataSourceConnectionSource(domain, datasource)).\n+                    setBufferSize(0).\n+                    setTableName(\"SYNCOPEAUDIT\").\n+                    setColumnConfigs(buildColumnConfigs(ctx)).\n+                    setColumnMappings(new ColumnMapping[0]).\n+                    build();\n+            appender.start();\n+            ctx.getConfiguration().addAppender(appender);\n+\n+            LoggerConfig logConf = new LoggerConfig(AuditLoggerName.getAuditLoggerName(domain), null, false);\n             logConf.addAppender(appender, Level.DEBUG, null);\n             logConf.setLevel(Level.DEBUG);\n             ctx.getConfiguration().addLogger(logConf.getName(), logConf);\n \n             // SYNCOPE-1144 For each custom audit appender class add related appenders to log4j logger\n-            auditAppenders(entry.getKey()).forEach(auditAppender -> {\n+            auditAppenders(domain).forEach(auditAppender -> {\n                 auditAppender.getEvents().stream().\n-                        map(event -> AuditLoggerName.getAuditEventLoggerName(entry.getKey(), event.toLoggerName())).\n+                        map(event -> AuditLoggerName.getAuditEventLoggerName(domain, event.toLoggerName())).\n                         forEachOrdered(domainAuditLoggerName -> {\n                             LoggerConfig eventLogConf = ctx.getConfiguration().getLoggerConfig(domainAuditLoggerName);\n                             boolean isRootLogConf = LogManager.ROOT_LOGGER_NAME.equals(eventLogConf.getName());\n@@ -132,7 +129,7 @@ public void load() {\n                         });\n             });\n \n-            AuthContextUtils.execWithAuthContext(entry.getKey(), () -> {\n+            AuthContextUtils.execWithAuthContext(domain, () -> {\n                 loggerAccessor.synchronizeLog4J(ctx);\n                 return null;\n             });"},{"sha":"3e1b1c91c8a7efb8103759386e94cb4bdc7ff1f2","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/init/LogicInitializer.java","status":"removed","additions":0,"deletions":69,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FLogicInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FLogicInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FLogicInitializer.java?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,69 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.logic.init;\n-\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.Map;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n-import org.apache.syncope.core.persistence.api.SyncopeLoader;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.aop.support.AopUtils;\n-import org.springframework.beans.factory.BeanFactory;\n-import org.springframework.beans.factory.BeanFactoryAware;\n-import org.springframework.beans.factory.InitializingBean;\n-import org.springframework.beans.factory.support.DefaultListableBeanFactory;\n-import org.springframework.stereotype.Component;\n-\n-/**\n- * Take care of all initializations needed by Syncope logic to run up and safe.\n- */\n-@Component\n-public class LogicInitializer implements InitializingBean, BeanFactoryAware {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(LogicInitializer.class);\n-\n-    private DefaultListableBeanFactory beanFactory;\n-\n-    @Override\n-    public void setBeanFactory(final BeanFactory beanFactory) {\n-        this.beanFactory = (DefaultListableBeanFactory) beanFactory;\n-    }\n-\n-    @Override\n-    public void afterPropertiesSet() throws Exception {\n-        Map<String, SyncopeLoader> loaderMap = beanFactory.getBeansOfType(SyncopeLoader.class);\n-\n-        List<SyncopeLoader> loaders = new ArrayList<>(loaderMap.values());\n-        Collections.sort(loaders, (o1, o2) -> o1.getPriority().compareTo(o2.getPriority()));\n-\n-        ApplicationContextProvider.setBeanFactory(beanFactory);\n-\n-        LOG.debug(\"Starting initialization...\");\n-        loaders.stream().map(loader -> {\n-            LOG.debug(\"Invoking {} with priority {}\", AopUtils.getTargetClass(loader).getName(), loader.getPriority());\n-            return loader;\n-        }).forEachOrdered(loader -> {\n-            loader.load();\n-        });\n-        LOG.debug(\"Initialization completed\");\n-    }\n-}"},{"sha":"eb5b93f269c7aeb333adac7b2b762efa8653f09f","filename":"core/idrepo/logic/src/main/resources/META-INF/spring.factories","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n+  org.apache.syncope.core.logic.LogicContext"},{"sha":"8256e4b625fc09e60f49a4a0a3832fdf68761d57","filename":"core/idrepo/logic/src/main/resources/logic.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fresources%2Flogic.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fresources%2Flogic.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fresources%2Flogic.properties?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -14,5 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n+version=${syncope.version}\n+buildNumber=${buildNumber}\n logicInvocationHandler=org.apache.syncope.core.logic.LogicInvocationHandler\n classPathScanImplementationLookup=org.apache.syncope.core.logic.init.ClassPathScanImplementationLookup"},{"sha":"59066a936a51ac7b8de27ded87ae87cd11c9c3fe","filename":"core/idrepo/logic/src/main/resources/logicContext.xml","status":"removed","additions":0,"deletions":46,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fresources%2FlogicContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fresources%2FlogicContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fresources%2FlogicContext.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,46 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:aop=\"http://www.springframework.org/schema/aop\"\n-       xmlns:context=\"http://www.springframework.org/schema/context\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\n-                           http://www.springframework.org/schema/aop \n-                           http://www.springframework.org/schema/aop/spring-aop.xsd\n-                           http://www.springframework.org/schema/context\n-                           http://www.springframework.org/schema/context/spring-context.xsd\">\n-  \n-  <bean id=\"version\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${syncope.version}\"/>\n-  </bean>\n-  <bean id=\"buildNumber\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${buildNumber}\"/>\n-  </bean>\n-\n-  <aop:aspectj-autoproxy/>\n-\n-  <context:component-scan base-package=\"org.apache.syncope.core.logic\"/>\n-\n-  <bean class=\"${logicInvocationHandler}\"/>\n-\n-  <bean class=\"${classPathScanImplementationLookup}\"/>\n-\n-</beans>"},{"sha":"36d55c1102c3f854caea75f02299078110ece585","filename":"core/idrepo/rest-cxf/pom.xml","status":"modified","additions":6,"deletions":17,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Frest-cxf%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Frest-cxf%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -50,26 +50,15 @@ under the License.\n     </dependency>\n \n     <dependency>\n-      <groupId>org.springframework</groupId>\n-      <artifactId>spring-context</artifactId>\n-    </dependency>    \n-    <dependency>\n-      <groupId>org.springframework</groupId>\n-      <artifactId>spring-orm</artifactId>\n-    </dependency>      \n-    <dependency>\n-      <groupId>org.springframework</groupId>\n-      <artifactId>spring-web</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.springframework.security</groupId>\n-      <artifactId>spring-security-web</artifactId>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot</artifactId>\n     </dependency>\n+\n     <dependency>\n-      <groupId>org.springframework.security</groupId>\n-      <artifactId>spring-security-config</artifactId>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-webmvc</artifactId>\n     </dependency>\n-    \n+\n     <dependency>\n       <groupId>com.fasterxml.jackson.datatype</groupId>\n       <artifactId>jackson-datatype-joda</artifactId>"},{"sha":"04d62a28e56b4115c4c4cb13362837b914927d61","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/JavaDocUtils.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FJavaDocUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FJavaDocUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FJavaDocUtils.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -23,6 +23,7 @@\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n+import org.springframework.core.env.Environment;\n import org.springframework.util.ClassUtils;\n \n public final class JavaDocUtils {\n@@ -47,6 +48,16 @@ public static URL[] getJavaDocURLs() {\n         return result;\n     }\n \n+    public static String[] getJavaDocPaths(final Environment env) {\n+        String[] result = null;\n+\n+        if (env.containsProperty(\"javadocPaths\")) {\n+            result = env.getProperty(\"javadocPaths\").split(\",\");\n+        }\n+\n+        return result;\n+    }\n+\n     private JavaDocUtils() {\n         // private constructor for static utility class\n     }"},{"sha":"92d5f44580eb1706772bc003e628dfdb375bde59","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/RESTCXFContext.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRESTCXFContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRESTCXFContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRESTCXFContext.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest.cxf;\n+\n+import javax.servlet.ServletRequestListener;\n+import org.springframework.boot.web.servlet.ServletListenerRegistrationBean;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.ImportResource;\n+\n+@ImportResource(\"classpath:/restCXFContext.xml\")\n+@ComponentScan(\"org.apache.syncope.core.rest.cxf.service\")\n+@Configuration\n+public class RESTCXFContext {\n+\n+    @Bean\n+    public ServletListenerRegistrationBean<ServletRequestListener> listenerRegistrationBean() {\n+        ServletListenerRegistrationBean<ServletRequestListener> bean = new ServletListenerRegistrationBean<>();\n+        bean.setListener(new ThreadLocalCleanupListener());\n+        return bean;\n+    }\n+}"},{"sha":"40da849b3a1937dba996c06a858d24eeebe800b6","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/RestServiceExceptionMapper.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -60,7 +60,7 @@\n import org.springframework.context.annotation.PropertySource;\n import org.springframework.core.env.Environment;\n import org.springframework.dao.DataIntegrityViolationException;\n-import org.springframework.orm.jpa.JpaSystemException;\n+import org.springframework.dao.UncategorizedDataAccessException;\n import org.springframework.security.access.AccessDeniedException;\n import org.springframework.transaction.TransactionSystemException;\n \n@@ -111,7 +111,7 @@ public Response toResponse(final Exception ex) {\n \n             builder = builder(ClientExceptionType.EntityExists,\n                     getPersistenceErrorMessage(ex instanceof PersistenceException ? ex.getCause() : ex));\n-        } else if (ex instanceof DataIntegrityViolationException || ex instanceof JpaSystemException) {\n+        } else if (ex instanceof DataIntegrityViolationException || ex instanceof UncategorizedDataAccessException) {\n             builder = builder(ClientExceptionType.DataIntegrityViolation, getPersistenceErrorMessage(ex));\n         } else if (ex instanceof ConnectorException) {\n             builder = builder(ClientExceptionType.ConnectorException, ExceptionUtils.getRootCauseMessage(ex));\n@@ -259,7 +259,7 @@ private ResponseBuilder processBadRequestExceptions(final Exception ex) {\n             return builder(ClientExceptionType.GenericPersistence, ExceptionUtils.getRootCauseMessage(ex));\n         } else if (ibatisPersistenceException != null && ibatisPersistenceException.isAssignableFrom(ex.getClass())) {\n             return builder(ClientExceptionType.Workflow, \"Currently unavailable. Please try later.\");\n-        } else if (ex instanceof JpaSystemException) {\n+        } else if (ex instanceof UncategorizedDataAccessException) {\n             return builder(ClientExceptionType.DataIntegrityViolation, ExceptionUtils.getRootCauseMessage(ex));\n         } else if (ex instanceof ConfigurationException) {\n             return builder(ClientExceptionType.InvalidConnIdConf, ExceptionUtils.getRootCauseMessage(ex));"},{"sha":"4ad981ce3fbf9d23b196ac5584e1f29da44ad9dc","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/SyncopeOpenApiCustomizer.java","status":"modified","additions":35,"deletions":9,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FSyncopeOpenApiCustomizer.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -31,6 +31,7 @@\n import io.swagger.v3.oas.models.servers.Server;\n import java.net.URL;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.LinkedHashMap;\n import java.util.List;\n@@ -39,33 +40,58 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.cxf.jaxrs.ext.MessageContext;\n import org.apache.cxf.jaxrs.model.OperationResourceInfo;\n-import org.apache.cxf.jaxrs.model.doc.JavaDocProvider;\n import org.apache.cxf.jaxrs.openapi.OpenApiCustomizer;\n import org.apache.cxf.jaxrs.utils.JAXRSUtils;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.ErrorTO;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.core.persistence.api.DomainsHolder;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.context.EnvironmentAware;\n+import org.springframework.core.env.Environment;\n \n-public class SyncopeOpenApiCustomizer extends OpenApiCustomizer {\n+public class SyncopeOpenApiCustomizer extends OpenApiCustomizer implements EnvironmentAware {\n \n-    private JavaDocProvider javadocProvider;\n+    private static final Logger LOG = LoggerFactory.getLogger(WadlGenerator.class);\n+\n+    private Environment env;\n+\n+    private boolean inited = false;\n \n     private List<String> domains;\n \n-    public SyncopeOpenApiCustomizer() {\n-        super();\n+    @Override\n+    public void setEnvironment(final Environment env) {\n+        this.env = env;\n+    }\n \n-        URL[] javaDocURLs = JavaDocUtils.getJavaDocURLs();\n-        if (javaDocURLs != null) {\n-            this.javadocProvider = new JavaDocProvider(javaDocURLs);\n-            super.setJavadocProvider(javadocProvider);\n+    private void init() {\n+        synchronized (this) {\n+            if (!inited) {\n+                URL[] javaDocURLs = JavaDocUtils.getJavaDocURLs();\n+                if (javaDocURLs == null) {\n+                    String[] javaDocPaths = JavaDocUtils.getJavaDocPaths(env);\n+                    if (javaDocPaths != null) {\n+                        try {\n+                            super.setJavaDocPaths(javaDocPaths);\n+                        } catch (Exception e) {\n+                            LOG.error(\"Could not set javadoc paths from {}\", Arrays.asList(javaDocPaths), e);\n+                        }\n+                    }\n+                } else {\n+                    super.setJavaDocURLs(javaDocURLs);\n+                }\n+\n+                inited = true;\n+            }\n         }\n     }\n \n     @Override\n     public OpenAPIConfiguration customize(final OpenAPIConfiguration configuration) {\n+        init();\n         super.customize(configuration);\n \n         MessageContext ctx = JAXRSUtils.createContextValue("},{"sha":"89173b0a9e11907691095d4b95f5f091f50b3a4a","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/WADLInitializer.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLInitializer.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.rest.cxf;\n+\n+import javax.servlet.ServletContext;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRegistration;\n+import org.springframework.boot.web.servlet.ServletContextInitializer;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;\n+import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n+\n+@Configuration\n+public class WADLInitializer implements WebMvcConfigurer, ServletContextInitializer {\n+\n+    @Override\n+    public void addViewControllers(final ViewControllerRegistry registry) {\n+        registry.addViewController(\"/\").setViewName(\"forward:/index.html\");\n+    }\n+\n+    @Override\n+    public void onStartup(final ServletContext sc) throws ServletException {\n+        ServletRegistration.Dynamic wadlServlet = sc.addServlet(\"WADLServlet\", WADLServlet.class);\n+        wadlServlet.addMapping(\"/index.html\", \"/schema_1_syncope30.html\", \"/syncope.wadl\");\n+    }\n+}"},{"sha":"fe403e45fd3c908c5eda369457fab69c3a5faebe","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/WADLServlet.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLServlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLServlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWADLServlet.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -39,6 +39,7 @@\n import org.apache.cocoon.sax.component.XMLSerializer;\n import org.apache.cocoon.sax.component.XSLTTransformer;\n import org.apache.commons.io.IOUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n \n public class WADLServlet extends HttpServlet {\n@@ -78,7 +79,7 @@ protected void doGet(final HttpServletRequest request, final HttpServletResponse\n \n         Pipeline<SAXPipelineComponent> pipeline = new CachingPipeline<>();\n         pipeline.addComponent(new XMLGenerator(wadl));\n-        if (\"/index.html\".equals(request.getServletPath())) {\n+        if (StringUtils.isEmpty(request.getServletPath()) || \"/index.html\".equals(request.getServletPath())) {\n             XSLTTransformer xslt = new XSLTTransformer(getClass().getResource(\"/wadl2html/index.xsl\"));\n \n             Map<String, Object> parameters = new HashMap<>();\n@@ -112,5 +113,4 @@ protected void doGet(final HttpServletRequest request, final HttpServletResponse\n             throw new ServerException(\"URL not supported: \" + request.getRequestURI());\n         }\n     }\n-\n }"},{"sha":"94b23ff4e56b149ad69b16556ec84d1e70189b64","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/WadlGenerator.java","status":"modified","additions":25,"deletions":2,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWadlGenerator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWadlGenerator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FWadlGenerator.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -21,6 +21,7 @@\n import java.lang.annotation.Annotation;\n import java.net.URL;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collection;\n import java.util.List;\n import java.util.Map;\n@@ -32,21 +33,43 @@\n import org.apache.cxf.jaxrs.model.ClassResourceInfo;\n import org.apache.cxf.jaxrs.utils.InjectionUtils;\n import org.apache.cxf.jaxrs.utils.ResourceUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.context.EnvironmentAware;\n+import org.springframework.core.env.Environment;\n \n /**\n  * Automatically loads available javadocs from class loader (when {@link java.net.URLClassLoader}).\n  */\n-public class WadlGenerator extends org.apache.cxf.jaxrs.model.wadl.WadlGenerator {\n+public class WadlGenerator extends org.apache.cxf.jaxrs.model.wadl.WadlGenerator implements EnvironmentAware {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(WadlGenerator.class);\n+\n+    private Environment env;\n \n     private boolean inited = false;\n \n     private String wadl = null;\n \n+    @Override\n+    public void setEnvironment(final Environment env) {\n+        this.env = env;\n+    }\n+\n     private void init() {\n         synchronized (this) {\n             if (!inited) {\n                 URL[] javaDocURLs = JavaDocUtils.getJavaDocURLs();\n-                if (javaDocURLs != null) {\n+                if (javaDocURLs == null) {\n+                    String[] javaDocPaths = JavaDocUtils.getJavaDocPaths(env);\n+                    if (javaDocPaths != null) {\n+                        try {\n+                            super.setJavaDocPaths(javaDocPaths);\n+                        } catch (Exception e) {\n+                            LOG.error(\"Could not set javadoc paths from {}\", Arrays.asList(javaDocPaths), e);\n+                        }\n+                    }\n+                } else {\n                     super.setJavaDocURLs(javaDocURLs);\n                 }\n "},{"sha":"27c95cea43945910371f3c909e8365672dc0b782","filename":"core/idrepo/rest-cxf/src/main/resources/META-INF/spring.factories","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n+  org.apache.syncope.core.rest.cxf.RESTCXFContext,\\\n+  org.apache.syncope.core.rest.cxf.WADLInitializer"},{"sha":"b0062a49bf99fef509c806be4e01bb3971083853","filename":"core/idrepo/rest-cxf/src/main/resources/META-INF/web-fragment.xml","status":"removed","additions":0,"deletions":82,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,82 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<web-fragment xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n-              xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-              xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee \n-                                  http://xmlns.jcp.org/xml/ns/javaee/web-fragment_3_1.xsd\"\n-              id=\"${pom.artifactId}\" version=\"3.1\">\n-  \n-  <listener>\n-    <listener-class>org.apache.syncope.core.rest.cxf.ThreadLocalCleanupListener</listener-class>\n-  </listener>\n-  \n-  <servlet>\n-    <servlet-name>CXFServlet</servlet-name>\n-    <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>\n-    <init-param>\n-      <param-name>openapi.context.id</param-name>\n-      <param-value>openapi.context.id.default</param-value>\n-    </init-param>\n-    <load-on-startup>1</load-on-startup>\n-  </servlet>\n-  <servlet-mapping>\n-    <servlet-name>CXFServlet</servlet-name>\n-    <url-pattern>/rest/*</url-pattern>\n-  </servlet-mapping>\n-\n-  <servlet>\n-    <servlet-name>WADLServlet</servlet-name>\n-    <servlet-class>org.apache.syncope.core.rest.cxf.WADLServlet</servlet-class>\n-    <load-on-startup>2</load-on-startup> \n-  </servlet>\n-  <servlet-mapping>\n-    <servlet-name>WADLServlet</servlet-name>\n-    <url-pattern>/index.html</url-pattern>\n-    <url-pattern>/schema_1_syncope30.html</url-pattern>\n-    <url-pattern>/syncope.wadl</url-pattern>\n-  </servlet-mapping>\n-\n-  <filter>\n-    <filter-name>encodingFilter</filter-name>\n-    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>\n-    <init-param>\n-      <param-name>encoding</param-name>\n-      <param-value>UTF-8</param-value>\n-    </init-param>\n-    <init-param>\n-      <param-name>forceEncoding</param-name>\n-      <param-value>true</param-value>\n-    </init-param>\n-  </filter>\n-  <filter>\n-    <filter-name>springSecurityFilterChain</filter-name>\n-    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>\n-  </filter>\n-\n-  <filter-mapping>\n-    <filter-name>encodingFilter</filter-name>\n-    <url-pattern>/*</url-pattern>\n-  </filter-mapping>\n-  <filter-mapping>\n-    <filter-name>springSecurityFilterChain</filter-name>\n-    <url-pattern>/*</url-pattern>\n-  </filter-mapping>\n-\n-</web-fragment>"},{"sha":"d6d6350cfc435ce540576899a507dc25f3103012","filename":"core/idrepo/rest-cxf/src/main/resources/restCXFContext.xml","status":"modified","additions":0,"deletions":8,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fresources%2FrestCXFContext.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -20,22 +20,14 @@ under the License.\n <beans xmlns=\"http://www.springframework.org/schema/beans\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xmlns:jaxrs=\"http://cxf.apache.org/jaxrs\"\n-       xmlns:context=\"http://www.springframework.org/schema/context\"\n        xmlns:task=\"http://www.springframework.org/schema/task\"\n        xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n                            http://www.springframework.org/schema/beans/spring-beans.xsd\n                            http://cxf.apache.org/jaxrs\n                            http://cxf.apache.org/schemas/jaxrs.xsd\n-                           http://www.springframework.org/schema/context\n-                           http://www.springframework.org/schema/context/spring-context.xsd\n                            http://www.springframework.org/schema/task\n                            http://www.springframework.org/schema/task/spring-task.xsd\">\n \n-  <import resource=\"classpath:META-INF/cxf/cxf.xml\"/>\n-  <import resource=\"classpath:META-INF/cxf/cxf-servlet.xml\"/>\n-\n-  <context:component-scan base-package=\"org.apache.syncope.core.rest.cxf.service\"/>  \n-\n   <task:executor id=\"batchExecutor\" pool-size=\"10\"/>\n \n   <bean id=\"jaxbProvider\" class=\"org.apache.cxf.jaxrs.provider.JAXBElementProvider\">"},{"sha":"0ed30618b92376f7cdbd938f7d22c9bdbc41351c","filename":"core/persistence-api/pom.xml","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -42,7 +42,12 @@ under the License.\n       <groupId>javax.validation</groupId>\n       <artifactId>validation-api</artifactId>\n     </dependency>\n-      \n+\n+    <dependency>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-core</artifactId>\n+    </dependency>\n+\n     <dependency>\n       <groupId>net.tirasa.connid</groupId>\n       <artifactId>connector-framework</artifactId>"},{"sha":"78939469ae03b249937bcadb2fc49d655b87ecf8","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/ImplementationLookup.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -31,7 +31,7 @@\n import org.apache.syncope.core.persistence.api.dao.PushCorrelationRule;\n import org.apache.syncope.core.persistence.api.dao.Reportlet;\n \n-public interface ImplementationLookup extends SyncopeLoader {\n+public interface ImplementationLookup extends SyncopeCoreLoader {\n \n     Set<String> getClassNames(ImplementationType type);\n "},{"sha":"a5debbb10638b7b06c6b67ea77a37bfbeb26bf95","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/SyncopeCoreLoader.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FSyncopeCoreLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FSyncopeCoreLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FSyncopeCoreLoader.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.api;\n+\n+import javax.sql.DataSource;\n+import org.springframework.core.Ordered;\n+\n+public interface SyncopeCoreLoader extends Ordered {\n+\n+    /**\n+     * Perform generic (not related to any domain) initialization operations.\n+     */\n+    default void load() {\n+        // nothing to do\n+    }\n+\n+    /**\n+     * Perform initialization operations on the given domain.\n+     *\n+     * @param domain domain to initialize\n+     * @param datasource db access for the given domain\n+     */\n+    default void load(String domain, DataSource datasource) {\n+        // nothing to do        \n+    }\n+}"},{"sha":"442d3efdf6fd42b76d32e96bd1dd3a33a5e7412e","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/content/ContentDealer.java","status":"renamed","additions":3,"deletions":13,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fcontent%2FContentDealer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fcontent%2FContentDealer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fcontent%2FContentDealer.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -16,20 +16,10 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.api;\n+package org.apache.syncope.core.persistence.api.content;\n \n-/**\n- * Marker interface for Syncope components initialization.\n- */\n-public interface SyncopeLoader {\n+public interface ContentDealer {\n \n-    /**\n-     * @return the priority that the implementing class has in the initialization process.\n-     */\n-    Integer getPriority();\n+    String ROOT_ELEMENT = \"dataset\";\n \n-    /**\n-     * Perform initialization operations.\n-     */\n-    void load();\n }","previous_filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/SyncopeLoader.java"},{"sha":"abf58ea5ae8bc5dc3e7a4f0d07f81c5bc4589331","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/content/ContentExporter.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fcontent%2FContentExporter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fcontent%2FContentExporter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fcontent%2FContentExporter.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -22,8 +22,13 @@\n import javax.xml.transform.TransformerConfigurationException;\n import org.xml.sax.SAXException;\n \n-public interface ContentExporter {\n+public interface ContentExporter extends ContentDealer {\n \n-    void export(String domain, OutputStream output, String uwfPrefix, String gwfPrefix, String awfPrefix) \n+    void export(\n+            String domain,\n+            OutputStream output,\n+            String uwfPrefix,\n+            String gwfPrefix,\n+            String awfPrefix)\n             throws SAXException, TransformerConfigurationException;\n }"},{"sha":"61276acae92d553c50083ca33bdbb09197086dd8","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/content/ContentLoader.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fcontent%2FContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fcontent%2FContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fcontent%2FContentLoader.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -18,8 +18,7 @@\n  */\n package org.apache.syncope.core.persistence.api.content;\n \n-import org.apache.syncope.core.persistence.api.SyncopeLoader;\n-\n-public interface ContentLoader extends SyncopeLoader {\n+import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n \n+public interface ContentLoader extends SyncopeCoreLoader, ContentDealer {\n }"},{"sha":"911446e376af4834aa5ba9bcb39ccf076b4efbc5","filename":"core/persistence-jpa-json/pom.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa-json%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa-json%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -197,6 +197,10 @@ under the License.\n                     <ports>\n                       <port>5432:5432</port>\n                     </ports>\n+                    <wait>\n+                      <log>database system is ready to accept connections</log>\n+                      <time>30000</time>\n+                    </wait>\n                   </run>\n                 </image>\n               </images>"},{"sha":"1da8122e21b9c103530d04631ca0366159818658","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/DomainConfFactory.java","status":"added","additions":153,"deletions":0,"changes":153,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDomainConfFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDomainConfFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDomainConfFactory.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,153 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa;\n+\n+import com.zaxxer.hikari.HikariConfig;\n+import com.zaxxer.hikari.HikariDataSource;\n+import java.nio.charset.StandardCharsets;\n+import java.util.Collections;\n+import javax.sql.DataSource;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.request.DomainCR;\n+import org.apache.syncope.core.persistence.jpa.spring.DomainEntityManagerFactoryBean;\n+import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.beans.factory.support.AbstractBeanDefinition;\n+import org.springframework.beans.factory.support.AutowireCandidateQualifier;\n+import org.springframework.beans.factory.support.BeanDefinitionBuilder;\n+import org.springframework.context.EnvironmentAware;\n+import org.springframework.core.env.Environment;\n+import org.springframework.core.io.ClassPathResource;\n+import org.springframework.jdbc.datasource.init.DataSourceInitializer;\n+import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\n+import org.springframework.jndi.JndiObjectFactoryBean;\n+import org.springframework.orm.jpa.JpaTransactionManager;\n+import org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DomainConfFactory implements EnvironmentAware {\n+\n+    @Value(\"${content.directory}\")\n+    private String contentDirectory;\n+\n+    private Environment env;\n+\n+    @Override\n+    public void setEnvironment(final Environment env) {\n+        this.env = env;\n+    }\n+\n+    private void registerSingleton(final String name, final Object bean) {\n+        if (ApplicationContextProvider.getBeanFactory().containsSingleton(name)) {\n+            ApplicationContextProvider.getBeanFactory().destroySingleton(name);\n+        }\n+        ApplicationContextProvider.getBeanFactory().registerSingleton(name, bean);\n+    }\n+\n+    private void registerBeanDefinition(final String name, final BeanDefinition beanDefinition) {\n+        if (ApplicationContextProvider.getBeanFactory().containsBeanDefinition(name)) {\n+            ApplicationContextProvider.getBeanFactory().removeBeanDefinition(name);\n+        }\n+        ApplicationContextProvider.getBeanFactory().registerBeanDefinition(name, beanDefinition);\n+    }\n+\n+    public void register(final DomainCR req) {\n+        // localDomainDataSource\n+        HikariConfig hikariConfig = new HikariConfig();\n+        hikariConfig.setDriverClassName(req.getJdbcDriver());\n+        hikariConfig.setJdbcUrl(req.getJdbcURL());\n+        hikariConfig.setUsername(req.getDbUsername());\n+        hikariConfig.setPassword(req.getDbPassword());\n+        hikariConfig.setSchema(req.getDbSchema());\n+        hikariConfig.setTransactionIsolation(req.getTransactionIsolation());\n+        hikariConfig.setMaximumPoolSize(req.getMaxPoolSize());\n+        hikariConfig.setMinimumIdle(req.getMinIdle());\n+        String domainName = StringUtils.capitalize(req.getDomainName());\n+\n+        HikariDataSource localDomainDataSource = new HikariDataSource(hikariConfig);\n+\n+        // domainDataSource\n+        registerBeanDefinition(\n+                domainName + \"DataSource\",\n+                BeanDefinitionBuilder.rootBeanDefinition(JndiObjectFactoryBean.class).\n+                        addPropertyValue(\"jndiName\", \"java:comp/env/jdbc/syncope\" + domainName + \"DataSource\").\n+                        addPropertyValue(\"defaultObject\", localDomainDataSource).\n+                        getBeanDefinition());\n+        DataSource initedDataSource = ApplicationContextProvider.getBeanFactory().\n+                getBean(domainName + \"DataSource\", DataSource.class);\n+\n+        // domainResourceDatabasePopulator\n+        ResourceDatabasePopulator databasePopulator = new ResourceDatabasePopulator();\n+        databasePopulator.setContinueOnError(true);\n+        databasePopulator.setIgnoreFailedDrops(true);\n+        databasePopulator.setSqlScriptEncoding(StandardCharsets.UTF_8.name());\n+        databasePopulator.addScript(new ClassPathResource(\"/audit/\" + req.getAuditSql()));\n+\n+        registerSingleton(domainName.toLowerCase() + \"ResourceDatabasePopulator\", databasePopulator);\n+\n+        // domainDataSourceInitializer\n+        DataSourceInitializer dataSourceInitializer = new DataSourceInitializer();\n+        dataSourceInitializer.setDataSource(initedDataSource);\n+        dataSourceInitializer.setEnabled(true);\n+        dataSourceInitializer.setDatabasePopulator(databasePopulator);\n+        registerSingleton(domainName.toLowerCase() + \"DataSourceInitializer\", dataSourceInitializer);\n+\n+        // domainEntityManagerFactory\n+        OpenJpaVendorAdapter vendorAdapter = new OpenJpaVendorAdapter();\n+        vendorAdapter.setShowSql(false);\n+        vendorAdapter.setGenerateDdl(true);\n+        vendorAdapter.setDatabasePlatform(req.getDatabasePlatform());\n+\n+        BeanDefinitionBuilder emf = BeanDefinitionBuilder.rootBeanDefinition(DomainEntityManagerFactoryBean.class).\n+                addPropertyValue(\"mappingResources\", req.getOrm()).\n+                addPropertyValue(\"persistenceUnitName\", domainName).\n+                addPropertyReference(\"dataSource\", domainName + \"DataSource\").\n+                addPropertyValue(\"jpaVendorAdapter\", vendorAdapter).\n+                addPropertyReference(\"commonEntityManagerFactoryConf\", \"commonEMFConf\");\n+        if (env.containsProperty(\"openjpaMetaDataFactory\")) {\n+            emf.addPropertyValue(\"jpaPropertyMap\",\n+                    Collections.singletonMap(\n+                            \"openjpa.MetaDataFactory\",\n+                            env.getProperty(\"openjpaMetaDataFactory\").replace(\"##orm##\", req.getOrm())));\n+        }\n+        registerBeanDefinition(domainName + \"EntityManagerFactory\", emf.getBeanDefinition());\n+        ApplicationContextProvider.getBeanFactory().getBean(domainName + \"EntityManagerFactory\");\n+\n+        // domainTransactionManager\n+        AbstractBeanDefinition domainTransactionManager =\n+                BeanDefinitionBuilder.rootBeanDefinition(JpaTransactionManager.class).\n+                        addPropertyReference(\"entityManagerFactory\", domainName + \"EntityManagerFactory\").\n+                        getBeanDefinition();\n+        domainTransactionManager.addQualifier(new AutowireCandidateQualifier(Qualifier.class, domainName));\n+        registerBeanDefinition(domainName + \"TransactionManager\", domainTransactionManager);\n+\n+        // domainContentXML\n+        registerBeanDefinition(domainName + \"ContentXML\",\n+                BeanDefinitionBuilder.rootBeanDefinition(ResourceWithFallbackLoader.class)\n+                        .addPropertyValue(\n+                                \"primary\", \"file:\" + contentDirectory + \"/domains/\" + domainName + \"Content.xml\")\n+                        .addPropertyValue(\n+                                \"fallback\", \"classpath:domains/\" + domainName + \"Content.xml\")\n+                        .getBeanDefinition());\n+    }\n+}"},{"sha":"277bebcb5a7c4385e8b6b26f19fd2f094910a892","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/DomainLoader.java","status":"added","additions":105,"deletions":0,"changes":105,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDomainLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDomainLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDomainLoader.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,105 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa;\n+\n+import java.io.IOException;\n+import java.util.Enumeration;\n+import java.util.Properties;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.PropertyUtils;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.request.DomainCR;\n+import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.core.Ordered;\n+import org.springframework.core.io.Resource;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class DomainLoader implements SyncopeCoreLoader {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DomainLoader.class);\n+\n+    @Autowired\n+    private ApplicationContext ctx;\n+\n+    @Autowired\n+    private DomainConfFactory domainConfFactory;\n+\n+    @Value(\"${content.directory}\")\n+    private String contentDirectory;\n+\n+    @Override\n+    public int getOrder() {\n+        return Ordered.HIGHEST_PRECEDENCE;\n+    }\n+\n+    @Override\n+    public void load() {\n+        try {\n+            for (Resource domainProp : ctx.getResources(\"classpath:/domains/*.properties\")) {\n+                String domainPropFile = StringUtils.substringAfterLast(domainProp.getURL().toExternalForm(), \"/\");\n+                String domain = StringUtils.substringBefore(domainPropFile, \".\");\n+\n+                if (!SyncopeConstants.MASTER_DOMAIN.equals(domain)) {\n+                    DomainCR.Builder builder = new DomainCR.Builder(domain);\n+\n+                    LOG.info(\"Domain {} initialization\", domain);\n+\n+                    Properties props = PropertyUtils.read(getClass(), \"domains/\" + domainPropFile, contentDirectory);\n+                    for (Enumeration<?> e = props.propertyNames(); e.hasMoreElements();) {\n+                        String prop = (String) e.nextElement();\n+\n+                        if (prop.endsWith(\".driverClassName\")) {\n+                            builder.jdbcDriver(props.getProperty(prop));\n+                        } else if (prop.endsWith(\".url\")) {\n+                            builder.jdbcURL(props.getProperty(prop));\n+                        } else if (prop.endsWith(\".schema\")) {\n+                            builder.dbSchema(props.getProperty(prop));\n+                        } else if (prop.endsWith(\".username\")) {\n+                            builder.dbUsername(props.getProperty(prop));\n+                        } else if (prop.endsWith(\".password\")) {\n+                            builder.dbPassword(props.getProperty(prop));\n+                        } else if (prop.endsWith(\".databasePlatform\")) {\n+                            builder.databasePlatform(props.getProperty(prop));\n+                        } else if (prop.endsWith(\".orm\")) {\n+                            builder.orm(props.getProperty(prop));\n+                        } else if (prop.endsWith(\".pool.maxActive\")) {\n+                            builder.maxPoolSize(Integer.parseInt(props.getProperty(prop)));\n+                        } else if (prop.endsWith(\".pool.minIdle\")) {\n+                            builder.minIdle(Integer.parseInt(props.getProperty(prop)));\n+                        } else if (prop.endsWith(\".audit.sql\")) {\n+                            builder.auditSql(props.getProperty(prop));\n+                        }\n+                    }\n+\n+                    domainConfFactory.register(builder.build());\n+\n+                    LOG.info(\"Domain {} successfully inited\", domain);\n+                }\n+            }\n+        } catch (IOException e) {\n+            LOG.error(\"Error during domain initialization\", e);\n+        }\n+    }\n+}"},{"sha":"76a0fb71928b28faf1545a30f4c721ec9f699635","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/MasterDomain.java","status":"added","additions":184,"deletions":0,"changes":184,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FMasterDomain.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FMasterDomain.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FMasterDomain.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,184 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa;\n+\n+import com.zaxxer.hikari.HikariConfig;\n+import com.zaxxer.hikari.HikariDataSource;\n+import java.util.Collections;\n+import javax.sql.DataSource;\n+import org.apache.syncope.core.persistence.jpa.spring.CommonEntityManagerFactoryConf;\n+import org.apache.syncope.core.persistence.jpa.spring.DomainEntityManagerFactoryBean;\n+import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.EnvironmentAware;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.DependsOn;\n+import org.springframework.context.annotation.PropertySource;\n+import org.springframework.core.env.Environment;\n+import org.springframework.core.io.Resource;\n+import org.springframework.jdbc.datasource.init.DataSourceInitializer;\n+import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\n+import org.springframework.jndi.JndiObjectFactoryBean;\n+import org.springframework.orm.jpa.JpaTransactionManager;\n+import org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter;\n+import org.springframework.transaction.PlatformTransactionManager;\n+\n+@PropertySource(\"classpath:domains/Master.properties\")\n+@PropertySource(value = \"file:${conf.directory}/domains/Master.properties\", ignoreResourceNotFound = true)\n+@Configuration\n+public class MasterDomain implements EnvironmentAware {\n+\n+    private Environment env;\n+\n+    @Autowired\n+    private CommonEntityManagerFactoryConf commonEMFConf;\n+\n+    @Value(\"${Master.driverClassName}\")\n+    private String driverClassName;\n+\n+    @Value(\"${Master.url}\")\n+    private String url;\n+\n+    @Value(\"${Master.schema}\")\n+    private String schema;\n+\n+    @Value(\"${Master.username}\")\n+    private String username;\n+\n+    @Value(\"${Master.password}\")\n+    private String password;\n+\n+    @Value(\"${Master.pool.transactionIsolation:TRANSACTION_READ_COMMITTED}\")\n+    private String transactionIsolation;\n+\n+    @Value(\"${Master.pool.maxActive:10}\")\n+    private int maximumPoolSize;\n+\n+    @Value(\"${Master.pool.minIdle:2}\")\n+    private int minimumIdle;\n+\n+    @Value(\"classpath:/audit/${Master.audit.sql}\")\n+    private Resource auditSql;\n+\n+    @Value(\"${Master.orm}\")\n+    private String orm;\n+\n+    @Value(\"${Master.databasePlatform}\")\n+    private String databasePlatform;\n+\n+    @Value(\"${content.directory}\")\n+    private String contentDirectory;\n+\n+    @Override\n+    public void setEnvironment(final Environment env) {\n+        this.env = env;\n+    }\n+\n+    public DataSource localMasterDataSource() {\n+        HikariConfig hikariConfig = new HikariConfig();\n+        hikariConfig.setDriverClassName(driverClassName);\n+        hikariConfig.setJdbcUrl(url);\n+        hikariConfig.setUsername(username);\n+        hikariConfig.setPassword(password);\n+        hikariConfig.setTransactionIsolation(transactionIsolation);\n+        hikariConfig.setMaximumPoolSize(maximumPoolSize);\n+        hikariConfig.setMinimumIdle(minimumIdle);\n+        return new HikariDataSource(hikariConfig);\n+    }\n+\n+    @Bean(\"MasterDataSource\")\n+    public JndiObjectFactoryBean masterDataSource() {\n+        JndiObjectFactoryBean masterDataSource = new JndiObjectFactoryBean();\n+        masterDataSource.setJndiName(\"java:comp/env/jdbc/syncopeMasterDataSource\");\n+        masterDataSource.setDefaultObject(localMasterDataSource());\n+        return masterDataSource;\n+    }\n+\n+    @Bean\n+    public ResourceDatabasePopulator masterResourceDatabasePopulator() {\n+        ResourceDatabasePopulator databasePopulator = new ResourceDatabasePopulator();\n+        databasePopulator.setContinueOnError(true);\n+        databasePopulator.setIgnoreFailedDrops(true);\n+        databasePopulator.setSqlScriptEncoding(\"UTF-8\");\n+        databasePopulator.addScript(auditSql);\n+        return databasePopulator;\n+    }\n+\n+    @Bean\n+    public DataSourceInitializer masterDataSourceInitializer() {\n+        DataSourceInitializer dataSourceInitializer = new DataSourceInitializer();\n+        dataSourceInitializer.setDataSource((DataSource) masterDataSource().getObject());\n+        dataSourceInitializer.setEnabled(true);\n+        dataSourceInitializer.setDatabasePopulator(masterResourceDatabasePopulator());\n+        return dataSourceInitializer;\n+    }\n+\n+    @Bean(\"MasterEntityManagerFactory\")\n+    @DependsOn(\"commonEMFConf\")\n+    public DomainEntityManagerFactoryBean masterEntityManagerFactory() {\n+        OpenJpaVendorAdapter vendorAdapter = new OpenJpaVendorAdapter();\n+        vendorAdapter.setShowSql(false);\n+        vendorAdapter.setGenerateDdl(true);\n+        vendorAdapter.setDatabasePlatform(databasePlatform);\n+        DomainEntityManagerFactoryBean masterEntityManagerFactory = new DomainEntityManagerFactoryBean();\n+        masterEntityManagerFactory.setMappingResources(orm);\n+        masterEntityManagerFactory.setPersistenceUnitName(\"Master\");\n+        masterEntityManagerFactory.setDataSource((DataSource) masterDataSource().getObject());\n+        masterEntityManagerFactory.setJpaVendorAdapter(vendorAdapter);\n+        masterEntityManagerFactory.setCommonEntityManagerFactoryConf(commonEMFConf);\n+\n+        if (env.containsProperty(\"openjpaMetaDataFactory\")) {\n+            masterEntityManagerFactory.setJpaPropertyMap(Collections.singletonMap(\n+                    \"openjpa.MetaDataFactory\",\n+                    env.getProperty(\"openjpaMetaDataFactory\").replace(\"##orm##\", orm)));\n+        }\n+\n+        return masterEntityManagerFactory;\n+    }\n+\n+    @Bean(\"MasterTransactionManager\")\n+    @Qualifier(\"Master\")\n+    public PlatformTransactionManager transactionManager() {\n+        return new JpaTransactionManager(masterEntityManagerFactory().getObject());\n+    }\n+\n+    @Bean(\"MasterProperties\")\n+    public ResourceWithFallbackLoader masterProperties() {\n+        ResourceWithFallbackLoader masterProperties = new ResourceWithFallbackLoader();\n+        masterProperties.setPrimary(\"file:\" + contentDirectory + \"/domains/Master.properties\");\n+        masterProperties.setFallback(\"classpath:domains/Master.properties\");\n+        return masterProperties;\n+    }\n+\n+    @Bean(\"MasterContentXML\")\n+    public ResourceWithFallbackLoader masterContentXML() {\n+        ResourceWithFallbackLoader masterContentXML = new ResourceWithFallbackLoader();\n+        masterContentXML.setPrimary(\"file:\" + contentDirectory + \"/domains/MasterContent.xml\");\n+        masterContentXML.setFallback(\"classpath:domains/MasterContent.xml\");\n+        return masterContentXML;\n+    }\n+\n+    @Bean(\"MasterDatabaseSchema\")\n+    public String masterDatabaseSchema() {\n+        return schema;\n+    }\n+}"},{"sha":"d732fbdc43730afd4ca4101b7489a219609a1cf6","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/PersistenceContext.java","status":"added","additions":186,"deletions":0,"changes":186,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceContext.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,186 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import javax.persistence.ValidationMode;\n+import javax.validation.Validator;\n+import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n+import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n+import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n+import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n+import org.apache.syncope.core.persistence.api.dao.PlainAttrDAO;\n+import org.apache.syncope.core.persistence.api.dao.PlainAttrValueDAO;\n+import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n+import org.apache.syncope.core.persistence.api.dao.UserDAO;\n+import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n+import org.apache.syncope.core.persistence.jpa.spring.CommonEntityManagerFactoryConf;\n+import org.apache.syncope.core.persistence.jpa.spring.DomainTransactionInterceptorInjector;\n+import org.apache.syncope.core.persistence.jpa.spring.MultiJarAwarePersistenceUnitPostProcessor;\n+import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.config.BeanFactoryPostProcessor;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.context.EnvironmentAware;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.PropertySource;\n+import org.springframework.core.env.Environment;\n+import org.springframework.validation.beanvalidation.LocalValidatorFactoryBean;\n+\n+@PropertySource(\"classpath:persistence.properties\")\n+@PropertySource(value = \"file:${conf.directory}/persistence.properties\", ignoreResourceNotFound = true)\n+@ComponentScan(\"org.apache.syncope.core.persistence.jpa\")\n+@Configuration\n+public class PersistenceContext implements EnvironmentAware {\n+\n+    private static final Logger OPENJPA_LOG = LoggerFactory.getLogger(\"org.apache.openjpa\");\n+\n+    private Environment env;\n+\n+    @Override\n+    public void setEnvironment(final Environment env) {\n+        this.env = env;\n+    }\n+\n+    @Bean\n+    public static BeanFactoryPostProcessor domainTransactionInterceptorInjector() {\n+        return new DomainTransactionInterceptorInjector();\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public CommonEntityManagerFactoryConf commonEMFConf() {\n+        CommonEntityManagerFactoryConf commonEMFConf = new CommonEntityManagerFactoryConf();\n+        commonEMFConf.setPackagesToScan(\"org.apache.syncope.core.persistence.jpa.entity\");\n+        commonEMFConf.setValidationMode(ValidationMode.NONE);\n+        commonEMFConf.setPersistenceUnitPostProcessors(new MultiJarAwarePersistenceUnitPostProcessor());\n+        Map<String, Object> jpaPropertyMap = new HashMap<>();\n+\n+        jpaPropertyMap.put(\"openjpa.Log\", \"slf4j\");\n+        if (OPENJPA_LOG.isDebugEnabled()) {\n+            jpaPropertyMap.put(\"openjpa.Log\", \"SQL=TRACE\");\n+            jpaPropertyMap.put(\"openjpa.ConnectionFactoryProperties\",\n+                    \"PrintParameters=true, PrettyPrint=true, PrettyPrintLineLength=120\");\n+        }\n+\n+        jpaPropertyMap.put(\"openjpa.NontransactionalWrite\", false);\n+\n+        jpaPropertyMap.put(\"openjpa.jdbc.MappingDefaults\",\n+                \"ForeignKeyDeleteAction=restrict, JoinForeignKeyDeleteAction=restrict,\"\n+                + \"FieldStrategies='\"\n+                + \"java.util.Locale=org.apache.syncope.core.persistence.jpa.openjpa.LocaleValueHandler,\"\n+                + \"java.lang.Boolean=org.apache.syncope.core.persistence.jpa.openjpa.BooleanValueHandler'\");\n+\n+        jpaPropertyMap.put(\"openjpa.DataCache\", \"true\");\n+        jpaPropertyMap.put(\"openjpa.QueryCache\", \"true\");\n+\n+        jpaPropertyMap.put(\"openjpa.RemoteCommitProvider\", env.getProperty(\"openjpa.RemoteCommitProvider\", \"sjvm\"));\n+\n+        commonEMFConf.setJpaPropertyMap(jpaPropertyMap);\n+        return commonEMFConf;\n+    }\n+\n+    @Bean\n+    public EntityFactory entityFactory()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (EntityFactory) Class.forName(env.getProperty(\"entity.factory\")).newInstance();\n+    }\n+\n+    @Bean\n+    public PlainSchemaDAO plainSchemaDAO()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (PlainSchemaDAO) Class.forName(env.getProperty(\"plainSchema.dao\")).newInstance();\n+    }\n+\n+    @Bean\n+    public PlainAttrDAO plainAttrDAO()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (PlainAttrDAO) Class.forName(env.getProperty(\"plainAttr.dao\")).newInstance();\n+    }\n+\n+    @Bean\n+    public PlainAttrValueDAO plainAttrValueDAO()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (PlainAttrValueDAO) Class.forName(env.getProperty(\"plainAttrValue.dao\")).newInstance();\n+    }\n+\n+    @Bean\n+    public AnySearchDAO anySearchDAO()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (AnySearchDAO) Class.forName(env.getProperty(\"any.search.dao\")).newInstance();\n+    }\n+\n+    @Bean\n+    public UserDAO userDAO()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (UserDAO) Class.forName(env.getProperty(\"user.dao\")).newInstance();\n+    }\n+\n+    @Bean\n+    public GroupDAO groupDAO()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (GroupDAO) Class.forName(env.getProperty(\"group.dao\")).newInstance();\n+    }\n+\n+    @Bean\n+    public AnyObjectDAO anyObjectDAO()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (AnyObjectDAO) Class.forName(env.getProperty(\"anyObject.dao\")).newInstance();\n+    }\n+\n+    @Bean\n+    public ConfDAO confDAO()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (ConfDAO) Class.forName(env.getProperty(\"conf.dao\")).newInstance();\n+    }\n+\n+    @Bean\n+    public Validator localValidatorFactoryBean() {\n+        return new LocalValidatorFactoryBean();\n+    }\n+\n+    @Bean\n+    public ResourceWithFallbackLoader viewsXML() {\n+        ResourceWithFallbackLoader viewsXML = new ResourceWithFallbackLoader();\n+        viewsXML.setPrimary(\"file:\" + env.getProperty(\"content.directory\") + \"/views.xml\");\n+        viewsXML.setFallback(\"classpath:views.xml\");\n+        return viewsXML;\n+    }\n+\n+    @Bean\n+    public ResourceWithFallbackLoader indexesXML() {\n+        ResourceWithFallbackLoader indexesXML = new ResourceWithFallbackLoader();\n+        indexesXML.setPrimary(\"file:\" + env.getProperty(\"content.directory\") + \"/indexes.xml\");\n+        indexesXML.setFallback(\"classpath:indexes.xml\");\n+        return indexesXML;\n+    }\n+}"},{"sha":"885bab33b7b65d9a43632513e54aa7750d06be5e","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java","status":"modified","additions":15,"deletions":5,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -53,6 +53,7 @@\n import javax.xml.transform.stream.StreamResult;\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.core.persistence.api.DomainsHolder;\n import org.apache.syncope.core.provisioning.api.utils.FormatUtils;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.content.ContentExporter;\n@@ -73,6 +74,8 @@\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUPlainAttrValue;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAURelationship;\n import org.apache.syncope.core.persistence.jpa.entity.user.JPAUser;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.jdbc.datasource.DataSourceUtils;\n import org.springframework.stereotype.Component;\n@@ -83,22 +86,27 @@\n  * Export internal storage content as XML.\n  */\n @Component\n-public class XMLContentExporter extends AbstractContentDealer implements ContentExporter {\n+public class XMLContentExporter implements ContentExporter {\n \n-    protected static final Set<String> TABLE_PREFIXES_TO_BE_EXCLUDED = new HashSet<>(Arrays.asList(new String[] {\n+    private static final Logger LOG = LoggerFactory.getLogger(XMLContentExporter.class);\n+\n+    private static final Set<String> TABLE_PREFIXES_TO_BE_EXCLUDED = new HashSet<>(Arrays.asList(new String[] {\n         \"QRTZ_\", \"LOGGING\", JPAReportExec.TABLE, JPATaskExec.TABLE,\n         JPAUser.TABLE, JPAUPlainAttr.TABLE, JPAUPlainAttrValue.TABLE, JPAUPlainAttrUniqueValue.TABLE,\n         JPAURelationship.TABLE, JPAUMembership.TABLE,\n         JPAAnyObject.TABLE, JPAAPlainAttr.TABLE, JPAAPlainAttrValue.TABLE, JPAAPlainAttrUniqueValue.TABLE,\n         JPAARelationship.TABLE, JPAAMembership.TABLE, JPAAccessToken.TABLE\n     }));\n \n-    protected static final Map<String, String> TABLES_TO_BE_FILTERED =\n+    private static final Map<String, String> TABLES_TO_BE_FILTERED =\n             Collections.singletonMap(\"TASK\", \"DTYPE <> 'PropagationTask'\");\n \n-    protected static final Map<String, Set<String>> COLUMNS_TO_BE_NULLIFIED =\n+    private static final Map<String, Set<String>> COLUMNS_TO_BE_NULLIFIED =\n             Collections.singletonMap(\"SYNCOPEGROUP\", Collections.singleton(\"USEROWNER_ID\"));\n \n+    @Autowired\n+    private DomainsHolder domainsHolder;\n+\n     @Autowired\n     private RealmDAO realmDAO;\n \n@@ -376,7 +384,9 @@ public void export(\n             throw new IllegalArgumentException(\"Could not find DataSource for domain \" + domain);\n         }\n \n-        String schema = ApplicationContextProvider.getBeanFactory().getBean(domain + \"DatabaseSchema\", String.class);\n+        String schema = ApplicationContextProvider.getBeanFactory().containsBean(domain + \"DatabaseSchema\")\n+                ? ApplicationContextProvider.getBeanFactory().getBean(domain + \"DatabaseSchema\", String.class)\n+                : null;\n \n         Connection conn = null;\n         ResultSet rs = null;"},{"sha":"4c17337b7e61985d5554f71f29604afb18eb07c3","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentLoader.java","status":"modified","additions":45,"deletions":41,"changes":86,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentLoader.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -27,10 +27,12 @@\n import javax.xml.parsers.ParserConfigurationException;\n import javax.xml.parsers.SAXParser;\n import javax.xml.parsers.SAXParserFactory;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n-import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n import org.apache.syncope.core.persistence.api.content.ContentLoader;\n import org.apache.syncope.core.persistence.jpa.entity.conf.JPAConf;\n+import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.core.io.support.PropertiesLoaderUtils;\n import org.springframework.dao.DataAccessException;\n import org.springframework.jdbc.core.JdbcTemplate;\n@@ -42,7 +44,9 @@\n  * Initialize Database with default content if no data is present already.\n  */\n @Component\n-public class XMLContentLoader extends AbstractContentDealer implements ContentLoader {\n+public class XMLContentLoader implements ContentLoader {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(XMLContentLoader.class);\n \n     @Resource(name = \"viewsXML\")\n     private ResourceWithFallbackLoader viewsXML;\n@@ -51,50 +55,50 @@ public class XMLContentLoader extends AbstractContentDealer implements ContentLo\n     private ResourceWithFallbackLoader indexesXML;\n \n     @Override\n-    public Integer getPriority() {\n-        return 0;\n+    public int getOrder() {\n+        return 400;\n     }\n \n     @Override\n-    public void load() {\n-        domainsHolder.getDomains().forEach((domain, datasource) -> {\n-            // create EntityManager so OpenJPA will build the SQL schema\n-            EntityManagerFactoryUtils.findEntityManagerFactory(\n-                    ApplicationContextProvider.getBeanFactory(), domain).createEntityManager();\n-\n-            JdbcTemplate jdbcTemplate = new JdbcTemplate(datasource);\n-            boolean existingData;\n+    public void load(final String domain, final DataSource datasource) {\n+        LOG.debug(\"Loading data for domain [{}]\", domain);\n+\n+        // create EntityManager so OpenJPA will build the SQL schema\n+        EntityManagerFactoryUtils.findEntityManagerFactory(\n+                ApplicationContextProvider.getBeanFactory(), domain).createEntityManager();\n+\n+        JdbcTemplate jdbcTemplate = new JdbcTemplate(datasource);\n+        boolean existingData;\n+        try {\n+            existingData = jdbcTemplate.queryForObject(\"SELECT COUNT(0) FROM \" + JPAConf.TABLE, Integer.class) > 0;\n+        } catch (DataAccessException e) {\n+            LOG.error(\"[{}] Could not access to table \" + JPAConf.TABLE, domain, e);\n+            existingData = true;\n+        }\n+\n+        if (existingData) {\n+            LOG.info(\"[{}] Data found in the database, leaving untouched\", domain);\n+        } else {\n+            LOG.info(\"[{}] Empty database found, loading default content\", domain);\n+\n             try {\n-                existingData = jdbcTemplate.queryForObject(\"SELECT COUNT(0) FROM \" + JPAConf.TABLE, Integer.class) > 0;\n-            } catch (DataAccessException e) {\n-                LOG.error(\"[{}] Could not access to table \" + JPAConf.TABLE, domain, e);\n-                existingData = true;\n+                createViews(domain, datasource);\n+            } catch (IOException e) {\n+                LOG.error(\"[{}] While creating views\", domain, e);\n             }\n-\n-            if (existingData) {\n-                LOG.info(\"[{}] Data found in the database, leaving untouched\", domain);\n-            } else {\n-                LOG.info(\"[{}] Empty database found, loading default content\", domain);\n-\n-                try {\n-                    createViews(domain, datasource);\n-                } catch (IOException e) {\n-                    LOG.error(\"[{}] While creating views\", domain, e);\n-                }\n-                try {\n-                    createIndexes(domain, datasource);\n-                } catch (IOException e) {\n-                    LOG.error(\"[{}] While creating indexes\", domain, e);\n-                }\n-                try {\n-                    ResourceWithFallbackLoader contentXML = ApplicationContextProvider.getBeanFactory().\n-                            getBean(domain + \"ContentXML\", ResourceWithFallbackLoader.class);\n-                    loadDefaultContent(domain, contentXML, datasource);\n-                } catch (Exception e) {\n-                    LOG.error(\"[{}] While loading default content\", domain, e);\n-                }\n+            try {\n+                createIndexes(domain, datasource);\n+            } catch (IOException e) {\n+                LOG.error(\"[{}] While creating indexes\", domain, e);\n             }\n-        });\n+            try {\n+                ResourceWithFallbackLoader contentXML = ApplicationContextProvider.getBeanFactory().\n+                        getBean(domain + \"ContentXML\", ResourceWithFallbackLoader.class);\n+                loadDefaultContent(domain, contentXML, datasource);\n+            } catch (Exception e) {\n+                LOG.error(\"[{}] While loading default content\", domain, e);\n+            }\n+        }\n     }\n \n     private void loadDefaultContent("},{"sha":"d9afe3cf0ca502f7e926a7e29931300852159a2a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPADerSchemaDAO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADerSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADerSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADerSchemaDAO.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -27,12 +27,14 @@\n import org.apache.syncope.core.persistence.api.entity.DerSchema;\n import org.apache.syncope.core.persistence.jpa.entity.JPADerSchema;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Lazy;\n import org.springframework.stereotype.Repository;\n \n @Repository\n public class JPADerSchemaDAO extends AbstractDAO<DerSchema> implements DerSchemaDAO {\n \n     @Autowired\n+    @Lazy\n     private ExternalResourceDAO resourceDAO;\n \n     @Override"},{"sha":"89507b20faf631b197787f3430db3e9f0196571b","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/anyobject/JPAAPlainAttr.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAPlainAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAPlainAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fanyobject%2FJPAAPlainAttr.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -54,7 +54,7 @@ public class JPAAPlainAttr extends AbstractPlainAttr<AnyObject> implements APlai\n     @ManyToOne(fetch = FetchType.EAGER)\n     private JPAAMembership membership;\n \n-    @OneToMany(cascade = CascadeType.MERGE, orphanRemoval = true, mappedBy = \"attribute\")\n+    @OneToMany(cascade = { CascadeType.PERSIST, CascadeType.MERGE }, orphanRemoval = true, mappedBy = \"attribute\")\n     @Valid\n     private List<JPAAPlainAttrValue> values = new ArrayList<>();\n "},{"sha":"40fa835275e2a30116451775fa3fc36058bd3741","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/conf/JPACPlainAttr.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPACPlainAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPACPlainAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fconf%2FJPACPlainAttr.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -58,7 +58,7 @@ public class JPACPlainAttr extends AbstractPlainAttr<Conf> implements CPlainAttr\n     /**\n      * Values of this attribute (if schema is not UNIQUE).\n      */\n-    @OneToMany(cascade = CascadeType.MERGE, orphanRemoval = true, mappedBy = \"attribute\")\n+    @OneToMany(cascade = { CascadeType.PERSIST, CascadeType.MERGE }, orphanRemoval = true, mappedBy = \"attribute\")\n     @Valid\n     private List<JPACPlainAttrValue> values = new ArrayList<>();\n "},{"sha":"b6d5d86584b701eaf3360844f706d0b4abb9c5f5","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/group/JPAGPlainAttr.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAGPlainAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAGPlainAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fgroup%2FJPAGPlainAttr.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -47,7 +47,7 @@ public class JPAGPlainAttr extends AbstractPlainAttr<Group> implements GPlainAtt\n     @ManyToOne(fetch = FetchType.EAGER)\n     private JPAGroup owner;\n \n-    @OneToMany(cascade = CascadeType.MERGE, orphanRemoval = true, mappedBy = \"attribute\")\n+    @OneToMany(cascade = { CascadeType.PERSIST, CascadeType.MERGE }, orphanRemoval = true, mappedBy = \"attribute\")\n     @Valid\n     private List<JPAGPlainAttrValue> values = new ArrayList<>();\n "},{"sha":"9069e283ec8ac33259e37008326419a66091d1c2","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAUPlainAttr.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUPlainAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUPlainAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUPlainAttr.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -60,7 +60,7 @@ public class JPAUPlainAttr extends AbstractPlainAttr<User> implements UPlainAttr\n     /**\n      * Values of this attribute (if schema is not UNIQUE).\n      */\n-    @OneToMany(cascade = CascadeType.MERGE, orphanRemoval = true, mappedBy = \"attribute\")\n+    @OneToMany(cascade = { CascadeType.PERSIST, CascadeType.MERGE }, orphanRemoval = true, mappedBy = \"attribute\")\n     @Valid\n     private List<JPAUPlainAttrValue> values = new ArrayList<>();\n "},{"sha":"3dfb385df57d39ec080c0f2014ec7dd9c146a625","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/spring/DomainTransactionAnnotationParser.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fspring%2FDomainTransactionAnnotationParser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fspring%2FDomainTransactionAnnotationParser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fspring%2FDomainTransactionAnnotationParser.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa.spring;\n+\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n+import org.springframework.core.annotation.AnnotationAttributes;\n+import org.springframework.transaction.annotation.SpringTransactionAnnotationParser;\n+import org.springframework.transaction.interceptor.RuleBasedTransactionAttribute;\n+import org.springframework.transaction.interceptor.TransactionAttribute;\n+\n+public class DomainTransactionAnnotationParser extends SpringTransactionAnnotationParser {\n+\n+    private static final long serialVersionUID = -1490842839439224837L;\n+\n+    @Override\n+    protected TransactionAttribute parseTransactionAnnotation(final AnnotationAttributes attributes) {\n+        RuleBasedTransactionAttribute rbta =\n+                (RuleBasedTransactionAttribute) super.parseTransactionAnnotation(attributes);\n+        rbta.setQualifier(AuthContextUtils.getDomain());\n+        return rbta;\n+    }\n+}"},{"sha":"82b85b77cf05ec64636416c72aa53c1ff3ebe8c6","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/spring/DomainTransactionInterceptor.java","status":"modified","additions":5,"deletions":15,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fspring%2FDomainTransactionInterceptor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fspring%2FDomainTransactionInterceptor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fspring%2FDomainTransactionInterceptor.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -18,20 +18,20 @@\n  */\n package org.apache.syncope.core.persistence.jpa.spring;\n \n-import java.lang.reflect.Method;\n import org.aopalliance.intercept.MethodInvocation;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.transaction.interceptor.DefaultTransactionAttribute;\n-import org.springframework.transaction.interceptor.TransactionAttribute;\n+import org.springframework.transaction.annotation.AnnotationTransactionAttributeSource;\n import org.springframework.transaction.interceptor.TransactionAttributeSource;\n import org.springframework.transaction.interceptor.TransactionInterceptor;\n \n /**\n  * Extends the standard {@link TransactionInterceptor} by dynamically setting the appropriate\n- * {@link TransactionAttribute} qualifier according to the authentication domain of the caller - retrieved via\n+ * {@link TransactionAttributeSource} qualifier according to the authentication domain of the caller - retrieved via\n  * {@link AuthContextUtils#getDomain()}.\n+ *\n+ * @see DomainTransactionAnnotationParser\n  */\n public class DomainTransactionInterceptor extends TransactionInterceptor {\n \n@@ -41,17 +41,7 @@ public class DomainTransactionInterceptor extends TransactionInterceptor {\n \n     @Override\n     public TransactionAttributeSource getTransactionAttributeSource() {\n-        final TransactionAttributeSource origTxAttrSource = super.getTransactionAttributeSource();\n-\n-        return (final Method method, final Class<?> targetClass) -> {\n-            TransactionAttribute txAttr = origTxAttrSource.getTransactionAttribute(method, targetClass);\n-\n-            if (txAttr instanceof DefaultTransactionAttribute) {\n-                ((DefaultTransactionAttribute) txAttr).setQualifier(AuthContextUtils.getDomain());\n-            }\n-\n-            return txAttr;\n-        };\n+        return new AnnotationTransactionAttributeSource(new DomainTransactionAnnotationParser());\n     }\n \n     @Override"},{"sha":"357bf23dea9c3f1231fc86aa3e3afed2c9f339de","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/spring/DomainTransactionInterceptorInjector.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fspring%2FDomainTransactionInterceptorInjector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fspring%2FDomainTransactionInterceptorInjector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fspring%2FDomainTransactionInterceptorInjector.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -31,8 +31,11 @@ public class DomainTransactionInterceptorInjector implements BeanFactoryPostProc\n \n     @Override\n     public void postProcessBeanFactory(final ConfigurableListableBeanFactory beanFactory) throws BeansException {\n-        BeanDefinition bd = beanFactory.getBeanDefinition(TransactionInterceptor.class.getName() + \"#0\");\n-        bd.setBeanClassName(DomainTransactionInterceptor.class.getName());\n+        for (String name : beanFactory.getBeanNamesForType(TransactionInterceptor.class)) {\n+            BeanDefinition bd = beanFactory.getBeanDefinition(name);\n+            bd.setBeanClassName(DomainTransactionInterceptor.class.getName());\n+            bd.setFactoryBeanName(null);\n+            bd.setFactoryMethodName(null);\n+        }\n     }\n-\n }"},{"sha":"fa2d638edd1dd142fb6d2b7686da945ecaf059ae","filename":"core/persistence-jpa/src/main/resources/META-INF/spring.factories","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n+  org.apache.syncope.core.persistence.jpa.PersistenceContext,\\\n+  org.apache.syncope.core.persistence.jpa.MasterDomain"},{"sha":"75cba84a7ea5b4c2f13a17461eb32412023dad8a","filename":"core/persistence-jpa/src/main/resources/domains.xml","status":"removed","additions":0,"deletions":61,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,61 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\">\n-  \n-  <import resource=\"classpath*:domains/*Domain.xml\"/>\n-  \n-  <bean class=\"org.apache.syncope.core.persistence.jpa.spring.DomainTransactionInterceptorInjector\"/>\n-  \n-  <bean id=\"commonEMFConf\" class=\"org.apache.syncope.core.persistence.jpa.spring.CommonEntityManagerFactoryConf\">\n-    <property name=\"packagesToScan\" value=\"org.apache.syncope.core.persistence.jpa.entity\"/>\n-    <property name=\"validationMode\" value=\"NONE\"/>\n-    <property name=\"persistenceUnitPostProcessors\">\n-      <list>\n-        <bean class=\"org.apache.syncope.core.persistence.jpa.spring.MultiJarAwarePersistenceUnitPostProcessor\"/>\n-      </list>\n-    </property>\n-    <property name=\"jpaPropertyMap\">\n-      <map>\n-        <entry key=\"openjpa.Log\" value=\"slf4j\"/>\n-        <!--<entry key=\"openjpa.Log\" value=\"SQL=TRACE\"/>\n-        <entry key=\"openjpa.ConnectionFactoryProperties\" \n-        value=\"PrintParameters=true, PrettyPrint=true, PrettyPrintLineLength=80\"/>-->\n-                                \n-        <entry key=\"openjpa.NontransactionalWrite\" value=\"false\"/>\n-\n-        <!-- Removed: see https://s.apache.org/openjpaSchemaFactory for more information\n-        <entry key=\"openjpa.jdbc.SchemaFactory\" value=\"native(ForeignKeys=true)\"/>-->\n-        <entry key=\"openjpa.jdbc.MappingDefaults\" \n-               value=\"ForeignKeyDeleteAction=restrict, JoinForeignKeyDeleteAction=restrict,\n-                      FieldStrategies='\n-                        java.util.Locale=org.apache.syncope.core.persistence.jpa.openjpa.LocaleValueHandler,\n-                        java.lang.Boolean=org.apache.syncope.core.persistence.jpa.openjpa.BooleanValueHandler'\"/>\n-                \n-        <entry key=\"openjpa.DataCache\" value=\"true\"/>\n-        <entry key=\"openjpa.QueryCache\" value=\"true\"/>\n-        <entry key=\"openjpa.RemoteCommitProvider\" value=\"${openjpa.RemoteCommitProvider:sjvm}\"/>\n-      </map>\n-    </property>\n-  </bean>\n-  \n-</beans>"},{"sha":"722b32cbe05b11a9d55177662e8aefff68e5bac7","filename":"core/persistence-jpa/src/main/resources/domains/MasterDomain.xml","status":"removed","additions":0,"deletions":110,"changes":110,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterDomain.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterDomain.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMasterDomain.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,110 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:tx=\"http://www.springframework.org/schema/tx\"\n-       xmlns:util=\"http://www.springframework.org/schema/util\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd                           \n-                           http://www.springframework.org/schema/tx\n-                           http://www.springframework.org/schema/tx/spring-tx.xsd\n-                           http://www.springframework.org/schema/util\n-                           http://www.springframework.org/schema/util/spring-util.xsd\">\n-  \n-  <bean id=\"MasterContentXML\" class=\"org.apache.syncope.core.spring.ResourceWithFallbackLoader\">\n-    <property name=\"primary\" value=\"file:${content.directory}/domains/MasterContent.xml\"/>\n-    <property name=\"fallback\" value=\"classpath:domains/MasterContent.xml\"/>\n-  </bean>\n-  <bean id=\"MasterProperties\" class=\"org.apache.syncope.core.spring.ResourceWithFallbackLoader\">\n-    <property name=\"primary\" value=\"file:${content.directory}/domains/Master.properties\"/>\n-    <property name=\"fallback\" value=\"classpath:domains/Master.properties\"/>\n-  </bean>\n-  <bean id=\"MasterDatabaseSchema\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${Master.schema}\"/>\n-  </bean>\n-\n-  <!-- Use JNDI datasource as default but, when not available, revert to\n-  local datasource, with different properties for execution and testing. \n-  In any case, get all JDBC connections with a determined isolation level. -->\n-  <bean id=\"MasterDataSource\" class=\"org.springframework.jndi.JndiObjectFactoryBean\" primary=\"true\">\n-    <property name=\"jndiName\" value=\"java:comp/env/jdbc/syncopeMasterDataSource\"/>\n-    <property name=\"defaultObject\" ref=\"localMasterDataSource\"/>\n-  </bean>\n-\n-  <bean id=\"localMasterDataSource\" class=\"com.zaxxer.hikari.HikariDataSource\" destroy-method=\"close\">\n-    <property name=\"driverClassName\" value=\"${Master.driverClassName}\"/>\n-    <property name=\"jdbcUrl\" value=\"${Master.url}\"/>\n-    <property name=\"username\" value=\"${Master.username}\"/>\n-    <property name=\"password\" value=\"${Master.password}\"/>\n-    <!-- connection pool configuration - transaction isolation, default READ_COMMITTED (see SYNCOPE-202) -->\n-    <property name=\"transactionIsolation\">\n-      <util:constant static-field=\"${Master.pool.transactionIsolation:java.sql.Connection.TRANSACTION_READ_COMMITTED}\"/>\n-    </property>\n-    <!-- connection pool configuration - default values taken from HikariConfig default values -->\n-    <property name=\"maximumPoolSize\" value=\"${Master.pool.maxActive:8}\"/>\n-    <property name=\"minimumIdle\" value=\"${Master.pool.minIdle:0}\"/>\n-  </bean>\n-  \n-  <bean class=\"org.springframework.jdbc.datasource.init.DataSourceInitializer\">\n-    <property name=\"dataSource\" ref=\"MasterDataSource\"/>\n-    <property name=\"enabled\" value=\"true\"/>\n-    <property name=\"databasePopulator\">\n-      <bean class=\"org.springframework.jdbc.datasource.init.ResourceDatabasePopulator\">\n-        <property name=\"continueOnError\" value=\"true\"/>\n-        <property name=\"ignoreFailedDrops\" value=\"true\"/>\n-        <property name=\"sqlScriptEncoding\" value=\"UTF-8\"/>\n-        <property name=\"scripts\">\n-          <array>\n-            <value type=\"org.springframework.core.io.Resource\">\n-              classpath:/audit/${Master.audit.sql}\n-            </value>\n-          </array>\n-        </property>\n-      </bean>\n-    </property>\n-  </bean>\n-  \n-  <bean id=\"MasterEntityManagerFactory\"\n-        class=\"org.apache.syncope.core.persistence.jpa.spring.DomainEntityManagerFactoryBean\">\n-    <property name=\"mappingResources\">\n-      <list>\n-        <value>${Master.orm}</value>\n-      </list>\n-    </property>\n-    <property name=\"persistenceUnitName\" value=\"Master\"/>\n-    <property name=\"dataSource\" ref=\"MasterDataSource\"/>\n-    <property name=\"jpaVendorAdapter\">\n-      <bean class=\"org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter\">\n-        <property name=\"showSql\" value=\"false\"/>\n-        <property name=\"generateDdl\" value=\"true\"/>\n-        <property name=\"databasePlatform\" value=\"${Master.databasePlatform}\"/>\n-      </bean>\n-    </property>\n-    <property name=\"commonEntityManagerFactoryConf\" ref=\"commonEMFConf\"/>\n-  </bean>  \n-\n-  <bean id=\"MasterTransactionManager\" class=\"org.springframework.orm.jpa.JpaTransactionManager\">\n-    <property name=\"entityManagerFactory\" ref=\"MasterEntityManagerFactory\"/>\n-    <qualifier value=\"Master\"/>\n-  </bean>\n-  \n-  <tx:annotation-driven transaction-manager=\"MasterTransactionManager\"/>\n-  \n-</beans>\n\\ No newline at end of file"},{"sha":"577ab7853f8a50ed1f7f62321c8f3aaa1451613f","filename":"core/persistence-jpa/src/main/resources/persistenceContext.xml","status":"removed","additions":0,"deletions":54,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fresources%2FpersistenceContext.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,54 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:context=\"http://www.springframework.org/schema/context\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\n-                           http://www.springframework.org/schema/context\n-                           http://www.springframework.org/schema/context/spring-context.xsd\">\n-  \n-  <import resource=\"domains.xml\"/>\n-\n-  <context:annotation-config/>\n-  \n-  <context:component-scan base-package=\"org.apache.syncope.core.persistence.jpa\"/>\n-  <bean class=\"${entity.factory}\"/>\n-  <bean class=\"${plainSchema.dao}\"/>\n-  <bean class=\"${plainAttr.dao}\"/>\n-  <bean class=\"${plainAttrValue.dao}\"/>\n-  <bean class=\"${any.search.dao}\"/>\n-  <bean class=\"${user.dao}\"/>\n-  <bean class=\"${group.dao}\"/>\n-  <bean class=\"${anyObject.dao}\"/>\n-  <bean class=\"${conf.dao}\"/>\n-\n-  <bean class=\"org.springframework.validation.beanvalidation.LocalValidatorFactoryBean\"/>\n-\n-  <bean id=\"viewsXML\" class=\"org.apache.syncope.core.spring.ResourceWithFallbackLoader\">\n-    <property name=\"primary\" value=\"file:${content.directory}/views.xml\"/>\n-    <property name=\"fallback\" value=\"classpath:views.xml\"/>\n-  </bean>\n-  <bean id=\"indexesXML\" class=\"org.apache.syncope.core.spring.ResourceWithFallbackLoader\">\n-    <property name=\"primary\" value=\"file:${content.directory}/indexes.xml\"/>\n-    <property name=\"fallback\" value=\"classpath:indexes.xml\"/>\n-  </bean>\n-  \n-</beans>"},{"sha":"a112e7f516bc6657e6de7236a7f905ac92af1020","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/AbstractTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FAbstractTest.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -31,7 +31,7 @@\n import org.springframework.orm.jpa.EntityManagerFactoryUtils;\n import org.springframework.test.context.junit.jupiter.SpringJUnitConfig;\n \n-@SpringJUnitConfig(locations = { \"classpath:persistenceTest.xml\" })\n+@SpringJUnitConfig(classes = { PersistenceTestContext.class })\n public abstract class AbstractTest {\n \n     @Autowired"},{"sha":"c80c33cb00efada03a5e762ec0330350e6aa25e1","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/DummyImplementationLookup.java","status":"modified","additions":1,"deletions":7,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDummyImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDummyImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FDummyImplementationLookup.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -42,15 +42,10 @@\n public class DummyImplementationLookup implements ImplementationLookup {\n \n     @Override\n-    public Integer getPriority() {\n+    public int getOrder() {\n         return -1;\n     }\n \n-    @Override\n-    public void load() {\n-        // do nothing\n-    }\n-\n     @Override\n     public Set<String> getClassNames(final ImplementationType type) {\n         return Collections.emptySet();\n@@ -100,5 +95,4 @@ public Class<? extends PushCorrelationRule> getPushCorrelationRuleClass(\n     public Set<Class<?>> getAuditAppenderClasses() {\n         return Collections.emptySet();\n     }\n-\n }"},{"sha":"a25f912afdde8efd89de1d9a1d3156c2130bd154","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/PersistenceTestContext.java","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceTestContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceTestContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FPersistenceTestContext.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.jpa;\n+\n+import java.io.IOException;\n+import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.spring.security.DefaultPasswordGenerator;\n+import org.apache.syncope.core.spring.security.PasswordGenerator;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Import;\n+import org.springframework.context.annotation.PropertySource;\n+import org.springframework.context.support.PropertySourcesPlaceholderConfigurer;\n+\n+@PropertySource(\"classpath:security.properties\")\n+@Import(PersistenceContext.class)\n+@Configuration\n+public class PersistenceTestContext {\n+\n+    @Value(\"${adminUser}\")\n+    private String adminUser;\n+\n+    @Value(\"${anonymousUser}\")\n+    private String anonymousUser;\n+\n+    @Bean\n+    public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() throws IOException {\n+        PropertySourcesPlaceholderConfigurer pspc = new PropertySourcesPlaceholderConfigurer();\n+        pspc.setIgnoreResourceNotFound(true);\n+        pspc.setIgnoreUnresolvablePlaceholders(true);\n+        return pspc;\n+    }\n+\n+    @Bean\n+    public String adminUser() {\n+        return adminUser;\n+    }\n+\n+    @Bean\n+    public String anonymousUser() {\n+        return anonymousUser;\n+    }\n+\n+    @Bean\n+    public ApplicationContextProvider applicationContextProvider() {\n+        return new ApplicationContextProvider();\n+    }\n+\n+    @Bean\n+    public PasswordGenerator passwordGenerator() {\n+        return new DefaultPasswordGenerator();\n+    }\n+}"},{"sha":"49ab215effececae1b78d9f3717733f461d80e54","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/TestInitializer.java","status":"modified","additions":36,"deletions":3,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FTestInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FTestInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2FTestInitializer.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -18,20 +18,53 @@\n  */\n package org.apache.syncope.core.persistence.jpa;\n \n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.core.persistence.api.DomainsHolder;\n import org.apache.syncope.core.persistence.api.content.ContentLoader;\n+import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.springframework.beans.BeansException;\n import org.springframework.beans.factory.InitializingBean;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.support.DefaultListableBeanFactory;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.ApplicationContextAware;\n+import org.springframework.context.ConfigurableApplicationContext;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class TestInitializer implements InitializingBean {\n+public class TestInitializer implements InitializingBean, ApplicationContextAware {\n+\n+    private ConfigurableApplicationContext ctx;\n+\n+    @Autowired\n+    private DomainLoader domainLoader;\n+\n+    @Autowired\n+    private DomainsHolder domainsHolder;\n \n     @Autowired\n     private ContentLoader contentLoader;\n \n     @Override\n-    public void afterPropertiesSet() throws Exception {\n-        contentLoader.load();\n+    public void setApplicationContext(final ApplicationContext ctx) throws BeansException {\n+        this.ctx = (ConfigurableApplicationContext) ctx;\n     }\n \n+    @Override\n+    public void afterPropertiesSet() throws Exception {\n+        ApplicationContextProvider.setApplicationContext(ctx);\n+        ApplicationContextProvider.setBeanFactory((DefaultListableBeanFactory) ctx.getBeanFactory());\n+\n+        domainLoader.load();\n+\n+        contentLoader.load(\n+                SyncopeConstants.MASTER_DOMAIN,\n+                domainsHolder.getDomains().get(SyncopeConstants.MASTER_DOMAIN));\n+        if (domainsHolder.getDomains().containsKey(\"Two\")) {\n+            contentLoader.load(\n+                    \"Two\",\n+                    domainsHolder.getDomains().get(\"Two\"));\n+        }\n+\n+    }\n }"},{"sha":"fe30eee498fbeab7e736ffae64cf0299b082f6f4","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/PlainSchemaTest.java","status":"modified","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPlainSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPlainSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FPlainSchemaTest.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -177,7 +177,7 @@ public void deleteFullname() {\n \n     @Test\n     public void deleteSurname() {\n-        // search for user schema fullname\n+        // search for user schema surname\n         PlainSchema schema = plainSchemaDAO.find(\"surname\");\n         assertNotNull(schema);\n \n@@ -202,7 +202,7 @@ public void deleteSurname() {\n         assertEquals(5, labels.size());\n         assertEquals(2, schema.getLabels().size());\n \n-        // delete user schema fullname\n+        // delete user schema surname\n         plainSchemaDAO.delete(\"surname\");\n \n         entityManager().flush();\n@@ -218,15 +218,13 @@ public void deleteSurname() {\n \n     @Test\n     public void deleteFirstname() {\n-        assertEquals(6, resourceDAO.find(\"resource-db-pull\").\n-                getProvision(anyTypeDAO.findUser()).get().getMapping().getItems().size());\n+        int pre = resourceDAO.find(\"resource-db-pull\").\n+                getProvision(anyTypeDAO.findUser()).get().getMapping().getItems().size();\n \n         plainSchemaDAO.delete(\"firstname\");\n         assertNull(plainSchemaDAO.find(\"firstname\"));\n \n-        entityManager().flush();\n-\n-        assertEquals(5, resourceDAO.find(\"resource-db-pull\").\n+        assertEquals(pre - 1, resourceDAO.find(\"resource-db-pull\").\n                 getProvision(anyTypeDAO.findUser()).get().getMapping().getItems().size());\n     }\n }"},{"sha":"e11614d0b91c078c84bddc8106bf2f13cac5404a","filename":"core/persistence-jpa/src/test/resources/domains/Two.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwo.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwo.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwo.properties?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n Two.driverClassName=org.h2.Driver\n-Two.url=jdbc:h2:file:${conf.directory}/syncopetwo.db\n+Two.url=jdbc:h2:mem:syncopetwo;DB_CLOSE_DELAY=-1\n Two.schema=\n Two.username=sa\n Two.password="},{"sha":"d0b741ffaba0adb276362f20be5accedc9c17431","filename":"core/persistence-jpa/src/test/resources/domains/TwoDomain.xml","status":"removed","additions":0,"deletions":110,"changes":110,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoDomain.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoDomain.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoDomain.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,110 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:tx=\"http://www.springframework.org/schema/tx\"\n-       xmlns:util=\"http://www.springframework.org/schema/util\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd                           \n-                           http://www.springframework.org/schema/tx\n-                           http://www.springframework.org/schema/tx/spring-tx.xsd\n-                           http://www.springframework.org/schema/util\n-                           http://www.springframework.org/schema/util/spring-util.xsd\">\n-  \n-  <bean id=\"TwoContentXML\" class=\"org.apache.syncope.core.spring.ResourceWithFallbackLoader\">\n-    <property name=\"primary\" value=\"file:${content.directory}/domains/TwoContent.xml\"/>\n-    <property name=\"fallback\" value=\"classpath:domains/TwoContent.xml\"/>\n-  </bean>\n-  <bean id=\"TwoProperties\" class=\"org.apache.syncope.core.spring.ResourceWithFallbackLoader\">\n-    <property name=\"primary\" value=\"file:${content.directory}/domains/Two.properties\"/>\n-    <property name=\"fallback\" value=\"classpath:domains/Two.properties\"/>\n-  </bean>\n-  <bean id=\"TwoDatabaseSchema\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${Two.schema}\"/>\n-  </bean>\n-\n-  <!-- Use JNDI datasource as default but, when not available, revert to\n-  local datasource, with different properties for execution and testing. \n-  In any case, get all JDBC connections with a determined isolation level. -->\n-  <bean id=\"TwoDataSource\" class=\"org.springframework.jndi.JndiObjectFactoryBean\" primary=\"true\">\n-    <property name=\"jndiName\" value=\"java:comp/env/jdbc/syncopeTwoDataSource\"/>\n-    <property name=\"defaultObject\" ref=\"localTwoDataSource\"/>\n-  </bean>\n-\n-  <bean id=\"localTwoDataSource\" class=\"com.zaxxer.hikari.HikariDataSource\" destroy-method=\"close\">\n-    <property name=\"driverClassName\" value=\"${Two.driverClassName}\"/>\n-    <property name=\"jdbcUrl\" value=\"${Two.url}\"/>\n-    <property name=\"username\" value=\"${Two.username}\"/>\n-    <property name=\"password\" value=\"${Two.password}\"/>\n-    <!-- connection pool configuration - transaction isolation, default READ_COMMITTED (see SYNCOPE-202) -->\n-    <property name=\"transactionIsolation\">\n-      <util:constant static-field=\"${Two.pool.transactionIsolation:java.sql.Connection.TRANSACTION_READ_COMMITTED}\"/>\n-    </property>\n-    <!-- connection pool configuration - default values taken from HikariConfig default values -->\n-    <property name=\"maximumPoolSize\" value=\"${Two.pool.maxActive:8}\"/>\n-    <property name=\"minimumIdle\" value=\"${Two.pool.minIdle:0}\"/>\n-  </bean>\n-  \n-  <bean class=\"org.springframework.jdbc.datasource.init.DataSourceInitializer\">\n-    <property name=\"dataSource\" ref=\"TwoDataSource\"/>\n-    <property name=\"enabled\" value=\"true\"/>\n-    <property name=\"databasePopulator\">\n-      <bean class=\"org.springframework.jdbc.datasource.init.ResourceDatabasePopulator\">\n-        <property name=\"continueOnError\" value=\"true\"/>\n-        <property name=\"ignoreFailedDrops\" value=\"true\"/>\n-        <property name=\"sqlScriptEncoding\" value=\"UTF-8\"/>\n-        <property name=\"scripts\">\n-          <array>\n-            <value type=\"org.springframework.core.io.Resource\">\n-              classpath:/audit/${Two.audit.sql}\n-            </value>\n-          </array>\n-        </property>\n-      </bean>\n-    </property>\n-  </bean>\n-  \n-  <bean id=\"TwoEntityManagerFactory\"\n-        class=\"org.apache.syncope.core.persistence.jpa.spring.DomainEntityManagerFactoryBean\">\n-    <property name=\"mappingResources\">\n-      <list>\n-        <value>${Two.orm}</value>\n-      </list>\n-    </property>\n-    <property name=\"persistenceUnitName\" value=\"Two\"/>\n-    <property name=\"dataSource\" ref=\"TwoDataSource\"/>\n-    <property name=\"jpaVendorAdapter\">\n-      <bean class=\"org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter\">\n-        <property name=\"showSql\" value=\"false\"/>\n-        <property name=\"generateDdl\" value=\"true\"/>\n-        <property name=\"databasePlatform\" value=\"${Two.databasePlatform}\"/>\n-      </bean>\n-    </property>\n-    <property name=\"commonEntityManagerFactoryConf\" ref=\"commonEMFConf\"/>\n-  </bean>  \n-\n-  <bean id=\"TwoTransactionManager\" class=\"org.springframework.orm.jpa.JpaTransactionManager\">\n-    <property name=\"entityManagerFactory\" ref=\"TwoEntityManagerFactory\"/>\n-    <qualifier value=\"Two\"/>\n-  </bean>\n-  \n-  <tx:annotation-driven transaction-manager=\"TwoTransactionManager\"/>\n-\n-</beans>"},{"sha":"80f854bf7f861f8f7e17b8ad5208811d1632de6f","filename":"core/persistence-jpa/src/test/resources/persistenceTest.xml","status":"removed","additions":0,"deletions":55,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2FpersistenceTest.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2FpersistenceTest.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2FpersistenceTest.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,55 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:context=\"http://www.springframework.org/schema/context\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\n-                           http://www.springframework.org/schema/context\n-                           http://www.springframework.org/schema/context/spring-context.xsd\">\n-\n-  <bean class=\"org.springframework.context.support.PropertySourcesPlaceholderConfigurer\">\n-    <property name=\"locations\">\n-      <list>\n-        <value>classpath:persistence.properties</value>\n-        <value>classpath:domains/*.properties</value>\n-        <value>classpath:security.properties</value>\n-      </list>\n-    </property>\n-    <property name=\"ignoreResourceNotFound\" value=\"true\"/>\n-    <property name=\"ignoreUnresolvablePlaceholders\" value=\"true\"/>\n-  </bean>\n-  \n-  <bean class=\"org.apache.syncope.core.spring.ApplicationContextProvider\"/>\n-\n-  <bean id=\"adminUser\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${adminUser}\"/>\n-  </bean>\n-  <bean id=\"anonymousUser\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${anonymousUser}\"/>\n-  </bean>\n-  \n-  <context:component-scan base-package=\"org.apache.syncope.core.spring.security\"/>\n-\n-  <bean class=\"org.apache.syncope.core.spring.security.DefaultPasswordGenerator\"/>\n-\n-  <import resource=\"persistenceContext.xml\"/>\n-\n-</beans>"},{"sha":"aed76432415db69152e5b999a4a909efcf38af7e","filename":"core/pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -87,6 +87,7 @@ under the License.\n     <module>provisioning-java</module>\n     <module>workflow-api</module>\n     <module>workflow-java</module>\n+    <module>starter</module>\n     <module>upgrade</module>\n   </modules>\n </project>"},{"sha":"5db2ff722b72cafbadfa20cf24b7c8d02c4a6734","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorLoader.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorLoader.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java;\n+\n+import javax.sql.DataSource;\n+import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n+import org.apache.syncope.core.provisioning.api.ConnectorFactory;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class ConnectorLoader implements SyncopeCoreLoader {\n+\n+    @Autowired\n+    private ConnectorFactory connectorFactory;\n+\n+    @Override\n+    public int getOrder() {\n+        return 100;\n+    }\n+\n+    @Override\n+    public void load(final String domain, final DataSource datasource) {\n+        AuthContextUtils.execWithAuthContext(domain, () -> {\n+            connectorFactory.load();\n+            return null;\n+        });\n+    }\n+}"},{"sha":"ba2f27723cda54f5f7c88debb6533a6477154cae","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorManager.java","status":"modified","additions":1,"deletions":7,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorManager.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -27,7 +27,6 @@\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.types.ConnectorCapability;\n-import org.apache.syncope.core.persistence.api.SyncopeLoader;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n@@ -49,7 +48,7 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Component\n-public class ConnectorManager implements ConnectorRegistry, ConnectorFactory, SyncopeLoader {\n+public class ConnectorManager implements ConnectorRegistry, ConnectorFactory {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ConnectorManager.class);\n \n@@ -67,11 +66,6 @@ public class ConnectorManager implements ConnectorRegistry, ConnectorFactory, Sy\n \n     private EntityFactory entityFactory;\n \n-    @Override\n-    public Integer getPriority() {\n-        return 100;\n-    }\n-\n     private String getBeanName(final ExternalResource resource) {\n         return String.format(\"connInstance-%s-%S-%s\",\n                 AuthContextUtils.getDomain(), resource.getConnector().getKey(), resource.getKey());"},{"sha":"c4de2433fa35ebd72fb05c84e21d98b83f6c4c86","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ProvisioningContext.java","status":"added","additions":109,"deletions":0,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,109 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java;\n+\n+import org.apache.syncope.core.provisioning.api.AnyObjectProvisioningManager;\n+import org.apache.syncope.core.provisioning.api.AuditManager;\n+import org.apache.syncope.core.provisioning.api.GroupProvisioningManager;\n+import org.apache.syncope.core.provisioning.api.UserProvisioningManager;\n+import org.apache.syncope.core.provisioning.api.cache.VirAttrCache;\n+import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n+import org.springframework.context.EnvironmentAware;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.ImportResource;\n+import org.springframework.context.annotation.PropertySource;\n+import org.springframework.core.env.Environment;\n+\n+@PropertySource(\"classpath:connid.properties\")\n+@PropertySource(\"classpath:mail.properties\")\n+@PropertySource(\"classpath:provisioning.properties\")\n+@PropertySource(value = \"file:${conf.directory}/connid.properties\", ignoreResourceNotFound = true)\n+@PropertySource(value = \"file:${conf.directory}/mail.properties\", ignoreResourceNotFound = true)\n+@PropertySource(value = \"file:${conf.directory}/provisioning.properties\", ignoreResourceNotFound = true)\n+@ImportResource(\"classpath:/provisioningContext.xml\")\n+@ComponentScan(\"org.apache.syncope.core.provisioning.java\")\n+@Configuration\n+public class ProvisioningContext implements EnvironmentAware {\n+\n+    private Environment env;\n+\n+    @Override\n+    public void setEnvironment(final Environment env) {\n+        this.env = env;\n+    }\n+\n+    @Bean\n+    public PropagationTaskExecutor propagationTaskExecutor()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (PropagationTaskExecutor) Class.forName(env.getProperty(\"propagationTaskExecutor\")).\n+                newInstance();\n+    }\n+\n+    @Bean\n+    public UserProvisioningManager userProvisioningManager()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (UserProvisioningManager) Class.forName(env.getProperty(\"userProvisioningManager\")).\n+                newInstance();\n+    }\n+\n+    @Bean\n+    public GroupProvisioningManager groupProvisioningManager()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (GroupProvisioningManager) Class.forName(env.getProperty(\"groupProvisioningManager\")).\n+                newInstance();\n+    }\n+\n+    @Bean\n+    public AnyObjectProvisioningManager anyObjectProvisioningManager()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (AnyObjectProvisioningManager) Class.forName(env.getProperty(\"anyObjectProvisioningManager\")).\n+                newInstance();\n+    }\n+\n+    @Bean\n+    public VirAttrCache virAttrCache()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (VirAttrCache) Class.forName(env.getProperty(\"virAttrCache\")).\n+                newInstance();\n+    }\n+\n+    @Bean\n+    public NotificationManager notificationManager()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (NotificationManager) Class.forName(env.getProperty(\"notificationManager\")).\n+                newInstance();\n+    }\n+\n+    @Bean\n+    public AuditManager auditManager()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (AuditManager) Class.forName(env.getProperty(\"auditManager\")).\n+                newInstance();\n+    }\n+}"},{"sha":"2a38f1e11aecc4c4253e4ad1605761817eeeac3d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/JobManagerImpl.java","status":"modified","additions":62,"deletions":64,"changes":126,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FJobManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FJobManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FJobManagerImpl.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -22,6 +22,7 @@\n import java.sql.PreparedStatement;\n import java.sql.ResultSet;\n import java.sql.SQLException;\n+import java.util.Collections;\n import java.util.Date;\n import java.util.HashMap;\n import java.util.HashSet;\n@@ -47,8 +48,8 @@\n import org.apache.syncope.core.provisioning.api.job.JobNamer;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n-import org.apache.syncope.core.persistence.api.SyncopeLoader;\n import org.apache.syncope.core.persistence.api.DomainsHolder;\n+import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n import org.apache.syncope.core.persistence.api.dao.ImplementationDAO;\n import org.apache.syncope.core.persistence.api.entity.Implementation;\n import org.quartz.CronScheduleBuilder;\n@@ -78,7 +79,7 @@\n import org.apache.syncope.core.provisioning.java.pushpull.PullJobDelegate;\n import org.apache.syncope.core.provisioning.java.pushpull.PushJobDelegate;\n \n-public class JobManagerImpl implements JobManager, SyncopeLoader {\n+public class JobManagerImpl implements JobManager, SyncopeCoreLoader {\n \n     private static final Logger LOG = LoggerFactory.getLogger(JobManager.class);\n \n@@ -290,13 +291,13 @@ public void unregister(final Report report) {\n     }\n \n     @Override\n-    public Integer getPriority() {\n-        return 200;\n+    public int getOrder() {\n+        return 500;\n     }\n \n     @Transactional\n     @Override\n-    public void load() {\n+    public void load(final String domain, final DataSource datasource) {\n         if (disableQuartzInstance) {\n             String instanceId = \"AUTO\";\n             try {\n@@ -311,7 +312,7 @@ public void load() {\n             return;\n         }\n \n-        final Pair<String, Long> conf = AuthContextUtils.execWithAuthContext(SyncopeConstants.MASTER_DOMAIN, () -> {\n+        Pair<String, Long> conf = AuthContextUtils.execWithAuthContext(SyncopeConstants.MASTER_DOMAIN, () -> {\n             String notificationJobCronExpression = StringUtils.EMPTY;\n \n             Optional<? extends CPlainAttr> notificationJobCronExp = confDAO.find(\"notificationjob.cronExpression\");\n@@ -326,83 +327,80 @@ public void load() {\n             return Pair.of(notificationJobCronExpression, interruptMaxRetries);\n         });\n \n-        for (String domain : domainsHolder.getDomains().keySet()) {\n-            AuthContextUtils.execWithAuthContext(domain, () -> {\n-                // 1. jobs for SchedTasks\n-                Set<SchedTask> tasks = new HashSet<>(taskDAO.<SchedTask>findAll(TaskType.SCHEDULED));\n-                tasks.addAll(taskDAO.<PullTask>findAll(TaskType.PULL));\n-                tasks.addAll(taskDAO.<PushTask>findAll(TaskType.PUSH));\n+        AuthContextUtils.execWithAuthContext(domain, () -> {\n+            // 1. jobs for SchedTasks\n+            Set<SchedTask> tasks = new HashSet<>(taskDAO.<SchedTask>findAll(TaskType.SCHEDULED));\n+            tasks.addAll(taskDAO.<PullTask>findAll(TaskType.PULL));\n+            tasks.addAll(taskDAO.<PushTask>findAll(TaskType.PUSH));\n \n-                boolean loadException = false;\n-                for (Iterator<SchedTask> it = tasks.iterator(); it.hasNext() && !loadException;) {\n-                    SchedTask task = it.next();\n+            boolean loadException = false;\n+            for (Iterator<SchedTask> it = tasks.iterator(); it.hasNext() && !loadException;) {\n+                SchedTask task = it.next();\n+                try {\n+                    register(task, task.getStartAt(), conf.getRight());\n+                } catch (Exception e) {\n+                    LOG.error(\"While loading job instance for task \" + task.getKey(), e);\n+                    loadException = true;\n+                }\n+            }\n+\n+            if (loadException) {\n+                LOG.debug(\"Errors while loading job instances for tasks, aborting\");\n+            } else {\n+                // 2. jobs for Reports\n+                for (Iterator<Report> it = reportDAO.findAll().iterator(); it.hasNext() && !loadException;) {\n+                    Report report = it.next();\n                     try {\n-                        register(task, task.getStartAt(), conf.getRight());\n+                        register(report, null, conf.getRight());\n                     } catch (Exception e) {\n-                        LOG.error(\"While loading job instance for task \" + task.getKey(), e);\n+                        LOG.error(\"While loading job instance for report \" + report.getName(), e);\n                         loadException = true;\n                     }\n                 }\n \n                 if (loadException) {\n-                    LOG.debug(\"Errors while loading job instances for tasks, aborting\");\n-                } else {\n-                    // 2. jobs for Reports\n-                    for (Iterator<Report> it = reportDAO.findAll().iterator(); it.hasNext() && !loadException;) {\n-                        Report report = it.next();\n-                        try {\n-                            register(report, null, conf.getRight());\n-                        } catch (Exception e) {\n-                            LOG.error(\"While loading job instance for report \" + report.getName(), e);\n-                            loadException = true;\n-                        }\n-                    }\n-\n-                    if (loadException) {\n-                        LOG.debug(\"Errors while loading job instances for reports, aborting\");\n-                    }\n+                    LOG.debug(\"Errors while loading job instances for reports, aborting\");\n                 }\n+            }\n \n-                return null;\n-            });\n-        }\n+            return null;\n+        });\n \n-        Map<String, Object> jobMap = new HashMap<>();\n-        jobMap.put(JobManager.DOMAIN_KEY, AuthContextUtils.getDomain());\n+        if (SyncopeConstants.MASTER_DOMAIN.equals(domain)) {\n+            // 3. NotificationJob\n+            if (StringUtils.isBlank(conf.getLeft())) {\n+                LOG.debug(\"Empty value provided for {}'s cron, not registering anything on Quartz\",\n+                        NotificationJob.class.getSimpleName());\n+            } else {\n+                LOG.debug(\"{}'s cron expression: {} - registering Quartz job and trigger\",\n+                        NotificationJob.class.getSimpleName(), conf.getLeft());\n \n-        // 3. NotificationJob\n-        if (StringUtils.isBlank(conf.getLeft())) {\n-            LOG.debug(\"Empty value provided for {}'s cron, not registering anything on Quartz\",\n-                    NotificationJob.class.getSimpleName());\n-        } else {\n-            LOG.debug(\"{}'s cron expression: {} - registering Quartz job and trigger\",\n-                    NotificationJob.class.getSimpleName(), conf.getLeft());\n+                try {\n+                    NotificationJob job = createSpringBean(NotificationJob.class);\n+                    registerJob(\n+                            NOTIFICATION_JOB.getName(),\n+                            job,\n+                            conf.getLeft(),\n+                            null,\n+                            Collections.emptyMap());\n+                } catch (Exception e) {\n+                    LOG.error(\"While loading {} instance\", NotificationJob.class.getSimpleName(), e);\n+                }\n+            }\n \n+            // 4. SystemLoadReporterJob (fixed schedule, every minute)\n+            LOG.debug(\"Registering {}\", SystemLoadReporterJob.class);\n             try {\n-                NotificationJob job = createSpringBean(NotificationJob.class);\n+                SystemLoadReporterJob job = createSpringBean(SystemLoadReporterJob.class);\n                 registerJob(\n-                        NOTIFICATION_JOB.getName(),\n+                        StringUtils.uncapitalize(SystemLoadReporterJob.class.getSimpleName()),\n                         job,\n-                        conf.getLeft(),\n+                        \"0 * * * * ?\",\n                         null,\n-                        jobMap);\n+                        Collections.emptyMap());\n             } catch (Exception e) {\n-                LOG.error(\"While loading {} instance\", NotificationJob.class.getSimpleName(), e);\n+                LOG.error(\"While loading {} instance\", SystemLoadReporterJob.class.getSimpleName(), e);\n             }\n         }\n-\n-        // 4. SystemLoadReporterJob (fixed schedule, every minute)\n-        LOG.debug(\"Registering {}\", SystemLoadReporterJob.class);\n-        try {\n-            SystemLoadReporterJob job = createSpringBean(SystemLoadReporterJob.class);\n-            registerJob(\n-                    StringUtils.uncapitalize(SystemLoadReporterJob.class.getSimpleName()),\n-                    job,\n-                    \"0 * * * * ?\",\n-                    null,\n-                    jobMap);\n-        } catch (Exception e) {\n-            LOG.error(\"While loading {} instance\", SystemLoadReporterJob.class.getSimpleName(), e);\n-        }\n     }\n }"},{"sha":"23b34de5e3b72c069b2e7bec918d0d44344a4ce4","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/notification/DefaultNotificationJobDelegate.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FDefaultNotificationJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FDefaultNotificationJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2Fnotification%2FDefaultNotificationJobDelegate.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -87,7 +87,7 @@ public void afterPropertiesSet() throws Exception {\n \n             Properties javaMailProperties = javaMailSender.getJavaMailProperties();\n \n-            Properties props = PropertyUtils.read(Encryptor.class, \"mail.properties\", \"conf.directory\").getLeft();\n+            Properties props = PropertyUtils.read(Encryptor.class, \"mail.properties\", \"conf.directory\");\n             for (Enumeration<?> e = props.propertyNames(); e.hasMoreElements();) {\n                 String prop = (String) e.nextElement();\n                 if (prop.startsWith(\"mail.smtp.\")) {"},{"sha":"d8ce641543a881a8774fbe15947fdc9800bccb3f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -66,7 +66,6 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n \n-@Transactional(rollbackFor = Throwable.class)\n public abstract class AbstractPullResultHandler extends AbstractSyncopeResultHandler<PullTask, PullActions>\n         implements SyncopePullResultHandler {\n \n@@ -113,15 +112,15 @@ public void setPullExecutor(final SyncopePullExecutor executor) {\n         this.executor = executor;\n     }\n \n+    @Transactional\n     @Override\n     public boolean handle(final SyncDelta delta) {\n         Provision provision = null;\n         try {\n-            provision = profile.getTask().getResource().getProvision(delta.getObject().getObjectClass()).orElse(null);\n-            if (provision == null) {\n-                throw new JobExecutionException(\"No provision found on \" + profile.getTask().getResource() + \" for \"\n-                        + delta.getObject().getObjectClass());\n-            }\n+            provision = profile.getTask().getResource().getProvision(delta.getObject().getObjectClass()).\n+                    orElseThrow(() -> new JobExecutionException(\n+                    \"No provision found on \" + profile.getTask().getResource() + \" for \"\n+                    + delta.getObject().getObjectClass()));\n \n             doHandle(delta, provision);\n             executor.reportHandled(delta.getObjectClass(), delta.getObject().getName());\n@@ -649,7 +648,7 @@ protected List<ProvisioningReport> delete(\n \n         List<ProvisioningReport> results = new ArrayList<>();\n \n-        for (String key : anyKeys) {\n+        anyKeys.forEach(key -> {\n             Object output;\n             Result resultStatus = Result.FAILURE;\n \n@@ -711,7 +710,7 @@ protected List<ProvisioningReport> delete(\n             } catch (Exception e) {\n                 LOG.error(\"Could not delete {} {}\", provision.getAnyType().getKey(), key, e);\n             }\n-        }\n+        });\n \n         return results;\n     }"},{"sha":"0c9c1e3b11b2e7e28ad538c0cff6521fbd8896e7","filename":"core/provisioning-java/src/main/resources/META-INF/spring.factories","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n+  org.apache.syncope.core.provisioning.java.ProvisioningContext"},{"sha":"51ee36b1b31157486c7f0fc7c11f56c7ebe528e2","filename":"core/provisioning-java/src/main/resources/provisioningContext.xml","status":"modified","additions":0,"deletions":17,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -19,17 +19,12 @@ under the License.\n -->\n <beans xmlns=\"http://www.springframework.org/schema/beans\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:context=\"http://www.springframework.org/schema/context\"\n        xmlns:task=\"http://www.springframework.org/schema/task\"\n        xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n                            http://www.springframework.org/schema/beans/spring-beans.xsd\n-                           http://www.springframework.org/schema/context\n-                           http://www.springframework.org/schema/context/spring-context.xsd\n                            http://www.springframework.org/schema/task\n                            http://www.springframework.org/schema/task/spring-task.xsd\">\n   \n-  <context:component-scan base-package=\"org.apache.syncope.core.provisioning.java\"/>\n-\n   <!-- Used by AsyncConnectorFacade -->\n   <task:annotation-driven executor=\"asyncConnectorFacadeExecutor\"/>\n   <task:executor id=\"asyncConnectorFacadeExecutor\"\n@@ -40,13 +35,6 @@ under the License.\n                  pool-size=\"${propagationTaskExecutorAsyncExecutor.poolSize}\"\n                  queue-capacity=\"${propagationTaskExecutorAsyncExecutor.queueCapacity}\"\n                  rejection-policy=\"ABORT\"/>\n-  <bean class=\"${propagationTaskExecutor}\"/>\n-  \n-  <bean class=\"${userProvisioningManager}\"/>\n-  <bean class=\"${groupProvisioningManager}\"/>\n-  <bean class=\"${anyObjectProvisioningManager}\"/>\n-  <bean class=\"${notificationManager}\"/>\n-  <bean class=\"${auditManager}\"/>\n \n   <bean id=\"quartzDataSourceInit\" class=\"org.apache.syncope.core.provisioning.java.job.SchedulerDBInit\">\n     <property name=\"dataSource\" ref=\"MasterDataSource\"/>\n@@ -109,11 +97,6 @@ under the License.\n \n   <bean class=\"org.apache.syncope.core.provisioning.java.propagation.PropagationManagerImpl\"/>\n \n-  <bean id=\"virAttrCache\" class=\"${virAttrCache}\" scope=\"singleton\">\n-    <property name=\"ttl\" value=\"60\"/>\n-    <property name=\"maxCacheSize\" value=\"5000\"/>\n-  </bean>\n-\n   <bean id=\"connIdBundleManager\" class=\"org.apache.syncope.core.provisioning.java.ConnIdBundleManagerImpl\">\n     <property name=\"stringLocations\" value=\"${connid.locations}\"/>\n   </bean>"},{"sha":"b120f9384b38b0ab5971114eed41a89d7937f944","filename":"core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/AbstractTest.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAbstractTest.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -24,12 +24,7 @@\n import org.springframework.orm.jpa.EntityManagerFactoryUtils;\n import org.springframework.test.context.junit.jupiter.SpringJUnitConfig;\n \n-@SpringJUnitConfig(locations = {\n-    \"classpath:persistenceTest.xml\",\n-    \"classpath:provisioningContext.xml\",\n-    \"classpath:workflowContext.xml\",\n-    \"classpath:provisioningTest.xml\"\n-})\n+@SpringJUnitConfig(classes = { ProvisioningTestContext.class })\n public abstract class AbstractTest {\n \n     protected EntityManager entityManager() {"},{"sha":"91fce4d6f090396e8485161bb49385109309019f","filename":"core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/DummyImplementationLookup.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDummyImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDummyImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDummyImplementationLookup.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -42,15 +42,10 @@\n public class DummyImplementationLookup implements ImplementationLookup {\n \n     @Override\n-    public Integer getPriority() {\n+    public int getOrder() {\n         return -1;\n     }\n \n-    @Override\n-    public void load() {\n-        // do nothing\n-    }\n-\n     @Override\n     public Set<String> getClassNames(final ImplementationType type) {\n         return Collections.emptySet();"},{"sha":"0b5123c76912e0d37dfcabeaf88da166a99e17b6","filename":"core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/ProvisioningTestContext.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningTestContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningTestContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningTestContext.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java;\n+\n+import java.io.IOException;\n+import org.apache.syncope.core.persistence.jpa.PersistenceContext;\n+import org.apache.syncope.core.spring.security.SecurityContext;\n+import org.apache.syncope.core.workflow.java.WorkflowContext;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Import;\n+import org.springframework.context.support.PropertySourcesPlaceholderConfigurer;\n+\n+@Import({ SecurityContext.class, PersistenceContext.class, ProvisioningContext.class, WorkflowContext.class })\n+@Configuration\n+public class ProvisioningTestContext {\n+\n+    @Bean\n+    public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() throws IOException {\n+        PropertySourcesPlaceholderConfigurer pspc = new PropertySourcesPlaceholderConfigurer();\n+        pspc.setIgnoreResourceNotFound(true);\n+        pspc.setIgnoreUnresolvablePlaceholders(true);\n+        return pspc;\n+    }\n+}"},{"sha":"99cba077b45996be02850724d185eaed8329a91e","filename":"core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/TestInitializer.java","status":"modified","additions":36,"deletions":3,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FTestInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FTestInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FTestInitializer.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -18,20 +18,53 @@\n  */\n package org.apache.syncope.core.provisioning.java;\n \n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.core.persistence.api.DomainsHolder;\n import org.apache.syncope.core.persistence.api.content.ContentLoader;\n+import org.apache.syncope.core.persistence.jpa.DomainLoader;\n+import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.springframework.beans.BeansException;\n import org.springframework.beans.factory.InitializingBean;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.support.DefaultListableBeanFactory;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.ApplicationContextAware;\n+import org.springframework.context.ConfigurableApplicationContext;\n import org.springframework.stereotype.Component;\n+import org.springframework.transaction.support.TransactionSynchronizationManager;\n \n @Component\n-public class TestInitializer implements InitializingBean {\n+public class TestInitializer implements InitializingBean, ApplicationContextAware {\n+\n+    private ConfigurableApplicationContext ctx;\n+\n+    @Autowired\n+    private DomainLoader domainLoader;\n+\n+    @Autowired\n+    private DomainsHolder domainsHolder;\n \n     @Autowired\n     private ContentLoader contentLoader;\n \n     @Override\n-    public void afterPropertiesSet() throws Exception {\n-        contentLoader.load();\n+    public void setApplicationContext(final ApplicationContext ctx) throws BeansException {\n+        this.ctx = (ConfigurableApplicationContext) ctx;\n     }\n \n+    @Override\n+    public void afterPropertiesSet() throws Exception {\n+        ApplicationContextProvider.setApplicationContext(ctx);\n+        ApplicationContextProvider.setBeanFactory((DefaultListableBeanFactory) ctx.getBeanFactory());\n+\n+        if (!TransactionSynchronizationManager.isSynchronizationActive()) {\n+            TransactionSynchronizationManager.initSynchronization();\n+        }\n+\n+        domainLoader.load();\n+\n+        contentLoader.load(\n+                SyncopeConstants.MASTER_DOMAIN,\n+                domainsHolder.getDomains().get(SyncopeConstants.MASTER_DOMAIN));\n+    }\n }"},{"sha":"903d2c76225d49479d392f8d9620baec3a19ac31","filename":"core/provisioning-java/src/test/resources/provisioningTest.xml","status":"removed","additions":0,"deletions":63,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fresources%2FprovisioningTest.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fresources%2FprovisioningTest.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fresources%2FprovisioningTest.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,63 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\">\n-    \n-  <bean class=\"org.springframework.context.support.PropertySourcesPlaceholderConfigurer\">\n-    <property name=\"locations\">\n-      <list>\n-        <value>classpath:persistence.properties</value>\n-        <value>classpath:domains/*.properties</value>\n-        <value>classpath:security.properties</value>\n-        <value>classpath:connid.properties</value>\n-        <value>classpath:mail.properties</value>\n-        <value>classpath:workflow.properties</value>\n-        <value>classpath:provisioning.properties</value>\n-      </list>\n-    </property>\n-    <property name=\"ignoreResourceNotFound\" value=\"true\"/>\n-    <property name=\"ignoreUnresolvablePlaceholders\" value=\"true\"/>\n-  </bean>\n-\n-  <bean id=\"jwtIssuer\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${jwtIssuer}\"/>\n-  </bean>\n-  <bean id=\"jwsKey\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${jwsKey}\"/>\n-  </bean>\n-  <bean id=\"accessTokenJwsSignatureVerifier\"\n-        class=\"org.apache.syncope.core.spring.security.jws.AccessTokenJwsSignatureVerifier\">\n-    <property name=\"jwsAlgorithm\" value=\"${jwsAlgorithm}\"/>\n-    <property name=\"jwsKey\" value=\"${jwsKey}\"/>\n-  </bean>\n-  <bean id=\"accessTokenJwsSignatureProvider\"\n-        class=\"org.apache.syncope.core.spring.security.jws.AccessTokenJwsSignatureProvider\">\n-    <property name=\"jwsAlgorithm\" value=\"${jwsAlgorithm}\"/>\n-    <property name=\"jwsKey\" value=\"${jwsKey}\"/>\n-  </bean>\n-  <bean id=\"credentialChecker\" class=\"org.apache.syncope.core.spring.security.DefaultCredentialChecker\">\n-    <constructor-arg value=\"${jwsKey}\" index=\"0\"/>\n-    <constructor-arg value=\"${adminPassword}\" index=\"1\"/>\n-    <constructor-arg value=\"${anonymousKey}\" index=\"2\"/>\n-  </bean>\n-  \n-</beans>"},{"sha":"5fe1334d084f648dd0fab8c6ac933a7eb9d61762","filename":"core/spring/pom.xml","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fspring%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fspring%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -59,10 +59,19 @@ under the License.\n       <artifactId>cxf-rt-rs-security-jose</artifactId>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-autoconfigure</artifactId>\n+    </dependency>\n+\n     <dependency>\n       <groupId>org.springframework.security</groupId>\n       <artifactId>spring-security-core</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.springframework.security</groupId>\n+      <artifactId>spring-security-config</artifactId>\n+    </dependency>\n     <dependency>\n       <groupId>org.springframework.security</groupId>\n       <artifactId>spring-security-web</artifactId>"},{"sha":"f2919a7100b73d7be48aaece5ef75335f58ee9ff","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/ApplicationContextProvider.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FApplicationContextProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FApplicationContextProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2FApplicationContextProvider.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -33,6 +33,10 @@ public static ConfigurableApplicationContext getApplicationContext() {\n         return CTX;\n     }\n \n+    public static void setApplicationContext(final ConfigurableApplicationContext ctx) {\n+        CTX = ctx;\n+    }\n+\n     public static DefaultListableBeanFactory getBeanFactory() {\n         return BEAN_FACTORY == null\n                 ? CTX == null"},{"sha":"0d39f59792c1b2c1b7f705197616870dc18cdcb3","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/Encryptor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FEncryptor.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -88,7 +88,7 @@ public final class Encryptor {\n \n     static {\n         try {\n-            Properties props = PropertyUtils.read(Encryptor.class, \"security.properties\", \"conf.directory\").getLeft();\n+            Properties props = PropertyUtils.read(Encryptor.class, \"security.properties\", \"conf.directory\");\n \n             SECRET_KEY = props.getProperty(\"secretKey\");\n             SALT_ITERATIONS = Integer.valueOf(props.getProperty(\"digester.saltIterations\"));"},{"sha":"b7c44f2d3571da27270ac58a78b1d8523251e82e","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/SecurityContext.java","status":"added","additions":124,"deletions":0,"changes":124,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSecurityContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSecurityContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FSecurityContext.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,124 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.spring.security;\n+\n+import org.apache.cxf.rs.security.jose.jwa.SignatureAlgorithm;\n+import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.spring.DefaultRolesPrefixPostProcessor;\n+import org.apache.syncope.core.spring.security.jws.AccessTokenJwsSignatureProvider;\n+import org.apache.syncope.core.spring.security.jws.AccessTokenJwsSignatureVerifier;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.context.EnvironmentAware;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.ImportResource;\n+import org.springframework.context.annotation.PropertySource;\n+import org.springframework.core.env.Environment;\n+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n+\n+@ImportResource(\"classpath:/securityContext.xml\")\n+@PropertySource(\"classpath:security.properties\")\n+@PropertySource(value = \"file:${conf.directory}/security.properties\", ignoreResourceNotFound = true)\n+@Configuration\n+@EnableWebSecurity\n+public class SecurityContext extends WebSecurityConfigurerAdapter implements EnvironmentAware {\n+\n+    private Environment env;\n+\n+    @Override\n+    public void setEnvironment(final Environment env) {\n+        this.env = env;\n+    }\n+\n+    @Bean\n+    public String adminUser() {\n+        return env.getProperty(\"adminUser\");\n+    }\n+\n+    @Bean\n+    public String adminPassword() {\n+        return env.getProperty(\"adminPassword\");\n+    }\n+\n+    @Bean\n+    public String adminPasswordAlgorithm() {\n+        return env.getProperty(\"adminPasswordAlgorithm\");\n+    }\n+\n+    @Bean\n+    public String anonymousUser() {\n+        return env.getProperty(\"anonymousUser\");\n+    }\n+\n+    @Bean\n+    public String anonymousKey() {\n+        return env.getProperty(\"anonymousKey\");\n+    }\n+\n+    @Bean\n+    public String jwtIssuer() {\n+        return env.getProperty(\"jwtIssuer\");\n+    }\n+\n+    @Bean\n+    public String jwsKey() {\n+        return env.getProperty(\"jwsKey\");\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public DefaultCredentialChecker credentialChecker() {\n+        return new DefaultCredentialChecker(jwsKey(), adminPassword(), anonymousKey());\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public AccessTokenJwsSignatureVerifier accessTokenJwsSignatureVerifier() {\n+        AccessTokenJwsSignatureVerifier verifier = new AccessTokenJwsSignatureVerifier();\n+        verifier.setJwsAlgorithm(env.getProperty(\"jwsAlgorithm\", SignatureAlgorithm.class));\n+        verifier.setJwsKey(jwsKey());\n+        return verifier;\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public AccessTokenJwsSignatureProvider accessTokenJwsSignatureProvider() {\n+        AccessTokenJwsSignatureProvider provider = new AccessTokenJwsSignatureProvider();\n+        provider.setJwsAlgorithm(env.getProperty(\"jwsAlgorithm\", SignatureAlgorithm.class));\n+        provider.setJwsKey(jwsKey());\n+        return provider;\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public PasswordGenerator passwordGenerator() {\n+        return new DefaultPasswordGenerator();\n+    }\n+\n+    @Bean\n+    public DefaultRolesPrefixPostProcessor rolesPrefixPostProcessor() {\n+        return new DefaultRolesPrefixPostProcessor();\n+    }\n+\n+    @Bean\n+    public ApplicationContextProvider applicationContextProvider() {\n+        return new ApplicationContextProvider();\n+    }\n+}"},{"sha":"ebe786eac19107aa8260edc3d89b82ed4c875441","filename":"core/spring/src/main/resources/META-INF/spring.factories","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fspring%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fspring%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n+  org.apache.syncope.core.spring.security.SecurityContext"},{"sha":"a8e0c3d0d50ff29bc21ef279c7b58a79c45e4167","filename":"core/spring/src/main/resources/securityContext.xml","status":"modified","additions":1,"deletions":46,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fspring%2Fsrc%2Fmain%2Fresources%2FsecurityContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fspring%2Fsrc%2Fmain%2Fresources%2FsecurityContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fresources%2FsecurityContext.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -24,53 +24,9 @@ under the License.\n                            http://www.springframework.org/schema/beans/spring-beans.xsd\n                            http://www.springframework.org/schema/security\n                            http://www.springframework.org/schema/security/spring-security.xsd\">\n-\n-  <bean id=\"adminUser\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${adminUser}\"/>\n-  </bean>\n-  <bean id=\"adminPassword\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${adminPassword}\"/>\n-  </bean>\n-  <bean id=\"adminPasswordAlgorithm\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${adminPasswordAlgorithm}\"/>\n-  </bean>\n-\n-  <bean id=\"anonymousUser\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${anonymousUser}\"/>\n-  </bean>\n-  <bean id=\"anonymousKey\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${anonymousKey}\"/>\n-  </bean>\n-  \n-  <bean id=\"jwtIssuer\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${jwtIssuer}\"/>\n-  </bean>\n-  <bean id=\"jwsKey\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${jwsKey}\"/>\n-  </bean>\n-\n-  <bean id=\"credentialChecker\" class=\"org.apache.syncope.core.spring.security.DefaultCredentialChecker\">\n-    <constructor-arg value=\"${jwsKey}\" index=\"0\"/>\n-    <constructor-arg value=\"${adminPassword}\" index=\"1\"/>\n-    <constructor-arg value=\"${anonymousKey}\" index=\"2\"/>\n-  </bean>\n-\n-  <bean id=\"accessTokenJwsSignatureVerifier\"\n-        class=\"org.apache.syncope.core.spring.security.jws.AccessTokenJwsSignatureVerifier\">\n-    <property name=\"jwsAlgorithm\" value=\"${jwsAlgorithm}\"/>\n-    <property name=\"jwsKey\" value=\"${jwsKey}\"/>\n-  </bean>\n-  <bean id=\"accessTokenJwsSignatureProvider\"\n-        class=\"org.apache.syncope.core.spring.security.jws.AccessTokenJwsSignatureProvider\">\n-    <property name=\"jwsAlgorithm\" value=\"${jwsAlgorithm}\"/>\n-    <property name=\"jwsKey\" value=\"${jwsKey}\"/>\n-  </bean>\n-  \n-  <bean class=\"${passwordGenerator}\"/>\n-  <bean class=\"org.apache.syncope.core.spring.DefaultRolesPrefixPostProcessor\"/>\n   \n   <security:global-method-security pre-post-annotations=\"enabled\"/>\n-  \n+\n   <bean id=\"securityContextRepository\" class='org.springframework.security.web.context.NullSecurityContextRepository'/>\n   <bean id=\"securityContextPersistenceFilter\"\n         class=\"org.springframework.security.web.context.SecurityContextPersistenceFilter\">\n@@ -138,4 +94,3 @@ under the License.\n     <security:authentication-provider ref=\"jwtAuthenticationProvider\"/>\n   </security:authentication-manager>\n </beans>\n-"},{"sha":"502067cac73f0f623aa3bec8ae3903f68afe6d99","filename":"core/spring/src/test/java/org/apache/syncope/core/spring/security/DummyImplementationLookup.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FDummyImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FDummyImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FDummyImplementationLookup.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -36,15 +36,10 @@\n public class DummyImplementationLookup implements ImplementationLookup {\n \n     @Override\n-    public Integer getPriority() {\n+    public int getOrder() {\n         return -1;\n     }\n \n-    @Override\n-    public void load() {\n-        // do nothing\n-    }\n-\n     @Override\n     public Set<String> getClassNames(final ImplementationType type) {\n         return Collections.emptySet();"},{"sha":"f4925451ffb014848b4b2d4563b3ee900152010c","filename":"core/starter/pom.xml","status":"added","additions":130,"deletions":0,"changes":130,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fstarter%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fstarter%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fstarter%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,130 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope</groupId>\n+    <artifactId>syncope-core</artifactId>\n+    <version>3.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Core Spring Boot Starter</name>\n+  <description>Apache Syncope Core Spring Boot Starter</description>\n+  <groupId>org.apache.syncope.core</groupId>\n+  <artifactId>syncope-core-starter</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency> \n+      <groupId>javax.servlet</groupId> \n+      <artifactId>javax.servlet-api</artifactId> \n+      <scope>provided</scope>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.cxf</groupId>\n+      <artifactId>cxf-spring-boot-starter-jaxrs</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-starter-log4j2</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-starter-security</artifactId>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.syncope.core.idrepo</groupId>\n+      <artifactId>syncope-core-idrepo-rest-cxf</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.core</groupId>\n+      <artifactId>syncope-core-workflow-java</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.core</groupId>\n+      <artifactId>syncope-core-persistence-jpa</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-api</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-api</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-core</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.lmax</groupId>\n+      <artifactId>disruptor</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.logging.log4j</groupId>\n+      <artifactId>log4j-slf4j-impl</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>commons-logging</groupId>\n+      <artifactId>commons-logging</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>jcl-over-slf4j</artifactId>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+\n+    <resources>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <filtering>true</filtering>\n+      </resource>\n+      \n+      <resource>\n+        <directory>${basedir}/../../src/main/resources</directory>\n+        <filtering>true</filtering>\n+        <includes>\n+          <include>banner.txt</include>\n+        </includes>\n+      </resource>\n+    </resources>\n+  </build>\n+</project>"},{"sha":"93502037a2d5f54b6bb05b83c5dd4358c6f87b24","filename":"core/starter/src/main/java/org/apache/syncope/core/starter/SyncopeCoreApplication.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSyncopeCoreApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSyncopeCoreApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSyncopeCoreApplication.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.starter;\n+\n+import java.io.IOException;\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration;\n+import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;\n+import org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration;\n+import org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration;\n+import org.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration;\n+import org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration;\n+import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.support.PropertySourcesPlaceholderConfigurer;\n+import org.springframework.transaction.annotation.EnableTransactionManagement;\n+\n+@SpringBootApplication\n+@EnableTransactionManagement\n+@EnableAutoConfiguration(exclude = {\n+    ErrorMvcAutoConfiguration.class,\n+    HttpMessageConvertersAutoConfiguration.class,\n+    DataSourceAutoConfiguration.class,\n+    DataSourceTransactionManagerAutoConfiguration.class,\n+    JdbcTemplateAutoConfiguration.class,\n+    QuartzAutoConfiguration.class })\n+public class SyncopeCoreApplication extends SpringBootServletInitializer {\n+\n+    public static void main(final String[] args) {\n+        SpringApplication.run(SyncopeCoreApplication.class, args);\n+    }\n+\n+    @Bean\n+    public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() throws IOException {\n+        PropertySourcesPlaceholderConfigurer pspc = new PropertySourcesPlaceholderConfigurer();\n+        pspc.setIgnoreResourceNotFound(true);\n+        pspc.setIgnoreUnresolvablePlaceholders(true);\n+        return pspc;\n+    }\n+}"},{"sha":"5d4bb9e356368c7fbff9a20f120e91b93f037edd","filename":"core/starter/src/main/java/org/apache/syncope/core/starter/SyncopeCoreInitializer.java","status":"added","additions":69,"deletions":0,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSyncopeCoreInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSyncopeCoreInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fstarter%2FSyncopeCoreInitializer.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.starter;\n+\n+import java.util.Comparator;\n+import org.apache.syncope.core.persistence.api.DomainsHolder;\n+import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.aop.support.AopUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.ApplicationListener;\n+import org.springframework.context.event.ContextRefreshedEvent;\n+import org.springframework.core.Ordered;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * Take care of all initializations needed by Syncope Core to run up and safe.\n+ */\n+@Component\n+public class SyncopeCoreInitializer implements ApplicationListener<ContextRefreshedEvent>, Ordered {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(SyncopeCoreInitializer.class);\n+\n+    @Autowired\n+    private DomainsHolder domainsHolder;\n+\n+    @Override\n+    public int getOrder() {\n+        return 0;\n+    }\n+\n+    @Override\n+    public void onApplicationEvent(final ContextRefreshedEvent event) {\n+        event.getApplicationContext().getBeansOfType(SyncopeCoreLoader.class).values().stream().\n+                sorted(Comparator.comparing(SyncopeCoreLoader::getOrder)).\n+                forEach(loader -> {\n+                    String loaderName = AopUtils.getTargetClass(loader).getName();\n+\n+                    LOG.debug(\"[{}] Starting initialization\", loaderName);\n+\n+                    loader.load();\n+\n+                    domainsHolder.getDomains().forEach((domain, datasource) -> {\n+                        LOG.debug(\"[{}] Starting on domain '{}'\", loaderName, domain);\n+                        loader.load(domain, datasource);\n+                        LOG.debug(\"[{}] Completed on domain '{}'\", loaderName, domain);\n+                    });\n+\n+                    LOG.debug(\"[{}] Initialization completed\", loaderName);\n+                });\n+    }\n+}"},{"sha":"4be19892f05ad53739f24b6b6b9f4e01c282204f","filename":"core/starter/src/main/resources/application.properties","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fstarter%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,28 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+spring.application.name=Apache Syncope ${syncope.version} Core\n+spring.groovy.template.check-template-location=false\n+spring.main.banner-mode=log\n+\n+spring.http.encoding.charset=UTF-8\n+spring.http.encoding.enabled=true\n+spring.http.encoding.force=true\n+\n+conf.directory=${conf.directory}\n+\n+server.servlet.contextPath=/syncope\n+cxf.path=/rest"},{"sha":"a7380a3e066a5cf4494c0d0730d6c89947b0dc7f","filename":"core/upgrade/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fupgrade%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fupgrade%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -108,7 +108,7 @@ under the License.\n         </configuration>\n         <executions>\n           <execution>\n-            <id>make-cli-zip</id>\n+            <id>make-upgrade-zip</id>\n             <phase>verify</phase>\n             <goals>\n               <goal>single</goal>"},{"sha":"b891fd2086dd7981177d076a324e05fd7cd1aacc","filename":"core/upgrade/src/assemble/upgrade-zip.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fupgrade%2Fsrc%2Fassemble%2Fupgrade-zip.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fupgrade%2Fsrc%2Fassemble%2Fupgrade-zip.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fsrc%2Fassemble%2Fupgrade-zip.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -17,12 +17,12 @@ KIND, either express or implied.  See the License for the\n specific language governing permissions and limitations\n under the License.\n -->\n-<assembly xmlns=\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2\"\n+<assembly xmlns=\"http://maven.apache.org/ASSEMBLY/2.0.0\"\n           xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-          xsi:schemaLocation=\"http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 \n-                              http://maven.apache.org/xsd/assembly-1.1.2.xsd\">\n+          xsi:schemaLocation=\"http://maven.apache.org/ASSEMBLY/2.0.0\n+                              http://maven.apache.org/xsd/assembly-2.0.0.xsd\">\n \n-  <id>cli</id>\n+  <id>upgrade-zip</id>\n   \n   <formats>\n     <format>zip</format>\n@@ -40,7 +40,7 @@ under the License.\n       <outputDirectory>${project.build.finalName}</outputDirectory>\n     </fileSet>\n     <fileSet>\n-      <directory>${project.build.directory}/classes</directory>\n+      <directory>${project.build.outputDirectory}</directory>\n       <includes>\n         <include>syncopeupgrade.sh</include>\n         <include>syncopeupgrade.bat</include>"},{"sha":"aa05c530860687887d97f8e1cc88d5c816a5032b","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/WorkflowContext.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FWorkflowContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FWorkflowContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FWorkflowContext.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.workflow.java;\n+\n+import org.apache.syncope.core.workflow.api.AnyObjectWorkflowAdapter;\n+import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n+import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n+import org.springframework.context.EnvironmentAware;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.PropertySource;\n+import org.springframework.core.env.Environment;\n+\n+@PropertySource(\"classpath:workflow.properties\")\n+@PropertySource(value = \"file:${conf.directory}/workflow.properties\", ignoreResourceNotFound = true)\n+@Configuration\n+public class WorkflowContext implements EnvironmentAware {\n+\n+    private Environment env;\n+\n+    @Override\n+    public void setEnvironment(final Environment env) {\n+        this.env = env;\n+    }\n+\n+    @Bean\n+    public UserWorkflowAdapter uwfAdapter()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (UserWorkflowAdapter) Class.forName(env.getProperty(\"uwfAdapter\")).\n+                newInstance();\n+    }\n+\n+    @Bean\n+    public GroupWorkflowAdapter gwfAdapter()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (GroupWorkflowAdapter) Class.forName(env.getProperty(\"gwfAdapter\")).\n+                newInstance();\n+    }\n+\n+    @Bean\n+    public AnyObjectWorkflowAdapter awfAdapter()\n+            throws ClassNotFoundException, InstantiationException, IllegalAccessException {\n+\n+        return (AnyObjectWorkflowAdapter) Class.forName(env.getProperty(\"awfAdapter\")).\n+                newInstance();\n+    }\n+}"},{"sha":"b7b90b17bf06a2d718b9a5b19baa1bffc53c6883","filename":"core/workflow-java/src/main/resources/META-INF/spring.factories","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fworkflow-java%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/core%2Fworkflow-java%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n+  org.apache.syncope.core.workflow.java.WorkflowContext"},{"sha":"8db5e170c07dbf7d23ea3edfefc3c38d73ee7fc6","filename":"core/workflow-java/src/main/resources/workflowContext.xml","status":"removed","additions":0,"deletions":29,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/core%2Fworkflow-java%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/core%2Fworkflow-java%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,29 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans   \n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\">\n-\n-  <bean id=\"uwfAdapter\" class=\"${uwfAdapter}\"/>\n-  <bean id=\"gwfAdapter\" class=\"${gwfAdapter}\"/>\n-  <bean id=\"awfAdapter\" class=\"${awfAdapter}\"/>\n-    \n-</beans>"},{"sha":"77da3c51900b4b521c786ee4161cfd37eecc746b","filename":"deb/console/pom.xml","status":"modified","additions":17,"deletions":35,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/deb%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/deb%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/deb%2Fconsole%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -48,57 +48,31 @@ under the License.\n       <groupId>org.apache.syncope.ext.flowable</groupId>\n       <artifactId>syncope-ext-flowable-client-console</artifactId>\n       <version>${project.version}</version>\n-    </dependency>    \n+    </dependency>\n+\n     <dependency>\n       <groupId>org.apache.syncope.ext.camel</groupId>\n       <artifactId>syncope-ext-camel-client-console</artifactId>\n       <version>${project.version}</version>\n-    </dependency>    \n+    </dependency>\n+\n     <dependency>\n       <groupId>org.apache.syncope.ext.saml2sp</groupId>\n       <artifactId>syncope-ext-saml2sp-client-console</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n+\n     <dependency>\n       <groupId>org.apache.syncope.ext.oidcclient</groupId>\n       <artifactId>syncope-ext-oidcclient-client-console</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n+\n     <dependency>\n       <groupId>org.apache.syncope.ext.scimv2</groupId>\n       <artifactId>syncope-ext-scimv2-client-console</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n-    \n-    <dependency>\n-      <groupId>org.slf4j</groupId>\n-      <artifactId>slf4j-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-core</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>com.lmax</groupId>\n-      <artifactId>disruptor</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-slf4j-impl</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>commons-logging</groupId>\n-      <artifactId>commons-logging</artifactId>\n-      <scope>provided</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.slf4j</groupId>\n-      <artifactId>jcl-over-slf4j</artifactId>\n-    </dependency>\n   </dependencies>\n \n   <build>\n@@ -110,7 +84,14 @@ under the License.\n       </resource>\n       \n       <resource>\n-        <directory>${project.basedir}/../../client/console/src/main/resources</directory>\n+        <directory>${project.basedir}/../../client/idrepo/console/src/main/resources</directory>\n+        <includes>\n+          <include>application.properties</include>\n+        </includes>\n+        <filtering>true</filtering>\n+      </resource>\n+      <resource>\n+        <directory>${project.basedir}/../../client/idrepo/console/src/main/resources</directory>\n         <includes>\n           <include>console.properties</include>\n         </includes>\n@@ -138,13 +119,13 @@ under the License.\n         <includes>\n           <include>log4j2.xml</include>\n         </includes>\n-        <targetPath>${project.build.directory}/classes</targetPath>\n+        <targetPath>${project.build.outputDirectory}</targetPath>\n         <filtering>true</filtering>\n       </resource>\n       \n       <resource>\n         <directory>${project.build.directory}/etc</directory>\n-        <targetPath>${project.build.directory}/classes</targetPath>\n+        <targetPath>${project.build.outputDirectory}</targetPath>\n       </resource>\n       \n       <resource>\n@@ -247,6 +228,7 @@ under the License.\n                 <data>\n                   <src>${project.build.directory}/etc</src>\n                   <type>directory</type>\n+                  <conffile>true</conffile>\n                   <mapper>\n                     <type>perm</type>\n                     <prefix>${conf.directory}</prefix>"},{"sha":"a9bfb08572309b1aff41eafc97c4c8ffef34d97a","filename":"deb/console/src/deb/control/conffiles","status":"removed","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/deb%2Fconsole%2Fsrc%2Fdeb%2Fcontrol%2Fconffiles","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/deb%2Fconsole%2Fsrc%2Fdeb%2Fcontrol%2Fconffiles","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/deb%2Fconsole%2Fsrc%2Fdeb%2Fcontrol%2Fconffiles?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,5 +0,0 @@\n-/etc/tomcat8/Catalina/localhost/syncope-console.xml\n-/etc/apache-syncope/console.properties\n-/etc/apache-syncope/saml2sp-agent.properties\n-/etc/apache-syncope/oidcclient-agent.properties\n-"},{"sha":"85c88c8cd0b9a8484e281b45307fd490300356b4","filename":"deb/core/pom.xml","status":"modified","additions":36,"deletions":56,"changes":92,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/deb%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/deb%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/deb%2Fcore%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -39,18 +39,19 @@ under the License.\n   \n   <dependencies>\n     <dependency>\n-      <groupId>org.apache.syncope.core.idm</groupId>\n-      <artifactId>syncope-core-idm-rest-cxf</artifactId>\n+      <groupId>org.apache.syncope.core</groupId>\n+      <artifactId>syncope-core-starter</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n     <dependency>\n-      <groupId>org.apache.syncope.core</groupId>\n-      <artifactId>syncope-core-workflow-java</artifactId>\n+      <groupId>org.apache.syncope.core.idm</groupId>\n+      <artifactId>syncope-core-idm-rest-cxf</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n+\n     <dependency>\n       <groupId>org.apache.syncope.core</groupId>\n-      <artifactId>syncope-core-persistence-jpa</artifactId>\n+      <artifactId>syncope-core-persistence-jpa-json</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n     \n@@ -114,36 +115,6 @@ under the License.\n       <artifactId>syncope-ext-swagger-ui</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n-\n-    <dependency>\n-      <groupId>org.slf4j</groupId>\n-      <artifactId>slf4j-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-core</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>com.lmax</groupId>\n-      <artifactId>disruptor</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-slf4j-impl</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>commons-logging</groupId>\n-      <artifactId>commons-logging</artifactId>\n-      <scope>provided</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.slf4j</groupId>\n-      <artifactId>jcl-over-slf4j</artifactId>\n-    </dependency>\n   </dependencies>\n \n   <build>\n@@ -155,8 +126,18 @@ under the License.\n       </resource>\n       \n       <resource>\n-        <directory>${basedir}/../../core/persistence-jpa/src/main/resources/domains</directory>\n-        <targetPath>${project.build.directory}/etc/domains</targetPath>\n+        <directory>${basedir}/../../core/starter/src/main/resources</directory>\n+        <includes>\n+          <include>application.properties</include>\n+        </includes>\n+        <filtering>true</filtering>\n+      </resource>\n+      <resource>\n+        <directory>${basedir}/../../core/spring/src/main/resources</directory>\n+        <includes>\n+          <include>security.properties</include>\n+        </includes>\n+        <targetPath>${project.build.directory}/etc</targetPath>\n         <filtering>true</filtering>\n       </resource>\n       <resource>\n@@ -189,58 +170,56 @@ under the License.\n         <filtering>true</filtering>\n       </resource>\n       <resource>\n-        <directory>${basedir}/../../core/spring/src/main/resources</directory>\n+        <directory>${basedir}/../../core/idrepo/logic/src/main/resources</directory>\n         <includes>\n-          <include>security.properties</include>\n+          <include>logic.properties</include>\n         </includes>\n         <targetPath>${project.build.directory}/etc</targetPath>\n         <filtering>true</filtering>\n       </resource>\n       <resource>\n-        <directory>${basedir}/../../core/logic/src/main/resources</directory>\n+        <directory>${project.basedir}/../../ext/saml2sp/logic/src/main/resources</directory>\n         <includes>\n-          <include>logic.properties</include>\n+          <include>saml2sp-logic.properties</include>\n         </includes>\n         <targetPath>${project.build.directory}/etc</targetPath>\n         <filtering>true</filtering>\n       </resource>\n       <resource>\n-        <directory>${basedir}/../../fit/core-reference/src/main/resources</directory>\n+        <directory>${basedir}/../../fit/core-reference/src/test/resources</directory>\n         <includes>\n-          <include>coreContext.xml</include>\n-          <include>log4j2.xml</include>\n+          <include>keystore</include>\n         </includes>\n         <targetPath>${project.build.directory}/etc</targetPath>\n-        <filtering>true</filtering>\n+        <filtering>false</filtering>\n       </resource>\n       <resource>\n-        <directory>${basedir}/../../fit/core-reference/src/main/resources/postgres</directory>\n+        <directory>${basedir}/../../fit/core-reference/src/main/resources</directory>\n         <includes>\n-          <include>views.xml</include>\n+          <include>log4j2.xml</include>\n         </includes>\n         <targetPath>${project.build.directory}/etc</targetPath>\n         <filtering>true</filtering>\n       </resource>\n       <resource>\n-        <directory>${project.basedir}/../../ext/saml2sp/logic/src/main/resources</directory>\n+        <directory>${basedir}/../../core/persistence-jpa-json/src/main/resources/pgjsonb</directory>\n         <includes>\n-          <include>saml2sp-logic.properties</include>\n+          <include>persistence.properties</include>\n+          <include>indexes.xml</include>\n+          <include>views.xml</include>        \n         </includes>\n         <targetPath>${project.build.directory}/etc</targetPath>\n         <filtering>true</filtering>\n       </resource>\n       <resource>\n-        <directory>${basedir}/../../fit/core-reference/src/test/resources</directory>\n-        <includes>\n-          <include>keystore</include>\n-        </includes>\n-        <targetPath>${project.build.directory}/etc</targetPath>\n-        <filtering>false</filtering>\n+        <directory>${basedir}/../../core/persistence-jpa-json/src/main/resources/pgjsonb/domains</directory>\n+        <targetPath>${project.build.directory}/etc/domains</targetPath>\n+        <filtering>true</filtering>\n       </resource>\n \n       <resource>\n         <directory>${project.build.directory}/etc</directory>\n-        <targetPath>${project.build.directory}/classes</targetPath>\n+        <targetPath>${project.build.outputDirectory}</targetPath>\n       </resource>\n       \n       <resource>\n@@ -361,6 +340,7 @@ under the License.\n                 <data>\n                   <src>${project.build.directory}/etc</src>\n                   <type>directory</type>\n+                  <conffile>true</conffile>\n                   <mapper>\n                     <type>perm</type>\n                     <prefix>${conf.directory}</prefix>"},{"sha":"1dc06a74847f8b6387322473e35a31b33a0f39b9","filename":"deb/core/src/deb/control/conffiles","status":"removed","additions":0,"deletions":15,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/deb%2Fcore%2Fsrc%2Fdeb%2Fcontrol%2Fconffiles","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/deb%2Fcore%2Fsrc%2Fdeb%2Fcontrol%2Fconffiles","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/deb%2Fcore%2Fsrc%2Fdeb%2Fcontrol%2Fconffiles?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,15 +0,0 @@\n-/etc/tomcat8/Catalina/localhost/syncope.xml\n-/etc/apache-syncope/connid.properties\n-/etc/apache-syncope/content.xml\n-/etc/apache-syncope/coreContext.xml\n-/etc/apache-syncope/log4j2.xml\n-/etc/apache-syncope/logic.properties\n-/etc/apache-syncope/mail.properties\n-/etc/apache-syncope/persistence.properties\n-/etc/apache-syncope/provisioning.properties\n-/etc/apache-syncope/groupRoutes.xml\n-/etc/apache-syncope/saml2sp-logic.properties\n-/etc/apache-syncope/security.properties\n-/etc/apache-syncope/userRoutes.xml\n-/etc/apache-syncope/userWorkflow.bpmn20.xml\n-/etc/apache-syncope/workflow.properties"},{"sha":"7e5dc2a8e879ec994ebea086e77ecf25bd97feec","filename":"deb/core/src/deb/tomcat8/syncope.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/deb%2Fcore%2Fsrc%2Fdeb%2Ftomcat8%2Fsyncope.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/deb%2Fcore%2Fsrc%2Fdeb%2Ftomcat8%2Fsyncope.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/deb%2Fcore%2Fsrc%2Fdeb%2Ftomcat8%2Fsyncope.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -32,7 +32,7 @@ under the License.\n               maxWait=\"-1\"/>\n   -->\n \n-  <!--  https://cwiki.apache.org/confluence/display/SYNCOPE/Run+Syncope+in+real+environments\n+  <!--  http://syncope.apache.org/docs/reference-guide.html#apache-tomcat-9\n \n    <Resource name=\"jdbc/syncopeMasterDataSource\" auth=\"Container\" type=\"javax.sql.DataSource\"\n       factory=\"org.apache.tomcat.jdbc.pool.DataSourceFactory\" testWhileIdle=\"true\""},{"sha":"c21b7ba64e8484b56c67437ea934f10b24bcb374","filename":"deb/enduser/pom.xml","status":"modified","additions":5,"deletions":33,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/deb%2Fenduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/deb%2Fenduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/deb%2Fenduser%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -61,36 +61,6 @@ under the License.\n       <artifactId>syncope-ext-oidcclient-client-enduser</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n-    \n-    <dependency>\n-      <groupId>org.slf4j</groupId>\n-      <artifactId>slf4j-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-core</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>com.lmax</groupId>\n-      <artifactId>disruptor</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-slf4j-impl</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>commons-logging</groupId>\n-      <artifactId>commons-logging</artifactId>\n-      <scope>provided</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.slf4j</groupId>\n-      <artifactId>jcl-over-slf4j</artifactId>\n-    </dependency>\n   </dependencies>\n \n   <build>\n@@ -104,6 +74,7 @@ under the License.\n       <resource>\n         <directory>${project.basedir}/../../client/enduser/src/main/resources</directory>\n         <includes>\n+          <include>application.properties</include>\n           <include>enduser.properties</include>\n           <include>customFormAttributes.json</include>\n           <include>customTemplate.json</include>\n@@ -132,13 +103,13 @@ under the License.\n         <includes>\n           <include>log4j2.xml</include>\n         </includes>\n-        <targetPath>${project.build.directory}/classes</targetPath>\n+        <targetPath>${project.build.outputDirectory}</targetPath>\n         <filtering>true</filtering>\n       </resource>\n       \n       <resource>\n         <directory>${project.build.directory}/etc</directory>\n-        <targetPath>${project.build.directory}/classes</targetPath>\n+        <targetPath>${project.build.outputDirectory}</targetPath>\n       </resource>\n       \n       <resource>\n@@ -241,6 +212,7 @@ under the License.\n                 <data>\n                   <src>${project.build.directory}/etc</src>\n                   <type>directory</type>\n+                  <conffile>true</conffile>\n                   <mapper>\n                     <type>perm</type>\n                     <prefix>${conf.directory}</prefix>\n@@ -311,5 +283,5 @@ under the License.\n       </build>\n     </profile>\n   </profiles>\n-  \n+\n </project>"},{"sha":"d115b8e4a6cceb3d385deb80ae4ab6fc563ac116","filename":"deb/enduser/src/deb/control/conffiles","status":"removed","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/deb%2Fenduser%2Fsrc%2Fdeb%2Fcontrol%2Fconffiles","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/deb%2Fenduser%2Fsrc%2Fdeb%2Fcontrol%2Fconffiles","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/deb%2Fenduser%2Fsrc%2Fdeb%2Fcontrol%2Fconffiles?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,7 +0,0 @@\n-/etc/tomcat8/Catalina/localhost/syncope-enduser.xml\n-/etc/apache-syncope/enduser.properties\n-/etc/apache-syncope/customFormAttributes.json\n-/etc/apache-syncope/customTemplate.json\n-/etc/apache-syncope/saml2sp-agent.properties\n-/etc/apache-syncope/oidcclient-agent.properties\n-"},{"sha":"99b82d15db98ef9716c5ae5e38060df4d85d4464","filename":"docker/console/LICENSE","status":"added","additions":889,"deletions":0,"changes":889,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fconsole%2FLICENSE","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fconsole%2FLICENSE","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fconsole%2FLICENSE?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,889 @@\n+\n+                                 Apache License\n+                           Version 2.0, January 2004\n+                        http://www.apache.org/licenses/\n+\n+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n+\n+   1. Definitions.\n+\n+      \"License\" shall mean the terms and conditions for use, reproduction,\n+      and distribution as defined by Sections 1 through 9 of this document.\n+\n+      \"Licensor\" shall mean the copyright owner or entity authorized by\n+      the copyright owner that is granting the License.\n+\n+      \"Legal Entity\" shall mean the union of the acting entity and all\n+      other entities that control, are controlled by, or are under common\n+      control with that entity. For the purposes of this definition,\n+      \"control\" means (i) the power, direct or indirect, to cause the\n+      direction or management of such entity, whether by contract or\n+      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n+      outstanding shares, or (iii) beneficial ownership of such entity.\n+\n+      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n+      exercising permissions granted by this License.\n+\n+      \"Source\" form shall mean the preferred form for making modifications,\n+      including but not limited to software source code, documentation\n+      source, and configuration files.\n+\n+      \"Object\" form shall mean any form resulting from mechanical\n+      transformation or translation of a Source form, including but\n+      not limited to compiled object code, generated documentation,\n+      and conversions to other media types.\n+\n+      \"Work\" shall mean the work of authorship, whether in Source or\n+      Object form, made available under the License, as indicated by a\n+      copyright notice that is included in or attached to the work\n+      (an example is provided in the Appendix below).\n+\n+      \"Derivative Works\" shall mean any work, whether in Source or Object\n+      form, that is based on (or derived from) the Work and for which the\n+      editorial revisions, annotations, elaborations, or other modifications\n+      represent, as a whole, an original work of authorship. For the purposes\n+      of this License, Derivative Works shall not include works that remain\n+      separable from, or merely link (or bind by name) to the interfaces of,\n+      the Work and Derivative Works thereof.\n+\n+      \"Contribution\" shall mean any work of authorship, including\n+      the original version of the Work and any modifications or additions\n+      to that Work or Derivative Works thereof, that is intentionally\n+      submitted to Licensor for inclusion in the Work by the copyright owner\n+      or by an individual or Legal Entity authorized to submit on behalf of\n+      the copyright owner. For the purposes of this definition, \"submitted\"\n+      means any form of electronic, verbal, or written communication sent\n+      to the Licensor or its representatives, including but not limited to\n+      communication on electronic mailing lists, source code control systems,\n+      and issue tracking systems that are managed by, or on behalf of, the\n+      Licensor for the purpose of discussing and improving the Work, but\n+      excluding communication that is conspicuously marked or otherwise\n+      designated in writing by the copyright owner as \"Not a Contribution.\"\n+\n+      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n+      on behalf of whom a Contribution has been received by Licensor and\n+      subsequently incorporated within the Work.\n+\n+   2. Grant of Copyright License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      copyright license to reproduce, prepare Derivative Works of,\n+      publicly display, publicly perform, sublicense, and distribute the\n+      Work and such Derivative Works in Source or Object form.\n+\n+   3. Grant of Patent License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      (except as stated in this section) patent license to make, have made,\n+      use, offer to sell, sell, import, and otherwise transfer the Work,\n+      where such license applies only to those patent claims licensable\n+      by such Contributor that are necessarily infringed by their\n+      Contribution(s) alone or by combination of their Contribution(s)\n+      with the Work to which such Contribution(s) was submitted. If You\n+      institute patent litigation against any entity (including a\n+      cross-claim or counterclaim in a lawsuit) alleging that the Work\n+      or a Contribution incorporated within the Work constitutes direct\n+      or contributory patent infringement, then any patent licenses\n+      granted to You under this License for that Work shall terminate\n+      as of the date such litigation is filed.\n+\n+   4. Redistribution. You may reproduce and distribute copies of the\n+      Work or Derivative Works thereof in any medium, with or without\n+      modifications, and in Source or Object form, provided that You\n+      meet the following conditions:\n+\n+      (a) You must give any other recipients of the Work or\n+          Derivative Works a copy of this License; and\n+\n+      (b) You must cause any modified files to carry prominent notices\n+          stating that You changed the files; and\n+\n+      (c) You must retain, in the Source form of any Derivative Works\n+          that You distribute, all copyright, patent, trademark, and\n+          attribution notices from the Source form of the Work,\n+          excluding those notices that do not pertain to any part of\n+          the Derivative Works; and\n+\n+      (d) If the Work includes a \"NOTICE\" text file as part of its\n+          distribution, then any Derivative Works that You distribute must\n+          include a readable copy of the attribution notices contained\n+          within such NOTICE file, excluding those notices that do not\n+          pertain to any part of the Derivative Works, in at least one\n+          of the following places: within a NOTICE text file distributed\n+          as part of the Derivative Works; within the Source form or\n+          documentation, if provided along with the Derivative Works; or,\n+          within a display generated by the Derivative Works, if and\n+          wherever such third-party notices normally appear. The contents\n+          of the NOTICE file are for informational purposes only and\n+          do not modify the License. You may add Your own attribution\n+          notices within Derivative Works that You distribute, alongside\n+          or as an addendum to the NOTICE text from the Work, provided\n+          that such additional attribution notices cannot be construed\n+          as modifying the License.\n+\n+      You may add Your own copyright statement to Your modifications and\n+      may provide additional or different license terms and conditions\n+      for use, reproduction, or distribution of Your modifications, or\n+      for any such Derivative Works as a whole, provided Your use,\n+      reproduction, and distribution of the Work otherwise complies with\n+      the conditions stated in this License.\n+\n+   5. Submission of Contributions. Unless You explicitly state otherwise,\n+      any Contribution intentionally submitted for inclusion in the Work\n+      by You to the Licensor shall be under the terms and conditions of\n+      this License, without any additional terms or conditions.\n+      Notwithstanding the above, nothing herein shall supersede or modify\n+      the terms of any separate license agreement you may have executed\n+      with Licensor regarding such Contributions.\n+\n+   6. Trademarks. This License does not grant permission to use the trade\n+      names, trademarks, service marks, or product names of the Licensor,\n+      except as required for reasonable and customary use in describing the\n+      origin of the Work and reproducing the content of the NOTICE file.\n+\n+   7. Disclaimer of Warranty. Unless required by applicable law or\n+      agreed to in writing, Licensor provides the Work (and each\n+      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+      implied, including, without limitation, any warranties or conditions\n+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n+      PARTICULAR PURPOSE. You are solely responsible for determining the\n+      appropriateness of using or redistributing the Work and assume any\n+      risks associated with Your exercise of permissions under this License.\n+\n+   8. Limitation of Liability. In no event and under no legal theory,\n+      whether in tort (including negligence), contract, or otherwise,\n+      unless required by applicable law (such as deliberate and grossly\n+      negligent acts) or agreed to in writing, shall any Contributor be\n+      liable to You for damages, including any direct, indirect, special,\n+      incidental, or consequential damages of any character arising as a\n+      result of this License or out of the use or inability to use the\n+      Work (including but not limited to damages for loss of goodwill,\n+      work stoppage, computer failure or malfunction, or any and all\n+      other commercial damages or losses), even if such Contributor\n+      has been advised of the possibility of such damages.\n+\n+   9. Accepting Warranty or Additional Liability. While redistributing\n+      the Work or Derivative Works thereof, You may choose to offer,\n+      and charge a fee for, acceptance of support, warranty, indemnity,\n+      or other liability obligations and/or rights consistent with this\n+      License. However, in accepting such obligations, You may act only\n+      on Your own behalf and on Your sole responsibility, not on behalf\n+      of any other Contributor, and only if You agree to indemnify,\n+      defend, and hold each Contributor harmless for any liability\n+      incurred by, or claims asserted against, such Contributor by reason\n+      of your accepting any such warranty or additional liability.\n+\n+   END OF TERMS AND CONDITIONS\n+\n+   APPENDIX: How to apply the Apache License to your work.\n+\n+      To apply the Apache License to your work, attach the following\n+      boilerplate notice, with the fields enclosed by brackets \"[]\"\n+      replaced with your own identifying information. (Don't include\n+      the brackets!)  The text should be enclosed in the appropriate\n+      comment syntax for the file format. We also recommend that a\n+      file or class name and description of purpose be included on the\n+      same \"printed page\" as the copyright notice for easier\n+      identification within third-party archives.\n+\n+   Copyright [yyyy] [name of copyright owner]\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+\n+==\n+\n+For Animate.css (http://daneden.github.io/animate.css/):\n+This is licensed under the MIT license:\n+\n+ Permission is hereby granted, free  of charge, to any person obtaining\n+ a  copy  of this  software  and  associated  documentation files  (the\n+ \"Software\"), to  deal in  the Software without  restriction, including\n+ without limitation  the rights to  use, copy, modify,  merge, publish,\n+ distribute,  sublicense, and/or sell  copies of  the Software,  and to\n+ permit persons to whom the Software  is furnished to do so, subject to\n+ the following conditions:\n+ \n+ The  above  copyright  notice  and  this permission  notice  shall  be\n+ included in all copies or substantial portions of the Software.\n+ \n+ THE  SOFTWARE IS  PROVIDED  \"AS  IS\", WITHOUT  WARRANTY  OF ANY  KIND,\n+ EXPRESS OR  IMPLIED, INCLUDING  BUT NOT LIMITED  TO THE  WARRANTIES OF\n+ MERCHANTABILITY,    FITNESS    FOR    A   PARTICULAR    PURPOSE    AND\n+ NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n+ LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n+ OF CONTRACT, TORT OR OTHERWISE,  ARISING FROM, OUT OF OR IN CONNECTION\n+ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n+\n+==\n+\n+For Bootbox.js (http://bootboxjs.com/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For Bootstrap (http://getbootstrap.com/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For CodeMirror (http://codemirror.net/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For Jackson (http://wiki.fasterxml.com/JacksonHome):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For Guava (https://github.com/google/guava):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For Wicket - jQuery UI (http://www.7thweb.net/wicket-jquery-ui/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For LMAX Disruptor (https://lmax-exchange.github.io/disruptor/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For JAX-B (http://jaxb.java.net/):\n+This is licensed under the CDDL 1.0:\n+\n+COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0\n+\n+1. Definitions.\n+\n+1.1. \"Contributor\" means each individual or entity that\n+creates or contributes to the creation of Modifications.\n+\n+1.2. \"Contributor Version\" means the combination of the\n+Original Software, prior Modifications used by a\n+Contributor (if any), and the Modifications made by that\n+particular Contributor.\n+\n+1.3. \"Covered Software\" means (a) the Original Software, or\n+(b) Modifications, or (c) the combination of files\n+containing Original Software with files containing\n+Modifications, in each case including portions thereof.\n+\n+1.4. \"Executable\" means the Covered Software in any form\n+other than Source Code.\n+\n+1.5. \"Initial Developer\" means the individual or entity\n+that first makes Original Software available under this\n+License.\n+\n+1.6. \"Larger Work\" means a work which combines Covered\n+Software or portions thereof with code not governed by the\n+terms of this License.\n+\n+1.7. \"License\" means this document.\n+\n+1.8. \"Licensable\" means having the right to grant, to the\n+maximum extent possible, whether at the time of the initial\n+grant or subsequently acquired, any and all of the rights\n+conveyed herein.\n+\n+1.9. \"Modifications\" means the Source Code and Executable\n+form of any of the following:\n+\n+A. Any file that results from an addition to,\n+deletion from or modification of the contents of a\n+file containing Original Software or previous\n+Modifications;\n+\n+B. Any new file that contains any part of the\n+Original Software or previous Modification; or\n+\n+C. Any new file that is contributed or otherwise made\n+available under the terms of this License.\n+\n+1.10. \"Original Software\" means the Source Code and\n+Executable form of computer software code that is\n+originally released under this License.\n+\n+1.11. \"Patent Claims\" means any patent claim(s), now owned\n+or hereafter acquired, including without limitation,\n+method, process, and apparatus claims, in any patent\n+Licensable by grantor.\n+\n+1.12. \"Source Code\" means (a) the common form of computer\n+software code in which modifications are made and (b)\n+associated documentation included in or with such code.\n+\n+1.13. \"You\" (or \"Your\") means an individual or a legal\n+entity exercising rights under, and complying with all of\n+the terms of, this License. For legal entities, \"You\"\n+includes any entity which controls, is controlled by, or is\n+under common control with You. For purposes of this\n+definition, \"control\" means (a) the power, direct or\n+indirect, to cause the direction or management of such\n+entity, whether by contract or otherwise, or (b) ownership\n+of more than fifty percent (50%) of the outstanding shares\n+or beneficial ownership of such entity.\n+\n+2. License Grants.\n+\n+2.1. The Initial Developer Grant.\n+\n+Conditioned upon Your compliance with Section 3.1 below and\n+subject to third party intellectual property claims, the\n+Initial Developer hereby grants You a world-wide,\n+royalty-free, non-exclusive license:\n+\n+(a) under intellectual property rights (other than\n+patent or trademark) Licensable by Initial Developer,\n+to use, reproduce, modify, display, perform,\n+sublicense and distribute the Original Software (or\n+portions thereof), with or without Modifications,\n+and/or as part of a Larger Work; and\n+\n+(b) under Patent Claims infringed by the making,\n+using or selling of Original Software, to make, have\n+made, use, practice, sell, and offer for sale, and/or\n+otherwise dispose of the Original Software (or\n+portions thereof).\n+\n+(c) The licenses granted in Sections 2.1(a) and (b)\n+are effective on the date Initial Developer first\n+distributes or otherwise makes the Original Software\n+available to a third party under the terms of this\n+License.\n+\n+(d) Notwithstanding Section 2.1(b) above, no patent\n+license is granted: (1) for code that You delete from\n+the Original Software, or (2) for infringements\n+caused by: (i) the modification of the Original\n+Software, or (ii) the combination of the Original\n+Software with other software or devices.\n+\n+2.2. Contributor Grant.\n+\n+Conditioned upon Your compliance with Section 3.1 below and\n+subject to third party intellectual property claims, each\n+Contributor hereby grants You a world-wide, royalty-free,\n+non-exclusive license:\n+\n+(a) under intellectual property rights (other than\n+patent or trademark) Licensable by Contributor to\n+use, reproduce, modify, display, perform, sublicense\n+and distribute the Modifications created by such\n+Contributor (or portions thereof), either on an\n+unmodified basis, with other Modifications, as\n+Covered Software and/or as part of a Larger Work; and\n+\n+(b) under Patent Claims infringed by the making,\n+using, or selling of Modifications made by that\n+Contributor either alone and/or in combination with\n+its Contributor Version (or portions of such\n+combination), to make, use, sell, offer for sale,\n+have made, and/or otherwise dispose of: (1)\n+Modifications made by that Contributor (or portions\n+thereof); and (2) the combination of Modifications\n+made by that Contributor with its Contributor Version\n+(or portions of such combination).\n+\n+(c) The licenses granted in Sections 2.2(a) and\n+2.2(b) are effective on the date Contributor first\n+distributes or otherwise makes the Modifications\n+available to a third party.\n+\n+(d) Notwithstanding Section 2.2(b) above, no patent\n+license is granted: (1) for any code that Contributor\n+has deleted from the Contributor Version; (2) for\n+infringements caused by: (i) third party\n+modifications of Contributor Version, or (ii) the\n+combination of Modifications made by that Contributor\n+with other software (except as part of the\n+Contributor Version) or other devices; or (3) under\n+Patent Claims infringed by Covered Software in the\n+absence of Modifications made by that Contributor.\n+\n+3. Distribution Obligations.\n+\n+3.1. Availability of Source Code.\n+\n+Any Covered Software that You distribute or otherwise make\n+available in Executable form must also be made available in\n+Source Code form and that Source Code form must be\n+distributed only under the terms of this License. You must\n+include a copy of this License with every copy of the\n+Source Code form of the Covered Software You distribute or\n+otherwise make available. You must inform recipients of any\n+such Covered Software in Executable form as to how they can\n+obtain such Covered Software in Source Code form in a\n+reasonable manner on or through a medium customarily used\n+for software exchange.\n+\n+3.2. Modifications.\n+\n+The Modifications that You create or to which You\n+contribute are governed by the terms of this License. You\n+represent that You believe Your Modifications are Your\n+original creation(s) and/or You have sufficient rights to\n+grant the rights conveyed by this License.\n+\n+3.3. Required Notices.\n+\n+You must include a notice in each of Your Modifications\n+that identifies You as the Contributor of the Modification.\n+You may not remove or alter any copyright, patent or\n+trademark notices contained within the Covered Software, or\n+any notices of licensing or any descriptive text giving\n+attribution to any Contributor or the Initial Developer.\n+\n+3.4. Application of Additional Terms.\n+\n+You may not offer or impose any terms on any Covered\n+Software in Source Code form that alters or restricts the\n+applicable version of this License or the recipients'\n+rights hereunder. You may choose to offer, and to charge a\n+fee for, warranty, support, indemnity or liability\n+obligations to one or more recipients of Covered Software.\n+However, you may do so only on Your own behalf, and not on\n+behalf of the Initial Developer or any Contributor. You\n+must make it absolutely clear that any such warranty,\n+support, indemnity or liability obligation is offered by\n+You alone, and You hereby agree to indemnify the Initial\n+Developer and every Contributor for any liability incurred\n+by the Initial Developer or such Contributor as a result of\n+warranty, support, indemnity or liability terms You offer.\n+\n+3.5. Distribution of Executable Versions.\n+\n+You may distribute the Executable form of the Covered\n+Software under the terms of this License or under the terms\n+of a license of Your choice, which may contain terms\n+different from this License, provided that You are in\n+compliance with the terms of this License and that the\n+license for the Executable form does not attempt to limit\n+or alter the recipient's rights in the Source Code form\n+from the rights set forth in this License. If You\n+distribute the Covered Software in Executable form under a\n+different license, You must make it absolutely clear that\n+any terms which differ from this License are offered by You\n+alone, not by the Initial Developer or Contributor. You\n+hereby agree to indemnify the Initial Developer and every\n+Contributor for any liability incurred by the Initial\n+Developer or such Contributor as a result of any such terms\n+You offer.\n+\n+3.6. Larger Works.\n+\n+You may create a Larger Work by combining Covered Software\n+with other code not governed by the terms of this License\n+and distribute the Larger Work as a single product. In such\n+a case, You must make sure the requirements of this License\n+are fulfilled for the Covered Software.\n+\n+4. Versions of the License.\n+\n+4.1. New Versions.\n+\n+Sun Microsystems, Inc. is the initial license steward and\n+may publish revised and/or new versions of this License\n+from time to time. Each version will be given a\n+distinguishing version number. Except as provided in\n+Section 4.3, no one other than the license steward has the\n+right to modify this License.\n+\n+4.2. Effect of New Versions.\n+\n+You may always continue to use, distribute or otherwise\n+make the Covered Software available under the terms of the\n+version of the License under which You originally received\n+the Covered Software. If the Initial Developer includes a\n+notice in the Original Software prohibiting it from being\n+distributed or otherwise made available under any\n+subsequent version of the License, You must distribute and\n+make the Covered Software available under the terms of the\n+version of the License under which You originally received\n+the Covered Software. Otherwise, You may also choose to\n+use, distribute or otherwise make the Covered Software\n+available under the terms of any subsequent version of the\n+License published by the license steward.\n+\n+4.3. Modified Versions.\n+\n+When You are an Initial Developer and You want to create a\n+new license for Your Original Software, You may create and\n+use a modified version of this License if You: (a) rename\n+the license and remove any references to the name of the\n+license steward (except to note that the license differs\n+from this License); and (b) otherwise make it clear that\n+the license contains terms which differ from this License.\n+\n+5. DISCLAIMER OF WARRANTY.\n+\n+COVERED SOFTWARE IS PROVIDED UNDER THIS LICENSE ON AN \"AS IS\"\n+BASIS, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,\n+INCLUDING, WITHOUT LIMITATION, WARRANTIES THAT THE COVERED\n+SOFTWARE IS FREE OF DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR\n+PURPOSE OR NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY AND\n+PERFORMANCE OF THE COVERED SOFTWARE IS WITH YOU. SHOULD ANY\n+COVERED SOFTWARE PROVE DEFECTIVE IN ANY RESPECT, YOU (NOT THE\n+INITIAL DEVELOPER OR ANY OTHER CONTRIBUTOR) ASSUME THE COST OF\n+ANY NECESSARY SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER OF\n+WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO USE OF\n+ANY COVERED SOFTWARE IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS\n+DISCLAIMER.\n+\n+6. TERMINATION.\n+\n+6.1. This License and the rights granted hereunder will\n+terminate automatically if You fail to comply with terms\n+herein and fail to cure such breach within 30 days of\n+becoming aware of the breach. Provisions which, by their\n+nature, must remain in effect beyond the termination of\n+this License shall survive.\n+\n+6.2. If You assert a patent infringement claim (excluding\n+declaratory judgment actions) against Initial Developer or\n+a Contributor (the Initial Developer or Contributor against\n+whom You assert such claim is referred to as \"Participant\")\n+alleging that the Participant Software (meaning the\n+Contributor Version where the Participant is a Contributor\n+or the Original Software where the Participant is the\n+Initial Developer) directly or indirectly infringes any\n+patent, then any and all rights granted directly or\n+indirectly to You by such Participant, the Initial\n+Developer (if the Initial Developer is not the Participant)\n+and all Contributors under Sections 2.1 and/or 2.2 of this\n+License shall, upon 60 days notice from Participant\n+terminate prospectively and automatically at the expiration\n+of such 60 day notice period, unless if within such 60 day\n+period You withdraw Your claim with respect to the\n+Participant Software against such Participant either\n+unilaterally or pursuant to a written agreement with\n+Participant.\n+\n+6.3. In the event of termination under Sections 6.1 or 6.2\n+above, all end user licenses that have been validly granted\n+by You or any distributor hereunder prior to termination\n+(excluding licenses granted to You by any distributor)\n+shall survive termination.\n+\n+7. LIMITATION OF LIABILITY.\n+\n+UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER TORT\n+(INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL YOU, THE\n+INITIAL DEVELOPER, ANY OTHER CONTRIBUTOR, OR ANY DISTRIBUTOR OF\n+COVERED SOFTWARE, OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE\n+LIABLE TO ANY PERSON FOR ANY INDIRECT, SPECIAL, INCIDENTAL, OR\n+CONSEQUENTIAL DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT\n+LIMITATION, DAMAGES FOR LOST PROFITS, LOSS OF GOODWILL, WORK\n+STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL OTHER\n+COMMERCIAL DAMAGES OR LOSSES, EVEN IF SUCH PARTY SHALL HAVE BEEN\n+INFORMED OF THE POSSIBILITY OF SUCH DAMAGES. THIS LIMITATION OF\n+LIABILITY SHALL NOT APPLY TO LIABILITY FOR DEATH OR PERSONAL\n+INJURY RESULTING FROM SUCH PARTY'S NEGLIGENCE TO THE EXTENT\n+APPLICABLE LAW PROHIBITS SUCH LIMITATION. SOME JURISDICTIONS DO\n+NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR\n+CONSEQUENTIAL DAMAGES, SO THIS EXCLUSION AND LIMITATION MAY NOT\n+APPLY TO YOU.\n+\n+8. U.S. GOVERNMENT END USERS.\n+\n+The Covered Software is a \"commercial item,\" as that term is\n+defined in 48 C.F.R. 2.101 (Oct. 1995), consisting of \"commercial\n+computer software\" (as that term is defined at 48 C.F.R. $\n+252.227-7014(a)(1)) and \"commercial computer software\n+documentation\" as such terms are used in 48 C.F.R. 12.212 (Sept.\n+1995). Consistent with 48 C.F.R. 12.212 and 48 C.F.R. 227.7202-1\n+through 227.7202-4 (June 1995), all U.S. Government End Users\n+acquire Covered Software with only those rights set forth herein.\n+This U.S. Government Rights clause is in lieu of, and supersedes,\n+any other FAR, DFAR, or other clause or provision that addresses\n+Government rights in computer software under this License.\n+\n+9. MISCELLANEOUS.\n+\n+This License represents the complete agreement concerning subject\n+matter hereof. If any provision of this License is held to be\n+unenforceable, such provision shall be reformed only to the\n+extent necessary to make it enforceable. This License shall be\n+governed by the law of the jurisdiction specified in a notice\n+contained within the Original Software (except to the extent\n+applicable law, if any, provides otherwise), excluding such\n+jurisdiction's conflict-of-law provisions. Any litigation\n+relating to this License shall be subject to the jurisdiction of\n+the courts located in the jurisdiction and venue specified in a\n+notice contained within the Original Software, with the losing\n+party responsible for costs, including, without limitation, court\n+costs and reasonable attorneys' fees and expenses. The\n+application of the United Nations Convention on Contracts for the\n+International Sale of Goods is expressly excluded. Any law or\n+regulation which provides that the language of a contract shall\n+be construed against the drafter shall not apply to this License.\n+You agree that You alone are responsible for compliance with the\n+United States export administration regulations (and the export\n+control laws and regulation of any other countries) when You use,\n+distribute or otherwise make available any Covered Software.\n+\n+10. RESPONSIBILITY FOR CLAIMS.\n+\n+As between Initial Developer and the Contributors, each party is\n+responsible for claims and damages arising, directly or\n+indirectly, out of its utilization of rights under this License\n+and You agree to work with Initial Developer and Contributors to\n+distribute such responsibility on an equitable basis. Nothing\n+herein is intended or shall be deemed to constitute any admission\n+of liability.\n+\n+==\n+\n+For Font Awesome (http://fontawesome.io/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For google-diff-match-patch (https://code.google.com/archive/p/google-diff-match-patch/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For Swagger (http://swagger.io/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For Ionicons (http://ionicons.com/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For slimScroll (http://rocha.la/jQuery-slimScroll):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For javax.annotation-api (https://jcp.org/en/jsr/detail?id=250):\n+This is licensed under the CDDL 1.0, see above.\n+\n+==\n+\n+For Bean Validation API (http://beanvalidation.org/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For javax.ws.rs-api (https://jax-rs-spec.java.net/):\n+This is licensed under the CDDL 1.0, see above.\n+\n+==\n+\n+For Joda Time (http://www.joda.org/joda-time/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For jQuery (http://jquery.com/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For jquery.cookie (https://github.com/carhartl/jquery-cookie):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For jQuery UI (http://jqueryui.com/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For jQuery++ (http://jquerypp.com/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For jsPlumb (http://jsplumbtoolkit.com/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For Modernizr (https://modernizr.com):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For StAX2 API (http://wiki.fasterxml.com/WoodstoxStax2):\n+This is licensed under the BSD license:\n+\n+Redistribution and use in source and binary forms, with or without \n+modification, are permitted provided that the following conditions are met:\n+\n+1. Redistributions of source code must retain the above copyright notice, this \n+list of conditions and the following disclaimer.\n+\n+2. Redistributions in binary form must reproduce the above copyright notice, \n+this list of conditions and the following disclaimer in the documentation \n+and/or other materials provided with the distribution.\n+\n+3. Neither the name of the copyright holder nor the names of its contributors \n+may be used to endorse or promote products derived from this software without \n+specific prior written permission.\n+\n+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND \n+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED \n+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \n+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE \n+FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL \n+DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR \n+SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n+CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, \n+OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE \n+OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+\n+==\n+\n+For Woodstox (http://wiki.fasterxml.com/WoodstoxHome):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For Simple Logging Facade for Java - SLF4J (http://www.slf4j.org/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For Spring Framework (http://projects.spring.io/spring-framework/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For ThreeTen Backport (http://www.threeten.org/threetenbp/):\n+This is licensed under the BSD license, see above.\n+\n+==\n+\n+For Chart.js (http://www.chartjs.org/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For spin.js (http://spin.js.org/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For typeahead.js (http://twitter.github.io/typeahead.js/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For Wicket-Bootstrap (http://wb.agilecoders.de/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For X-editable (http://vitalets.github.io/x-editable/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For Source Sans Pro (https://github.com/adobe-fonts/source-sans-pro):\n+This is lincesed under the SIL Open Font License, Version 1.1:\n+\n+-----------------------------------------------------------\n+SIL OPEN FONT LICENSE Version 1.1 - 26 February 2007\n+-----------------------------------------------------------\n+\n+PREAMBLE\n+The goals of the Open Font License (OFL) are to stimulate worldwide\n+development of collaborative font projects, to support the font creation\n+efforts of academic and linguistic communities, and to provide a free and\n+open framework in which fonts may be shared and improved in partnership\n+with others.\n+\n+The OFL allows the licensed fonts to be used, studied, modified and\n+redistributed freely as long as they are not sold by themselves. The\n+fonts, including any derivative works, can be bundled, embedded, \n+redistributed and/or sold with any software provided that any reserved\n+names are not used by derivative works. The fonts and derivatives,\n+however, cannot be released under any other type of license. The\n+requirement for fonts to remain under this license does not apply\n+to any document created using the fonts or their derivatives.\n+\n+DEFINITIONS\n+\"Font Software\" refers to the set of files released by the Copyright\n+Holder(s) under this license and clearly marked as such. This may\n+include source files, build scripts and documentation.\n+\n+\"Reserved Font Name\" refers to any names specified as such after the\n+copyright statement(s).\n+\n+\"Original Version\" refers to the collection of Font Software components as\n+distributed by the Copyright Holder(s).\n+\n+\"Modified Version\" refers to any derivative made by adding to, deleting,\n+or substituting -- in part or in whole -- any of the components of the\n+Original Version, by changing formats or by porting the Font Software to a\n+new environment.\n+\n+\"Author\" refers to any designer, engineer, programmer, technical\n+writer or other person who contributed to the Font Software.\n+\n+PERMISSION & CONDITIONS\n+Permission is hereby granted, free of charge, to any person obtaining\n+a copy of the Font Software, to use, study, copy, merge, embed, modify,\n+redistribute, and sell modified and unmodified copies of the Font\n+Software, subject to the following conditions:\n+\n+1) Neither the Font Software nor any of its individual components,\n+in Original or Modified Versions, may be sold by itself.\n+\n+2) Original or Modified Versions of the Font Software may be bundled,\n+redistributed and/or sold with any software, provided that each copy\n+contains the above copyright notice and this license. These can be\n+included either as stand-alone text files, human-readable headers or\n+in the appropriate machine-readable metadata fields within text or\n+binary files as long as those fields can be easily viewed by the user.\n+\n+3) No Modified Version of the Font Software may use the Reserved Font\n+Name(s) unless explicit written permission is granted by the corresponding\n+Copyright Holder. This restriction only applies to the primary font name as\n+presented to the users.\n+\n+4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font\n+Software shall not be used to promote, endorse or advertise any\n+Modified Version, except to acknowledge the contribution(s) of the\n+Copyright Holder(s) and the Author(s) or with their explicit written\n+permission.\n+\n+5) The Font Software, modified or unmodified, in part or in whole,\n+must be distributed entirely under this license, and must not be\n+distributed under any other license. The requirement for fonts to\n+remain under this license does not apply to any document created\n+using the Font Software.\n+\n+TERMINATION\n+This license becomes null and void if any of the above conditions are\n+not met.\n+\n+DISCLAIMER\n+THE FONT SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF\n+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT\n+OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE\n+COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n+INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL\n+DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n+FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM\n+OTHER DEALINGS IN THE FONT SOFTWARE."},{"sha":"b944552bf095fe1b7d592d04793677d5a5c7aaac","filename":"docker/console/NOTICE","status":"added","additions":151,"deletions":0,"changes":151,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fconsole%2FNOTICE","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fconsole%2FNOTICE","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fconsole%2FNOTICE?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,151 @@\n+Apache Syncope\n+Copyright 2012-2019 The Apache Software Foundation\n+\n+This product includes software developed by:\n+The Apache Software Foundation (http://www.apache.org/).\n+\n+The following copyright notice(s) were affixed to portions of this code\n+with which this file is now or was at one time distributed.\n+\n+==\n+\n+This product includes software developed by the Animate.css project.\n+Copyright (c) 2016 Daniel Eden\n+\n+==\n+\n+This product includes software developed by the Bootbox.js project.\n+Copyright (C) 2011-2015 by Nick Payne nick@kurai.co.uk\n+\n+==\n+\n+This product includes software developed by the Bootstrap project.\n+Copyright (c) 2011-2016 Twitter, Inc.\n+\n+==\n+\n+This product includes software developed by the Modernizr project.\n+Copyright (C) 2016\n+\n+==\n+\n+This product includes software developed by the Jackson project.\n+\n+==\n+\n+This product includes software developed by the Google Guava project.\n+Copyright (c) 2016 The Guava Authors.\n+\n+==\n+\n+This product includes software developed by the Wicket - jQuery UI project.\n+Copyright 2012-2013 Sebastien Briquet\n+\n+==\n+\n+This product includes software developed by the JAXB project.\n+Copyright (c) 2013-2016 The JAXB project.\n+\n+==\n+\n+This product includes software developed by the google-diff-match-patch project.\n+Copyright (c) 2006 Google Inc.\n+\n+==\n+\n+This product includes software developed by the Swagger project.\n+Copyright 2016 SmartBear Software\n+\n+==\n+\n+This product includes software developed by the Ionicons project.\n+Copyright (c) 2016 Drifty (http://drifty.com/)\n+\n+==\n+\n+This product includes software developed by the slimScroll project.\n+Copyright (c) 2011 Piotr Rochala (http://rocha.la)\n+\n+==\n+\n+This product includs software developed by Oracle.\n+Copyright (c) 2012-2013 Oracle and/or its affiliates. All rights reserved.\n+\n+==\n+\n+This product includes software developed by the Bean Validation Project (http://beanvalidation.org).\n+Copyright (c) Red Hat, Inc., Emmanuel Bernard\n+\n+==\n+\n+This product includes software developed by the JAX-RS project.\n+Copyright (c) 2014, Oracle Corporation and/or its affiliates. All rights reserved.\n+\n+==\n+\n+This product includes software developed by the Joda Time project.\n+Copyright (c) 2002-2016 Joda.org. All Rights Reserved.\n+\n+==\n+\n+This product includes the jQuery Core JavaScript Library.\n+Copyright 2007, 2016 jQuery Foundation and other contributors.\n+\n+==\n+\n+This product includes software developed by the jquery.cookie project.\n+Copyright 2014 Klaus Hartl\n+\n+==\n+\n+This product includes the jQuery UI JavaScript Library.\n+Copyright 2007, 2015 jQuery Foundation and other contributors.\n+\n+==\n+\n+This product includes software developed by the jQuery++ project.\n+Copyright (C) 2012 Bitovi\n+\n+==\n+\n+This product includes software developed by the jsPlumb project.\n+Copyright (c) 2010 - 2014 jsPlumb, http://jsplumbtoolkit.com/\n+\n+==\n+\n+This product includes software developed by the Stax 2 Extension API Project.\n+\n+==\n+\n+This product includes software developed by the Woodstox Project.\n+\n+==\n+\n+This products includes software developed by the Simple Logging Facade for Java (SLF4J) project.\n+Copyright (c) 2004-2016 QOS.ch.\n+\n+==\n+\n+This product includes software developed by SpringSource.\n+Copyright (c) 2004-2016 SpringSource\n+All rights reserved.\n+\n+==\n+\n+This product includes software developed by the spin.js project.\n+Copyright (c) 2011-2015 Felix Gnass [fgnass at gmail dot com]\n+\n+==\n+\n+This product includes software developed by the Chart.js project.\n+Copyright (c) 2018 Chart.js Contributors\n+\n+==\n+\n+This product includes software developed by the X-editable project.\n+Copyright (c) 2012 Vitaliy Potapov\n+\n+==\n+\n+This product includes software developed by Adobe Systems Incorporated (http://www.adobe.com/).\n+Copyright 2010, 2012, 2014 Adobe Systems Incorporated (http://www.adobe.com/), with Reserved Font Name 'Source'. All Rights Reserved. Source is a trademark of Adobe Systems Incorporated in the United States and/or other countries."},{"sha":"8ecfb3e1d4cc22d63b86ee77d10f9fd831b2b5d0","filename":"docker/console/pom.xml","status":"modified","additions":72,"deletions":19,"changes":91,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fconsole%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -31,47 +31,92 @@ under the License.\n   <description>Apache Syncope Docker Console</description>\n   <groupId>org.apache.syncope</groupId>\n   <artifactId>syncope-docker-console</artifactId>\n+  <packaging>war</packaging>\n \n   <properties>\n     <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n   </properties>\n   \n   <dependencies>\n     <dependency>\n-      <groupId>org.apache.syncope</groupId>\n-      <artifactId>syncope-deb-console</artifactId>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-starter-undertow</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.client.idm</groupId>\n+      <artifactId>syncope-client-idm-console</artifactId>\n       <version>${project.version}</version>\n-      <type>war</type>\n-      <scope>test</scope>\n     </dependency>\n \n     <dependency>\n-      <groupId>org.apache.syncope.fit</groupId>\n-      <artifactId>syncope-fit-console-reference</artifactId>\n+      <groupId>org.apache.syncope.ext.flowable</groupId>\n+      <artifactId>syncope-ext-flowable-client-console</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.camel</groupId>\n+      <artifactId>syncope-ext-camel-client-console</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.saml2sp</groupId>\n+      <artifactId>syncope-ext-saml2sp-client-console</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n+      <artifactId>syncope-ext-oidcclient-client-console</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.scimv2</groupId>\n+      <artifactId>syncope-ext-scimv2-client-console</artifactId>\n       <version>${project.version}</version>\n-      <type>war</type>\n-      <scope>test</scope>\n     </dependency>\n   </dependencies>\n \n   <build>\n     <plugins>\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-antrun-plugin</artifactId>\n-        <inherited>true</inherited>\n+        <artifactId>maven-war-plugin</artifactId>\n+        <inherited>false</inherited>\n+        <configuration>\n+          <webXml>${basedir}/../../fit/console-reference/src/main/webapp/WEB-INF/web.xml</webXml>\n+          <webResources>\n+            <resource>\n+              <directory>${basedir}</directory>\n+              <targetPath>META-INF</targetPath>\n+              <includes>\n+                <include>LICENSE</include>\n+                <include>NOTICE</include>\n+              </includes>\n+            </resource>\n+          </webResources>        \n+          <outputDirectory>${project.build.outputDirectory}</outputDirectory>        \n+        </configuration>\n+      </plugin>\n+\n+      <plugin>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-maven-plugin</artifactId>\n+        <configuration>\n+          <mainClass>org.apache.syncope.client.console.SyncopeConsoleApplication</mainClass>\n+          <layout>ZIP</layout>\n+        </configuration>\n         <executions>\n           <execution>\n-            <id>setup</id>\n-            <phase>process-resources</phase>\n-            <configuration>\n-              <target>\n-                <copy file=\"${basedir}/../../deb/console/target/apache-syncope-console-${project.version}.deb\" todir=\"${project.build.directory}/classes\" overwrite=\"true\" />\n-              </target>\n-            </configuration>\n             <goals>\n-              <goal>run</goal>\n+              <goal>repackage</goal>\n             </goals>\n+            <configuration>\n+              <outputDirectory>${project.build.outputDirectory}</outputDirectory>\n+            </configuration>\n           </execution>\n         </executions>\n       </plugin>\n@@ -85,7 +130,7 @@ under the License.\n             <image>\n               <name>apache/syncope-console:%v</name>\n               <build>\n-                <dockerFileDir>${project.build.directory}/classes</dockerFileDir>\n+                <dockerFileDir>${project.build.outputDirectory}</dockerFileDir>\n               </build>\n             </image>\n           </images>\n@@ -114,6 +159,14 @@ under the License.\n         <directory>src/main/resources</directory>\n         <filtering>true</filtering>\n       </resource>\n+      \n+      <resource>\n+        <directory>${project.basedir}/../../client/idrepo/console/src/main/resources</directory>\n+        <includes>\n+          <include>application.properties</include>\n+        </includes>\n+        <filtering>true</filtering>\n+      </resource>\n     </resources>\n   </build>\n "},{"sha":"990959dbb024ad0c4f697ccf7a28e1eb2dc9a123","filename":"docker/console/src/main/resources/Dockerfile","status":"modified","additions":13,"deletions":8,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2FDockerfile","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2FDockerfile","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2FDockerfile?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -15,20 +15,25 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-FROM debian:stable-slim\n+FROM adoptopenjdk/openjdk8-openj9:alpine-slim\n MAINTAINER dev@syncope.apache.org\n \n RUN set -x\n \n-COPY *.deb /tmp/\n+RUN mkdir /opt/syncope\n+RUN mkdir /opt/syncope/bin\n+RUN mkdir /opt/syncope/conf\n+RUN mkdir /opt/syncope/lib\n+RUN mkdir /opt/syncope/log\n \n-COPY *.properties.template /etc/apache-syncope/\n+COPY application.properties /opt/syncope/conf/\n+COPY *.properties.template /opt/syncope/conf/\n+COPY log4j2.xml /opt/syncope/conf/\n \n-COPY build.sh /tmp\n-RUN chmod 755 /tmp/build.sh && sync && /tmp/build.sh && rm /tmp/build.sh\n+COPY syncope-docker-console-*war /opt/syncope/lib/syncope-console.war\n \n-COPY startup.sh /sbin\n-RUN chmod 755 /sbin/startup.sh\n-CMD [\"/sbin/startup.sh\"]\n+COPY startup.sh /opt/syncope/bin\n+RUN chmod 755 /opt/syncope/bin/startup.sh\n+CMD [\"/opt/syncope/bin/startup.sh\"]\n \n EXPOSE 8080"},{"sha":"a16439579091a90d9a499eb7401fb73a5ddb6a33","filename":"docker/console/src/main/resources/build.sh","status":"removed","additions":0,"deletions":58,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fbuild.sh","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fbuild.sh","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fbuild.sh?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,58 +0,0 @@\n-#!/bin/bash\n-\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-\n-set -x\n-\n-#####\n-# Disable suggests/recommends\n-#####\n-echo APT::Install-Recommends \"0\"\\; > /etc/apt/apt.conf.d/10disableextras\n-echo APT::Install-Suggests \"0\"\\; >>  /etc/apt/apt.conf.d/10disableextras\n-\n-export DEBIAN_FRONTEND noninteractive\n-export DEBCONF_TERSE true\n-\n-# needed by debian:stable-slim\n-mkdir -p /usr/share/man/man1/\n-\n-######\n-# Install packages\n-######\n-apt-get -q update \\\n-  && apt-get -q install -y \\\n-    xtail \\\n-    openjdk-8-jdk \\\n-    tomcat8 \\\n-    libservlet3.1-java \\\n-  && apt-get clean\n-\n-dpkg -i /tmp/*.deb && rm /tmp/*deb\n-\n-######\n-# Setup Tomcat\n-######\n-\n-sed -i 's/--exec/--startas/' /etc/init.d/tomcat8\n-\n-echo \"JAVA_OPTS=\\\"\\${JAVA_OPTS} -Dfile.encoding=UTF-8 -server \\\n--Xms1536m -Xmx1536m -XX:NewSize=256m -XX:MaxNewSize=256m \\\n--XX:PermSize=256m -XX:MaxPermSize=256m -XX:+DisableExplicitGC \\\n--Djava.security.egd=file:/dev/./urandom\\\"\" >> /etc/default/tomcat8\n-\n-echo \"JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\" >> /etc/default/tomcat8"},{"sha":"256e90753c7c3096ff2952b4ff55f7471b05613f","filename":"docker/console/src/main/resources/console.properties.template","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties.template","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties.template","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties.template?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -14,7 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-console.directory=/etc/apache-syncope\n+console.directory=${conf.directory}\n \n site=http://syncope.apache.org\n \n@@ -38,7 +38,6 @@ reconciliationReportKey=c3520ad9-179f-49e7-b315-d684d216dd97\n page.dashboard=org.apache.syncope.client.console.pages.Dashboard\n page.realms=org.apache.syncope.client.console.pages.Realms\n page.reports=org.apache.syncope.client.console.pages.Reports\n-page.workflow=org.apache.syncope.client.console.pages.Workflow\n page.audit=org.apache.syncope.client.console.pages.Audit\n page.implementations=org.apache.syncope.client.console.pages.Implementations\n page.logs=org.apache.syncope.client.console.pages.Logs\n@@ -47,3 +46,7 @@ page.types=org.apache.syncope.client.console.pages.Types\n page.policies=org.apache.syncope.client.console.pages.Policies\n page.notifications=org.apache.syncope.client.console.pages.Notifications\n page.parameters=org.apache.syncope.client.console.pages.Parameters\n+\n+executor.corePoolSize=10\n+executor.maxPoolSize=20\n+executor.queueCapacity=50"},{"sha":"c57064db71385a93c0d6c59bea15eede5a17a096","filename":"docker/console/src/main/resources/log4j2.xml","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,53 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<configuration status=\"WARN\">\n+\n+  <appenders>\n+\n+    <Console name=\"console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+      <PatternLayout pattern=\"%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} %highlight{${LOG_LEVEL_PATTERN:-%5p}}{FATAL=red blink, ERROR=red, WARN=yellow bold, INFO=green, DEBUG=green bold, TRACE=blue} [%11.11t] %style{%-60.60c{60}}{cyan} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}\"/>\n+    </Console>\n+    \n+  </appenders>\n+  \n+  <loggers>\n+    \n+    <asyncLogger name=\"org.apache.syncope.client.lib\" additivity=\"false\" level=\"OFF\">\n+      <appender-ref ref=\"console\"/>\n+    </asyncLogger>\n+\n+    <asyncLogger name=\"org.apache.syncope.client.console\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n+    </asyncLogger>\n+\n+    <asyncLogger name=\"org.apache.wicket\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"console\"/>\n+    </asyncLogger>\n+    \n+    <asyncLogger name=\"org.apache.cxf\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"console\"/>\n+    </asyncLogger>\n+    \n+    <root level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n+    </root>\n+    \n+  </loggers>\n+</configuration>"},{"sha":"8f88f645b36898541720d9be3871bc53c11795fd","filename":"docker/console/src/main/resources/oidcclient-agent.properties.template","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Foidcclient-agent.properties.template","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Foidcclient-agent.properties.template","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Foidcclient-agent.properties.template?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -14,7 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-conf.directory=/etc/apache-syncope\n+conf.directory=${conf.directory}\n \n anonymousUser=${anonymousUser}\n anonymousKey=${anonymousKey}"},{"sha":"8f88f645b36898541720d9be3871bc53c11795fd","filename":"docker/console/src/main/resources/saml2sp-agent.properties.template","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fsaml2sp-agent.properties.template","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fsaml2sp-agent.properties.template","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fsaml2sp-agent.properties.template?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -14,7 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-conf.directory=/etc/apache-syncope\n+conf.directory=${conf.directory}\n \n anonymousUser=${anonymousUser}\n anonymousKey=${anonymousKey}"},{"sha":"62a30995e4308827054e9f0ee5349c7f9b051e63","filename":"docker/console/src/main/resources/startup.sh","status":"modified","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fstartup.sh","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fstartup.sh","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fstartup.sh?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/bin/sh\n \n # Licensed to the Apache Software Foundation (ASF) under one\n # or more contributor license agreements.  See the NOTICE file\n@@ -17,7 +17,7 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-cd /etc/apache-syncope\n+cd /opt/syncope/conf\n \n sed \"s/\\${CORE_SCHEME}/$CORE_SCHEME/\" console.properties.template | \n sed \"s/\\${CORE_HOST}/$CORE_HOST/\" | sed \"s/\\${CORE_PORT}/$CORE_PORT/\" > console.properties\n@@ -28,8 +28,6 @@ sed \"s/\\${CORE_HOST}/$CORE_HOST/\" | sed \"s/\\${CORE_PORT}/$CORE_PORT/\" > oidcclie\n sed \"s/\\${CORE_SCHEME}/$CORE_SCHEME/\" saml2sp-agent.properties.template | \n sed \"s/\\${CORE_HOST}/$CORE_HOST/\" | sed \"s/\\${CORE_PORT}/$CORE_PORT/\" > saml2sp-agent.properties\n \n-/etc/init.d/tomcat8 start\n-\n-xtail /var/log/apache-syncope/*.log /var/log/tomcat8/\n-\n-/bin/bash\n+export LOADER_PATH=\"/opt/syncope/conf,/opt/syncope/lib\"\n+java -Dfile.encoding=UTF-8 -server -Xms1536m -Xmx1536m -XX:NewSize=256m -XX:MaxNewSize=256m \\\n+ -XX:+DisableExplicitGC -Djava.security.egd=file:/dev/./urandom -jar /opt/syncope/lib/syncope-console.war"},{"sha":"991f660075be45317cb9c125977c6279a4e898e6","filename":"docker/core/LICENSE","status":"added","additions":1016,"deletions":0,"changes":1016,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2FLICENSE","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2FLICENSE","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2FLICENSE?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,1016 @@\n+\n+                                 Apache License\n+                           Version 2.0, January 2004\n+                        http://www.apache.org/licenses/\n+\n+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n+\n+   1. Definitions.\n+\n+      \"License\" shall mean the terms and conditions for use, reproduction,\n+      and distribution as defined by Sections 1 through 9 of this document.\n+\n+      \"Licensor\" shall mean the copyright owner or entity authorized by\n+      the copyright owner that is granting the License.\n+\n+      \"Legal Entity\" shall mean the union of the acting entity and all\n+      other entities that control, are controlled by, or are under common\n+      control with that entity. For the purposes of this definition,\n+      \"control\" means (i) the power, direct or indirect, to cause the\n+      direction or management of such entity, whether by contract or\n+      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n+      outstanding shares, or (iii) beneficial ownership of such entity.\n+\n+      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n+      exercising permissions granted by this License.\n+\n+      \"Source\" form shall mean the preferred form for making modifications,\n+      including but not limited to software source code, documentation\n+      source, and configuration files.\n+\n+      \"Object\" form shall mean any form resulting from mechanical\n+      transformation or translation of a Source form, including but\n+      not limited to compiled object code, generated documentation,\n+      and conversions to other media types.\n+\n+      \"Work\" shall mean the work of authorship, whether in Source or\n+      Object form, made available under the License, as indicated by a\n+      copyright notice that is included in or attached to the work\n+      (an example is provided in the Appendix below).\n+\n+      \"Derivative Works\" shall mean any work, whether in Source or Object\n+      form, that is based on (or derived from) the Work and for which the\n+      editorial revisions, annotations, elaborations, or other modifications\n+      represent, as a whole, an original work of authorship. For the purposes\n+      of this License, Derivative Works shall not include works that remain\n+      separable from, or merely link (or bind by name) to the interfaces of,\n+      the Work and Derivative Works thereof.\n+\n+      \"Contribution\" shall mean any work of authorship, including\n+      the original version of the Work and any modifications or additions\n+      to that Work or Derivative Works thereof, that is intentionally\n+      submitted to Licensor for inclusion in the Work by the copyright owner\n+      or by an individual or Legal Entity authorized to submit on behalf of\n+      the copyright owner. For the purposes of this definition, \"submitted\"\n+      means any form of electronic, verbal, or written communication sent\n+      to the Licensor or its representatives, including but not limited to\n+      communication on electronic mailing lists, source code control systems,\n+      and issue tracking systems that are managed by, or on behalf of, the\n+      Licensor for the purpose of discussing and improving the Work, but\n+      excluding communication that is conspicuously marked or otherwise\n+      designated in writing by the copyright owner as \"Not a Contribution.\"\n+\n+      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n+      on behalf of whom a Contribution has been received by Licensor and\n+      subsequently incorporated within the Work.\n+\n+   2. Grant of Copyright License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      copyright license to reproduce, prepare Derivative Works of,\n+      publicly display, publicly perform, sublicense, and distribute the\n+      Work and such Derivative Works in Source or Object form.\n+\n+   3. Grant of Patent License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      (except as stated in this section) patent license to make, have made,\n+      use, offer to sell, sell, import, and otherwise transfer the Work,\n+      where such license applies only to those patent claims licensable\n+      by such Contributor that are necessarily infringed by their\n+      Contribution(s) alone or by combination of their Contribution(s)\n+      with the Work to which such Contribution(s) was submitted. If You\n+      institute patent litigation against any entity (including a\n+      cross-claim or counterclaim in a lawsuit) alleging that the Work\n+      or a Contribution incorporated within the Work constitutes direct\n+      or contributory patent infringement, then any patent licenses\n+      granted to You under this License for that Work shall terminate\n+      as of the date such litigation is filed.\n+\n+   4. Redistribution. You may reproduce and distribute copies of the\n+      Work or Derivative Works thereof in any medium, with or without\n+      modifications, and in Source or Object form, provided that You\n+      meet the following conditions:\n+\n+      (a) You must give any other recipients of the Work or\n+          Derivative Works a copy of this License; and\n+\n+      (b) You must cause any modified files to carry prominent notices\n+          stating that You changed the files; and\n+\n+      (c) You must retain, in the Source form of any Derivative Works\n+          that You distribute, all copyright, patent, trademark, and\n+          attribution notices from the Source form of the Work,\n+          excluding those notices that do not pertain to any part of\n+          the Derivative Works; and\n+\n+      (d) If the Work includes a \"NOTICE\" text file as part of its\n+          distribution, then any Derivative Works that You distribute must\n+          include a readable copy of the attribution notices contained\n+          within such NOTICE file, excluding those notices that do not\n+          pertain to any part of the Derivative Works, in at least one\n+          of the following places: within a NOTICE text file distributed\n+          as part of the Derivative Works; within the Source form or\n+          documentation, if provided along with the Derivative Works; or,\n+          within a display generated by the Derivative Works, if and\n+          wherever such third-party notices normally appear. The contents\n+          of the NOTICE file are for informational purposes only and\n+          do not modify the License. You may add Your own attribution\n+          notices within Derivative Works that You distribute, alongside\n+          or as an addendum to the NOTICE text from the Work, provided\n+          that such additional attribution notices cannot be construed\n+          as modifying the License.\n+\n+      You may add Your own copyright statement to Your modifications and\n+      may provide additional or different license terms and conditions\n+      for use, reproduction, or distribution of Your modifications, or\n+      for any such Derivative Works as a whole, provided Your use,\n+      reproduction, and distribution of the Work otherwise complies with\n+      the conditions stated in this License.\n+\n+   5. Submission of Contributions. Unless You explicitly state otherwise,\n+      any Contribution intentionally submitted for inclusion in the Work\n+      by You to the Licensor shall be under the terms and conditions of\n+      this License, without any additional terms or conditions.\n+      Notwithstanding the above, nothing herein shall supersede or modify\n+      the terms of any separate license agreement you may have executed\n+      with Licensor regarding such Contributions.\n+\n+   6. Trademarks. This License does not grant permission to use the trade\n+      names, trademarks, service marks, or product names of the Licensor,\n+      except as required for reasonable and customary use in describing the\n+      origin of the Work and reproducing the content of the NOTICE file.\n+\n+   7. Disclaimer of Warranty. Unless required by applicable law or\n+      agreed to in writing, Licensor provides the Work (and each\n+      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+      implied, including, without limitation, any warranties or conditions\n+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n+      PARTICULAR PURPOSE. You are solely responsible for determining the\n+      appropriateness of using or redistributing the Work and assume any\n+      risks associated with Your exercise of permissions under this License.\n+\n+   8. Limitation of Liability. In no event and under no legal theory,\n+      whether in tort (including negligence), contract, or otherwise,\n+      unless required by applicable law (such as deliberate and grossly\n+      negligent acts) or agreed to in writing, shall any Contributor be\n+      liable to You for damages, including any direct, indirect, special,\n+      incidental, or consequential damages of any character arising as a\n+      result of this License or out of the use or inability to use the\n+      Work (including but not limited to damages for loss of goodwill,\n+      work stoppage, computer failure or malfunction, or any and all\n+      other commercial damages or losses), even if such Contributor\n+      has been advised of the possibility of such damages.\n+\n+   9. Accepting Warranty or Additional Liability. While redistributing\n+      the Work or Derivative Works thereof, You may choose to offer,\n+      and charge a fee for, acceptance of support, warranty, indemnity,\n+      or other liability obligations and/or rights consistent with this\n+      License. However, in accepting such obligations, You may act only\n+      on Your own behalf and on Your sole responsibility, not on behalf\n+      of any other Contributor, and only if You agree to indemnify,\n+      defend, and hold each Contributor harmless for any liability\n+      incurred by, or claims asserted against, such Contributor by reason\n+      of your accepting any such warranty or additional liability.\n+\n+   END OF TERMS AND CONDITIONS\n+\n+   APPENDIX: How to apply the Apache License to your work.\n+\n+      To apply the Apache License to your work, attach the following\n+      boilerplate notice, with the fields enclosed by brackets \"[]\"\n+      replaced with your own identifying information. (Don't include\n+      the brackets!)  The text should be enclosed in the appropriate\n+      comment syntax for the file format. We also recommend that a\n+      file or class name and description of purpose be included on the\n+      same \"printed page\" as the copyright notice for easier\n+      identification within third-party archives.\n+\n+   Copyright [yyyy] [name of copyright owner]\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+\n+==\n+\n+For AOP Alliance (http://aopalliance.sourceforge.net/):\n+This is Public Domain.\n+\n+==\n+\n+For Jackson (http://wiki.fasterxml.com/JacksonHome):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For Java Uuid Generator (JUG) (http://wiki.fasterxml.com/JugHome):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For Guava (https://github.com/google/guava):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For LMAX Disruptor (https://lmax-exchange.github.io/disruptor/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For JAX-B (http://jaxb.java.net/):\n+This is licensed under the CDDL 1.0:\n+\n+COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0\n+\n+1. Definitions.\n+\n+1.1. \"Contributor\" means each individual or entity that\n+creates or contributes to the creation of Modifications.\n+\n+1.2. \"Contributor Version\" means the combination of the\n+Original Software, prior Modifications used by a\n+Contributor (if any), and the Modifications made by that\n+particular Contributor.\n+\n+1.3. \"Covered Software\" means (a) the Original Software, or\n+(b) Modifications, or (c) the combination of files\n+containing Original Software with files containing\n+Modifications, in each case including portions thereof.\n+\n+1.4. \"Executable\" means the Covered Software in any form\n+other than Source Code.\n+\n+1.5. \"Initial Developer\" means the individual or entity\n+that first makes Original Software available under this\n+License.\n+\n+1.6. \"Larger Work\" means a work which combines Covered\n+Software or portions thereof with code not governed by the\n+terms of this License.\n+\n+1.7. \"License\" means this document.\n+\n+1.8. \"Licensable\" means having the right to grant, to the\n+maximum extent possible, whether at the time of the initial\n+grant or subsequently acquired, any and all of the rights\n+conveyed herein.\n+\n+1.9. \"Modifications\" means the Source Code and Executable\n+form of any of the following:\n+\n+A. Any file that results from an addition to,\n+deletion from or modification of the contents of a\n+file containing Original Software or previous\n+Modifications;\n+\n+B. Any new file that contains any part of the\n+Original Software or previous Modification; or\n+\n+C. Any new file that is contributed or otherwise made\n+available under the terms of this License.\n+\n+1.10. \"Original Software\" means the Source Code and\n+Executable form of computer software code that is\n+originally released under this License.\n+\n+1.11. \"Patent Claims\" means any patent claim(s), now owned\n+or hereafter acquired, including without limitation,\n+method, process, and apparatus claims, in any patent\n+Licensable by grantor.\n+\n+1.12. \"Source Code\" means (a) the common form of computer\n+software code in which modifications are made and (b)\n+associated documentation included in or with such code.\n+\n+1.13. \"You\" (or \"Your\") means an individual or a legal\n+entity exercising rights under, and complying with all of\n+the terms of, this License. For legal entities, \"You\"\n+includes any entity which controls, is controlled by, or is\n+under common control with You. For purposes of this\n+definition, \"control\" means (a) the power, direct or\n+indirect, to cause the direction or management of such\n+entity, whether by contract or otherwise, or (b) ownership\n+of more than fifty percent (50%) of the outstanding shares\n+or beneficial ownership of such entity.\n+\n+2. License Grants.\n+\n+2.1. The Initial Developer Grant.\n+\n+Conditioned upon Your compliance with Section 3.1 below and\n+subject to third party intellectual property claims, the\n+Initial Developer hereby grants You a world-wide,\n+royalty-free, non-exclusive license:\n+\n+(a) under intellectual property rights (other than\n+patent or trademark) Licensable by Initial Developer,\n+to use, reproduce, modify, display, perform,\n+sublicense and distribute the Original Software (or\n+portions thereof), with or without Modifications,\n+and/or as part of a Larger Work; and\n+\n+(b) under Patent Claims infringed by the making,\n+using or selling of Original Software, to make, have\n+made, use, practice, sell, and offer for sale, and/or\n+otherwise dispose of the Original Software (or\n+portions thereof).\n+\n+(c) The licenses granted in Sections 2.1(a) and (b)\n+are effective on the date Initial Developer first\n+distributes or otherwise makes the Original Software\n+available to a third party under the terms of this\n+License.\n+\n+(d) Notwithstanding Section 2.1(b) above, no patent\n+license is granted: (1) for code that You delete from\n+the Original Software, or (2) for infringements\n+caused by: (i) the modification of the Original\n+Software, or (ii) the combination of the Original\n+Software with other software or devices.\n+\n+2.2. Contributor Grant.\n+\n+Conditioned upon Your compliance with Section 3.1 below and\n+subject to third party intellectual property claims, each\n+Contributor hereby grants You a world-wide, royalty-free,\n+non-exclusive license:\n+\n+(a) under intellectual property rights (other than\n+patent or trademark) Licensable by Contributor to\n+use, reproduce, modify, display, perform, sublicense\n+and distribute the Modifications created by such\n+Contributor (or portions thereof), either on an\n+unmodified basis, with other Modifications, as\n+Covered Software and/or as part of a Larger Work; and\n+\n+(b) under Patent Claims infringed by the making,\n+using, or selling of Modifications made by that\n+Contributor either alone and/or in combination with\n+its Contributor Version (or portions of such\n+combination), to make, use, sell, offer for sale,\n+have made, and/or otherwise dispose of: (1)\n+Modifications made by that Contributor (or portions\n+thereof); and (2) the combination of Modifications\n+made by that Contributor with its Contributor Version\n+(or portions of such combination).\n+\n+(c) The licenses granted in Sections 2.2(a) and\n+2.2(b) are effective on the date Contributor first\n+distributes or otherwise makes the Modifications\n+available to a third party.\n+\n+(d) Notwithstanding Section 2.2(b) above, no patent\n+license is granted: (1) for any code that Contributor\n+has deleted from the Contributor Version; (2) for\n+infringements caused by: (i) third party\n+modifications of Contributor Version, or (ii) the\n+combination of Modifications made by that Contributor\n+with other software (except as part of the\n+Contributor Version) or other devices; or (3) under\n+Patent Claims infringed by Covered Software in the\n+absence of Modifications made by that Contributor.\n+\n+3. Distribution Obligations.\n+\n+3.1. Availability of Source Code.\n+\n+Any Covered Software that You distribute or otherwise make\n+available in Executable form must also be made available in\n+Source Code form and that Source Code form must be\n+distributed only under the terms of this License. You must\n+include a copy of this License with every copy of the\n+Source Code form of the Covered Software You distribute or\n+otherwise make available. You must inform recipients of any\n+such Covered Software in Executable form as to how they can\n+obtain such Covered Software in Source Code form in a\n+reasonable manner on or through a medium customarily used\n+for software exchange.\n+\n+3.2. Modifications.\n+\n+The Modifications that You create or to which You\n+contribute are governed by the terms of this License. You\n+represent that You believe Your Modifications are Your\n+original creation(s) and/or You have sufficient rights to\n+grant the rights conveyed by this License.\n+\n+3.3. Required Notices.\n+\n+You must include a notice in each of Your Modifications\n+that identifies You as the Contributor of the Modification.\n+You may not remove or alter any copyright, patent or\n+trademark notices contained within the Covered Software, or\n+any notices of licensing or any descriptive text giving\n+attribution to any Contributor or the Initial Developer.\n+\n+3.4. Application of Additional Terms.\n+\n+You may not offer or impose any terms on any Covered\n+Software in Source Code form that alters or restricts the\n+applicable version of this License or the recipients'\n+rights hereunder. You may choose to offer, and to charge a\n+fee for, warranty, support, indemnity or liability\n+obligations to one or more recipients of Covered Software.\n+However, you may do so only on Your own behalf, and not on\n+behalf of the Initial Developer or any Contributor. You\n+must make it absolutely clear that any such warranty,\n+support, indemnity or liability obligation is offered by\n+You alone, and You hereby agree to indemnify the Initial\n+Developer and every Contributor for any liability incurred\n+by the Initial Developer or such Contributor as a result of\n+warranty, support, indemnity or liability terms You offer.\n+\n+3.5. Distribution of Executable Versions.\n+\n+You may distribute the Executable form of the Covered\n+Software under the terms of this License or under the terms\n+of a license of Your choice, which may contain terms\n+different from this License, provided that You are in\n+compliance with the terms of this License and that the\n+license for the Executable form does not attempt to limit\n+or alter the recipient's rights in the Source Code form\n+from the rights set forth in this License. If You\n+distribute the Covered Software in Executable form under a\n+different license, You must make it absolutely clear that\n+any terms which differ from this License are offered by You\n+alone, not by the Initial Developer or Contributor. You\n+hereby agree to indemnify the Initial Developer and every\n+Contributor for any liability incurred by the Initial\n+Developer or such Contributor as a result of any such terms\n+You offer.\n+\n+3.6. Larger Works.\n+\n+You may create a Larger Work by combining Covered Software\n+with other code not governed by the terms of this License\n+and distribute the Larger Work as a single product. In such\n+a case, You must make sure the requirements of this License\n+are fulfilled for the Covered Software.\n+\n+4. Versions of the License.\n+\n+4.1. New Versions.\n+\n+Sun Microsystems, Inc. is the initial license steward and\n+may publish revised and/or new versions of this License\n+from time to time. Each version will be given a\n+distinguishing version number. Except as provided in\n+Section 4.3, no one other than the license steward has the\n+right to modify this License.\n+\n+4.2. Effect of New Versions.\n+\n+You may always continue to use, distribute or otherwise\n+make the Covered Software available under the terms of the\n+version of the License under which You originally received\n+the Covered Software. If the Initial Developer includes a\n+notice in the Original Software prohibiting it from being\n+distributed or otherwise made available under any\n+subsequent version of the License, You must distribute and\n+make the Covered Software available under the terms of the\n+version of the License under which You originally received\n+the Covered Software. Otherwise, You may also choose to\n+use, distribute or otherwise make the Covered Software\n+available under the terms of any subsequent version of the\n+License published by the license steward.\n+\n+4.3. Modified Versions.\n+\n+When You are an Initial Developer and You want to create a\n+new license for Your Original Software, You may create and\n+use a modified version of this License if You: (a) rename\n+the license and remove any references to the name of the\n+license steward (except to note that the license differs\n+from this License); and (b) otherwise make it clear that\n+the license contains terms which differ from this License.\n+\n+5. DISCLAIMER OF WARRANTY.\n+\n+COVERED SOFTWARE IS PROVIDED UNDER THIS LICENSE ON AN \"AS IS\"\n+BASIS, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,\n+INCLUDING, WITHOUT LIMITATION, WARRANTIES THAT THE COVERED\n+SOFTWARE IS FREE OF DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR\n+PURPOSE OR NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY AND\n+PERFORMANCE OF THE COVERED SOFTWARE IS WITH YOU. SHOULD ANY\n+COVERED SOFTWARE PROVE DEFECTIVE IN ANY RESPECT, YOU (NOT THE\n+INITIAL DEVELOPER OR ANY OTHER CONTRIBUTOR) ASSUME THE COST OF\n+ANY NECESSARY SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER OF\n+WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO USE OF\n+ANY COVERED SOFTWARE IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS\n+DISCLAIMER.\n+\n+6. TERMINATION.\n+\n+6.1. This License and the rights granted hereunder will\n+terminate automatically if You fail to comply with terms\n+herein and fail to cure such breach within 30 days of\n+becoming aware of the breach. Provisions which, by their\n+nature, must remain in effect beyond the termination of\n+this License shall survive.\n+\n+6.2. If You assert a patent infringement claim (excluding\n+declaratory judgment actions) against Initial Developer or\n+a Contributor (the Initial Developer or Contributor against\n+whom You assert such claim is referred to as \"Participant\")\n+alleging that the Participant Software (meaning the\n+Contributor Version where the Participant is a Contributor\n+or the Original Software where the Participant is the\n+Initial Developer) directly or indirectly infringes any\n+patent, then any and all rights granted directly or\n+indirectly to You by such Participant, the Initial\n+Developer (if the Initial Developer is not the Participant)\n+and all Contributors under Sections 2.1 and/or 2.2 of this\n+License shall, upon 60 days notice from Participant\n+terminate prospectively and automatically at the expiration\n+of such 60 day notice period, unless if within such 60 day\n+period You withdraw Your claim with respect to the\n+Participant Software against such Participant either\n+unilaterally or pursuant to a written agreement with\n+Participant.\n+\n+6.3. In the event of termination under Sections 6.1 or 6.2\n+above, all end user licenses that have been validly granted\n+by You or any distributor hereunder prior to termination\n+(excluding licenses granted to You by any distributor)\n+shall survive termination.\n+\n+7. LIMITATION OF LIABILITY.\n+\n+UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER TORT\n+(INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL YOU, THE\n+INITIAL DEVELOPER, ANY OTHER CONTRIBUTOR, OR ANY DISTRIBUTOR OF\n+COVERED SOFTWARE, OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE\n+LIABLE TO ANY PERSON FOR ANY INDIRECT, SPECIAL, INCIDENTAL, OR\n+CONSEQUENTIAL DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT\n+LIMITATION, DAMAGES FOR LOST PROFITS, LOSS OF GOODWILL, WORK\n+STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL OTHER\n+COMMERCIAL DAMAGES OR LOSSES, EVEN IF SUCH PARTY SHALL HAVE BEEN\n+INFORMED OF THE POSSIBILITY OF SUCH DAMAGES. THIS LIMITATION OF\n+LIABILITY SHALL NOT APPLY TO LIABILITY FOR DEATH OR PERSONAL\n+INJURY RESULTING FROM SUCH PARTY'S NEGLIGENCE TO THE EXTENT\n+APPLICABLE LAW PROHIBITS SUCH LIMITATION. SOME JURISDICTIONS DO\n+NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR\n+CONSEQUENTIAL DAMAGES, SO THIS EXCLUSION AND LIMITATION MAY NOT\n+APPLY TO YOU.\n+\n+8. U.S. GOVERNMENT END USERS.\n+\n+The Covered Software is a \"commercial item,\" as that term is\n+defined in 48 C.F.R. 2.101 (Oct. 1995), consisting of \"commercial\n+computer software\" (as that term is defined at 48 C.F.R. $\n+252.227-7014(a)(1)) and \"commercial computer software\n+documentation\" as such terms are used in 48 C.F.R. 12.212 (Sept.\n+1995). Consistent with 48 C.F.R. 12.212 and 48 C.F.R. 227.7202-1\n+through 227.7202-4 (June 1995), all U.S. Government End Users\n+acquire Covered Software with only those rights set forth herein.\n+This U.S. Government Rights clause is in lieu of, and supersedes,\n+any other FAR, DFAR, or other clause or provision that addresses\n+Government rights in computer software under this License.\n+\n+9. MISCELLANEOUS.\n+\n+This License represents the complete agreement concerning subject\n+matter hereof. If any provision of this License is held to be\n+unenforceable, such provision shall be reformed only to the\n+extent necessary to make it enforceable. This License shall be\n+governed by the law of the jurisdiction specified in a notice\n+contained within the Original Software (except to the extent\n+applicable law, if any, provides otherwise), excluding such\n+jurisdiction's conflict-of-law provisions. Any litigation\n+relating to this License shall be subject to the jurisdiction of\n+the courts located in the jurisdiction and venue specified in a\n+notice contained within the Original Software, with the losing\n+party responsible for costs, including, without limitation, court\n+costs and reasonable attorneys' fees and expenses. The\n+application of the United Nations Convention on Contracts for the\n+International Sale of Goods is expressly excluded. Any law or\n+regulation which provides that the language of a contract shall\n+be construed against the drafter shall not apply to this License.\n+You agree that You alone are responsible for compliance with the\n+United States export administration regulations (and the export\n+control laws and regulation of any other countries) when You use,\n+distribute or otherwise make available any Covered Software.\n+\n+10. RESPONSIBILITY FOR CLAIMS.\n+\n+As between Initial Developer and the Contributors, each party is\n+responsible for claims and damages arising, directly or\n+indirectly, out of its utilization of rights under this License\n+and You agree to work with Initial Developer and Contributors to\n+distribute such responsibility on an equitable basis. Nothing\n+herein is intended or shall be deemed to constitute any admission\n+of liability.\n+\n+==\n+\n+For HikariCP (http://brettwooldridge.github.io/HikariCP/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For highlight.js (http://highlightjs.org/):\n+This is licensed under the BSD license:\n+\n+Redistribution and use in source and binary forms, with or without \n+modification, are permitted provided that the following conditions are met:\n+\n+1. Redistributions of source code must retain the above copyright notice, this \n+list of conditions and the following disclaimer.\n+\n+2. Redistributions in binary form must reproduce the above copyright notice, \n+this list of conditions and the following disclaimer in the documentation \n+and/or other materials provided with the distribution.\n+\n+3. Neither the name of the copyright holder nor the names of its contributors \n+may be used to endorse or promote products derived from this software without \n+specific prior written permission.\n+\n+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND \n+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED \n+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \n+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE \n+FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL \n+DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR \n+SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n+CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, \n+OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE \n+OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+\n+==\n+\n+For Metrics (http://dropwizard.github.io/metrics/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For Swagger (http://swagger.io/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For javax.annotation-api (https://jcp.org/en/jsr/detail?id=250):\n+This is licensed under the CDDL 1.0, see above.\n+\n+==\n+\n+For Bean Validation API (http://beanvalidation.org/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For javax.ws.rs-api (https://jax-rs-spec.java.net/):\n+This is licensed under the CDDL 1.0, see above.\n+\n+==\n+\n+For Joda Time (http://www.joda.org/joda-time/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For jQuery (http://jquery.com/):\n+This is licensed under the MIT license:\n+\n+ Permission is hereby granted, free  of charge, to any person obtaining\n+ a  copy  of this  software  and  associated  documentation files  (the\n+ \"Software\"), to  deal in  the Software without  restriction, including\n+ without limitation  the rights to  use, copy, modify,  merge, publish,\n+ distribute,  sublicense, and/or sell  copies of  the Software,  and to\n+ permit persons to whom the Software  is furnished to do so, subject to\n+ the following conditions:\n+ \n+ The  above  copyright  notice  and  this permission  notice  shall  be\n+ included in all copies or substantial portions of the Software.\n+ \n+ THE  SOFTWARE IS  PROVIDED  \"AS  IS\", WITHOUT  WARRANTY  OF ANY  KIND,\n+ EXPRESS OR  IMPLIED, INCLUDING  BUT NOT LIMITED  TO THE  WARRANTIES OF\n+ MERCHANTABILITY,    FITNESS    FOR    A   PARTICULAR    PURPOSE    AND\n+ NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n+ LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n+ OF CONTRACT, TORT OR OTHERWISE,  ARISING FROM, OUT OF OR IN CONNECTION\n+ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n+\n+==\n+\n+For jQuery UI (http://jqueryui.com/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For JavaGeom (http://geom-java.sourceforge.net/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For Ehcache (http://ehcache.org/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For Shibboleth (https://shibboleth.net/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For SERP (http://serp.sourceforge.net/):\n+This is licensed under the BSD license, see above.\n+\n+==\n+\n+For ConnId (http://connid.tirasa.net/):\n+This is licensed under the CDDL 1.0, see above.\n+\n+==\n+\n+For Flowable (http://www.flowable.org/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For AspectJ (http://www.eclipse.org/aspectj/):\n+This is licensed under the EPL 1.0:\n+\n+Eclipse Public License - v 1.0\n+\n+THE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS ECLIPSE PUBLIC\n+LICENSE (\"AGREEMENT\"). ANY USE, REPRODUCTION OR DISTRIBUTION OF THE PROGRAM\n+CONSTITUTES RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT.\n+\n+1. DEFINITIONS\n+\n+\"Contribution\" means:\n+\n+a) in the case of the initial Contributor, the initial code and documentation\n+   distributed under this Agreement, and\n+b) in the case of each subsequent Contributor:\n+    i) changes to the Program, and\n+   ii) additions to the Program;\n+\n+   where such changes and/or additions to the Program originate from and are\n+   distributed by that particular Contributor. A Contribution 'originates'\n+   from a Contributor if it was added to the Program by such Contributor\n+   itself or anyone acting on such Contributor's behalf. Contributions do not\n+   include additions to the Program which: (i) are separate modules of\n+   software distributed in conjunction with the Program under their own\n+   license agreement, and (ii) are not derivative works of the Program.\n+\n+\"Contributor\" means any person or entity that distributes the Program.\n+\n+\"Licensed Patents\" mean patent claims licensable by a Contributor which are\n+necessarily infringed by the use or sale of its Contribution alone or when\n+combined with the Program.\n+\n+\"Program\" means the Contributions distributed in accordance with this\n+Agreement.\n+\n+\"Recipient\" means anyone who receives the Program under this Agreement,\n+including all Contributors.\n+\n+2. GRANT OF RIGHTS\n+  a) Subject to the terms of this Agreement, each Contributor hereby grants\n+     Recipient a non-exclusive, worldwide, royalty-free copyright license to\n+     reproduce, prepare derivative works of, publicly display, publicly\n+     perform, distribute and sublicense the Contribution of such Contributor,\n+     if any, and such derivative works, in source code and object code form.\n+  b) Subject to the terms of this Agreement, each Contributor hereby grants\n+     Recipient a non-exclusive, worldwide, royalty-free patent license under\n+     Licensed Patents to make, use, sell, offer to sell, import and otherwise\n+     transfer the Contribution of such Contributor, if any, in source code and\n+     object code form. This patent license shall apply to the combination of\n+     the Contribution and the Program if, at the time the Contribution is\n+     added by the Contributor, such addition of the Contribution causes such\n+     combination to be covered by the Licensed Patents. The patent license\n+     shall not apply to any other combinations which include the Contribution.\n+     No hardware per se is licensed hereunder.\n+  c) Recipient understands that although each Contributor grants the licenses\n+     to its Contributions set forth herein, no assurances are provided by any\n+     Contributor that the Program does not infringe the patent or other\n+     intellectual property rights of any other entity. Each Contributor\n+     disclaims any liability to Recipient for claims brought by any other\n+     entity based on infringement of intellectual property rights or\n+     otherwise. As a condition to exercising the rights and licenses granted\n+     hereunder, each Recipient hereby assumes sole responsibility to secure\n+     any other intellectual property rights needed, if any. For example, if a\n+     third party patent license is required to allow Recipient to distribute\n+     the Program, it is Recipient's responsibility to acquire that license\n+     before distributing the Program.\n+  d) Each Contributor represents that to its knowledge it has sufficient\n+     copyright rights in its Contribution, if any, to grant the copyright\n+     license set forth in this Agreement.\n+\n+3. REQUIREMENTS\n+\n+A Contributor may choose to distribute the Program in object code form under\n+its own license agreement, provided that:\n+\n+  a) it complies with the terms and conditions of this Agreement; and\n+  b) its license agreement:\n+      i) effectively disclaims on behalf of all Contributors all warranties\n+         and conditions, express and implied, including warranties or\n+         conditions of title and non-infringement, and implied warranties or\n+         conditions of merchantability and fitness for a particular purpose;\n+     ii) effectively excludes on behalf of all Contributors all liability for\n+         damages, including direct, indirect, special, incidental and\n+         consequential damages, such as lost profits;\n+    iii) states that any provisions which differ from this Agreement are\n+         offered by that Contributor alone and not by any other party; and\n+     iv) states that source code for the Program is available from such\n+         Contributor, and informs licensees how to obtain it in a reasonable\n+         manner on or through a medium customarily used for software exchange.\n+\n+When the Program is made available in source code form:\n+\n+  a) it must be made available under this Agreement; and\n+  b) a copy of this Agreement must be included with each copy of the Program.\n+     Contributors may not remove or alter any copyright notices contained\n+     within the Program.\n+\n+Each Contributor must identify itself as the originator of its Contribution,\n+if\n+any, in a manner that reasonably allows subsequent Recipients to identify the\n+originator of the Contribution.\n+\n+4. COMMERCIAL DISTRIBUTION\n+\n+Commercial distributors of software may accept certain responsibilities with\n+respect to end users, business partners and the like. While this license is\n+intended to facilitate the commercial use of the Program, the Contributor who\n+includes the Program in a commercial product offering should do so in a manner\n+which does not create potential liability for other Contributors. Therefore,\n+if a Contributor includes the Program in a commercial product offering, such\n+Contributor (\"Commercial Contributor\") hereby agrees to defend and indemnify\n+every other Contributor (\"Indemnified Contributor\") against any losses,\n+damages and costs (collectively \"Losses\") arising from claims, lawsuits and\n+other legal actions brought by a third party against the Indemnified\n+Contributor to the extent caused by the acts or omissions of such Commercial\n+Contributor in connection with its distribution of the Program in a commercial\n+product offering. The obligations in this section do not apply to any claims\n+or Losses relating to any actual or alleged intellectual property\n+infringement. In order to qualify, an Indemnified Contributor must:\n+a) promptly notify the Commercial Contributor in writing of such claim, and\n+b) allow the Commercial Contributor to control, and cooperate with the\n+Commercial Contributor in, the defense and any related settlement\n+negotiations. The Indemnified Contributor may participate in any such claim at\n+its own expense.\n+\n+For example, a Contributor might include the Program in a commercial product\n+offering, Product X. That Contributor is then a Commercial Contributor. If\n+that Commercial Contributor then makes performance claims, or offers\n+warranties related to Product X, those performance claims and warranties are\n+such Commercial Contributor's responsibility alone. Under this section, the\n+Commercial Contributor would have to defend claims against the other\n+Contributors related to those performance claims and warranties, and if a\n+court requires any other Contributor to pay any damages as a result, the\n+Commercial Contributor must pay those damages.\n+\n+5. NO WARRANTY\n+\n+EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS PROVIDED ON AN\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR\n+IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS OF TITLE,\n+NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Each\n+Recipient is solely responsible for determining the appropriateness of using\n+and distributing the Program and assumes all risks associated with its\n+exercise of rights under this Agreement , including but not limited to the\n+risks and costs of program errors, compliance with applicable laws, damage to\n+or loss of data, programs or equipment, and unavailability or interruption of\n+operations.\n+\n+6. DISCLAIMER OF LIABILITY\n+\n+EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT NOR ANY\n+CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING WITHOUT LIMITATION\n+LOST PROFITS), HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ARISING IN ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE\n+EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE POSSIBILITY\n+OF SUCH DAMAGES.\n+\n+7. GENERAL\n+\n+If any provision of this Agreement is invalid or unenforceable under\n+applicable law, it shall not affect the validity or enforceability of the\n+remainder of the terms of this Agreement, and without further action by the\n+parties hereto, such provision shall be reformed to the minimum extent\n+necessary to make such provision valid and enforceable.\n+\n+If Recipient institutes patent litigation against any entity (including a\n+cross-claim or counterclaim in a lawsuit) alleging that the Program itself\n+(excluding combinations of the Program with other software or hardware)\n+infringes such Recipient's patent(s), then such Recipient's rights granted\n+under Section 2(b) shall terminate as of the date such litigation is filed.\n+\n+All Recipient's rights under this Agreement shall terminate if it fails to\n+comply with any of the material terms or conditions of this Agreement and does\n+not cure such failure in a reasonable period of time after becoming aware of\n+such noncompliance. If all Recipient's rights under this Agreement terminate,\n+Recipient agrees to cease use and distribution of the Program as soon as\n+reasonably practicable. However, Recipient's obligations under this Agreement\n+and any licenses granted by Recipient relating to the Program shall continue\n+and survive.\n+\n+Everyone is permitted to copy and distribute copies of this Agreement, but in\n+order to avoid inconsistency the Agreement is copyrighted and may only be\n+modified in the following manner. The Agreement Steward reserves the right to\n+publish new versions (including revisions) of this Agreement from time to\n+time. No one other than the Agreement Steward has the right to modify this\n+Agreement. The Eclipse Foundation is the initial Agreement Steward. The\n+Eclipse Foundation may assign the responsibility to serve as the Agreement\n+Steward to a suitable separate entity. Each new version of the Agreement will\n+be given a distinguishing version number. The Program (including\n+Contributions) may always be distributed subject to the version of the\n+Agreement under which it was received. In addition, after a new version of the\n+Agreement is published, Contributor may elect to distribute the Program\n+(including its Contributions) under the new version. Except as expressly\n+stated in Sections 2(a) and 2(b) above, Recipient receives no rights or\n+licenses to the intellectual property of any Contributor under this Agreement,\n+whether expressly, by implication, estoppel or otherwise. All rights in the\n+Program not expressly granted under this Agreement are reserved.\n+\n+This Agreement is governed by the laws of the State of New York and the\n+intellectual property laws of the United States of America. No party to this\n+Agreement will bring a legal action under this Agreement more than one year\n+after the cause of action arose. Each party waives its rights to a jury trial in\n+any resulting litigation.\n+\n+==\n+\n+For Legion of the Bouncy Castle (http://www.bouncycastle.org/java.html):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For StAX2 API (http://wiki.fasterxml.com/WoodstoxStax2):\n+This is licensed under the BSD license, see above.\n+\n+==\n+\n+For Woodstox (http://wiki.fasterxml.com/WoodstoxHome):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For Cryptacular (https://github.com/vt-middleware/cryptacular):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For jasypt (http://www.jasypt.org/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For Javassist (https://jboss-javassist.github.io/javassist/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For MyBatis (http://www.mybatis.org/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For Open SAML-Java (https://shibboleth.net/products/opensaml-java.html):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For Quartz Scheduler (http://quartz-scheduler.org/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For Reflections (https://github.com/ronmamo/reflections):\n+This is licensed under the BSD license, see above.\n+\n+==\n+\n+For Simple Logging Facade for Java - SLF4J (http://www.slf4j.org/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For Spring Framework (http://projects.spring.io/spring-framework/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For Spring Security (http://projects.spring.io/spring-security/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For SnakeYAML (http://www.snakeyaml.org/):\n+This is licensed under the AL 2.0, see above."},{"sha":"e4c2652e904af5a6c0a509d40cb6e8c6e3862234","filename":"docker/core/NOTICE","status":"added","additions":160,"deletions":0,"changes":160,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2FNOTICE","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2FNOTICE","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2FNOTICE?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,160 @@\n+Apache Syncope\n+Copyright 2012-2019 The Apache Software Foundation\n+\n+This product includes software developed by:\n+The Apache Software Foundation (http://www.apache.org/).\n+\n+The following copyright notice(s) were affixed to portions of this code\n+with which this file is now or was at one time distributed.\n+\n+==\n+\n+This product includes software developed by the AOP Alliance (Java/J2EE AOP standards).\n+\n+==\n+\n+This product includes software developed by the Jackson project.\n+\n+==\n+\n+This product includes software developed by the Java Uuid Generator (JUG) project.\n+\n+==\n+\n+This product includes software developed by the Google Guava project.\n+Copyright (c) 2016 The Guava Authors.\n+\n+==\n+\n+This product includes software developed by the JAXB project.\n+Copyright (c) 2013-2016 The JAXB project.\n+\n+==\n+\n+This product includes software developed by the HikariCP project.\n+\n+==\n+\n+This product includes the Javascript syntax highlighter.\n+Copyright (c) 2006, Ivan Sagalaev\n+\n+==\n+\n+This product includes software developed by the Metrics project.\n+Copyright (c) 2010-2014 Coda Hale, Yammer.com\n+\n+==\n+\n+This product includes software developed by the Swagger project.\n+Copyright 2016 SmartBear Software\n+\n+==\n+\n+This product includs software developed by Oracle.\n+Copyright (c) 2012-2013 Oracle and/or its affiliates. All rights reserved.\n+\n+==\n+\n+This product includes software developed by the Bean Validation Project (http://beanvalidation.org).\n+Copyright (c) Red Hat, Inc., Emmanuel Bernard\n+\n+==\n+\n+This product includes software developed by the JAX-RS project.\n+Copyright (c) 2014, Oracle Corporation and/or its affiliates. All rights reserved.\n+\n+==\n+\n+This product includes software developed by the Joda Time project.\n+Copyright (c) 2002-2016 Joda.org. All Rights Reserved.\n+\n+==\n+\n+This product includes the jQuery Core JavaScript Library.\n+Copyright 2007, 2016 jQuery Foundation and other contributors.\n+\n+==\n+\n+This product includes the jQuery UI JavaScript Library.\n+Copyright 2007, 2015 jQuery Foundation and other contributors.\n+\n+==\n+\n+This product includes software developed by Terracotta. Inc.\n+Ehcache source code and documentation are Copyright (c) Terracotta, Inc.\n+\n+==\n+\n+This product includes software developed by the SERP Project.\n+Copyright (c) 2002-2007, A. Abram White http://serp.sourceforge.net/\n+All rights reserved.\n+\n+==\n+\n+This product includes software developed by the ConnId project.\n+Copyright 2008-2009 Sun Microsystems, Inc. All rights reserved.\n+Copyright 2011-2016 Tirasa S.r.l. All rights reserved.\n+\n+==\n+\n+This product includes software developed by the Flowable project.\n+\n+==\n+\n+This product includes AspectJ (>= 1.52) software developed by the Eclipse\n+Software Foundation.\n+\n+==\n+\n+This product includes software developed by the Legion of the Bouncy Castle.\n+Copyright (c) 2000-2016 The Legion of the Bouncy Castle Inc. (http://www.bouncycastle.org)\n+\n+==\n+\n+This product includes software developed by the Stax 2 Extension API Project.\n+\n+==\n+\n+This product includes software developed by the Woodstox Project.\n+\n+==\n+\n+This project includes software developed by the Jasypt project.\n+Copyright (c) 2014 The JASYPT team. All Rights Reserved\n+\n+==\n+\n+This product includes softare developed by the Javassist project.\n+Copyright (C) 1999- by Shigeru Chiba, All rights reserved.\n+\n+==\n+\n+This product includes software developed by the MyBatis project.\n+\n+==\n+\n+This product includes software developed by the Shibboleth project.\n+\n+==\n+\n+This product includes software developed by Terracotta. Inc.\n+Quartz Scheduler source code and documentation are Copyright (c) Terracotta, Inc.\n+\n+==\n+\n+This product includes software developed by the Reflections project.\n+\n+==\n+\n+This products includes software developed by the Simple Logging Facade for Java (SLF4J) project.\n+Copyright (c) 2004-2016 QOS.ch.\n+\n+==\n+\n+This product includes software developed by SpringSource.\n+Copyright (c) 2004-2016 SpringSource\n+All rights reserved.\n+\n+==\n+\n+This product includes software developed by the SnakeYAML project."},{"sha":"a200835e9d9cc509ba2e7104fa37d3356ec24582","filename":"docker/core/pom.xml","status":"modified","additions":206,"deletions":18,"changes":224,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -31,51 +31,143 @@ under the License.\n   <description>Apache Syncope Docker Core</description>\n   <groupId>org.apache.syncope</groupId>\n   <artifactId>syncope-docker-core</artifactId>\n+  <packaging>war</packaging>\n \n   <properties>\n     <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n   </properties>\n \n   <dependencies>\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-starter-undertow</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.core</groupId>\n+      <artifactId>syncope-core-starter</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.core.idm</groupId>\n+      <artifactId>syncope-core-idm-rest-cxf</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.core</groupId>\n+      <artifactId>syncope-core-persistence-jpa-json</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.syncope.ext.flowable</groupId>\n+      <artifactId>syncope-ext-flowable-rest-cxf</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.camel</groupId>\n+      <artifactId>syncope-ext-camel-rest-cxf</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.camel</groupId>\n+      <artifactId>syncope-ext-camel-persistence-jpa</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.camel</groupId>\n+      <artifactId>syncope-ext-camel-provisioning</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.syncope.ext.saml2sp</groupId>\n+      <artifactId>syncope-ext-saml2sp-rest-cxf</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.saml2sp</groupId>\n+      <artifactId>syncope-ext-saml2sp-persistence-jpa</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.syncope.ext.scimv2</groupId>\n+      <artifactId>syncope-ext-scimv2-rest-cxf</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.scimv2</groupId>\n+      <artifactId>syncope-ext-scimv2-scim-rest-cxf</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n+      <artifactId>syncope-ext-oidcclient-rest-cxf</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n+      <artifactId>syncope-ext-oidcclient-persistence-jpa</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.ext</groupId>\n+      <artifactId>syncope-ext-swagger-ui</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <!-- JDBC drivers -->\n     <dependency>\n       <groupId>org.postgresql</groupId>\n       <artifactId>postgresql</artifactId>\n       <version>${jdbc.postgresql.version}</version>\n       <scope>test</scope>\n     </dependency>\n-\n     <dependency>\n       <groupId>mysql</groupId>\n       <artifactId>mysql-connector-java</artifactId>\n       <version>${jdbc.mysql.version}</version>\n       <scope>test</scope>\n     </dependency>\n-\n     <dependency>\n       <groupId>org.mariadb.jdbc</groupId>\n       <artifactId>mariadb-java-client</artifactId>\n       <version>${jdbc.mariadb.version}</version>\n       <scope>test</scope>\n     </dependency>\n-\n     <dependency>\n       <groupId>com.microsoft.sqlserver</groupId>\n       <artifactId>mssql-jdbc</artifactId>\n       <version>${jdbc.mssql.version}8</version>\n       <scope>test</scope>\n     </dependency>\n-\n-    <dependency>\n-      <groupId>org.apache.syncope</groupId>\n-      <artifactId>syncope-deb-core</artifactId>\n-      <version>${project.version}</version>\n-      <type>war</type>\n-      <scope>test</scope>\n-    </dependency>\n   </dependencies>\n \n   <build>\n     <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-dependency-plugin</artifactId>\n+        <inherited>true</inherited>\n+        <executions>\n+          <execution>\n+            <id>set-bundles</id>\n+            <phase>process-resources</phase>\n+            <goals>\n+              <goal>copy</goal>\n+            </goals>\n+            <configuration>\n+              <outputDirectory>${project.build.outputDirectory}/bundles</outputDirectory>          \n+            </configuration>\n+          </execution>\n+        </executions>\n+      </plugin>\n+\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-antrun-plugin</artifactId>\n@@ -86,12 +178,10 @@ under the License.\n             <phase>process-resources</phase>\n             <configuration>\n               <target>\n-                <copy file=\"${settings.localRepository}/org/postgresql/postgresql/${jdbc.postgresql.version}/postgresql-${jdbc.postgresql.version}.jar\" todir=\"${project.build.directory}/classes\" overwrite=\"true\" />\n-                <copy file=\"${settings.localRepository}/mysql/mysql-connector-java/${jdbc.mysql.version}/mysql-connector-java-${jdbc.mysql.version}.jar\" todir=\"${project.build.directory}/classes\" overwrite=\"true\" />\n-                <copy file=\"${settings.localRepository}/org/mariadb/jdbc/mariadb-java-client/${jdbc.mariadb.version}/mariadb-java-client-${jdbc.mariadb.version}.jar\" todir=\"${project.build.directory}/classes\" overwrite=\"true\" />\n-                <copy file=\"${settings.localRepository}/com/microsoft/sqlserver/mssql-jdbc/${jdbc.mssql.version}8/mssql-jdbc-${jdbc.mssql.version}8.jar\" todir=\"${project.build.directory}/classes\" overwrite=\"true\" />\n-\n-                <copy file=\"${basedir}/../../deb/core/target/apache-syncope-${project.version}.deb\" todir=\"${project.build.directory}/classes\" overwrite=\"true\" />\n+                <copy file=\"${settings.localRepository}/org/postgresql/postgresql/${jdbc.postgresql.version}/postgresql-${jdbc.postgresql.version}.jar\" todir=\"${project.build.outputDirectory}/lib\" overwrite=\"true\" />\n+                <copy file=\"${settings.localRepository}/mysql/mysql-connector-java/${jdbc.mysql.version}/mysql-connector-java-${jdbc.mysql.version}.jar\" todir=\"${project.build.outputDirectory}/lib\" overwrite=\"true\" />\n+                <copy file=\"${settings.localRepository}/org/mariadb/jdbc/mariadb-java-client/${jdbc.mariadb.version}/mariadb-java-client-${jdbc.mariadb.version}.jar\" todir=\"${project.build.outputDirectory}/lib\" overwrite=\"true\" />\n+                <copy file=\"${settings.localRepository}/com/microsoft/sqlserver/mssql-jdbc/${jdbc.mssql.version}8/mssql-jdbc-${jdbc.mssql.version}8.jar\" todir=\"${project.build.outputDirectory}/lib\" overwrite=\"true\" />\n               </target>\n             </configuration>\n             <goals>\n@@ -101,6 +191,45 @@ under the License.\n         </executions>\n       </plugin>\n \n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-war-plugin</artifactId>\n+        <inherited>false</inherited>\n+        <configuration>\n+          <webXml>${basedir}/../../fit/core-reference/src/main/webapp/WEB-INF/web.xml</webXml>\n+          <webResources>\n+            <resource>\n+              <directory>${basedir}</directory>\n+              <targetPath>META-INF</targetPath>\n+              <includes>\n+                <include>LICENSE</include>\n+                <include>NOTICE</include>\n+              </includes>\n+            </resource>\n+          </webResources>                \n+          <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>\n+        </configuration>\n+      </plugin>\n+\n+      <plugin>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-maven-plugin</artifactId>\n+        <configuration>\n+          <mainClass>org.apache.syncope.core.starter.SyncopeCoreApplication</mainClass>\n+          <layout>ZIP</layout>\n+        </configuration>\n+        <executions>\n+          <execution>\n+            <goals>\n+              <goal>repackage</goal>\n+            </goals>\n+            <configuration>\n+              <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>\n+            </configuration>\n+          </execution>\n+        </executions>\n+      </plugin>\n+\n       <plugin>\n         <groupId>io.fabric8</groupId>\n         <artifactId>docker-maven-plugin</artifactId>\n@@ -110,7 +239,7 @@ under the License.\n             <image>\n               <name>apache/syncope:%v</name>\n               <build>\n-                <dockerFileDir>${project.build.directory}/classes</dockerFileDir>\n+                <dockerFileDir>${project.build.outputDirectory}</dockerFileDir>\n               </build>\n             </image>\n           </images>\n@@ -133,6 +262,65 @@ under the License.\n         </executions>\n       </plugin>\n     </plugins>\n+    \n+    <resources>\n+      <resource>\n+        <directory>${basedir}/src/main/resources</directory>\n+        <filtering>true</filtering>\n+      </resource>\n+\n+      <resource>\n+        <directory>${basedir}/../../core/starter/src/main/resources</directory>\n+        <includes>\n+          <include>application.properties</include>\n+        </includes>\n+        <filtering>true</filtering>\n+      </resource>\n+      <resource>\n+        <directory>${basedir}/../../core/spring/src/main/resources</directory>\n+        <includes>\n+          <include>security.properties</include>\n+        </includes>\n+        <filtering>true</filtering>\n+      </resource>\n+      <resource>\n+        <directory>${basedir}/../../ext/flowable/flowable-bpmn/src/main/resources</directory>\n+        <includes>\n+          <include>workflow.properties</include>\n+          <include>userWorkflow.bpmn20.xml</include>\n+        </includes>\n+        <filtering>true</filtering>\n+      </resource>\n+      <resource>\n+        <directory>${basedir}/../../core/provisioning-java/src/main/resources</directory>\n+        <includes>\n+          <include>mail.properties</include>\n+          <include>connid.properties</include>\n+        </includes>\n+        <filtering>true</filtering>\n+      </resource>\n+      <resource>\n+        <directory>${basedir}/../../core/idrepo/logic/src/main/resources</directory>\n+        <includes>\n+          <include>logic.properties</include>\n+        </includes>\n+        <filtering>true</filtering>\n+      </resource>\n+      <resource>\n+        <directory>${project.basedir}/../../ext/saml2sp/logic/src/main/resources</directory>\n+        <includes>\n+          <include>saml2sp-logic.properties</include>\n+        </includes>\n+        <filtering>true</filtering>\n+      </resource>\n+      <resource>\n+        <directory>${basedir}/../../fit/core-reference/src/test/resources</directory>\n+        <includes>\n+          <include>keystore</include>\n+        </includes>\n+        <filtering>false</filtering>\n+      </resource>\n+    </resources>\n   </build>\n \n   <profiles>"},{"sha":"193ec281dc8e53a4d6bd916790c6b232c3ca4a5f","filename":"docker/core/src/main/resources/Dockerfile","status":"modified","additions":18,"deletions":12,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2FDockerfile","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2FDockerfile","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2FDockerfile?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -15,25 +15,31 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-FROM debian:stable-slim\n+FROM adoptopenjdk/openjdk8-openj9:alpine-slim\n MAINTAINER dev@syncope.apache.org\n \n RUN set -x\n \n-COPY *.jar /tmp/\n+RUN mkdir /opt/syncope\n+RUN mkdir /opt/syncope/bin\n+RUN mkdir /opt/syncope/bundles\n+RUN mkdir /opt/syncope/conf\n+RUN mkdir /opt/syncope/conf/domains\n+RUN mkdir /opt/syncope/lib\n+RUN mkdir /opt/syncope/log\n \n-COPY *.deb /tmp/\n+COPY *.properties* /opt/syncope/conf/\n+COPY *.xml* /opt/syncope/conf/\n+COPY keystore /opt/syncope/conf/\n+COPY domains/* /opt/syncope/conf/domains/\n \n-COPY provisioning.properties.* /etc/apache-syncope/\n-COPY views.xml.* /etc/apache-syncope/\n-COPY *.properties /etc/apache-syncope/\n-COPY Master.properties.* /etc/apache-syncope/domains/\n+COPY bundles/*.jar /opt/syncope/bundles/\n+COPY lib/*.jar /opt/syncope/lib/\n \n-COPY build.sh /tmp\n-RUN chmod 755 /tmp/build.sh && sync && /tmp/build.sh && rm /tmp/build.sh\n+COPY lib/syncope-docker-core-*war /opt/syncope/lib/syncope.war\n \n-COPY startup.sh /sbin\n-RUN chmod 755 /sbin/startup.sh\n-CMD [\"/sbin/startup.sh\"]\n+COPY startup.sh /opt/syncope/bin\n+RUN chmod 755 /opt/syncope/bin/startup.sh\n+CMD [\"/opt/syncope/bin/startup.sh\"]\n \n EXPOSE 8080"},{"sha":"d311e470a867dfaa7295f29fb0f0a619ed891bbc","filename":"docker/core/src/main/resources/build.sh","status":"removed","additions":0,"deletions":60,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fbuild.sh","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fbuild.sh","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fbuild.sh?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,60 +0,0 @@\n-#!/bin/bash\n-\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-\n-set -x\n-\n-#####\n-# Disable suggests/recommends\n-#####\n-echo APT::Install-Recommends \"0\"\\; > /etc/apt/apt.conf.d/10disableextras\n-echo APT::Install-Suggests \"0\"\\; >>  /etc/apt/apt.conf.d/10disableextras\n-\n-export DEBIAN_FRONTEND noninteractive\n-export DEBCONF_TERSE true\n-\n-# needed by debian:stable-slim\n-mkdir -p /usr/share/man/man1/\n-\n-######\n-# Install packages\n-######\n-apt-get -q update \\\n-  && apt-get -q install -y \\\n-    xtail \\\n-    openjdk-8-jdk \\\n-    tomcat8 \\\n-    libservlet3.1-java \\\n-  && apt-get clean\n-\n-dpkg -i /tmp/*.deb && rm /tmp/*deb\n-\n-######\n-# Setup Tomcat\n-######\n-\n-sed -i 's/--exec/--startas/' /etc/init.d/tomcat8\n-\n-mv /tmp/*.jar /usr/share/tomcat8/lib/\n-\n-echo \"JAVA_OPTS=\\\"\\${JAVA_OPTS} -Dfile.encoding=UTF-8 -server \\\n--Xms1536m -Xmx1536m -XX:NewSize=256m -XX:MaxNewSize=256m \\\n--XX:PermSize=256m -XX:MaxPermSize=256m -XX:+DisableExplicitGC \\\n--Djava.security.egd=file:/dev/./urandom\\\"\" >> /etc/default/tomcat8\n-\n-echo \"JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\" >> /etc/default/tomcat8"},{"sha":"c8231cf8537a2824c0cb329750a431e82a84a0c1","filename":"docker/core/src/main/resources/domains/Master.properties.mariadb","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.mariadb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.mariadb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.mariadb?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","previous_filename":"docker/core/src/main/resources/Master.properties.mariadb"},{"sha":"108e1fe1557310a255068fba4f126702e7c12fef","filename":"docker/core/src/main/resources/domains/Master.properties.mssql","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.mssql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.mssql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.mssql?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","previous_filename":"docker/core/src/main/resources/Master.properties.mssql"},{"sha":"cc412e1ba044c945c68a00774c986108d4311c49","filename":"docker/core/src/main/resources/domains/Master.properties.mysql","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.mysql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.mysql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.mysql?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","previous_filename":"docker/core/src/main/resources/Master.properties.mysql"},{"sha":"2f50013648480ec1655217a021c59bae39df97ea","filename":"docker/core/src/main/resources/domains/Master.properties.pgjsonb","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.pgjsonb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.pgjsonb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.pgjsonb?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,28 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+Master.driverClassName=org.postgresql.Driver\n+Master.url=${DB_URL}\n+Master.schema=\n+Master.username=${DB_USER}\n+Master.password=${DB_PASSWORD}\n+Master.databasePlatform=org.apache.openjpa.jdbc.sql.PostgresDictionary\n+Master.orm=META-INF/spring-orm-pgjsonb.xml\n+\n+Master.pool.maxActive=${DB_POOL_MAX}\n+Master.pool.minIdle=${DB_POOL_MIN}\n+\n+Master.audit.sql=audit.sql"},{"sha":"74b347166163da74122a3f67e4450c535191b70d","filename":"docker/core/src/main/resources/domains/Master.properties.postgresql","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.postgresql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.postgresql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fdomains%2FMaster.properties.postgresql?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","previous_filename":"docker/core/src/main/resources/Master.properties.postgresql"},{"sha":"3e5b92b8320deda3bb5884cbc32d161aafc39678","filename":"docker/core/src/main/resources/indexes.xml.pgjsonb","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Findexes.xml.pgjsonb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Findexes.xml.pgjsonb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Findexes.xml.pgjsonb?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,63 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n+<properties>\n+  <comment>Additional indexes (in respect to JPA's)</comment>\n+\n+  <entry key=\"SyncopeUser_plainAttrs_idx\">CREATE INDEX SyncopeUser_plainAttrs_idx ON SyncopeUser USING gin ((plainAttrs) jsonb_path_ops)</entry>\n+  <entry key=\"SyncopeGroup_plainAttrs_idx\">CREATE INDEX SyncopeGroup_plainAttrs_idx ON SyncopeGroup USING gin ((plainAttrs) jsonb_path_ops)</entry>\n+  <entry key=\"AnyObject_plainAttrs_idx\">CREATE INDEX AnyObject_plainAttrs_idx ON AnyObject USING gin ((plainAttrs) jsonb_path_ops)</entry>\n+  <entry key=\"SyncopeConf_plainAttrs_idx\">CREATE INDEX SyncopeConf_plainAttrs_idx ON SyncopeConf USING gin ((plainAttrs) jsonb_path_ops)</entry>\n+\n+  <entry key=\"UDynGroupMembers_any_id\">CREATE INDEX UDynGroupMembers_any_id ON UDynGroupMembers(any_id)</entry>\n+  <entry key=\"UDynGroupMembers_group_id\">CREATE INDEX UDynGroupMembers_group_id ON UDynGroupMembers(group_id)</entry>\n+  <entry key=\"ADynGroupMembers_any_id\">CREATE INDEX ADynGroupMembers_any_id ON ADynGroupMembers(any_id)</entry>\n+  <entry key=\"ADynGroupMembers_group_id\">CREATE INDEX ADynGroupMembers_group_id ON ADynGroupMembers(group_id)</entry>\n+\n+  <entry key=\"DynRoleMembers_any_id\">CREATE INDEX DynRoleMembers_any_id ON DynRoleMembers(any_id)</entry>\n+  <entry key=\"DynRoleMembers_role_id\">CREATE INDEX DynRoleMembers_role_id ON DynRoleMembers(role_id)</entry>\n+\n+  <entry key=\"DynRealmMembers_any_id\">CREATE INDEX DynRealmMembers_any_id ON DynRealmMembers(any_id)</entry>\n+  <entry key=\"DynRealmMembers_realm_id\">CREATE INDEX DynRealmMembers_dynRealm_id ON DynRealmMembers(dynRealm_id)</entry>\n+\n+  <entry key=\"CPlainAttrValue_stringvalueIndex\">CREATE INDEX CAttrValue_stringvalueIndex ON CPlainAttrValue(stringvalue)</entry>\n+  <entry key=\"CPlainAttrValue_datevalueIndex\">CREATE INDEX CAttrValue_datevalueIndex ON CPlainAttrValue(datevalue)</entry>\n+  <entry key=\"CPlainAttrValue_longvalueIndex\">CREATE INDEX CAttrValue_longvalueIndex ON CPlainAttrValue(longvalue)</entry>\n+  <entry key=\"CPlainAttrValue_doublevalueIndex\">CREATE INDEX CAttrValue_doublevalueIndex ON CPlainAttrValue(doublevalue)</entry>\n+  <entry key=\"CPlainAttrValue_booleanvalueIndex\">CREATE INDEX CAttrValue_booleanvalueIndex ON CPlainAttrValue(booleanvalue)</entry>\n+\n+  <entry key=\"UMembership_GroupIndex\">CREATE INDEX UMembership_GroupIndex ON UMembership(group_id)</entry>\n+  <entry key=\"UMembership_UserIndex\">CREATE INDEX UMembership_UserIndex ON UMembership(user_id)</entry>\n+  <entry key=\"AMembership_GroupIndex\">CREATE INDEX AMembership_GroupIndex ON AMembership(group_id)</entry>\n+  <entry key=\"AMembership_AnyObjectIndex\">CREATE INDEX AMembership_AnyObjectIndex ON AMembership(anyObject_id)</entry>\n+\n+  <entry key=\"URelationship_RightIndex\">CREATE INDEX URelationship_RightIndex ON URelationship(anyObject_id)</entry>\n+  <entry key=\"URelationship_LeftIndex\">CREATE INDEX URelationship_LeftIndex ON URelationship(user_id)</entry>\n+  <entry key=\"ARelationship_RightIndex\">CREATE INDEX ARelationship_RightIndex ON ARelationship(right_anyObject_id)</entry>\n+  <entry key=\"ARelationship_AnyObjectIndex\">CREATE INDEX ARelationship_AnyObjectIndex ON ARelationship(left_anyObject_id)</entry>\n+\n+  <entry key=\"CPlainAttrValue_attrIndex\">CREATE INDEX CPlainAttrValue_attrIndex on CPlainAttrValue(attribute_id)</entry>\n+  <entry key=\"CPAttrUniqueValue_attrIndex\">CREATE INDEX CPAttrUniqueValue_attrIndex on CPlainAttrUniqueValue(attribute_id)</entry>\n+\n+  <entry key=\"CPlainAttr_owner_Index\">CREATE INDEX CPlainAttr_owner_Index on CPlainAttr(owner_id)</entry>\n+  <entry key=\"CPlainAttr_schema_Index\">CREATE INDEX CPlainAttr_schema_Index on CPlainAttr(schema_id)</entry>\n+\n+  <entry key=\"Task_executedIndex\">CREATE INDEX Task_executedIndex ON Task(executed)</entry>\n+</properties>"},{"sha":"1941154590ce9dbcbdc925ae0e317504d3d3f6e3","filename":"docker/core/src/main/resources/log4j2.xml","status":"added","additions":172,"deletions":0,"changes":172,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,172 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<configuration status=\"WARN\">\n+\n+  <appenders>\n+\n+    <Console name=\"console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+      <PatternLayout pattern=\"%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} %highlight{${LOG_LEVEL_PATTERN:-%5p}}{FATAL=red blink, ERROR=red, WARN=yellow bold, INFO=green, DEBUG=green bold, TRACE=blue} [%11.11t] %style{%-60.60c{60}}{cyan} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}\"/>\n+    </Console>\n+\n+    <Memory name=\"main\" size=\"25\"/>\n+\n+    <Memory name=\"persistence\" size=\"25\"/>\n+\n+    <Memory name=\"rest\" size=\"25\"/>\n+\n+    <Memory name=\"connid\" size=\"25\"/>\n+    \n+  </appenders>\n+  \n+  <loggers>\n+    \n+    <asyncLogger name=\"org.apache.syncope.core.persistence\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"persistence\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.springframework.orm\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"persistence\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.openjpa\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"persistence\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.ibatis\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"persistence\"/>\n+    </asyncLogger>\n+    \n+    <asyncLogger name=\"org.apache.syncope.core.rest\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"rest\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.springframework.web\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"rest\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.http\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"rest\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.cxf\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"rest\"/>\n+    </asyncLogger>\n+    \n+    <asyncLogger name=\"org.identityconnectors\" additivity=\"false\" level=\"DEBUG\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"connid\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"net.tirasa.connid\" additivity=\"false\" level=\"DEBUG\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"connid\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.syncope.core.provisioning.api.ConnIdBundleManager\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"connid\"/>\n+    </asyncLogger>\n+    \n+    <asyncLogger name=\"org.apache.syncope\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.syncope.core.provisioning\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.syncope.core.logic\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.springframework\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.quartz\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.flowable\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.cocoon\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.fop\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.camel\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.wss4j\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.apache.xml\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.opensaml\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"io.swagger\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.reflections\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"org.elasticsearch\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"io.netty\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"com.zaxxer.hikari\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    \n+    <!-- To enable when setting 'mail.debug=true' in mail.properties -->\n+    <!--<asyncLogger name=\"org.apache.syncope.core.provisioning.java.job.notification\" additivity=\"false\" level=\"DEBUG\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>\n+    <asyncLogger name=\"javax.mail\" additivity=\"false\" level=\"DEBUG\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"main\"/>\n+    </asyncLogger>-->\n+    \n+    <root level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n+      <appender-ref ref=\"main\"/>\n+    </root>\n+    \n+  </loggers>\n+</configuration>"},{"sha":"0da7a20041b8e8bdee423eb3930f2ac5b79c2590","filename":"docker/core/src/main/resources/persistence.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -14,7 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-content.directory=/etc/apache-syncope\n+content.directory=${conf.directory}\n entity.factory=org.apache.syncope.core.persistence.jpa.entity.JPAEntityFactory\n plainSchema.dao=org.apache.syncope.core.persistence.jpa.dao.JPAPlainSchemaDAO\n plainAttr.dao=org.apache.syncope.core.persistence.jpa.dao.JPAPlainAttrDAO"},{"sha":"c4f73d516ccb781e88239e68c57ad7026235b632","filename":"docker/core/src/main/resources/persistence.properties.pgjsonb","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties.pgjsonb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties.pgjsonb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fpersistence.properties.pgjsonb?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,27 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+content.directory=${conf.directory}\n+entity.factory=org.apache.syncope.core.persistence.jpa.entity.PGJPAJSONEntityFactory\n+plainSchema.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainSchemaDAO\n+plainAttr.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrDAO\n+plainAttrValue.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONPlainAttrValueDAO\n+any.search.dao=org.apache.syncope.core.persistence.jpa.dao.PGJPAJSONAnySearchDAO\n+user.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONUserDAO\n+group.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONGroupDAO\n+anyObject.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONAnyObjectDAO\n+conf.dao=org.apache.syncope.core.persistence.jpa.dao.JPAJSONConfDAO\n+openjpa.RemoteCommitProvider=${OPENJPA_REMOTE_COMMIT}"},{"sha":"8f17c5a0764480f286dfc48a55251b7b88f1dc21","filename":"docker/core/src/main/resources/provisioning.properties.mariadb","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mariadb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mariadb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mariadb?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -25,6 +25,8 @@ userProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultUserPro\n groupProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultGroupProvisioningManager\n anyObjectProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultAnyObjectProvisioningManager\n virAttrCache=org.apache.syncope.core.provisioning.java.cache.MemoryVirAttrCache\n+notificationManager=org.apache.syncope.core.provisioning.java.notification.DefaultNotificationManager\n+auditManager=org.apache.syncope.core.provisioning.java.DefaultAuditManager\n \n quartz.jobstore=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n quartz.sql=tables_mariadb.sql"},{"sha":"3529791bbc1af71e7a4a8a1d3f663642712dbf6b","filename":"docker/core/src/main/resources/provisioning.properties.mssql","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mssql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mssql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mssql?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -25,6 +25,8 @@ userProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultUserPro\n groupProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultGroupProvisioningManager\n anyObjectProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultAnyObjectProvisioningManager\n virAttrCache=org.apache.syncope.core.provisioning.java.cache.MemoryVirAttrCache\n+notificationManager=org.apache.syncope.core.provisioning.java.notification.DefaultNotificationManager\n+auditManager=org.apache.syncope.core.provisioning.java.DefaultAuditManager\n \n quartz.jobstore=org.quartz.impl.jdbcjobstore.MSSQLDelegate\n quartz.sql=tables_sqlServer.sql"},{"sha":"191693ceae63a8d7c0d467b80f91aaf2b82cf5ab","filename":"docker/core/src/main/resources/provisioning.properties.mysql","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mysql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mysql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mysql?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -25,6 +25,8 @@ userProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultUserPro\n groupProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultGroupProvisioningManager\n anyObjectProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultAnyObjectProvisioningManager\n virAttrCache=org.apache.syncope.core.provisioning.java.cache.MemoryVirAttrCache\n+notificationManager=org.apache.syncope.core.provisioning.java.notification.DefaultNotificationManager\n+auditManager=org.apache.syncope.core.provisioning.java.DefaultAuditManager\n \n quartz.jobstore=org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n quartz.sql=tables_mysql_innodb.sql"},{"sha":"9347dd70a6090f9aa61ed2edcdf1a4b6fa623dc1","filename":"docker/core/src/main/resources/provisioning.properties.pgjsonb","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.pgjsonb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.pgjsonb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.pgjsonb?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,34 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+asyncConnectorFacadeExecutor.poolSize=10\n+\n+# see http://docs.spring.io/spring/docs/current/spring-framework-reference/html/scheduling.html#scheduling-task-namespace-executor\n+propagationTaskExecutorAsyncExecutor.poolSize=5-25\n+propagationTaskExecutorAsyncExecutor.queueCapacity=100\n+propagationTaskExecutor=org.apache.syncope.core.provisioning.java.propagation.PriorityPropagationTaskExecutor\n+\n+userProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultUserProvisioningManager\n+groupProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultGroupProvisioningManager\n+anyObjectProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultAnyObjectProvisioningManager\n+virAttrCache=org.apache.syncope.core.provisioning.java.cache.MemoryVirAttrCache\n+notificationManager=org.apache.syncope.core.provisioning.java.notification.DefaultNotificationManager\n+auditManager=org.apache.syncope.core.provisioning.java.DefaultAuditManager\n+\n+quartz.jobstore=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n+quartz.sql=tables_postgres.sql\n+quartz.scheduler.idleWaitTime=5000\n+quartz.disableInstance=false"},{"sha":"220105ee3b0f1317084455c1c099124fd1c42459","filename":"docker/core/src/main/resources/provisioning.properties.postgresql","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.postgresql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.postgresql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.postgresql?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -25,6 +25,8 @@ userProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultUserPro\n groupProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultGroupProvisioningManager\n anyObjectProvisioningManager=org.apache.syncope.core.provisioning.java.DefaultAnyObjectProvisioningManager\n virAttrCache=org.apache.syncope.core.provisioning.java.cache.MemoryVirAttrCache\n+notificationManager=org.apache.syncope.core.provisioning.java.notification.DefaultNotificationManager\n+auditManager=org.apache.syncope.core.provisioning.java.DefaultAuditManager\n \n quartz.jobstore=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate\n quartz.sql=tables_postgres.sql"},{"sha":"218696ba51fbf979d04755eafb880a62391201b4","filename":"docker/core/src/main/resources/startup.sh","status":"modified","additions":14,"deletions":7,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fstartup.sh","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fstartup.sh","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fstartup.sh?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/bin/sh\n \n # Licensed to the Apache Software Foundation (ASF) under one\n # or more contributor license agreements.  See the NOTICE file\n@@ -17,18 +17,25 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-cd /etc/apache-syncope\n+cd /opt/syncope/conf\n+\n rm -f provisioning.properties\n ln -s provisioning.properties.$DBMS provisioning.properties\n+\n rm -f views.xml\n ln -s views.xml.$DBMS views.xml\n \n+if [ $DBMS = \"pgjsonb\" ]; then\n+  ln -s indexes.xml.pgjsonb indexes.xml\n+else\n+  rm -f indexes.xml\n+fi\n+\n cd domains\n+\n rm -f Master.properties\n ln -s Master.properties.$DBMS Master.properties\n \n-/etc/init.d/tomcat8 start\n-\n-xtail /var/log/apache-syncope/*.log /var/log/tomcat8/\n-\n-/bin/bash\n+export LOADER_PATH=\"/opt/syncope/conf,/opt/syncope/lib\"\n+java -Dfile.encoding=UTF-8 -server -Xms1536m -Xmx1536m -XX:NewSize=256m -XX:MaxNewSize=256m \\\n+ -XX:+DisableExplicitGC -Djava.security.egd=file:/dev/./urandom -jar /opt/syncope/lib/syncope.war"},{"sha":"eb450bef723821f0c0549b32702d5b95c7068e28","filename":"docker/core/src/main/resources/views.xml.pgjsonb","status":"added","additions":154,"deletions":0,"changes":154,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.pgjsonb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.pgjsonb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fviews.xml.pgjsonb?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,154 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<!DOCTYPE properties SYSTEM \"http://java.sun.com/dtd/properties.dtd\">\n+<properties>\n+  \n+  <entry key=\"UDynGroupMembers\">\n+    CREATE TABLE UDynGroupMembers(\n+    any_id CHAR(36),\n+    group_id CHAR(36),\n+    UNIQUE(any_id, group_id))\n+  </entry>\n+  <entry key=\"ADynGroupMembers\">\n+    CREATE TABLE ADynGroupMembers(\n+    anyType_id VARCHAR(255),\n+    any_id CHAR(36),\n+    group_id CHAR(36),\n+    UNIQUE(anyType_id, any_id, group_id))\n+  </entry>\n+  <entry key=\"DynRoleMembers\">\n+    CREATE TABLE DynRoleMembers(\n+    any_id CHAR(36),\n+    role_id VARCHAR(255),\n+    UNIQUE(any_id, role_id))\n+  </entry>\n+  <entry key=\"DynRealmMembers\">\n+    CREATE TABLE DynRealmMembers(\n+    any_id CHAR(36),\n+    dynRealm_id VARCHAR(255),\n+    UNIQUE(any_id, dynRealm_id))\n+  </entry>\n+\n+  <!-- user -->\n+  <entry key=\"user_search\">\n+    CREATE VIEW user_search AS\n+\n+    SELECT u.id as any_id, u.*,attrs,attrValues\n+    FROM SyncopeUser u, jsonb_array_elements(COALESCE(u.plainAttrs, '[{}]'::jsonb)) attrs,\n+    jsonb_array_elements(COALESCE(attrs -> 'values', '[{}]'::jsonb)) attrValues\n+  </entry>\n+  <entry key=\"user_search_urelationship\">\n+    CREATE VIEW user_search_urelationship AS\n+\n+    SELECT m.user_id AS any_id, m.anyObject_id AS right_any_id, m.type_id AS type\n+    FROM URelationship m\n+  </entry>\n+  <entry key=\"user_search_umembership\">\n+    CREATE VIEW user_search_umembership AS\n+\n+    SELECT m.user_id AS any_id, g.id AS group_id, g.name AS group_name\n+    FROM UMembership m, SyncopeGroup g\n+    WHERE m.group_id = g.id\n+  </entry>\n+  <entry key=\"user_search_role\">\n+    CREATE VIEW user_search_role AS\n+\n+    SELECT ss.user_id AS any_id, ss.role_id AS role_id\n+    FROM SyncopeUser_SyncopeRole ss\n+  </entry>\n+  <entry key=\"user_search_priv\">\n+    CREATE VIEW user_search_priv AS\n+\n+    SELECT ss.user_id AS any_id, sp.privilege_id AS privilege_id\n+    FROM SyncopeUser_SyncopeRole ss, SyncopeRole_Privilege sp\n+    WHERE ss.role_id = sp.role_id\n+  </entry>\n+  <entry key=\"user_search_dynpriv\">\n+    CREATE VIEW user_search_dynpriv AS\n+\n+    SELECT any_id, privilege_id\n+    FROM DynRoleMembers drm, SyncopeRole_Privilege rp\n+    WHERE drm.role_id = rp.role_id\n+  </entry>\n+  <entry key=\"user_search_resource\">\n+    CREATE VIEW user_search_resource AS\n+\n+    SELECT st.user_id AS any_id, st.resource_id AS resource_id\n+    FROM SyncopeUser_ExternalResource st\n+  </entry>\n+  <entry key=\"user_search_group_res\">\n+    CREATE VIEW user_search_group_res AS\n+\n+    SELECT m.user_id AS any_id, st.resource_id AS resource_id\n+    FROM UMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n+    WHERE m.group_id = r.id AND st.group_id = r.id\n+  </entry>\n+\n+  <!-- anyObject -->\n+  <entry key=\"anyObject_search\">\n+    CREATE VIEW anyObject_search AS\n+\n+    SELECT a.id as any_id, a.*,attrs,attrValues\n+    FROM AnyObject a, jsonb_array_elements(COALESCE(a.plainAttrs, '[{}]'::jsonb)) attrs,\n+    jsonb_array_elements(COALESCE(attrs -> 'values', '[{}]'::jsonb)) attrValues\n+  </entry>\n+  <entry key=\"anyObject_search_arelationship\">\n+    CREATE VIEW anyObject_search_arelationship AS\n+\n+    SELECT m.left_anyObject_id AS any_id, m.right_anyObject_id AS right_any_id, m.type_id AS type\n+    FROM ARelationship m\n+  </entry>\n+  <entry key=\"anyObject_search_amembership\">\n+    CREATE VIEW anyObject_search_amembership AS\n+\n+    SELECT m.anyObject_id AS any_id, g.id AS group_id, g.name AS group_name\n+    FROM AMembership m, SyncopeGroup g\n+    WHERE m.group_id = g.id\n+  </entry>\n+  <entry key=\"anyObject_search_resource\">\n+    CREATE VIEW anyObject_search_resource AS\n+\n+    SELECT st.anyObject_id AS any_id, st.resource_id AS resource_id\n+    FROM AnyObject_ExternalResource st\n+  </entry>\n+  <entry key=\"anyObject_search_group_res\">\n+    CREATE VIEW anyObject_search_group_res AS\n+\n+    SELECT m.anyObject_id AS any_id, st.resource_id AS resource_id\n+    FROM AMembership m, SyncopeGroup r, SyncopeGroup_ExternalResource st\n+    WHERE m.group_id = r.id AND st.group_id = r.id\n+  </entry>\n+\n+  <!-- group -->\n+  <entry key=\"group_search\">\n+    CREATE VIEW group_search AS\n+\n+    SELECT g.id as any_id, g.*,attrs,attrValues\n+    FROM SyncopeGroup g, jsonb_array_elements(COALESCE(g.plainAttrs, '[{}]'::jsonb)) attrs,\n+    jsonb_array_elements(COALESCE(attrs -> 'values', '[{}]'::jsonb)) attrValues\n+  </entry>\n+  <entry key=\"group_search_resource\">\n+    CREATE VIEW group_search_resource AS\n+\n+    SELECT st.group_id AS any_id, st.resource_id AS resource_id\n+    FROM SyncopeGroup_ExternalResource st\n+  </entry>\n+\n+</properties>"},{"sha":"0ce46e2cd3b3cad75ad3a2bbb81a8ac7977215d0","filename":"docker/enduser/LICENSE","status":"added","additions":772,"deletions":0,"changes":772,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fenduser%2FLICENSE","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fenduser%2FLICENSE","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fenduser%2FLICENSE?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,772 @@\n+\n+                                 Apache License\n+                           Version 2.0, January 2004\n+                        http://www.apache.org/licenses/\n+\n+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n+\n+   1. Definitions.\n+\n+      \"License\" shall mean the terms and conditions for use, reproduction,\n+      and distribution as defined by Sections 1 through 9 of this document.\n+\n+      \"Licensor\" shall mean the copyright owner or entity authorized by\n+      the copyright owner that is granting the License.\n+\n+      \"Legal Entity\" shall mean the union of the acting entity and all\n+      other entities that control, are controlled by, or are under common\n+      control with that entity. For the purposes of this definition,\n+      \"control\" means (i) the power, direct or indirect, to cause the\n+      direction or management of such entity, whether by contract or\n+      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n+      outstanding shares, or (iii) beneficial ownership of such entity.\n+\n+      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n+      exercising permissions granted by this License.\n+\n+      \"Source\" form shall mean the preferred form for making modifications,\n+      including but not limited to software source code, documentation\n+      source, and configuration files.\n+\n+      \"Object\" form shall mean any form resulting from mechanical\n+      transformation or translation of a Source form, including but\n+      not limited to compiled object code, generated documentation,\n+      and conversions to other media types.\n+\n+      \"Work\" shall mean the work of authorship, whether in Source or\n+      Object form, made available under the License, as indicated by a\n+      copyright notice that is included in or attached to the work\n+      (an example is provided in the Appendix below).\n+\n+      \"Derivative Works\" shall mean any work, whether in Source or Object\n+      form, that is based on (or derived from) the Work and for which the\n+      editorial revisions, annotations, elaborations, or other modifications\n+      represent, as a whole, an original work of authorship. For the purposes\n+      of this License, Derivative Works shall not include works that remain\n+      separable from, or merely link (or bind by name) to the interfaces of,\n+      the Work and Derivative Works thereof.\n+\n+      \"Contribution\" shall mean any work of authorship, including\n+      the original version of the Work and any modifications or additions\n+      to that Work or Derivative Works thereof, that is intentionally\n+      submitted to Licensor for inclusion in the Work by the copyright owner\n+      or by an individual or Legal Entity authorized to submit on behalf of\n+      the copyright owner. For the purposes of this definition, \"submitted\"\n+      means any form of electronic, verbal, or written communication sent\n+      to the Licensor or its representatives, including but not limited to\n+      communication on electronic mailing lists, source code control systems,\n+      and issue tracking systems that are managed by, or on behalf of, the\n+      Licensor for the purpose of discussing and improving the Work, but\n+      excluding communication that is conspicuously marked or otherwise\n+      designated in writing by the copyright owner as \"Not a Contribution.\"\n+\n+      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n+      on behalf of whom a Contribution has been received by Licensor and\n+      subsequently incorporated within the Work.\n+\n+   2. Grant of Copyright License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      copyright license to reproduce, prepare Derivative Works of,\n+      publicly display, publicly perform, sublicense, and distribute the\n+      Work and such Derivative Works in Source or Object form.\n+\n+   3. Grant of Patent License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      (except as stated in this section) patent license to make, have made,\n+      use, offer to sell, sell, import, and otherwise transfer the Work,\n+      where such license applies only to those patent claims licensable\n+      by such Contributor that are necessarily infringed by their\n+      Contribution(s) alone or by combination of their Contribution(s)\n+      with the Work to which such Contribution(s) was submitted. If You\n+      institute patent litigation against any entity (including a\n+      cross-claim or counterclaim in a lawsuit) alleging that the Work\n+      or a Contribution incorporated within the Work constitutes direct\n+      or contributory patent infringement, then any patent licenses\n+      granted to You under this License for that Work shall terminate\n+      as of the date such litigation is filed.\n+\n+   4. Redistribution. You may reproduce and distribute copies of the\n+      Work or Derivative Works thereof in any medium, with or without\n+      modifications, and in Source or Object form, provided that You\n+      meet the following conditions:\n+\n+      (a) You must give any other recipients of the Work or\n+          Derivative Works a copy of this License; and\n+\n+      (b) You must cause any modified files to carry prominent notices\n+          stating that You changed the files; and\n+\n+      (c) You must retain, in the Source form of any Derivative Works\n+          that You distribute, all copyright, patent, trademark, and\n+          attribution notices from the Source form of the Work,\n+          excluding those notices that do not pertain to any part of\n+          the Derivative Works; and\n+\n+      (d) If the Work includes a \"NOTICE\" text file as part of its\n+          distribution, then any Derivative Works that You distribute must\n+          include a readable copy of the attribution notices contained\n+          within such NOTICE file, excluding those notices that do not\n+          pertain to any part of the Derivative Works, in at least one\n+          of the following places: within a NOTICE text file distributed\n+          as part of the Derivative Works; within the Source form or\n+          documentation, if provided along with the Derivative Works; or,\n+          within a display generated by the Derivative Works, if and\n+          wherever such third-party notices normally appear. The contents\n+          of the NOTICE file are for informational purposes only and\n+          do not modify the License. You may add Your own attribution\n+          notices within Derivative Works that You distribute, alongside\n+          or as an addendum to the NOTICE text from the Work, provided\n+          that such additional attribution notices cannot be construed\n+          as modifying the License.\n+\n+      You may add Your own copyright statement to Your modifications and\n+      may provide additional or different license terms and conditions\n+      for use, reproduction, or distribution of Your modifications, or\n+      for any such Derivative Works as a whole, provided Your use,\n+      reproduction, and distribution of the Work otherwise complies with\n+      the conditions stated in this License.\n+\n+   5. Submission of Contributions. Unless You explicitly state otherwise,\n+      any Contribution intentionally submitted for inclusion in the Work\n+      by You to the Licensor shall be under the terms and conditions of\n+      this License, without any additional terms or conditions.\n+      Notwithstanding the above, nothing herein shall supersede or modify\n+      the terms of any separate license agreement you may have executed\n+      with Licensor regarding such Contributions.\n+\n+   6. Trademarks. This License does not grant permission to use the trade\n+      names, trademarks, service marks, or product names of the Licensor,\n+      except as required for reasonable and customary use in describing the\n+      origin of the Work and reproducing the content of the NOTICE file.\n+\n+   7. Disclaimer of Warranty. Unless required by applicable law or\n+      agreed to in writing, Licensor provides the Work (and each\n+      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+      implied, including, without limitation, any warranties or conditions\n+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n+      PARTICULAR PURPOSE. You are solely responsible for determining the\n+      appropriateness of using or redistributing the Work and assume any\n+      risks associated with Your exercise of permissions under this License.\n+\n+   8. Limitation of Liability. In no event and under no legal theory,\n+      whether in tort (including negligence), contract, or otherwise,\n+      unless required by applicable law (such as deliberate and grossly\n+      negligent acts) or agreed to in writing, shall any Contributor be\n+      liable to You for damages, including any direct, indirect, special,\n+      incidental, or consequential damages of any character arising as a\n+      result of this License or out of the use or inability to use the\n+      Work (including but not limited to damages for loss of goodwill,\n+      work stoppage, computer failure or malfunction, or any and all\n+      other commercial damages or losses), even if such Contributor\n+      has been advised of the possibility of such damages.\n+\n+   9. Accepting Warranty or Additional Liability. While redistributing\n+      the Work or Derivative Works thereof, You may choose to offer,\n+      and charge a fee for, acceptance of support, warranty, indemnity,\n+      or other liability obligations and/or rights consistent with this\n+      License. However, in accepting such obligations, You may act only\n+      on Your own behalf and on Your sole responsibility, not on behalf\n+      of any other Contributor, and only if You agree to indemnify,\n+      defend, and hold each Contributor harmless for any liability\n+      incurred by, or claims asserted against, such Contributor by reason\n+      of your accepting any such warranty or additional liability.\n+\n+   END OF TERMS AND CONDITIONS\n+\n+   APPENDIX: How to apply the Apache License to your work.\n+\n+      To apply the Apache License to your work, attach the following\n+      boilerplate notice, with the fields enclosed by brackets \"[]\"\n+      replaced with your own identifying information. (Don't include\n+      the brackets!)  The text should be enclosed in the appropriate\n+      comment syntax for the file format. We also recommend that a\n+      file or class name and description of purpose be included on the\n+      same \"printed page\" as the copyright notice for easier\n+      identification within third-party archives.\n+\n+   Copyright [yyyy] [name of copyright owner]\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+\n+==\n+\n+For AngularJS UI Bootstrap (http://angular-ui.github.io/bootstrap/):\n+This is licensed under the MIT license:\n+\n+ Permission is hereby granted, free  of charge, to any person obtaining\n+ a  copy  of this  software  and  associated  documentation files  (the\n+ \"Software\"), to  deal in  the Software without  restriction, including\n+ without limitation  the rights to  use, copy, modify,  merge, publish,\n+ distribute,  sublicense, and/or sell  copies of  the Software,  and to\n+ permit persons to whom the Software  is furnished to do so, subject to\n+ the following conditions:\n+ \n+ The  above  copyright  notice  and  this permission  notice  shall  be\n+ included in all copies or substantial portions of the Software.\n+ \n+ THE  SOFTWARE IS  PROVIDED  \"AS  IS\", WITHOUT  WARRANTY  OF ANY  KIND,\n+ EXPRESS OR  IMPLIED, INCLUDING  BUT NOT LIMITED  TO THE  WARRANTIES OF\n+ MERCHANTABILITY,    FITNESS    FOR    A   PARTICULAR    PURPOSE    AND\n+ NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n+ LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n+ OF CONTRACT, TORT OR OTHERWISE,  ARISING FROM, OUT OF OR IN CONNECTION\n+ WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n+\n+==\n+\n+For AngularJS UI Select (https://github.com/angular-ui/ui-select/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For Bootstrap (http://getbootstrap.com/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For bootstrap-select (http://silviomoreto.github.io/bootstrap-select/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For Jackson (http://wiki.fasterxml.com/JacksonHome):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For LMAX Disruptor (https://lmax-exchange.github.io/disruptor/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For JAX-B (http://jaxb.java.net/):\n+This is licensed under the CDDL 1.0:\n+\n+COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0\n+\n+1. Definitions.\n+\n+1.1. \"Contributor\" means each individual or entity that\n+creates or contributes to the creation of Modifications.\n+\n+1.2. \"Contributor Version\" means the combination of the\n+Original Software, prior Modifications used by a\n+Contributor (if any), and the Modifications made by that\n+particular Contributor.\n+\n+1.3. \"Covered Software\" means (a) the Original Software, or\n+(b) Modifications, or (c) the combination of files\n+containing Original Software with files containing\n+Modifications, in each case including portions thereof.\n+\n+1.4. \"Executable\" means the Covered Software in any form\n+other than Source Code.\n+\n+1.5. \"Initial Developer\" means the individual or entity\n+that first makes Original Software available under this\n+License.\n+\n+1.6. \"Larger Work\" means a work which combines Covered\n+Software or portions thereof with code not governed by the\n+terms of this License.\n+\n+1.7. \"License\" means this document.\n+\n+1.8. \"Licensable\" means having the right to grant, to the\n+maximum extent possible, whether at the time of the initial\n+grant or subsequently acquired, any and all of the rights\n+conveyed herein.\n+\n+1.9. \"Modifications\" means the Source Code and Executable\n+form of any of the following:\n+\n+A. Any file that results from an addition to,\n+deletion from or modification of the contents of a\n+file containing Original Software or previous\n+Modifications;\n+\n+B. Any new file that contains any part of the\n+Original Software or previous Modification; or\n+\n+C. Any new file that is contributed or otherwise made\n+available under the terms of this License.\n+\n+1.10. \"Original Software\" means the Source Code and\n+Executable form of computer software code that is\n+originally released under this License.\n+\n+1.11. \"Patent Claims\" means any patent claim(s), now owned\n+or hereafter acquired, including without limitation,\n+method, process, and apparatus claims, in any patent\n+Licensable by grantor.\n+\n+1.12. \"Source Code\" means (a) the common form of computer\n+software code in which modifications are made and (b)\n+associated documentation included in or with such code.\n+\n+1.13. \"You\" (or \"Your\") means an individual or a legal\n+entity exercising rights under, and complying with all of\n+the terms of, this License. For legal entities, \"You\"\n+includes any entity which controls, is controlled by, or is\n+under common control with You. For purposes of this\n+definition, \"control\" means (a) the power, direct or\n+indirect, to cause the direction or management of such\n+entity, whether by contract or otherwise, or (b) ownership\n+of more than fifty percent (50%) of the outstanding shares\n+or beneficial ownership of such entity.\n+\n+2. License Grants.\n+\n+2.1. The Initial Developer Grant.\n+\n+Conditioned upon Your compliance with Section 3.1 below and\n+subject to third party intellectual property claims, the\n+Initial Developer hereby grants You a world-wide,\n+royalty-free, non-exclusive license:\n+\n+(a) under intellectual property rights (other than\n+patent or trademark) Licensable by Initial Developer,\n+to use, reproduce, modify, display, perform,\n+sublicense and distribute the Original Software (or\n+portions thereof), with or without Modifications,\n+and/or as part of a Larger Work; and\n+\n+(b) under Patent Claims infringed by the making,\n+using or selling of Original Software, to make, have\n+made, use, practice, sell, and offer for sale, and/or\n+otherwise dispose of the Original Software (or\n+portions thereof).\n+\n+(c) The licenses granted in Sections 2.1(a) and (b)\n+are effective on the date Initial Developer first\n+distributes or otherwise makes the Original Software\n+available to a third party under the terms of this\n+License.\n+\n+(d) Notwithstanding Section 2.1(b) above, no patent\n+license is granted: (1) for code that You delete from\n+the Original Software, or (2) for infringements\n+caused by: (i) the modification of the Original\n+Software, or (ii) the combination of the Original\n+Software with other software or devices.\n+\n+2.2. Contributor Grant.\n+\n+Conditioned upon Your compliance with Section 3.1 below and\n+subject to third party intellectual property claims, each\n+Contributor hereby grants You a world-wide, royalty-free,\n+non-exclusive license:\n+\n+(a) under intellectual property rights (other than\n+patent or trademark) Licensable by Contributor to\n+use, reproduce, modify, display, perform, sublicense\n+and distribute the Modifications created by such\n+Contributor (or portions thereof), either on an\n+unmodified basis, with other Modifications, as\n+Covered Software and/or as part of a Larger Work; and\n+\n+(b) under Patent Claims infringed by the making,\n+using, or selling of Modifications made by that\n+Contributor either alone and/or in combination with\n+its Contributor Version (or portions of such\n+combination), to make, use, sell, offer for sale,\n+have made, and/or otherwise dispose of: (1)\n+Modifications made by that Contributor (or portions\n+thereof); and (2) the combination of Modifications\n+made by that Contributor with its Contributor Version\n+(or portions of such combination).\n+\n+(c) The licenses granted in Sections 2.2(a) and\n+2.2(b) are effective on the date Contributor first\n+distributes or otherwise makes the Modifications\n+available to a third party.\n+\n+(d) Notwithstanding Section 2.2(b) above, no patent\n+license is granted: (1) for any code that Contributor\n+has deleted from the Contributor Version; (2) for\n+infringements caused by: (i) third party\n+modifications of Contributor Version, or (ii) the\n+combination of Modifications made by that Contributor\n+with other software (except as part of the\n+Contributor Version) or other devices; or (3) under\n+Patent Claims infringed by Covered Software in the\n+absence of Modifications made by that Contributor.\n+\n+3. Distribution Obligations.\n+\n+3.1. Availability of Source Code.\n+\n+Any Covered Software that You distribute or otherwise make\n+available in Executable form must also be made available in\n+Source Code form and that Source Code form must be\n+distributed only under the terms of this License. You must\n+include a copy of this License with every copy of the\n+Source Code form of the Covered Software You distribute or\n+otherwise make available. You must inform recipients of any\n+such Covered Software in Executable form as to how they can\n+obtain such Covered Software in Source Code form in a\n+reasonable manner on or through a medium customarily used\n+for software exchange.\n+\n+3.2. Modifications.\n+\n+The Modifications that You create or to which You\n+contribute are governed by the terms of this License. You\n+represent that You believe Your Modifications are Your\n+original creation(s) and/or You have sufficient rights to\n+grant the rights conveyed by this License.\n+\n+3.3. Required Notices.\n+\n+You must include a notice in each of Your Modifications\n+that identifies You as the Contributor of the Modification.\n+You may not remove or alter any copyright, patent or\n+trademark notices contained within the Covered Software, or\n+any notices of licensing or any descriptive text giving\n+attribution to any Contributor or the Initial Developer.\n+\n+3.4. Application of Additional Terms.\n+\n+You may not offer or impose any terms on any Covered\n+Software in Source Code form that alters or restricts the\n+applicable version of this License or the recipients'\n+rights hereunder. You may choose to offer, and to charge a\n+fee for, warranty, support, indemnity or liability\n+obligations to one or more recipients of Covered Software.\n+However, you may do so only on Your own behalf, and not on\n+behalf of the Initial Developer or any Contributor. You\n+must make it absolutely clear that any such warranty,\n+support, indemnity or liability obligation is offered by\n+You alone, and You hereby agree to indemnify the Initial\n+Developer and every Contributor for any liability incurred\n+by the Initial Developer or such Contributor as a result of\n+warranty, support, indemnity or liability terms You offer.\n+\n+3.5. Distribution of Executable Versions.\n+\n+You may distribute the Executable form of the Covered\n+Software under the terms of this License or under the terms\n+of a license of Your choice, which may contain terms\n+different from this License, provided that You are in\n+compliance with the terms of this License and that the\n+license for the Executable form does not attempt to limit\n+or alter the recipient's rights in the Source Code form\n+from the rights set forth in this License. If You\n+distribute the Covered Software in Executable form under a\n+different license, You must make it absolutely clear that\n+any terms which differ from this License are offered by You\n+alone, not by the Initial Developer or Contributor. You\n+hereby agree to indemnify the Initial Developer and every\n+Contributor for any liability incurred by the Initial\n+Developer or such Contributor as a result of any such terms\n+You offer.\n+\n+3.6. Larger Works.\n+\n+You may create a Larger Work by combining Covered Software\n+with other code not governed by the terms of this License\n+and distribute the Larger Work as a single product. In such\n+a case, You must make sure the requirements of this License\n+are fulfilled for the Covered Software.\n+\n+4. Versions of the License.\n+\n+4.1. New Versions.\n+\n+Sun Microsystems, Inc. is the initial license steward and\n+may publish revised and/or new versions of this License\n+from time to time. Each version will be given a\n+distinguishing version number. Except as provided in\n+Section 4.3, no one other than the license steward has the\n+right to modify this License.\n+\n+4.2. Effect of New Versions.\n+\n+You may always continue to use, distribute or otherwise\n+make the Covered Software available under the terms of the\n+version of the License under which You originally received\n+the Covered Software. If the Initial Developer includes a\n+notice in the Original Software prohibiting it from being\n+distributed or otherwise made available under any\n+subsequent version of the License, You must distribute and\n+make the Covered Software available under the terms of the\n+version of the License under which You originally received\n+the Covered Software. Otherwise, You may also choose to\n+use, distribute or otherwise make the Covered Software\n+available under the terms of any subsequent version of the\n+License published by the license steward.\n+\n+4.3. Modified Versions.\n+\n+When You are an Initial Developer and You want to create a\n+new license for Your Original Software, You may create and\n+use a modified version of this License if You: (a) rename\n+the license and remove any references to the name of the\n+license steward (except to note that the license differs\n+from this License); and (b) otherwise make it clear that\n+the license contains terms which differ from this License.\n+\n+5. DISCLAIMER OF WARRANTY.\n+\n+COVERED SOFTWARE IS PROVIDED UNDER THIS LICENSE ON AN \"AS IS\"\n+BASIS, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,\n+INCLUDING, WITHOUT LIMITATION, WARRANTIES THAT THE COVERED\n+SOFTWARE IS FREE OF DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR\n+PURPOSE OR NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY AND\n+PERFORMANCE OF THE COVERED SOFTWARE IS WITH YOU. SHOULD ANY\n+COVERED SOFTWARE PROVE DEFECTIVE IN ANY RESPECT, YOU (NOT THE\n+INITIAL DEVELOPER OR ANY OTHER CONTRIBUTOR) ASSUME THE COST OF\n+ANY NECESSARY SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER OF\n+WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO USE OF\n+ANY COVERED SOFTWARE IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS\n+DISCLAIMER.\n+\n+6. TERMINATION.\n+\n+6.1. This License and the rights granted hereunder will\n+terminate automatically if You fail to comply with terms\n+herein and fail to cure such breach within 30 days of\n+becoming aware of the breach. Provisions which, by their\n+nature, must remain in effect beyond the termination of\n+this License shall survive.\n+\n+6.2. If You assert a patent infringement claim (excluding\n+declaratory judgment actions) against Initial Developer or\n+a Contributor (the Initial Developer or Contributor against\n+whom You assert such claim is referred to as \"Participant\")\n+alleging that the Participant Software (meaning the\n+Contributor Version where the Participant is a Contributor\n+or the Original Software where the Participant is the\n+Initial Developer) directly or indirectly infringes any\n+patent, then any and all rights granted directly or\n+indirectly to You by such Participant, the Initial\n+Developer (if the Initial Developer is not the Participant)\n+and all Contributors under Sections 2.1 and/or 2.2 of this\n+License shall, upon 60 days notice from Participant\n+terminate prospectively and automatically at the expiration\n+of such 60 day notice period, unless if within such 60 day\n+period You withdraw Your claim with respect to the\n+Participant Software against such Participant either\n+unilaterally or pursuant to a written agreement with\n+Participant.\n+\n+6.3. In the event of termination under Sections 6.1 or 6.2\n+above, all end user licenses that have been validly granted\n+by You or any distributor hereunder prior to termination\n+(excluding licenses granted to You by any distributor)\n+shall survive termination.\n+\n+7. LIMITATION OF LIABILITY.\n+\n+UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER TORT\n+(INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL YOU, THE\n+INITIAL DEVELOPER, ANY OTHER CONTRIBUTOR, OR ANY DISTRIBUTOR OF\n+COVERED SOFTWARE, OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE\n+LIABLE TO ANY PERSON FOR ANY INDIRECT, SPECIAL, INCIDENTAL, OR\n+CONSEQUENTIAL DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT\n+LIMITATION, DAMAGES FOR LOST PROFITS, LOSS OF GOODWILL, WORK\n+STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL OTHER\n+COMMERCIAL DAMAGES OR LOSSES, EVEN IF SUCH PARTY SHALL HAVE BEEN\n+INFORMED OF THE POSSIBILITY OF SUCH DAMAGES. THIS LIMITATION OF\n+LIABILITY SHALL NOT APPLY TO LIABILITY FOR DEATH OR PERSONAL\n+INJURY RESULTING FROM SUCH PARTY'S NEGLIGENCE TO THE EXTENT\n+APPLICABLE LAW PROHIBITS SUCH LIMITATION. SOME JURISDICTIONS DO\n+NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR\n+CONSEQUENTIAL DAMAGES, SO THIS EXCLUSION AND LIMITATION MAY NOT\n+APPLY TO YOU.\n+\n+8. U.S. GOVERNMENT END USERS.\n+\n+The Covered Software is a \"commercial item,\" as that term is\n+defined in 48 C.F.R. 2.101 (Oct. 1995), consisting of \"commercial\n+computer software\" (as that term is defined at 48 C.F.R. $\n+252.227-7014(a)(1)) and \"commercial computer software\n+documentation\" as such terms are used in 48 C.F.R. 12.212 (Sept.\n+1995). Consistent with 48 C.F.R. 12.212 and 48 C.F.R. 227.7202-1\n+through 227.7202-4 (June 1995), all U.S. Government End Users\n+acquire Covered Software with only those rights set forth herein.\n+This U.S. Government Rights clause is in lieu of, and supersedes,\n+any other FAR, DFAR, or other clause or provision that addresses\n+Government rights in computer software under this License.\n+\n+9. MISCELLANEOUS.\n+\n+This License represents the complete agreement concerning subject\n+matter hereof. If any provision of this License is held to be\n+unenforceable, such provision shall be reformed only to the\n+extent necessary to make it enforceable. This License shall be\n+governed by the law of the jurisdiction specified in a notice\n+contained within the Original Software (except to the extent\n+applicable law, if any, provides otherwise), excluding such\n+jurisdiction's conflict-of-law provisions. Any litigation\n+relating to this License shall be subject to the jurisdiction of\n+the courts located in the jurisdiction and venue specified in a\n+notice contained within the Original Software, with the losing\n+party responsible for costs, including, without limitation, court\n+costs and reasonable attorneys' fees and expenses. The\n+application of the United Nations Convention on Contracts for the\n+International Sale of Goods is expressly excluded. Any law or\n+regulation which provides that the language of a contract shall\n+be construed against the drafter shall not apply to this License.\n+You agree that You alone are responsible for compliance with the\n+United States export administration regulations (and the export\n+control laws and regulation of any other countries) when You use,\n+distribute or otherwise make available any Covered Software.\n+\n+10. RESPONSIBILITY FOR CLAIMS.\n+\n+As between Initial Developer and the Contributors, each party is\n+responsible for claims and damages arising, directly or\n+indirectly, out of its utilization of rights under this License\n+and You agree to work with Initial Developer and Contributors to\n+distribute such responsibility on an equitable basis. Nothing\n+herein is intended or shall be deemed to constitute any admission\n+of liability.\n+\n+==\n+\n+For Font Awesome (http://fontawesome.io/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For Ionicons (http://ionicons.com/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For javax.annotation-api (https://jcp.org/en/jsr/detail?id=250):\n+This is licensed under the CDDL 1.0, see above.\n+\n+==\n+\n+For Bean Validation API (http://beanvalidation.org/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For javax.ws.rs-api (https://jax-rs-spec.java.net/):\n+This is licensed under the CDDL 1.0, see above.\n+\n+==\n+\n+For Joda Time (http://www.joda.org/joda-time/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For jQuery (http://jquery.com/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For jquery.cookie (https://github.com/carhartl/jquery-cookie):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For jQuery UI (http://jqueryui.com/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For Kendo UI (http://www.telerik.com/kendo-ui):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For lodash (https://lodash.com/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For StAX2 API (http://wiki.fasterxml.com/WoodstoxStax2):\n+This is licensed under the BSD license:\n+\n+Redistribution and use in source and binary forms, with or without \n+modification, are permitted provided that the following conditions are met:\n+\n+1. Redistributions of source code must retain the above copyright notice, this \n+list of conditions and the following disclaimer.\n+\n+2. Redistributions in binary form must reproduce the above copyright notice, \n+this list of conditions and the following disclaimer in the documentation \n+and/or other materials provided with the distribution.\n+\n+3. Neither the name of the copyright holder nor the names of its contributors \n+may be used to endorse or promote products derived from this software without \n+specific prior written permission.\n+\n+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND \n+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED \n+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \n+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE \n+FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL \n+DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR \n+SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \n+CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, \n+OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE \n+OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+\n+==\n+\n+For Woodstox (http://wiki.fasterxml.com/WoodstoxHome):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For Simple Logging Facade for Java - SLF4J (http://www.slf4j.org/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For Spring Framework (http://projects.spring.io/spring-framework/):\n+This is licensed under the AL 2.0, see above.\n+\n+==\n+\n+For FileSaver.js (http://carlos-algms.github.io/work/html5-saveas-filesaver.js/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For AngularJS (https://angular.io/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For Angular Translate (https://angular-translate.github.io/):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For AngularJS UI Router (http://angular-ui.github.io/ui-router/site):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For Bootstrap File Input (http://plugins.krajee.com/file-input):\n+This is licensed under the BSD license, see above.\n+\n+==\n+\n+For ng-password-strength (https://github.com/subarroca/ng-password-strength):\n+This is licensed under the MIT license, see above.\n+\n+==\n+\n+For Select2 (https://select2.github.io/):\n+This is licensed under the MIT license, see above."},{"sha":"4a3be1eaf3c9b75a5f5854d01d967cdd7844920e","filename":"docker/enduser/NOTICE","status":"added","additions":138,"deletions":0,"changes":138,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fenduser%2FNOTICE","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fenduser%2FNOTICE","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fenduser%2FNOTICE?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,138 @@\n+Apache Syncope\n+Copyright 2012-2019 The Apache Software Foundation\n+\n+This product includes software developed by:\n+The Apache Software Foundation (http://www.apache.org/).\n+\n+The following copyright notice(s) were affixed to portions of this code\n+with which this file is now or was at one time distributed.\n+\n+==\n+\n+This product includes software developed by the AngularJS UI Bootstrap project.\n+Copyright (c) 2012-2016 the AngularUI Team, https://github.com/organizations/angular-ui/teams/291112]\n+\n+==\n+\n+This product includes software developed by the AngularJS UI Select project.\n+Copyright (c) 2013-2014 AngularUI\n+\n+==\n+\n+This product includes software developed by the Bootstrap project.\n+Copyright (c) 2011-2016 Twitter, Inc.\n+\n+==\n+\n+This product includes software developed by the bootstrap-select project.\n+Copyright (c) 2013-2015 bootstrap-select]\n+\n+==\n+\n+This product includes software developed by the Jackson project.\n+\n+==\n+\n+This product includes software developed by the JAXB project.\n+Copyright (c) 2013-2016 The JAXB project.\n+\n+==\n+\n+This product includes software developed by the Ionicons project.\n+Copyright (c) 2016 Drifty (http://drifty.com/)\n+\n+==\n+\n+This product includs software developed by Oracle.\n+Copyright (c) 2012-2013 Oracle and/or its affiliates. All rights reserved.\n+\n+==\n+\n+This product includes software developed by the Bean Validation Project (http://beanvalidation.org).\n+Copyright (c) Red Hat, Inc., Emmanuel Bernard\n+\n+==\n+\n+This product includes software developed by the JAX-RS project.\n+Copyright (c) 2014, Oracle Corporation and/or its affiliates. All rights reserved.\n+\n+==\n+\n+This product includes software developed by the Joda Time project.\n+Copyright (c) 2002-2016 Joda.org. All Rights Reserved.\n+\n+==\n+\n+This product includes the jQuery Core JavaScript Library.\n+Copyright 2007, 2016 jQuery Foundation and other contributors.\n+\n+==\n+\n+This product includes software developed by the jquery.cookie project.\n+Copyright 2014 Klaus Hartl\n+\n+==\n+\n+This product includes the jQuery UI JavaScript Library.\n+Copyright 2007, 2015 jQuery Foundation and other contributors.\n+\n+==\n+\n+This product includes software developed by the Kendo UI project.\n+Copyright (c) 2014-2015 Telerik]\n+\n+==\n+\n+This product includes software developed by the lodash project.\n+Copyright jQuery Foundation and other contributors <https://jquery.org/>]\n+\n+==\n+\n+This product includes software developed by the Stax 2 Extension API Project.\n+\n+==\n+\n+This product includes software developed by the Woodstox Project.\n+\n+==\n+\n+This products includes software developed by the Simple Logging Facade for Java (SLF4J) project.\n+Copyright (c) 2004-2016 QOS.ch.\n+\n+==\n+\n+This product includes software developed by SpringSource.\n+Copyright (c) 2004-2016 SpringSource\n+All rights reserved.\n+\n+==\n+\n+This product includes software developed by the FileSaver.js project.\n+Copyright (c) 2015 Carlos A. Gomes.\n+\n+==\n+\n+This product includes software developed by the AngularJS project.\n+Copyright (c) 2014-2016 Google, Inc. http://angular.io\n+\n+==\n+\n+This product includes software developed by the Angular Translate project.\n+Copyright (c) <2014> <pascal.precht@gmail.com>\n+\n+==\n+\n+This product includes software developed by the Bootstrap File Input project.\n+Copyright (c) 2014 - 2016, Kartik Visweswaran Krajee.com All rights reserved.\n+\n+==\n+\n+This product contains unmodified binary redistributions for H2 database engine,\n+which is dual licensed and available under a modified version of the MPL 1.1 (Mozilla Public License) or under the\n+(unmodified) EPL 1.0 (Eclipse Public License).\n+An original copy of the license agreement can be found at: http://www.h2database.com/html/license.html\n+\n+==\n+\n+This product includes software developed by the Select2 project.\n+Copyright (c) 2012-2015 Kevin Brown, Igor Vaynberg, and Select2 contributors"},{"sha":"01af6a2131cabd2b8e69e78911a1dc2392a7d6f6","filename":"docker/enduser/pom.xml","status":"modified","additions":67,"deletions":15,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fenduser%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fenduser%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fenduser%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -31,39 +31,80 @@ under the License.\n   <description>Apache Syncope Docker Enduser</description>\n   <groupId>org.apache.syncope</groupId>\n   <artifactId>syncope-docker-enduser</artifactId>\n+  <packaging>war</packaging>\n \n   <properties>\n     <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n   </properties>\n   \n   <dependencies>\n     <dependency>\n-      <groupId>org.apache.syncope</groupId>\n-      <artifactId>syncope-deb-enduser</artifactId>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-starter-undertow</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.client</groupId>\n+      <artifactId>syncope-client-enduser</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.flowable</groupId>\n+      <artifactId>syncope-ext-flowable-client-enduser</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.saml2sp</groupId>\n+      <artifactId>syncope-ext-saml2sp-client-enduser</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.syncope.ext.oidcclient</groupId>\n+      <artifactId>syncope-ext-oidcclient-client-enduser</artifactId>\n       <version>${project.version}</version>\n-      <type>war</type>\n-      <scope>test</scope>\n     </dependency>\n   </dependencies>\n     \n   <build>\n     <plugins>\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-antrun-plugin</artifactId>\n-        <inherited>true</inherited>\n+        <artifactId>maven-war-plugin</artifactId>\n+        <inherited>false</inherited>\n+        <configuration>\n+          <webXml>${basedir}/../../fit/enduser-reference/src/main/webapp/WEB-INF/web.xml</webXml>\n+          <webResources>\n+            <resource>\n+              <directory>${basedir}</directory>\n+              <targetPath>META-INF</targetPath>\n+              <includes>\n+                <include>LICENSE</include>\n+                <include>NOTICE</include>\n+              </includes>\n+            </resource>\n+          </webResources>        \n+          <outputDirectory>${project.build.outputDirectory}</outputDirectory>        \n+        </configuration>\n+      </plugin>\n+\n+      <plugin>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-maven-plugin</artifactId>\n+        <configuration>\n+          <mainClass>org.apache.syncope.client.enduser.SyncopeEnduserApplication</mainClass>\n+          <layout>ZIP</layout>\n+        </configuration>\n         <executions>\n           <execution>\n-            <id>setup</id>\n-            <phase>process-resources</phase>\n-            <configuration>\n-              <target>\n-                <copy file=\"${basedir}/../../deb/enduser/target/apache-syncope-enduser-${project.version}.deb\" todir=\"${project.build.directory}/classes\" overwrite=\"true\" />\n-              </target>\n-            </configuration>\n             <goals>\n-              <goal>run</goal>\n+              <goal>repackage</goal>\n             </goals>\n+            <configuration>\n+              <outputDirectory>${project.build.outputDirectory}</outputDirectory>\n+            </configuration>\n           </execution>\n         </executions>\n       </plugin>\n@@ -77,7 +118,7 @@ under the License.\n             <image>\n               <name>apache/syncope-enduser:%v</name>\n               <build>\n-                <dockerFileDir>${project.build.directory}/classes</dockerFileDir>\n+                <dockerFileDir>${project.build.outputDirectory}</dockerFileDir>\n               </build>\n             </image>\n           </images>\n@@ -106,6 +147,17 @@ under the License.\n         <directory>src/main/resources</directory>\n         <filtering>true</filtering>\n       </resource>\n+      \n+      <resource>\n+        <directory>${project.basedir}/../../client/enduser/src/main/resources</directory>\n+        <includes>\n+          <include>application.properties</include>\n+          <include>enduser.properties</include>\n+          <include>customFormAttributes.json</include>\n+          <include>customTemplate.json</include>\n+        </includes>\n+        <filtering>true</filtering>\n+      </resource>\n     </resources>\n   </build>\n "},{"sha":"59a8291bfae1ed12ddc994b366150d2bc42de3fd","filename":"docker/enduser/src/main/resources/Dockerfile","status":"modified","additions":15,"deletions":8,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2FDockerfile","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2FDockerfile","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2FDockerfile?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -15,20 +15,27 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-FROM debian:stable-slim\n+# Cannot FROM adoptopenjdk/openjdk8-openj9:alpine-slim because it's headless, and fonts are required for captcha\n+FROM openjdk:8\n MAINTAINER dev@syncope.apache.org\n \n RUN set -x\n \n-COPY *.deb /tmp/\n+RUN mkdir /opt/syncope\n+RUN mkdir /opt/syncope/bin\n+RUN mkdir /opt/syncope/conf\n+RUN mkdir /opt/syncope/lib\n+RUN mkdir /opt/syncope/log\n \n-COPY *.properties.template /etc/apache-syncope/\n+COPY *.properties /opt/syncope/conf/\n+COPY *.json /opt/syncope/conf/\n+COPY *.properties.template /opt/syncope/conf/\n+COPY log4j2.xml /opt/syncope/conf/\n \n-COPY build.sh /tmp\n-RUN chmod 755 /tmp/build.sh && sync && /tmp/build.sh && rm /tmp/build.sh\n+COPY syncope-docker-enduser-*war /opt/syncope/lib/syncope-enduser.war\n \n-COPY startup.sh /sbin\n-RUN chmod 755 /sbin/startup.sh\n-CMD [\"/sbin/startup.sh\"]\n+COPY startup.sh /opt/syncope/bin\n+RUN chmod 755 /opt/syncope/bin/startup.sh\n+CMD [\"/opt/syncope/bin/startup.sh\"]\n \n EXPOSE 8080"},{"sha":"a16439579091a90d9a499eb7401fb73a5ddb6a33","filename":"docker/enduser/src/main/resources/build.sh","status":"removed","additions":0,"deletions":58,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fbuild.sh","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fbuild.sh","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fbuild.sh?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,58 +0,0 @@\n-#!/bin/bash\n-\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-\n-set -x\n-\n-#####\n-# Disable suggests/recommends\n-#####\n-echo APT::Install-Recommends \"0\"\\; > /etc/apt/apt.conf.d/10disableextras\n-echo APT::Install-Suggests \"0\"\\; >>  /etc/apt/apt.conf.d/10disableextras\n-\n-export DEBIAN_FRONTEND noninteractive\n-export DEBCONF_TERSE true\n-\n-# needed by debian:stable-slim\n-mkdir -p /usr/share/man/man1/\n-\n-######\n-# Install packages\n-######\n-apt-get -q update \\\n-  && apt-get -q install -y \\\n-    xtail \\\n-    openjdk-8-jdk \\\n-    tomcat8 \\\n-    libservlet3.1-java \\\n-  && apt-get clean\n-\n-dpkg -i /tmp/*.deb && rm /tmp/*deb\n-\n-######\n-# Setup Tomcat\n-######\n-\n-sed -i 's/--exec/--startas/' /etc/init.d/tomcat8\n-\n-echo \"JAVA_OPTS=\\\"\\${JAVA_OPTS} -Dfile.encoding=UTF-8 -server \\\n--Xms1536m -Xmx1536m -XX:NewSize=256m -XX:MaxNewSize=256m \\\n--XX:PermSize=256m -XX:MaxPermSize=256m -XX:+DisableExplicitGC \\\n--Djava.security.egd=file:/dev/./urandom\\\"\" >> /etc/default/tomcat8\n-\n-echo \"JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\" >> /etc/default/tomcat8"},{"sha":"86c7bfc46d70f309f64bf1d570193f7f0abb3b61","filename":"docker/enduser/src/main/resources/enduser.properties.template","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties.template","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties.template","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fenduser.properties.template?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -14,7 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-enduser.directory=/etc/apache-syncope\n+enduser.directory=${conf.directory}\n \n domain=${DOMAIN}\n "},{"sha":"debaf21bb7d7e1547df20d21af394e5a67b80db5","filename":"docker/enduser/src/main/resources/log4j2.xml","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,54 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<configuration status=\"WARN\">\n+\n+  <appenders>\n+\n+    <Console name=\"console\" target=\"SYSTEM_OUT\" follow=\"true\">\n+      <PatternLayout pattern=\"%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} %highlight{${LOG_LEVEL_PATTERN:-%5p}}{FATAL=red blink, ERROR=red, WARN=yellow bold, INFO=green, DEBUG=green bold, TRACE=blue} [%11.11t] %style{%-60.60c{60}}{cyan} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}\"/>\n+    </Console>\n+    \n+  </appenders>\n+\n+  <loggers>\n+\n+    <asyncLogger name=\"org.apache.syncope.client.lib\" additivity=\"false\" level=\"OFF\">\n+      <appender-ref ref=\"console\"/>\n+    </asyncLogger>\n+\n+    <asyncLogger name=\"org.apache.syncope.client.enduser\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n+    </asyncLogger>\n+\n+    <asyncLogger name=\"org.apache.wicket\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"console\"/>\n+    </asyncLogger>\n+    \n+    <asyncLogger name=\"org.apache.cxf\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"console\"/>\n+    </asyncLogger>\n+    \n+    <root level=\"INFO\">\n+      <appender-ref ref=\"console\"/>\n+    </root>\n+  \n+  </loggers>\n+  \n+</configuration>"},{"sha":"8f88f645b36898541720d9be3871bc53c11795fd","filename":"docker/enduser/src/main/resources/oidcclient-agent.properties.template","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Foidcclient-agent.properties.template","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Foidcclient-agent.properties.template","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Foidcclient-agent.properties.template?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -14,7 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-conf.directory=/etc/apache-syncope\n+conf.directory=${conf.directory}\n \n anonymousUser=${anonymousUser}\n anonymousKey=${anonymousKey}"},{"sha":"8f88f645b36898541720d9be3871bc53c11795fd","filename":"docker/enduser/src/main/resources/saml2sp-agent.properties.template","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fsaml2sp-agent.properties.template","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fsaml2sp-agent.properties.template","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fsaml2sp-agent.properties.template?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -14,7 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-conf.directory=/etc/apache-syncope\n+conf.directory=${conf.directory}\n \n anonymousUser=${anonymousUser}\n anonymousKey=${anonymousKey}"},{"sha":"66da671a2de8a36586c0b706deb48d0c9664eb95","filename":"docker/enduser/src/main/resources/startup.sh","status":"modified","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fstartup.sh","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fstartup.sh","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fenduser%2Fsrc%2Fmain%2Fresources%2Fstartup.sh?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/bin/sh\n \n # Licensed to the Apache Software Foundation (ASF) under one\n # or more contributor license agreements.  See the NOTICE file\n@@ -17,7 +17,7 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-cd /etc/apache-syncope\n+cd /opt/syncope/conf\n \n sed \"s/\\${CORE_SCHEME}/$CORE_SCHEME/\" enduser.properties.template | \n sed \"s/\\${DOMAIN}/$DOMAIN/\" | sed \"s/\\${CORE_HOST}/$CORE_HOST/\" | sed \"s/\\${CORE_PORT}/$CORE_PORT/\" > enduser.properties\n@@ -28,8 +28,6 @@ sed \"s/\\${CORE_HOST}/$CORE_HOST/\" | sed \"s/\\${CORE_PORT}/$CORE_PORT/\" > oidcclie\n sed \"s/\\${CORE_SCHEME}/$CORE_SCHEME/\" saml2sp-agent.properties.template | \n sed \"s/\\${CORE_HOST}/$CORE_HOST/\" | sed \"s/\\${CORE_PORT}/$CORE_PORT/\" > saml2sp-agent.properties\n \n-/etc/init.d/tomcat8 start\n-\n-xtail /var/log/apache-syncope/*.log /var/log/tomcat8/\n-\n-/bin/bash\n+export LOADER_PATH=\"/opt/syncope/conf,/opt/syncope/lib\"\n+java -Dfile.encoding=UTF-8 -server -Xms1536m -Xmx1536m -XX:NewSize=256m -XX:MaxNewSize=256m \\\n+ -XX:+DisableExplicitGC -Djava.security.egd=file:/dev/./urandom -jar /opt/syncope/lib/syncope-enduser.war"},{"sha":"daa5811ffd4dc28cf72bf58e6de851e5618c43e4","filename":"docker/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -34,6 +34,11 @@ under the License.\n   <packaging>pom</packaging>\n \n   <properties>\n+    <conf.directory>/opt/syncope/conf</conf.directory>\n+    <bundles.directory>/opt/syncope/bundles</bundles.directory>\n+    <connid.location>file:${bundles.directory}/</connid.location>\n+    <log.directory>/opt/syncope/log</log.directory>\n+\n     <rootpom.basedir>${basedir}/..</rootpom.basedir>\n   </properties>\n "},{"sha":"a3f3547be4e3eb8ad40e6989b7e5d1c83e4a16fa","filename":"docker/src/main/resources/docker-compose/docker-compose-pgjsonb.yml","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-pgjsonb.yml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-pgjsonb.yml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsrc%2Fmain%2Fresources%2Fdocker-compose%2Fdocker-compose-pgjsonb.yml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,70 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# Full deployment (Core, Console, Enduser) on PostgreSQL\n+\n+version: '3.3'\n+\n+services:\n+   db:\n+     image: postgres:11.1\n+     restart: always\n+     environment:\n+       POSTGRES_DB: syncope\n+       POSTGRES_USER: syncope\n+       POSTGRES_PASSWORD: syncope\n+\n+   syncope:\n+     depends_on:\n+       - db\n+     image: apache/syncope:${syncope.version}\n+     ports:\n+       - \"18080:8080\"\n+     restart: always\n+     environment:\n+       DBMS: pgjsonb\n+       DB_URL: jdbc:postgresql://localhost:5432/syncope?stringtype=unspecified\n+       DB_USER: syncope\n+       DB_PASSWORD: syncope\n+       DB_POOL_MAX: 10\n+       DB_POOL_MIN: 2\n+       OPENJPA_REMOTE_COMMIT: sjvm\n+\n+   syncope-console:\n+     depends_on:\n+       - syncope\n+     image: apache/syncope-console:${syncope.version}\n+     ports:\n+       - \"28080:8080\"\n+     restart: always\n+     environment:\n+       CORE_SCHEME: http\n+       CORE_HOST: syncope\n+       CORE_PORT: 8080\n+\n+   syncope-enduser:\n+     depends_on:\n+       - syncope\n+     image: apache/syncope-enduser:${syncope.version}\n+     ports:\n+       - \"38080:8080\"\n+     restart: always\n+     environment:\n+       CORE_SCHEME: http\n+       CORE_HOST: syncope\n+       CORE_PORT: 8080\n+       DOMAIN: Master"},{"sha":"f9c702025fb19c9774a4cd78df15030b1f410290","filename":"ext/camel/logic/src/main/java/org/apache/syncope/core/logic/init/CamelRouteLoader.java","status":"modified","additions":10,"deletions":18,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FCamelRouteLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FCamelRouteLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FCamelRouteLoader.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.logic.init;\n \n import java.io.StringWriter;\n-import java.util.Map;\n import javax.sql.DataSource;\n import javax.xml.XMLConstants;\n import javax.xml.transform.OutputKeys;\n@@ -34,12 +33,10 @@\n import org.apache.syncope.common.lib.types.CamelEntitlement;\n import org.apache.syncope.core.provisioning.api.EntitlementsHolder;\n import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n-import org.apache.syncope.core.persistence.api.DomainsHolder;\n-import org.apache.syncope.core.persistence.api.SyncopeLoader;\n+import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n import org.apache.syncope.core.persistence.api.entity.CamelRoute;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.core.io.Resource;\n import org.springframework.jdbc.core.JdbcTemplate;\n import org.springframework.stereotype.Component;\n@@ -55,7 +52,7 @@\n import org.w3c.dom.ls.LSSerializer;\n \n @Component\n-public class CamelRouteLoader implements SyncopeLoader {\n+public class CamelRouteLoader implements SyncopeCoreLoader {\n \n     private static final Logger LOG = LoggerFactory.getLogger(CamelRouteLoader.class);\n \n@@ -85,28 +82,23 @@ private static boolean isJBoss() {\n     @javax.annotation.Resource(name = \"anyObjectRoutes\")\n     private ResourceWithFallbackLoader anyObjectRoutesLoader;\n \n-    @Autowired\n-    private DomainsHolder domainsHolder;\n-\n     @Override\n-    public Integer getPriority() {\n+    public int getOrder() {\n         return 1000;\n     }\n \n     @Override\n     public void load() {\n-        for (Map.Entry<String, DataSource> entry : domainsHolder.getDomains().entrySet()) {\n-            loadRoutes(entry.getKey(), entry.getValue(),\n-                    userRoutesLoader.getResource(), AnyTypeKind.USER);\n-            loadRoutes(entry.getKey(), entry.getValue(),\n-                    groupRoutesLoader.getResource(), AnyTypeKind.GROUP);\n-            loadRoutes(entry.getKey(), entry.getValue(),\n-                    anyObjectRoutesLoader.getResource(), AnyTypeKind.ANY_OBJECT);\n-        }\n-\n         EntitlementsHolder.getInstance().init(CamelEntitlement.values());\n     }\n \n+    @Override\n+    public void load(final String domain, final DataSource datasource) {\n+        loadRoutes(domain, datasource, userRoutesLoader.getResource(), AnyTypeKind.USER);\n+        loadRoutes(domain, datasource, groupRoutesLoader.getResource(), AnyTypeKind.GROUP);\n+        loadRoutes(domain, datasource, anyObjectRoutesLoader.getResource(), AnyTypeKind.ANY_OBJECT);\n+    }\n+\n     private String nodeToString(final Node content, final DOMImplementationLS domImpl) {\n         StringWriter writer = new StringWriter();\n         try {"},{"sha":"a7f592a86b17ea5af822d41d036ccaa1bad36d3c","filename":"ext/camel/provisioning-camel/pom.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fcamel%2Fprovisioning-camel%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fcamel%2Fprovisioning-camel%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -46,6 +46,10 @@ under the License.\n       <groupId>org.apache.camel</groupId>\n       <artifactId>camel-spring</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.camel</groupId>\n+      <artifactId>camel-spring-javaconfig</artifactId>\n+    </dependency>\n     <dependency>\n       <groupId>org.apache.camel</groupId>\n       <artifactId>camel-script</artifactId>"},{"sha":"a587badab796349b9175d80dff0ebe3e81a446f1","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/CamelUserProvisioningManager.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -322,7 +322,7 @@ public Pair<UserUR, List<PropagationStatus>> update(\n         Exception ex = (Exception) exchange.getProperty(Exchange.EXCEPTION_CAUGHT);\n         if (ex != null) {\n             LOG.error(\"Update of user {} failed, trying to pull its status anyway (if configured)\",\n-                    nullPriorityAsync, ex);\n+                    userUR.getKey(), ex);\n \n             result.setStatus(ProvisioningReport.Status.FAILURE);\n             result.setMessage(\"Update failed, trying to pull status anyway (if configured)\\n\" + ex.getMessage());\n@@ -380,5 +380,4 @@ public void confirmPasswordReset(final String key, final String token, final Str\n             throw (RuntimeException) exchange.getProperty(Exchange.EXCEPTION_CAUGHT);\n         }\n     }\n-\n }"},{"sha":"ae463a3c2d7ec07a35c6de578b25e382bc7affe3","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/ProvisioningCamelContext.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FProvisioningCamelContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FProvisioningCamelContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FProvisioningCamelContext.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel;\n+\n+import org.apache.camel.CamelContext;\n+import org.apache.camel.spring.javaconfig.CamelConfiguration;\n+import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.context.annotation.Configuration;\n+\n+@ComponentScan(\"org.apache.syncope.core.provisioning.camel\")\n+@Configuration\n+public class ProvisioningCamelContext extends CamelConfiguration {\n+\n+    @Value(\"${camel.directory}\")\n+    private String camelDirectory;\n+\n+    @Override\n+    protected void setupCamelContext(final CamelContext camelContext) throws Exception {\n+        camelContext.setStreamCaching(false);\n+        camelContext.setAllowUseOriginalMessage(false);\n+    }\n+\n+    @Bean\n+    public ResourceWithFallbackLoader userRoutes() {\n+        ResourceWithFallbackLoader routes = new ResourceWithFallbackLoader();\n+        routes.setPrimary(\"file:\" + camelDirectory + \"/userRoutes.xml\");\n+        routes.setFallback(\"classpath:userRoutes.xml\");\n+        return routes;\n+    }\n+\n+    @Bean\n+    public ResourceWithFallbackLoader groupRoutes() {\n+        ResourceWithFallbackLoader routes = new ResourceWithFallbackLoader();\n+        routes.setPrimary(\"file:\" + camelDirectory + \"/groupRoutes.xml\");\n+        routes.setFallback(\"classpath:groupRoutes.xml\");\n+        return routes;\n+    }\n+\n+    @Bean\n+    public ResourceWithFallbackLoader anyObjectRoutes() {\n+        ResourceWithFallbackLoader routes = new ResourceWithFallbackLoader();\n+        routes.setPrimary(\"file:\" + camelDirectory + \"/anyObjectRoutes.xml\");\n+        routes.setFallback(\"classpath:anyObjectRoutes.xml\");\n+        return routes;\n+    }\n+}"},{"sha":"a035d84715a14f2006d901c9409a1f166fe488cb","filename":"ext/camel/provisioning-camel/src/main/resources/META-INF/spring.factories","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n+  org.apache.syncope.core.provisioning.camel.ProvisioningCamelContext"},{"sha":"0037a740292b68d0f16501b346e1ecc12616173d","filename":"ext/camel/provisioning-camel/src/main/resources/provisioningCamelContext.xml","status":"removed","additions":0,"deletions":48,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FprovisioningCamelContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FprovisioningCamelContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FprovisioningCamelContext.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,48 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:context=\"http://www.springframework.org/schema/context\"\n-       xmlns:camel=\"http://camel.apache.org/schema/spring\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\n-                           http://www.springframework.org/schema/context\n-                           http://www.springframework.org/schema/context/spring-context.xsd\n-                           http://camel.apache.org/schema/spring\n-                           http://camel.apache.org/schema/spring/camel-spring.xsd\">\n-\n-  <camel:camelContext id=\"provisioningCamelContext\" streamCache=\"false\" allowUseOriginalMessage=\"false\"/>\n-  \n-  <bean id=\"userRoutes\" class=\"org.apache.syncope.core.spring.ResourceWithFallbackLoader\">\n-    <property name=\"primary\" value=\"file:${camel.directory}/userRoutes.xml\"/>\n-    <property name=\"fallback\" value=\"classpath:userRoutes.xml\"/>\n-  </bean>\n-  <bean id=\"groupRoutes\" class=\"org.apache.syncope.core.spring.ResourceWithFallbackLoader\">\n-    <property name=\"primary\" value=\"file:${camel.directory}/groupRoutes.xml\"/>\n-    <property name=\"fallback\" value=\"classpath:groupRoutes.xml\"/>\n-  </bean>\n-  <bean id=\"anyObjectRoutes\" class=\"org.apache.syncope.core.spring.ResourceWithFallbackLoader\">\n-    <property name=\"primary\" value=\"file:${camel.directory}/anyObjectRoutes.xml\"/>\n-    <property name=\"fallback\" value=\"classpath:anyObjectRoutes.xml\"/>\n-  </bean>\n-      \n-  <context:component-scan base-package=\"org.apache.syncope.core.provisioning.camel\"/>\n-\n-</beans>"},{"sha":"1927d92d743b1280e84b99b35e4dc5bc1ef0066c","filename":"ext/elasticsearch/client-elasticsearch/src/main/java/org/apache/syncope/ext/elasticsearch/client/ElasticsearchClientContext.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchClientContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchClientContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchClientContext.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.elasticsearch.client;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+public class ElasticsearchClientContext {\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public ElasticsearchClientFactoryBean elasticsearchClientFactoryBean() {\n+        ElasticsearchClientFactoryBean factory = new ElasticsearchClientFactoryBean();\n+\n+        Map<String, String> settings = new HashMap<>();\n+        settings.put(\"cluster.name\", \"elasticsearch\");\n+        settings.put(\"client.transport.sniff\", \"false\");\n+        factory.setSettings(settings);\n+\n+        Map<String, Integer> addresses = new HashMap<>();\n+        addresses.put(\"localhost\", 9300);\n+        factory.setAddresses(addresses);\n+\n+        return factory;\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public ElasticsearchIndexManager elasticsearchIndexManager() {\n+        return new ElasticsearchIndexManager();\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public ElasticsearchUtils elasticsearchUtils() {\n+        ElasticsearchUtils utils = new ElasticsearchUtils();\n+        utils.setIndexMaxResultWindow(10000);\n+        utils.setRetryOnConflict(5);\n+        return utils;\n+    }\n+}"},{"sha":"99e78b5ac36baccefd524a460431d4b785dffc7b","filename":"ext/elasticsearch/client-elasticsearch/src/main/java/org/apache/syncope/ext/elasticsearch/client/ElasticsearchClientFactoryBean.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchClientFactoryBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchClientFactoryBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Felasticsearch%2Fclient%2FElasticsearchClientFactoryBean.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -84,5 +84,4 @@ public void destroy() throws Exception {\n             client.close();\n         }\n     }\n-\n }"},{"sha":"9c77d4c12fbf06f96a9b610ee910047f7c1a0077","filename":"ext/elasticsearch/client-elasticsearch/src/main/resources/META-INF/spring.factories","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n+  org.apache.syncope.ext.elasticsearch.client.ElasticsearchClientContext"},{"sha":"347e48df23f5b4a62e35c253364982516410385b","filename":"ext/elasticsearch/client-elasticsearch/src/main/resources/elasticsearchClientContext.xml","status":"removed","additions":0,"deletions":51,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fresources%2FelasticsearchClientContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fresources%2FelasticsearchClientContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Felasticsearch%2Fclient-elasticsearch%2Fsrc%2Fmain%2Fresources%2FelasticsearchClientContext.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,51 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\">\n-\n-  <bean class=\"org.apache.syncope.ext.elasticsearch.client.ElasticsearchClientFactoryBean\">\n-    <property name=\"settings\">\n-      <map>\n-        <entry key=\"cluster.name\">\n-          <value>elasticsearch</value>\n-        </entry>\n-        <entry key=\"client.transport.sniff\">\n-          <value>false</value>\n-        </entry>\n-      </map>\n-    </property>  \n-    <property name=\"addresses\">\n-      <map>\n-        <entry key=\"localhost\">\n-          <value>9300</value>\n-        </entry>\n-      </map>\n-    </property>\n-  </bean>\n-  \n-  <bean class=\"org.apache.syncope.ext.elasticsearch.client.ElasticsearchUtils\">\n-    <property name=\"indexMaxResultWindow\" value=\"10000\"/>\n-    <property name=\"retryOnConflict\" value=\"5\"/>\n-  </bean>\n-  <bean class=\"org.apache.syncope.ext.elasticsearch.client.ElasticsearchIndexManager\"/>\n-  \n-</beans>"},{"sha":"165ad1c6f97bea232fe569b9f362f17c9f6f3123","filename":"ext/flowable/client-console/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fflowable%2Fclient-console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fflowable%2Fclient-console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-console%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -34,7 +34,7 @@ under the License.\n   <packaging>jar</packaging>\n   \n   <properties>\n-    <flowable-modeler.directory>${project.build.directory}/classes/META-INF/resources/flowable-modeler</flowable-modeler.directory>\n+    <flowable-modeler.directory>${project.build.outputDirectory}/META-INF/resources/flowable-modeler</flowable-modeler.directory>\n     <rootpom.basedir>${basedir}/../../..</rootpom.basedir>\n   </properties>\n "},{"sha":"783d70101655391c9d2c67db216f75ae18ecc66a","filename":"ext/flowable/flowable-bpmn/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fflowable%2Fflowable-bpmn%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fflowable%2Fflowable-bpmn%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -73,6 +73,11 @@ under the License.\n       <artifactId>flowable-json-converter</artifactId>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-autoconfigure</artifactId>\n+    </dependency>\n+\n     <dependency>\n       <groupId>org.apache.syncope.ext.flowable</groupId>\n       <artifactId>syncope-ext-flowable-common-lib</artifactId>"},{"sha":"ff072dbc141434626e24492ceb7bdb2e797ed9b5","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/WorkflowFlowableContext.java","status":"added","additions":128,"deletions":0,"changes":128,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2FWorkflowFlowableContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2FWorkflowFlowableContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2FWorkflowFlowableContext.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,128 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.flowable;\n+\n+import java.util.Arrays;\n+import org.apache.syncope.core.flowable.impl.FlowableBpmnProcessManager;\n+import org.apache.syncope.core.flowable.impl.FlowableUserRequestHandler;\n+import org.apache.syncope.core.flowable.impl.FlowableWorkflowUtils;\n+import org.apache.syncope.core.flowable.support.SyncopeEntitiesVariableType;\n+import org.apache.syncope.core.flowable.support.SyncopeFormHandlerHelper;\n+import org.apache.syncope.core.flowable.support.SyncopeIdmIdentityService;\n+import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n+import org.apache.syncope.core.workflow.java.WorkflowContext;\n+import org.flowable.common.engine.impl.AbstractEngineConfiguration;\n+import org.flowable.common.engine.impl.history.HistoryLevel;\n+import org.flowable.idm.spring.SpringIdmEngineConfiguration;\n+import org.flowable.idm.spring.configurator.SpringIdmEngineConfigurator;\n+import org.flowable.spring.SpringProcessEngineConfiguration;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Import;\n+import org.springframework.context.annotation.Scope;\n+\n+@Import(WorkflowContext.class)\n+@ComponentScan(\"org.apache.syncope.core.flowable\")\n+@Configuration\n+public class WorkflowFlowableContext {\n+\n+    @Value(\"${wf.directory}\")\n+    private String wfDirectory;\n+\n+    @Value(\"${historyLevel:ACTIVITY}\")\n+    private HistoryLevel historyLevel;\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public SyncopeIdmIdentityService syncopeIdmIdentityService() {\n+        return new SyncopeIdmIdentityService();\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public SpringIdmEngineConfiguration syncopeIdmEngineConfiguration() {\n+        SpringIdmEngineConfiguration conf = new SpringIdmEngineConfiguration();\n+        conf.setIdmIdentityService(syncopeIdmIdentityService());\n+        return conf;\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public SpringIdmEngineConfigurator syncopeIdmEngineConfigurator() {\n+        SpringIdmEngineConfigurator configurator = new SpringIdmEngineConfigurator();\n+        configurator.setIdmEngineConfiguration(syncopeIdmEngineConfiguration());\n+        return configurator;\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public SyncopeFormHandlerHelper syncopeFormHandlerHelper() {\n+        return new SyncopeFormHandlerHelper();\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public FlowableBpmnProcessManager bpmnProcessManager() {\n+        return new FlowableBpmnProcessManager();\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public FlowableUserRequestHandler userRequestHandler() {\n+        return new FlowableUserRequestHandler();\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public FlowableWorkflowUtils flowableUtils() {\n+        return new FlowableWorkflowUtils();\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    public SyncopeEntitiesVariableType syncopeEntitiesVariableType() {\n+        return new SyncopeEntitiesVariableType();\n+    }\n+\n+    @ConditionalOnMissingBean\n+    @Bean\n+    @Scope(\"prototype\")\n+    public SpringProcessEngineConfiguration processEngineConfiguration() {\n+        SpringProcessEngineConfiguration conf = new SpringProcessEngineConfiguration();\n+        conf.setDatabaseSchemaUpdate(AbstractEngineConfiguration.DB_SCHEMA_UPDATE_TRUE);\n+        conf.setJpaHandleTransaction(true);\n+        conf.setJpaCloseEntityManager(false);\n+        conf.setHistoryLevel(historyLevel);\n+        conf.setIdmEngineConfigurator(syncopeIdmEngineConfigurator());\n+        conf.setCustomPreVariableTypes(Arrays.asList(syncopeEntitiesVariableType()));\n+        conf.setFormHandlerHelper(syncopeFormHandlerHelper());\n+        return conf;\n+    }\n+\n+    @Bean\n+    public ResourceWithFallbackLoader userWorkflowDef() {\n+        ResourceWithFallbackLoader userWorkflowDef = new ResourceWithFallbackLoader();\n+        userWorkflowDef.setPrimary(\"file:\" + wfDirectory + \"/userWorkflow.bpmn20.xml\");\n+        userWorkflowDef.setFallback(\"classpath:userWorkflow.bpmn20.xml\");\n+        return userWorkflowDef;\n+    }\n+}"},{"sha":"992c7f358d8df4c1205df401f67d9e8fbabfb389","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/impl/FlowableUserRequestHandler.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fimpl%2FFlowableUserRequestHandler.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -39,7 +39,6 @@\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.UserRequestFormPropertyType;\n import org.apache.syncope.core.flowable.api.DropdownValueProvider;\n-import org.apache.syncope.core.flowable.api.WorkflowTaskManager;\n import org.apache.syncope.core.flowable.support.DomainProcessEngine;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n@@ -78,9 +77,6 @@ public class FlowableUserRequestHandler implements UserRequestHandler {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(UserRequestHandler.class);\n \n-    @Autowired\n-    protected WorkflowTaskManager wfTaskManager;\n-\n     @Autowired\n     protected UserDataBinder dataBinder;\n "},{"sha":"d58107570d5ea86c42add7891c4fd641858ed5ba","filename":"ext/flowable/flowable-bpmn/src/main/java/org/apache/syncope/core/flowable/support/DomainProcessEngineFactoryBean.java","status":"modified","additions":50,"deletions":31,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fsupport%2FDomainProcessEngineFactoryBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fsupport%2FDomainProcessEngineFactoryBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fflowable%2Fsupport%2FDomainProcessEngineFactoryBean.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -22,14 +22,17 @@\n import java.util.HashMap;\n import java.util.Map;\n import javax.sql.DataSource;\n-import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.core.persistence.api.DomainsHolder;\n+import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n import org.flowable.engine.ProcessEngine;\n import org.flowable.common.engine.impl.cfg.SpringBeanFactoryProxyMap;\n import org.flowable.common.engine.impl.interceptor.EngineConfigurationConstants;\n import org.flowable.engine.impl.util.EngineServiceUtil;\n import org.flowable.idm.spring.SpringIdmEngineConfiguration;\n import org.flowable.spring.SpringExpressionManager;\n import org.flowable.spring.SpringProcessEngineConfiguration;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.BeansException;\n import org.springframework.beans.factory.DisposableBean;\n import org.springframework.beans.factory.FactoryBean;\n@@ -44,50 +47,67 @@\n  */\n @Component\n public class DomainProcessEngineFactoryBean\n-        implements FactoryBean<DomainProcessEngine>, DisposableBean, ApplicationContextAware {\n+        implements FactoryBean<DomainProcessEngine>, DisposableBean, ApplicationContextAware, SyncopeCoreLoader {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(DomainProcessEngineFactoryBean.class);\n \n     private ApplicationContext ctx;\n \n     private DomainProcessEngine engine;\n \n+    @Override\n+    public int getOrder() {\n+        return 300;\n+    }\n+\n     @Override\n     public void setApplicationContext(final ApplicationContext ctx) throws BeansException {\n         this.ctx = ctx;\n     }\n \n+    private ProcessEngine build(final String domain, final DataSource datasource) {\n+        PlatformTransactionManager transactionManager = ctx.getBean(\n+                domain + \"TransactionManager\", PlatformTransactionManager.class);\n+        Object entityManagerFactory = ctx.getBean(domain + \"EntityManagerFactory\");\n+\n+        SpringProcessEngineConfiguration conf = ctx.getBean(SpringProcessEngineConfiguration.class);\n+        conf.setDataSource(datasource);\n+        conf.setTransactionManager(transactionManager);\n+        conf.setTransactionsExternallyManaged(true);\n+        conf.setJpaEntityManagerFactory(entityManagerFactory);\n+        if (conf.getBeans() == null) {\n+            conf.setBeans(new SpringBeanFactoryProxyMap(ctx));\n+        }\n+        if (conf.getExpressionManager() == null) {\n+            conf.setExpressionManager(new SpringExpressionManager(ctx, conf.getBeans()));\n+        }\n+        if (EngineServiceUtil.getIdmEngineConfiguration(conf) == null) {\n+            conf.addEngineConfiguration(\n+                    EngineConfigurationConstants.KEY_IDM_ENGINE_CONFIG,\n+                    ctx.getBean(SpringIdmEngineConfiguration.class));\n+        }\n+        conf.setEnableSafeBpmnXml(true);\n+        conf.setCustomFormTypes(Arrays.asList(new DropdownFormType(null)));\n+\n+        return conf.buildProcessEngine();\n+    }\n+\n+    @Override\n+    public void load(final String domain, final DataSource datasource) {\n+        try {\n+            getObject().getEngines().put(domain, build(domain, datasource));\n+        } catch (Exception e) {\n+            LOG.error(\"Could not setup Flowable for {}\", domain, e);\n+        }\n+    }\n+\n     @Override\n     public DomainProcessEngine getObject() throws Exception {\n         if (engine == null) {\n             Map<String, ProcessEngine> engines = new HashMap<>();\n \n-            ctx.getBeansOfType(DataSource.class).forEach((key, dataSource) -> {\n-                if (!key.startsWith(\"local\")) {\n-                    String domain = StringUtils.substringBefore(key, DataSource.class.getSimpleName());\n-                    PlatformTransactionManager transactionManager = ctx.getBean(\n-                            domain + \"TransactionManager\", PlatformTransactionManager.class);\n-                    Object entityManagerFactory = ctx.getBean(domain + \"EntityManagerFactory\");\n-\n-                    SpringProcessEngineConfiguration conf = ctx.getBean(SpringProcessEngineConfiguration.class);\n-                    conf.setDataSource(dataSource);\n-                    conf.setTransactionManager(transactionManager);\n-                    conf.setTransactionsExternallyManaged(true);\n-                    conf.setJpaEntityManagerFactory(entityManagerFactory);\n-                    if (conf.getBeans() == null) {\n-                        conf.setBeans(new SpringBeanFactoryProxyMap(ctx));\n-                    }\n-                    if (conf.getExpressionManager() == null) {\n-                        conf.setExpressionManager(new SpringExpressionManager(ctx, conf.getBeans()));\n-                    }\n-                    if (EngineServiceUtil.getIdmEngineConfiguration(conf) == null) {\n-                        conf.addEngineConfiguration(\n-                                EngineConfigurationConstants.KEY_IDM_ENGINE_CONFIG,\n-                                ctx.getBean(SpringIdmEngineConfiguration.class));\n-                    }\n-                    conf.setEnableSafeBpmnXml(true);\n-                    conf.setCustomFormTypes(Arrays.asList(new DropdownFormType(null)));\n-\n-                    engines.put(domain, conf.buildProcessEngine());\n-                }\n+            ctx.getBean(DomainsHolder.class).getDomains().forEach((domain, datasource) -> {\n+                engines.put(domain, build(domain, datasource));\n             });\n \n             engine = new DomainProcessEngine(engines);\n@@ -112,5 +132,4 @@ public void destroy() throws Exception {\n             engine.close();\n         }\n     }\n-\n }"},{"sha":"686c490ad27ee11c3cf1ea7f8d1f707306fd7093","filename":"ext/flowable/flowable-bpmn/src/main/resources/META-INF/spring.factories","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n+  org.apache.syncope.core.flowable.WorkflowFlowableContext"},{"sha":"aebf4950151e20a07e5c03a832a8a0198259df1b","filename":"ext/flowable/flowable-bpmn/src/main/resources/workflowFlowableContext.xml","status":"removed","additions":0,"deletions":66,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fresources%2FworkflowFlowableContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fresources%2FworkflowFlowableContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fflowable-bpmn%2Fsrc%2Fmain%2Fresources%2FworkflowFlowableContext.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,66 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:context=\"http://www.springframework.org/schema/context\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans   \n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\n-                           http://www.springframework.org/schema/context\n-                           http://www.springframework.org/schema/context/spring-context.xsd\">\n-\n-  <bean id=\"userWorkflowDef\" class=\"org.apache.syncope.core.spring.ResourceWithFallbackLoader\">\n-    <property name=\"primary\" value=\"file:${wf.directory}/userWorkflow.bpmn20.xml\"/>\n-    <property name=\"fallback\" value=\"classpath:userWorkflow.bpmn20.xml\"/>\n-  </bean>\n-\n-  <bean id=\"syncopeIdmIdentityService\" class=\"org.apache.syncope.core.flowable.support.SyncopeIdmIdentityService\"/>\n-  <bean id=\"syncopeIdmEngineConfiguration\" class=\"org.flowable.idm.spring.SpringIdmEngineConfiguration\">\n-    <property name=\"idmIdentityService\" ref=\"syncopeIdmIdentityService\"/> \n-  </bean>\n-  <bean id=\"syncopeIdmEngineConfigurator\" class=\"org.flowable.idm.spring.configurator.SpringIdmEngineConfigurator\">\n-    <property name=\"idmEngineConfiguration\" ref=\"syncopeIdmEngineConfiguration\"/> \n-  </bean>\n-\n-  <bean id=\"syncopeFormHandlerHelper\" class=\"org.apache.syncope.core.flowable.support.SyncopeFormHandlerHelper\"/>\n-\n-  <bean class=\"org.flowable.spring.SpringProcessEngineConfiguration\" scope=\"prototype\">\n-    <property name=\"databaseSchemaUpdate\" value=\"true\"/>\n-\n-    <property name=\"jpaHandleTransaction\" value=\"true\"/>\n-    <property name=\"jpaCloseEntityManager\" value=\"false\"/>\n-\n-    <property name=\"history\" value=\"${historyLevel}\"/>\n-\n-    <property name=\"idmEngineConfigurator\" ref=\"syncopeIdmEngineConfigurator\"/>\n-    <property name=\"customPreVariableTypes\">\n-      <list>\n-        <bean class=\"org.apache.syncope.core.flowable.support.SyncopeEntitiesVariableType\"/>\n-      </list>\n-    </property>\n-    \n-    <property name=\"formHandlerHelper\" ref=\"syncopeFormHandlerHelper\"/>\n-  </bean>\n-\n-  <bean id=\"bpmnProcessManager\" class=\"org.apache.syncope.core.flowable.impl.FlowableBpmnProcessManager\"/>\n-  <bean id=\"userRequestHandler\" class=\"org.apache.syncope.core.flowable.impl.FlowableUserRequestHandler\"/>\n-  <bean id=\"flowableUtils\" class=\"org.apache.syncope.core.flowable.impl.FlowableWorkflowUtils\"/>\n-\n-  <context:component-scan base-package=\"org.apache.syncope.core.flowable\"/>\n-</beans>"},{"sha":"e80430d9bb20fc2cc7be43ec7d46ea304c44025b","filename":"ext/flowable/logic/src/main/java/org/apache/syncope/core/logic/UserWorkflowTaskLogic.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fflowable%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserWorkflowTaskLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fflowable%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserWorkflowTaskLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserWorkflowTaskLogic.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -37,13 +37,15 @@\n import org.apache.syncope.core.flowable.api.WorkflowTaskManager;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskInfo;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Lazy;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.stereotype.Component;\n \n @Component\n public class UserWorkflowTaskLogic extends AbstractTransactionalLogic<EntityTO> {\n \n     @Autowired\n+    @Lazy\n     private WorkflowTaskManager wfTaskManager;\n \n     @Autowired"},{"sha":"070c1675cb2b17b88ee1cc7686e68efe8a855851","filename":"ext/flowable/logic/src/main/java/org/apache/syncope/core/logic/init/FlowableLoader.java","status":"modified","additions":19,"deletions":13,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fflowable%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FFlowableLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fflowable%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FFlowableLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FFlowableLoader.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -22,14 +22,14 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.util.List;\n-import java.util.Map;\n import javax.annotation.Resource;\n+import javax.sql.DataSource;\n import org.apache.commons.io.IOUtils;\n import org.apache.syncope.common.lib.types.FlowableEntitlement;\n import org.apache.syncope.core.flowable.impl.FlowableDeployUtils;\n import org.apache.syncope.core.flowable.impl.FlowableRuntimeUtils;\n import org.apache.syncope.core.flowable.support.DomainProcessEngine;\n-import org.apache.syncope.core.persistence.api.SyncopeLoader;\n+import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n import org.apache.syncope.core.provisioning.api.EntitlementsHolder;\n import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n import org.flowable.engine.ProcessEngine;\n@@ -41,7 +41,7 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class FlowableLoader implements SyncopeLoader {\n+public class FlowableLoader implements SyncopeCoreLoader {\n \n     private static final Logger LOG = LoggerFactory.getLogger(FlowableLoader.class);\n \n@@ -52,14 +52,17 @@ public class FlowableLoader implements SyncopeLoader {\n     private DomainProcessEngine dpEngine;\n \n     @Override\n-    public Integer getPriority() {\n-        return Integer.MIN_VALUE;\n+    public int getOrder() {\n+        return 310;\n     }\n \n     @Override\n     public void load() {\n         EntitlementsHolder.getInstance().init(FlowableEntitlement.values());\n+    }\n \n+    @Override\n+    public void load(final String domain, final DataSource datasource) {\n         byte[] wfDef = new byte[0];\n \n         try (InputStream wfIn = userWorkflowDef.getResource().getInputStream()) {\n@@ -68,29 +71,32 @@ public void load() {\n             LOG.error(\"While loading \" + userWorkflowDef.getResource().getFilename(), e);\n         }\n \n-        for (Map.Entry<String, ProcessEngine> entry : dpEngine.getEngines().entrySet()) {\n-            List<ProcessDefinition> processes = entry.getValue().getRepositoryService().\n+        ProcessEngine processEngine = dpEngine.getEngines().get(domain);\n+        if (processEngine == null) {\n+            LOG.error(\"Could not find the configured ProcessEngine for domain {}\", domain);\n+        } else {\n+            List<ProcessDefinition> processes = processEngine.getRepositoryService().\n                     createProcessDefinitionQuery().processDefinitionKey(FlowableRuntimeUtils.WF_PROCESS_ID).\n                     list();\n             LOG.debug(FlowableRuntimeUtils.WF_PROCESS_ID + \" Flowable processes in repository: {}\", processes);\n \n             // Only loads process definition from file if not found in repository\n             if (processes.isEmpty()) {\n-                entry.getValue().getRepositoryService().createDeployment().addInputStream(\n+                processEngine.getRepositoryService().createDeployment().addInputStream(\n                         userWorkflowDef.getResource().getFilename(), new ByteArrayInputStream(wfDef)).deploy();\n \n-                ProcessDefinition procDef = entry.getValue().getRepositoryService().createProcessDefinitionQuery().\n+                ProcessDefinition procDef = processEngine.getRepositoryService().createProcessDefinitionQuery().\n                         processDefinitionKey(FlowableRuntimeUtils.WF_PROCESS_ID).latestVersion().\n                         singleResult();\n \n-                FlowableDeployUtils.deployModel(entry.getValue(), procDef);\n+                FlowableDeployUtils.deployModel(processEngine, procDef);\n \n-                LOG.debug(\"Flowable Workflow definition loaded for domain {}\", entry.getKey());\n+                LOG.debug(\"Flowable Workflow definition loaded for domain {}\", domain);\n             }\n \n             // jump to the next ID block\n-            for (int i = 0; i < entry.getValue().getProcessEngineConfiguration().getIdBlockSize(); i++) {\n-                SpringProcessEngineConfiguration.class.cast(entry.getValue().getProcessEngineConfiguration()).\n+            for (int i = 0; i < processEngine.getProcessEngineConfiguration().getIdBlockSize(); i++) {\n+                SpringProcessEngineConfiguration.class.cast(processEngine.getProcessEngineConfiguration()).\n                         getIdGenerator().getNextId();\n             }\n         }"},{"sha":"2bdecefeb5b3cf268cce8cac87f6bc11ac4c79d3","filename":"ext/oidcclient/agent/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Foidcclient%2Fagent%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Foidcclient%2Fagent%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -52,6 +52,11 @@ under the License.\n       <scope>provided</scope>\n     </dependency>\n     \n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot</artifactId>\n+    </dependency>\n+\n     <dependency>\n       <groupId>commons-io</groupId>\n       <artifactId>commons-io</artifactId>"},{"sha":"b8f46e97c378f1a9a7431683d00e5d9df63afd84","filename":"ext/oidcclient/agent/src/main/java/org/apache/syncope/ext/oidcclient/agent/BeforeLogout.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FBeforeLogout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FBeforeLogout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FBeforeLogout.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -20,7 +20,6 @@\n \n import java.io.IOException;\n import javax.servlet.ServletException;\n-import javax.servlet.annotation.WebServlet;\n import javax.servlet.http.HttpServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n@@ -33,7 +32,6 @@\n import org.apache.syncope.common.lib.to.OIDCLogoutRequestTO;\n import org.apache.syncope.common.rest.api.service.OIDCClientService;\n \n-@WebServlet(name = \"oidclientbeforelogout\", urlPatterns = { \"/oidcclient/beforelogout\" })\n public class BeforeLogout extends HttpServlet {\n \n     private static final long serialVersionUID = -5920740403138557179L;"},{"sha":"b9fbbe0d15fe2f758e503c329075ff6b77e01f35","filename":"ext/oidcclient/agent/src/main/java/org/apache/syncope/ext/oidcclient/agent/CodeConsumer.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FCodeConsumer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FCodeConsumer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FCodeConsumer.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -24,7 +24,6 @@\n import java.net.URLEncoder;\n import java.nio.charset.StandardCharsets;\n import javax.servlet.ServletException;\n-import javax.servlet.annotation.WebServlet;\n import javax.servlet.http.HttpServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n@@ -37,7 +36,6 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-@WebServlet(name = \"codeConsumer\", urlPatterns = { \"/oidcclient/code-consumer\" })\n public class CodeConsumer extends HttpServlet {\n \n     private static final long serialVersionUID = 968480296813639041L;"},{"sha":"ebe3b0f21ee1f0e0c703d8f7912c391cf15e93b8","filename":"ext/oidcclient/agent/src/main/java/org/apache/syncope/ext/oidcclient/agent/Login.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogin.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -22,7 +22,6 @@\n import java.net.URLEncoder;\n import java.nio.charset.StandardCharsets;\n import javax.servlet.ServletException;\n-import javax.servlet.annotation.WebServlet;\n import javax.servlet.http.HttpServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n@@ -36,7 +35,6 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-@WebServlet(name = \"oidcclientLogin\", urlPatterns = { \"/oidcclient/login\" })\n public class Login extends HttpServlet {\n \n     private static final long serialVersionUID = 968480296813639041L;"},{"sha":"a0cb4b6c5ac07c6038f2fbe691d401f5e7674779","filename":"ext/oidcclient/agent/src/main/java/org/apache/syncope/ext/oidcclient/agent/Logout.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogout.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -22,14 +22,12 @@\n import java.net.URLEncoder;\n import java.nio.charset.StandardCharsets;\n import javax.servlet.ServletException;\n-import javax.servlet.annotation.WebServlet;\n import javax.servlet.http.HttpServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-@WebServlet(name = \"oidcclientlogout\", urlPatterns = { \"/oidcclient/logout\" })\n public class Logout extends HttpServlet {\n \n     private static final long serialVersionUID = 2383239908659843071L;\n@@ -63,5 +61,4 @@ protected void doGet(final HttpServletRequest request, final HttpServletResponse\n             }\n         }\n     }\n-\n }"},{"sha":"c2eb9e4a08cdbf9b5d6d113b5c66b24f177d5eba","filename":"ext/oidcclient/agent/src/main/java/org/apache/syncope/ext/oidcclient/agent/OIDCClientAgentContext.java","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FOIDCClientAgentContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FOIDCClientAgentContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FOIDCClientAgentContext.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.oidcclient.agent;\n+\n+import org.springframework.boot.web.servlet.ServletListenerRegistrationBean;\n+import org.springframework.boot.web.servlet.ServletRegistrationBean;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+public class OIDCClientAgentContext {\n+\n+    @Bean\n+    public ServletListenerRegistrationBean<OIDCClientAgentSetup> oidcClientAgentSetup() {\n+        return new ServletListenerRegistrationBean<>(new OIDCClientAgentSetup());\n+    }\n+\n+    @Bean\n+    public ServletRegistrationBean<Login> oidcClientLogin() {\n+        return new ServletRegistrationBean<>(new Login(), \"/oidcclient/login\");\n+    }\n+\n+    @Bean\n+    public ServletRegistrationBean<CodeConsumer> oidcClientCodeConsumer() {\n+        return new ServletRegistrationBean<>(new CodeConsumer(), \"/oidcclient/code-consumer\");\n+    }\n+\n+    @Bean\n+    public ServletRegistrationBean<BeforeLogout> oidcClientBeforeLogout() {\n+        return new ServletRegistrationBean<>(new BeforeLogout(), \"/oidcclient/beforelogout\");\n+    }\n+\n+    @Bean\n+    public ServletRegistrationBean<Logout> oidcClientLogout() {\n+        return new ServletRegistrationBean<>(new Logout(), \"/oidcclient/logout\");\n+    }\n+}"},{"sha":"666d2cb58e8527738f53548ec0f1e05d943a1ed0","filename":"ext/oidcclient/agent/src/main/java/org/apache/syncope/ext/oidcclient/agent/OIDCClientAgentSetup.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FOIDCClientAgentSetup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FOIDCClientAgentSetup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FOIDCClientAgentSetup.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -21,13 +21,11 @@\n import java.util.Properties;\n import javax.servlet.ServletContextEvent;\n import javax.servlet.ServletContextListener;\n-import javax.servlet.annotation.WebListener;\n import org.apache.commons.lang3.BooleanUtils;\n import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n import org.apache.syncope.common.lib.PropertyUtils;\n \n-@WebListener\n public class OIDCClientAgentSetup implements ServletContextListener {\n \n     private static final String OIDCCLIENT_AGENT_PROPERTIES = \"oidcclient-agent.properties\";\n@@ -42,7 +40,7 @@ private static <T> T assertNotNull(final T argument, final String name) {\n     @Override\n     public void contextInitialized(final ServletContextEvent sce) {\n         // read oidcclientagent.properties\n-        Properties props = PropertyUtils.read(getClass(), OIDCCLIENT_AGENT_PROPERTIES, \"conf.directory\").getLeft();\n+        Properties props = PropertyUtils.read(getClass(), OIDCCLIENT_AGENT_PROPERTIES, \"conf.directory\");\n \n         String anonymousUser = props.getProperty(\"anonymousUser\");\n         assertNotNull(anonymousUser, \"<anonymousUser>\");\n@@ -73,5 +71,4 @@ public void contextInitialized(final ServletContextEvent sce) {\n     @Override\n     public void contextDestroyed(final ServletContextEvent sce) {\n     }\n-\n }"},{"sha":"344c41d20710cd4dd084b9ff92fb5650fc73c2d6","filename":"ext/oidcclient/agent/src/main/resources/META-INF/spring.factories","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n+  org.apache.syncope.ext.oidcclient.agent.OIDCClientAgentContext"},{"sha":"169b342f8074faf2483961ce23552eeffdec9e5b","filename":"ext/oidcclient/logic/src/main/java/org/apache/syncope/core/logic/init/OIDCClientClassPathScanImplementationLookup.java","status":"modified","additions":7,"deletions":10,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FOIDCClientClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FOIDCClientClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FOIDCClientClassPathScanImplementationLookup.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -23,18 +23,17 @@\n import java.util.HashSet;\n import java.util.Set;\n import org.apache.syncope.core.persistence.api.ImplementationLookup;\n-import org.apache.syncope.core.persistence.api.SyncopeLoader;\n+import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n import org.apache.syncope.core.provisioning.api.OIDCProviderActions;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.config.BeanDefinition;\n import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n import org.springframework.core.type.filter.AssignableTypeFilter;\n import org.springframework.stereotype.Component;\n import org.springframework.util.ClassUtils;\n \n @Component\n-public class OIDCClientClassPathScanImplementationLookup implements SyncopeLoader {\n+public class OIDCClientClassPathScanImplementationLookup implements SyncopeCoreLoader {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ImplementationLookup.class);\n \n@@ -43,8 +42,8 @@ public class OIDCClientClassPathScanImplementationLookup implements SyncopeLoade\n     private Set<String> actionsClasses;\n \n     @Override\n-    public Integer getPriority() {\n-        return Integer.MIN_VALUE;\n+    public int getOrder() {\n+        return 999;\n     }\n \n     @Override\n@@ -54,10 +53,9 @@ public void load() {\n         ClassPathScanningCandidateComponentProvider scanner = new ClassPathScanningCandidateComponentProvider(false);\n         scanner.addIncludeFilter(new AssignableTypeFilter(OIDCProviderActions.class));\n \n-        for (BeanDefinition bd : scanner.findCandidateComponents(DEFAULT_BASE_PACKAGE)) {\n+        scanner.findCandidateComponents(DEFAULT_BASE_PACKAGE).forEach(bd -> {\n             try {\n-                Class<?> clazz = ClassUtils.resolveClassName(\n-                        bd.getBeanClassName(), ClassUtils.getDefaultClassLoader());\n+                Class<?> clazz = ClassUtils.resolveClassName(bd.getBeanClassName(), ClassUtils.getDefaultClassLoader());\n                 boolean isAbstractClazz = Modifier.isAbstract(clazz.getModifiers());\n \n                 if (OIDCProviderActions.class.isAssignableFrom(clazz) && !isAbstractClazz) {\n@@ -66,13 +64,12 @@ public void load() {\n             } catch (Throwable t) {\n                 LOG.warn(\"Could not inspect class {}\", bd.getBeanClassName(), t);\n             }\n-        }\n+        });\n \n         actionsClasses = Collections.unmodifiableSet(actionsClasses);\n     }\n \n     public Set<String> getActionsClasses() {\n         return actionsClasses;\n     }\n-\n }"},{"sha":"847905f4043154f30108a99183fb93662f87b9d7","filename":"ext/oidcclient/logic/src/main/java/org/apache/syncope/core/logic/init/OIDCClientLoader.java","status":"modified","additions":3,"deletions":20,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FOIDCClientLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FOIDCClientLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FOIDCClientLoader.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -19,37 +19,20 @@\n package org.apache.syncope.core.logic.init;\n \n import org.apache.syncope.common.lib.types.OIDCClientEntitlement;\n-import org.apache.syncope.core.persistence.api.DomainsHolder;\n-import org.apache.syncope.core.persistence.api.SyncopeLoader;\n+import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n import org.apache.syncope.core.provisioning.api.EntitlementsHolder;\n-import org.apache.syncope.core.spring.security.AuthContextUtils;\n-import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class OIDCClientLoader implements SyncopeLoader {\n-\n-    @Autowired\n-    private DomainsHolder domainsHolder;\n+public class OIDCClientLoader implements SyncopeCoreLoader {\n \n     @Override\n-    public Integer getPriority() {\n+    public int getOrder() {\n         return 1000;\n     }\n \n     @Override\n     public void load() {\n         EntitlementsHolder.getInstance().init(OIDCClientEntitlement.values());\n-\n-        for (String domain : domainsHolder.getDomains().keySet()) {\n-            AuthContextUtils.execWithAuthContext(domain, new AuthContextUtils.Executable<Void>() {\n-\n-                @Override\n-                public Void exec() {\n-                    return null;\n-                }\n-            });\n-        }\n     }\n-\n }"},{"sha":"a4c56b77514832c671311b65d121648dcffe330b","filename":"ext/saml2sp/agent/pom.xml","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fsaml2sp%2Fagent%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fsaml2sp%2Fagent%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fagent%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -51,7 +51,12 @@ under the License.\n       <artifactId>jstl</artifactId>\n       <scope>provided</scope>\n     </dependency>\n-    \n+\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot</artifactId>\n+    </dependency>\n+\n     <dependency>\n       <groupId>commons-io</groupId>\n       <artifactId>commons-io</artifactId>"},{"sha":"106b8ccb593d928c8b44778ecf9b11355d3338ff","filename":"ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AssertionConsumer.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FAssertionConsumer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FAssertionConsumer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FAssertionConsumer.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -24,7 +24,6 @@\n import java.net.URLEncoder;\n import java.nio.charset.StandardCharsets;\n import javax.servlet.ServletException;\n-import javax.servlet.annotation.WebServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import org.apache.commons.lang3.StringUtils;\n@@ -33,7 +32,6 @@\n import org.apache.syncope.common.lib.to.SAML2LoginResponseTO;\n import org.apache.syncope.common.rest.api.service.SAML2SPService;\n \n-@WebServlet(name = \"assertionConsumer\", urlPatterns = { \"/saml2sp/assertion-consumer\" })\n public class AssertionConsumer extends AbstractSAML2SPServlet {\n \n     private static final long serialVersionUID = 968480296813639041L;"},{"sha":"f8dc573528987cd3730e74c16955160290ce58b6","filename":"ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Login.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FLogin.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -22,15 +22,13 @@\n import java.net.URLEncoder;\n import java.nio.charset.StandardCharsets;\n import javax.servlet.ServletException;\n-import javax.servlet.annotation.WebServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.to.SAML2RequestTO;\n import org.apache.syncope.common.rest.api.service.SAML2SPService;\n \n-@WebServlet(name = \"saml2spLogin\", urlPatterns = { \"/saml2sp/login\" })\n public class Login extends AbstractSAML2SPServlet {\n \n     private static final long serialVersionUID = 968480296813639041L;"},{"sha":"d1381f8ceb7b5533e1e019aa31b09d34ad93bfee","filename":"ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Logout.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FLogout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FLogout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FLogout.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -22,7 +22,6 @@\n import java.net.URLEncoder;\n import java.nio.charset.StandardCharsets;\n import javax.servlet.ServletException;\n-import javax.servlet.annotation.WebServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import org.apache.commons.lang3.StringUtils;\n@@ -33,7 +32,6 @@\n import org.apache.syncope.common.lib.to.SAML2RequestTO;\n import org.apache.syncope.common.rest.api.service.SAML2SPService;\n \n-@WebServlet(name = \"logout\", urlPatterns = { \"/saml2sp/logout\" })\n public class Logout extends AbstractSAML2SPServlet {\n \n     private static final long serialVersionUID = 3010286040376932117L;"},{"sha":"d43b584941520fb56028fa338a47b295f73b7203","filename":"ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Metadata.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FMetadata.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FMetadata.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FMetadata.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -21,7 +21,6 @@\n import java.io.IOException;\n import java.io.InputStream;\n import javax.servlet.ServletException;\n-import javax.servlet.annotation.WebServlet;\n import javax.servlet.http.HttpServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n@@ -33,7 +32,6 @@\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.rest.api.service.SAML2SPService;\n \n-@WebServlet(name = \"metadata\", urlPatterns = { \"/saml2sp/metadata\" })\n public class Metadata extends HttpServlet {\n \n     private static final long serialVersionUID = 694030186105137875L;"},{"sha":"28dab8ec8e8f9bedd50dade4e912778660f37e29","filename":"ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/SAML2SPAgentContext.java","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FSAML2SPAgentContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FSAML2SPAgentContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FSAML2SPAgentContext.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.saml2lsp.agent;\n+\n+import org.springframework.boot.web.servlet.ServletListenerRegistrationBean;\n+import org.springframework.boot.web.servlet.ServletRegistrationBean;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+public class SAML2SPAgentContext {\n+\n+    @Bean\n+    public ServletListenerRegistrationBean<SAML2SPAgentSetup> saml2SPAgentSetup() {\n+        return new ServletListenerRegistrationBean<>(new SAML2SPAgentSetup());\n+    }\n+\n+    @Bean\n+    public ServletRegistrationBean<Metadata> saml2SPMetadata() {\n+        return new ServletRegistrationBean<>(new Metadata(), \"/saml2sp/metadata\");\n+    }\n+\n+    @Bean\n+    public ServletRegistrationBean<Login> saml2SPLogin() {\n+        return new ServletRegistrationBean<>(new Login(), \"/saml2sp/login\");\n+    }\n+\n+    @Bean\n+    public ServletRegistrationBean<AssertionConsumer> saml2SPAssertionConsumer() {\n+        return new ServletRegistrationBean<>(new AssertionConsumer(), \"/saml2sp/assertion-consumer\");\n+    }\n+\n+    @Bean\n+    public ServletRegistrationBean<Logout> saml2SPLogout() {\n+        return new ServletRegistrationBean<>(new Logout(), \"/saml2sp/logout\");\n+    }\n+}"},{"sha":"9dc8abd64e27e22beb4b1878e32bea4b344e1426","filename":"ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/SAML2SPAgentSetup.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FSAML2SPAgentSetup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FSAML2SPAgentSetup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FSAML2SPAgentSetup.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -21,13 +21,11 @@\n import java.util.Properties;\n import javax.servlet.ServletContextEvent;\n import javax.servlet.ServletContextListener;\n-import javax.servlet.annotation.WebListener;\n import org.apache.commons.lang3.BooleanUtils;\n import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n import org.apache.syncope.common.lib.PropertyUtils;\n \n-@WebListener\n public class SAML2SPAgentSetup implements ServletContextListener {\n \n     private static final String SAML2SP_AGENT_PROPERTIES = \"saml2sp-agent.properties\";\n@@ -42,7 +40,7 @@ private static <T> T assertNotNull(final T argument, final String name) {\n     @Override\n     public void contextInitialized(final ServletContextEvent sce) {\n         // read saml2spagent.properties\n-        Properties props = PropertyUtils.read(getClass(), SAML2SP_AGENT_PROPERTIES, \"conf.directory\").getLeft();\n+        Properties props = PropertyUtils.read(getClass(), SAML2SP_AGENT_PROPERTIES, \"conf.directory\");\n \n         String anonymousUser = props.getProperty(\"anonymousUser\");\n         assertNotNull(anonymousUser, \"<anonymousUser>\");\n@@ -73,5 +71,4 @@ public void contextInitialized(final ServletContextEvent sce) {\n     @Override\n     public void contextDestroyed(final ServletContextEvent sce) {\n     }\n-\n }"},{"sha":"6ffdaadb5f63b457846e29178bba3e4abb5bc727","filename":"ext/saml2sp/agent/src/main/resources/META-INF/spring.factories","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n+  org.apache.syncope.ext.saml2lsp.agent.SAML2SPAgentContext"},{"sha":"24ce2a30e8e128417e11b2172cc7643bf4f04b3f","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/init/SAML2SPClassPathScanImplementationLookup.java","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPClassPathScanImplementationLookup.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -23,19 +23,18 @@\n import java.util.HashSet;\n import java.util.Set;\n import org.apache.syncope.core.persistence.api.ImplementationLookup;\n-import org.apache.syncope.core.persistence.api.SyncopeLoader;\n+import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n import org.apache.syncope.core.provisioning.api.RequestedAuthnContextProvider;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.config.BeanDefinition;\n import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n import org.springframework.core.type.filter.AssignableTypeFilter;\n import org.springframework.stereotype.Component;\n import org.springframework.util.ClassUtils;\n import org.apache.syncope.core.provisioning.api.SAML2IdPActions;\n \n @Component\n-public class SAML2SPClassPathScanImplementationLookup implements SyncopeLoader {\n+public class SAML2SPClassPathScanImplementationLookup implements SyncopeCoreLoader {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ImplementationLookup.class);\n \n@@ -46,8 +45,8 @@ public class SAML2SPClassPathScanImplementationLookup implements SyncopeLoader {\n     private Set<String> requestedAuthnContextProvidersClasses;\n \n     @Override\n-    public Integer getPriority() {\n-        return Integer.MIN_VALUE;\n+    public int getOrder() {\n+        return 999;\n     }\n \n     @Override\n@@ -59,10 +58,9 @@ public void load() {\n         scanner.addIncludeFilter(new AssignableTypeFilter(SAML2IdPActions.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(RequestedAuthnContextProvider.class));\n \n-        for (BeanDefinition bd : scanner.findCandidateComponents(DEFAULT_BASE_PACKAGE)) {\n+        scanner.findCandidateComponents(DEFAULT_BASE_PACKAGE).forEach(bd -> {\n             try {\n-                Class<?> clazz = ClassUtils.resolveClassName(\n-                        bd.getBeanClassName(), ClassUtils.getDefaultClassLoader());\n+                Class<?> clazz = ClassUtils.resolveClassName(bd.getBeanClassName(), ClassUtils.getDefaultClassLoader());\n                 boolean isAbstractClazz = Modifier.isAbstract(clazz.getModifiers());\n \n                 if (SAML2IdPActions.class.isAssignableFrom(clazz) && !isAbstractClazz) {\n@@ -73,7 +71,7 @@ public void load() {\n             } catch (Throwable t) {\n                 LOG.warn(\"Could not inspect class {}\", bd.getBeanClassName(), t);\n             }\n-        }\n+        });\n \n         actionsClasses = Collections.unmodifiableSet(actionsClasses);\n         requestedAuthnContextProvidersClasses = Collections.unmodifiableSet(requestedAuthnContextProvidersClasses);"},{"sha":"a63b2ca8d0d97cf747d8e95f1a8f09f8742e6c15","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/init/SAML2SPLoader.java","status":"modified","additions":16,"deletions":18,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPLoader.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -23,15 +23,15 @@\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Properties;\n+import javax.sql.DataSource;\n import net.shibboleth.utilities.java.support.resolver.CriteriaSet;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.PropertyUtils;\n-import org.apache.syncope.core.persistence.api.SyncopeLoader;\n import org.apache.syncope.core.provisioning.api.EntitlementsHolder;\n import org.apache.syncope.common.lib.types.SAML2SPEntitlement;\n import org.apache.syncope.core.logic.saml2.SAML2IdPCache;\n import org.apache.syncope.core.logic.saml2.SAML2ReaderWriter;\n-import org.apache.syncope.core.persistence.api.DomainsHolder;\n+import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n import org.apache.syncope.core.persistence.api.dao.SAML2IdPDAO;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n@@ -46,7 +46,7 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class SAML2SPLoader implements SyncopeLoader {\n+public class SAML2SPLoader implements SyncopeCoreLoader {\n \n     private static final Logger LOG = LoggerFactory.getLogger(SAML2SPLoader.class);\n \n@@ -66,9 +66,6 @@ private static <T> T assertNotNull(final T argument, final String name) {\n     @Autowired\n     private SAML2ReaderWriter saml2rw;\n \n-    @Autowired\n-    private DomainsHolder domainsHolder;\n-\n     @Autowired\n     private SAML2IdPCache cache;\n \n@@ -86,15 +83,15 @@ private static <T> T assertNotNull(final T argument, final String name) {\n     private String signatureAlgorithm;\n \n     @Override\n-    public Integer getPriority() {\n+    public int getOrder() {\n         return 1000;\n     }\n \n     @Override\n     public void load() {\n         EntitlementsHolder.getInstance().init(SAML2SPEntitlement.values());\n \n-        Properties props = PropertyUtils.read(getClass(), SAML2SP_LOGIC_PROPERTIES, \"conf.directory\").getLeft();\n+        Properties props = PropertyUtils.read(getClass(), SAML2SP_LOGIC_PROPERTIES, \"conf.directory\");\n         String confDirectory = props.getProperty(\"conf.directory\");\n \n         assertNotNull(confDirectory, \"<conf.directory>\");\n@@ -138,18 +135,19 @@ public void load() {\n             LOG.error(\"Could not initialize the SAML 2.0 Service Provider certificate\", e);\n             inited = false;\n         }\n+    }\n \n-        domainsHolder.getDomains().keySet().forEach(domain -> {\n-            AuthContextUtils.execWithAuthContext(domain, () -> {\n-                idpDAO.findAll().forEach(idp -> {\n-                    try {\n-                        cache.put(idp);\n-                    } catch (Exception e) {\n-                        LOG.error(\"Could not cache the SAML 2.0 IdP with key \", idp.getEntityID(), e);\n-                    }\n-                });\n-                return null;\n+    @Override\n+    public void load(final String domain, final DataSource datasource) {\n+        AuthContextUtils.execWithAuthContext(domain, () -> {\n+            idpDAO.findAll().forEach(idp -> {\n+                try {\n+                    cache.put(idp);\n+                } catch (Exception e) {\n+                    LOG.error(\"Could not cache the SAML 2.0 IdP with key \", idp.getEntityID(), e);\n+                }\n             });\n+            return null;\n         });\n     }\n "},{"sha":"db981b8ff5d5d3dc475d1e0dafabd2c476aa1a02","filename":"ext/scimv2/logic/src/main/java/org/apache/syncope/core/logic/init/SCIMLoader.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSCIMLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSCIMLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSCIMLoader.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -19,21 +19,20 @@\n package org.apache.syncope.core.logic.init;\n \n import org.apache.syncope.common.lib.scim.types.SCIMEntitlement;\n-import org.apache.syncope.core.persistence.api.SyncopeLoader;\n+import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n import org.apache.syncope.core.provisioning.api.EntitlementsHolder;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class SCIMLoader implements SyncopeLoader {\n+public class SCIMLoader implements SyncopeCoreLoader {\n \n     @Override\n-    public Integer getPriority() {\n+    public int getOrder() {\n         return 1000;\n     }\n \n     @Override\n     public void load() {\n         EntitlementsHolder.getInstance().init(SCIMEntitlement.values());\n     }\n-\n }"},{"sha":"8a204be743ff915b75ff6aca72b13e887dd86695","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/RESTSCIMCXFContext.java","status":"renamed","additions":8,"deletions":14,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FRESTSCIMCXFContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FRESTSCIMCXFContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FRESTSCIMCXFContext.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -16,20 +16,14 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.content;\n+package org.apache.syncope.ext.scimv2.cxf;\n \n-import org.apache.syncope.core.persistence.api.DomainsHolder;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.annotation.Autowired;\n-\n-public abstract class AbstractContentDealer {\n-\n-    protected static final Logger LOG = LoggerFactory.getLogger(AbstractContentDealer.class);\n-\n-    protected static final String ROOT_ELEMENT = \"dataset\";\n-\n-    @Autowired\n-    protected DomainsHolder domainsHolder;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.ImportResource;\n \n+@ImportResource(\"classpath:/restSCIMv2CXFContext.xml\")\n+@ComponentScan(\"org.apache.syncope.ext.scimv2.cxf.service\")\n+@Configuration\n+public class RESTSCIMCXFContext {\n }","previous_filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/AbstractContentDealer.java"},{"sha":"047ebc96502cddd3aa3773c07dec367c8dd5bc7e","filename":"ext/scimv2/scim-rest-cxf/src/main/resources/META-INF/spring.factories","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n+  org.apache.syncope.ext.scimv2.cxf.RESTSCIMCXFContext"},{"sha":"5a021aecce4c89e671f12d2b208f6c028347f801","filename":"ext/scimv2/scim-rest-cxf/src/main/resources/META-INF/web-fragment.xml","status":"removed","additions":0,"deletions":70,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fweb-fragment.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,70 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<web-fragment xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n-              xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-              xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee \n-                                  http://xmlns.jcp.org/xml/ns/javaee/web-fragment_3_1.xsd\"\n-              id=\"${pom.artifactId}\" version=\"3.1\">\n-  \n-  <listener>\n-    <listener-class>org.apache.syncope.core.rest.cxf.ThreadLocalCleanupListener</listener-class>\n-  </listener>\n-  \n-  <servlet>\n-    <servlet-name>SCIMv2CXFServlet</servlet-name>\n-    <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>\n-    <init-param>\n-      <param-name>config-location</param-name>\n-      <param-value>classpath*:/restSCIMv2CXFContext.xml</param-value>\n-    </init-param>\n-    <load-on-startup>1</load-on-startup> \n-  </servlet>\n-  <servlet-mapping>\n-    <servlet-name>SCIMv2CXFServlet</servlet-name>\n-    <url-pattern>/scim/*</url-pattern>\n-  </servlet-mapping>\n-\n-  <filter>\n-    <filter-name>encodingFilter</filter-name>\n-    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>\n-    <init-param>\n-      <param-name>encoding</param-name>\n-      <param-value>UTF-8</param-value>\n-    </init-param>\n-    <init-param>\n-      <param-name>forceEncoding</param-name>\n-      <param-value>true</param-value>\n-    </init-param>\n-  </filter>\n-  <filter>\n-    <filter-name>springSecurityFilterChain</filter-name>\n-    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>\n-  </filter>\n-\n-  <filter-mapping>\n-    <filter-name>encodingFilter</filter-name>\n-    <url-pattern>/*</url-pattern>\n-  </filter-mapping>\n-  <filter-mapping>\n-    <filter-name>springSecurityFilterChain</filter-name>\n-    <url-pattern>/*</url-pattern>\n-  </filter-mapping>\n-\n-</web-fragment>"},{"sha":"f2b503327f0d4e39fea5f26af4fc0c88809afebf","filename":"ext/scimv2/scim-rest-cxf/src/main/resources/restSCIMv2CXFContext.xml","status":"modified","additions":11,"deletions":33,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FrestSCIMv2CXFContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FrestSCIMv2CXFContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fresources%2FrestSCIMv2CXFContext.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -20,42 +20,20 @@ under the License.\n <beans xmlns=\"http://www.springframework.org/schema/beans\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xmlns:jaxrs=\"http://cxf.apache.org/jaxrs\"\n-       xmlns:context=\"http://www.springframework.org/schema/context\"\n        xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n                            http://www.springframework.org/schema/beans/spring-beans.xsd\n                            http://cxf.apache.org/jaxrs\n-                           http://cxf.apache.org/schemas/jaxrs.xsd\n-                           http://www.springframework.org/schema/context\n-                           http://www.springframework.org/schema/context/spring-context.xsd\">\n+                           http://cxf.apache.org/schemas/jaxrs.xsd\">\n \n-  <import resource=\"classpath:META-INF/cxf/cxf.xml\"/>\n-  <import resource=\"classpath:META-INF/cxf/cxf-servlet.xml\"/>\n+  <bean id=\"scimJSONProvider\" class=\"org.apache.syncope.ext.scimv2.cxf.JacksonSCIMJsonProvider\"/>\n \n-  <context:component-scan base-package=\"org.apache.syncope.ext.scimv2.cxf.service\"/>  \n-  \n-  <bean id=\"jsonProvider\" class=\"org.apache.syncope.ext.scimv2.cxf.JacksonSCIMJsonProvider\"/>\n-\n-  <bean id=\"exceptionMapper\" class=\"org.apache.syncope.ext.scimv2.cxf.SCIMExceptionMapper\"/>\n-\n-  <bean id=\"validationProvider\" class=\"org.apache.cxf.validation.BeanValidationProvider\"/>\n-  <bean id=\"validationInInterceptor\" class=\"org.apache.cxf.jaxrs.validation.JAXRSBeanValidationInInterceptor\">\n-    <property name=\"provider\" ref=\"validationProvider\"/>\n-  </bean>\n-  <bean id=\"validationOutInterceptor\" class=\"org.apache.cxf.jaxrs.validation.JAXRSBeanValidationOutInterceptor\">\n-    <property name=\"provider\" ref=\"validationProvider\"/>\n-  </bean>   \n-  \n-  <bean id=\"gzipInInterceptor\" class=\"org.apache.cxf.transport.common.gzip.GZIPInInterceptor\"/>\n-  <bean id=\"gzipOutInterceptor\" class=\"org.apache.cxf.transport.common.gzip.GZIPOutInterceptor\">\n-    <property name=\"threshold\" value=\"0\"/>\n-    <property name=\"force\" value=\"true\"/>\n-  </bean>\n+  <bean id=\"scimExceptionMapper\" class=\"org.apache.syncope.ext.scimv2.cxf.SCIMExceptionMapper\"/>\n \n-  <bean id=\"addETagFilter\" class=\"org.apache.syncope.ext.scimv2.cxf.AddETagFilter\"/>\n+  <bean id=\"scimAddETagFilter\" class=\"org.apache.syncope.ext.scimv2.cxf.AddETagFilter\"/>\n \n-  <bean id=\"wadlGenerator\" class=\"org.apache.cxf.jaxrs.model.wadl.WadlGenerator\">\n+  <bean id=\"scimWADLGenerator\" class=\"org.apache.cxf.jaxrs.model.wadl.WadlGenerator\">\n     <property name=\"applicationTitle\" value=\"Apache Syncope SCIMv2 ${syncope.version}\"/>\n-    <property name=\"namespacePrefix\" value=\"syncope2\"/>\n+    <property name=\"namespacePrefix\" value=\"syncope30\"/>\n     <property name=\"incrementNamespacePrefix\" value=\"false\"/>    \n     <property name=\"linkAnyMediaTypeToXmlSchema\" value=\"true\"/>\n     <property name=\"useJaxbContextForQnames\" value=\"true\"/>\n@@ -64,7 +42,7 @@ under the License.\n     <property name=\"usePathParamsToCompareOperations\" value=\"false\"/>\n   </bean>\n   \n-  <jaxrs:server id=\"scimv2Container\" address=\"/\"\n+  <jaxrs:server id=\"scimv2Container\" address=\"/scim\"\n                 basePackages=\"org.apache.syncope.ext.scimv2.api.service, org.apache.syncope.ext.scimv2.cxf.service\" \n                 staticSubresourceResolution=\"true\">\n     <jaxrs:properties>\n@@ -79,10 +57,10 @@ under the License.\n       <ref bean=\"validationOutInterceptor\"/>\n     </jaxrs:outInterceptors>\n     <jaxrs:providers>\n-      <ref bean=\"jsonProvider\"/>\n-      <ref bean=\"exceptionMapper\"/>\n-      <ref bean=\"addETagFilter\"/>\n-      <ref bean=\"wadlGenerator\"/>\n+      <ref bean=\"scimJSONProvider\"/>\n+      <ref bean=\"scimExceptionMapper\"/>\n+      <ref bean=\"scimAddETagFilter\"/>\n+      <ref bean=\"scimWADLGenerator\"/>\n     </jaxrs:providers>\n   </jaxrs:server>\n "},{"sha":"f38353ba30097179203fe2f1f39550f91a653096","filename":"ext/swagger-ui/pom.xml","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fswagger-ui%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fswagger-ui%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fswagger-ui%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -38,6 +38,11 @@ under the License.\n   </properties>\n \n   <dependencies>\n+    <dependency>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-webmvc</artifactId>\n+    </dependency>\n+\n     <dependency>\n       <groupId>com.fasterxml.jackson.dataformat</groupId>\n       <artifactId>jackson-dataformat-xml</artifactId>\n@@ -98,7 +103,7 @@ under the License.\n               <goal>copy-resources</goal>\n             </goals>\n             <configuration>\n-              <outputDirectory>${project.build.directory}/classes/META-INF/resources/swagger</outputDirectory>\n+              <outputDirectory>${project.build.outputDirectory}/META-INF/resources/swagger</outputDirectory>\n               <resources>\n                 <resource>\n                   <directory>${project.build.directory}/swagger-ui/META-INF/resources/webjars/swagger-ui/${swagger-ui.version}</directory>"},{"sha":"a420ea8b6362ec817c77ffbdce3495cfccf3b3a4","filename":"ext/swagger-ui/src/main/java/org/apache/syncope/ext/swaggerui/SwaggerUIInitializer.java","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fswagger-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fswaggerui%2FSwaggerUIInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fswagger-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fswaggerui%2FSwaggerUIInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fswagger-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fswaggerui%2FSwaggerUIInitializer.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.ext.swaggerui;\n+\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;\n+import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n+\n+@Configuration\n+public class SwaggerUIInitializer implements WebMvcConfigurer {\n+\n+    @Override\n+    public void addViewControllers(final ViewControllerRegistry registry) {\n+        registry.addViewController(\"/swagger/\").setViewName(\"forward:/swagger/index.html\");\n+    }\n+}"},{"sha":"c0a91e03fc6a795941bd1534f52912a91e1b32b0","filename":"ext/swagger-ui/src/main/resources/META-INF/spring.factories","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fswagger-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/ext%2Fswagger-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fswagger-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fspring.factories?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n+  org.apache.syncope.ext.swaggerui.SwaggerUIInitializer"},{"sha":"67cbed0c00ab78e45fa9325e6ce543d85884f744","filename":"fit/build-tools/pom.xml","status":"modified","additions":99,"deletions":76,"changes":175,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -43,21 +43,57 @@ under the License.\n       <artifactId>javax.servlet-api</artifactId> \n       <scope>provided</scope>\n     </dependency>\n-    \n+\n     <dependency>\n-      <groupId>javax.validation</groupId>\n-      <artifactId>validation-api</artifactId>\n+      <groupId>org.apache.cxf</groupId>\n+      <artifactId>cxf-spring-boot-starter-jaxrs</artifactId>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.springframework</groupId>\n+      <artifactId>spring-jdbc</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.apache.directory.server</groupId>\n+      <artifactId>apacheds-core-api</artifactId>\n+      <version>${apacheds.version}</version>\n+    </dependency>\n     <dependency>\n       <groupId>org.apache.directory.server</groupId>\n-      <artifactId>apacheds-service</artifactId>\n+      <artifactId>apacheds-service-builder</artifactId>\n+      <version>${apacheds.version}</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>org.apache.directory.server</groupId>\n+          <artifactId>apacheds-http-integration</artifactId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.directory.api</groupId>\n+      <artifactId>api-ldap-codec-standalone</artifactId>\n+      <version>${apachedirapi.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.directory.api</groupId>\n+      <artifactId>api-ldap-model</artifactId>\n+      <version>${apachedirapi.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.directory.api</groupId>\n+      <artifactId>api-ldap-schema-data</artifactId>\n+      <version>${apachedirapi.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.directory.api</groupId>\n+      <artifactId>api-util</artifactId>\n+      <version>${apachedirapi.version}</version>\n     </dependency>\n \n     <dependency>\n       <groupId>javax.xml.ws</groupId>\n       <artifactId>jaxws-api</artifactId>\n-      <version>2.2.11</version>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.cxf</groupId>\n@@ -79,11 +115,22 @@ under the License.\n       <artifactId>cxf-rt-wsdl</artifactId>\n       <version>${cxf.version}</version>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.cxf</groupId>\n+      <artifactId>cxf-rt-frontend-jaxws</artifactId>\n+      <version>${cxf.version}</version>\n+    </dependency>\n         \n     <dependency>\n       <groupId>net.tirasa.connid.bundles.soap</groupId>\n       <artifactId>soap-utilities</artifactId>\n       <version>${connid.soap.version}</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>org.apache.cxf</groupId>\n+          <artifactId>cxf-rt-frontend-jaxws</artifactId>\n+        </exclusion>\n+      </exclusions>\n     </dependency>\n \n     <dependency>\n@@ -94,47 +141,10 @@ under the License.\n       <groupId>org.apache.cxf</groupId>\n       <artifactId>cxf-rt-rs-service-description</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>org.apache.cxf</groupId>\n-      <artifactId>cxf-rt-rs-service-description-openapi-v3</artifactId>\n-    </dependency>\n     <dependency>\n       <groupId>com.fasterxml.jackson.jaxrs</groupId>\n       <artifactId>jackson-jaxrs-json-provider</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>com.fasterxml.jackson.jaxrs</groupId>\n-      <artifactId>jackson-jaxrs-yaml-provider</artifactId>\n-    </dependency>\n-\n-    <dependency>\n-      <groupId>org.webjars</groupId>\n-      <artifactId>swagger-ui</artifactId>\n-    </dependency>\n-\n-    <dependency>\n-      <groupId>org.springframework</groupId>\n-      <artifactId>spring-core</artifactId>\n-      <version>${spring.version}</version>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.springframework</groupId>\n-      <artifactId>spring-context</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.springframework</groupId>\n-      <artifactId>spring-jdbc</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.springframework</groupId>\n-      <artifactId>spring-web</artifactId>\n-    </dependency>\n-\n-    <dependency>\n-      <groupId>com.h2database</groupId>\n-      <artifactId>h2</artifactId>\n-      <scope>provided</scope>\n-    </dependency>\n \n     <dependency>\n       <groupId>net.tirasa.connid</groupId>\n@@ -177,25 +187,6 @@ under the License.\n       <groupId>org.codehaus.groovy</groupId>\n       <artifactId>groovy-sql</artifactId>\n     </dependency>\n-\n-    <dependency>\n-      <groupId>net.tirasa.connid.bundles.db</groupId>\n-      <artifactId>net.tirasa.connid.bundles.db.table</artifactId>\n-      <version>${connid.database.version}</version>\n-      <scope>runtime</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>net.tirasa.connid.bundles.db</groupId>\n-      <artifactId>net.tirasa.connid.bundles.db.scriptedsql</artifactId>\n-      <version>${connid.database.version}</version>\n-      <scope>runtime</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>net.tirasa.connid.bundles</groupId>\n-      <artifactId>net.tirasa.connid.bundles.rest</artifactId>\n-      <version>${connid.rest.version}</version>\n-      <scope>runtime</scope>\n-    </dependency>\n     \n     <dependency>\n       <groupId>commons-logging</groupId>\n@@ -206,10 +197,35 @@ under the License.\n       <groupId>org.slf4j</groupId>\n       <artifactId>jcl-over-slf4j</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-simple</artifactId>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>com.h2database</groupId>\n+      <artifactId>h2</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n   </dependencies>\n \n   <build>\n-    <plugins>      \n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-dependency-plugin</artifactId>\n+        <inherited>true</inherited>\n+        <executions>\n+          <execution>\n+            <id>set-bundles</id>\n+            <phase>process-resources</phase>\n+            <goals>\n+              <goal>copy</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>\n+      \n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n@@ -229,6 +245,10 @@ under the License.\n                 <include>NOTICE</include>\n               </includes>\n             </resource>\n+            <resource>\n+              <directory>${bundles.directory}</directory>\n+              <targetPath>WEB-INF/classes/bundles</targetPath>\n+            </resource>\n           </webResources>\n           <packagingExcludes>WEB-INF/classes/META-INF/LICENSE*,WEB-INF/classes/META-INF/NOTICE*,WEB-INF/classes/META-INF/DEPENDENCIES*</packagingExcludes>\n         </configuration>\n@@ -240,6 +260,13 @@ under the License.\n         <directory>src/main/resources</directory>\n         <filtering>true</filtering>\n       </resource>\n+      <resource>\n+        <directory>${basedir}/../../src/main/resources</directory>\n+        <filtering>true</filtering>\n+        <includes>\n+          <include>banner.txt</include>\n+        </includes>\n+      </resource>\n       <resource>\n         <directory>${basedir}</directory>\n         <targetPath>META-INF</targetPath>\n@@ -265,6 +292,15 @@ under the License.\n             <inherited>true</inherited>\n             <configuration>\n               <container>\n+                <containerId>tomcat9x</containerId>\n+                <zipUrlInstaller>\n+                  <url>http://central.maven.org/maven2/org/apache/tomcat/tomcat/${tomcat.version}/tomcat-${tomcat.version}.zip</url>\n+                  <downloadDir>${settings.localRepository}/org/codehaus/cargo/cargo-container-archives</downloadDir>\n+                  <extractDir>${project.build.directory}/cargo/extract</extractDir>\n+                </zipUrlInstaller>\n+                <timeout>300000</timeout>\n+                <log>${cargo.log}</log>\n+                <output>${cargo.output}</output>\n                 <dependencies>\n                   <dependency>\n                     <groupId>com.h2database</groupId>\n@@ -273,24 +309,11 @@ under the License.\n                 </dependencies>\n               </container>\n               <configuration>\n-                <type>standalone</type>\n                 <properties>\n-                  <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>\n-                  <cargo.tomcat.ajp.port>${cargo.tomcat.ajp.port}</cargo.tomcat.ajp.port>\n-                  <cargo.rmi.port>${cargo.rmi.port}</cargo.rmi.port>\n-\n                   <cargo.jvmargs>-Xdebug -Djaxb.debug=true -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\n-                    -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -XX:MaxPermSize=512m -Xmx1024m -Xms512m</cargo.jvmargs>\n+                    -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC</cargo.jvmargs>\n                 </properties>\n               </configuration>\n-              <deployables>\n-                <deployable>\n-                  <location>${project.build.directory}/${project.build.finalName}</location>\n-                  <properties>\n-                    <context>syncope-fit-build-tools</context>\n-                  </properties>\n-                </deployable>\n-              </deployables>\n             </configuration>\n           </plugin>\n         </plugins>"},{"sha":"20e39bbadd95f80c8e6e3b2c7677745c927a4980","filename":"fit/build-tools/src/assemble/jar-with-connid-bundles.xml","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fassemble%2Fjar-with-connid-bundles.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fassemble%2Fjar-with-connid-bundles.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fassemble%2Fjar-with-connid-bundles.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,52 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<assembly xmlns=\"http://maven.apache.org/ASSEMBLY/2.0.0\"\n+          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+          xsi:schemaLocation=\"http://maven.apache.org/ASSEMBLY/2.0.0\n+                              http://maven.apache.org/xsd/assembly-2.0.0.xsd\">\n+\n+  <id>jar-with-connid-bundles</id>\n+  \n+  <formats>\n+    <format>jar</format>\n+  </formats>\n+  \n+  <includeBaseDirectory>false</includeBaseDirectory>\n+  \n+  <fileSets>\n+    <fileSet>\n+      <directory>${basedir}</directory>\n+      <includes>\n+        <include>LICENSE</include>\n+        <include>NOTICE</include>\n+      </includes>\n+      <outputDirectory>META-INF</outputDirectory>\n+    </fileSet>\n+    <fileSet>\n+      <directory>${project.build.outputDirectory}</directory>\n+      <outputDirectory>.</outputDirectory>\n+    </fileSet>\n+    <fileSet>\n+      <directory>${bundles.directory}</directory>\n+      <outputDirectory>bundles</outputDirectory>\n+    </fileSet>\n+  </fileSets>\n+  \n+</assembly>"},{"sha":"0be4ef3a7d0b6c8ac7e9653fdc885f6af7dcea68","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/ApacheDSRootDseServlet.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSRootDseServlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSRootDseServlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSRootDseServlet.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -30,19 +30,20 @@\n import javax.naming.directory.SearchResult;\n import javax.servlet.ServletContext;\n import javax.servlet.ServletException;\n+import javax.servlet.annotation.WebServlet;\n import javax.servlet.http.HttpServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import org.apache.directory.server.core.api.DirectoryService;\n import org.apache.directory.server.core.jndi.CoreContextFactory;\n \n+@WebServlet(urlPatterns = \"/apacheDS\")\n public class ApacheDSRootDseServlet extends HttpServlet {\n \n     private static final long serialVersionUID = 1514567335969002735L;\n \n     @Override\n     protected void doGet(final HttpServletRequest req, final HttpServletResponse resp) throws ServletException {\n-\n         try {\n             resp.setContentType(\"text/plain\");\n             PrintWriter out = resp.getWriter();"},{"sha":"dbd981201afcf350aba78360ae11b5466b863314","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/ApacheDSStartStopListener.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSStartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSStartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FApacheDSStartStopListener.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -25,6 +25,7 @@\n import javax.servlet.ServletContext;\n import javax.servlet.ServletContextEvent;\n import javax.servlet.ServletContextListener;\n+import javax.servlet.annotation.WebListener;\n import org.apache.directory.api.ldap.model.entry.Entry;\n import org.apache.directory.api.ldap.model.name.Dn;\n import org.apache.directory.api.ldap.model.schema.SchemaManager;\n@@ -57,6 +58,7 @@\n /**\n  * Start and stop an embedded ApacheDS instance alongside with Servlet Context.\n  */\n+@WebListener\n public class ApacheDSStartStopListener implements ServletContextListener {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ApacheDSStartStopListener.class);\n@@ -231,7 +233,7 @@ public void contextInitialized(final ServletContextEvent sce) {\n             server = new LdapServer();\n             server.setTransports(new TcpTransport(Integer.parseInt(\n                     WebApplicationContextUtils.getWebApplicationContext(sce.getServletContext()).\n-                    getBean(\"testds.port\", String.class))));\n+                            getBean(\"testds.port\", String.class))));\n             server.setDirectoryService(service);\n \n             server.start();"},{"sha":"b3632fde91175d3c1cc88dacd7439e6514b4d411","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/ConnectorServerStartStopListener.java","status":"renamed","additions":16,"deletions":26,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FConnectorServerStartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FConnectorServerStartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FConnectorServerStartStopListener.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -18,54 +18,44 @@\n  */\n package org.apache.syncope.fit.buildtools;\n \n-import java.net.MalformedURLException;\n+import java.io.IOException;\n import java.net.URL;\n import java.util.ArrayList;\n import java.util.List;\n-import javax.servlet.ServletContext;\n import javax.servlet.ServletContextEvent;\n import javax.servlet.ServletContextListener;\n+import javax.servlet.annotation.WebListener;\n import org.identityconnectors.common.security.SecurityUtil;\n import org.identityconnectors.framework.impl.api.local.ThreadClassLoaderManager;\n import org.identityconnectors.framework.server.ConnectorServer;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.core.io.Resource;\n import org.springframework.web.context.WebApplicationContext;\n import org.springframework.web.context.support.WebApplicationContextUtils;\n \n-public class ConnIdStartStopListener implements ServletContextListener {\n+@WebListener\n+public class ConnectorServerStartStopListener implements ServletContextListener {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(ConnIdStartStopListener.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(ConnectorServerStartStopListener.class);\n \n     private static final String SERVER = \"ConnIdConnectorServer\";\n \n     /**\n-     * Build list of URLs from bundles available under /WEB-INF/lib\n+     * Build list of URLs from bundles available in the classpath.\n      *\n-     * @param ctx ServletContext needed for getting ConnId jar bundles URLs\n+     * @param ctx ApplicationContext needed for getting ConnId jar bundles URLs\n      */\n-    private List<URL> getBundleURLs(final ServletContext ctx) {\n+    private List<URL> getBundleURLs(final ApplicationContext ctx) {\n         final List<URL> bundleURLs = new ArrayList<>();\n \n-        for (String bundleFile : new String[] {\n-            \"testconnectorserver.soap.bundle\",\n-            \"testconnectorserver.rest.bundle\",\n-            \"testconnectorserver.dbtable.bundle\",\n-            \"testconnectorserver.scriptedsql.bundle\",\n-            \"testconnectorserver.csvdir.bundle\",\n-            \"testconnectorserver.ad.bundle\",\n-            \"testconnectorserver.ldap.bundle\" }) {\n-\n-            URL url = null;\n-            try {\n-                url = ctx.getResource(\"/WEB-INF/lib/\"\n-                        + WebApplicationContextUtils.getWebApplicationContext(ctx).getBean(bundleFile, String.class));\n-            } catch (MalformedURLException e) {\n-                // ignore\n-            }\n-            if (url != null) {\n-                bundleURLs.add(url);\n+        try {\n+            for (Resource bundle : ctx.getResources(\"classpath*:/bundles/*.jar\")) {\n+                bundleURLs.add(bundle.getURL());\n             }\n+        } catch (IOException e) {\n+            LOG.error(\"While getting bundled ConnId bundles\", e);\n         }\n \n         LOG.info(\"ConnId bundles loaded: \" + bundleURLs);\n@@ -80,7 +70,7 @@ public void contextInitialized(final ServletContextEvent sce) {\n         try {\n             server.setPort(Integer.parseInt(ctx.getBean(\"testconnectorserver.port\", String.class)));\n \n-            server.setBundleURLs(getBundleURLs(sce.getServletContext()));\n+            server.setBundleURLs(getBundleURLs(ctx));\n \n             server.setKeyHash(SecurityUtil.computeBase64SHA1Hash(\n                     ctx.getBean(\"testconnectorserver.key\", String.class).toCharArray()));","previous_filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/ConnIdStartStopListener.java"},{"sha":"63cedbf09857a8fd991af48b651f205b9556da8e","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/H2StartStopListener.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FH2StartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FH2StartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FH2StartStopListener.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -22,6 +22,7 @@\n import javax.servlet.ServletContext;\n import javax.servlet.ServletContextEvent;\n import javax.servlet.ServletContextListener;\n+import javax.servlet.annotation.WebListener;\n import javax.sql.DataSource;\n import org.h2.tools.Server;\n import org.slf4j.Logger;\n@@ -34,6 +35,7 @@\n /**\n  * Utility servlet context listener managing H2 test server instance (to be used as external resource).\n  */\n+@WebListener\n public class H2StartStopListener implements ServletContextListener {\n \n     private static final Logger LOG = LoggerFactory.getLogger(H2StartStopListener.class);\n@@ -55,7 +57,7 @@ public void contextInitialized(final ServletContextEvent sce) {\n             LOG.error(\"Could not start H2 test db\", e);\n         }\n \n-        DataSource datasource = ctx.getBean(DataSource.class);\n+        DataSource datasource = ctx.getBean(\"testDataSource\", DataSource.class);\n \n         ResourceDatabasePopulator populator = new ResourceDatabasePopulator(ctx.getResource(\"classpath:/testdb.sql\"));\n         populator.setSqlScriptEncoding(\"UTF-8\");\n@@ -69,9 +71,9 @@ public void contextInitialized(final ServletContextEvent sce) {\n \n     @Override\n     public void contextDestroyed(final ServletContextEvent sce) {\n-        final ServletContext context = sce.getServletContext();\n+        ServletContext context = sce.getServletContext();\n \n-        final Server h2TestDb = (Server) context.getAttribute(H2_TESTDB);\n+        Server h2TestDb = (Server) context.getAttribute(H2_TESTDB);\n         if (h2TestDb != null) {\n             h2TestDb.shutdown();\n         }"},{"sha":"249a64b8b5092bc8fa43a47282551cd2e21c6bf5","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/ServiceTimeoutServlet.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FServiceTimeoutServlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FServiceTimeoutServlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FServiceTimeoutServlet.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -21,13 +21,15 @@\n import java.io.IOException;\n import java.io.PrintWriter;\n import javax.servlet.ServletException;\n+import javax.servlet.annotation.WebServlet;\n import javax.servlet.http.HttpServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n \n /**\n  * Just used to verify a connector request timeout.\n  */\n+@WebServlet(urlPatterns = \"/services/\")\n public class ServiceTimeoutServlet extends HttpServlet {\n \n     private static final long serialVersionUID = -1467488672392710293L;"},{"sha":"49a50c9d056bc9c34556926c90b0d5a2b91d3c86","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/SyncopeBuildToolsApplication.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FSyncopeBuildToolsApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FSyncopeBuildToolsApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FSyncopeBuildToolsApplication.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.buildtools;\n+\n+import javax.servlet.ServletContext;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRegistration;\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration;\n+import org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration;\n+import org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration;\n+import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.context.annotation.ImportResource;\n+\n+@SpringBootApplication\n+@ImportResource(\"classpath:/buildToolsContext.xml\")\n+@ComponentScan(\"org.apache.syncope.fit.buildtools\")\n+@EnableAutoConfiguration(exclude = {\n+    ErrorMvcAutoConfiguration.class,\n+    WebMvcAutoConfiguration.class,\n+    HttpMessageConvertersAutoConfiguration.class })\n+public class SyncopeBuildToolsApplication extends SpringBootServletInitializer {\n+\n+    public static void main(final String[] args) {\n+        SpringApplication.run(SyncopeBuildToolsApplication.class, args);\n+    }\n+\n+    @Override\n+    public void onStartup(final ServletContext sc) throws ServletException {\n+        sc.addListener(new ConnectorServerStartStopListener());\n+        sc.addListener(new ApacheDSStartStopListener());\n+        sc.addListener(new H2StartStopListener());\n+\n+        ServletRegistration.Dynamic apacheDS = sc.addServlet(\"ApacheDSRootDseServlet\", ApacheDSRootDseServlet.class);\n+        apacheDS.addMapping(\"/apacheDS\");\n+        ServletRegistration.Dynamic sts = sc.addServlet(\"ServiceTimeoutServlet\", ServiceTimeoutServlet.class);\n+        sts.addMapping(\"/services/*\");\n+\n+        super.onStartup(sc);\n+    }\n+}"},{"sha":"a6aba62bb7894ad91266e547e3e9dcc83356f014","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/cxf/ProvisioningImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FProvisioningImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FProvisioningImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2Fcxf%2FProvisioningImpl.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -29,6 +29,7 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n+import javax.annotation.Resource;\n import javax.jws.WebService;\n import javax.sql.DataSource;\n import net.tirasa.connid.bundles.soap.exceptions.ProvisioningException;\n@@ -41,7 +42,6 @@\n import org.identityconnectors.common.StringUtil;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.jdbc.datasource.DataSourceUtils;\n import org.springframework.stereotype.Service;\n \n@@ -53,7 +53,7 @@ public class ProvisioningImpl implements Provisioning {\n \n     private static final Logger LOG = LoggerFactory.getLogger(Provisioning.class);\n \n-    @Autowired\n+    @Resource(name = \"testDataSource\")\n     private DataSource dataSource;\n \n     @Override"},{"sha":"6e7bd364d34051c484e97facb29ed7932d3c0b35","filename":"fit/build-tools/src/main/resources/META-INF/cxf/org.apache.cxf.Logger","status":"removed","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcxf%2Forg.apache.cxf.Logger","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcxf%2Forg.apache.cxf.Logger","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fcxf%2Forg.apache.cxf.Logger?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1 +0,0 @@\n-org.apache.cxf.common.logging.Slf4jLogger"},{"sha":"df0dbb41885096736b308c56fcf725c6dc2447af","filename":"fit/build-tools/src/main/resources/application.properties","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,26 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+spring.application.name=Apache Syncope ${syncope.version} Build Tools\n+spring.groovy.template.check-template-location=false\n+#spring.main.banner-mode=log\n+\n+spring.http.encoding.charset=UTF-8\n+spring.http.encoding.enabled=true\n+spring.http.encoding.force=true\n+\n+server.servlet.contextPath=/syncope-fit-build-tools\n+cxf.path=/cxf"},{"sha":"175073b30583f22d0608f327006e7b1293c6cbc0","filename":"fit/build-tools/src/main/resources/buildToolsContext.xml","status":"modified","additions":19,"deletions":22,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2FbuildToolsContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2FbuildToolsContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2FbuildToolsContext.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -19,8 +19,15 @@ under the License.\n -->\n <beans xmlns=\"http://www.springframework.org/schema/beans\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+       xmlns:jaxws=\"http://cxf.apache.org/jaxws\"\n+       xmlns:jaxrs=\"http://cxf.apache.org/jaxrs\"\n+       xmlns:context=\"http://www.springframework.org/schema/context\"\n        xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\">\n+                           http://www.springframework.org/schema/beans/spring-beans.xsd\n+                           http://cxf.apache.org/jaxws\n+                           http://cxf.apache.org/schemas/jaxws.xsd\n+                           http://cxf.apache.org/jaxrs\n+                           http://cxf.apache.org/schemas/jaxrs.xsd\">\n \n   <bean id=\"testDataSource\"\n         class=\"org.springframework.jdbc.datasource.DriverManagerDataSource\">\n@@ -42,26 +49,16 @@ under the License.\n   <bean id=\"testconnectorserver.key\" class=\"java.lang.String\">\n     <constructor-arg value=\"${testconnectorserver.key}\"/>\n   </bean>  \n-  <bean id=\"testconnectorserver.soap.bundle\" class=\"java.lang.String\">\n-    <constructor-arg value=\"net.tirasa.connid.bundles.soap-${connid.soap.version}.jar\"/>\n-  </bean>  \n-  <bean id=\"testconnectorserver.rest.bundle\" class=\"java.lang.String\">\n-    <constructor-arg value=\"net.tirasa.connid.bundles.rest-${connid.rest.version}.jar\"/>\n-  </bean>  \n-  <bean id=\"testconnectorserver.dbtable.bundle\" class=\"java.lang.String\">\n-    <constructor-arg value=\"net.tirasa.connid.bundles.db.table-${connid.database.version}.jar\"/>\n-  </bean>  \n-  <bean id=\"testconnectorserver.scriptedsql.bundle\" class=\"java.lang.String\">\n-    <constructor-arg value=\"net.tirasa.connid.bundles.db.scriptedsql-${connid.database.version}.jar\"/>\n-  </bean>  \n-  <bean id=\"testconnectorserver.csvdir.bundle\" class=\"java.lang.String\">\n-    <constructor-arg value=\"net.tirasa.connid.bundles.csvdir-${connid.csvdir.version}.jar\"/>\n-  </bean>  \n-  <bean id=\"testconnectorserver.ad.bundle\" class=\"java.lang.String\">\n-    <constructor-arg value=\"net.tirasa.connid.bundles.ad-${connid.ad.version}.jar\"/>\n-  </bean>\n-  <bean id=\"testconnectorserver.ldap.bundle\" class=\"java.lang.String\">\n-    <constructor-arg value=\"net.tirasa.connid.bundles.ldap-${connid.ldap.version}.jar\"/>\n-  </bean>\n+\n+  <jaxws:endpoint id=\"soapProvisioning\" address=\"/soap\" implementor=\"#provisioningImpl\"/>\n     \n+  <bean id=\"jsonProvider\" class=\"com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider\"/>\n+  <jaxrs:server id=\"restProvisioning\" address=\"/rest\"\n+                basePackages=\"org.apache.syncope.fit.buildtools.cxf\" \n+                staticSubresourceResolution=\"true\">\n+    <jaxrs:providers>\n+      <ref bean=\"jsonProvider\"/>\n+    </jaxrs:providers>\n+  </jaxrs:server>\n+\n </beans>"},{"sha":"7384e551d2ca51a783bc571fdc2d097374edcf7e","filename":"fit/build-tools/src/main/resources/cxfContext.xml","status":"removed","additions":0,"deletions":75,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2FcxfContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2FcxfContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fresources%2FcxfContext.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,75 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:jaxws=\"http://cxf.apache.org/jaxws\"\n-       xmlns:jaxrs=\"http://cxf.apache.org/jaxrs\"\n-       xmlns:context=\"http://www.springframework.org/schema/context\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\n-                           http://cxf.apache.org/jaxws\n-                           http://cxf.apache.org/schemas/jaxws.xsd\n-                           http://cxf.apache.org/jaxrs\n-                           http://cxf.apache.org/schemas/jaxrs.xsd\n-                           http://www.springframework.org/schema/context\n-                           http://www.springframework.org/schema/context/spring-context.xsd\">\n-\n-  <import resource=\"classpath:META-INF/cxf/cxf.xml\"/>\n-  <import resource=\"classpath:META-INF/cxf/cxf-servlet.xml\"/>\n-\n-  <context:component-scan base-package=\"org.apache.syncope.fit.buildtools.cxf\"/>  \n-      \n-  <jaxws:endpoint id=\"soapProvisioning\" address=\"/soap\" implementor=\"#provisioningImpl\"/>\n-  \n-  <bean id=\"openApiCustomizer\" class=\"org.apache.cxf.jaxrs.openapi.OpenApiCustomizer\">\n-    <property name=\"dynamicBasePath\" value=\"true\"/>\n-    <property name=\"replaceTags\" value=\"false\"/>\n-  </bean>\n-  <bean id=\"openapiFeature\" class=\"org.apache.cxf.jaxrs.openapi.OpenApiFeature\">\n-    <property name=\"title\" value=\"Apache Syncope FIT Build Tools\"/>\n-    <property name=\"version\" value=\"${syncope.version}\"/>\n-    <property name=\"description\" value=\"Apache Syncope ${syncope.version}\"/>    \n-    <property name=\"contactName\" value=\"The Apache Syncope community\"/>    \n-    <property name=\"contactEmail\" value=\"dev@syncope.apache.org\"/>    \n-    <property name=\"contactUrl\" value=\"http://syncope.apache.org\"/>    \n-    \n-    <property name=\"scan\" value=\"false\"/>    \n-    <property name=\"resourcePackages\">\n-      <set>\n-        <value>org.apache.syncope.fit.buildtools.cxf</value>\n-      </set>\n-    </property>\n-    \n-    <property name=\"customizer\" ref=\"openApiCustomizer\"/>\n-  </bean>\n-  \n-  <bean id=\"jsonProvider\" class=\"com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider\"/>\n-  <jaxrs:server id=\"restProvisioning\" address=\"/rest\"\n-                basePackages=\"org.apache.syncope.fit.buildtools.cxf\" \n-                staticSubresourceResolution=\"true\">\n-    <jaxrs:providers>\n-      <ref bean=\"jsonProvider\"/>\n-    </jaxrs:providers>\n-    <jaxrs:features>\n-      <ref bean=\"openapiFeature\"/>\n-    </jaxrs:features>\n-  </jaxrs:server>\n-\n-</beans>"},{"sha":"31212caf3d0987cd67537ccd45ecab88a44a4eea","filename":"fit/build-tools/src/main/webapp/WEB-INF/glassfish-web.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fglassfish-web.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fglassfish-web.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fglassfish-web.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -20,9 +20,9 @@ under the License.\n <!DOCTYPE glassfish-web-app PUBLIC \"-//GlassFish.org//DTD \n GlassFish Application Server 3.1 Servlet 3.0//EN\" \"http://glassfish.org/dtds/glassfish-web-app_3_0-1.dtd\">\n <glassfish-web-app>\n-  <context-root>/syncope</context-root>\n+  <context-root>/syncope-fit-build-tools</context-root>\n   <class-loader delegate=\"false\"/>\n   <jsp-config>\n     <property name=\"httpMethods\" value=\"GET,POST,HEAD,PUT,DELETE\"/>\n   </jsp-config>\n-</glassfish-web-app>\n\\ No newline at end of file\n+</glassfish-web-app>"},{"sha":"e59988c0d62fee5f3063d9a6806da9a30c9bc27f","filename":"fit/build-tools/src/main/webapp/WEB-INF/jboss-deployment-structure.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fjboss-deployment-structure.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fjboss-deployment-structure.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fjboss-deployment-structure.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -8,7 +8,7 @@ to you under the Apache License, Version 2.0 (the\n \"License\"); you may not use this file except in compliance\n with the License.  You may obtain a copy of the License at\n \n-  http://www.apache.org/licenses/LICENSE-2.0\n+       http://www.apache.org/licenses/LICENSE-2.0\n \n Unless required by applicable law or agreed to in writing,\n software distributed under the License is distributed on an\n@@ -27,13 +27,13 @@ under the License.\n     <dependencies>\n       <module name=\"org.apache.xalan\"/>\n       <module name=\"org.reactivestreams\"/>\n+      <module name=\"javax.jws.api\"/>\n     </dependencies>\n     <exclusions>\n       <module name=\"javax.ws.soap.api\"/>\n       <module name=\"javax.ws.rs.api\"/>\n       <module name=\"org.apache.cxf\"/>\n       <module name=\"org.apache.cxf.impl\"/>\n-      <module name=\"org.hibernate\"/>\n       <module name=\"org.slf4j\"/>\n       <module name=\"org.slf4j.impl\"/>\n       <module name=\"org.apache.log4j\"/>"},{"sha":"ad8be4c4f3210446040aeb243ea113ee7881e992","filename":"fit/build-tools/src/main/webapp/WEB-INF/web.xml","status":"modified","additions":5,"deletions":50,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -19,56 +19,11 @@ under the License.\n -->\n <web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee \n-                             http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"\n-         version=\"3.1\">\n+         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\n+                             http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n+         version=\"4.0\"\n+         metadata-complete=\"true\">\n \n-  <context-param>\n-    <param-name>contextConfigLocation</param-name>\n-    <param-value>\n-      classpath*:/buildToolsContext.xml\n-      classpath*:/cxfContext.xml\n-    </param-value>\n-  </context-param>\n-  \n-  <listener>\n-    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n-  </listener>\n-  <listener>\n-    <listener-class>org.apache.syncope.fit.buildtools.ApacheDSStartStopListener</listener-class>\n-  </listener>\n-  <listener>\n-    <listener-class>org.apache.syncope.fit.buildtools.H2StartStopListener</listener-class>\n-  </listener>\n-  <listener>\n-    <listener-class>org.apache.syncope.fit.buildtools.ConnIdStartStopListener</listener-class>\n-  </listener>\n-  \n-  <servlet>\n-    <servlet-name>CXFServlet</servlet-name>\n-    <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>\n-    <load-on-startup>1</load-on-startup> \n-  </servlet>\n-  <servlet>\n-    <servlet-name>ApacheDSRootDseServlet</servlet-name>\n-    <servlet-class>org.apache.syncope.fit.buildtools.ApacheDSRootDseServlet</servlet-class>\n-  </servlet>\n-  <servlet>\n-    <servlet-name>ServiceTimeoutServlet</servlet-name>\n-    <servlet-class>org.apache.syncope.fit.buildtools.ServiceTimeoutServlet</servlet-class>\n-  </servlet>\n-  \n-  <servlet-mapping>\n-    <servlet-name>CXFServlet</servlet-name>\n-    <url-pattern>/cxf/*</url-pattern>\n-  </servlet-mapping>  \n-  <servlet-mapping>\n-    <servlet-name>ApacheDSRootDseServlet</servlet-name>\n-    <url-pattern>/apacheDS</url-pattern>\n-  </servlet-mapping>\n-  <servlet-mapping>\n-    <servlet-name>ServiceTimeoutServlet</servlet-name>\n-    <url-pattern>/services/*</url-pattern>\n-  </servlet-mapping>\n+  <display-name>Apache Syncope ${syncope.version} Build Tools</display-name>\n \n </web-app>\n\\ No newline at end of file"},{"sha":"a3f8cbda092b67c9f8f89ed78d8116801e4528c0","filename":"fit/console-reference/pom.xml","status":"modified","additions":34,"deletions":146,"changes":180,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fconsole-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fconsole-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -38,19 +38,6 @@ under the License.\n   </properties>\n \n   <dependencies>\n-    <dependency> \n-      <groupId>javax.servlet</groupId> \n-      <artifactId>javax.servlet-api</artifactId> \n-    </dependency>\n-    <dependency>\n-      <groupId>javax.servlet.jsp</groupId>\n-      <artifactId>javax.servlet.jsp-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>javax.servlet</groupId>\n-      <artifactId>jstl</artifactId>\n-    </dependency>\n-\n     <dependency>\n       <groupId>org.apache.syncope.client.idm</groupId>\n       <artifactId>syncope-client-idm-console</artifactId>\n@@ -87,42 +74,7 @@ under the License.\n       <version>${project.version}</version>\n     </dependency>\n     \n-    <dependency>\n-      <groupId>org.slf4j</groupId>\n-      <artifactId>slf4j-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-core</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>com.lmax</groupId>\n-      <artifactId>disruptor</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-slf4j-impl</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>commons-logging</groupId>\n-      <artifactId>commons-logging</artifactId>\n-      <scope>provided</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.slf4j</groupId>\n-      <artifactId>jcl-over-slf4j</artifactId>\n-    </dependency>\n-    \n     <!-- TEST -->\n-    <dependency>\n-      <groupId>org.junit.jupiter</groupId>\n-      <artifactId>junit-jupiter-engine</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n     <dependency>\n       <groupId>com.h2database</groupId>\n       <artifactId>h2</artifactId>\n@@ -145,13 +97,22 @@ under the License.\n   </dependencies>\n \n   <build>\n-    <plugins>      \n+    <plugins>\n       <plugin>\n         <groupId>org.codehaus.cargo</groupId>\n         <artifactId>cargo-maven2-plugin</artifactId>\n         <inherited>true</inherited>\n         <configuration>\n           <container>\n+            <containerId>tomcat9x</containerId>\n+            <zipUrlInstaller>\n+              <url>http://central.maven.org/maven2/org/apache/tomcat/tomcat/${tomcat.version}/tomcat-${tomcat.version}.zip</url>\n+              <downloadDir>${settings.localRepository}/org/codehaus/cargo/cargo-container-archives</downloadDir>\n+              <extractDir>${project.build.directory}/cargo/extract</extractDir>\n+            </zipUrlInstaller>\n+            <timeout>300000</timeout>\n+            <log>${cargo.log}</log>\n+            <output>${cargo.output}</output>\n             <dependencies>\n               <dependency>\n                 <groupId>com.h2database</groupId>\n@@ -160,21 +121,11 @@ under the License.\n             </dependencies>\n           </container>\n           <configuration>\n-            <type>standalone</type>\n             <properties>\n-              <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>\n-              <cargo.tomcat.ajp.port>${cargo.tomcat.ajp.port}</cargo.tomcat.ajp.port>\n-              <cargo.rmi.port>${cargo.rmi.port}</cargo.rmi.port>\n-\n-              <cargo.jvmargs>-XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xmx1024m -Xms512m</cargo.jvmargs>\n+              <cargo.jvmargs>\n+                -Dspring.profiles.active=embedded\n+                -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xmx1024m -Xms512m</cargo.jvmargs>\n             </properties>\n-            <configfiles>\n-              <configfile>\n-                <file>${basedir}/src/main/resources/context.xml</file>\n-                <todir>conf/</todir>\n-                <tofile>context.xml</tofile>\n-              </configfile>\n-            </configfiles>\n           </configuration>\n           <deployables>\n             <deployable>\n@@ -187,7 +138,7 @@ under the License.\n             </deployable>\n             <deployable>\n               <location>${basedir}/../core-reference/target/syncope-fit-core-reference-${project.version}</location>\n-              <pingURL>http://localhost:${cargo.servlet.port}/syncope/cacheStats.jsp</pingURL>\n+              <pingURL>http://localhost:${cargo.servlet.port}/syncope/index.html</pingURL>\n               <pingTimeout>60000</pingTimeout>\n               <properties>\n                 <context>syncope</context>\n@@ -224,9 +175,6 @@ under the License.\n       <resource>\n         <directory>src/main/resources</directory>\n         <filtering>true</filtering>\n-        <excludes>\n-          <exclude>context.xml</exclude>\n-        </excludes>\n       </resource>\n     </resources>\n     <testResources>\n@@ -240,47 +188,6 @@ under the License.\n   <profiles>\n     <profile>\n       <id>skipTests</id>\n-\n-      <dependencies>\n-        <dependency>\n-          <groupId>com.h2database</groupId>\n-          <artifactId>h2</artifactId>\n-        </dependency>\n-      </dependencies>\n-      \n-      <build>\n-        <plugins>\n-          <plugin>\n-            <groupId>org.codehaus.cargo</groupId>\n-            <artifactId>cargo-maven2-plugin</artifactId>\n-            <inherited>true</inherited>\n-            <configuration>\n-              <deployables>\n-                <deployable>\n-                  <location>${project.build.directory}/${project.build.finalName}.war</location>\n-                </deployable>\n-              </deployables>\n-            </configuration>\n-            <executions>\n-              <execution>\n-                <id>install-container</id>\n-                <phase>package</phase>\n-                <goals>\n-                  <goal>install</goal>\n-                </goals>\n-              </execution>\n-              <execution>\n-                <id>start-container</id>\n-                <phase>none</phase>\n-              </execution>\n-              <execution>\n-                <id>stop-container</id>\n-                <phase>none</phase>\n-              </execution>\n-            </executions>\n-          </plugin>\n-        </plugins>\n-      </build>\n     </profile>\n \n     <profile>\n@@ -292,40 +199,31 @@ under the License.\n \n       <build>\n         <defaultGoal>clean verify cargo:run</defaultGoal>\n-\n-        <plugins>\n-          <plugin>\n-            <groupId>org.codehaus.cargo</groupId>\n-            <artifactId>cargo-maven2-plugin</artifactId>\n-            <inherited>true</inherited>\n-            <configuration>\n-              <configuration>\n-                <properties>\n-                  <cargo.jvmargs>-Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\n-                    -Dwicket.configuration=development\n-                    -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xmx1024m -Xms512m</cargo.jvmargs>\n-                </properties>\n-              </configuration>\n-            </configuration>\n-            <executions>\n-              <execution>\n-                <id>start-container</id>\n-                <phase>none</phase>\n-              </execution>\n-              <execution>\n-                <id>stop-container</id>\n-                <phase>none</phase>\n-              </execution>\n-            </executions>\n-          </plugin>\n-        </plugins>\n       </build>\n     </profile>\n     \n     <profile>\n       <id>hotswap</id>\n       \n       <dependencies>\n+        <!-- wicket-ioc depends on cglib, need to exclude it for hotswap to work -->\n+        <dependency>\n+          <groupId>org.apache.syncope.client.idm</groupId>\n+          <artifactId>syncope-client-idm-console</artifactId>\n+          <version>${project.version}</version>\n+          <exclusions>\n+            <exclusion>\n+              <groupId>cglib</groupId>\n+              <artifactId>cglib</artifactId>\n+            </exclusion>\n+          </exclusions>\n+        </dependency>\n+        <dependency>\n+          <groupId>cglib</groupId>\n+          <artifactId>cglib-nodep</artifactId>\n+          <version>3.2.6</version>\n+        </dependency>\n+\n         <dependency>\n           <groupId>org.hotswapagent</groupId>\n           <artifactId>hotswap-agent</artifactId>\n@@ -367,23 +265,13 @@ under the License.\n               <configuration>\n                 <properties>\n                   <cargo.jvmargs>\n-                    -Dwicket.configuration=development\n+                    -Dspring.profiles.active=embedded\n                     -XXaltjvm=dcevm -javaagent:${settings.localRepository}/org/hotswapagent/hotswap-agent/${hotswap.version}/hotswap-agent-${hotswap.version}.jar=autoHotswap=true,disablePlugin=Spring\n                     -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000\n-                    -Xmx1024m -Xms512m</cargo.jvmargs>\n+                    -XX:+CMSClassUnloadingEnabled -Xmx1024m -Xms512m</cargo.jvmargs>\n                 </properties>\n               </configuration>\n             </configuration>\n-            <executions>\n-              <execution>\n-                <id>start-container</id>\n-                <phase>none</phase>\n-              </execution>\n-              <execution>\n-                <id>stop-container</id>\n-                <phase>none</phase>\n-              </execution>\n-            </executions>\n           </plugin>\n         </plugins>\n         "},{"sha":"47caebfe2d8f1a782b7c88962e23b7d5d37ff66e","filename":"fit/console-reference/src/main/resources/application-embedded.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fapplication-embedded.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fapplication-embedded.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fapplication-embedded.properties?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+spring.devtools.livereload.enabled=false\n+spring.devtools.restart.enabled=false"},{"sha":"ce58400da242eeb4049d40c18fcc1ad68e4ba472","filename":"fit/console-reference/src/main/resources/application.properties","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,25 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+spring.application.name=Apache Syncope ${syncope.version} Console\n+spring.groovy.template.check-template-location=false\n+spring.main.banner-mode=log\n+\n+spring.http.encoding.charset=UTF-8\n+spring.http.encoding.enabled=true\n+spring.http.encoding.force=true\n+\n+server.servlet.contextPath=/syncope-console"},{"sha":"489d50dfa0d6c4b0c9b0a300a38b27886d6f9776","filename":"fit/console-reference/src/main/resources/context.xml","status":"removed","additions":0,"deletions":25,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fcontext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fcontext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fcontext.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,25 +0,0 @@\n-<?xml version='1.0' encoding='utf-8'?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<Context>\n-  <!-- Disable session persistence across Tomcat restarts -->\n-  <Manager pathname=\"\"/>\n-  <!-- Disable resource caching -->\n-  <Resources cachingAllowed=\"false\" cacheMaxSize =\"0\"/>\n-</Context>"},{"sha":"f7d5df72bbf49ca838b36a9afd29704672ed3c9d","filename":"fit/console-reference/src/main/resources/log4j2.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -41,7 +41,7 @@ under the License.\n       <appender-ref ref=\"main\"/>\n     </asyncLogger>\n \n-    <asyncLogger name=\"org.apache.syncope.client.console\" additivity=\"false\" level=\"ERROR\">\n+    <asyncLogger name=\"org.apache.syncope.client.console\" additivity=\"false\" level=\"INFO\">\n       <appender-ref ref=\"main\"/>\n     </asyncLogger>\n \n@@ -53,7 +53,7 @@ under the License.\n       <appender-ref ref=\"main\"/>\n     </asyncLogger>\n     \n-    <root level=\"ERROR\">\n+    <root level=\"INFO\">\n       <appender-ref ref=\"main\"/>\n     </root>\n   "},{"sha":"249bf471017fa683282c414ca35b11c98b4f8e14","filename":"fit/console-reference/src/main/webapp/WEB-INF/web.xml","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -19,17 +19,13 @@ under the License.\n -->\n <web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee \n-                             http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"\n-         version=\"3.1\">\n+         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\n+                             http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n+         version=\"4.0\"\n+         metadata-complete=\"true\">\n \n   <display-name>Apache Syncope ${syncope.version} Console</display-name>\n \n-  <context-param>\n-    <param-name>configuration</param-name>\n-    <param-value>deployment</param-value>\n-  </context-param>\n-  \n   <context-param>\n     <param-name>saml2sp.login.success.url</param-name>\n     <param-value>../wicket/bookmarkable/org.apache.syncope.client.console.pages.SAML2SPLogin</param-value>"},{"sha":"6e6bd308ee43290a66ac1b757ce626f822a701f9","filename":"fit/console-reference/src/main/webapp/WEB-INF/weblogic.xml","status":"removed","additions":0,"deletions":35,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweblogic.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweblogic.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweblogic.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,35 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<weblogic-web-app xmlns=\"http://xmlns.oracle.com/weblogic/weblogic-web-app\" \n-                  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n-                  xsi:schemaLocation=\"http://xmlns.oracle.com/weblogic/weblogic-web-app\n-                                      http://xmlns.oracle.com/weblogic/weblogic-web-app/1.4/weblogic-web-app.xsd\">\n-\n-  <context-root>syncope-console</context-root>\n-  \n-  <container-descriptor>    \n-    <prefer-application-packages>\n-      <package-name>org.apache.commons.*</package-name>\n-      <package-name>org.slf4j.*</package-name>\n-      <package-name>com.fasterxml.jackson.*</package-name>\n-    </prefer-application-packages>\n-  </container-descriptor>\n-\n-</weblogic-web-app>"},{"sha":"f25fd1dc8ec54d21480728e82859d9e99f1bbd74","filename":"fit/core-reference/pom.xml","status":"modified","additions":111,"deletions":352,"changes":463,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -36,74 +36,26 @@ under the License.\n   <properties>\n     <jdbcdriver.groupId>com.h2database</jdbcdriver.groupId>\n     <jdbcdriver.artifactId>h2</jdbcdriver.artifactId>\n-    \n+\n     <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n   </properties>\n \n   <dependencies>\n-    <dependency> \n-      <groupId>javax.servlet</groupId> \n-      <artifactId>javax.servlet-api</artifactId> \n-    </dependency>\n-    <dependency>\n-      <groupId>javax.servlet.jsp</groupId>\n-      <artifactId>javax.servlet.jsp-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>javax.servlet</groupId>\n-      <artifactId>jstl</artifactId>\n-    </dependency>\n-    \n-    <dependency>\n-      <groupId>org.apache.syncope.core.idm</groupId>\n-      <artifactId>syncope-core-idm-rest-cxf</artifactId>\n-      <version>${project.version}</version>\n-    </dependency>\n     <dependency>\n       <groupId>org.apache.syncope.core</groupId>\n-      <artifactId>syncope-core-workflow-java</artifactId>\n+      <artifactId>syncope-core-starter</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n     <dependency>\n-      <groupId>org.apache.syncope.core</groupId>\n-      <artifactId>syncope-core-persistence-jpa</artifactId>\n+      <groupId>org.apache.syncope.core.idm</groupId>\n+      <artifactId>syncope-core-idm-rest-cxf</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n-    \n-    <dependency>\n-      <groupId>org.slf4j</groupId>\n-      <artifactId>slf4j-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-api</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-core</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>com.lmax</groupId>\n-      <artifactId>disruptor</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apache.logging.log4j</groupId>\n-      <artifactId>log4j-slf4j-impl</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>commons-logging</groupId>\n-      <artifactId>commons-logging</artifactId>\n-      <scope>provided</scope>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.slf4j</groupId>\n-      <artifactId>jcl-over-slf4j</artifactId>\n-    </dependency>\n-    \n+\n     <!-- TEST -->\n     <dependency>\n-      <groupId>com.icegreen</groupId>\n-      <artifactId>greenmail</artifactId>\n+      <groupId>com.h2database</groupId>\n+      <artifactId>h2</artifactId>\n       <scope>test</scope>\n     </dependency>\n     <dependency>\n@@ -114,8 +66,8 @@ under the License.\n       <scope>test</scope>\n     </dependency>\n     <dependency>\n-      <groupId>com.h2database</groupId>\n-      <artifactId>h2</artifactId>\n+      <groupId>com.icegreen</groupId>\n+      <artifactId>greenmail</artifactId>\n       <scope>test</scope>\n     </dependency>\n     <dependency>\n@@ -129,6 +81,16 @@ under the License.\n       <artifactId>syncope-client-idm-console</artifactId>\n       <version>${project.version}</version>\n       <scope>test</scope>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>cglib</groupId>\n+          <artifactId>cglib</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>org.ow2.asm</groupId>\n+          <artifactId>asm-util</artifactId>\n+        </exclusion>\n+      </exclusions>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.syncope.ext.flowable</groupId>\n@@ -272,13 +234,22 @@ under the License.\n           </execution>\n         </executions>\n       </plugin>\n-      \n+\n       <plugin>\n         <groupId>org.codehaus.cargo</groupId>\n         <artifactId>cargo-maven2-plugin</artifactId>\n         <inherited>true</inherited>\n         <configuration>\n           <container>\n+            <containerId>tomcat9x</containerId>\n+            <zipUrlInstaller>\n+              <url>http://central.maven.org/maven2/org/apache/tomcat/tomcat/${tomcat.version}/tomcat-${tomcat.version}.zip</url>\n+              <downloadDir>${settings.localRepository}/org/codehaus/cargo/cargo-container-archives</downloadDir>\n+              <extractDir>${project.build.directory}/cargo/extract</extractDir>\n+            </zipUrlInstaller>\n+            <timeout>300000</timeout>\n+            <log>${cargo.log}</log>\n+            <output>${cargo.output}</output>\n             <dependencies>\n               <dependency>\n                 <groupId>com.h2database</groupId>\n@@ -291,21 +262,11 @@ under the License.\n             </dependencies>\n           </container>\n           <configuration>\n-            <type>standalone</type>\n             <properties>\n-              <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>\n-              <cargo.tomcat.ajp.port>${cargo.tomcat.ajp.port}</cargo.tomcat.ajp.port>\n-              <cargo.rmi.port>${cargo.rmi.port}</cargo.rmi.port>\n-\n-              <cargo.jvmargs>-XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xmx1024m -Xms512m</cargo.jvmargs>\n+              <cargo.jvmargs>\n+                -Dspring.profiles.active=embedded\n+                -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xmx1024m -Xms512m</cargo.jvmargs>\n             </properties>\n-            <configfiles>\n-              <configfile>\n-                <file>${basedir}/src/main/resources/context.xml</file>\n-                <todir>conf/</todir>\n-                <tofile>context.xml</tofile>\n-              </configfile>\n-            </configfiles>\n           </configuration>\n           <deployables>\n             <deployable>\n@@ -318,7 +279,7 @@ under the License.\n             </deployable>\n             <deployable>\n               <location>${project.build.directory}/${project.build.finalName}</location>\n-              <pingURL>http://localhost:${cargo.servlet.port}/syncope/cacheStats.jsp</pingURL>\n+              <pingURL>http://localhost:${cargo.servlet.port}/syncope/index.html</pingURL>\n               <pingTimeout>60000</pingTimeout>\n               <properties>\n                 <context>syncope</context>\n@@ -333,17 +294,23 @@ under the License.\n             <goals>\n               <goal>start</goal>\n             </goals>\n+            <configuration>\n+              <skip>${skipTests}</skip>\n+            </configuration>\n           </execution>\n           <execution>\n             <id>stop-container</id>\n             <phase>post-integration-test</phase>\n             <goals>\n               <goal>stop</goal>\n             </goals>\n+            <configuration>\n+              <skip>${skipTests}</skip>\n+            </configuration>\n           </execution>\n         </executions>\n       </plugin>\n-      \n+\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n@@ -365,9 +332,6 @@ under the License.\n       <resource>\n         <directory>src/main/resources</directory>\n         <filtering>true</filtering>\n-        <excludes>\n-          <exclude>context.xml</exclude>\n-        </excludes>\n       </resource>\n       <resource>\n         <directory>${basedir}/../../core/persistence-jpa/src/main/resources</directory>\n@@ -378,7 +342,7 @@ under the License.\n       </resource>\n       <resource>\n         <directory>${basedir}/../../core/persistence-jpa/src/test/resources/domains</directory>\n-        <targetPath>${project.build.directory}/classes/domains</targetPath>\n+        <targetPath>${project.build.outputDirectory}/domains</targetPath>\n         <filtering>true</filtering>\n       </resource>\n       <resource>\n@@ -455,7 +419,7 @@ under the License.\n     </profile>\n   \n     <profile>\n-      <id>elasticsearch</id>\n+      <id>elasticsearch-it</id>\n       \n       <dependencies>\n         <dependency>\n@@ -472,22 +436,6 @@ under the License.\n       \n       <build>\n         <plugins>\n-          <plugin>\n-            <groupId>org.apache.maven.plugins</groupId>\n-            <artifactId>maven-war-plugin</artifactId>\n-            <configuration>\n-              <webResources>\n-                <resource>\n-                  <directory>src/main/webapp/WEB-INF</directory>\n-                  <excludes>\n-                    <exclude>web.xml</exclude>\n-                  </excludes>\n-                </resource>\n-              </webResources>\n-              <webXml>${basedir}/src/main/resources/elasticsearch/web.xml</webXml>\n-            </configuration>\n-          </plugin>\n-          \n           <plugin>\n             <groupId>io.fabric8</groupId>\n             <artifactId>docker-maven-plugin</artifactId>\n@@ -532,22 +480,6 @@ under the License.\n             <groupId>org.codehaus.cargo</groupId>\n             <artifactId>cargo-maven2-plugin</artifactId>\n             <inherited>true</inherited>\n-            <executions>\n-              <execution>\n-                <id>start-container</id>\n-                <phase>pre-integration-test</phase>\n-                <goals>\n-                  <goal>start</goal>\n-                </goals>\n-              </execution>\n-              <execution>\n-                <id>stop-container</id>\n-                <phase>post-integration-test</phase>\n-                <goals>\n-                  <goal>stop</goal>\n-                </goals>\n-              </execution>\n-            </executions>\n           </plugin>\n         </plugins>\n         \n@@ -594,7 +526,7 @@ under the License.\n           <artifactId>syncope-core-persistence-jpa-json</artifactId>\n           <version>${project.version}</version>\n         </dependency>\n-    \n+        \n         <dependency>\n           <groupId>org.postgresql</groupId>\n           <artifactId>postgresql</artifactId>\n@@ -626,7 +558,7 @@ under the License.\n                 <configuration>\n                   <target>\n                     <delete>\n-                      <fileset dir=\"${project.build.directory}/classes/domains\" includes=\"Two*\"/>\n+                      <fileset dir=\"${project.build.outputDirectory}/domains\" includes=\"Two*\"/>\n                     </delete>\n                   </target>\n                 </configuration>\n@@ -653,6 +585,10 @@ under the License.\n                     <ports>\n                       <port>5432:5432</port>\n                     </ports>\n+                    <wait>\n+                      <log>database system is ready to accept connections</log>\n+                      <time>30000</time>\n+                    </wait>\n                   </run>\n                 </image>\n               </images>\n@@ -680,22 +616,6 @@ under the License.\n             <groupId>org.codehaus.cargo</groupId>\n             <artifactId>cargo-maven2-plugin</artifactId>\n             <inherited>true</inherited>\n-            <executions>\n-              <execution>\n-                <id>start-container</id>\n-                <phase>pre-integration-test</phase>\n-                <goals>\n-                  <goal>start</goal>\n-                </goals>\n-              </execution>\n-              <execution>\n-                <id>stop-container</id>\n-                <phase>post-integration-test</phase>\n-                <goals>\n-                  <goal>stop</goal>\n-                </goals>\n-              </execution>\n-            </executions>\n           </plugin>\n         </plugins>\n \n@@ -715,7 +635,7 @@ under the License.\n           </resource>\n           <resource>\n             <directory>${basedir}/../../core/persistence-jpa-json/src/test/resources/pgjsonb/domains</directory>\n-            <targetPath>${project.build.directory}/classes/domains</targetPath>\n+            <targetPath>${project.build.outputDirectory}/domains</targetPath>\n             <filtering>true</filtering>\n           </resource>\n         </resources>\n@@ -769,6 +689,10 @@ under the License.\n                     <ports>\n                       <port>5432:5432</port>\n                     </ports>\n+                    <wait>\n+                      <log>database system is ready to accept connections</log>\n+                      <time>30000</time>\n+                    </wait>\n                   </run>\n                 </image>\n               </images>\n@@ -796,22 +720,6 @@ under the License.\n             <groupId>org.codehaus.cargo</groupId>\n             <artifactId>cargo-maven2-plugin</artifactId>\n             <inherited>true</inherited>\n-            <executions>\n-              <execution>\n-                <id>start-container</id>\n-                <phase>pre-integration-test</phase>\n-                <goals>\n-                  <goal>start</goal>\n-                </goals>\n-              </execution>\n-              <execution>\n-                <id>stop-container</id>\n-                <phase>post-integration-test</phase>\n-                <goals>\n-                  <goal>stop</goal>\n-                </goals>\n-              </execution>\n-            </executions>\n           </plugin>\n         </plugins>\n \n@@ -858,7 +766,7 @@ under the License.\n           <scope>test</scope>\n         </dependency>\n       </dependencies>\n-      \n+\n       <build>\n         <defaultGoal>clean verify</defaultGoal>\n \n@@ -879,6 +787,10 @@ under the License.\n                     <ports>\n                       <port>3306:3306</port>\n                     </ports>\n+                    <wait>\n+                      <log>MySQL init process done. Ready for start up.</log>\n+                      <time>30000</time>\n+                    </wait>\n                   </run>\n                 </image>\n               </images>\n@@ -901,27 +813,11 @@ under the License.\n               </execution>\n             </executions>\n           </plugin>\n-          \n+\n           <plugin>\n             <groupId>org.codehaus.cargo</groupId>\n             <artifactId>cargo-maven2-plugin</artifactId>\n             <inherited>true</inherited>\n-            <executions>\n-              <execution>\n-                <id>start-container</id>\n-                <phase>pre-integration-test</phase>\n-                <goals>\n-                  <goal>start</goal>\n-                </goals>\n-              </execution>\n-              <execution>\n-                <id>stop-container</id>\n-                <phase>post-integration-test</phase>\n-                <goals>\n-                  <goal>stop</goal>\n-                </goals>\n-              </execution>\n-            </executions>\n           </plugin>\n         </plugins>\n \n@@ -957,7 +853,7 @@ under the License.\n           <scope>test</scope>\n         </dependency>\n       </dependencies>\n-      \n+\n       <build>\n         <defaultGoal>clean verify</defaultGoal>\n \n@@ -1010,22 +906,6 @@ under the License.\n             <groupId>org.codehaus.cargo</groupId>\n             <artifactId>cargo-maven2-plugin</artifactId>\n             <inherited>true</inherited>\n-            <executions>\n-              <execution>\n-                <id>start-container</id>\n-                <phase>pre-integration-test</phase>\n-                <goals>\n-                  <goal>start</goal>\n-                </goals>\n-              </execution>\n-              <execution>\n-                <id>stop-container</id>\n-                <phase>post-integration-test</phase>\n-                <goals>\n-                  <goal>stop</goal>\n-                </goals>\n-              </execution>\n-            </executions>\n           </plugin>\n         </plugins>\n \n@@ -1047,7 +927,7 @@ under the License.\n     \n     <profile>\n       <id>oracle-it</id>\n-\n+      \n       <properties>\n         <jdbcdriver.groupId>com.oracle.jdbc</jdbcdriver.groupId>\n         <jdbcdriver.artifactId>ojdbc8</jdbcdriver.artifactId>\n@@ -1061,7 +941,7 @@ under the License.\n           <scope>test</scope>\n         </dependency>\n       </dependencies>\n-      \n+\n       <build>\n         <defaultGoal>clean verify</defaultGoal>\n \n@@ -1121,22 +1001,6 @@ under the License.\n             <groupId>org.codehaus.cargo</groupId>\n             <artifactId>cargo-maven2-plugin</artifactId>\n             <inherited>true</inherited>\n-            <executions>\n-              <execution>\n-                <id>start-container</id>\n-                <phase>pre-integration-test</phase>\n-                <goals>\n-                  <goal>start</goal>\n-                </goals>\n-              </execution>\n-              <execution>\n-                <id>stop-container</id>\n-                <phase>post-integration-test</phase>\n-                <goals>\n-                  <goal>stop</goal>\n-                </goals>\n-              </execution>\n-            </executions>\n           </plugin>\n         </plugins>\n \n@@ -1158,7 +1022,7 @@ under the License.\n \n     <profile>\n       <id>sqlserver-it</id>\n-\n+      \n       <properties>\n         <jdbcdriver.groupId>com.microsoft.sqlserver</jdbcdriver.groupId>\n         <jdbcdriver.artifactId>mssql-jdbc</jdbcdriver.artifactId>\n@@ -1172,7 +1036,7 @@ under the License.\n           <scope>test</scope>\n         </dependency>\n       </dependencies>\n-      \n+\n       <build>\n         <defaultGoal>clean verify</defaultGoal>\n \n@@ -1195,6 +1059,10 @@ under the License.\n                     <ports>\n                       <port>1433:1433</port>\n                     </ports>\n+                    <wait>\n+                      <log>MSSQL CONFIG COMPLETE</log>\n+                      <time>30000</time>\n+                    </wait>\n                   </run>\n                 </image>\n               </images>\n@@ -1222,22 +1090,6 @@ under the License.\n             <groupId>org.codehaus.cargo</groupId>\n             <artifactId>cargo-maven2-plugin</artifactId>\n             <inherited>true</inherited>\n-            <executions>\n-              <execution>\n-                <id>start-container</id>\n-                <phase>pre-integration-test</phase>\n-                <goals>\n-                  <goal>start</goal>\n-                </goals>\n-              </execution>\n-              <execution>\n-                <id>stop-container</id>\n-                <phase>post-integration-test</phase>\n-                <goals>\n-                  <goal>stop</goal>\n-                </goals>\n-              </execution>\n-            </executions>\n           </plugin>\n         </plugins>\n \n@@ -1271,19 +1123,6 @@ under the License.\n     <profile>\n       <id>glassfish-it</id>\n       \n-      <dependencies>\n-        <dependency>\n-          <groupId>org.apache.syncope.core</groupId>\n-          <artifactId>syncope-core-persistence-jpa</artifactId>\n-          <version>${project.version}</version>\n-        </dependency>\n-\n-        <dependency>\n-          <groupId>com.h2database</groupId>\n-          <artifactId>h2</artifactId>\n-        </dependency>\n-      </dependencies>\n-\n       <build>\n         <defaultGoal>clean verify</defaultGoal>\n \n@@ -1302,7 +1141,19 @@ under the License.\n                 </zipUrlInstaller>\n                 <log>${cargo.log}</log>\n                 <output>${cargo.output}</output>\n+                <dependencies>\n+                  <dependency>\n+                    <groupId>com.h2database</groupId>\n+                    <artifactId>h2</artifactId>\n+                  </dependency>\n+                </dependencies>\n               </container>\n+              <configuration>\n+                <properties>\n+                  <cargo.jvmargs>-Dspring.profiles.active=embedded\n+                    -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xmx2048m -Xms1024m</cargo.jvmargs>\n+                </properties>\n+              </configuration>\n             </configuration>\n           </plugin>\n         </plugins>\n@@ -1312,25 +1163,6 @@ under the License.\n     <profile>\n       <id>payara-it</id>\n \n-      <dependencies>\n-        <dependency>\n-          <groupId>org.apache.syncope.core</groupId>\n-          <artifactId>syncope-core-persistence-jpa</artifactId>\n-          <version>${project.version}</version>\n-          <exclusions>\n-            <exclusion>\n-              <groupId>org.apache.bval</groupId>\n-              <artifactId>bval-jsr</artifactId>\n-            </exclusion>\n-          </exclusions>\n-        </dependency>\n-\n-        <dependency>\n-          <groupId>com.h2database</groupId>\n-          <artifactId>h2</artifactId>\n-        </dependency>\n-      </dependencies>\n-\n       <build>\n         <defaultGoal>clean verify</defaultGoal>\n \n@@ -1343,13 +1175,25 @@ under the License.\n               <container>\n                 <containerId>glassfish5x</containerId>\n                 <zipUrlInstaller>\n-                  <url>https://s3-eu-west-1.amazonaws.com/payara.fish/Payara+Downloads/5.183/payara-5.183.zip</url>\n+                  <url>https://s3-eu-west-1.amazonaws.com/payara.fish/Payara+Downloads/5.184/payara-5.184.zip</url>\n                   <downloadDir>${settings.localRepository}/org/codehaus/cargo/cargo-container-archives</downloadDir>\n                   <extractDir>${project.build.directory}/cargo/extract</extractDir>\n                 </zipUrlInstaller>\n                 <log>${cargo.log}</log>\n                 <output>${cargo.output}</output>\n+                <dependencies>\n+                  <dependency>\n+                    <groupId>com.h2database</groupId>\n+                    <artifactId>h2</artifactId>\n+                  </dependency>\n+                </dependencies>\n               </container>\n+              <configuration>\n+                <properties>\n+                  <cargo.jvmargs>-Dspring.profiles.active=embedded\n+                    -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xmx2048m -Xms1024m</cargo.jvmargs>\n+                </properties>\n+              </configuration>\n             </configuration>\n           </plugin>\n         </plugins>\n@@ -1363,7 +1207,6 @@ under the License.\n         <dependency>\n           <groupId>javax.xml.ws</groupId>\n           <artifactId>jaxws-api</artifactId>\n-          <version>2.2.11</version>\n         </dependency>\n         <dependency>\n           <groupId>org.apache.cxf</groupId>\n@@ -1385,7 +1228,7 @@ under the License.\n           <artifactId>cxf-rt-wsdl</artifactId>\n           <version>${cxf.version}</version>\n         </dependency>\n-\n+        \n         <dependency>\n           <groupId>com.h2database</groupId>\n           <artifactId>h2</artifactId>\n@@ -1396,22 +1239,6 @@ under the License.\n         <defaultGoal>clean verify</defaultGoal>\n \n         <plugins>\n-          <plugin>\n-            <groupId>org.apache.maven.plugins</groupId>\n-            <artifactId>maven-war-plugin</artifactId>\n-            <configuration>\n-              <webResources>\n-                <resource>\n-                  <directory>src/main/webapp/WEB-INF</directory>\n-                  <excludes>\n-                    <exclude>web.xml</exclude>\n-                  </excludes>\n-                </resource>\n-              </webResources>\n-              <webXml>${basedir}/src/main/resources/jboss/web.xml</webXml>\n-            </configuration>\n-          </plugin>\n-\n           <plugin>\n             <groupId>org.codehaus.cargo</groupId>\n             <artifactId>cargo-maven2-plugin</artifactId>\n@@ -1420,55 +1247,34 @@ under the License.\n               <container>\n                 <containerId>wildfly14x</containerId>\n                 <zipUrlInstaller>\n-                  <url>http://download.jboss.org/wildfly/14.0.1.Final/wildfly-14.0.1.Final.zip</url>\n+                  <url>https://download.jboss.org/wildfly/15.0.1.Final/wildfly-15.0.1.Final.zip</url>\n                   <downloadDir>${settings.localRepository}/org/codehaus/cargo/cargo-container-archives</downloadDir>\n                   <extractDir>${project.build.directory}/cargo/extract</extractDir>\n                 </zipUrlInstaller>\n                 <log>${cargo.log}</log>\n                 <output>${cargo.output}</output>\n+                <dependencies>\n+                  <dependency>\n+                    <groupId>com.h2database</groupId>\n+                    <artifactId>h2</artifactId>\n+                  </dependency>\n+                </dependencies>\n               </container>\n               <configuration>\n                 <properties>\n-                  <cargo.jvmargs>-XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xmx2048m -Xms1024m</cargo.jvmargs>\n+                  <cargo.jvmargs>-Dspring.profiles.active=wildfly,embedded\n+                    -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xmx2048m -Xms1024m</cargo.jvmargs>\n                 </properties>\n               </configuration>\n             </configuration>\n           </plugin>\n         </plugins>\n-\n-        <resources>\n-          <resource>\n-            <directory>src/main/resources</directory>\n-            <filtering>true</filtering>\n-            <excludes>\n-              <exclude>restCXFContext.xml</exclude>\n-            </excludes>\n-          </resource>\n-          <resource>\n-            <directory>${basedir}/../../core/persistence-jpa/src/main/resources</directory>\n-            <includes>\n-              <include>persistenceContext.xml</include>\n-            </includes>\n-            <filtering>true</filtering>\n-          </resource>\n-          <resource>\n-            <directory>src/main/resources/jboss</directory>\n-            <filtering>true</filtering>\n-          </resource>\n-        </resources>\n       </build>\n     </profile>\n \n     <profile>\n       <id>skipTests</id>\n \n-      <dependencies>\n-        <dependency>\n-          <groupId>com.h2database</groupId>\n-          <artifactId>h2</artifactId>\n-        </dependency>\n-      </dependencies>\n-\n       <build>\n         <plugins>\n           <plugin>\n@@ -1479,36 +1285,6 @@ under the License.\n               <skipTests>${skipTests}</skipTests>\n             </configuration>\n           </plugin>\n-\n-          <plugin>\n-            <groupId>org.codehaus.cargo</groupId>\n-            <artifactId>cargo-maven2-plugin</artifactId>\n-            <inherited>true</inherited>\n-            <configuration>\n-              <deployables>\n-                <deployable>\n-                  <location>${project.build.directory}/${project.build.finalName}.war</location>\n-                </deployable>\n-              </deployables>\n-            </configuration>\n-            <executions>\n-              <execution>\n-                <id>install-container</id>\n-                <phase>package</phase>\n-                <goals>\n-                  <goal>install</goal>\n-                </goals>\n-              </execution>\n-              <execution>\n-                <id>start-container</id>\n-                <phase>none</phase>\n-              </execution>\n-              <execution>\n-                <id>stop-container</id>\n-                <phase>none</phase>\n-              </execution>\n-            </executions>\n-          </plugin>\n         </plugins>\n       </build>\n     </profile>\n@@ -1531,21 +1307,13 @@ under the License.\n             <configuration>\n               <configuration>\n                 <properties>\n-                  <cargo.jvmargs>-Xdebug -Djaxb.debug=true -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\n+                  <cargo.jvmargs>\n+                    -Dspring.profiles.active=embedded\n+                    -Xdebug -Djaxb.debug=true -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\n                     -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -Xmx1024m -Xms512m</cargo.jvmargs>\n                 </properties>\n               </configuration>\n             </configuration>\n-            <executions>\n-              <execution>\n-                <id>start-container</id>\n-                <phase>none</phase>\n-              </execution>\n-              <execution>\n-                <id>stop-container</id>\n-                <phase>none</phase>\n-              </execution>\n-            </executions>\n           </plugin>\n         </plugins>\n       </build>\n@@ -1578,22 +1346,13 @@ under the License.\n               <configuration>\n                 <properties>\n                   <cargo.jvmargs>\n+                    -Dspring.profiles.active=embedded\n                     -XXaltjvm=dcevm -javaagent:${settings.localRepository}/org/hotswapagent/hotswap-agent/${hotswap.version}/hotswap-agent-${hotswap.version}.jar=autoHotswap=true,disablePlugin=Spring\n                     -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000\n-                    -Xmx1024m -Xms512m</cargo.jvmargs>\n+                    -XX:+CMSClassUnloadingEnabled -Xmx1024m -Xms512m</cargo.jvmargs>\n                 </properties>\n               </configuration>\n             </configuration>\n-            <executions>\n-              <execution>\n-                <id>start-container</id>\n-                <phase>none</phase>\n-              </execution>\n-              <execution>\n-                <id>stop-container</id>\n-                <phase>none</phase>\n-              </execution>\n-            </executions>\n           </plugin>\n         </plugins>\n \n@@ -1707,7 +1466,7 @@ under the License.\n             <inherited>true</inherited>\n             <executions>\n               <execution>\n-                <phase>prepare-package</phase>\n+                <phase>process-resources</phase>\n                 <goals>\n                   <goal>transform</goal>\n                 </goals>\n@@ -1716,11 +1475,11 @@ under the License.\n             <configuration>\n               <transformationSets>\n                 <transformationSet>\n-                  <dir>${project.build.directory}/classes</dir>\n+                  <dir>${project.build.outputDirectory}</dir>\n                   <includes>\n                     <include>domains/MasterContent.xml</include>\n                   </includes>\n-                  <outputDir>${project.build.directory}/classes</outputDir>\n+                  <outputDir>${project.build.outputDirectory}</outputDir>\n                   <stylesheet>${basedir}/src/test/resources/addFlowableToContent.xsl</stylesheet>\n                   <outputProperties>\n                     <outputProperty>"},{"sha":"3c5f54930ca16d6cd8c6898b1fa25bf329473909","filename":"fit/core-reference/src/main/java/org/apache/syncope/core/logic/init/CoreReferenceLoader.java","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FCoreReferenceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FCoreReferenceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FCoreReferenceLoader.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,27 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.logic.init;\n+\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.context.annotation.Configuration;\n+\n+@ComponentScan(\"org.apache.syncope.fit.core.reference\")\n+@Configuration\n+public class CoreReferenceLoader {\n+}"},{"sha":"1420d07fef94177023c2b6460dd9725f429fdba4","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/ITImplementationLookup.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -47,7 +47,6 @@\n import org.apache.syncope.core.provisioning.java.job.report.ReconciliationReportlet;\n import org.apache.syncope.core.provisioning.java.job.report.StaticReportlet;\n import org.apache.syncope.core.provisioning.java.job.report.UserReportlet;\n-import org.apache.syncope.core.persistence.api.DomainsHolder;\n import org.apache.syncope.core.persistence.api.ImplementationLookup;\n import org.apache.syncope.core.persistence.api.dao.AccountRule;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n@@ -234,27 +233,22 @@ public class ITImplementationLookup implements ImplementationLookup {\n     @Autowired\n     private AnySearchDAO anySearchDAO;\n \n-    @Autowired\n-    private DomainsHolder domainsHolder;\n-\n     @Autowired\n     private ElasticsearchInit elasticsearchInit;\n \n     @Override\n-    public Integer getPriority() {\n+    public int getOrder() {\n         return Integer.MAX_VALUE;\n     }\n \n     @Override\n-    public void load() {\n+    public void load(final String domain, final DataSource datasource) {\n         // in case the Elasticsearch extension is enabled, reinit a clean index for all available domains\n         if (AopUtils.getTargetClass(anySearchDAO).getName().contains(\"Elasticsearch\")) {\n-            for (Map.Entry<String, DataSource> entry : domainsHolder.getDomains().entrySet()) {\n-                AuthContextUtils.execWithAuthContext(entry.getKey(), () -> {\n-                    elasticsearchInit.init();\n-                    return null;\n-                });\n-            }\n+            AuthContextUtils.execWithAuthContext(domain, () -> {\n+                elasticsearchInit.init();\n+                return null;\n+            });\n         }\n     }\n "},{"sha":"47fc65f72c8107dd951fd00276fbfbc052d79ffb","filename":"fit/core-reference/src/main/resources/all/saml2sp-logic.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2Fsaml2sp-logic.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2Fsaml2sp-logic.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2Fsaml2sp-logic.properties?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -21,4 +21,5 @@ keystore.type=jks\n keystore.storepass=changeit\n keystore.keypass=changeit\n sp.cert.alias=sp\n-signature.algorithm=RSA_SHA1\n\\ No newline at end of file\n+signature.algorithm=RSA_SHA1\n+"},{"sha":"667c37e0c77b1ad55e4edddcfd48f6dff827c5b9","filename":"fit/core-reference/src/main/resources/application-embedded.properties","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fapplication-embedded.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fapplication-embedded.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fapplication-embedded.properties?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,27 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+spring.devtools.livereload.enabled=false\n+spring.devtools.restart.enabled=false\n+\n+# H2\n+spring.h2.console.enabled=true\n+spring.h2.console.path=/h2\n+# Datasource\n+spring.datasource.url=jdbc:h2:mem:syncopedb;DB_CLOSE_DELAY=-1\n+spring.datasource.username=sa\n+spring.datasource.password=\n+spring.datasource.driver-class-name=org.h2.Driver"},{"sha":"36a6aa82977e39b3f32e1a1cdb8d200022d1b43e","filename":"fit/core-reference/src/main/resources/application-wildfly.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fapplication-wildfly.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fapplication-wildfly.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fapplication-wildfly.properties?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+openjpaMetaDataFactory=jpa(URLs=vfs:${project.build.directory}/cargo/configurations/wildfly14x/deployments/syncope.war/WEB-INF/lib/syncope-core-persistence-jpa-${syncope.version}.jar, Resources=##orm##)\n+javadocPaths=/WEB-INF/lib/syncope-common-idrepo-rest-api-${syncope.version}-javadoc.jar,\\\n+/WEB-INF/lib/syncope-common-idm-rest-api-${syncope.version}-javadoc.jar"},{"sha":"4be19892f05ad53739f24b6b6b9f4e01c282204f","filename":"fit/core-reference/src/main/resources/application.properties","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -0,0 +1,28 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+spring.application.name=Apache Syncope ${syncope.version} Core\n+spring.groovy.template.check-template-location=false\n+spring.main.banner-mode=log\n+\n+spring.http.encoding.charset=UTF-8\n+spring.http.encoding.enabled=true\n+spring.http.encoding.force=true\n+\n+conf.directory=${conf.directory}\n+\n+server.servlet.contextPath=/syncope\n+cxf.path=/rest"},{"sha":"489d50dfa0d6c4b0c9b0a300a38b27886d6f9776","filename":"fit/core-reference/src/main/resources/context.xml","status":"removed","additions":0,"deletions":25,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcontext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcontext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fcontext.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,25 +0,0 @@\n-<?xml version='1.0' encoding='utf-8'?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<Context>\n-  <!-- Disable session persistence across Tomcat restarts -->\n-  <Manager pathname=\"\"/>\n-  <!-- Disable resource caching -->\n-  <Resources cachingAllowed=\"false\" cacheMaxSize =\"0\"/>\n-</Context>"},{"sha":"de4a865428ae961649ef72f03fe4125c4037dc52","filename":"fit/core-reference/src/main/resources/coreContext.xml","status":"removed","additions":0,"deletions":59,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FcoreContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FcoreContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2FcoreContext.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,59 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\" \n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\">\n-\n-  <bean id=\"confDirectoryPropertyConfigurer\" class=\"org.springframework.context.support.PropertySourcesPlaceholderConfigurer\">\n-    <property name=\"order\" value=\"1\"/>\n-    <property name=\"ignoreResourceNotFound\" value=\"true\"/>\n-    <property name=\"ignoreUnresolvablePlaceholders\" value=\"true\"/>\n-    <property name=\"locations\">\n-      <list>\n-        <value>file:${conf.directory}/persistence.properties</value>\n-        <value>file:${conf.directory}/domains/*.properties</value>\n-        <value>file:${conf.directory}/security.properties</value>\n-        <value>file:${conf.directory}/connid.properties</value>\n-        <value>file:${conf.directory}/mail.properties</value>\n-        <value>file:${conf.directory}/logic.properties</value>\n-        <value>file:${conf.directory}/workflow.properties</value>\n-        <value>file:${conf.directory}/provisioning.properties</value>\n-      </list>\n-    </property>\n-  </bean>\n-  <bean id=\"classpathPropertyConfigurer\" class=\"org.springframework.context.support.PropertySourcesPlaceholderConfigurer\">\n-    <property name=\"locations\">\n-      <list>\n-        <value>classpath:persistence.properties</value>\n-        <value>classpath:domains/*.properties</value>\n-        <value>classpath:security.properties</value>\n-        <value>classpath:connid.properties</value>\n-        <value>classpath:mail.properties</value>\n-        <value>classpath:logic.properties</value>\n-        <value>classpath:workflow.properties</value>\n-        <value>classpath:provisioning.properties</value>\n-      </list>\n-    </property>\n-  </bean>\n-\n-  <bean class=\"org.apache.syncope.core.spring.ApplicationContextProvider\"/>\n-\n-</beans>"},{"sha":"6d1ea806245abcce6f4cec389160de94aaef9816","filename":"fit/core-reference/src/main/resources/elasticsearch/web.xml","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Felasticsearch%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Felasticsearch%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Felasticsearch%2Fweb.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,50 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n-         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee \n-                             http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"\n-         version=\"3.1\">\n-\n-  <display-name>Apache Syncope ${syncope.version} Core</display-name>\n-\n-  <context-param>\n-    <param-name>contextConfigLocation</param-name>\n-    <param-value>\n-      classpath*:/coreContext.xml\n-      classpath*:/elasticsearchClientContext.xml\n-      classpath*:/securityContext.xml\n-      classpath*:/logicContext.xml\n-      classpath*:/restCXFContext.xml\n-      classpath*:/persistenceContext.xml\n-      classpath*:/provisioning*Context.xml\n-      classpath*:/workflow*Context.xml\n-    </param-value>\n-  </context-param>\n-\n-  <listener>\n-    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n-  </listener>\n-\n-  <login-config>\n-    <auth-method>CLIENT-CERT</auth-method>\n-  </login-config>\n-\n-</web-app>\n\\ No newline at end of file"},{"sha":"9559e407b7967cacaa84bf2526e30ecd878a0329","filename":"fit/core-reference/src/main/resources/jboss/domains.xml","status":"removed","additions":0,"deletions":61,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2Fdomains.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2Fdomains.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2Fdomains.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,61 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\">\n-  \n-  <import resource=\"classpath:domains/*Domain.xml\"/>\n-  \n-  <bean class=\"org.apache.syncope.core.persistence.jpa.spring.DomainTransactionInterceptorInjector\"/>\n-  \n-  <bean id=\"commonEMFConf\" class=\"org.apache.syncope.core.persistence.jpa.spring.CommonEntityManagerFactoryConf\">\n-    <property name=\"packagesToScan\" value=\"org.apache.syncope.core.persistence.jpa.entity\"/>\n-    <property name=\"validationMode\" value=\"NONE\"/>\n-    <property name=\"persistenceUnitPostProcessors\">\n-      <list>\n-        <bean class=\"org.apache.syncope.core.persistence.jpa.spring.MultiJarAwarePersistenceUnitPostProcessor\"/>\n-      </list>\n-    </property>\n-    <property name=\"jpaPropertyMap\">\n-      <map>\n-        <entry key=\"openjpa.Log\" value=\"slf4j\"/>\n-        <!--<entry key=\"openjpa.Log\" value=\"SQL=TRACE\"/>\n-        <entry key=\"openjpa.ConnectionFactoryProperties\" \n-        value=\"PrintParameters=true, PrettyPrint=true, PrettyPrintLineLength=80\"/>-->\n-                                \n-        <entry key=\"openjpa.NontransactionalWrite\" value=\"false\"/>\n-\n-        <!-- Removed: see https://s.apache.org/openjpaSchemaFactory for more information\n-        <entry key=\"openjpa.jdbc.SchemaFactory\" value=\"native(ForeignKeys=true)\"/>-->\n-        <entry key=\"openjpa.jdbc.MappingDefaults\" \n-               value=\"ForeignKeyDeleteAction=restrict, JoinForeignKeyDeleteAction=restrict,\n-                      FieldStrategies='\n-                        java.util.Locale=org.apache.syncope.core.persistence.jpa.openjpa.LocaleValueHandler,\n-                        java.lang.Boolean=org.apache.syncope.core.persistence.jpa.openjpa.BooleanValueHandler'\"/>\n-                \n-        <entry key=\"openjpa.DataCache\" value=\"true\"/>\n-        <entry key=\"openjpa.QueryCache\" value=\"true\"/>\n-        <entry key=\"openjpa.RemoteCommitProvider\" value=\"${openjpa.RemoteCommitProvider:sjvm}\"/>\n-      </map>\n-    </property>\n-  </bean>\n-  \n-</beans>"},{"sha":"86d9ba45296f8e1881fe982e97c768ed52c68348","filename":"fit/core-reference/src/main/resources/jboss/domains/MasterDomain.xml","status":"removed","additions":0,"deletions":116,"changes":116,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2Fdomains%2FMasterDomain.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2Fdomains%2FMasterDomain.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2Fdomains%2FMasterDomain.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,116 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:tx=\"http://www.springframework.org/schema/tx\"\n-       xmlns:util=\"http://www.springframework.org/schema/util\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd                           \n-                           http://www.springframework.org/schema/tx\n-                           http://www.springframework.org/schema/tx/spring-tx.xsd\n-                           http://www.springframework.org/schema/util\n-                           http://www.springframework.org/schema/util/spring-util.xsd\">\n-  \n-  <bean id=\"MasterContentXML\" class=\"org.apache.syncope.core.spring.ResourceWithFallbackLoader\">\n-    <property name=\"primary\" value=\"file:${content.directory}/domains/MasterContent.xml\"/>\n-    <property name=\"fallback\" value=\"classpath:domains/MasterContent.xml\"/>\n-  </bean>\n-  <bean id=\"MasterProperties\" class=\"org.apache.syncope.core.spring.ResourceWithFallbackLoader\">\n-    <property name=\"primary\" value=\"file:${content.directory}/domains/Master.properties\"/>\n-    <property name=\"fallback\" value=\"classpath:domains/Master.properties\"/>\n-  </bean>\n-  <bean id=\"MasterDatabaseSchema\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${Master.schema}\"/>\n-  </bean>\n-\n-  <!-- Use JNDI datasource as default but, when not available, revert to\n-  local datasource, with different properties for execution and testing. \n-  In any case, get all JDBC connections with a determined isolation level. -->\n-  <bean id=\"MasterDataSource\" class=\"org.springframework.jndi.JndiObjectFactoryBean\" primary=\"true\">\n-    <property name=\"jndiName\" value=\"java:comp/env/jdbc/syncopeMasterDataSource\"/>\n-    <property name=\"defaultObject\" ref=\"localMasterDataSource\"/>\n-  </bean>\n-\n-  <bean id=\"localMasterDataSource\" class=\"com.zaxxer.hikari.HikariDataSource\" destroy-method=\"close\">\n-    <property name=\"driverClassName\" value=\"${Master.driverClassName}\"/>\n-    <property name=\"jdbcUrl\" value=\"${Master.url}\"/>\n-    <property name=\"username\" value=\"${Master.username}\"/>\n-    <property name=\"password\" value=\"${Master.password}\"/>\n-    <!-- connection pool configuration - transaction isolation, default READ_COMMITTED (see SYNCOPE-202) -->\n-    <property name=\"transactionIsolation\">\n-      <util:constant static-field=\"${Master.pool.transactionIsolation:java.sql.Connection.TRANSACTION_READ_COMMITTED}\"/>\n-    </property>\n-    <!-- connection pool configuration - default values taken from HikariConfig default values -->\n-    <property name=\"maximumPoolSize\" value=\"${Master.pool.maxActive:8}\"/>\n-    <property name=\"minimumIdle\" value=\"${Master.pool.minIdle:0}\"/>\n-  </bean>\n-  \n-  <bean class=\"org.springframework.jdbc.datasource.init.DataSourceInitializer\">\n-    <property name=\"dataSource\" ref=\"MasterDataSource\"/>\n-    <property name=\"enabled\" value=\"true\"/>\n-    <property name=\"databasePopulator\">\n-      <bean class=\"org.springframework.jdbc.datasource.init.ResourceDatabasePopulator\">\n-        <property name=\"continueOnError\" value=\"true\"/>\n-        <property name=\"ignoreFailedDrops\" value=\"true\"/>\n-        <property name=\"sqlScriptEncoding\" value=\"UTF-8\"/>\n-        <property name=\"scripts\">\n-          <array>\n-            <value type=\"org.springframework.core.io.Resource\">\n-              classpath:/audit/${Master.audit.sql}\n-            </value>\n-          </array>\n-        </property>\n-      </bean>\n-    </property>\n-  </bean>\n-  \n-  <bean id=\"MasterEntityManagerFactory\"\n-        class=\"org.apache.syncope.core.persistence.jpa.spring.DomainEntityManagerFactoryBean\">\n-    <property name=\"mappingResources\">\n-      <list>\n-        <value>${Master.orm}</value>\n-      </list>\n-    </property>\n-    <property name=\"persistenceUnitName\" value=\"Master\"/>\n-    <property name=\"dataSource\" ref=\"MasterDataSource\"/>\n-    <property name=\"jpaVendorAdapter\">\n-      <bean class=\"org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter\">\n-        <property name=\"showSql\" value=\"false\"/>\n-        <property name=\"generateDdl\" value=\"true\"/>\n-        <property name=\"databasePlatform\" value=\"${Master.databasePlatform}\"/>\n-      </bean>\n-    </property>\n-    <property name=\"commonEntityManagerFactoryConf\" ref=\"commonEMFConf\"/>\n-    <property name=\"jpaPropertyMap\">\n-      <map>\n-        <entry key=\"openjpa.MetaDataFactory\" \n-               value=\"jpa(URLs=vfs:${project.build.directory}/cargo/configurations/wildfly14x/deployments/syncope.war/WEB-INF/lib/syncope-core-persistence-jpa-${syncope.version}.jar, Resources=${Master.orm})\"/>\n-      </map>\n-    </property>\n-  </bean>  \n-\n-  <bean id=\"MasterTransactionManager\" class=\"org.springframework.orm.jpa.JpaTransactionManager\">\n-    <property name=\"entityManagerFactory\" ref=\"MasterEntityManagerFactory\"/>\n-    <qualifier value=\"Master\"/>\n-  </bean>\n-  \n-  <tx:annotation-driven transaction-manager=\"MasterTransactionManager\"/>\n-  \n-</beans>"},{"sha":"f8838388b7874c70f019b7baf6b9783c46e5c831","filename":"fit/core-reference/src/main/resources/jboss/domains/TwoDomain.xml","status":"removed","additions":0,"deletions":116,"changes":116,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2Fdomains%2FTwoDomain.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2Fdomains%2FTwoDomain.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2Fdomains%2FTwoDomain.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,116 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:tx=\"http://www.springframework.org/schema/tx\"\n-       xmlns:util=\"http://www.springframework.org/schema/util\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd                           \n-                           http://www.springframework.org/schema/tx\n-                           http://www.springframework.org/schema/tx/spring-tx.xsd\n-                           http://www.springframework.org/schema/util\n-                           http://www.springframework.org/schema/util/spring-util.xsd\">\n-  \n-  <bean id=\"TwoContentXML\" class=\"org.apache.syncope.core.spring.ResourceWithFallbackLoader\">\n-    <property name=\"primary\" value=\"file:${content.directory}/domains/TwoContent.xml\"/>\n-    <property name=\"fallback\" value=\"classpath:domains/TwoContent.xml\"/>\n-  </bean>\n-  <bean id=\"TwoProperties\" class=\"org.apache.syncope.core.spring.ResourceWithFallbackLoader\">\n-    <property name=\"primary\" value=\"file:${content.directory}/domains/Two.properties\"/>\n-    <property name=\"fallback\" value=\"classpath:domains/Two.properties\"/>\n-  </bean>\n-  <bean id=\"TwoDatabaseSchema\" class=\"java.lang.String\">\n-    <constructor-arg value=\"${Two.schema}\"/>\n-  </bean>\n-\n-  <!-- Use JNDI datasource as default but, when not available, revert to\n-  local datasource, with different properties for execution and testing. \n-  In any case, get all JDBC connections with a determined isolation level. -->\n-  <bean id=\"TwoDataSource\" class=\"org.springframework.jndi.JndiObjectFactoryBean\" primary=\"true\">\n-    <property name=\"jndiName\" value=\"java:comp/env/jdbc/syncopeTwoDataSource\"/>\n-    <property name=\"defaultObject\" ref=\"localTwoDataSource\"/>\n-  </bean>\n-\n-  <bean id=\"localTwoDataSource\" class=\"com.zaxxer.hikari.HikariDataSource\" destroy-method=\"close\">\n-    <property name=\"driverClassName\" value=\"${Two.driverClassName}\"/>\n-    <property name=\"jdbcUrl\" value=\"${Two.url}\"/>\n-    <property name=\"username\" value=\"${Two.username}\"/>\n-    <property name=\"password\" value=\"${Two.password}\"/>\n-    <!-- connection pool configuration - transaction isolation, default READ_COMMITTED (see SYNCOPE-202) -->\n-    <property name=\"transactionIsolation\">\n-      <util:constant static-field=\"${Two.pool.transactionIsolation:java.sql.Connection.TRANSACTION_READ_COMMITTED}\"/>\n-    </property>\n-    <!-- connection pool configuration - default values taken from HikariConfig default values -->\n-    <property name=\"maximumPoolSize\" value=\"${Two.pool.maxActive:8}\"/>\n-    <property name=\"minimumIdle\" value=\"${Two.pool.minIdle:0}\"/>\n-  </bean>\n-  \n-  <bean class=\"org.springframework.jdbc.datasource.init.DataSourceInitializer\">\n-    <property name=\"dataSource\" ref=\"TwoDataSource\"/>\n-    <property name=\"enabled\" value=\"true\"/>\n-    <property name=\"databasePopulator\">\n-      <bean class=\"org.springframework.jdbc.datasource.init.ResourceDatabasePopulator\">\n-        <property name=\"continueOnError\" value=\"true\"/>\n-        <property name=\"ignoreFailedDrops\" value=\"true\"/>\n-        <property name=\"sqlScriptEncoding\" value=\"UTF-8\"/>\n-        <property name=\"scripts\">\n-          <array>\n-            <value type=\"org.springframework.core.io.Resource\">\n-              classpath:/audit/${Two.audit.sql}\n-            </value>\n-          </array>\n-        </property>\n-      </bean>\n-    </property>\n-  </bean>\n-  \n-  <bean id=\"TwoEntityManagerFactory\"\n-        class=\"org.apache.syncope.core.persistence.jpa.spring.DomainEntityManagerFactoryBean\">\n-    <property name=\"mappingResources\">\n-      <list>\n-        <value>${Two.orm}</value>\n-      </list>\n-    </property>\n-    <property name=\"persistenceUnitName\" value=\"Two\"/>\n-    <property name=\"dataSource\" ref=\"TwoDataSource\"/>\n-    <property name=\"jpaVendorAdapter\">\n-      <bean class=\"org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter\">\n-        <property name=\"showSql\" value=\"false\"/>\n-        <property name=\"generateDdl\" value=\"true\"/>\n-        <property name=\"databasePlatform\" value=\"${Two.databasePlatform}\"/>\n-      </bean>\n-    </property>\n-    <property name=\"commonEntityManagerFactoryConf\" ref=\"commonEMFConf\"/>\n-    <property name=\"jpaPropertyMap\">\n-      <map>\n-        <entry key=\"openjpa.MetaDataFactory\" \n-               value=\"jpa(URLs=vfs:${project.build.directory}/cargo/configurations/wildfly14x/deployments/syncope.war/WEB-INF/lib/syncope-core-persistence-jpa-${syncope.version}.jar, Resources=${Master.orm})\"/>\n-      </map>\n-    </property>\n-  </bean>  \n-\n-  <bean id=\"TwoTransactionManager\" class=\"org.springframework.orm.jpa.JpaTransactionManager\">\n-    <property name=\"entityManagerFactory\" ref=\"TwoEntityManagerFactory\"/>\n-    <qualifier value=\"Two\"/>\n-  </bean>\n-  \n-  <tx:annotation-driven transaction-manager=\"TwoTransactionManager\"/>\n-\n-</beans>"},{"sha":"fb6f1f7b555a357bdc5cf99259318c97c50a8e6d","filename":"fit/core-reference/src/main/resources/jboss/restCXFContext.xml","status":"removed","additions":0,"deletions":193,"changes":193,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2FrestCXFContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2FrestCXFContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2FrestCXFContext.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,193 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xmlns:jaxrs=\"http://cxf.apache.org/jaxrs\"\n-       xmlns:context=\"http://www.springframework.org/schema/context\"\n-       xmlns:task=\"http://www.springframework.org/schema/task\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\n-                           http://cxf.apache.org/jaxrs\n-                           http://cxf.apache.org/schemas/jaxrs.xsd\n-                           http://www.springframework.org/schema/context\n-                           http://www.springframework.org/schema/context/spring-context.xsd\n-                           http://www.springframework.org/schema/task\n-                           http://www.springframework.org/schema/task/spring-task.xsd\">\n-\n-  <import resource=\"classpath:META-INF/cxf/cxf.xml\"/>\n-  <import resource=\"classpath:META-INF/cxf/cxf-servlet.xml\"/>\n-\n-  <context:component-scan base-package=\"org.apache.syncope.core.rest.cxf.service\"/>  \n-\n-  <task:executor id=\"batchExecutor\" pool-size=\"10\"/>\n-\n-  <bean id=\"jaxbProvider\" class=\"org.apache.cxf.jaxrs.provider.JAXBElementProvider\">\n-    <property name=\"namespacePrefixes\">\n-      <map>\n-        <entry key=\"http://syncope.apache.org/3.0\">\n-          <value>syncope30</value>\n-        </entry>\n-      </map>      \n-    </property>\n-    <property name=\"depthProperties\">\n-      <bean id=\"depthProperties\" class=\"org.apache.cxf.staxutils.DocumentDepthProperties\">\n-        <property name=\"innerElementCountThreshold\" value=\"500\"/>\n-      </bean>\n-    </property>\n-    <property name=\"collectionWrapperMap\">\n-      <map>\n-        <entry>\n-          <key>\n-            <value>org.apache.syncope.common.lib.policy.PolicyTO</value>\n-          </key>\n-          <value>policies</value>\n-        </entry>\n-      </map>\n-    </property>\n-  </bean>\n-\n-  <bean id=\"dateParamConverterProvider\" class=\"org.apache.syncope.common.rest.api.DateParamConverterProvider\"/>\n-\n-  <bean id=\"jacksonObjectMapper\" class=\"org.apache.syncope.core.rest.cxf.UnwrappedObjectMapper\"/>\n-  <bean id=\"jsonProvider\" class=\"com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider\">\n-    <property name=\"mapper\" ref=\"jacksonObjectMapper\"/>\n-  </bean>\n-\n-  <bean id=\"yamlProvider\" class=\"com.fasterxml.jackson.jaxrs.yaml.JacksonJaxbYAMLProvider\"/>\n-\n-  <bean id=\"exceptionMapper\" class=\"org.apache.syncope.core.rest.cxf.RestServiceExceptionMapper\"/>\n-\n-  <bean id=\"validationProvider\" class=\"org.apache.cxf.validation.BeanValidationProvider\"/>\n-  <bean id=\"validationInInterceptor\" class=\"org.apache.cxf.jaxrs.validation.JAXRSBeanValidationInInterceptor\">\n-    <property name=\"provider\" ref=\"validationProvider\"/>\n-  </bean>\n-  <bean id=\"validationOutInterceptor\" class=\"org.apache.cxf.jaxrs.validation.JAXRSBeanValidationOutInterceptor\">\n-    <property name=\"provider\" ref=\"validationProvider\"/>\n-  </bean>   \n-  \n-  <bean id=\"gzipInInterceptor\" class=\"org.apache.cxf.transport.common.gzip.GZIPInInterceptor\"/>\n-  <bean id=\"gzipOutInterceptor\" class=\"org.apache.cxf.transport.common.gzip.GZIPOutInterceptor\">\n-    <property name=\"threshold\" value=\"0\"/>\n-    <property name=\"force\" value=\"true\"/>\n-  </bean>\n-  \n-  <bean id=\"searchContextProvider\" class=\"org.apache.cxf.jaxrs.ext.search.SearchContextProvider\"/>\n-    \n-  <bean id=\"checkDomainFilter\" class=\"org.apache.syncope.core.rest.cxf.CheckDomainFilter\"/>\n-  <bean id=\"addDomainFilter\" class=\"org.apache.syncope.core.rest.cxf.AddDomainFilter\"/>\n-  <bean id=\"addETagFilter\" class=\"org.apache.syncope.core.rest.cxf.AddETagFilter\"/>\n-  \n-  <bean id=\"wadlGenerator\" class=\"org.apache.syncope.core.rest.cxf.WadlGenerator\">\n-    <property name=\"applicationTitle\" value=\"Apache Syncope ${syncope.version}\"/>\n-    <property name=\"namespacePrefix\" value=\"syncope30\"/>\n-    <property name=\"incrementNamespacePrefix\" value=\"false\"/>    \n-    <property name=\"linkAnyMediaTypeToXmlSchema\" value=\"true\"/>\n-    <property name=\"useJaxbContextForQnames\" value=\"true\"/>\n-    <property name=\"addResourceAndMethodIds\" value=\"true\"/>\n-    <property name=\"ignoreMessageWriters\" value=\"true\"/>\n-    <property name=\"usePathParamsToCompareOperations\" value=\"false\"/>\n-    <property name=\"javaDocPaths\">\n-      <list>\n-        <value>/WEB-INF/lib/syncope-common-idm-rest-api-${syncope.version}-javadoc.jar</value>\n-        <value>/WEB-INF/lib/syncope-ext-camel-rest-api-${syncope.version}-javadoc.jar</value>\n-        <value>/WEB-INF/lib/syncope-ext-saml2sp-rest-api-${syncope.version}-javadoc.jar</value>\n-      </list>\n-    </property>\n-  </bean>\n-  \n-  <bean id=\"basicAuth\" class=\"io.swagger.v3.oas.models.security.SecurityScheme\">\n-    <property name=\"type\" value=\"HTTP\"/>\n-    <property name=\"scheme\" value=\"basic\"/>\n-  </bean>\n-  <bean id=\"bearer\" class=\"io.swagger.v3.oas.models.security.SecurityScheme\">\n-    <property name=\"type\" value=\"HTTP\"/>\n-    <property name=\"scheme\" value=\"bearer\"/>\n-    <property name=\"bearerFormat\" value=\"JWT\"/>\n-  </bean>\n-  <bean id=\"openApiCustomizer\" class=\"org.apache.syncope.core.rest.cxf.SyncopeOpenApiCustomizer\">\n-    <property name=\"dynamicBasePath\" value=\"false\"/>\n-    <property name=\"replaceTags\" value=\"false\"/>\n-    <property name=\"javaDocPaths\">\n-      <list>\n-        <value>/WEB-INF/lib/syncope-common-idm-rest-api-${syncope.version}-javadoc.jar</value>\n-        <value>/WEB-INF/lib/syncope-ext-camel-rest-api-${syncope.version}-javadoc.jar</value>\n-        <value>/WEB-INF/lib/syncope-ext-saml2sp-rest-api-${syncope.version}-javadoc.jar</value>\n-      </list>\n-    </property>\n-  </bean>\n-  <bean id=\"openapiFeature\" class=\"org.apache.cxf.jaxrs.openapi.OpenApiFeature\">\n-    <property name=\"title\" value=\"Apache Syncope\"/>\n-    <property name=\"version\" value=\"${syncope.version}\"/>\n-    <property name=\"description\" value=\"Apache Syncope ${syncope.version}\"/>    \n-    <property name=\"contactName\" value=\"The Apache Syncope community\"/>    \n-    <property name=\"contactEmail\" value=\"dev@syncope.apache.org\"/>    \n-    <property name=\"contactUrl\" value=\"http://syncope.apache.org\"/>    \n-    \n-    <property name=\"scan\" value=\"false\"/>    \n-    <property name=\"resourcePackages\">\n-      <set>\n-        <value>org.apache.syncope.common.rest.api.service</value>\n-      </set>\n-    </property>\n-\n-    <property name=\"customizer\" ref=\"openApiCustomizer\"/>\n-    \n-    <property name=\"securityDefinitions\">\n-      <map>\n-        <entry key=\"BasicAuthentication\" value-ref=\"basicAuth\"/>\n-        <entry key=\"Bearer\" value-ref=\"bearer\"/>\n-      </map>\n-    </property>\n-  </bean>\n-\n-  <jaxrs:server id=\"restContainer\" address=\"/\"\n-                basePackages=\"org.apache.syncope.common.rest.api.service, org.apache.syncope.core.rest.cxf.service\" \n-                staticSubresourceResolution=\"true\">\n-    <jaxrs:properties>\n-      <entry key=\"search.parser.class\" value=\"org.apache.syncope.common.lib.search.SyncopeFiqlParser\"/>\n-      <entry key=\"search.lax.property.match\" value=\"true\"/>\n-      <entry key=\"convert.wadl.resources.to.dom\" value=\"false\"/>\n-    </jaxrs:properties> \n-    <jaxrs:inInterceptors>\n-      <ref bean=\"gzipInInterceptor\"/>\n-      <ref bean=\"validationInInterceptor\"/>\n-    </jaxrs:inInterceptors>         \n-    <jaxrs:outInterceptors>\n-      <ref bean=\"gzipOutInterceptor\"/>\n-      <ref bean=\"validationOutInterceptor\"/>\n-    </jaxrs:outInterceptors>\n-    <jaxrs:providers>\n-      <ref bean=\"dateParamConverterProvider\"/>\n-      <ref bean=\"jaxbProvider\"/>\n-      <ref bean=\"jsonProvider\"/>\n-      <ref bean=\"yamlProvider\"/>\n-      <ref bean=\"exceptionMapper\"/>\n-      <ref bean=\"searchContextProvider\"/>\n-      <ref bean=\"checkDomainFilter\"/>\n-      <ref bean=\"addDomainFilter\"/>\n-      <ref bean=\"addETagFilter\"/>\n-      <ref bean=\"wadlGenerator\"/>\n-    </jaxrs:providers>\n-    <jaxrs:features>\n-      <ref bean=\"openapiFeature\"/>\n-    </jaxrs:features>\n-  </jaxrs:server>\n-\n-</beans>"},{"sha":"a3aa3a4d7073fd5c41b82c239874d8e58b0a18c3","filename":"fit/core-reference/src/main/resources/jboss/web.xml","status":"removed","additions":0,"deletions":49,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9328a8edb52bfd8bdc1fbe970f47209a39ca9e69/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fjboss%2Fweb.xml?ref=9328a8edb52bfd8bdc1fbe970f47209a39ca9e69","patch":"@@ -1,49 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n-         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee \n-                             http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"\n-         version=\"3.1\">\n-\n-  <display-name>Apache Syncope ${syncope.version} Core</display-name>\n-\n-  <context-param>\n-    <param-name>contextConfigLocation</param-name>\n-    <param-value>\n-      classpath*:/coreContext.xml\n-      classpath*:/securityContext.xml\n-      classpath*:/logicContext.xml\n-      classpath:/restCXFContext.xml\n-      classpath:/persistenceContext.xml\n-      classpath*:/provisioning*Context.xml\n-      classpath*:/workflow*Context.xml\n-    </param-value>\n-  </context-param>\n-\n-  <listener>\n-    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n-  </listener>\n-\n-  <login-config>\n-    <auth-method>CLIENT-CERT</auth-method>\n-  </login-config>\n-\n-</web-app>\n\\ No newline at end of file"},{"sha":"578bd7fe0b7f2fa94e922fdd181cabf2e185c176","filename":"fit/core-reference/src/main/resources/log4j2.xml","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -20,7 +20,7 @@ under the License.\n <configuration status=\"WARN\">\n \n   <appenders>\n-    \n+\n     <RollingRandomAccessFile name=\"mainFile\" fileName=\"${log.directory}/core.log\"\n                              filePattern=\"${log.directory}/core-%d{yyyy-MM-dd}.log.gz\"\n                              immediateFlush=\"false\" append=\"true\">\n@@ -85,6 +85,10 @@ under the License.\n       <appender-ref ref=\"persistenceFile\"/>\n       <appender-ref ref=\"persistence\"/>\n     </asyncLogger>\n+    <asyncLogger name=\"org.apache.openjpa\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"persistenceFile\"/>\n+      <appender-ref ref=\"persistence\"/>\n+    </asyncLogger>\n     <asyncLogger name=\"org.apache.ibatis\" additivity=\"false\" level=\"INFO\">\n       <appender-ref ref=\"persistenceFile\"/>\n       <appender-ref ref=\"persistence\"/>"},{"sha":"54d7cdbd16a74cd657b379a6167d25153b6cd757","filename":"fit/core-reference/src/main/resources/logic.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Flogic.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f201793ab9b9a08bf87aa2064a9e090145cc9ef8/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Flogic.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Flogic.properties?ref=f201793ab9b9a08bf87aa2064a9e090145cc9ef8","patch":"@@ -14,5 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n+version=${syncope.version}\n+buildNumber=${buildNumber}\n logicInvocationHandler=org.apache.syncope.core.logic.LogicInvocationHandler\n classPathScanImplementationLookup=org.apache.syncope.fit.core.reference.ITImplementationLookup"}]}