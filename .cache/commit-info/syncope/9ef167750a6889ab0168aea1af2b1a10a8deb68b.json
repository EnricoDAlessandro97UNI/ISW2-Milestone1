{"sha":"9ef167750a6889ab0168aea1af2b1a10a8deb68b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjllZjE2Nzc1MGE2ODg5YWIwMTY4YWVhMWFmMmIxYTEwYThkZWI2OGI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-05-06T11:55:54Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-05-06T11:55:54Z"},"message":"[SYNCOPE-753] Adding user and role migration from 1.2","tree":{"sha":"e1f1522089ff2494920fa30a6413a383202ce00d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e1f1522089ff2494920fa30a6413a383202ce00d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9ef167750a6889ab0168aea1af2b1a10a8deb68b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9ef167750a6889ab0168aea1af2b1a10a8deb68b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9ef167750a6889ab0168aea1af2b1a10a8deb68b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9ef167750a6889ab0168aea1af2b1a10a8deb68b/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"44346bb66485632b9858ce9e0e7defc49541a37f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/44346bb66485632b9858ce9e0e7defc49541a37f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/44346bb66485632b9858ce9e0e7defc49541a37f"}],"stats":{"total":4420,"additions":4021,"deletions":399},"files":[{"sha":"6bae69ddda296c3f3a16359caeab46315c40aee8","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyDirectoryPanel.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -141,11 +141,9 @@ public void search(final String fiql, final AjaxRequestTarget target) {\n \n     @Override\n     protected Collection<ActionLink.ActionType> getBulkActions() {\n-        final List<ActionLink.ActionType> bulkActions = new ArrayList<>();\n+        List<ActionLink.ActionType> bulkActions = new ArrayList<>();\n \n         bulkActions.add(ActionLink.ActionType.DELETE);\n-        bulkActions.add(ActionLink.ActionType.SUSPEND);\n-        bulkActions.add(ActionLink.ActionType.REACTIVATE);\n \n         return bulkActions;\n     }"},{"sha":"63343db474a2030220a72104d8c25bcaba4df29a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/TogglePanel.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTogglePanel.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -109,6 +109,11 @@ protected void setHeader(final AjaxRequestTarget target, final String header) {\n         target.add(this.header);\n     }\n \n+    protected void close(final AjaxRequestTarget target) {\n+        status = Status.INACTIVE;\n+        toggle(target, false);\n+    }\n+\n     /**\n      * Force toggle via java. To be used when the onclick has been intercepted before.\n      *"},{"sha":"8a1bdfacdff5ac0031d7cf129daa84fe98a72420","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportletDirectoryPanel.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.reports;\n \n-import static org.apache.wicket.Component.ENABLE;\n-\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;"},{"sha":"0cf1336229ef981e4807ef69c34ac9396cc79b02","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportletWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletWizardBuilder.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -280,7 +280,7 @@ protected void populateItem(final ListItem<String> item) {\n                             SchemaRestClient schemaRestClient = new SchemaRestClient();\n \n                             List<AbstractSchemaTO> choices;\n-                            switch (schemaAnnot.schema()) {\n+                            switch (schemaAnnot.type()) {\n                                 case UserPlainSchema:\n                                     choices = schemaRestClient.getSchemas(SchemaType.PLAIN, AnyTypeKind.USER);\n                                     break;"},{"sha":"d07827c317939735562fc02c086ffc0f5c7dec17","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ConfigurationRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -28,8 +28,6 @@ public class ConfigurationRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = 7692363064029538722L;\n \n-    private final SchemaRestClient schemaRestClient = new SchemaRestClient();\n-\n     public List<AttrTO> list() {\n         return getService(ConfigurationService.class).list();\n     }"},{"sha":"519b1c07a5083f8ddf97164198177dbec55e3a6e","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ConnectorRestClient.java","status":"modified","additions":5,"deletions":22,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -24,17 +24,16 @@\n import java.util.List;\n import java.util.Set;\n import javax.ws.rs.core.Response;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ConnBundleTO;\n import org.apache.syncope.common.lib.to.ConnIdObjectClassTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n-import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.rest.api.service.ConnectorService;\n-import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.springframework.beans.BeanUtils;\n \n /**\n@@ -132,38 +131,22 @@ private Set<ConnConfProperty> filterProperties(final Set<ConnConfProperty> prope\n         return newProperties;\n     }\n \n-    /**\n-     * Test connector connection.\n-     *\n-     * @param connectorTO connector\n-     * @return Connection status\n-     */\n-    public boolean check(final ConnInstanceTO connectorTO) {\n+    public Pair<Boolean, String> check(final ConnInstanceTO connectorTO) {\n         ConnInstanceTO toBeChecked = new ConnInstanceTO();\n         BeanUtils.copyProperties(connectorTO, toBeChecked, new String[] { \"configuration\", \"configurationMap\" });\n         toBeChecked.getConf().addAll(filterProperties(connectorTO.getConf()));\n \n         boolean check = false;\n+        String errorMessage = null;\n         try {\n             getService(ConnectorService.class).check(toBeChecked);\n             check = true;\n         } catch (Exception e) {\n             LOG.error(\"While checking {}\", toBeChecked, e);\n+            errorMessage = e.getMessage();\n         }\n \n-        return check;\n-    }\n-\n-    public boolean check(final ResourceTO resourceTO) {\n-        boolean check = false;\n-        try {\n-            getService(ResourceService.class).check(resourceTO);\n-            check = true;\n-        } catch (Exception e) {\n-            LOG.error(\"Connector not found {}\", resourceTO.getConnector(), e);\n-        }\n-\n-        return check;\n+        return Pair.of(check, errorMessage);\n     }\n \n     public List<ConnIdObjectClassTO> buildObjectClassInfo("},{"sha":"c51df2cd9c5f659c8bd27c97a1499a7d6600889f","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ReportRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n-import static org.apache.syncope.client.console.rest.BaseRestClient.getService;\n-\n import java.io.InputStream;\n import java.util.Date;\n import java.util.List;"},{"sha":"c70c235a7cb69b1c83880cb641cdfd0ddf668df5","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ResourceRestClient.java","status":"modified","additions":32,"deletions":13,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -21,6 +21,7 @@\n import java.util.ArrayList;\n import java.util.List;\n import javax.ws.rs.core.Response;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.patch.ResourceDeassociationPatch;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n@@ -39,6 +40,20 @@ public class ResourceRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -6898907679835668987L;\n \n+    public Pair<Boolean, String> check(final ResourceTO resourceTO) {\n+        boolean check = false;\n+        String errorMessage = null;\n+        try {\n+            getService(ResourceService.class).check(resourceTO);\n+            check = true;\n+        } catch (Exception e) {\n+            LOG.error(\"Connector not found {}\", resourceTO.getConnector(), e);\n+            errorMessage = e.getMessage();\n+        }\n+\n+        return Pair.of(check, errorMessage);\n+    }\n+\n     public ConnObjectTO readConnObject(final String resource, final String anyTypeKey, final String anyKey) {\n         return getService(ResourceService.class).readConnObject(resource, anyTypeKey, anyKey);\n     }\n@@ -52,19 +67,23 @@ public List<ConnObjectTO> listConnObjects(\n \n         List<ConnObjectTO> result = new ArrayList<>();\n         PagedConnObjectTOResult list;\n-        do {\n-            list = getService(ResourceService.class).listConnObjects(resource, anyTypeKey, builder.build());\n-            result.addAll(list.getResult());\n-\n-            // TMP - see SYNCOPE-829\n-            if (result.size() >= 100) {\n-                break;\n-            }\n-\n-            if (list.getPagedResultsCookie() != null) {\n-                builder.pagedResultsCookie(list.getPagedResultsCookie());\n-            }\n-        } while (list.getPagedResultsCookie() != null);\n+        try {\n+            do {\n+                list = getService(ResourceService.class).listConnObjects(resource, anyTypeKey, builder.build());\n+                result.addAll(list.getResult());\n+\n+                // TMP - see SYNCOPE-829\n+                if (result.size() >= 100) {\n+                    break;\n+                }\n+\n+                if (list.getPagedResultsCookie() != null) {\n+                    builder.pagedResultsCookie(list.getPagedResultsCookie());\n+                }\n+            } while (list.getPagedResultsCookie() != null);\n+        } catch (Exception e) {\n+            LOG.error(\"While listing objects on {} for any type {}\", resource, anyTypeKey, e);\n+        }\n \n         return result;\n     }"},{"sha":"355b974868caefafb82411906c412cb47a3affeb","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/SchemaRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n-import static org.apache.syncope.client.console.rest.BaseRestClient.getService;\n-\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.commons.collections4.CollectionUtils;"},{"sha":"da2cfe385f7cd1909076df821a02d971e74b566d","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/ExecutionsDirectoryPanel.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecutionsDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecutionsDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FExecutionsDirectoryPanel.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -45,6 +45,7 @@\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.model.AbstractReadOnlyModel;\n@@ -202,6 +203,7 @@ public ExecProvider(final String taskKey, final int paginatorRows) {\n             super(paginatorRows);\n             this.taskKey = taskKey;\n             comparator = new SortableDataProviderComparator<>(this);\n+            setSort(\"end\", SortOrder.DESCENDING);\n         }\n \n         public SortableDataProviderComparator<ExecTO> getComparator() {"},{"sha":"634633238c0b8555e398bccf7a6c964b9a243a50","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyWebSocketBehavior.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyWebSocketBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyWebSocketBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyWebSocketBehavior.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -144,7 +144,7 @@ public void run() {\n                 try {\n                     final ConnInstanceTO connector = connectorRestClient.read(key);\n                     res = String.format(\"{ \\\"status\\\": \\\"%s\\\", \\\"target\\\": \\\"%s\\\"}\",\n-                            connectorRestClient.check(connector)\n+                            connectorRestClient.check(connector).getLeft()\n                             ? TopologyNode.Status.REACHABLE : TopologyNode.Status.UNREACHABLE, key);\n                 } catch (Exception e) {\n                     LOG.warn(\"Error checking connection for {}\", key, e);\n@@ -185,7 +185,7 @@ public void run() {\n                 try {\n                     final ResourceTO resource = resourceRestClient.read(key);\n                     res = String.format(\"{ \\\"status\\\": \\\"%s\\\", \\\"target\\\": \\\"%s\\\"}\",\n-                            connectorRestClient.check(resource)\n+                            resourceRestClient.check(resource).getLeft()\n                             ? TopologyNode.Status.REACHABLE : TopologyNode.Status.UNREACHABLE, key);\n                 } catch (Exception e) {\n                     LOG.warn(\"Error checking connection for {}\", key, e);"},{"sha":"aba8aa06e0460e45fcf8990f4e9a719c75d0b8a7","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/FieldPanel.java","status":"modified","additions":10,"deletions":3,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -60,13 +60,20 @@ public FieldPanel<T> setPlaceholder(final String id) {\n     }\n \n     public FieldPanel<T> setTitle(final String title) {\n+        return setTitle(title, false);\n+    }\n+\n+    public FieldPanel<T> setTitle(final String title, final boolean html) {\n         this.title = title;\n         field.add(new PopoverBehavior(\n                 Model.<String>of(),\n                 title == null ? Model.<String>of() : Model.of(title),\n-                new PopoverConfig().withHoverTrigger().withPlacement(\n-                        index.getObject() != null && index.getObject() == 0\n-                                ? TooltipConfig.Placement.bottom : TooltipConfig.Placement.top)));\n+                new PopoverConfig().withHtml(html).withHoverTrigger().withPlacement(\n+                index.getObject() != null && index.getObject() == 0\n+                        ? TooltipConfig.Placement.bottom\n+                        : this instanceof AjaxCheckBoxPanel\n+                                ? TooltipConfig.Placement.right\n+                                : TooltipConfig.Placement.top)));\n         return this;\n     }\n "},{"sha":"3711054ce836cbcb77b213427209b9c4c95025f6","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/list/ConnConfPropertyListView.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -116,7 +116,7 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n         }\n \n         field.setIndex(item.getIndex());\n-        field.setTitle(property.getSchema().getHelpMessage());\n+        field.setTitle(property.getSchema().getHelpMessage(), true);\n \n         final AbstractFieldPanel<? extends Serializable> fieldPanel;\n         if (isArray) {"},{"sha":"5af7da89cd22dbc829bb88b56d8ebccdbfb5ae11","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ConnectorWizardBuilder.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorWizardBuilder.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -25,6 +25,7 @@\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n@@ -63,18 +64,19 @@ public boolean evaluate(final ConnBundleTO object) {\n \n     @Override\n     protected WizardModel buildModelSteps(final Serializable modelObject, final WizardModel wizardModel) {\n-        final ConnInstanceTO connInstanceTO = ConnInstanceTO.class.cast(modelObject);\n+        ConnInstanceTO connInstanceTO = ConnInstanceTO.class.cast(modelObject);\n         wizardModel.add(new ConnectorDetailsPanel(connInstanceTO, bundles));\n         wizardModel.add(new ConnectorConfPanel(connInstanceTO, bundles) {\n \n             private static final long serialVersionUID = -5886691077681158494L;\n \n             @Override\n             protected void check(final AjaxRequestTarget target) {\n-                if (connectorRestClient.check(modelObject)) {\n+                Pair<Boolean, String> result = connectorRestClient.check(modelObject);\n+                if (result.getLeft()) {\n                     info(getString(Constants.OPERATION_SUCCEEDED));\n                 } else {\n-                    error(getString(\"error_connection\"));\n+                    error(getString(\"error_connection\") + \": \" + result.getRight());\n                 }\n                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n             }"},{"sha":"76fcef2830dd2a257a3c37d46f7255887322b387","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceMappingPanel.java","status":"modified","additions":25,"deletions":54,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -96,11 +96,6 @@ public class ResourceMappingPanel extends Panel {\n      */\n     private final ConnectorRestClient connRestClient = new ConnectorRestClient();\n \n-    /**\n-     * Resource schema name.\n-     */\n-    private final List<String> schemaNames;\n-\n     private final Label passwordLabel;\n \n     /**\n@@ -151,21 +146,20 @@ public ResourceMappingPanel(final String id, final ResourceTO resourceTO, final\n \n         this.resourceTO = resourceTO;\n         this.provisionTO = provisionTO == null ? new ProvisionTO() : provisionTO;\n+        if (provisionTO == null) {\n+            getMapping().getItems().clear();\n+            getMapping().setConnObjectLink(null);\n+        }\n \n         this.mappingContainer = new WebMarkupContainer(\"mappingContainer\");\n         this.mappingContainer.setOutputMarkupId(true);\n+        this.mappingContainer.setEnabled(provisionTO != null);\n+        this.mappingContainer.setVisible(provisionTO != null);\n         add(this.mappingContainer);\n \n         transformers = new TransformersTogglePanel(this.mappingContainer);\n         add(this.transformers);\n \n-        if (resourceTO.getConnector() != null) {\n-            schemaNames = getSchemaNames(resourceTO.getConnector(), resourceTO.getConfOverride());\n-            setEnabled();\n-        } else {\n-            schemaNames = Collections.<String>emptyList();\n-        }\n-\n         mappingContainer.add(Constants.getJEXLPopover(this, TooltipConfig.Placement.bottom));\n \n         passwordLabel = new Label(\"passwordLabel\", new ResourceModel(\"password\"));\n@@ -182,6 +176,14 @@ public int compare(final MappingItemTO left, final MappingItemTO right) {\n                     compared = 1;\n                 } else if (right == null) {\n                     compared = -1;\n+                } else if (left.isConnObjectKey()) {\n+                    compared = -1;\n+                } else if (right.isConnObjectKey()) {\n+                    compared = 1;\n+                } else if (left.isPassword()) {\n+                    compared = -1;\n+                } else if (right.isPassword()) {\n+                    compared = 1;\n                 } else if (left.getPurpose() == MappingPurpose.BOTH && right.getPurpose() != MappingPurpose.BOTH) {\n                     compared = -1;\n                 } else if (left.getPurpose() != MappingPurpose.BOTH && right.getPurpose() == MappingPurpose.BOTH) {\n@@ -199,14 +201,6 @@ public int compare(final MappingItemTO left, final MappingItemTO right) {\n                 } else if (left.getPurpose() == MappingPurpose.NONE\n                         && right.getPurpose() != MappingPurpose.NONE) {\n                     compared = 1;\n-                } else if (left.isConnObjectKey()) {\n-                    compared = -1;\n-                } else if (right.isConnObjectKey()) {\n-                    compared = 1;\n-                } else if (left.isPassword()) {\n-                    compared = -1;\n-                } else if (right.isPassword()) {\n-                    compared = 1;\n                 } else {\n                     compared = left.getIntAttrName().compareTo(right.getIntAttrName());\n                 }\n@@ -273,13 +267,13 @@ protected void populateItem(final ListItem<MappingItemTO> item) {\n                 //--------------------------------\n                 // Internal attribute\n                 // -------------------------------\n-                final AjaxDropDownChoicePanel<String> intAttrNames = new AjaxDropDownChoicePanel<>(\n+                final AjaxTextFieldPanel intAttrNames = new AjaxTextFieldPanel(\n                         \"intAttrNames\",\n                         getString(\"intAttrNames\"),\n                         new PropertyModel<String>(mapItem, \"intAttrName\"),\n                         false);\n                 intAttrNames.setChoices(Collections.<String>emptyList());\n-                intAttrNames.setNullValid(true).setRequired(true).hideLabel();\n+                intAttrNames.setRequired(true).hideLabel();\n                 item.add(intAttrNames);\n                 // -------------------------------\n \n@@ -290,7 +284,7 @@ protected void populateItem(final ListItem<MappingItemTO> item) {\n                         \"extAttrName\",\n                         new ResourceModel(\"extAttrNames\", \"extAttrNames\").getObject(),\n                         new PropertyModel<String>(mapItem, \"extAttrName\"));\n-                extAttrNames.setChoices(schemaNames);\n+                extAttrNames.setChoices(getExtAttrNames(resourceTO.getConnector(), resourceTO.getConfOverride()));\n \n                 boolean required = !mapItem.isPassword();\n                 extAttrNames.setRequired(required).hideLabel();\n@@ -493,47 +487,24 @@ protected void onBeforeRender() {\n         passwordLabel.setVisible(AnyTypeKind.USER.name().equals(this.provisionTO.getAnyType()));\n     }\n \n-    private List<String> getSchemaNames(final String connectorKey, final Set<ConnConfProperty> conf) {\n-        final ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n+    private List<String> getExtAttrNames(final String connectorKey, final Set<ConnConfProperty> conf) {\n+        ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n         connInstanceTO.setKey(connectorKey);\n         connInstanceTO.getConf().addAll(conf);\n \n         // SYNCOPE-156: use provided info to give schema names (and type!) by ObjectClass\n-        ConnIdObjectClassTO clazz = IterableUtils.find(\n-                connRestClient.buildObjectClassInfo(connInstanceTO, true), new Predicate<ConnIdObjectClassTO>() {\n+        ConnIdObjectClassTO connIdObjectClass = IterableUtils.find(\n+                connRestClient.buildObjectClassInfo(connInstanceTO, false), new Predicate<ConnIdObjectClassTO>() {\n \n             @Override\n             public boolean evaluate(final ConnIdObjectClassTO object) {\n                 return object.getType().equalsIgnoreCase(ResourceMappingPanel.this.provisionTO.getObjectClass());\n             }\n         });\n \n-        return clazz == null ? new ArrayList<String>()\n-                : IterableUtils.toList(IterableUtils.filteredIterable(clazz.getAttributes(), new Predicate<String>() {\n-\n-                    @Override\n-                    public boolean evaluate(final String object) {\n-                        return !(ConnIdSpecialAttributeName.NAME.equals(object)\n-                                || ConnIdSpecialAttributeName.ENABLE.equals(object)\n-                                || ConnIdSpecialAttributeName.PASSWORD.equals(object));\n-                    }\n-                }));\n-    }\n-\n-    private void setEnabled() {\n-        ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n-        connInstanceTO.setKey(resourceTO.getConnector());\n-        connInstanceTO.getConf().addAll(resourceTO.getConfOverride());\n-\n-        boolean enabled = provisionTO != null;\n-\n-        this.mappingContainer.setEnabled(enabled);\n-        this.mappingContainer.setVisible(enabled);\n-\n-        if (!enabled) {\n-            getMapping().getItems().clear();\n-            getMapping().setConnObjectLink(null);\n-        }\n+        return connIdObjectClass == null\n+                ? new ArrayList<String>()\n+                : connIdObjectClass.getAttributes();\n     }\n \n     /**\n@@ -542,7 +513,7 @@ private void setEnabled() {\n      * @param type attribute type.\n      * @param toBeUpdated drop down choice to be updated.\n      */\n-    private void setAttrNames(final IntMappingType type, final AjaxDropDownChoicePanel<String> toBeUpdated) {\n+    private void setAttrNames(final IntMappingType type, final AjaxTextFieldPanel toBeUpdated) {\n         toBeUpdated.setRequired(true);\n         toBeUpdated.setEnabled(true);\n "},{"sha":"825f433c37fca37130e705270746da2630c7a55c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceWizardBuilder.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceWizardBuilder.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.wizards.resources;\n \n import java.io.Serializable;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n@@ -56,18 +57,19 @@ public AjaxWizard<Serializable> build(final String id, final AjaxWizard.Mode mod\n \n     @Override\n     protected WizardModel buildModelSteps(final Serializable modelObject, final WizardModel wizardModel) {\n-        final ResourceTO resourceTO = ResourceTO.class.cast(modelObject);\n+        ResourceTO resourceTO = ResourceTO.class.cast(modelObject);\n         wizardModel.add(new ResourceDetailsPanel(resourceTO, createFlag));\n         wizardModel.add(new ResourceConnConfPanel(resourceTO, createFlag) {\n \n             private static final long serialVersionUID = -1128269449868933504L;\n \n             @Override\n             protected void check(final AjaxRequestTarget target) {\n-                if (connectorRestClient.check(modelObject)) {\n+                Pair<Boolean, String> result = resourceRestClient.check(modelObject);\n+                if (result.getLeft()) {\n                     info(getString(Constants.OPERATION_SUCCEEDED));\n                 } else {\n-                    error(getString(\"error_connection\"));\n+                    error(getString(\"error_connection\") + \": \" + result.getRight());\n                 }\n                 SyncopeConsoleSession.get().getNotificationPanel().refresh(target);\n             }"},{"sha":"5ab79130ded9f678f47fc3cff8d65d950b66b649","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":29,"deletions":5,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -419,16 +419,43 @@ div.searchResult{\n   box-shadow: 0 6px 12px rgba(0, 0, 0, 0.176);\n   float: left;\n   font-size: 14px;\n-  list-style: outside none none;\n   min-width: 160px;\n-  text-align: left;\n   max-height: 250px;\n }\n \n+div.wicket-aa ul {\n+  list-style: none;\n+  padding-left: 15px;\n+}\n+\n /**\n START - Notifications\n */\n \n+/**\n+START - startAt\n+*/\n+div#startAt {\n+  background-color: rgba(98, 98, 98, 0.98) !important;\n+  color: #CCC;\n+  right: 5px !important;\n+  top: 100px !important;\n+  min-width: 450px;\n+  min-height: 130px !important;\n+  z-index: 6000 !important;\n+}\n+\n+div#startAtContainer {\n+  padding: 15px;\n+}\n+\n+div#startAtContainer input {\n+  background-color: rgba(200, 200, 200, 0.60) !important;\n+}\n+/**\n+END - startAt\n+*/\n+\n /*Temporany fix diagonal stacking*/\n .k-popup.k-notification {\n   box-shadow: none;\n@@ -484,9 +511,6 @@ START - Notifications\n   width:85%\n }\n \n-/**\n-END - Notifications\n-*/\n \n /**\n START - Actions"},{"sha":"a5641b95d72c1d1e35bcfac8f655917257cef3ad","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ConnObjects.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.properties?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -14,4 +14,4 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-connObject.view=Back to list\n+connObject.view=Details"},{"sha":"c2bf08e8902052c02364cfa98a8a7b380990ed17","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ConnObjects_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects_it.properties?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -14,4 +14,4 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-connObject.view=Torna alla lista\n+connObject.view=Dettagli"},{"sha":"e573a860571bd79154403840788524eb64c2e2d0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ConnObjects_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects_pt_BR.properties?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -14,4 +14,4 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-connObject.view=Volte para a lista\n+connObject.view=Detalhes"},{"sha":"c24c7f7c3ab2a403989cb985351909b39953545a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ConnObjects_ru.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects_ru.properties?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -15,5 +15,5 @@\n # specific language governing permissions and limitations\n # under the License.\n #\n-# connObject.view=Вернуться к списку\n-connObject.view=\\u0412\\u0435\\u0440\\u043d\\u0443\\u0442\\u044c\\u0441\\u044f \\u043a \\u0441\\u043f\\u0438\\u0441\\u043a\\u0443\n+# connObject.view=\\u00d0\\u0092\\u00d0\\u00b5\\u00d1\\u0080\\u00d0\\u00bd\\u00d1\\u0083\\u00d1\\u0082\\u00d1\\u008c\\u00d1\\u0081\\u00d1\\u008f \\u00d0\\u00ba \\u00d1\\u0081\\u00d0\\u00bf\\u00d0\\u00b8\\u00d1\\u0081\\u00d0\\u00ba\\u00d1\\u0083\n+connObject.view=\\u0414\\u0435\\u0442\\u0430\\u043b\\u0438"},{"sha":"c77a1aec15b01f5f082ad81fe47ad7898128e831","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/StartAtTogglePanel.html","status":"modified","additions":0,"deletions":21,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStartAtTogglePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStartAtTogglePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FStartAtTogglePanel.html?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -17,27 +17,6 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:head>\n-    <style type=\"text/css\">\n-      div#startAt {\n-        background-color: rgba(98, 98, 98, 0.98) !important;\n-        color: #CCC;\n-        right: 5px !important;\n-        top: 100px !important;\n-        min-width: 300px;\n-        min-height: 130px !important;\n-        z-index: 6000 !important;\n-      }\n-\n-      div#startAtContainer {\n-        padding: 15px;\n-      }\n-\n-      div#startAtContainer input {\n-        background-color: rgba(200, 200, 200, 0.60) !important;\n-      }\n-    </style>\n-  </wicket:head>\n   <wicket:extend>\n     <div id=\"startAtContainer\">\n       <form wicket:id=\"startAtForm\">"},{"sha":"54ff76483df4fb82ddf164df980614324b74d53e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TaskExecutionDetails.html","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutionDetails.html?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -0,0 +1,24 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div wicket:id=\"executions\"></div>\n+    <wicket:child/>\n+  </wicket:panel>\n+</html>"},{"sha":"2193a6adc61a9b90b6739679b75e8bf3e127a7c0","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TransformersTogglePanel.html","status":"modified","additions":12,"deletions":15,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTransformersTogglePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTransformersTogglePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTransformersTogglePanel.html?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -17,19 +17,16 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <head><title></title></head>\n-  <body>\n-    <wicket:extend>\n-      <div id=\"transformersContainer\">\n-        <form wicket:id=\"form\">\n-          <div id=\"body\">\n-            <span wicket:id=\"classes\"/>\n-          </div>\n-          <div id=\"footer\">\n-            <input type=\"button\" wicket:id=\"submit\" class=\"btn\" wicket:message=\"value:finish\"></input>\n-          </div>\n-        </form>\n-      </div>\n-    </wicket:extend>\n-  </body>\n+  <wicket:extend>\n+    <div id=\"transformersContainer\">\n+      <form wicket:id=\"form\">\n+        <div id=\"body\">\n+          <span wicket:id=\"classes\"/>\n+        </div>\n+        <div id=\"footer\">\n+          <input type=\"button\" wicket:id=\"submit\" class=\"btn\" wicket:message=\"value:finish\"></input>\n+        </div>\n+      </form>\n+    </div>\n+  </wicket:extend>\n </html>"},{"sha":"5eb7db09687fb0eff63e1975c8bfc11a07083ea7","filename":"client/console/src/main/resources/org/apache/syncope/client/console/topology/TopologyTogglePanel.html","status":"modified","additions":34,"deletions":37,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.html?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -17,46 +17,43 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <head><title>toggle menu</title></head>\n-  <body>\n-    <wicket:extend>\n-      <div wicket:id=\"container\" >\n-        <wicket:container wicket:id=\"actions\" />\n-      </div>\n+  <wicket:extend>\n+    <div wicket:id=\"container\" >\n+      <wicket:container wicket:id=\"actions\" />\n+    </div>\n \n-      <wicket:fragment wicket:id=\"connectorActions\">\n-        <ul class=\"menu\">\n-          <li><i class=\"fa fa-plus\"></i><a href=\"#\" wicket:id=\"create\"><wicket:message key=\"resource.menu.add\"/></a></li>\n-          <li><i class=\"fa fa-minus\"></i><a href=\"#\" wicket:id=\"delete\"><wicket:message key=\"connector.menu.remove\"/></a></li>\n-          <li><i class=\"fa fa-pencil\"></i><a href=\"#\" wicket:id=\"edit\"><wicket:message key=\"connector.menu.edit\"/></a></li>\n-        </ul>\n-      </wicket:fragment>\n+    <wicket:fragment wicket:id=\"connectorActions\">\n+      <ul class=\"menu\">\n+        <li><i class=\"fa fa-plus\"></i><a href=\"#\" wicket:id=\"create\"><wicket:message key=\"resource.menu.add\"/></a></li>\n+        <li><i class=\"fa fa-pencil\"></i><a href=\"#\" wicket:id=\"edit\"><wicket:message key=\"connector.menu.edit\"/></a></li>\n+        <li><i class=\"fa fa-minus\"></i><a href=\"#\" wicket:id=\"delete\"><wicket:message key=\"connector.menu.remove\"/></a></li>\n+      </ul>\n+    </wicket:fragment>\n \n-      <wicket:fragment wicket:id=\"resourceActions\">\n-        <ul class=\"menu\">\n-          <li><i class=\"fa fa-minus\"></i><a href=\"#\" wicket:id=\"delete\"><wicket:message key=\"resource.menu.remove\"/></a></li>\n-          <li><i class=\"fa fa-pencil\"></i><a href=\"#\" wicket:id=\"edit\"><wicket:message key=\"resource.menu.edit\"/></a></li>\n-          <li><i class=\"fa fa-exchange\"></i><a href=\"#\" wicket:id=\"provision\"><wicket:message key=\"resource.menu.provision\"/></a></li>\n-          <li><i class=\"fa fa-eye\"></i><a href=\"#\" wicket:id=\"explore\"><wicket:message key=\"resource.menu.explore\"/></a></li>\n-          <li><i class=\"fa fa-arrow-right\"></i><a href=\"#\" wicket:id=\"propagation\"><wicket:message key=\"task.propagation.list\"/></a></li>\n-          <li><i class=\"fa fa-chevron-circle-left\"></i><a href=\"#\" wicket:id=\"pull\"><wicket:message key=\"task.pull.list\"/></a></li>\n-          <li><i class=\"fa fa-chevron-circle-right\"></i><a href=\"#\" wicket:id=\"push\"><wicket:message key=\"task.push.list\"/></a></li>\n-        </ul>\n-      </wicket:fragment>\n+    <wicket:fragment wicket:id=\"resourceActions\">\n+      <ul class=\"menu\">\n+        <li><i class=\"fa fa-pencil\"></i><a href=\"#\" wicket:id=\"edit\"><wicket:message key=\"resource.menu.edit\"/></a></li>\n+        <li><i class=\"fa fa-exchange\"></i><a href=\"#\" wicket:id=\"provision\"><wicket:message key=\"resource.menu.provision\"/></a></li>\n+        <li><i class=\"fa fa-eye\"></i><a href=\"#\" wicket:id=\"explore\"><wicket:message key=\"resource.menu.explore\"/></a></li>\n+        <li><i class=\"fa fa-arrow-right\"></i><a href=\"#\" wicket:id=\"propagation\"><wicket:message key=\"task.propagation.list\"/></a></li>\n+        <li><i class=\"fa fa-chevron-circle-left\"></i><a href=\"#\" wicket:id=\"pull\"><wicket:message key=\"task.pull.list\"/></a></li>\n+        <li><i class=\"fa fa-chevron-circle-right\"></i><a href=\"#\" wicket:id=\"push\"><wicket:message key=\"task.push.list\"/></a></li>\n+        <li><i class=\"fa fa-minus\"></i><a href=\"#\" wicket:id=\"delete\"><wicket:message key=\"resource.menu.remove\"/></a></li>\n+      </ul>\n+    </wicket:fragment>\n \n-      <wicket:fragment wicket:id=\"locationActions\">\n-        <ul class=\"menu\">\n-          <li><i class=\"fa fa-plus\"></i><a href=\"#\" wicket:id=\"create\"><wicket:message key=\"connector.menu.add\"/></a></li>\n-        </ul>\n-      </wicket:fragment>\n+    <wicket:fragment wicket:id=\"locationActions\">\n+      <ul class=\"menu\">\n+        <li><i class=\"fa fa-plus\"></i><a href=\"#\" wicket:id=\"create\"><wicket:message key=\"connector.menu.add\"/></a></li>\n+      </ul>\n+    </wicket:fragment>\n \n-      <wicket:fragment wicket:id=\"syncopeActions\">\n-        <ul class=\"menu\">\n-          <li><i class=\"fa fa-tasks\"></i><a href=\"#\" wicket:id=\"tasks\"><wicket:message key=\"task.custom.list\"/></a></li>\n-        </ul>\n-      </wicket:fragment>\n+    <wicket:fragment wicket:id=\"syncopeActions\">\n+      <ul class=\"menu\">\n+        <li><i class=\"fa fa-tasks\"></i><a href=\"#\" wicket:id=\"tasks\"><wicket:message key=\"task.custom.list\"/></a></li>\n+      </ul>\n+    </wicket:fragment>\n \n-      <wicket:fragment wicket:id=\"emptyFragment\"></wicket:fragment>\n-    </wicket:extend>\n-  </body>\n+    <wicket:fragment wicket:id=\"emptyFragment\"></wicket:fragment>\n+  </wicket:extend>\n </html>"},{"sha":"dc8013db27194eab7395bb629cd286dd88a97056","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/AbstractConnConfPanel.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel.properties?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -16,3 +16,4 @@\n # under the License.\n check=Check connection\n property.empty.list=No connector configuraton property available\n+error_connection=Connection failure"},{"sha":"6b31d943df548ebbbc34085d2cec789f34e26ee6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/AbstractConnConfPanel_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel_it.properties?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -16,3 +16,4 @@\n # under the License.\n check=Verifica connessione\n property.empty.list=Nessuna propriet\\u00e0 di connettore disponibile\n+error_connection=Connessione non riuscita"},{"sha":"24e7b4434950ff806df11f23423dc77c16981556","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/AbstractConnConfPanel_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel_pt_BR.properties?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -16,3 +16,4 @@\n # under the License.\n check=Verificar a Conex\\u00e3o\n property.empty.list=No connector configuraton property available\n+error_connection=Falha na Conex\\u00e3o"},{"sha":"1878667625bd17dcad988c619def6663ba2dc0f3","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/AbstractConnConfPanel_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel_ru.properties?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -19,3 +19,4 @@\n check=\\u041f\\u0440\\u043e\\u0432\\u0435\\u0440\\u0438\\u0442\\u044c \\u043f\\u043e\\u0434\\u043a\\u043b\\u044e\\u0447\\u0435\\u043d\\u0438\\u0435\n # attribute.empty.list=\\u00d0\\u0092\\u00d0\\u00b8\\u00d1\\u0080\\u00d1\\u0082\\u00d1\\u0083\\u00d0\\u00b0\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00bd\\u00d1\\u008b\\u00d0\\u00b5 \\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u0080\\u00d0\\u00b8\\u00d0\\u00b1\\u00d1\\u0083\\u00d1\\u0082\\u00d1\\u008b \\u00d0\\u00be\\u00d1\\u0082\\u00d1\\u0081\\u00d1\\u0083\\u00d1\\u0082\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b2\\u00d1\\u0083\\u00d1\\u008e\\u00d1\\u0082\n property.empty.list=\\u0412\\u0438\\u0440\\u0442\\u0443\\u0430\\u043b\\u044c\\u043d\\u044b\\u0435 \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u044b \\u043e\\u0442\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u044e\\u0442\n+error_connection=Connection failure"},{"sha":"4214ee5d1794522d9adb0bec64fa560003d99edd","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceMappingPanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.html?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -39,7 +39,7 @@\n               <th><wicket:message key=\"connObjectKey\"/></th>\n               <th><label wicket:id=\"passwordLabel\"/></th>\n               <th><wicket:message key=\"purpose\"/></th>\n-              <th><i class=\"fa fa-trash\"></i></th>\n+              <th></th>\n             </tr>\n             <tr wicket:id=\"mappings\">\n               <td>"},{"sha":"6712b30c46074a47480a4d585b324a65c8149fd1","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/report/GroupReportletConf.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FGroupReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FGroupReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FGroupReportletConf.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -47,13 +47,13 @@ public enum Feature {\n \n     }\n \n-    @Schema(schema = IntMappingType.GroupPlainSchema)\n+    @Schema(type = IntMappingType.GroupPlainSchema)\n     private final List<String> plainAttrs = new ArrayList<>();\n \n-    @Schema(schema = IntMappingType.GroupDerivedSchema)\n+    @Schema(type = IntMappingType.GroupDerivedSchema)\n     private final List<String> derAttrs = new ArrayList<>();\n \n-    @Schema(schema = IntMappingType.GroupVirtualSchema)\n+    @Schema(type = IntMappingType.GroupVirtualSchema)\n     private final List<String> virAttrs = new ArrayList<>();\n \n     @SearchCondition(type = \"GROUP\")"},{"sha":"1aad334141921654179532040a4310f65d2ac8eb","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/report/Schema.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FSchema.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -28,5 +28,5 @@\n @Retention(RetentionPolicy.RUNTIME)\n public @interface Schema {\n \n-    IntMappingType schema() default IntMappingType.UserPlainSchema;\n+    IntMappingType type() default IntMappingType.UserPlainSchema;\n }"},{"sha":"bcaadbb83d3dcb79cb2c624635e8fb2a1b2a4475","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/report/UserReportletConf.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FUserReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FUserReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FUserReportletConf.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -32,13 +32,15 @@\n @XmlType\n public class UserReportletConf extends AbstractAnyReportletConf {\n \n-    @Schema(schema = IntMappingType.UserPlainSchema)\n+    private static final long serialVersionUID = 6602717600064602764L;\n+\n+    @Schema(type = IntMappingType.UserPlainSchema)\n     private final List<String> plainAttrs = new ArrayList<>();\n \n-    @Schema(schema = IntMappingType.UserDerivedSchema)\n+    @Schema(type = IntMappingType.UserDerivedSchema)\n     private final List<String> derAttrs = new ArrayList<>();\n \n-    @Schema(schema = IntMappingType.UserVirtualSchema)\n+    @Schema(type = IntMappingType.UserVirtualSchema)\n     private final List<String> virAttrs = new ArrayList<>();\n \n     @XmlEnum\n@@ -60,8 +62,6 @@ public enum Feature {\n \n     }\n \n-    private static final long serialVersionUID = 6602717600064602764L;\n-\n     @SearchCondition(type = \"USER\")\n     protected String matchingCond;\n "},{"sha":"e69cb95b671deb6b2a22c28027cb3c48fb0f7326","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/MappingTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -72,7 +72,7 @@ protected boolean addConnObjectKeyItem(final MappingItemTO connObjectItem) {\n             throw new IllegalArgumentException(\"Password attributes cannot be set as connObjectKey\");\n         }\n \n-        connObjectItem.setExtAttrName(connObjectItem.getExtAttrName());\n+        connObjectItem.setMandatoryCondition(\"true\");\n         connObjectItem.setConnObjectKey(true);\n \n         return this.add(connObjectItem);"},{"sha":"8b0dbe6023a479361cf13d1e18b5bd3497d583fe","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/ConnConfPropSchema.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfPropSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfPropSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfPropSchema.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -39,7 +39,7 @@ public class ConnConfPropSchema extends AbstractBaseBean implements Comparable<C\n \n     private String helpMessage;\n \n-    private String type;\n+    private String type = String.class.getName();\n \n     private boolean required;\n "},{"sha":"86e75eb33e5c4813fc5ebcab899319003d38ad27","filename":"core/migration/pom.xml","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fmigration%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fmigration%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmigration%2Fpom.xml?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -0,0 +1,63 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.apache.syncope</groupId>\n+    <artifactId>syncope-core</artifactId>\n+    <version>2.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <name>Apache Syncope Core Migration</name>\n+  <description>Apache Syncope Core Migration</description>\n+  <groupId>org.apache.syncope.core</groupId>\n+  <artifactId>syncope-core-migration</artifactId>\n+  <packaging>jar</packaging>\n+  \n+  <properties>\n+    <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.apache.syncope.core</groupId>\n+      <artifactId>syncope-core-provisioning-java</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+  </dependencies>\n+\n+  <build>\n+    <resources>\n+      <resource>\n+        <directory>${basedir}/src/main/resources</directory>\n+        <filtering>true</filtering>\n+      </resource>\n+    </resources>\n+        \n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>"},{"sha":"5119ece2e9a0164df1771ef8e2bd5490ce62ca17","filename":"core/migration/src/main/java/org/apache/syncope/core/migration/MigrationPullActions.java","status":"added","additions":149,"deletions":0,"changes":149,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fmigration%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmigration%2FMigrationPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fmigration%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmigration%2FMigrationPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmigration%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmigration%2FMigrationPullActions.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -0,0 +1,149 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.migration;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.TransformerUtils;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.CipherAlgorithm;\n+import org.apache.syncope.core.persistence.api.dao.UserDAO;\n+import org.apache.syncope.core.persistence.api.entity.user.User;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n+import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n+import org.apache.syncope.core.provisioning.java.job.SetUMembershipsJob;\n+import org.apache.syncope.core.provisioning.java.pushpull.SchedulingPullActions;\n+import org.identityconnectors.common.security.GuardedString;\n+import org.identityconnectors.framework.common.objects.Attribute;\n+import org.identityconnectors.framework.common.objects.AttributeUtil;\n+import org.identityconnectors.framework.common.objects.SyncDelta;\n+import org.quartz.JobExecutionException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+public class MigrationPullActions extends SchedulingPullActions {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(MigrationPullActions.class);\n+\n+    private static final String CIPHER_ALGORITHM_ATTR = \"cipherAlgorithm\";\n+\n+    private static final String RESOURCES_ATTR = \"__RESOURCES__\";\n+\n+    private static final String MEMBERSHIPS_ATTR = \"__MEMBERSHIPS__\";\n+\n+    @Autowired\n+    private UserDAO userDAO;\n+\n+    private final Map<String, Set<String>> memberships = new HashMap<>();\n+\n+    @Override\n+    public <A extends AnyTO> SyncDelta beforeProvision(\n+            final ProvisioningProfile<?, ?> profile,\n+            final SyncDelta delta,\n+            final A any) throws JobExecutionException {\n+\n+        // handles resource assignment, for users and groups\n+        Attribute resourcesAttr = delta.getObject().getAttributeByName(RESOURCES_ATTR);\n+        if (resourcesAttr != null\n+                && resourcesAttr.getValue() != null && !resourcesAttr.getValue().isEmpty()) {\n+\n+            LOG.debug(\"Found {} for {} {}, adding...\", RESOURCES_ATTR, any.getType(), any.getKey());\n+\n+            any.getResources().addAll(\n+                    CollectionUtils.collect(resourcesAttr.getValue(), TransformerUtils.stringValueTransformer()));\n+        }\n+\n+        return delta;\n+    }\n+\n+    @Transactional\n+    @Override\n+    public <A extends AnyTO> void after(\n+            final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final A any,\n+            final ProvisioningReport result)\n+            throws JobExecutionException {\n+\n+        if (any instanceof UserTO) {\n+            // handles ciphered password import\n+            CipherAlgorithm cipherAlgorithm = null;\n+            Attribute cipherAlgorithmAttr = delta.getObject().getAttributeByName(CIPHER_ALGORITHM_ATTR);\n+            if (cipherAlgorithmAttr != null\n+                    && cipherAlgorithmAttr.getValue() != null && !cipherAlgorithmAttr.getValue().isEmpty()) {\n+\n+                cipherAlgorithm = CipherAlgorithm.valueOf(cipherAlgorithmAttr.getValue().get(0).toString());\n+            }\n+\n+            GuardedString passwordValue = AttributeUtil.getPasswordValue(delta.getObject().getAttributes());\n+\n+            if (cipherAlgorithm != null && passwordValue != null) {\n+                final StringBuilder password = new StringBuilder();\n+                passwordValue.access(new GuardedString.Accessor() {\n+\n+                    @Override\n+                    public void access(final char[] clearChars) {\n+                        password.append(clearChars);\n+                    }\n+                });\n+\n+                User user = userDAO.find(any.getKey());\n+                LOG.debug(\"Setting encoded password for {}\", user);\n+                user.setEncodedPassword(password.toString(), cipherAlgorithm);\n+            }\n+        } else if (any instanceof GroupTO) {\n+            // handles group membership\n+            Attribute membershipsAttr = delta.getObject().getAttributeByName(MEMBERSHIPS_ATTR);\n+            if (membershipsAttr != null\n+                    && membershipsAttr.getValue() != null && !membershipsAttr.getValue().isEmpty()) {\n+\n+                LOG.debug(\"Found {} for group {}\", MEMBERSHIPS_ATTR, any.getKey());\n+\n+                for (Object membership : membershipsAttr.getValue()) {\n+                    User member = userDAO.findByUsername(membership.toString());\n+                    if (member == null) {\n+                        LOG.warn(\"Could not find member {} for group {}\", membership, any.getKey());\n+                    } else {\n+                        Set<String> memb = memberships.get(member.getKey());\n+                        if (memb == null) {\n+                            memb = new HashSet<>();\n+                            memberships.put(member.getKey(), memb);\n+                        }\n+                        memb.add(any.getKey());\n+                    }\n+                }\n+            }\n+        } else {\n+            super.after(profile, delta, any, result);\n+        }\n+    }\n+\n+    @Override\n+    public void afterAll(final ProvisioningProfile<?, ?> profile) throws JobExecutionException {\n+        Map<String, Object> jobMap = new HashMap<>();\n+        jobMap.put(SetUMembershipsJob.MEMBERSHIPS_KEY, memberships);\n+        schedule(SetUMembershipsJob.class, jobMap);\n+    }\n+\n+}"},{"sha":"8a009a226af3c649e457186accaf8b8b07eb5123","filename":"core/migration/src/main/resources/scripted/SchemaScript.groovy","status":"added","additions":108,"deletions":0,"changes":108,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSchemaScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSchemaScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSchemaScript.groovy?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.sql.Sql;\n+import org.identityconnectors.common.security.GuardedString;\n+import org.identityconnectors.framework.common.objects.AttributeInfo;\n+import org.identityconnectors.framework.common.objects.AttributeInfo.Flags;\n+import org.identityconnectors.framework.common.objects.AttributeInfoBuilder;\n+import org.identityconnectors.framework.common.objects.ObjectClassInfo;\n+import org.identityconnectors.framework.common.objects.ObjectClassInfoBuilder;\n+\n+// Parameters:\n+// The connector sends the following:\n+// connection: handler to the SQL connection\n+// action: a string describing the action (\"SCHEMA\" here)\n+// log: a handler to the Log facility\n+// builder: SchemaBuilder instance for the connector\n+//\n+// The connector will make the final call to builder.build()\n+// so the scipt just need to declare the different object types.\n+\n+def getAIB(it) {\n+  aib = new AttributeInfoBuilder(it.NAME);\n+    \n+  switch(it.TYPE) {\n+  case \"String\":\n+  case \"Date\":\n+  case \"Enum\":\n+    aib.setType(String.class);\n+    break;\n+      \n+  case \"Long\":\n+    aib.setType(Long.class);\n+    break;\n+        \n+  case \"Double\":\n+    aib.setType(Double.class);\n+    break;\n+\n+  case \"Boolean\":\n+    aib.setType(Boolean.class);\n+    break;\n+  \n+  case \"Encrypted\":\n+    aib.setType(GuardedString.class);\n+    \n+  case \"Binary\":\n+    aib.setType(byte[].class);\n+  }\n+    \n+  if (it.MULTIVALUE == 1) {\n+    aib.setMultiValued(true);\n+  }\n+    \n+  if (it.MANDATORYCONDITION == \"true\") {\n+    aib.setRequired(true);\n+  }\n+\n+  return aib;\n+}\n+\n+log.ok(\"Entering \" + action + \" script\");\n+\n+// User\n+idAIB = new AttributeInfoBuilder(\"USERNAME\", String.class);\n+idAIB.setRequired(true);\n+\n+userAI = new HashSet<AttributeInfo>();\n+userAI.add(idAIB.build());\n+\n+def sql = new Sql(connection);\n+sql.eachRow(\"SELECT NAME, TYPE, MULTIVALUE, MANDATORYCONDITION FROM USCHEMA\", {    \n+    userAI.add(getAIB(it).build());\n+  });\n+\n+ObjectClassInfo userCI = new ObjectClassInfoBuilder().setType(\"__ACCOUNT__\").addAllAttributeInfo(userAI).build();\n+builder.defineObjectClass(userCI);\n+\n+// Group\n+idAIB = new AttributeInfoBuilder(\"NAME\", String.class);\n+idAIB.setRequired(true);\n+\n+roleAI = new HashSet<AttributeInfo>();\n+roleAI.add(idAIB.build());\n+\n+sql.eachRow(\"SELECT NAME, TYPE, MULTIVALUE, MANDATORYCONDITION FROM RSCHEMA\", {    \n+    roleAI.add(getAIB(it).build());\n+  });\n+\n+ObjectClassInfo roleCI = new ObjectClassInfoBuilder().setType(\"__GROUP__\").addAllAttributeInfo(roleAI).build();\n+builder.defineObjectClass(roleCI);\n+\n+log.ok(action + \" script done\");"},{"sha":"92a640cc3d734e4e56fcfb17ed635a0f11c7439e","filename":"core/migration/src/main/resources/scripted/SearchScript.groovy","status":"added","additions":165,"deletions":0,"changes":165,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSearchScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSearchScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSearchScript.groovy?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -0,0 +1,165 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.sql.Sql;\n+import org.identityconnectors.framework.common.objects.OperationOptions;\n+import org.identityconnectors.common.security.GuardedString;\n+\n+// Parameters:\n+// The connector sends the following:\n+// connection: handler to the SQL connection\n+// objectClass: a String describing the Object class (__ACCOUNT__ / __GROUP__ / other)\n+// action: a string describing the action (\"SEARCH\" here)\n+// log: a handler to the Log facility\n+// options: a handler to the OperationOptions Map\n+// query: a handler to the Query Map\n+//\n+// The Query map describes the filter used.\n+//\n+// query = [ operation: \"CONTAINS\", left: attribute, right: \"value\", not: true/false ]\n+// query = [ operation: \"ENDSWITH\", left: attribute, right: \"value\", not: true/false ]\n+// query = [ operation: \"STARTSWITH\", left: attribute, right: \"value\", not: true/false ]\n+// query = [ operation: \"EQUALS\", left: attribute, right: \"value\", not: true/false ]\n+// query = [ operation: \"GREATERTHAN\", left: attribute, right: \"value\", not: true/false ]\n+// query = [ operation: \"GREATERTHANOREQUAL\", left: attribute, right: \"value\", not: true/false ]\n+// query = [ operation: \"LESSTHAN\", left: attribute, right: \"value\", not: true/false ]\n+// query = [ operation: \"LESSTHANOREQUAL\", left: attribute, right: \"value\", not: true/false ]\n+// query = null : then we assume we fetch everything\n+//\n+// AND and OR filter just embed a left/right couple of queries.\n+// query = [ operation: \"AND\", left: query1, right: query2 ]\n+// query = [ operation: \"OR\", left: query1, right: query2 ]\n+//\n+// Returns: A list of Maps. Each map describing one row.\n+// !!!! Each Map must contain a '__UID__' and '__NAME__' attribute.\n+// This is required to build a ConnectorObject.\n+\n+def addAttributes(it) {\n+  value = it.stringValue;\n+  if (value == null) {\n+    value = it.longValue;\n+  }\n+  if (value == null) {\n+    value = it.doubleValue;\n+  }\n+  if (value == null) {\n+    if (it.dateValue instanceof java.sql.Timestamp) {\n+      value = new Date(it.dateValue.getTime()).format(\"yyyy-MM-dd HH:mm:ss\");\n+    }\n+  }\n+  if (value == null) {\n+    value = it.booleanValue;\n+  }\n+          \n+  if (options[OperationOptions.OP_ATTRIBUTES_TO_GET].contains(it.schema_name)) {\n+    item.put(it.schema_name, value);\n+    withValues.add(it.schema_name);\n+  }\n+}\n+\n+log.ok(\"Entering \" + action + \" script\");\n+\n+def sql = new Sql(connection);\n+def result = []\n+\n+switch ( objectClass ) {\n+case \"__ACCOUNT__\":\n+  sql.eachRow(\"SELECT * FROM USER_SEARCH\", {\n+      item = [\n+        __UID__: it.username, \n+        __NAME__: it.username, \n+        username: it.username,\n+        __PASSWORD__: new GuardedString(it.password.toCharArray()),\n+        cipherAlgorithm: it.cipherAlgorithm,\n+        __ENABLE__: it.suspended == 0\n+      ];\n+      \n+      withValues = ['__UID__', '__NAME__', '__PASSWORD__', 'cipherAlgorithm', '__ENABLE__', 'username'];\n+      \n+      sql.eachRow(\"SELECT * FROM USER_SEARCH_ATTR WHERE subject_id = \" + it.id, {\n+          addAttributes(it);\n+        });\n+      sql.eachRow(\"SELECT * FROM USER_SEARCH_UNIQUE_ATTR WHERE subject_id = \" + it.id, {\n+          addAttributes(it);\n+        });\n+      \n+      for (attr in options[OperationOptions.OP_ATTRIBUTES_TO_GET]) {\n+        if (!withValues.contains(attr)) {\n+          item.put(attr, null);          \n+        }\n+      }\n+      \n+      resources = [];\n+      sql.eachRow(\"SELECT DISTINCT * FROM USER_SEARCH_RESOURCE WHERE subject_id = \" + it.id, {\n+          resources.add(it.resource_name);\n+        });      \n+      item.put('__RESOURCES__', resources);\n+      \n+      result.add(item)\n+    });\n+  break\n+\n+case \"__GROUP__\":\n+  sql.eachRow(\"SELECT * FROM ROLE_SEARCH\", {\n+      name = it.id + ' ' + it.name;\n+      item = [\n+        __UID__: name, \n+        __NAME__: name, \n+        __ENABLE__: true, \n+        name: name\n+      ];\n+      \n+      withValues = ['__UID__', '__NAME__', '__ENABLE__', 'name'];\n+      \n+      sql.eachRow(\"SELECT * FROM ROLE_SEARCH_ATTR WHERE subject_id = \" + it.id, {\n+          addAttributes(it);\n+        });\n+      sql.eachRow(\"SELECT * FROM ROLE_SEARCH_UNIQUE_ATTR WHERE subject_id = \" + it.id, {\n+          addAttributes(it);\n+        });\n+      \n+      for (attr in options[OperationOptions.OP_ATTRIBUTES_TO_GET]) {\n+        if (!withValues.contains(attr)) {\n+          item.put(attr, null);          \n+        }\n+      }\n+\n+      resources = [];\n+      sql.eachRow(\"SELECT DISTINCT * FROM ROLE_SEARCH_RESOURCE WHERE subject_id = \" + it.id, {\n+          resources.add(it.resource_name);\n+        });      \n+      item.put('__RESOURCES__', resources);\n+\n+      memberships = [];\n+      sql.eachRow(\"SELECT u.username as username FROM USER_SEARCH_MEMBERSHIP usm, USER_SEARCH u \"\n+        +\"WHERE u.subject_id=usm.subject_id AND usm.role_id =\" + it.id, {\n+          memberships.add(it.username);\n+        });      \n+      item.put('__MEMBERSHIPS__', memberships);\n+\n+      result.add(item)\n+    });\n+  break\n+  \n+default:\n+  result;\n+}\n+\n+log.ok(action + \" script done\");\n+\n+return result;"},{"sha":"f8ca53c89ed6bb99a9c1a548ff425e6be0ce5bdc","filename":"core/migration/src/main/resources/scripted/SyncScript.groovy","status":"added","additions":202,"deletions":0,"changes":202,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSyncScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSyncScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FSyncScript.groovy?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -0,0 +1,202 @@\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.sql.Sql;\n+import org.identityconnectors.common.security.GuardedString\n+\n+// Parameters:\n+// The connector sends the following:\n+// connection: handler to the SQL connection\n+// objectClass: a String describing the Object class (__ACCOUNT__ / __GROUP__ / other)\n+// action: a string describing the action (\"SYNC\" or \"GET_LATEST_SYNC_TOKEN\" here)\n+// log: a handler to the Log facility\n+// options: a handler to the OperationOptions Map (null if action = \"GET_LATEST_SYNC_TOKEN\")\n+// token: a handler to an Object representing the sync token (null if action = \"GET_LATEST_SYNC_TOKEN\")\n+//\n+//\n+// Returns:\n+// if action = \"GET_LATEST_SYNC_TOKEN\", it must return an object representing the last known\n+// sync token for the corresponding ObjectClass\n+// \n+// if action = \"SYNC\":\n+// A list of Maps . Each map describing one update:\n+// Map should look like the following:\n+//\n+// [\n+// \"token\": <Object> token object (could be Integer, Date, String) , [!! could be null]\n+// \"operation\":<String> (\"CREATE_OR_UPDATE\"|\"DELETE\")  will always default to CREATE_OR_DELETE ,\n+// \"uid\":<String> uid  (uid of the entry) ,\n+// \"previousUid\":<String> prevuid (This is for rename ops) ,\n+// \"password\":<String> password (optional... allows to pass clear text password if needed),\n+// \"attributes\":Map<String,List> of attributes name/values\n+// ]\n+\n+def addAttributes(it) {\n+  value = it.stringValue;\n+  if (value == null) {\n+    value = it.longValue;\n+  }\n+  if (value == null) {\n+    value = it.doubleValue;\n+  }\n+  if (value == null) {\n+    if (it.dateValue instanceof java.sql.Timestamp) {\n+      value = new Date(it.dateValue.getTime()).format(\"yyyy-MM-dd HH:mm:ss\");\n+    }\n+  }\n+  if (value == null) {\n+    value = it.booleanValue;\n+  }\n+          \n+  if (options[OperationOptions.OP_ATTRIBUTES_TO_GET].contains(it.schema_name)) {\n+    attributes.put(it.schema_name, value);\n+    withValues.add(it.schema_name);\n+  }\n+}\n+\n+log.ok(\"Entering \" + action + \" script\");\n+\n+def sql = new Sql(connection);\n+\n+if (action.equalsIgnoreCase(\"GET_LATEST_SYNC_TOKEN\")) {\n+  switch (objectClass) {\n+  case \"__ACCOUNT__\":    \n+    row = sql.firstRow(\"SELECT lastChangeDate FROM USER_SEARCH ORDER BY lastChangeDate DESC\");\n+    log.ok(\"Get Latest Sync Token script: last token is: \" + row[\"lastChangeDate\"])\n+    break;\n+    \n+  case \"__GROUP__\":    \n+    row = sql.firstRow(\"SELECT lastChangeDate FROM ROLE_SEARCH ORDER BY lastChangeDate DESC\");\n+    log.ok(\"Get Latest Sync Token script: last token is: \" + row[\"lastChangeDate\"])\n+    break;\n+\n+  default:\n+    row = null;\n+  }\n+\n+  return row == null ? null : row[\"lastChangeDate\"].getTime();\n+} else if (action.equalsIgnoreCase(\"SYNC\")) {\n+  def result = [];\n+  def lastChangeDate = null;\n+  if (token == null) {\n+    lastChangeDate = new Date(0);\n+  } else {\n+    lastChangeDate = new Date(token);\n+  }\n+\n+  switch (objectClass) {\n+  case \"__ACCOUNT__\":    \n+    sql.eachRow(\"SELECT * FROM USER_SEARCH WHERE lastChangeDate > ${lastChangeDate}\",\n+      {\n+        attributes = [\n+          __UID__: it.username, \n+          __NAME__: it.username, \n+          username: it.username,\n+          __PASSWORD__: new GuardedString(it.password.toCharArray()),\n+          cipherAlgorithm: it.cipherAlgorithm,\n+          __ENABLE__: it.suspended == 0\n+        ];\n+\n+        withValues = ['__UID__', '__NAME__', '__PASSWORD__', 'cipherAlgorithm', '__ENABLE__', 'username'];\n+      \n+        sql.eachRow(\"SELECT * FROM USER_SEARCH_ATTR WHERE subject_id = \" + it.id, {\n+            addAttributes(it);\n+          });\n+        sql.eachRow(\"SELECT * FROM USER_SEARCH_UNIQUE_ATTR WHERE subject_id = \" + it.id, {\n+            addAttributes(it);\n+          });\n+      \n+        for (attr in options[OperationOptions.OP_ATTRIBUTES_TO_GET]) {\n+          if (!withValues.contains(attr)) {\n+            attributes.put(attr, null);          \n+          }\n+        }\n+      \n+        resources = [];\n+        sql.eachRow(\"SELECT DISTINCT * FROM USER_SEARCH_RESOURCE WHERE subject_id = \" + it.id, {\n+            resources.add(it.resource_name);\n+          });      \n+        attributes.put('__RESOURCES__', resources);\n+\n+        result.add([\n+            operation:\"CREATE_OR_UPDATE\", \n+            uid: it.username, \n+            token: it.lastChangeDate.getTime(), \n+            attributes: attributes\n+          ]);\n+      }\n+    )\n+    break;\n+  \n+  case \"__GROUP__\":    \n+    sql.eachRow(\"SELECT * FROM ROLE_SEARCH WHERE lastChangeDate > ${lastChangeDate}\",\n+      {\n+        name = it.id + ' ' + it.name;\n+        attributes = [\n+          __UID__: name, \n+          __NAME__: name, \n+          __ENABLE__: true, \n+          name: name\n+        ];\n+      \n+        withValues = ['__UID__', '__NAME__', '__ENABLE__', 'name'];\n+      \n+        sql.eachRow(\"SELECT * FROM ROLE_SEARCH_ATTR WHERE subject_id = \" + it.id, {\n+            addAttributes(it);\n+          });\n+        sql.eachRow(\"SELECT * FROM ROLE_SEARCH_UNIQUE_ATTR WHERE subject_id = \" + it.id, {\n+            addAttributes(it);\n+          });\n+      \n+        for (attr in options[OperationOptions.OP_ATTRIBUTES_TO_GET]) {\n+          if (!withValues.contains(attr)) {\n+            attributes.put(attr, null);          \n+          }\n+        }\n+\n+        resources = [];\n+        sql.eachRow(\"SELECT DISTINCT * FROM ROLE_SEARCH_RESOURCE WHERE subject_id = \" + it.id, {\n+            resources.add(it.resource_name);\n+          });      \n+        attributes.put('__RESOURCES__', resources);\n+\n+        memberships = [];\n+        sql.eachRow(\"SELECT u.username as username FROM USER_SEARCH_MEMBERSHIP usm, USER_SEARCH u \"\n+          +\"WHERE u.subject_id=usm.subject_id AND usm.role_id =\" + it.id, {\n+            memberships.add(it.username);\n+          });      \n+        item.put('__MEMBERSHIPS__', memberships);\n+\n+        result.add([\n+            operation:\"CREATE_OR_UPDATE\", \n+            uid: name, \n+            token: it.lastChangeDate.getTime(), \n+            attributes: attributes\n+          ]);\n+      }\n+    )\n+    break;\n+  }\n+  \n+  log.ok(\"Sync script: found \" + result.size() + \" events to sync\");\n+  return result;\n+} else {\n+  log.error(\"Sync script: action '\" + action + \"' is not implemented in this script\");\n+  return null;\n+}"},{"sha":"3bd25bd73e10c22f0a2282fef57e1351e35e622c","filename":"core/migration/src/main/resources/scripted/TestScript.groovy","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FTestScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FTestScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmigration%2Fsrc%2Fmain%2Fresources%2Fscripted%2FTestScript.groovy?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import groovy.sql.Sql;\n+\n+// Parameters:\n+// The connector sends the following:\n+// connection: handler to the SQL connection\n+// action: a string describing the action (\"TEST\" here)\n+// log: a handler to the Log facility\n+\n+log.ok(\"Entering \" + action + \" script\");\n+\n+def sql = new Sql(connection);\n+sql.eachRow(\"SELECT COUNT(*) AS TEST FROM USER_SEARCH\", { println it.TEST});\n+\n+log.ok(action + \" script done\");"},{"sha":"733fd1825889e1fdf6b621c87884f1568b0ac67e","filename":"core/pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -87,6 +87,7 @@ under the License.\n     <module>workflow-activiti</module>\n     <module>logic</module>\n     <module>rest-cxf</module>\n+    <module>migration</module>\n   </modules>\n \n </project>"},{"sha":"ead65e2f4f863a206c841f853e95db10ec89f21e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/SetUMembershipsJob.java","status":"added","additions":92,"deletions":0,"changes":92,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSetUMembershipsJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSetUMembershipsJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FSetUMembershipsJob.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java.job;\n+\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.syncope.common.lib.patch.MembershipPatch;\n+import org.apache.syncope.common.lib.patch.UserPatch;\n+import org.apache.syncope.common.lib.to.MembershipTO;\n+import org.apache.syncope.common.lib.types.PatchOperation;\n+import org.apache.syncope.core.provisioning.api.UserProvisioningManager;\n+import org.apache.syncope.core.provisioning.api.job.JobManager;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n+import org.quartz.JobExecutionContext;\n+import org.quartz.JobExecutionException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+/**\n+ * Quartz Job used for setting user memberships asynchronously, after the completion of\n+ * {@link org.apache.syncope.core.provisioning.api.pushpull.PullActions}.\n+ */\n+public class SetUMembershipsJob extends AbstractInterruptableJob {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(SetUMembershipsJob.class);\n+\n+    public static final String MEMBERSHIPS_KEY = \"memberships\";\n+\n+    @Autowired\n+    private UserProvisioningManager userProvisioningManager;\n+\n+    @Override\n+    public void execute(final JobExecutionContext context) throws JobExecutionException {\n+        super.execute(context);\n+\n+        try {\n+            AuthContextUtils.execWithAuthContext(context.getMergedJobDataMap().getString(JobManager.DOMAIN_KEY),\n+                    new AuthContextUtils.Executable<Void>() {\n+\n+                @Override\n+                public Void exec() {\n+                    @SuppressWarnings(\"unchecked\")\n+                    Map<String, Set<String>> memberships =\n+                            (Map<String, Set<String>>) context.getMergedJobDataMap().get(MEMBERSHIPS_KEY);\n+\n+                    LOG.debug(\"About to set memberships (User -> Groups) {}\", memberships);\n+\n+                    for (Map.Entry<String, Set<String>> membership : memberships.entrySet()) {\n+                        UserPatch userPatch = new UserPatch();\n+                        userPatch.setKey(membership.getKey());\n+\n+                        for (String groupKey : membership.getValue()) {\n+                            userPatch.getMemberships().add(\n+                                    new MembershipPatch.Builder().\n+                                    operation(PatchOperation.ADD_REPLACE).\n+                                    membershipTO(new MembershipTO.Builder().group(groupKey).build()).\n+                                    build());\n+                        }\n+\n+                        if (!userPatch.isEmpty()) {\n+                            LOG.debug(\"About to update User {}\", userPatch.getKey());\n+                            userProvisioningManager.update(userPatch, true);\n+                        }\n+                    }\n+\n+                    return null;\n+                }\n+            });\n+        } catch (RuntimeException e) {\n+            LOG.error(\"While setting memberships\", e);\n+            throw new JobExecutionException(\"While executing memberships\", e);\n+        }\n+    }\n+\n+}"},{"sha":"1036a1f800e44216b2c6855cbae7c0af4d68ad61","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/TaskJob.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FTaskJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FTaskJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FTaskJob.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -85,8 +85,7 @@ public Void exec() {\n \n                     return null;\n                 }\n-            }\n-            );\n+            });\n         } catch (RuntimeException e) {\n             LOG.error(\"While executing task {}\", taskKey, e);\n             throw new JobExecutionException(\"While executing task \" + taskKey, e);"},{"sha":"b0f02f5218cd3054d8885fff1bf64439de0977f3","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -576,8 +576,8 @@ protected ConnectorObject getRemoteObject(\n         try {\n             obj = connector.getObject(new ObjectClass(task.getObjectClassName()),\n                     new Uid(connObjectKey),\n-                    MappingManagerImpl.buildOperationOptions(IteratorUtils.chainedIterator(MappingManagerImpl.\n-                            getPropagationMappingItems(provision).iterator(),\n+                    MappingManagerImpl.buildOperationOptions(IteratorUtils.chainedIterator(\n+                            MappingManagerImpl.getPropagationMappingItems(provision).iterator(),\n                             linkingMappingItems.iterator())));\n \n             for (MappingItem item : linkingMappingItems) {"},{"sha":"5562d3c670ada4f1d1683daea80ff9d55cbadb93","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DBPasswordPullActions.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDBPasswordPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDBPasswordPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDBPasswordPullActions.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -122,7 +122,7 @@ public boolean evaluate(final ConnConfProperty property) {\n                 : (String) cipherAlgorithm.getValues().get(0);\n     }\n \n-    @Transactional(readOnly = true)\n+    @Transactional\n     @Override\n     public <A extends AnyTO> void after(\n             final ProvisioningProfile<?, ?> profile,\n@@ -131,9 +131,9 @@ public <A extends AnyTO> void after(\n             final ProvisioningReport result) throws JobExecutionException {\n \n         if (any instanceof UserTO && encodedPassword != null && cipher != null) {\n-            User syncopeUser = userDAO.find(any.getKey());\n-            if (syncopeUser != null) {\n-                syncopeUser.setEncodedPassword(encodedPassword.toUpperCase(), cipher);\n+            User user = userDAO.find(any.getKey());\n+            if (user != null) {\n+                user.setEncodedPassword(encodedPassword.toUpperCase(), cipher);\n             }\n             encodedPassword = null;\n             cipher = null;"},{"sha":"cac2f859cfa944738b9d08af85eb5b09c1827de4","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/LDAPMembershipPullActions.java","status":"modified","additions":33,"deletions":169,"changes":202,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPMembershipPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPMembershipPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPMembershipPullActions.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -20,39 +20,21 @@\n \n import java.util.Collections;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n-import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.common.lib.patch.AnyPatch;\n-import org.apache.syncope.common.lib.patch.MembershipPatch;\n-import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.to.MembershipTO;\n-import org.apache.syncope.common.lib.types.AuditElements;\n-import org.apache.syncope.common.lib.types.AuditElements.Result;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n-import org.apache.syncope.common.lib.types.PatchOperation;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n-import org.apache.syncope.core.persistence.api.entity.group.Group;\n-import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n-import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n import org.apache.syncope.core.provisioning.api.Connector;\n-import org.apache.syncope.core.provisioning.api.WorkflowResult;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationException;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n-import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n-import org.apache.syncope.core.persistence.api.entity.user.UMembership;\n-import org.apache.syncope.core.provisioning.api.AuditManager;\n-import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n-import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n@@ -63,14 +45,15 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n+import org.apache.syncope.core.provisioning.java.job.SetUMembershipsJob;\n \n /**\n  * Simple action for pulling LDAP groups memberships to Syncope group memberships, when the same resource is\n  * configured for both users and groups.\n  *\n  * @see org.apache.syncope.core.provisioning.java.propagation.LDAPMembershipPropagationActions\n  */\n-public class LDAPMembershipPullActions extends DefaultPullActions {\n+public class LDAPMembershipPullActions extends SchedulingPullActions {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(LDAPMembershipPullActions.class);\n \n@@ -83,25 +66,10 @@ public class LDAPMembershipPullActions extends DefaultPullActions {\n     @Autowired\n     protected GroupDAO groupDAO;\n \n-    @Autowired\n-    protected UserWorkflowAdapter uwfAdapter;\n-\n-    @Autowired\n-    protected PropagationManager propagationManager;\n-\n-    @Autowired\n-    private PropagationTaskExecutor taskExecutor;\n-\n-    @Autowired\n-    private NotificationManager notificationManager;\n-\n-    @Autowired\n-    private AuditManager auditManager;\n-\n     @Autowired\n     private PullUtils pullUtils;\n \n-    protected Map<String, String> membersBeforeGroupUpdate = Collections.<String, String>emptyMap();\n+    protected final Map<String, Set<String>> memberships = new HashMap<>();\n \n     /**\n      * Allows easy subclassing for the ConnId AD connector bundle.\n@@ -125,59 +93,6 @@ public boolean evaluate(final ConnConfProperty property) {\n                 : (String) groupMembership.getValues().get(0);\n     }\n \n-    /**\n-     * Keep track of members of the group being updated <b>before</b> actual update takes place. This is not needed on\n-     * <ul> <li>beforeProvision() - because the pulling group does not exist yet on Syncope</li>\n-     * <li>beforeDelete() - because group delete cascades as membership removal for all users involved</li> </ul>\n-     *\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public <A extends AnyTO, M extends AnyPatch> SyncDelta beforeUpdate(\n-            final ProvisioningProfile<?, ?> profile,\n-            final SyncDelta delta, final A any, final M anyPatch) throws JobExecutionException {\n-\n-        if (any instanceof GroupTO) {\n-            // search for all users assigned to given group\n-            Group group = groupDAO.find(any.getKey());\n-            if (group != null) {\n-                List<UMembership> membs = groupDAO.findUMemberships(group);\n-                // save memberships before group update takes place\n-                membersBeforeGroupUpdate = new HashMap<>(membs.size());\n-                for (UMembership memb : membs) {\n-                    membersBeforeGroupUpdate.put(memb.getLeftEnd().getKey(), memb.getKey());\n-                }\n-            }\n-        }\n-\n-        return super.beforeUpdate(profile, delta, any, anyPatch);\n-    }\n-\n-    /**\n-     * Build UserPatch for adding membership to given user, for given group.\n-     *\n-     * @param userKey user to be assigned membership to given group\n-     * @param groupTO group for adding membership\n-     * @return UserPatch for user update\n-     */\n-    protected UserPatch getUserPatch(final String userKey, final GroupTO groupTO) {\n-        UserPatch userPatch = new UserPatch();\n-        // no actual modification takes place when user has already the group assigned\n-        if (membersBeforeGroupUpdate.containsKey(userKey)) {\n-            membersBeforeGroupUpdate.remove(userKey);\n-        } else {\n-            userPatch.setKey(userKey);\n-\n-            userPatch.getMemberships().add(\n-                    new MembershipPatch.Builder().\n-                    operation(PatchOperation.ADD_REPLACE).\n-                    membershipTO(new MembershipTO.Builder().group(groupTO.getKey(), null).build()).\n-                    build());\n-        }\n-\n-        return userPatch;\n-    }\n-\n     /**\n      * Read values of attribute returned by getGroupMembershipAttrName(); if not present in the given delta, perform an\n      * additional read on the underlying connector.\n@@ -211,58 +126,6 @@ protected List<Object> getMembAttrValues(final SyncDelta delta, final Connector\n         return result;\n     }\n \n-    /**\n-     * Perform actual modifications (i.e. membership add / remove) for the given group on the given resource.\n-     *\n-     * @param userPatch modifications to perform on the user\n-     * @param resourceName resource to be propagated for changes\n-     */\n-    protected void userUpdate(final UserPatch userPatch, final String resourceName) {\n-        if (userPatch.getKey() == null) {\n-            return;\n-        }\n-\n-        Result result;\n-\n-        WorkflowResult<Pair<UserPatch, Boolean>> updated = null;\n-\n-        try {\n-            updated = uwfAdapter.update(userPatch);\n-\n-            List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(\n-                    updated, false, Collections.singleton(resourceName));\n-\n-            taskExecutor.execute(tasks);\n-            result = Result.SUCCESS;\n-        } catch (PropagationException e) {\n-            result = Result.FAILURE;\n-            LOG.error(\"Could not propagate {}\", userPatch, e);\n-        } catch (Exception e) {\n-            result = Result.FAILURE;\n-            LOG.error(\"Could not perform update {}\", userPatch, e);\n-        }\n-\n-        notificationManager.createTasks(AuditElements.EventCategoryType.PULL,\n-                this.getClass().getSimpleName(),\n-                null,\n-                \"update\",\n-                result,\n-                null, // searching for before object is too much expensive ... \n-                updated == null ? null : updated.getResult().getKey(),\n-                userPatch,\n-                resourceName);\n-\n-        auditManager.audit(AuditElements.EventCategoryType.PULL,\n-                this.getClass().getSimpleName(),\n-                null,\n-                \"update\",\n-                result,\n-                null, // searching for before object is too much expensive ... \n-                updated == null ? null : updated.getResult().getKey(),\n-                userPatch,\n-                resourceName);\n-    }\n-\n     /**\n      * Pull Syncope memberships with the situation read on the external resource's group.\n      *\n@@ -271,38 +134,18 @@ protected void userUpdate(final UserPatch userPatch, final String resourceName)\n      * @param groupTO group after modification performed by the handler\n      * @throws JobExecutionException if anything goes wrong\n      */\n-    protected void pullMemberships(\n+    protected void populateMemberships(\n             final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final GroupTO groupTO)\n             throws JobExecutionException {\n \n-        ProvisioningTask task = profile.getTask();\n-        ExternalResource resource = task.getResource();\n         Connector connector = profile.getConnector();\n-\n         for (Object membValue : getMembAttrValues(delta, connector)) {\n-            String userKey = pullUtils.findMatchingAnyKey(\n-                    anyTypeDAO.findUser(),\n-                    membValue.toString(),\n-                    profile.getTask().getResource(),\n-                    profile.getConnector());\n-            if (userKey != null) {\n-                UserPatch userPatch = getUserPatch(userKey, groupTO);\n-                userUpdate(userPatch, resource.getKey());\n+            Set<String> memb = memberships.get(membValue.toString());\n+            if (memb == null) {\n+                memb = new HashSet<>();\n+                memberships.put(membValue.toString(), memb);\n             }\n-        }\n-\n-        // finally remove any residual membership that was present before group update but not any more\n-        for (Map.Entry<String, String> member : membersBeforeGroupUpdate.entrySet()) {\n-            UserPatch userPatch = new UserPatch();\n-            userPatch.setKey(member.getKey());\n-\n-            userPatch.getMemberships().add(\n-                    new MembershipPatch.Builder().\n-                    operation(PatchOperation.DELETE).\n-                    membershipTO(new MembershipTO.Builder().group(groupTO.getKey(), null).build()).\n-                    build());\n-\n-            userUpdate(userPatch, resource.getKey());\n+            memb.add(groupTO.getKey());\n         }\n     }\n \n@@ -327,7 +170,28 @@ public <A extends AnyTO> void after(\n \n             super.after(profile, delta, any, result);\n         } else {\n-            pullMemberships(profile, delta, (GroupTO) any);\n+            populateMemberships(profile, delta, (GroupTO) any);\n+        }\n+    }\n+\n+    @Override\n+    public void afterAll(final ProvisioningProfile<?, ?> profile) throws JobExecutionException {\n+        Map<String, Set<String>> resolvedMemberships = new HashMap<>();\n+        for (Map.Entry<String, Set<String>> entry : this.memberships.entrySet()) {\n+            String userKey = pullUtils.findMatchingAnyKey(\n+                    anyTypeDAO.findUser(),\n+                    entry.getKey(),\n+                    profile.getTask().getResource(),\n+                    profile.getConnector());\n+            if (userKey == null) {\n+                LOG.warn(\"Could not find matching user for {}\", entry.getKey());\n+            } else {\n+                resolvedMemberships.put(userKey, entry.getValue());\n+            }\n         }\n+\n+        Map<String, Object> jobMap = new HashMap<>();\n+        jobMap.put(SetUMembershipsJob.MEMBERSHIPS_KEY, resolvedMemberships);\n+        schedule(SetUMembershipsJob.class, jobMap);\n     }\n }"},{"sha":"9ffbcb5a92237ed6d9d02646f446f248d89dabf6","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/LDAPPasswordPullActions.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPPasswordPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPPasswordPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPPasswordPullActions.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -38,7 +38,7 @@\n import org.springframework.transaction.annotation.Transactional;\n \n /**\n- * A {@link org.apache.syncope.core.provisioning.api.pushpull.PullActions} implementation which allows the ability to \n+ * A {@link org.apache.syncope.core.provisioning.api.pushpull.PullActions} implementation which allows the ability to\n  * import passwords from an LDAP backend that are hashed.\n  */\n public class LDAPPasswordPullActions extends DefaultPullActions {\n@@ -100,7 +100,7 @@ private void parseEncodedPassword(final String password) {\n         }\n     }\n \n-    @Transactional(readOnly = true)\n+    @Transactional\n     @Override\n     public <A extends AnyTO> void after(\n             final ProvisioningProfile<?, ?> profile,"},{"sha":"e8de10f002e2a4cd2ecba0a2a44f9a83fe8fa64e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/SchedulingPullActions.java","status":"added","additions":75,"deletions":0,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSchedulingPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSchedulingPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSchedulingPullActions.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java.pushpull;\n+\n+import java.util.Map;\n+import java.util.UUID;\n+import org.apache.syncope.core.provisioning.api.job.JobManager;\n+import org.apache.syncope.core.provisioning.api.job.JobNamer;\n+import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.spring.security.AuthContextUtils;\n+import org.quartz.Job;\n+import org.quartz.JobBuilder;\n+import org.quartz.JobDataMap;\n+import org.quartz.JobExecutionException;\n+import org.quartz.SchedulerException;\n+import org.quartz.Trigger;\n+import org.quartz.TriggerBuilder;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.support.AbstractBeanDefinition;\n+import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n+\n+/**\n+ * Superclass for pull actions that need to schedule actions to run after their completion.\n+ *\n+ * @see LDAPMembershipPullActions for a concrete example\n+ */\n+public abstract class SchedulingPullActions extends DefaultPullActions {\n+\n+    @Autowired\n+    protected SchedulerFactoryBean scheduler;\n+\n+    protected <T extends Job> void schedule(final Class<T> reference, final Map<String, Object> jobMap)\n+            throws JobExecutionException {\n+\n+        @SuppressWarnings(\"unchecked\")\n+        T jobInstance = (T) ApplicationContextProvider.getBeanFactory().\n+                createBean(reference, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n+        String jobName = getClass().getName() + UUID.randomUUID();\n+\n+        jobMap.put(JobManager.DOMAIN_KEY, AuthContextUtils.getDomain());\n+        jobMap.put(JobManager.INTERRUPT_MAX_RETRIES_KEY, 1L);\n+\n+        ApplicationContextProvider.getBeanFactory().registerSingleton(jobName, jobInstance);\n+\n+        JobBuilder jobDetailBuilder = JobBuilder.newJob(reference).\n+                withIdentity(jobName).\n+                usingJobData(new JobDataMap(jobMap));\n+\n+        TriggerBuilder<Trigger> triggerBuilder = TriggerBuilder.newTrigger().\n+                withIdentity(JobNamer.getTriggerName(jobName)).\n+                startNow();\n+\n+        try {\n+            scheduler.getScheduler().scheduleJob(jobDetailBuilder.build(), triggerBuilder.build());\n+        } catch (SchedulerException e) {\n+            throw new JobExecutionException(\"Could not schedule, aborting\", e);\n+        }\n+    }\n+}"},{"sha":"6890a9b137ec91b58cebb57bd99c9f64bd97a868","filename":"fit/core-reference/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -55,6 +55,11 @@ under the License.\n       <artifactId>jstl</artifactId>\n     </dependency>\n     \n+    <dependency>\n+      <groupId>org.apache.syncope.core</groupId>\n+      <artifactId>syncope-core-migration</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n     <dependency>\n       <groupId>org.apache.syncope.core</groupId>\n       <artifactId>syncope-core-rest-cxf</artifactId>"},{"sha":"beb4cf0f5f1de6a6f8b24d0909a5d764f448f3db","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ConnectorITCase.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConnectorITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConnectorITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FConnectorITCase.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -73,9 +73,9 @@ public class ConnectorITCase extends AbstractITCase {\n \n     private static String connectorServerLocation;\n \n-    private static String connidSoapVersion;\n+    private static String connIdSoapVersion;\n \n-    private static String connidDbTableVersion;\n+    private static String connIdDbVersion;\n \n     private static String testJDBCURL;\n \n@@ -93,8 +93,8 @@ public static void setUpConnIdBundles() throws IOException {\n                 }\n             }\n \n-            connidSoapVersion = props.getProperty(\"connid.soap.version\");\n-            connidDbTableVersion = props.getProperty(\"connid.database.version\");\n+            connIdSoapVersion = props.getProperty(\"connid.soap.version\");\n+            connIdDbVersion = props.getProperty(\"connid.database.version\");\n \n             testJDBCURL = props.getProperty(\"testdb.url\");\n         } catch (Exception e) {\n@@ -103,8 +103,8 @@ public static void setUpConnIdBundles() throws IOException {\n             IOUtils.closeQuietly(propStream);\n         }\n         assertNotNull(connectorServerLocation);\n-        assertNotNull(connidSoapVersion);\n-        assertNotNull(connidDbTableVersion);\n+        assertNotNull(connIdSoapVersion);\n+        assertNotNull(connIdDbVersion);\n         assertNotNull(testJDBCURL);\n     }\n \n@@ -123,7 +123,7 @@ public void create() {\n         ConnInstanceTO connectorTO = new ConnInstanceTO();\n         connectorTO.setLocation(connectorService.read(\n                 \"88a7a819-dab5-46b4-9b90-0b9769eabdb8\", Locale.ENGLISH.getLanguage()).getLocation());\n-        connectorTO.setVersion(connidSoapVersion);\n+        connectorTO.setVersion(connIdSoapVersion);\n         connectorTO.setConnectorName(\"net.tirasa.connid.bundles.soap.WebServiceConnector\");\n         connectorTO.setBundleName(\"net.tirasa.connid.bundles.soap\");\n         connectorTO.setDisplayName(\"Display name\");\n@@ -226,7 +226,7 @@ public void update() {\n         connectorTO.setKey(\"fcf9f2b0-f7d6-42c9-84a6-61b28255a42b\");\n \n         // set connector version\n-        connectorTO.setVersion(connidSoapVersion);\n+        connectorTO.setVersion(connIdSoapVersion);\n \n         // set connector name\n         connectorTO.setConnectorName(\"net.tirasa.connid.bundles.soap.WebServiceConnector\");\n@@ -454,7 +454,7 @@ public void checkSelectedLanguage() {\n     public void validate() {\n         ConnInstanceTO connectorTO = new ConnInstanceTO();\n         connectorTO.setLocation(connectorServerLocation);\n-        connectorTO.setVersion(connidDbTableVersion);\n+        connectorTO.setVersion(connIdDbVersion);\n         connectorTO.setConnectorName(\"net.tirasa.connid.bundles.db.table.DatabaseTableConnector\");\n         connectorTO.setBundleName(\"net.tirasa.connid.bundles.db.table\");\n         connectorTO.setDisplayName(\"H2Test\");\n@@ -592,7 +592,7 @@ public void issueSYNCOPE112() {\n                 \"88a7a819-dab5-46b4-9b90-0b9769eabdb8\", Locale.ENGLISH.getLanguage()).getLocation());\n \n         // set connector version\n-        connectorTO.setVersion(connidSoapVersion);\n+        connectorTO.setVersion(connIdSoapVersion);\n \n         // set connector name\n         connectorTO.setConnectorName(\"net.tirasa.connid.bundles.soap.WebServiceConnector\");"},{"sha":"1cec39a078ced01994ccfefe19a173d0e7043ad0","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/MigrationITCase.java","status":"added","additions":518,"deletions":0,"changes":518,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMigrationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMigrationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMigrationITCase.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -0,0 +1,518 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.core;\n+\n+import static org.aspectj.bridge.MessageUtil.fail;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Properties;\n+import javax.ws.rs.core.Response;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.syncope.common.lib.to.AbstractTaskTO;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.ConnInstanceTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.MappingItemTO;\n+import org.apache.syncope.common.lib.to.MappingTO;\n+import org.apache.syncope.common.lib.to.MembershipTO;\n+import org.apache.syncope.common.lib.to.PlainSchemaTO;\n+import org.apache.syncope.common.lib.to.ProvisionTO;\n+import org.apache.syncope.common.lib.to.PullTaskTO;\n+import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.lib.to.ResourceTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.AttrSchemaType;\n+import org.apache.syncope.common.lib.types.ConnConfPropSchema;\n+import org.apache.syncope.common.lib.types.ConnConfProperty;\n+import org.apache.syncope.common.lib.types.ConnectorCapability;\n+import org.apache.syncope.common.lib.types.IntMappingType;\n+import org.apache.syncope.common.lib.types.MappingPurpose;\n+import org.apache.syncope.common.lib.types.PullMode;\n+import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.common.lib.types.TaskType;\n+import org.apache.syncope.common.rest.api.beans.TaskQuery;\n+import org.apache.syncope.common.rest.api.service.ConnectorService;\n+import org.apache.syncope.common.rest.api.service.TaskService;\n+import org.apache.syncope.core.migration.MigrationPullActions;\n+import org.identityconnectors.common.security.GuardedString;\n+import org.identityconnectors.framework.common.objects.ObjectClass;\n+import org.junit.BeforeClass;\n+import org.junit.FixMethodOrder;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.jdbc.datasource.DriverManagerDataSource;\n+import org.springframework.test.context.ContextConfiguration;\n+\n+@ContextConfiguration(locations = { \"classpath:migrationContext.xml\" })\n+@FixMethodOrder(MethodSorters.JVM)\n+public class MigrationITCase extends AbstractTaskITCase {\n+\n+    private static final String CONNINSTANCE_DISPLAY_NAME = \"syncope12DB\";\n+\n+    private static final String RESOURCE_KEY = \"Syncope 1.2\";\n+\n+    private static final String MIGRATION_CIPHER_ALGORITHM = \"migrationCipherAlgorithm\";\n+\n+    private static final String MIGRATION_RESOURCES_SCHEMA = \"migrationResources\";\n+\n+    private static final String MIGRATION_MEMBERSHIPS_SCHEMA = \"migrationMemberships\";\n+\n+    private static final String MIGRATION_ANYTYPE_CLASS = \"migration\";\n+\n+    private static final String MIGRATION_REALM = \"migration\";\n+\n+    private static final String PULL_TASK_NAME = \"Syncope 1.2 migration\";\n+\n+    private static String basedir;\n+\n+    private static String connectorServerLocation;\n+\n+    private static String connIdDbVersion;\n+\n+    @BeforeClass\n+    public static void setup() throws IOException {\n+        InputStream propStream = null;\n+        try {\n+            Properties props = new Properties();\n+            propStream = MigrationITCase.class.getResourceAsStream(\"/test.properties\");\n+            props.load(propStream);\n+            IOUtils.closeQuietly(propStream);\n+            propStream = MigrationITCase.class.getResourceAsStream(\"/connid.properties\");\n+            props.load(propStream);\n+\n+            basedir = props.getProperty(\"basedir\");\n+\n+            for (String location : props.getProperty(\"connid.locations\").split(\",\")) {\n+                if (!location.startsWith(\"file\")) {\n+                    connectorServerLocation = location;\n+                }\n+            }\n+\n+            connIdDbVersion = props.getProperty(\"connid.database.version\");\n+        } catch (Exception e) {\n+            LOG.error(\"Could not load /connid.properties\", e);\n+        } finally {\n+            IOUtils.closeQuietly(propStream);\n+        }\n+\n+        assertNotNull(basedir);\n+        assertNotNull(connectorServerLocation);\n+        assertNotNull(connIdDbVersion);\n+    }\n+\n+    @Autowired\n+    private DriverManagerDataSource syncope12DataSource;\n+\n+    private String setupAnyTypeClass() {\n+        PlainSchemaTO cipherAlgorithm = new PlainSchemaTO();\n+        cipherAlgorithm.setKey(MIGRATION_CIPHER_ALGORITHM);\n+        cipherAlgorithm.setType(AttrSchemaType.String);\n+        cipherAlgorithm.setReadonly(true);\n+        cipherAlgorithm = createSchema(SchemaType.PLAIN, cipherAlgorithm);\n+\n+        PlainSchemaTO migrationResources = new PlainSchemaTO();\n+        migrationResources.setKey(MIGRATION_RESOURCES_SCHEMA);\n+        migrationResources.setType(AttrSchemaType.String);\n+        migrationResources.setMultivalue(true);\n+        migrationResources.setReadonly(true);\n+        migrationResources = createSchema(SchemaType.PLAIN, migrationResources);\n+\n+        PlainSchemaTO migrationMemberships = new PlainSchemaTO();\n+        migrationMemberships.setKey(MIGRATION_MEMBERSHIPS_SCHEMA);\n+        migrationMemberships.setType(AttrSchemaType.String);\n+        migrationMemberships.setMultivalue(true);\n+        migrationMemberships.setReadonly(true);\n+        migrationMemberships = createSchema(SchemaType.PLAIN, migrationMemberships);\n+\n+        AnyTypeClassTO migration = new AnyTypeClassTO();\n+        migration.setKey(MIGRATION_ANYTYPE_CLASS);\n+        migration.getPlainSchemas().add(cipherAlgorithm.getKey());\n+        migration.getPlainSchemas().add(migrationResources.getKey());\n+        migration.getPlainSchemas().add(migrationMemberships.getKey());\n+\n+        Response response = anyTypeClassService.create(migration);\n+        assertEquals(Response.Status.CREATED.getStatusCode(), response.getStatusInfo().getStatusCode());\n+\n+        return MIGRATION_ANYTYPE_CLASS;\n+    }\n+\n+    private String setupConnector() {\n+        ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n+        connInstanceTO.setLocation(connectorServerLocation);\n+        connInstanceTO.setConnectorName(\"net.tirasa.connid.bundles.db.scriptedsql.ScriptedSQLConnector\");\n+        connInstanceTO.setBundleName(\"net.tirasa.connid.bundles.db.scriptedsql\");\n+        connInstanceTO.setVersion(connIdDbVersion);\n+        connInstanceTO.setDisplayName(CONNINSTANCE_DISPLAY_NAME);\n+\n+        ConnConfPropSchema schema = new ConnConfPropSchema();\n+        schema.setName(\"user\");\n+        schema.setType(String.class.getName());\n+        ConnConfProperty property = new ConnConfProperty();\n+        property.setSchema(schema);\n+        property.getValues().add(syncope12DataSource.getUsername());\n+        connInstanceTO.getConf().add(property);\n+\n+        schema = new ConnConfPropSchema();\n+        schema.setName(\"password\");\n+        schema.setType(GuardedString.class.getName());\n+        property = new ConnConfProperty();\n+        property.setSchema(schema);\n+        property.getValues().add(syncope12DataSource.getPassword());\n+        connInstanceTO.getConf().add(property);\n+\n+        schema = new ConnConfPropSchema();\n+        schema.setName(\"jdbcDriver\");\n+        property = new ConnConfProperty();\n+        property.setSchema(schema);\n+        property.getValues().add(\"org.h2.Driver\");\n+        connInstanceTO.getConf().add(property);\n+\n+        schema = new ConnConfPropSchema();\n+        schema.setName(\"jdbcUrlTemplate\");\n+        property = new ConnConfProperty();\n+        property.setSchema(schema);\n+        property.getValues().add(syncope12DataSource.getUrl());\n+        connInstanceTO.getConf().add(property);\n+\n+        schema = new ConnConfPropSchema();\n+        schema.setName(\"testScriptFileName\");\n+        property = new ConnConfProperty();\n+        property.setSchema(schema);\n+        property.getValues().add(basedir + \"/../../core/migration/src/main/resources/scripted/TestScript.groovy\");\n+        connInstanceTO.getConf().add(property);\n+\n+        schema = new ConnConfPropSchema();\n+        schema.setName(\"schemaScriptFileName\");\n+        property = new ConnConfProperty();\n+        property.setSchema(schema);\n+        property.getValues().add(basedir + \"/../../core/migration/src/main/resources/scripted/SchemaScript.groovy\");\n+        connInstanceTO.getConf().add(property);\n+\n+        schema = new ConnConfPropSchema();\n+        schema.setName(\"searchScriptFileName\");\n+        property = new ConnConfProperty();\n+        property.setSchema(schema);\n+        property.getValues().add(basedir + \"/../../core/migration/src/main/resources/scripted/SearchScript.groovy\");\n+        connInstanceTO.getConf().add(property);\n+\n+        schema = new ConnConfPropSchema();\n+        schema.setName(\"syncScriptFileName\");\n+        property = new ConnConfProperty();\n+        property.setSchema(schema);\n+        property.getValues().add(basedir + \"/../../core/migration/src/main/resources/scripted/SyncScript.groovy\");\n+        connInstanceTO.getConf().add(property);\n+\n+        connInstanceTO.getCapabilities().add(ConnectorCapability.SEARCH);\n+        connInstanceTO.getCapabilities().add(ConnectorCapability.SYNC);\n+\n+        Response response = connectorService.create(connInstanceTO);\n+        connInstanceTO = getObject(response.getLocation(), ConnectorService.class, ConnInstanceTO.class);\n+\n+        try {\n+            connectorService.check(connInstanceTO);\n+        } catch (Exception e) {\n+            fail(\"Unexpected exception\", e);\n+        }\n+\n+        return connInstanceTO.getKey();\n+    }\n+\n+    private void setupResource(final String connectorKey, final String anyTypeClass) {\n+        ResourceTO resourceTO = new ResourceTO();\n+\n+        resourceTO.setKey(RESOURCE_KEY);\n+        resourceTO.setConnector(connectorKey);\n+\n+        // USER\n+        ProvisionTO provisionTO = new ProvisionTO();\n+        provisionTO.setAnyType(AnyTypeKind.USER.name());\n+        provisionTO.setObjectClass(ObjectClass.ACCOUNT_NAME);\n+        provisionTO.getAuxClasses().add(anyTypeClass);\n+        resourceTO.getProvisions().add(provisionTO);\n+\n+        MappingTO mapping = new MappingTO();\n+        provisionTO.setMapping(mapping);\n+\n+        MappingItemTO item = new MappingItemTO();\n+        item.setIntAttrName(\"username\");\n+        item.setIntMappingType(IntMappingType.Username);\n+        item.setExtAttrName(\"username\");\n+        item.setMandatoryCondition(\"true\");\n+        item.setPurpose(MappingPurpose.PULL);\n+        mapping.setConnObjectKeyItem(item);\n+\n+        item = new MappingItemTO();\n+        item.setPassword(true);\n+        item.setIntAttrName(\"password\");\n+        item.setIntMappingType(IntMappingType.Password);\n+        item.setExtAttrName(\"__PASSWORD__\");\n+        item.setMandatoryCondition(\"true\");\n+        item.setPurpose(MappingPurpose.PULL);\n+        mapping.add(item);\n+\n+        item = new MappingItemTO();\n+        item.setIntAttrName(MIGRATION_CIPHER_ALGORITHM);\n+        item.setIntMappingType(IntMappingType.UserPlainSchema);\n+        item.setExtAttrName(\"cipherAlgorithm\");\n+        item.setMandatoryCondition(\"true\");\n+        item.setPurpose(MappingPurpose.PULL);\n+        mapping.add(item);\n+\n+        item = new MappingItemTO();\n+        item.setIntAttrName(\"surname\");\n+        item.setIntMappingType(IntMappingType.UserPlainSchema);\n+        item.setExtAttrName(\"surname\");\n+        item.setMandatoryCondition(\"false\");\n+        item.setPurpose(MappingPurpose.PULL);\n+        mapping.add(item);\n+\n+        item = new MappingItemTO();\n+        item.setIntAttrName(\"email\");\n+        item.setIntMappingType(IntMappingType.UserPlainSchema);\n+        item.setExtAttrName(\"email\");\n+        item.setMandatoryCondition(\"false\");\n+        item.setPurpose(MappingPurpose.PULL);\n+        mapping.add(item);\n+\n+        item = new MappingItemTO();\n+        item.setIntAttrName(\"firstname\");\n+        item.setIntMappingType(IntMappingType.UserPlainSchema);\n+        item.setExtAttrName(\"firstname\");\n+        item.setMandatoryCondition(\"false\");\n+        item.setPurpose(MappingPurpose.PULL);\n+        mapping.add(item);\n+\n+        item = new MappingItemTO();\n+        item.setIntAttrName(\"ctype\");\n+        item.setIntMappingType(IntMappingType.UserPlainSchema);\n+        item.setExtAttrName(\"type\");\n+        item.setMandatoryCondition(\"false\");\n+        item.setPurpose(MappingPurpose.PULL);\n+        mapping.add(item);\n+\n+        item = new MappingItemTO();\n+        item.setIntAttrName(\"gender\");\n+        item.setIntMappingType(IntMappingType.UserPlainSchema);\n+        item.setExtAttrName(\"gender\");\n+        item.setMandatoryCondition(\"false\");\n+        item.setPurpose(MappingPurpose.PULL);\n+        mapping.add(item);\n+\n+        item = new MappingItemTO();\n+        item.setIntAttrName(\"loginDate\");\n+        item.setIntMappingType(IntMappingType.UserPlainSchema);\n+        item.setExtAttrName(\"loginDate\");\n+        item.setMandatoryCondition(\"false\");\n+        item.setPurpose(MappingPurpose.PULL);\n+        mapping.add(item);\n+\n+        item = new MappingItemTO();\n+        item.setIntAttrName(MIGRATION_RESOURCES_SCHEMA);\n+        item.setIntMappingType(IntMappingType.UserPlainSchema);\n+        item.setExtAttrName(\"__RESOURCES__\");\n+        item.setMandatoryCondition(\"false\");\n+        item.setPurpose(MappingPurpose.PULL);\n+        mapping.add(item);\n+\n+        // GROUP\n+        provisionTO = new ProvisionTO();\n+        provisionTO.setAnyType(AnyTypeKind.GROUP.name());\n+        provisionTO.setObjectClass(ObjectClass.GROUP_NAME);\n+        provisionTO.getAuxClasses().add(anyTypeClass);\n+        resourceTO.getProvisions().add(provisionTO);\n+\n+        mapping = new MappingTO();\n+        provisionTO.setMapping(mapping);\n+\n+        item = new MappingItemTO();\n+        item.setIntAttrName(\"groupName\");\n+        item.setIntMappingType(IntMappingType.GroupName);\n+        item.setExtAttrName(\"name\");\n+        item.setMandatoryCondition(\"true\");\n+        item.setPurpose(MappingPurpose.PULL);\n+        mapping.setConnObjectKeyItem(item);\n+\n+        item = new MappingItemTO();\n+        item.setIntAttrName(\"show\");\n+        item.setIntMappingType(IntMappingType.GroupPlainSchema);\n+        item.setExtAttrName(\"show\");\n+        item.setMandatoryCondition(\"false\");\n+        item.setPurpose(MappingPurpose.PULL);\n+        mapping.add(item);\n+\n+        item = new MappingItemTO();\n+        item.setIntAttrName(\"title\");\n+        item.setIntMappingType(IntMappingType.GroupPlainSchema);\n+        item.setExtAttrName(\"title\");\n+        item.setMandatoryCondition(\"false\");\n+        item.setPurpose(MappingPurpose.PULL);\n+        mapping.add(item);\n+\n+        item = new MappingItemTO();\n+        item.setIntAttrName(\"icon\");\n+        item.setIntMappingType(IntMappingType.GroupPlainSchema);\n+        item.setExtAttrName(\"icon\");\n+        item.setMandatoryCondition(\"false\");\n+        item.setPurpose(MappingPurpose.PULL);\n+        mapping.add(item);\n+\n+        item = new MappingItemTO();\n+        item.setIntAttrName(MIGRATION_RESOURCES_SCHEMA);\n+        item.setIntMappingType(IntMappingType.GroupPlainSchema);\n+        item.setExtAttrName(\"__RESOURCES__\");\n+        item.setMandatoryCondition(\"false\");\n+        item.setPurpose(MappingPurpose.PULL);\n+        mapping.add(item);\n+\n+        item = new MappingItemTO();\n+        item.setIntAttrName(MIGRATION_MEMBERSHIPS_SCHEMA);\n+        item.setIntMappingType(IntMappingType.UserPlainSchema);\n+        item.setExtAttrName(\"__MEMBERSHIPS__\");\n+        item.setMandatoryCondition(\"false\");\n+        item.setPurpose(MappingPurpose.PULL);\n+        mapping.add(item);\n+\n+        resourceService.create(resourceTO);\n+    }\n+\n+    private void setupRealm() {\n+        RealmTO realm = new RealmTO();\n+        realm.setName(MIGRATION_REALM);\n+\n+        realmService.create(\"/\", realm);\n+    }\n+\n+    private String setupPullTask() {\n+        PullTaskTO task = new PullTaskTO();\n+        task.setActive(true);\n+        task.setName(PULL_TASK_NAME);\n+        task.setResource(RESOURCE_KEY);\n+        task.setPerformCreate(true);\n+        task.setPullStatus(true);\n+        task.setPullMode(PullMode.FULL_RECONCILIATION);\n+        task.setDestinationRealm(\"/\" + MIGRATION_REALM);\n+        task.getActionsClassNames().add(MigrationPullActions.class.getName());\n+\n+        UserTO user = new UserTO();\n+        user.getPlainAttrs().add(new AttrTO.Builder().schema(\"userId\").value(\"'12' + username + '@syncope.apache.org'\").\n+                build());\n+        user.getPlainAttrs().add(new AttrTO.Builder().schema(\"fullname\").value(\"username\").build());\n+        task.getTemplates().put(AnyTypeKind.USER.name(), user);\n+\n+        Response response = taskService.create(task);\n+        task = getObject(response.getLocation(), TaskService.class, PullTaskTO.class);\n+\n+        return task.getKey();\n+    }\n+\n+    @Test\n+    public void migrateFromSyncope12() throws InterruptedException {\n+        // 1. cleanup\n+        try {\n+            realmService.delete(MIGRATION_REALM);\n+        } catch (Exception e) {\n+            // ignore\n+        }\n+        try {\n+            for (AbstractTaskTO task : taskService.list(\n+                    new TaskQuery.Builder(TaskType.PULL).resource(RESOURCE_KEY).build()).getResult()) {\n+\n+                if (PULL_TASK_NAME.equals(PullTaskTO.class.cast(task).getName())) {\n+                    taskService.delete(task.getKey());\n+                }\n+            }\n+        } catch (Exception e) {\n+            // ignore\n+        }\n+        try {\n+            resourceService.delete(RESOURCE_KEY);\n+        } catch (Exception e) {\n+            // ignore\n+        }\n+        try {\n+            for (ConnInstanceTO connInstance : connectorService.list(null)) {\n+                if (CONNINSTANCE_DISPLAY_NAME.equals(connInstance.getDisplayName())) {\n+                    connectorService.delete(connInstance.getKey());\n+                }\n+            }\n+        } catch (Exception e) {\n+            // ignore\n+        }\n+        try {\n+            schemaService.delete(SchemaType.PLAIN, MIGRATION_CIPHER_ALGORITHM);\n+            schemaService.delete(SchemaType.PLAIN, MIGRATION_MEMBERSHIPS_SCHEMA);\n+            schemaService.delete(SchemaType.PLAIN, MIGRATION_RESOURCES_SCHEMA);\n+            anyTypeClassService.delete(MIGRATION_ANYTYPE_CLASS);\n+        } catch (Exception e) {\n+            // ignore\n+        }\n+\n+        // 2. setup\n+        setupResource(setupConnector(), setupAnyTypeClass());\n+        setupRealm();\n+        String pullTaskKey = setupPullTask();\n+\n+        // 3. execute pull task\n+        execProvisioningTask(taskService, pullTaskKey, 50, false);\n+\n+        Thread.sleep(2000L);\n+\n+        // 4. verify\n+        UserTO user = userService.read(\"rossini12\");\n+        assertNotNull(user);\n+        assertEquals(\"/\" + MIGRATION_REALM, user.getRealm());\n+        GroupTO group = groupService.read(\"12 aRoleForPropagation12\");\n+        assertNotNull(group);\n+        assertEquals(\"/\" + MIGRATION_REALM, group.getRealm());\n+\n+        // 4a. user plain attrs\n+        assertEquals(\"Gioacchino\", user.getPlainAttrMap().get(\"firstname\").getValues().get(0));\n+        assertEquals(\"Rossini\", user.getPlainAttrMap().get(\"surname\").getValues().get(0));\n+\n+        // 4b. user resources\n+        assertTrue(user.getResources().contains(RESOURCE_NAME_TESTDB2));\n+\n+        // 4c. user memberships\n+        assertTrue(IterableUtils.matchesAny(user.getMemberships(), new Predicate<MembershipTO>() {\n+\n+            @Override\n+            public boolean evaluate(final MembershipTO object) {\n+                return \"1 root12\".equals(object.getGroupName());\n+            }\n+        }));\n+\n+        // 4d. user password\n+        assertNotNull(clientFactory.create(\"bellini12\", ADMIN_PWD).self());\n+\n+        // 4e. group plain attrs\n+        assertEquals(\"r12\", group.getPlainAttrMap().get(\"title\").getValues().get(0));\n+\n+        // 4f. group resources\n+        assertTrue(group.getResources().contains(RESOURCE_NAME_CSV));\n+    }\n+}"},{"sha":"d3725250fe992dbcff6a47131523eb9bc0abd3fd","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -376,6 +376,14 @@ public void reconcileFromLDAP() {\n         assertEquals(matchingUsers.getResult().iterator().next().getKey(), groupTO.getUserOwner());\n         assertNull(groupTO.getGroupOwner());\n \n+        // 4. verify that LDAP group membership is propagated as Syncope membership\n+        PagedResult<UserTO> members = userService.search(\n+                new AnySearchQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n+                fiql(SyncopeClient.getUserSearchConditionBuilder().inGroups(groupTO.getKey()).query()).\n+                build());\n+        assertNotNull(members);\n+        assertEquals(1, members.getResult().size());\n+\n         // SYNCOPE-317\n         execProvisioningTask(taskService, \"1e419ca4-ea81-4493-a14f-28b90113686d\", 50, false);\n     }"},{"sha":"bd83dcaba129b355609638121ca246479eda178c","filename":"fit/core-reference/src/test/resources/migrationContext.xml","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2FmigrationContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2FmigrationContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2FmigrationContext.xml?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -0,0 +1,51 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n+                           http://www.springframework.org/schema/beans/spring-beans.xsd\">\n+\n+  <bean id=\"syncope12DataSource\"\n+        class=\"org.springframework.jdbc.datasource.DriverManagerDataSource\">\n+    <property name=\"driverClassName\" value=\"${testdb.driver}\"/>\n+    <property name=\"url\" value=\"jdbc:h2:tcp://localhost:9092/mem:syncope12db;DB_CLOSE_DELAY=-1\"/>\n+    <property name=\"username\" value=\"${testdb.username}\"/>\n+    <property name=\"password\" value=\"${testdb.password}\"/>\n+  </bean>\n+  <bean id=\"syncope12DataSourceInit\" class=\"org.springframework.jdbc.datasource.init.DataSourceInitializer\">\n+    <property name=\"dataSource\" ref=\"syncope12DataSource\"/>\n+    <property name=\"enabled\" value=\"true\"/>\n+    <property name=\"databasePopulator\">\n+      <bean class=\"org.springframework.jdbc.datasource.init.ResourceDatabasePopulator\">\n+        <property name=\"continueOnError\" value=\"true\"/>\n+        <property name=\"ignoreFailedDrops\" value=\"true\"/>\n+        <property name=\"sqlScriptEncoding\" value=\"UTF-8\"/>\n+        <property name=\"scripts\">\n+          <array>\n+            <value type=\"org.springframework.core.io.Resource\">\n+              classpath:/syncope12.sql\n+            </value>\n+          </array>\n+        </property>\n+      </bean>\n+    </property>\n+  </bean>\n+\n+</beans>"},{"sha":"06e50e0f8189c833ae91f2fc60494887c5e86013","filename":"fit/core-reference/src/test/resources/rebel.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frebel.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frebel.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frebel.xml?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -56,6 +56,8 @@ under the License.\n     <dir name=\"${basedir}/../../core/workflow-activiti/target/classes\">\n       <exclude name=\"workflowActivitiContext.xml\"/>\n     </dir>\n+    <dir name=\"${basedir}/../../core/migration/target/classes\">\n+    </dir>\n     <dir name=\"${basedir}/../../ext/camel/common-lib/target/classes\">\n     </dir>\n     <dir name=\"${basedir}/../../ext/camel/logic/target/classes\">"},{"sha":"0c199a71dd9719b4494353f54929b2a221e433c2","filename":"fit/core-reference/src/test/resources/syncope12.sql","status":"added","additions":2265,"deletions":0,"changes":2265,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fsyncope12.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fsyncope12.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fsyncope12.sql?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b"},{"sha":"5a81ddc8b0e8d7f2e921b728f357d991cf607bd6","filename":"fit/core-reference/src/test/resources/test.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Ftest.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Ftest.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Ftest.properties?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+basedir=${basedir}"},{"sha":"0e8a59cf4d76ba6acaf64abce97efdd5978799f7","filename":"pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ef167750a6889ab0168aea1af2b1a10a8deb68b/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ef167750a6889ab0168aea1af2b1a10a8deb68b/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=9ef167750a6889ab0168aea1af2b1a10a8deb68b","patch":"@@ -327,7 +327,7 @@ under the License.\n \n     <connid.version>1.4.2.0</connid.version>\n     <connid.soap.version>1.4.1</connid.soap.version>\n-    <connid.database.version>2.2.3</connid.database.version>\n+    <connid.database.version>2.2.4-SNAPSHOT</connid.database.version>\n     <connid.csvdir.version>0.8.4</connid.csvdir.version>\n     <connid.ldap.version>1.5.1</connid.ldap.version>\n     <connid.ad.version>1.3.1</connid.ad.version>\n@@ -1463,7 +1463,7 @@ under the License.\n                 <downloadDir>${settings.localRepository}/org/codehaus/cargo/cargo-container-archives</downloadDir>\n                 <extractDir>${project.build.directory}/cargo/extract</extractDir>\n               </zipUrlInstaller>\n-              <timeout>240000</timeout>\n+              <timeout>300000</timeout>\n               <log>${cargo.log}</log>\n               <output>${cargo.output}</output>    \n             </container>"}]}