{"sha":"43c4d8ea89c4f97b193451e506bc876d6c5c99be","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQzYzRkOGVhODljNGY5N2IxOTM0NTFlNTA2YmM4NzZkNmM1Yzk5YmU=","commit":{"author":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2016-01-19T15:36:22Z"},"committer":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2016-01-19T15:36:34Z"},"message":"[SYNCOPE-719] Auxiliary classes can be managed dyamically during self creation/update","tree":{"sha":"5d8a74c6c055cd1506287affe77aa49fbab345be","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5d8a74c6c055cd1506287affe77aa49fbab345be"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/43c4d8ea89c4f97b193451e506bc876d6c5c99be","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/43c4d8ea89c4f97b193451e506bc876d6c5c99be","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/43c4d8ea89c4f97b193451e506bc876d6c5c99be","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/43c4d8ea89c4f97b193451e506bc876d6c5c99be/comments","author":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"committer":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"parents":[{"sha":"53afc1308426d2ea5529c98c7f787305f9f27bfa","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/53afc1308426d2ea5529c98c7f787305f9f27bfa","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/53afc1308426d2ea5529c98c7f787305f9f27bfa"}],"stats":{"total":759,"additions":595,"deletions":164},"files":[{"sha":"902a276d4e6ce3fb6a921434ce6a377c487d1fca","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserApplication.java","status":"modified","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserApplication.java?ref=43c4d8ea89c4f97b193451e506bc876d6c5c99be","patch":"@@ -34,6 +34,8 @@\n import org.apache.syncope.client.enduser.resources.LogoutResource;\n import org.apache.syncope.client.enduser.resources.SchemaResource;\n import org.apache.syncope.client.enduser.resources.SecurityQuestionResource;\n+import org.apache.syncope.client.enduser.resources.SyncopeAnyClassTypeResource;\n+import org.apache.syncope.client.enduser.resources.SyncopeAnyTypeResource;\n import org.apache.syncope.client.enduser.resources.SyncopeGroupResource;\n import org.apache.syncope.client.enduser.resources.SyncopeResourceResource;\n import org.apache.syncope.client.enduser.resources.UserSelfCreateResource;\n@@ -267,6 +269,26 @@ public IResource getResource() {\n             }\n         });\n \n+        mountResource(\"/api/auxiliaryClasses\", new ResourceReference(\"auxClasses\") {\n+\n+            private static final long serialVersionUID = -128426276529456602L;\n+\n+            @Override\n+            public IResource getResource() {\n+                return new SyncopeAnyClassTypeResource();\n+            }\n+        });\n+\n+        mountResource(\"/api/anyTypes\", new ResourceReference(\"anyType\") {\n+\n+            private static final long serialVersionUID = -128426276529456602L;\n+\n+            @Override\n+            public IResource getResource() {\n+                return new SyncopeAnyTypeResource();\n+            }\n+        });\n+\n     }\n \n     @Override"},{"sha":"5585a41f757c1912f5c50e0f15900263816b300c","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/adapters/UserTOAdapter.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FUserTOAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FUserTOAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fadapters%2FUserTOAdapter.java?ref=43c4d8ea89c4f97b193451e506bc876d6c5c99be","patch":"@@ -58,6 +58,8 @@ public UserTO fromUserTORequest(final UserTORequest userTORequest, final String\n         userTO.getResources().addAll(userTORequest.getResources());\n         // add memberships\n         userTO.getMemberships().addAll(userTORequest.getMemberships());\n+        // add auxiliary classes\n+        userTO.getAuxClasses().addAll(userTORequest.getAuxClasses());\n \n         return userTO;\n     }\n@@ -74,11 +76,13 @@ public UserTORequest toUserTORequest(final UserTO userTO) {\n         userTORequest.getPlainAttrs().putAll(userTO.getPlainAttrMap());\n         userTORequest.getDerAttrs().putAll(userTO.getDerAttrMap());\n         userTORequest.getVirAttrs().putAll(userTO.getVirAttrMap());\n-        \n+\n         userTORequest.getResources().addAll(userTO.getResources());\n-               \n+\n         userTORequest.getMemberships().addAll(userTO.getMemberships());\n \n+        userTORequest.getAuxClasses().addAll(userTO.getAuxClasses());\n+\n         return userTORequest;\n     }\n "},{"sha":"0af6a7648880b7265a17c6ccd4fd48dfe0c802be","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/model/UserTORequest.java","status":"modified","additions":17,"deletions":2,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FUserTORequest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FUserTORequest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fmodel%2FUserTORequest.java?ref=43c4d8ea89c4f97b193451e506bc876d6c5c99be","patch":"@@ -52,9 +52,11 @@ public class UserTORequest implements Serializable {\n     private Map<String, AttrTO> virAttrs = new HashMap<>();\n \n     private Set<String> resources = new HashSet<>();\n-    \n+\n     private List<MembershipTO> memberships = new ArrayList<>();\n \n+    private List<String> auxClasses = new ArrayList<>();\n+\n     public UserTORequest() {\n     }\n \n@@ -137,7 +139,7 @@ public Set<String> getResources() {\n     public void setResources(final Set<String> resources) {\n         this.resources = resources;\n     }\n-    \n+\n     public List<MembershipTO> getMemberships() {\n         return memberships;\n     }\n@@ -146,6 +148,14 @@ public void setMemberships(final List<MembershipTO> memberships) {\n         this.memberships = memberships;\n     }\n \n+    public List<String> getAuxClasses() {\n+        return this.auxClasses;\n+    }\n+\n+    public void setAuxClasses(final List<String> auxClasses) {\n+        this.auxClasses = auxClasses;\n+    }\n+\n     public UserTORequest key(final Long value) {\n         this.key = value;\n         return this;\n@@ -196,6 +206,11 @@ public UserTORequest resources(final Set<String> value) {\n         return this;\n     }\n \n+    public UserTORequest auxClasses(final List<String> value) {\n+        this.auxClasses = value;\n+        return this;\n+    }\n+\n     @Override\n     public String toString() {\n         return ToStringBuilder.reflectionToString(this);"},{"sha":"4783b799240d5a416a955a10dfb4790912b78b3d","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SchemaResource.java","status":"modified","additions":11,"deletions":3,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSchemaResource.java?ref=43c4d8ea89c4f97b193451e506bc876d6c5c99be","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.enduser.resources;\n \n import java.io.IOException;\n+import java.util.ArrayList;\n import java.util.List;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n@@ -72,15 +73,22 @@ protected AbstractResource.ResourceResponse newResourceResponse(final IResource.\n \n             final AnyTypeTO anyTypeUserTO = anyTypeService.read(AnyTypeKind.USER.name());\n \n+            List<String> classes = new ArrayList<>();\n+            String parameter = attributes.getParameters().get(\"anyTypeClass\").toString();\n+            if (parameter != null) {\n+                classes.add(parameter);\n+            } else {\n+                classes = anyTypeUserTO.getClasses();\n+            }\n             final List<PlainSchemaTO> plainSchemas = schemaService.list(\n                     new SchemaQuery.Builder().type(SchemaType.PLAIN).\n-                    anyTypeClasses(anyTypeUserTO.getClasses()).build());\n+                    anyTypeClasses(classes).build());\n             final List<DerSchemaTO> derSchemas = schemaService.list(\n                     new SchemaQuery.Builder().type(SchemaType.DERIVED).\n-                    anyTypeClasses(anyTypeUserTO.getClasses()).build());\n+                    anyTypeClasses(classes).build());\n             final List<VirSchemaTO> virSchemas = schemaService.list(\n                     new SchemaQuery.Builder().type(SchemaType.VIRTUAL).\n-                    anyTypeClasses(anyTypeUserTO.getClasses()).build());\n+                    anyTypeClasses(classes).build());\n \n             response.setWriteCallback(new AbstractResource.WriteCallback() {\n "},{"sha":"c2c3efcf051dfc1f6238c4bf7578fb35f232260c","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SyncopeAnyClassTypeResource.java","status":"added","additions":86,"deletions":0,"changes":86,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeAnyClassTypeResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeAnyClassTypeResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeAnyClassTypeResource.java?ref=43c4d8ea89c4f97b193451e506bc876d6c5c99be","patch":"@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.resources;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.syncope.client.enduser.adapters.GroupTOAdapter;\n+import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n+import org.apache.syncope.common.rest.api.service.AnyTypeClassService;\n+import org.apache.syncope.core.misc.serialization.POJOHelper;\n+import org.apache.wicket.request.resource.AbstractResource;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class SyncopeAnyClassTypeResource extends AbstractBaseResource {\n+\n+    private static final long serialVersionUID = 7475706378304995200L;\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(SyncopeAnyClassTypeResource.class);\n+\n+    private final AnyTypeClassService anyTypeClassService;\n+\n+    private final GroupTOAdapter groupTOAdapter;\n+\n+    public SyncopeAnyClassTypeResource() {\n+        groupTOAdapter = new GroupTOAdapter();\n+        anyTypeClassService = SyncopeEnduserSession.get().getService(AnyTypeClassService.class);\n+    }\n+\n+    @Override\n+    protected ResourceResponse newResourceResponse(final Attributes attributes) {\n+\n+        LOG.debug(\"Get all available auxiliary classes\");\n+\n+        ResourceResponse response = new ResourceResponse();\n+\n+        try {\n+\n+            HttpServletRequest request = (HttpServletRequest) attributes.getRequest().getContainerRequest();\n+            if (!xsrfCheck(request)) {\n+                LOG.error(\"XSRF TOKEN does not match\");\n+                response.setError(Response.Status.BAD_REQUEST.getStatusCode(), \"XSRF TOKEN does not match\");\n+                return response;\n+            }\n+\n+            final List<AnyTypeClassTO> anyTypeClassTOs = anyTypeClassService.list();\n+\n+            response.setWriteCallback(new AbstractResource.WriteCallback() {\n+\n+                @Override\n+                public void writeData(final Attributes attributes) throws IOException {\n+                    attributes.getResponse().write(POJOHelper.serialize(anyTypeClassTOs));\n+                }\n+            });\n+            response.setStatusCode(Response.Status.OK.getStatusCode());\n+        } catch (Exception e) {\n+            LOG.error(\"Error retrieving available auxiliary classes\", e);\n+            response.setError(Response.Status.BAD_REQUEST.getStatusCode(), new StringBuilder()\n+                    .append(\"ErrorMessage{{ \")\n+                    .append(e.getMessage())\n+                    .append(\" }}\")\n+                    .toString());\n+        }\n+        return response;\n+    }\n+\n+}"},{"sha":"7d2bcde5b9415d9bc29d767bc783d6ccd2882553","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SyncopeAnyTypeResource.java","status":"added","additions":82,"deletions":0,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeAnyTypeResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeAnyTypeResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSyncopeAnyTypeResource.java?ref=43c4d8ea89c4f97b193451e506bc876d6c5c99be","patch":"@@ -0,0 +1,82 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.resources;\n+\n+import java.io.IOException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n+import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.rest.api.service.AnyTypeService;\n+import org.apache.syncope.core.misc.serialization.POJOHelper;\n+import org.apache.wicket.request.resource.AbstractResource;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class SyncopeAnyTypeResource extends AbstractBaseResource {\n+\n+    private static final long serialVersionUID = 7475706378304995200L;\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(SyncopeAnyTypeResource.class);\n+\n+    private final AnyTypeService anyTypeService;\n+\n+    public SyncopeAnyTypeResource() {\n+        anyTypeService = SyncopeEnduserSession.get().getService(AnyTypeService.class);\n+    }\n+\n+    @Override\n+    protected ResourceResponse newResourceResponse(final Attributes attributes) {\n+\n+        LOG.debug(\"Get all available auxiliary classes\");\n+\n+        ResourceResponse response = new ResourceResponse();\n+\n+        try {\n+\n+            HttpServletRequest request = (HttpServletRequest) attributes.getRequest().getContainerRequest();\n+            if (!xsrfCheck(request)) {\n+                LOG.error(\"XSRF TOKEN does not match\");\n+                response.setError(Response.Status.BAD_REQUEST.getStatusCode(), \"XSRF TOKEN does not match\");\n+                return response;\n+            }\n+\n+            String kind = attributes.getParameters().get(0).toString();\n+            final AnyTypeTO anyTypeTO = anyTypeService.read(kind);\n+\n+            response.setWriteCallback(new AbstractResource.WriteCallback() {\n+\n+                @Override\n+                public void writeData(final Attributes attributes) throws IOException {\n+                    attributes.getResponse().write(POJOHelper.serialize(anyTypeTO));\n+                }\n+            });\n+            response.setStatusCode(Response.Status.OK.getStatusCode());\n+        } catch (Exception e) {\n+            LOG.error(\"Error retrieving available any type details\", e);\n+            response.setError(Response.Status.BAD_REQUEST.getStatusCode(), new StringBuilder()\n+                    .append(\"ErrorMessage{{ \")\n+                    .append(e.getMessage())\n+                    .append(\" }}\")\n+                    .toString());\n+        }\n+        return response;\n+    }\n+\n+}"},{"sha":"6ab3b314a52d2f3182d91be24226d54de11287bb","filename":"client/enduser/src/main/resources/META-INF/resources/app/index.html","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Findex.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Findex.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Findex.html?ref=43c4d8ea89c4f97b193451e506bc876d6c5c99be","patch":"@@ -86,6 +86,7 @@\n     <script src=\"js/services/infoService.js\"></script>\n     <script src=\"js/services/resourceService.js\"></script>\n     <script src=\"js/services/groupService.js\"></script>\n+    <script src=\"js/services/anyService.js\"></script>\n     <script src=\"js/services/captchaService.js\"></script>\n     <!--controllers-->\n     <script src=\"js/controllers/HomeController.js\"></script>\n@@ -105,6 +106,7 @@\n     <script src=\"js/directives/captcha.js\"></script>\n     <script src=\"js/directives/resources.js\"></script>\n     <script src=\"js/directives/groups.js\"></script>\n+    <script src=\"js/directives/auxClasses.js\"></script>\n     <!--filters-->\n     <script src=\"js/filters/propsFilter.js\"></script>\n "},{"sha":"0390b7af0835d7a04a73d54dd9ace2d1c8cbd4aa","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/controllers/UserController.js","status":"modified","additions":217,"deletions":134,"changes":351,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js?ref=43c4d8ea89c4f97b193451e506bc876d6c5c99be","patch":"@@ -21,9 +21,9 @@\n \n angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$location', '$compile', 'AuthService',\n   'UserSelfService', 'SchemaService', 'RealmService', 'ResourceService', 'SecurityQuestionService', 'CaptchaService',\n-  'GroupService',\n+  'GroupService', 'AnyService',\n   function ($scope, $rootScope, $location, $compile, AuthService, UserSelfService, SchemaService, RealmService,\n-          ResourceService, SecurityQuestionService, CaptchaService, GroupService) {\n+          ResourceService, SecurityQuestionService, CaptchaService, GroupService, AnyService) {\n \n     $scope.user = {};\n     $scope.confirmPassword = {\n@@ -48,104 +48,111 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         virSchemas: [],\n         resources: [],\n         groups: [],\n+        auxClasses: [],\n+        anyUserType: [],\n         errorMessage: '',\n         attributeTable: {},\n         virtualAttributeTable: {},\n         selectedResources: [],\n-        selectedGroups: []\n+        selectedGroups: [],\n+        selectedAuxClasses: []\n       };\n \n-      var initSchemas = function () {\n+      var initUserSchemas = function (anyTypeClass) {\n         // initialization is done here synchronously to have all schema fields populated correctly\n-        SchemaService.getUserSchemas().then(function (schemas) {\n-          $scope.dynamicForm.plainSchemas = schemas.plainSchemas;\n-          $scope.dynamicForm.derSchemas = schemas.derSchemas;\n-          $scope.dynamicForm.virSchemas = schemas.virSchemas;\n+        SchemaService.getUserSchemas(anyTypeClass).then(function (schemas) {\n+          //initializing user schemas values\n+          initSchemaValues(schemas);\n+        }, function (response) {\n+          var errorMessage;\n+          // parse error response \n+          if (response !== undefined) {\n+            errorMessage = response.split(\"ErrorMessage{{\")[1];\n+            errorMessage = errorMessage.split(\"}}\")[0];\n+          }\n+          console.log(\"Error retrieving user schemas: \", errorMessage);\n+        });\n+      };\n \n-          // initialize plain attributes\n-          for (var i = 0; i < schemas.plainSchemas.length; i++) {\n+      var initSchemaValues = function (schemas) {\n+        // initialize plain attributes\n+        for (var i = 0; i < schemas.plainSchemas.length; i++) {\n \n-            var plainSchemaKey = schemas.plainSchemas[i].key;\n+          var plainSchemaKey = schemas.plainSchemas[i].key;\n \n-            if (!$scope.user.plainAttrs[plainSchemaKey]) {\n+          if (!$scope.user.plainAttrs[plainSchemaKey]) {\n \n-              $scope.user.plainAttrs[plainSchemaKey] = {\n-                schema: plainSchemaKey,\n-                values: [],\n-                readonly: schemas.plainSchemas[i].readonly\n-              };\n+            $scope.user.plainAttrs[plainSchemaKey] = {\n+              schema: plainSchemaKey,\n+              values: [],\n+              readonly: schemas.plainSchemas[i].readonly\n+            };\n \n-              // initialize multivalue schema and support table: create mode, only first value\n-              if (schemas.plainSchemas[i].multivalue) {\n-                $scope.dynamicForm.attributeTable[schemas.plainSchemas[i].key] = {\n-                  fields: [schemas.plainSchemas[i].key + \"_\" + 0]\n-                };\n-              }\n-            } else if (schemas.plainSchemas[i].multivalue) {\n-              // initialize multivalue schema and support table: update mode, all provided values\n+            // initialize multivalue schema and support table: create mode, only first value\n+            if (schemas.plainSchemas[i].multivalue) {\n               $scope.dynamicForm.attributeTable[schemas.plainSchemas[i].key] = {\n                 fields: [schemas.plainSchemas[i].key + \"_\" + 0]\n               };\n-              // add other values\n-              for (var j = 1; j < $scope.user.plainAttrs[plainSchemaKey].values.length; j++) {\n-                $scope.dynamicForm.attributeTable[schemas.plainSchemas[i].key].fields.push(schemas.plainSchemas[i].key + \"_\" + j);\n-              }\n+            }\n+          } else if (schemas.plainSchemas[i].multivalue) {\n+            // initialize multivalue schema and support table: update mode, all provided values\n+            $scope.dynamicForm.attributeTable[schemas.plainSchemas[i].key] = {\n+              fields: [schemas.plainSchemas[i].key + \"_\" + 0]\n+            };\n+            // add other values\n+            for (var j = 1; j < $scope.user.plainAttrs[plainSchemaKey].values.length; j++) {\n+              $scope.dynamicForm.attributeTable[schemas.plainSchemas[i].key].fields.push(schemas.plainSchemas[i].key + \"_\" + j);\n             }\n           }\n+        }\n \n-          // initialize derived attributes\n-          for (var i = 0; i < schemas.derSchemas.length; i++) {\n+        // initialize derived attributes\n+        for (var i = 0; i < schemas.derSchemas.length; i++) {\n \n-            var derSchemaKey = schemas.derSchemas[i].key;\n+          var derSchemaKey = schemas.derSchemas[i].key;\n \n-            if (!$scope.user.derAttrs[derSchemaKey]) {\n+          if (!$scope.user.derAttrs[derSchemaKey]) {\n \n-              $scope.user.derAttrs[derSchemaKey] = {\n-                schema: derSchemaKey,\n-                values: [],\n-                readonly: true\n-              };\n+            $scope.user.derAttrs[derSchemaKey] = {\n+              schema: derSchemaKey,\n+              values: [],\n+              readonly: true\n+            };\n \n-            }\n           }\n+        }\n \n-          // initialize virtual attributes\n-          for (var i = 0; i < schemas.virSchemas.length; i++) {\n+        // initialize virtual attributes\n+        for (var i = 0; i < schemas.virSchemas.length; i++) {\n \n-            var virSchemaKey = schemas.virSchemas[i].key;\n+          var virSchemaKey = schemas.virSchemas[i].key;\n \n-            if (!$scope.user.virAttrs[virSchemaKey]) {\n+          if (!$scope.user.virAttrs[virSchemaKey]) {\n \n-              $scope.user.virAttrs[virSchemaKey] = {\n-                schema: virSchemaKey,\n-                values: [],\n-                readonly: schemas.virSchemas[i].readonly\n-              };\n-              // initialize multivalue schema and support table: create mode, only first value\n-              $scope.dynamicForm.virtualAttributeTable[schemas.virSchemas[i].key] = {\n-                fields: [schemas.virSchemas[i].key + \"_\" + 0]\n-              };\n-            } else {\n-              // initialize multivalue schema and support table: update mode, all provided values\n-              $scope.dynamicForm.virtualAttributeTable[schemas.virSchemas[i].key] = {\n-                fields: [schemas.virSchemas[i].key + \"_\" + 0]\n-              };\n-              // add other values\n-              for (var j = 1; j < $scope.user.virAttrs[virSchemaKey].values.length; j++) {\n-                $scope.dynamicForm.virtualAttributeTable[schemas.virSchemas[i].key].fields.push(schemas.virSchemas[i].key + \"_\" + j);\n-              }\n+            $scope.user.virAttrs[virSchemaKey] = {\n+              schema: virSchemaKey,\n+              values: [],\n+              readonly: schemas.virSchemas[i].readonly\n+            };\n+            // initialize multivalue schema and support table: create mode, only first value\n+            $scope.dynamicForm.virtualAttributeTable[schemas.virSchemas[i].key] = {\n+              fields: [schemas.virSchemas[i].key + \"_\" + 0]\n+            };\n+          } else {\n+            // initialize multivalue schema and support table: update mode, all provided values\n+            $scope.dynamicForm.virtualAttributeTable[schemas.virSchemas[i].key] = {\n+              fields: [schemas.virSchemas[i].key + \"_\" + 0]\n+            };\n+            // add other values\n+            for (var j = 1; j < $scope.user.virAttrs[virSchemaKey].values.length; j++) {\n+              $scope.dynamicForm.virtualAttributeTable[schemas.virSchemas[i].key].fields.push(schemas.virSchemas[i].key + \"_\" + j);\n             }\n           }\n-\n-        }, function (response) {\n-          var errorMessage;\n-          // parse error response \n-          if (response !== undefined) {\n-            errorMessage = response.split(\"ErrorMessage{{\")[1];\n-            errorMessage = errorMessage.split(\"}}\")[0];\n-          }\n-          console.log(\"Error retrieving user schemas: \", errorMessage);\n-        });\n+        }\n+        //appending new schemas\n+        $scope.dynamicForm.plainSchemas = $scope.dynamicForm.plainSchemas.concat(schemas.plainSchemas);\n+        $scope.dynamicForm.derSchemas = $scope.dynamicForm.derSchemas.concat(schemas.derSchemas);\n+        $scope.dynamicForm.virSchemas = $scope.dynamicForm.virSchemas.concat(schemas.virSchemas);\n       };\n \n       var initSecurityQuestions = function () {\n@@ -188,6 +195,26 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         });\n       };\n \n+      var initAuxClasses = function () {\n+\n+        //fetching default user classes, that should remain in any case\n+        AnyService.getAnyType(\"USER\").then(function (response) {\n+          $scope.dynamicForm.anyUserType = response.classes;\n+          AnyService.getAuxClasses().then(function (response) {\n+            for (var i = 0; i < response.length; i++) {\n+              //we should only add schemas that aren't in the anyUserType\n+              if ($scope.dynamicForm.anyUserType.indexOf(response[i].key) == -1) {\n+                $scope.dynamicForm.auxClasses.push(response[i].key);\n+              }\n+            }\n+          }, function (e) {\n+            $scope.showError(\"An error occur during retrieving auxiliary classes \" + e, $scope.notification)\n+          });\n+        }, function (e) {\n+          $scope.showError(\"An error occur during retrieving auxiliary classes \" + e, $scope.notification)\n+        });\n+      };\n+\n       var readUser = function () {\n         UserSelfService.read().then(function (response) {\n           $scope.user = response;\n@@ -203,11 +230,48 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n                       \"groupName\": $scope.user.memberships[index][\"groupName\"]\n                     });\n           }\n-        }, function () {\n-          console.log(\"Error\");\n+          //initialize already assigned auxiliary classes\n+          $scope.dynamicForm.selectedAuxClasses = $scope.user.auxClasses;\n+          //we need to initialize axiliar attribute schemas\n+          for (var index in $scope.user.auxClasses) {\n+            $scope.$emit(\"auxClassAdded\", $scope.user.auxClasses[index]);\n+          }\n+        }, function (e) {\n+          console.log(\"Error during user read \", e);\n         });\n       };\n \n+      var removeUserSchemas = function (anyTypeClass) {\n+\n+        //removing plain schemas\n+        for (var i = 0; i < $scope.dynamicForm.plainSchemas.length; i++) {\n+          if ($scope.dynamicForm.plainSchemas[i].anyTypeClass == anyTypeClass) {\n+            //cleaning both form and user model\n+            delete $scope.user.plainAttrs[$scope.dynamicForm.plainSchemas[i].key];\n+            $scope.dynamicForm.plainSchemas.splice(i, 1);\n+            i--;\n+          }\n+        }\n+        //removing derived schemas\n+        for (var i = 0; i < $scope.dynamicForm.derSchemas.length; i++) {\n+          if ($scope.dynamicForm.derSchemas[i].anyTypeClass == anyTypeClass) {\n+            //cleaning both form and user model\n+            delete $scope.user.derAttrs[$scope.dynamicForm.derSchemas[i].key];\n+            $scope.dynamicForm.derSchemas.splice(i, 1);\n+            i--;\n+          }\n+        }\n+        //removing virtual schemas\n+        for (var i = 0; i < $scope.dynamicForm.virSchemas.length; i++) {\n+          if ($scope.dynamicForm.virSchemas[i].anyTypeClass == anyTypeClass) {\n+            //cleaning both form and user model\n+            delete $scope.user.virAttrs[$scope.dynamicForm.virSchemas[i].key];\n+            $scope.dynamicForm.virSchemas.splice(i, 1);\n+            i--;\n+          }\n+        }\n+      };\n+\n       if ($scope.createMode) {\n \n         $scope.user = {\n@@ -219,10 +283,15 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n           plainAttrs: {},\n           derAttrs: {},\n           virAttrs: {},\n-          resources: []\n+          resources: [],\n+          auxClasses: []\n         };\n         // retrieve user realm or all available realms\n         initUserRealm();\n+        // initialize auxiliary schemas in case of pre-existing classes\n+        for (var index in $scope.dynamicForm.selectedAuxClasses) {\n+          initUserSchemas($scope.dynamicForm.selectedAuxClasses[index]);\n+        }\n       } else {\n         // read user from syncope core\n         readUser();\n@@ -231,12 +300,26 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n       initRealms();\n       //retrieve security available questions\n       initSecurityQuestions();\n+      //initialize available auxiliary classes\n+      initAuxClasses();\n       // initialize user attributes starting from any object schemas\n-      initSchemas();\n+      initUserSchemas();\n       // initialize available resources\n       initResources();\n       //initialize available groups\n       initGroups();\n+\n+      //Event management\n+      $scope.$on('auxClassAdded', function (event, auxClass) {\n+        if (auxClass)\n+          initUserSchemas(auxClass);\n+      });\n+\n+      $scope.$on('auxClassRemoved', function (event, auxClass) {\n+        if (auxClass)\n+          removeUserSchemas(auxClass);\n+      });\n+\n     };\n \n     $scope.saveUser = function (user) {\n@@ -298,63 +381,63 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         $scope.showError(\"Error: \" + (errorMessage || response), $scope.notification);\n         return;\n       });\n-    },\n-            $scope.retrieveSecurityQuestion = function (user) {\n-              if ($rootScope.pwdResetRequiringSecurityQuestions) {\n-                if (user && user.username && user.username.length) {\n-                  return SecurityQuestionService.\n-                          getSecurityQuestionByUser(user.username).then(function (data) {\n-                    $scope.userSecurityQuestion = data.content;\n-                  }, function (response) {\n-                    var errorMessage;\n-                    // parse error response \n-                    if (response !== undefined) {\n-                      errorMessage = response.split(\"ErrorMessage{{\")[1];\n-                      errorMessage = errorMessage.split(\"}}\")[0];\n-                      $scope.userSecurityQuestion = \"\";\n-                    }\n-                    $scope.showError(\"Error retrieving user security question: \" + errorMessage, $scope.notification);\n-                  });\n-                }\n-                else {\n-                  $scope.userSecurityQuestion = \"\";\n-                }\n-              }\n-            },\n-            $scope.resetPassword = function (user) {\n-              if (user && user.username) {\n-                $scope.retrieveSecurityQuestion(user);\n-                CaptchaService.validate($scope.captchaInput).then(function (response) {\n-                  if (!(response === 'true')) {\n-                    $scope.showError(\"Captcha inserted is not valid, please digit the correct captcha\", $scope.notification);\n-                    return;\n-                  }\n-                  UserSelfService.passwordReset(user).then(function (data) {\n-                    $scope.showSuccess(data, $scope.notification);\n-                    $location.path('/self');\n-                  }, function (response) {\n-                    var errorMessage;\n-                    // parse error response \n-                    if (response !== undefined) {\n-                      errorMessage = response.split(\"ErrorMessage{{\")[1];\n-                      errorMessage = errorMessage.split(\"}}\")[0];\n-                      $scope.showError(\"An error occured during password reset: \" + errorMessage, $scope.notification);\n-                      //we need to refresh captcha after a valid request\n-                      $scope.$broadcast(\"refreshCaptcha\");\n-                    }\n-                  });\n-                }, function (response) {\n-                  var errorMessage;\n-                  // parse error response \n-                  if (response !== undefined) {\n-                    errorMessage = response.split(\"ErrorMessage{{\")[1];\n-                    errorMessage = errorMessage.split(\"}}\")[0];\n-                  }\n-                  $scope.showError(\"Error: \" + (errorMessage || response), $scope.notification);\n-                  return;\n-                });\n-              } else {\n-                $scope.showError(\"You should use a valid and non-empty username\", $scope.notification);\n-              }\n-            };\n+    };\n+    $scope.retrieveSecurityQuestion = function (user) {\n+      if ($rootScope.pwdResetRequiringSecurityQuestions) {\n+        if (user && user.username && user.username.length) {\n+          return SecurityQuestionService.\n+                  getSecurityQuestionByUser(user.username).then(function (data) {\n+            $scope.userSecurityQuestion = data.content;\n+          }, function (response) {\n+            var errorMessage;\n+            // parse error response \n+            if (response !== undefined) {\n+              errorMessage = response.split(\"ErrorMessage{{\")[1];\n+              errorMessage = errorMessage.split(\"}}\")[0];\n+              $scope.userSecurityQuestion = \"\";\n+            }\n+            $scope.showError(\"Error retrieving user security question: \" + errorMessage, $scope.notification);\n+          });\n+        }\n+        else {\n+          $scope.userSecurityQuestion = \"\";\n+        }\n+      }\n+    };\n+    $scope.resetPassword = function (user) {\n+      if (user && user.username) {\n+        $scope.retrieveSecurityQuestion(user);\n+        CaptchaService.validate($scope.captchaInput).then(function (response) {\n+          if (!(response === 'true')) {\n+            $scope.showError(\"Captcha inserted is not valid, please digit the correct captcha\", $scope.notification);\n+            return;\n+          }\n+          UserSelfService.passwordReset(user).then(function (data) {\n+            $scope.showSuccess(data, $scope.notification);\n+            $location.path('/self');\n+          }, function (response) {\n+            var errorMessage;\n+            // parse error response \n+            if (response !== undefined) {\n+              errorMessage = response.split(\"ErrorMessage{{\")[1];\n+              errorMessage = errorMessage.split(\"}}\")[0];\n+              $scope.showError(\"An error occured during password reset: \" + errorMessage, $scope.notification);\n+              //we need to refresh captcha after a valid request\n+              $scope.$broadcast(\"refreshCaptcha\");\n+            }\n+          });\n+        }, function (response) {\n+          var errorMessage;\n+          // parse error response \n+          if (response !== undefined) {\n+            errorMessage = response.split(\"ErrorMessage{{\")[1];\n+            errorMessage = errorMessage.split(\"}}\")[0];\n+          }\n+          $scope.showError(\"Error: \" + (errorMessage || response), $scope.notification);\n+          return;\n+        });\n+      } else {\n+        $scope.showError(\"You should use a valid and non-empty username\", $scope.notification);\n+      }\n+    };\n   }]);"},{"sha":"99a6c1e785900504d73290eb5bc37d3a9853e272","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/directives/auxClasses.js","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FauxClasses.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FauxClasses.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FauxClasses.js?ref=43c4d8ea89c4f97b193451e506bc876d6c5c99be","patch":"@@ -0,0 +1,60 @@\n+/* \n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+'use strict';\n+\n+angular.module('self')\n+        .directive('auxiliary', function () {\n+          return {\n+            restrict: 'E',\n+            templateUrl: 'views/auxClasses.html',\n+            scope: {\n+              dynamicForm: \"=form\",\n+              user: \"=\"\n+            },\n+            controller: function ($scope, $filter) {\n+\n+              $scope.init = function () {\n+                if (!$scope.user.auxClasses) {\n+                  $scope.user.auxClasses = new Array();                  \n+                }\n+                $scope.auxClassDisabled = false;\n+              };\n+\n+              $scope.addAuxClass = function (item, model) {\n+                var auxClass = item;\n+                $scope.user.auxClasses.push(auxClass);\n+                $scope.$emit(\"auxClassAdded\", auxClass);\n+              };\n+\n+              $scope.removeAuxClass = function (item, model) {\n+                var auxClassIndex = $scope.getIndex(item);\n+                $scope.user.auxClasses.splice(auxClassIndex, 1);\n+                $scope.$emit(\"auxClassRemoved\", item);\n+              };\n+\n+              $scope.getIndex = function (selectedAuxClass) {\n+                var auxClassIndex = $scope.user.auxClasses.map(function (auxClassName) {\n+                  return auxClassName;\n+                }).indexOf(selectedAuxClass);\n+                return auxClassIndex;\n+              };\n+\n+            }\n+          };\n+        });"},{"sha":"4d11a4976d2068cbd2ad7adbc886f57e3adf1c72","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/directives/dynamicPlainAttributes.js","status":"modified","additions":21,"deletions":21,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicPlainAttributes.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicPlainAttributes.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fdirectives%2FdynamicPlainAttributes.js?ref=43c4d8ea89c4f97b193451e506bc876d6c5c99be","patch":"@@ -20,26 +20,26 @@\n \n angular.module('self')\n         .directive('dynamicPlainAttributes', function (SchemaService) {\n-            return {\n-              restrict: 'E',\n-              templateUrl: 'views/dynamicPlainAttributes.html',\n-              scope: {\n-                dynamicForm: \"=form\",\n-                user: \"=\"\n-              },\n-              controller: function ($scope) {\n+          return {\n+            restrict: 'E',\n+            templateUrl: 'views/dynamicPlainAttributes.html',\n+            scope: {\n+              dynamicForm: \"=form\",\n+              user: \"=\"\n+            },\n+            controller: function ($scope) {\n \n-                $scope.addAttributeField = function (plainSchemaKey) {\n-                  console.log(\"Add PLAIN value: \", plainSchemaKey + \"_\" + ($scope.dynamicForm.attributeTable[plainSchemaKey].fields.length));\n-                  $scope.dynamicForm.attributeTable[plainSchemaKey].fields.push(plainSchemaKey + \"_\" + ($scope.dynamicForm.attributeTable[plainSchemaKey].fields.length));\n-                };\n+              $scope.addAttributeField = function (plainSchemaKey) {\n+                console.log(\"Add PLAIN value: \", plainSchemaKey + \"_\" + ($scope.dynamicForm.attributeTable[plainSchemaKey].fields.length));\n+                $scope.dynamicForm.attributeTable[plainSchemaKey].fields.push(plainSchemaKey + \"_\" + ($scope.dynamicForm.attributeTable[plainSchemaKey].fields.length));\n+              };\n \n-                $scope.removeAttributeField = function (plainSchemaKey, index) {\n-                  console.log(\"Remove PLAIN value: \" + plainSchemaKey + \" attribute index: \" + index);\n-                  $scope.dynamicForm.attributeTable[plainSchemaKey].fields.splice(index, 1);\n-                  // clean user model\n-                  $scope.user.plainAttrs[plainSchemaKey].values.splice(index, 1);\n-                };\n-              }\n-            };\n-          });\n+              $scope.removeAttributeField = function (plainSchemaKey, index) {\n+                console.log(\"Remove PLAIN value: \" + plainSchemaKey + \" attribute index: \" + index);\n+                $scope.dynamicForm.attributeTable[plainSchemaKey].fields.splice(index, 1);\n+                // clean user model\n+                $scope.user.plainAttrs[plainSchemaKey].values.splice(index, 1);\n+              };\n+            }\n+          };\n+        });"},{"sha":"f62841c3bd7d2a56e9bf8ceb465d97d4776928e0","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/services/anyService.js","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FanyService.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FanyService.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FanyService.js?ref=43c4d8ea89c4f97b193451e506bc876d6c5c99be","patch":"@@ -0,0 +1,53 @@\n+/* \n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+'use strict';\n+\n+angular.module('self')\n+        .factory('AnyService', ['$resource', '$q', '$http',\n+          function ($auxClass, $q, $http) {\n+\n+            var any = {};\n+\n+            any.getAuxClasses = function () {\n+              return  $http.get(\"/syncope-enduser/api/auxiliaryClasses\")\n+                      .then(function (response) {\n+                        console.log(\"auxiliaryClasses API response: \", response);\n+                        return response.data;\n+                      }, function (response) {\n+                        console.log(\"Something went wrong during auxiliaryClasses retrieval, exit with status: \", response);\n+                        return $q.reject(response.data || response.statusText);\n+                      });\n+            };\n+\n+            any.getAnyType = function (kind) {\n+              return  $http.get(\"/syncope-enduser/api/anyTypes/\" + encodeURI(kind))\n+                      .then(function (response) {\n+                        console.log(\"anyType user API response: \", response);\n+                        return response.data;\n+                      }, function (response) {\n+                        console.log(\"Something went wrong during anyType user API retrieval, exit with status: \", response);\n+                        return $q.reject(response.data || response.statusText);\n+                      });\n+            };\n+\n+            return any;\n+          }]);\n+\n+"},{"sha":"faec8c2add9cd6567ba2ab874928d8b91321996e","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/services/schemaService.js","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FschemaService.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FschemaService.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2FschemaService.js?ref=43c4d8ea89c4f97b193451e506bc876d6c5c99be","patch":"@@ -25,9 +25,11 @@ angular.module('self')\n \n             var schemaService = {};\n \n-            schemaService.getUserSchemas = function () {\n+            schemaService.getUserSchemas = function (anyTypeClass) {\n \n-              return  $http.get(\"/syncope-enduser/api/schemas\")\n+              var classParam = anyTypeClass ? \"?anyTypeClass=\" + encodeURI(anyTypeClass) : \"\";\n+\n+              return  $http.get(\"/syncope-enduser/api/schemas\" + classParam)\n                       .then(function (response) {\n                         console.log(\"schemaAPI response: \", response);\n                         return response.data;"},{"sha":"1c3bcd601de4dfa9373bd179e2133006bde4ae39","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/auxClasses.html","status":"added","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FauxClasses.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FauxClasses.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2FauxClasses.html?ref=43c4d8ea89c4f97b193451e506bc876d6c5c99be","patch":"@@ -0,0 +1,10 @@\n+<div ng-init='init()'>\n+  <ui-select on-select=\"addAuxClass($item, $model)\" on-remove=\"removeAuxClass($item, $model)\" multiple\n+             ng-model=\"dynamicForm.selectedAuxClasses\" theme=\"select2\" class=\"attribute-ui-select\" \n+             ng-disabled=\"{{auxClassDisabled}}\">\n+    <ui-select-match placeholder=\"Click to select auxiliary class...\">{{$item}}</ui-select-match>\n+    <ui-select-choices repeat=\"auxClass in dynamicForm.auxClasses\">\n+      <div ng-bind-html=\"auxClass | highlight: $select.search\"></div>\n+    </ui-select-choices>\n+  </ui-select>\n+</div>\n\\ No newline at end of file"},{"sha":"591b68cf45a39ea67db481ebaf379d41bc7db961","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/user-groups.html","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-groups.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43c4d8ea89c4f97b193451e506bc876d6c5c99be/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-groups.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fuser-groups.html?ref=43c4d8ea89c4f97b193451e506bc876d6c5c99be","patch":"@@ -31,6 +31,10 @@\n   <label>Groups</label><br/>\n   <groups form=\"dynamicForm\" user=\"user\"></groups>\n </div>\n+<div id=\"attribute\" class=\"form-group row upper-select\">\n+  <label>Auxilary Classes</label><br/>\n+  <auxiliary form=\"dynamicForm\" user=\"user\"></auxiliary>\n+</div>\n <div id=\"attribute\" class=\"form-group row\">\n   <navigation-buttons ng-show=\"createMode\" next=\"create.plainSchemas\" previous=\"create.credentials\"></navigation-buttons>\n   <navigation-buttons ng-show=\"!createMode\" next=\"update.plainSchemas\" previous=\"update.credentials\"></navigation-buttons>"}]}