{"sha":"edfb9edcaf52be6d5e2f1d616a861f85eb05d415","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmVkZmI5ZWRjYWY1MmJlNmQ1ZTJmMWQ2MTZhODYxZjg1ZWIwNWQ0MTU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-03-05T14:42:42Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-03-05T14:42:42Z"},"message":"[SYNCOPE-330] #resolve\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1452817 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a7bd4b2e2487f1ca3916011f0c8fcdf5cd855b2c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a7bd4b2e2487f1ca3916011f0c8fcdf5cd855b2c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/edfb9edcaf52be6d5e2f1d616a861f85eb05d415","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/edfb9edcaf52be6d5e2f1d616a861f85eb05d415","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/edfb9edcaf52be6d5e2f1d616a861f85eb05d415","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/edfb9edcaf52be6d5e2f1d616a861f85eb05d415/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"8d382a5c825c186383334434cf9972d2dd79d165","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8d382a5c825c186383334434cf9972d2dd79d165","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8d382a5c825c186383334434cf9972d2dd79d165"}],"stats":{"total":116,"additions":101,"deletions":15},"files":[{"sha":"95a477a040c2333e06dfd3034745a7fb854faadd","filename":"core/pom.xml","status":"modified","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfb9edcaf52be6d5e2f1d616a861f85eb05d415/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfb9edcaf52be6d5e2f1d616a861f85eb05d415/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=edfb9edcaf52be6d5e2f1d616a861f85eb05d415","patch":"@@ -234,6 +234,10 @@ under the License.\n       <groupId>org.apache.avalon.framework</groupId>\n       <artifactId>avalon-framework-impl</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>xalan</groupId>\n+      <artifactId>xalan</artifactId>\n+    </dependency>\n \n     <dependency>\n       <groupId>org.apache.geronimo.specs</groupId> \n@@ -877,6 +881,42 @@ under the License.\n       <build>\n         <defaultGoal>clean verify</defaultGoal>\n         \n+        <plugins>\n+          <!-- Strip Activiti-related entries from content.xml -->\n+          <plugin>\n+            <groupId>org.codehaus.mojo</groupId>\n+            <artifactId>xml-maven-plugin</artifactId>\n+            <inherited>true</inherited>\n+            <executions>\n+              <execution>\n+                <phase>process-test-resources</phase>\n+                <goals>\n+                  <goal>transform</goal>\n+                </goals>\n+              </execution>\n+            </executions>\n+            <configuration>\n+              <forceCreation>true</forceCreation>\n+              <transformationSets>\n+                <transformationSet>\n+                  <dir>${project.build.directory}/test-classes</dir>\n+                  <includes>\n+                    <include>content.xml</include>\n+                  </includes>\n+                  <outputDir>${project.build.directory}/test-classes/</outputDir>\n+                  <stylesheet>${basedir}/src/test/resources/noopworkflow/stripActivitiFromContent.xsl</stylesheet>\n+                  <outputProperties>\n+                    <outputProperty>\n+                      <name>indent</name>\n+                      <value>yes</value>\n+                    </outputProperty>\n+                  </outputProperties>\n+                </transformationSet>\n+              </transformationSets>\n+            </configuration>\n+          </plugin>\n+        </plugins>\n+        \n         <testResources>\n           <testResource>\n             <directory>src/test/resources</directory>\n@@ -889,6 +929,10 @@ under the License.\n           <testResource>\n             <directory>src/test/resources/noopworkflow</directory>\n             <filtering>true</filtering>\n+            <includes>\n+              <include>workflowContext.xml</include>\n+              <include>workflow.properties</include>\n+            </includes>\n           </testResource>\n         </testResources>\n       </build>"},{"sha":"2f92c8ea280b022b051fdb4a7d24b989fbf6e084","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/SyncopeSyncResultHandler.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfb9edcaf52be6d5e2f1d616a861f85eb05d415/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfb9edcaf52be6d5e2f1d616a861f85eb05d415/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java?ref=edfb9edcaf52be6d5e2f1d616a861f85eb05d415","patch":"@@ -346,8 +346,9 @@ private List<Long> findByAttributableSearch(\n \n         final Map<String, Attribute> extValues = new HashMap<String, Attribute>();\n \n-        for (AbstractMappingItem item :\n-                attrUtil.getMappingItems(syncTask.getResource(), MappingPurpose.SYNCHRONIZATION)) {\n+        for (AbstractMappingItem item\n+                : attrUtil.getMappingItems(syncTask.getResource(), MappingPurpose.SYNCHRONIZATION)) {\n+\n             extValues.put(item.getIntAttrName(), connObj.getAttributeByName(item.getExtAttrName()));\n         }\n "},{"sha":"99deab490fd9e28e3f95d7a83c10b4a76169729d","filename":"core/src/main/java/org/apache/syncope/core/util/ImportExport.java","status":"modified","additions":3,"deletions":11,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfb9edcaf52be6d5e2f1d616a861f85eb05d415/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FImportExport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfb9edcaf52be6d5e2f1d616a861f85eb05d415/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FImportExport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FImportExport.java?ref=edfb9edcaf52be6d5e2f1d616a861f85eb05d415","patch":"@@ -95,8 +95,6 @@ public class ImportExport extends DefaultHandler {\n     private final static Map<String, Set<String>> COLUMNS_TO_BE_NULLIFIED =\n             Collections.singletonMap(\"SYNCOPEROLE\", Collections.singleton(\"USEROWNER_ID\"));\n \n-    private String[] wfInitSQLStatements;\n-\n     private String readSchema() {\n         String schema = null;\n \n@@ -261,14 +259,8 @@ private void setParameters(final String tableName, final Attributes attrs, final\n     public void startElement(final String uri, final String localName, final String qName, final Attributes atts)\n             throws SAXException {\n \n-        // skip root element and perform workflow init statements\n+        // skip root element\n         if (ROOT_ELEMENT.equals(qName)) {\n-            if (wfInitSQLStatements != null) {\n-                for (String wfInitSQLStmt : wfInitSQLStatements) {\n-                    Query query = entityManager.createNativeQuery(wfInitSQLStmt);\n-                    query.executeUpdate();\n-                }\n-            }\n             return;\n         }\n \n@@ -381,7 +373,7 @@ private void doExportTable(final TransformerHandler handler, final Connection co\n         }\n     }\n \n-    private List<String> sortByForeignKeys(final Connection conn, final Set<String> tableNames, final String schema)\n+    private List<String> sortByForeignKeys(final Connection conn, final Set<String> tableNames)\n             throws SQLException {\n \n         Set<MultiParentNode<String>> roots = new HashSet<MultiParentNode<String>>();\n@@ -504,7 +496,7 @@ public void export(final OutputStream os, final String wfTablePrefix)\n             LOG.debug(\"Tables to be exported {}\", tableNames);\n \n             // then sort tables based on foreign keys and dump\n-            for (String tableName : sortByForeignKeys(conn, tableNames, schema)) {\n+            for (String tableName : sortByForeignKeys(conn, tableNames)) {\n                 try {\n                     doExportTable(handler, conn, tableName, TABLES_TO_BE_FILTERED.get(tableName.toUpperCase()));\n                 } catch (Exception e) {"},{"sha":"f3aab573d4c6b54a47cfb2b39644dfb30fe17b1a","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/NoOpUserWorkflowAdapter.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfb9edcaf52be6d5e2f1d616a861f85eb05d415/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfb9edcaf52be6d5e2f1d616a861f85eb05d415/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java?ref=edfb9edcaf52be6d5e2f1d616a861f85eb05d415","patch":"@@ -78,6 +78,7 @@ public WorkflowResult<Map.Entry<Long, Boolean>> create(final UserTO userTO, fina\n                     ? \"active\"\n                     : \"suspended\";\n             propagateEnable = enabled;\n+            user.setSuspended(!enabled);\n         }\n \n         user.setStatus(status);"},{"sha":"424df8971caf6b3fb9afdd1a12a823db01adcdcb","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfb9edcaf52be6d5e2f1d616a861f85eb05d415/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfb9edcaf52be6d5e2f1d616a861f85eb05d415/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=edfb9edcaf52be6d5e2f1d616a861f85eb05d415","patch":"@@ -58,6 +58,7 @@\n import org.apache.syncope.core.sync.TestSyncActions;\n import org.apache.syncope.core.sync.TestSyncRule;\n import org.apache.syncope.core.sync.impl.SyncJob;\n+import org.apache.syncope.core.workflow.ActivitiDetector;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n@@ -282,7 +283,7 @@ public void sync() {\n             UserTO userTO = userService.read(inUserTO.getId());\n             assertNotNull(userTO);\n             assertEquals(\"test9\", userTO.getUsername());\n-            assertEquals(\"active\", userTO.getStatus());\n+            assertEquals(ActivitiDetector.isActivitiEnabledForUsers() ? \"active\" : \"created\", userTO.getStatus());\n             assertEquals(\"test9@syncope.apache.org\", userTO.getAttributeMap().get(\"email\").getValues().get(0));\n             assertEquals(\"test9@syncope.apache.org\", userTO.getAttributeMap().get(\"userId\").getValues().get(0));\n             assertTrue(Integer.valueOf(userTO.getAttributeMap().get(\"fullname\").getValues().get(0)) <= 10);"},{"sha":"28565338514b60b7337ab21133eace191599d698","filename":"core/src/test/resources/noopworkflow/stripActivitiFromContent.xsl","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfb9edcaf52be6d5e2f1d616a861f85eb05d415/core%2Fsrc%2Ftest%2Fresources%2Fnoopworkflow%2FstripActivitiFromContent.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfb9edcaf52be6d5e2f1d616a861f85eb05d415/core%2Fsrc%2Ftest%2Fresources%2Fnoopworkflow%2FstripActivitiFromContent.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fnoopworkflow%2FstripActivitiFromContent.xsl?ref=edfb9edcaf52be6d5e2f1d616a861f85eb05d415","patch":"@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one\n+  or more contributor license agreements.  See the NOTICE file\n+  distributed with this work for additional information\n+  regarding copyright ownership.  The ASF licenses this file\n+  to you under the Apache License, Version 2.0 (the\n+  \"License\"); you may not use this file except in compliance\n+  with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.\n+-->\n+<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n+                version=\"1.0\">\n+  \n+  <xsl:template match=\"node()|@*|comment()\">\n+    <xsl:if test=\"not(starts-with(local-name(), 'ACT_'))\">\n+      <xsl:copy>\n+        <xsl:apply-templates select=\"@*|node()\"/>\n+      </xsl:copy>\n+    </xsl:if>\n+  </xsl:template>\n+\n+</xsl:stylesheet>"},{"sha":"9a3f618ba26b8b8b4a67ae6d3eb292cd5a127851","filename":"pom.xml","status":"modified","additions":17,"deletions":1,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/edfb9edcaf52be6d5e2f1d616a861f85eb05d415/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/edfb9edcaf52be6d5e2f1d616a861f85eb05d415/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=edfb9edcaf52be6d5e2f1d616a861f85eb05d415","patch":"@@ -668,6 +668,10 @@ under the License.\n             <groupId>org.apache.avalon.framework</groupId>\n             <artifactId>avalon-framework-impl</artifactId>\n           </exclusion>\n+          <exclusion>\n+            <groupId>xalan</groupId>\n+            <artifactId>xalan</artifactId>            \n+          </exclusion>\n         </exclusions>\n       </dependency>\n       <dependency>\n@@ -680,7 +684,12 @@ under the License.\n         <artifactId>avalon-framework-impl</artifactId>\n         <version>4.3.1</version>\n       </dependency>\n-        \n+      <dependency>\n+        <groupId>xalan</groupId>\n+        <artifactId>xalan</artifactId>\n+        <version>2.7.1</version>\n+      </dependency>\n+\n       <!-- Wicket -->\n       <dependency>\n         <groupId>org.apache.wicket</groupId>\n@@ -874,6 +883,13 @@ under the License.\n           <groupId>org.codehaus.mojo</groupId>\n           <artifactId>xml-maven-plugin</artifactId>\n           <version>1.0</version>\n+          <dependencies>\n+            <dependency>\n+              <groupId>xalan</groupId>\n+              <artifactId>xalan</artifactId>\n+              <version>2.7.1</version>              \n+            </dependency>\n+          </dependencies>\n         </plugin>\n         <plugin>\n           <groupId>org.apache.maven.plugins</groupId>"}]}