{"sha":"76b35a7870eee368d8b78e71d39bd9ecc2de5934","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc2YjM1YTc4NzBlZWUzNjhkOGI3OGU3MWQzOWJkOWVjYzJkZTU5MzQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-11-05T10:07:41Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-11-05T10:07:41Z"},"message":"[SYNCOPE-600] Adding miss pre-condition for form availability after form submit","tree":{"sha":"145e6f2c2cb4be7d93c1f03c803524e8495c3070","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/145e6f2c2cb4be7d93c1f03c803524e8495c3070"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/76b35a7870eee368d8b78e71d39bd9ecc2de5934","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/76b35a7870eee368d8b78e71d39bd9ecc2de5934","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/76b35a7870eee368d8b78e71d39bd9ecc2de5934","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/76b35a7870eee368d8b78e71d39bd9ecc2de5934/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"377963e869b67809ec5b22c5cb65a00328a1b281","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/377963e869b67809ec5b22c5cb65a00328a1b281","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/377963e869b67809ec5b22c5cb65a00328a1b281"}],"stats":{"total":32,"additions":18,"deletions":14},"files":[{"sha":"4f0d876b7e974343e450942e5ec905e3d4255a96","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":18,"deletions":14,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/76b35a7870eee368d8b78e71d39bd9ecc2de5934/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/76b35a7870eee368d8b78e71d39bd9ecc2de5934/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=76b35a7870eee368d8b78e71d39bd9ecc2de5934","patch":"@@ -208,8 +208,9 @@ private String getFormTask(final SyncopeUser user) {\n     private Set<String> getPerformedTasks(final SyncopeUser user) {\n         final Set<String> result = new HashSet<String>();\n \n-        for (HistoricActivityInstance task : historyService.createHistoricActivityInstanceQuery().executionId(user.\n-                getWorkflowId()).list()) {\n+        for (HistoricActivityInstance task\n+                : historyService.createHistoricActivityInstanceQuery().executionId(user.getWorkflowId()).list()) {\n+\n             result.add(task.getActivityId());\n         }\n \n@@ -261,11 +262,11 @@ public WorkflowResult<Map.Entry<Long, Boolean>> create(final UserTO userTO, fina\n             throwException(e, \"While starting \" + WF_PROCESS_ID + \" instance\");\n         }\n \n-        SyncopeUser user = (SyncopeUser) runtimeService.getVariable(\n-                processInstance.getProcessInstanceId(), SYNCOPE_USER);\n+        SyncopeUser user =\n+                runtimeService.getVariable(processInstance.getProcessInstanceId(), SYNCOPE_USER, SyncopeUser.class);\n \n-        Boolean updatedEnabled = (Boolean) runtimeService.getVariable(\n-                processInstance.getProcessInstanceId(), ENABLED);\n+        Boolean updatedEnabled =\n+                runtimeService.getVariable(processInstance.getProcessInstanceId(), ENABLED, Boolean.class);\n         if (updatedEnabled != null) {\n             user.setSuspended(!updatedEnabled);\n         }\n@@ -278,8 +279,8 @@ public WorkflowResult<Map.Entry<Long, Boolean>> create(final UserTO userTO, fina\n         updateStatus(user);\n         user = userDAO.save(user);\n \n-        Boolean propagateEnable = (Boolean) runtimeService.getVariable(\n-                processInstance.getProcessInstanceId(), PROPAGATE_ENABLE);\n+        Boolean propagateEnable =\n+                runtimeService.getVariable(processInstance.getProcessInstanceId(), PROPAGATE_ENABLE, Boolean.class);\n         if (propagateEnable == null) {\n             propagateEnable = enabled;\n         }\n@@ -353,12 +354,12 @@ protected WorkflowResult<Map.Entry<UserMod, Boolean>> doUpdate(final SyncopeUser\n         updateStatus(user);\n         SyncopeUser updated = userDAO.save(user);\n \n-        PropagationByResource propByRes = (PropagationByResource) runtimeService.getVariable(\n-                user.getWorkflowId(), PROP_BY_RESOURCE);\n+        PropagationByResource propByRes =\n+                runtimeService.getVariable(user.getWorkflowId(), PROP_BY_RESOURCE, PropagationByResource.class);\n \n         saveForFormSubmit(updated, userMod.getPassword(), propByRes);\n \n-        Boolean propagateEnable = (Boolean) runtimeService.getVariable(user.getWorkflowId(), PROPAGATE_ENABLE);\n+        Boolean propagateEnable = runtimeService.getVariable(user.getWorkflowId(), PROPAGATE_ENABLE, Boolean.class);\n \n         return new WorkflowResult<Map.Entry<UserMod, Boolean>>(\n                 new SimpleEntry<UserMod, Boolean>(userMod, propagateEnable), propByRes, tasks);\n@@ -826,16 +827,19 @@ public WorkflowResult<UserMod> submitForm(final WorkflowFormTO form, final Strin\n \n         // see if there is any propagation to be done\n         PropagationByResource propByRes =\n-                (PropagationByResource) runtimeService.getVariable(user.getWorkflowId(), PROP_BY_RESOURCE);\n+                runtimeService.getVariable(user.getWorkflowId(), PROP_BY_RESOURCE, PropagationByResource.class);\n \n         // fetch - if available - the encrypted password\n         String clearPassword = null;\n-        String encryptedPwd = (String) runtimeService.getVariable(user.getWorkflowId(), ENCRYPTED_PWD);\n+        String encryptedPwd = runtimeService.getVariable(user.getWorkflowId(), ENCRYPTED_PWD, String.class);\n         if (StringUtils.isNotBlank(encryptedPwd)) {\n             clearPassword = decrypt(encryptedPwd);\n         }\n \n-        UserMod userMod = (UserMod) runtimeService.getVariable(user.getWorkflowId(), USER_MOD);\n+        // supports approval chains\n+        saveForFormSubmit(user, clearPassword, propByRes);\n+\n+        UserMod userMod = runtimeService.getVariable(user.getWorkflowId(), USER_MOD, UserMod.class);\n         if (userMod == null) {\n             userMod = new UserMod();\n             userMod.setId(updated.getId());"}]}