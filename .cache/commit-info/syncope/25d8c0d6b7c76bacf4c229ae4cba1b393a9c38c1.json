{"sha":"25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjI1ZDhjMGQ2YjdjNzZiYWNmNGMyMjlhZTRjYmExYjM5M2E5YzM4YzE=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2013-11-18T08:13:31Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2013-11-18T08:13:31Z"},"message":"SYNCOPE-436 Merge from 1_1_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1542946 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"51f0fc0e357b32aa9553ffc973300ff2c59053e3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/51f0fc0e357b32aa9553ffc973300ff2c59053e3"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"f73a8157e7084a3d3572cb93e6306f492e202fc1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f73a8157e7084a3d3572cb93e6306f492e202fc1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f73a8157e7084a3d3572cb93e6306f492e202fc1"}],"stats":{"total":99,"additions":84,"deletions":15},"files":[{"sha":"51877a904bfe24011f58e3026d78edaaca0dcdd1","filename":"build-tools/src/main/resources/content.ldif","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1/build-tools%2Fsrc%2Fmain%2Fresources%2Fcontent.ldif","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1/build-tools%2Fsrc%2Fmain%2Fresources%2Fcontent.ldif","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fsrc%2Fmain%2Fresources%2Fcontent.ldif?ref=25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1","patch":"@@ -43,3 +43,4 @@ mail: syncFromLDAP@syncope.apache.org\n sn: Surname\n uid: syncFromLDAP\n userpassword:: cGFzc3dvcmQxMjM=\n+givenname: syncFromLDAP"},{"sha":"63a02d81e7a4510bf909d8e59b8a04604c9ba20a","filename":"core/src/main/java/org/apache/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1","patch":"@@ -189,10 +189,6 @@ private <T extends AbstractVirSchema> T getVirSchema(final String virSchemaName,\n \n             if (virtualSchema == null) {\n                 LOG.debug(\"Ignoring invalid virtual schema {}\", virSchemaName);\n-            } else if (virtualSchema.isReadonly()) {\n-                virtualSchema = null;\n-\n-                LOG.debug(\"Ignoring readonly virtual schema {}\", virtualSchema);\n             }\n         }\n "},{"sha":"0320a8714673de6189261541b4af8aa8313699af","filename":"core/src/main/java/org/apache/syncope/core/util/MappingUtil.java","status":"modified","additions":16,"deletions":3,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java?ref=25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1","patch":"@@ -32,6 +32,8 @@\n import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.types.IntMappingType;\n import org.apache.syncope.common.types.AttributeSchemaType;\n+import static org.apache.syncope.common.types.IntMappingType.RoleVirtualSchema;\n+import static org.apache.syncope.common.types.IntMappingType.UserVirtualSchema;\n import org.apache.syncope.core.connid.PasswordGenerator;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n@@ -40,6 +42,7 @@\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n import org.apache.syncope.core.persistence.beans.AbstractNormalSchema;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n+import org.apache.syncope.core.persistence.beans.AbstractVirSchema;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.membership.MDerSchema;\n import org.apache.syncope.core.persistence.beans.membership.MSchema;\n@@ -55,6 +58,7 @@\n import org.apache.syncope.core.persistence.beans.user.USchema;\n import org.apache.syncope.core.persistence.beans.user.UVirSchema;\n import org.apache.syncope.core.persistence.dao.SchemaDAO;\n+import org.apache.syncope.core.persistence.dao.VirSchemaDAO;\n import org.identityconnectors.framework.common.FrameworkUtil;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n@@ -163,16 +167,27 @@ public static <T extends AbstractAttributable> Map.Entry<String, Attribute> prep\n \n         AbstractNormalSchema schema = null;\n         AttributeSchemaType schemaType;\n+        Map.Entry<String, Attribute> result = null;\n+        final ConfigurableApplicationContext context = ApplicationContextProvider.getApplicationContext();\n         switch (mapItem.getIntMappingType()) {\n             case UserSchema:\n             case RoleSchema:\n             case MembershipSchema:\n-                final ConfigurableApplicationContext context = ApplicationContextProvider.getApplicationContext();\n                 final SchemaDAO schemaDAO = context.getBean(SchemaDAO.class);\n                 schema = schemaDAO.find(mapItem.getIntAttrName(),\n                         MappingUtil.getIntMappingTypeClass(mapItem.getIntMappingType()));\n                 schemaType = schema == null ? AttributeSchemaType.String : schema.getType();\n                 break;\n+            case UserVirtualSchema:\n+            case RoleVirtualSchema:\n+                final VirSchemaDAO virSchemaDAO = context.getBean(VirSchemaDAO.class);\n+                final AbstractVirSchema virSchema = virSchemaDAO.find(mapItem.getIntAttrName(),\n+                        MappingUtil.getIntMappingTypeClass(mapItem.getIntMappingType()));\n+                if (virSchema.isReadonly()) {\n+                    return result;\n+                }\n+                schemaType = AttributeSchemaType.String;\n+                break;\n \n             default:\n                 schemaType = AttributeSchemaType.String;\n@@ -200,8 +215,6 @@ public static <T extends AbstractAttributable> Map.Entry<String, Attribute> prep\n             }\n         }\n \n-        Map.Entry<String, Attribute> result;\n-\n         if (mapItem.isAccountid()) {\n             result = new AbstractMap.SimpleEntry<String, Attribute>(objValues.iterator().next().toString(), null);\n         } else if (mapItem.isPassword() && subject instanceof SyncopeUser) {"},{"sha":"ef0c4a8abc1fcc8094d1f80f90d50c89993e13dd","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/VirSchemaTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FVirSchemaTest.java?ref=25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1","patch":"@@ -45,7 +45,7 @@ public class VirSchemaTest extends AbstractDAOTest {\n     @Test\n     public void findAll() {\n         List<UVirSchema> list = virSchemaDAO.findAll(UVirSchema.class);\n-        assertEquals(1, list.size());\n+        assertEquals(2, list.size());\n     }\n \n     @Test"},{"sha":"febfd080a4221277e64bb32ff937b87f91633e39","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":47,"deletions":7,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1","patch":"@@ -26,6 +26,7 @@\n import static org.junit.Assert.fail;\n \n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.List;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.common.mod.UserMod;\n@@ -57,6 +58,7 @@\n import org.apache.syncope.common.types.TaskType;\n import org.apache.syncope.common.types.TraceLevel;\n import org.apache.syncope.common.validation.SyncopeClientException;\n+import static org.apache.syncope.core.rest.AbstractTest.attributeTO;\n import org.apache.syncope.core.sync.TestSyncActions;\n import org.apache.syncope.core.sync.TestSyncRule;\n import org.apache.syncope.core.sync.impl.SyncJob;\n@@ -391,21 +393,28 @@ public void reconcileFromLDAP()\n         // Update sync task\n         SyncTaskTO task = taskService.read(11L);\n         assertNotNull(task);\n+        \n+        //  add role template\n+        final UserTO userTemplate = task.getUserTemplate();\n+        userTemplate.getResources().add(\"resource-ldap\");\n+        userTemplate.getVirAttrs().add(attributeTO(\"virtualReadOnly\", \"\"));\n+\n+        task.setUserTemplate(userTemplate);\n \n         //  add user template\n-        RoleTO template = new RoleTO();\n-        template.setParent(8L);\n-        template.getRAttrTemplates().add(\"show\");\n-        template.getAttrs().add(attributeTO(\"show\", \"'true'\"));\n+        RoleTO roleTemplate = new RoleTO();\n+        roleTemplate.setParent(8L);\n+        roleTemplate.getRAttrTemplates().add(\"show\");\n+        roleTemplate.getAttrs().add(attributeTO(\"show\", \"'true'\"));\n \n-        task.setRoleTemplate(template);\n+        task.setRoleTemplate(roleTemplate);\n \n         taskService.update(task.getId(), task);\n         SyncTaskTO actual = taskService.read(task.getId());\n         assertNotNull(actual);\n         assertEquals(task.getId(), actual.getId());\n-        assertEquals(template, actual.getRoleTemplate());\n-        assertEquals(new UserTO(), actual.getUserTemplate());\n+        assertEquals(roleTemplate, actual.getRoleTemplate());\n+        assertEquals(userTemplate, actual.getUserTemplate());\n \n         TaskExecTO execution = execSyncTask(actual.getId(), 20, false);\n \n@@ -922,4 +931,35 @@ public void bulkAction() {\n \n         assertFalse(taskService.list(TaskType.PROPAGATION).containsAll(after));\n     }\n+\n+    @Test\n+    public void issueSYNCOPE436() throws InvalidSearchConditionException {\n+\n+        SyncTaskTO task = taskService.read(11L);\n+        assertNotNull(task);\n+\n+        final UserTO template = task.getUserTemplate();\n+        template.getResources().add(\"resource-ldap\");\n+        template.getVirAttrs().add(attributeTO(\"virtualReadOnly\", \"\"));\n+        task.setUserTemplate(template);\n+\n+        taskService.update(task.getId(), task);\n+        TaskExecTO execution = execSyncTask(11L, 50, false);\n+\n+        final String status = execution.getStatus();\n+        assertNotNull(status);\n+        assertTrue(PropagationTaskExecStatus.valueOf(status).isSuccessful());\n+\n+        final AttributableCond usernameLeafCond = new AttributableCond(AttributeCond.Type.EQ);\n+        usernameLeafCond.setSchema(\"username\");\n+        usernameLeafCond.setExpression(\"syncFromLDAP\");\n+\n+        final List<UserTO> matchingUsers = userService.search(NodeCond.getLeafCond(usernameLeafCond));\n+        assertNotNull(matchingUsers);\n+        assertEquals(1, matchingUsers.size());\n+\n+        final UserTO syncUser = matchingUsers.iterator().next();\n+        final AttributeTO virAttributeTO = syncUser.getVirAttrMap().get(\"virtualReadOnly\");\n+        assertEquals(\"syncFromLDAP\", virAttributeTO.getValues().get(0));\n+    }\n }"},{"sha":"82531d9e9edbbbb985b49363925341415a0d0d65","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1","patch":"@@ -73,8 +73,10 @@\n import org.apache.syncope.common.validation.SyncopeClientException;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n+import static org.apache.syncope.core.rest.AbstractTest.attributeTO;\n import org.apache.syncope.core.workflow.ActivitiDetector;\n import org.identityconnectors.framework.common.objects.OperationalAttributes;\n+import static org.junit.Assert.assertTrue;\n import org.junit.Assume;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -2285,5 +2287,17 @@ public void issueSYNCOPE435() {\n         assertTrue(userTO.getPropagationStatusTOs().get(0).getFailureReason().\n                 startsWith(\"Not attempted because there are mandatory attributes without value(s): [__PASSWORD__]\"));\n     }\n+    \n+    @Test\n+    public void issueSYNCOPE436() {\n+        UserTO userTO = getUniqueSampleTO(\"syncope436@syncope.apache.org\");\n+        userTO.getMemberships().clear();\n+        userTO.getResources().clear();\n+        userTO.getResources().add(RESOURCE_NAME_LDAP);\n+        userTO.getVirAttrs().add(attributeTO(\"virtualReadOnly\", \"readOnly\"));\n+        userTO = createUser(userTO);\n+        //Finding no values because the virtual attribute is readonly \n+        assertTrue(userTO.getVirAttrMap().get(\"virtualReadOnly\").getValues().isEmpty());\n+    }\n \n }"},{"sha":"d2545b9d31f3b72e552cc5d019bc3cfdfeb8b413","filename":"core/src/test/resources/content.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=25d8c0d6b7c76bacf4c229ae4cba1b393a9c38c1","patch":"@@ -282,6 +282,8 @@ under the License.\n     \n   <UVirAttr id=\"1000\" virSchema_name=\"virtualdata\" owner_id=\"3\"/>\n \n+  <UVirSchema name=\"virtualReadOnly\" READONLY=\"1\"/>\n+  \n   <UDerAttr id=\"100\" derSchema_name=\"cn\" owner_id=\"3\"/>\n   <UDerAttr id=\"101\" derSchema_name=\"cn\" owner_id=\"1\"/>\n \n@@ -747,6 +749,9 @@ under the License.\n   <UMappingItem id=\"318\" accountid=\"0\" password=\"0\" mapping_id=\"11\"\n                 extAttrName=\"mail\" intAttrName=\"userId\" intMappingType=\"UserSchema\"\n                 mandatoryCondition=\"false\" purpose=\"BOTH\"/>\n+  <UMappingItem id=\"319\" accountid=\"0\" password=\"0\" mapping_id=\"11\"\n+                  extAttrName=\"givenname\" intAttrName=\"virtualReadOnly\" intMappingType=\"UserVirtualSchema\"\n+                  mandatoryCondition=\"false\" purpose=\"BOTH\"/>\n   <RMapping id=\"1\" resource_name=\"resource-ldap\"\n             accountlink=\"&apos;cn=&apos; + name + &apos;,ou=groups,o=isp&apos;\"/>\n   <RMappingItem id=\"1\" accountid=\"1\" password=\"0\" mapping_id=\"1\""}]}