{"sha":"5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjVmM2Y5ZDEzZDI5ZTM3ZDBjOWM2ZjJlMDk0Y2VhZDMxYjgwY2FkZjg=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2014-07-01T13:29:07Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2014-07-01T13:29:07Z"},"message":"[SYNCOPE-392, SYNCOPE-471] integration test improvement\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1607071 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"42d60b55d4c1cf2bd94c22aca382c6049bf47b8b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/42d60b55d4c1cf2bd94c22aca382c6049bf47b8b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"e3169a04a0292d312e2d126b788dae8149e14418","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e3169a04a0292d312e2d126b788dae8149e14418","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e3169a04a0292d312e2d126b788dae8149e14418"}],"stats":{"total":496,"additions":228,"deletions":268},"files":[{"sha":"ff4dd476d47d96cb856647c5a3f5b5162fc3cc5d","filename":"build-tools/src/main/resources/testdb.sql","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/build-tools%2Fsrc%2Fmain%2Fresources%2Ftestdb.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/build-tools%2Fsrc%2Fmain%2Fresources%2Ftestdb.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fsrc%2Fmain%2Fresources%2Ftestdb.sql?ref=5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8","patch":"@@ -32,6 +32,8 @@ password VARCHAR(255) NOT NULL,\n status VARCHAR(5));\n \n INSERT INTO test2 VALUES ('testuser2', 'password321', 'false');\n+INSERT INTO test2 VALUES ('rossini', 'password321', 'true');\n+INSERT INTO test2 VALUES ('verdi', 'password321', 'true');\n \n -- this table is for issueSYNCOPE230\n DROP TABLE testsync IF EXISTS;"},{"sha":"441edc68af4352fc0d82598407286b90769890db","filename":"common/src/main/java/org/apache/syncope/common/to/AbstractSyncTaskTO.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractSyncTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractSyncTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAbstractSyncTaskTO.java?ref=5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8","patch":"@@ -46,9 +46,9 @@ public class AbstractSyncTaskTO extends SchedTaskTO {\n \r\n     private boolean syncStatus;\r\n \r\n-    private UnmatchingRule unmatchigRule;\r\n+    private UnmatchingRule unmatchingRule;\r\n \r\n-    private MatchingRule matchigRule;\r\n+    private MatchingRule matchingRule;\r\n \r\n     private List<String> actionsClassNames = new ArrayList<String>();\r\n \r\n@@ -99,19 +99,19 @@ public List<String> getActionsClassNames() {\n         return actionsClassNames;\r\n     }\r\n \r\n-    public UnmatchingRule getUnmatchigRule() {\r\n-        return unmatchigRule;\r\n+    public UnmatchingRule getUnmatchingRule() {\r\n+        return unmatchingRule;\r\n     }\r\n \r\n-    public void setUnmatchigRule(final UnmatchingRule unmatchigRule) {\r\n-        this.unmatchigRule = unmatchigRule;\r\n+    public void setUnmatchingRule(final UnmatchingRule unmatchigRule) {\r\n+        this.unmatchingRule = unmatchigRule;\r\n     }\r\n \r\n-    public MatchingRule getMatchigRule() {\r\n-        return matchigRule;\r\n+    public MatchingRule getMatchingRule() {\r\n+        return matchingRule;\r\n     }\r\n \r\n-    public void setMatchigRule(final MatchingRule matchigRule) {\r\n-        this.matchigRule = matchigRule;\r\n+    public void setMatchingRule(final MatchingRule matchigRule) {\r\n+        this.matchingRule = matchigRule;\r\n     }\r\n }\r"},{"sha":"e1fb3e39f5cd07a022d82d3345d3b567aa1d83f8","filename":"console/src/main/java/org/apache/syncope/console/pages/PushTaskModalPage.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPushTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPushTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPushTaskModalPage.java?ref=5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8","patch":"@@ -57,15 +57,15 @@ public PushTaskModalPage(final ModalWindow window, final PushTaskTO taskTO, fina\n         super(window, taskTO, pageRef);\n \n         // set default Matching rule\n-        ((DropDownChoice) matchingRule.getField()).setDefaultModelObject(taskTO.getMatchigRule() == null\n+        ((DropDownChoice) matchingRule.getField()).setDefaultModelObject(taskTO.getMatchingRule() == null\n                 ? MatchingRule.UPDATE\n-                : taskTO.getMatchigRule());\n+                : taskTO.getMatchingRule());\n         profile.add(matchingRule);\n \n         // set default Unmatching rule\n-        ((DropDownChoice) unmatchingRule.getField()).setDefaultModelObject(taskTO.getUnmatchigRule() == null\n+        ((DropDownChoice) unmatchingRule.getField()).setDefaultModelObject(taskTO.getUnmatchingRule() == null\n                 ? UnmatchingRule.ASSIGN\n-                : taskTO.getUnmatchigRule());\n+                : taskTO.getUnmatchingRule());\n         profile.add(unmatchingRule);\n \n         final WebMarkupContainer filterContainer = new WebMarkupContainer(\"filterContainer\");"},{"sha":"dcdcfe7b9df1194f13e470fbdb02486c34491a9c","filename":"console/src/main/java/org/apache/syncope/console/pages/SyncTaskModalPage.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java?ref=5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8","patch":"@@ -40,15 +40,15 @@ public SyncTaskModalPage(final ModalWindow window, final SyncTaskTO taskTO, fina\n         super(window, taskTO, pageRef);\n \n         // set default Matching rule\n-        ((DropDownChoice) matchingRule.getField()).setDefaultModelObject(taskTO.getMatchigRule() == null\n+        ((DropDownChoice) matchingRule.getField()).setDefaultModelObject(taskTO.getMatchingRule() == null\n                 ? MatchingRule.UPDATE\n-                : taskTO.getMatchigRule());\n+                : taskTO.getMatchingRule());\n         profile.add(matchingRule);\n \n         // set default Unmatching rule\n-        ((DropDownChoice) unmatchingRule.getField()).setDefaultModelObject(taskTO.getUnmatchigRule() == null\n+        ((DropDownChoice) unmatchingRule.getField()).setDefaultModelObject(taskTO.getUnmatchingRule() == null\n                 ? UnmatchingRule.PROVISION\n-                : taskTO.getUnmatchigRule());\n+                : taskTO.getUnmatchingRule());\n         profile.add(unmatchingRule);\n \n         final AjaxCheckBoxPanel fullReconciliation = new AjaxCheckBoxPanel(\"fullReconciliation\","},{"sha":"ff17559f45133a4d95517e97a619d3d8e03d8511","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractSyncTask.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSyncTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSyncTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSyncTask.java?ref=5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8","patch":"@@ -69,13 +69,13 @@ public abstract class AbstractSyncTask extends SchedTask {\n      * @see UnmatchingRule\n      */\n     @Enumerated(EnumType.STRING)\n-    protected UnmatchingRule unmatchigRule;\n+    protected UnmatchingRule unmatchingRule;\n \n     /**\n      * @see MatchingRule\n      */\n     @Enumerated(EnumType.STRING)\n-    protected MatchingRule matchigRule;\n+    protected MatchingRule matchingRule;\n \n     @ElementCollection(fetch = FetchType.EAGER)\n     private List<String> actionsClassNames = new ArrayList<String>();\n@@ -130,16 +130,16 @@ public void setSyncStatus(final boolean syncStatus) {\n         this.syncStatus = getBooleanAsInteger(syncStatus);\n     }\n \n-    public abstract UnmatchingRule getUnmatchigRule();\n+    public abstract UnmatchingRule getUnmatchingRule();\n \n-    public void setUnmatchigRule(final UnmatchingRule unmatchigRule) {\n-        this.unmatchigRule = unmatchigRule;\n+    public void setUnmatchingRule(final UnmatchingRule unmatchigRule) {\n+        this.unmatchingRule = unmatchigRule;\n     }\n \n-    public abstract MatchingRule getMatchigRule();\n+    public abstract MatchingRule getMatchingRule();\n \n-    public void setMatchigRule(final MatchingRule matchigRule) {\n-        this.matchigRule = matchigRule;\n+    public void setMatchingRule(final MatchingRule matchigRule) {\n+        this.matchingRule = matchigRule;\n     }\n \n     public List<String> getActionsClassNames() {"},{"sha":"89c0e95cb6720634525eb5459ff600b01f1d83d0","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/PushTask.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPushTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPushTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPushTask.java?ref=5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8","patch":"@@ -60,12 +60,12 @@ public void setRoleFilter(final String roleFilter) {\n     }\n \n     @Override\n-    public UnmatchingRule getUnmatchigRule() {\n-        return this.unmatchigRule == null ? DEF_UNMATCHIG_RULE : unmatchigRule;\n+    public UnmatchingRule getUnmatchingRule() {\n+        return this.unmatchingRule == null ? DEF_UNMATCHIG_RULE : unmatchingRule;\n     }\n \n     @Override\n-    public MatchingRule getMatchigRule() {\n-        return this.matchigRule == null ? DEF_MATCHIG_RULE : this.matchigRule;\n+    public MatchingRule getMatchingRule() {\n+        return this.matchingRule == null ? DEF_MATCHIG_RULE : this.matchingRule;\n     }\n }"},{"sha":"7cb2debbe22c80eef8aac7da318f9c687f02ba48","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/SyncTask.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncTask.java?ref=5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8","patch":"@@ -86,12 +86,12 @@ public void setFullReconciliation(final boolean fullReconciliation) {\n     }\n \n     @Override\n-    public UnmatchingRule getUnmatchigRule() {\n-        return this.unmatchigRule == null ? DEF_UNMATCHIG_RULE : unmatchigRule;\n+    public UnmatchingRule getUnmatchingRule() {\n+        return this.unmatchingRule == null ? DEF_UNMATCHIG_RULE : unmatchingRule;\n     }\n \n     @Override\n-    public MatchingRule getMatchigRule() {\n-        return this.matchigRule == null ? DEF_MATCHIG_RULE : this.matchigRule;\n+    public MatchingRule getMatchingRule() {\n+        return this.matchingRule == null ? DEF_MATCHIG_RULE : this.matchingRule;\n     }\n }"},{"sha":"9d53c6a88466d3b0d7a404e4a5c6fe162f0e1092","filename":"core/src/main/java/org/apache/syncope/core/rest/data/TaskDataBinder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FTaskDataBinder.java?ref=5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8","patch":"@@ -155,8 +155,8 @@ private void fill(final AbstractSyncTask task, final AbstractSyncTaskTO taskTO)\n         task.setPerformUpdate(taskTO.isPerformUpdate());\n         task.setPerformDelete(taskTO.isPerformDelete());\n         task.setSyncStatus(taskTO.isSyncStatus());\n-        task.setMatchigRule(taskTO.getMatchigRule());\n-        task.setUnmatchigRule(taskTO.getUnmatchigRule());\n+        task.setMatchingRule(taskTO.getMatchingRule());\n+        task.setUnmatchingRule(taskTO.getUnmatchingRule());\n         task.getActionsClassNames().clear();\n         task.getActionsClassNames().addAll(taskTO.getActionsClassNames());\n     }"},{"sha":"1a3f4b1a7295b438d5753fb8495b8e0f711b5ce6","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSubjectPushResultHandler.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectPushResultHandler.java?ref=5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8","patch":"@@ -97,7 +97,7 @@ protected final void doHandle(final AbstractSubject subject)\n         result.setId(toBeHandled.getId());\n         result.setSubjectType(attrUtil.getType());\n         result.setName(getName(toBeHandled));\n-        \n+\n         final Boolean enabled = toBeHandled instanceof SyncopeUser && profile.getSyncTask().isSyncStatus()\n                 ? ((SyncopeUser) toBeHandled).isSuspended() ? Boolean.FALSE : Boolean.TRUE\n                 : null;\n@@ -124,21 +124,21 @@ protected final void doHandle(final AbstractSubject subject)\n \n         // Try to read remote object (user / group) BEFORE any actual operation\n         beforeObj = getRemoteObject(values.getKey());\n-        \n+\n         if (profile.isDryRun()) {\n             if (beforeObj == null) {\n-                result.setOperation(getResourceOperation(profile.getSyncTask().getUnmatchigRule()));\n+                result.setOperation(getResourceOperation(profile.getSyncTask().getUnmatchingRule()));\n             } else {\n-                result.setOperation(getResourceOperation(profile.getSyncTask().getMatchigRule()));\n+                result.setOperation(getResourceOperation(profile.getSyncTask().getMatchingRule()));\n             }\n             result.setStatus(SyncResult.Status.SUCCESS);\n         } else {\n             try {\n                 if (beforeObj == null) {\n-                    operation = profile.getSyncTask().getUnmatchigRule().name().toLowerCase();\n-                    result.setOperation(getResourceOperation(profile.getSyncTask().getUnmatchigRule()));\n+                    operation = profile.getSyncTask().getUnmatchingRule().name().toLowerCase();\n+                    result.setOperation(getResourceOperation(profile.getSyncTask().getUnmatchingRule()));\n \n-                    switch (profile.getSyncTask().getUnmatchigRule()) {\n+                    switch (profile.getSyncTask().getUnmatchingRule()) {\n                         case ASSIGN:\n                             for (PushActions action : profile.getActions()) {\n                                 action.beforeAssign(this.getProfile(), values, toBeHandled);\n@@ -162,10 +162,10 @@ protected final void doHandle(final AbstractSubject subject)\n                     }\n \n                 } else {\n-                    operation = profile.getSyncTask().getMatchigRule().name().toLowerCase();\n-                    result.setOperation(getResourceOperation(profile.getSyncTask().getMatchigRule()));\n+                    operation = profile.getSyncTask().getMatchingRule().name().toLowerCase();\n+                    result.setOperation(getResourceOperation(profile.getSyncTask().getMatchingRule()));\n \n-                    switch (profile.getSyncTask().getMatchigRule()) {\n+                    switch (profile.getSyncTask().getMatchingRule()) {\n                         case UPDATE:\n                             for (PushActions action : profile.getActions()) {\n                                 action.beforeUpdate(this.getProfile(), values, toBeHandled);"},{"sha":"3058fa6512e74b665728c45c3dc5e6e668e39a5c","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSubjectSyncResultHandler.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectSyncResultHandler.java?ref=5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8","patch":"@@ -557,7 +557,7 @@ protected final void doHandle(final SyncDelta delta, final Collection<SyncResult\n \n             if (SyncDeltaType.CREATE_OR_UPDATE == delta.getDeltaType()) {\n                 if (subjectIds.isEmpty()) {\n-                    switch (profile.getSyncTask().getUnmatchigRule()) {\n+                    switch (profile.getSyncTask().getUnmatchingRule()) {\n                         case ASSIGN:\n                             profile.getResults().addAll(assign(delta, attrUtil, profile.isDryRun()));\n                             break;\n@@ -568,7 +568,7 @@ protected final void doHandle(final SyncDelta delta, final Collection<SyncResult\n                         // do nothing\n                     }\n                 } else {\n-                    switch (profile.getSyncTask().getMatchigRule()) {\n+                    switch (profile.getSyncTask().getMatchingRule()) {\n                         case UPDATE:\n                             profile.getResults().addAll(update(delta, subjectIds, attrUtil, profile.isDryRun()));\n                             break;"},{"sha":"11cfabc641b357f266f132f12de7c3c38fc7016c","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/RolePushResultHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRolePushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRolePushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRolePushResultHandler.java?ref=5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8","patch":"@@ -163,7 +163,7 @@ protected ConnectorObject getRemoteObject(final String accountId) {\n \n             final Uid uid = new Uid(accountId);\n \n-            profile.getConnector().getObject(\n+            obj = profile.getConnector().getObject(\n                     ObjectClass.GROUP,\n                     uid,\n                     profile.getConnector().getOperationOptions(Collections.<AbstractMappingItem>emptySet()));"},{"sha":"bf931cd32611b4c73b0be88166659a14c4ba874e","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/TaskTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java?ref=5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8","patch":"@@ -68,7 +68,7 @@ public void findAll() {\n         assertEquals(1, taskDAO.findAll(NotificationTask.class).size());\n         assertEquals(1, taskDAO.findAll(SchedTask.class).size());\n         assertEquals(6, taskDAO.findAll(SyncTask.class).size());\n-        assertEquals(1, taskDAO.findAll(PushTask.class).size());\n+        assertEquals(11, taskDAO.findAll(PushTask.class).size());\n     }\n \n     @Test"},{"sha":"f0936e5d1426079abcfc3210c3efe25762b7cece","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":125,"deletions":211,"changes":336,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8","patch":"@@ -26,7 +26,16 @@\n import static org.junit.Assert.fail;\n \n import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.SyncopeClient;\n import org.apache.syncope.common.SyncopeClientException;\n@@ -56,6 +65,7 @@\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.types.TaskType;\n import org.apache.syncope.common.types.TraceLevel;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.common.types.UnmatchingRule;\n import org.apache.syncope.common.wrap.PushActionClass;\n import org.apache.syncope.core.sync.TestSyncActions;\n@@ -149,7 +159,7 @@ public void createPushTask() {\n                 SyncopeClient.getUserSearchConditionBuilder().hasNotResources(RESOURCE_NAME_TESTDB2).query());\n         task.setRoleFilter(\n                 SyncopeClient.getRoleSearchConditionBuilder().isNotNull(\"cool\").query());\n-        task.setMatchigRule(MatchingRule.LINK);\n+        task.setMatchingRule(MatchingRule.LINK);\n \n         final Response response = taskService.create(task);\n         final PushTaskTO actual = getObject(response.getLocation(), TaskService.class, PushTaskTO.class);\n@@ -161,8 +171,8 @@ public void createPushTask() {\n         assertEquals(task.getJobClassName(), actual.getJobClassName());\n         assertEquals(task.getUserFilter(), actual.getUserFilter());\n         assertEquals(task.getRoleFilter(), actual.getRoleFilter());\n-        assertEquals(UnmatchingRule.ASSIGN, actual.getUnmatchigRule());\n-        assertEquals(MatchingRule.LINK, actual.getMatchigRule());\n+        assertEquals(UnmatchingRule.ASSIGN, actual.getUnmatchingRule());\n+        assertEquals(MatchingRule.LINK, actual.getMatchingRule());\n     }\n \n     @Test\n@@ -249,9 +259,9 @@ public void read() {\n         assertNotNull(taskTO.getExecutions());\n         assertTrue(taskTO.getExecutions().isEmpty());\n \n-        final PushTaskTO pushTaskTO = taskService.<PushTaskTO>read(13L);\n-        assertEquals(UnmatchingRule.ASSIGN, pushTaskTO.getUnmatchigRule());\n-        assertEquals(MatchingRule.UPDATE, pushTaskTO.getMatchigRule());\n+        final PushTaskTO pushTaskTO = taskService.<PushTaskTO>read(17L);\n+        assertEquals(UnmatchingRule.ASSIGN, pushTaskTO.getUnmatchingRule());\n+        assertEquals(MatchingRule.UPDATE, pushTaskTO.getMatchingRule());\n     }\n \n     @Test\n@@ -394,26 +404,7 @@ public void sync() {\n     @Test\n     public void reconcileFromDB() {\n         // update sync task\n-        SyncTaskTO task = taskService.read(7L);\n-        assertNotNull(task);\n-\n-        // add user template\n-        UserTO template = new UserTO();\n-        template.getAttrs().add(attributeTO(\"type\", \"'type a'\"));\n-        template.getAttrs().add(attributeTO(\"userId\", \"'reconciled@syncope.apache.org'\"));\n-        template.getAttrs().add(attributeTO(\"fullname\", \"'reconciled fullname'\"));\n-        template.getAttrs().add(attributeTO(\"surname\", \"'surname'\"));\n-\n-        task.setUserTemplate(template);\n-\n-        taskService.update(task.getId(), task);\n-        SyncTaskTO actual = taskService.read(task.getId());\n-        assertNotNull(actual);\n-        assertEquals(task.getId(), actual.getId());\n-        assertEquals(template, actual.getUserTemplate());\n-        assertEquals(new RoleTO(), actual.getRoleTemplate());\n-\n-        TaskExecTO execution = execSyncTask(actual.getId(), 20, false);\n+        TaskExecTO execution = execSyncTask(7L, 20, false);\n         assertNotNull(execution.getStatus());\n         assertTrue(PropagationTaskExecStatus.valueOf(execution.getStatus()).isSuccessful());\n \n@@ -427,7 +418,7 @@ public void reconcileFromDB() {\n         jdbcTemplate.execute(\"UPDATE TEST SET STATUS=TRUE\");\n \n         // re-execute the same SyncTask: now user must be active\n-        execution = execSyncTask(actual.getId(), 20, false);\n+        execution = execSyncTask(7L, 20, false);\n         assertNotNull(execution.getStatus());\n         assertTrue(PropagationTaskExecStatus.valueOf(execution.getStatus()).isSuccessful());\n \n@@ -439,32 +430,7 @@ public void reconcileFromDB() {\n     @Test\n     public void reconcileFromLDAP() {\n         // Update sync task\n-        SyncTaskTO task = taskService.read(11L);\n-        assertNotNull(task);\n-\n-        //  add user template\n-        final UserTO userTemplate = task.getUserTemplate();\n-        userTemplate.getResources().add(RESOURCE_NAME_LDAP);\n-        userTemplate.getVirAttrs().add(attributeTO(\"virtualReadOnly\", \"\"));\n-\n-        task.setUserTemplate(userTemplate);\n-\n-        //  add role template\n-        RoleTO roleTemplate = new RoleTO();\n-        roleTemplate.setParent(8L);\n-        roleTemplate.getRAttrTemplates().add(\"show\");\n-        roleTemplate.getAttrs().add(attributeTO(\"show\", \"'true'\"));\n-\n-        task.setRoleTemplate(roleTemplate);\n-\n-        taskService.update(task.getId(), task);\n-        SyncTaskTO actual = taskService.read(task.getId());\n-        assertNotNull(actual);\n-        assertEquals(task.getId(), actual.getId());\n-        assertEquals(roleTemplate, actual.getRoleTemplate());\n-        assertEquals(userTemplate, actual.getUserTemplate());\n-\n-        TaskExecTO execution = execSyncTask(actual.getId(), 20, false);\n+        TaskExecTO execution = execSyncTask(11L, 20, false);\n \n         // 1. verify execution status\n         final String status = execution.getStatus();\n@@ -774,7 +740,7 @@ private TaskExecTO execSyncTask(final Long taskId, final int maxWaitSeconds, fin\n         // wait for sync completion (executions incremented)\n         do {\n             try {\n-                Thread.sleep(2000);\n+                Thread.sleep(1000);\n             } catch (InterruptedException e) {\n             }\n \n@@ -788,7 +754,29 @@ private TaskExecTO execSyncTask(final Long taskId, final int maxWaitSeconds, fin\n         if (i == maxit) {\n             fail(\"Timeout when executing task \" + taskId);\n         }\n-        return taskTO.getExecutions().get(0);\n+        return taskTO.getExecutions().get(taskTO.getExecutions().size() - 1);\n+    }\n+\n+    private Map<Long, TaskExecTO> execSyncTasks(\n+            final Set<Long> taskIds, final int maxWaitSeconds, final boolean dryRun) throws Exception {\n+\n+        final ExecutorService service = Executors.newFixedThreadPool(taskIds.size());\n+        final List<Future<TaskExecTO>> futures = new ArrayList<Future<TaskExecTO>>();\n+\n+        for (final Long id : taskIds) {\n+            futures.add(service.submit(new ThreadExec(this, id, maxWaitSeconds, dryRun)));\n+        }\n+\n+        final Map<Long, TaskExecTO> res = new HashMap<Long, TaskExecTO>();\n+\n+        for (Future<TaskExecTO> f : futures) {\n+            TaskExecTO taskExecTO = f.get(100, TimeUnit.SECONDS);\n+            res.put(taskExecTO.getTask(), taskExecTO);\n+        }\n+\n+        service.shutdownNow();\n+\n+        return res;\n     }\n \n     @Test\n@@ -977,232 +965,158 @@ public void bulkAction() {\n     }\n \n     @Test\n-    public void pushUnmatchingUsers() {\n-        // ------------------------------------------\n-        // Matching --> Assign --> dryRuyn\n-        // ------------------------------------------\n-        UserTO userTO = userService.read(3L);\n-        assertEquals(\"Vivaldi\", userTO.getAttrMap().get(\"surname\").getValues().get(0));\n-        assertFalse(userTO.getResources().contains(RESOURCE_NAME_TESTDB2));\n+    public void pushMatchingUnmatchingRoles() {\n+        assertFalse(roleService.read(3L).getResources().contains(RESOURCE_NAME_LDAP));\n \n-        PushTaskTO task = taskService.<PushTaskTO>read(13L);\n-        assertNotNull(task);\n-        task.setUserFilter(SyncopeClient.getUserSearchConditionBuilder().is(\"surname\").equalTo(\"Vivaldi\").query());\n-        taskService.update(13L, task);\n+        execSyncTask(23L, 50, false);\n \n-        assertEquals(task.getUserFilter(), taskService.<PushTaskTO>read(13L).getUserFilter());\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, 3L));\n+        assertTrue(roleService.read(3L).getResources().contains(RESOURCE_NAME_LDAP));\n \n-        execSyncTask(task.getId(), 50, true);\n+        execSyncTask(23L, 50, false);\n \n-        final JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-        assertEquals(0, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='vivaldi'\").size());\n+        assertNotNull(resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.ROLE, 3L));\n+        assertFalse(roleService.read(3L).getResources().contains(RESOURCE_NAME_LDAP));\n+    }\n \n+    @Test\n+    public void pushUnmatchingUsers() throws Exception {\n+        assertFalse(userService.read(2L).getResources().contains(RESOURCE_NAME_TESTDB2));\n         assertFalse(userService.read(3L).getResources().contains(RESOURCE_NAME_TESTDB2));\n+        assertFalse(userService.read(4L).getResources().contains(RESOURCE_NAME_TESTDB2));\n+        assertTrue(userService.read(5L).getResources().contains(RESOURCE_NAME_TESTDB2));\n \n-        jdbcTemplate.execute(\"DELETE FROM test2 WHERE ID='vivaldi'\");\n+        final JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n+        assertEquals(0, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='puccini'\").size());\n+\n+        // ------------------------------------------\n+        // Unmatching --> Assign --> dryRuyn\n         // ------------------------------------------\n+        execSyncTask(13L, 50, true);\n+        assertEquals(0, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='vivaldi'\").size());\n+        assertFalse(userService.read(3L).getResources().contains(RESOURCE_NAME_TESTDB2));\n+        // ------------------------------------------\n+\n+        final Set<Long> pushTaskIds = new HashSet<Long>();\n+        pushTaskIds.add(13L);\n+        pushTaskIds.add(14L);\n+        pushTaskIds.add(15L);\n+        pushTaskIds.add(16L);\n+        execSyncTasks(pushTaskIds, 50, false);\n \n         // ------------------------------------------\n-        // Matching --> Assign\n+        // Unatching --> Ignore\n+        // ------------------------------------------\n+        assertEquals(1, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='verdi'\").size());\n+        assertFalse(userService.read(2L).getResources().contains(RESOURCE_NAME_TESTDB2));\n         // ------------------------------------------\n-        execSyncTask(task.getId(), 50, false);\n \n+        // ------------------------------------------\n+        // Unmatching --> Assign\n+        // ------------------------------------------\n         assertEquals(1, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='vivaldi'\").size());\n-        assertEquals(1, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID<>'vivaldi'\").size());\n-\n         assertTrue(userService.read(3L).getResources().contains(RESOURCE_NAME_TESTDB2));\n-        assertEquals(\"vivaldi\",\n-                jdbcTemplate.queryForObject(\"SELECT ID FROM test2 WHERE ID=?\", String.class, \"vivaldi\"));\n-\n         jdbcTemplate.execute(\"DELETE FROM test2 WHERE ID='vivaldi'\");\n         // ------------------------------------------\n \n         // ------------------------------------------\n-        // Matching --> Provision\n+        // Unmatching --> Provision\n         // ------------------------------------------\n-        assertEquals(\"Bellini\", userService.read(4L).getAttrMap().get(\"surname\").getValues().get(0));\n-\n-        task.setUserFilter(SyncopeClient.getUserSearchConditionBuilder().is(\"surname\").equalTo(\"Bellini\").query());\n-        task.setUnmatchigRule(UnmatchingRule.PROVISION);\n-        taskService.update(13L, task);\n-        assertEquals(task.getUserFilter(), taskService.<PushTaskTO>read(13L).getUserFilter());\n-\n-        execSyncTask(task.getId(), 50, false);\n-\n         assertEquals(1, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='bellini'\").size());\n-        assertEquals(1, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID<>'bellini'\").size());\n-\n         assertFalse(userService.read(4L).getResources().contains(RESOURCE_NAME_TESTDB2));\n-        assertEquals(\"bellini\",\n-                jdbcTemplate.queryForObject(\"SELECT ID FROM test2 WHERE ID=?\", String.class, \"bellini\"));\n-\n         jdbcTemplate.execute(\"DELETE FROM test2 WHERE ID='bellini'\");\n         // ------------------------------------------\n \n         // ------------------------------------------\n-        // Matching --> Unlink\n+        // Unmatching --> Unlink\n         // ------------------------------------------\n-        userTO = userService.read(5L);\n-        assertEquals(\"Puccini\", userTO.getAttrMap().get(\"surname\").getValues().get(0));\n-        assertFalse(userTO.getResources().contains(RESOURCE_NAME_TESTDB2));\n-\n-        task.setUserFilter(SyncopeClient.getUserSearchConditionBuilder().is(\"surname\").equalTo(\"Puccini\").query());\n-        task.setUnmatchigRule(UnmatchingRule.UNLINK);\n-        taskService.update(13L, task);\n-        assertEquals(task.getUserFilter(), taskService.<PushTaskTO>read(13L).getUserFilter());\n-\n-        execSyncTask(task.getId(), 50, false);\n-\n         assertEquals(0, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='puccini'\").size());\n-\n         assertFalse(userService.read(5L).getResources().contains(RESOURCE_NAME_TESTDB2));\n         // ------------------------------------------\n-\n-        // ------------------------------------------\n-        // Matching --> Ignore\n-        // ------------------------------------------\n-        userTO = userService.read(5L);\n-        assertEquals(\"Puccini\", userTO.getAttrMap().get(\"surname\").getValues().get(0));\n-        assertFalse(userTO.getResources().contains(RESOURCE_NAME_TESTDB2));\n-\n-        task.setUserFilter(SyncopeClient.getUserSearchConditionBuilder().is(\"surname\").equalTo(\"Rossini\").query());\n-        task.setUnmatchigRule(UnmatchingRule.IGNORE);\n-        taskService.update(13L, task);\n-        assertEquals(task.getUserFilter(), taskService.<PushTaskTO>read(13L).getUserFilter());\n-\n-        execSyncTask(task.getId(), 50, false);\n-\n-        assertEquals(0, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='rossini'\").size());\n-\n-        assertFalse(userService.read(1L).getResources().contains(RESOURCE_NAME_TESTDB2));\n-        // ------------------------------------------\n     }\n \n     @Test\n-    public void pushMatchingUser() {\n-        // ------------------------------------------\n-        // Assign Verdi to test2 --> dryRun\n-        // ------------------------------------------\n-        UserTO userTO = userService.read(2L);\n-        assertEquals(\"Verdi\", userTO.getAttrMap().get(\"surname\").getValues().get(0));\n-        assertFalse(userTO.getResources().contains(RESOURCE_NAME_TESTDB2));\n-\n-        PushTaskTO task = taskService.<PushTaskTO>read(13L);\n-        assertNotNull(task);\n-\n-        task.setUserFilter(SyncopeClient.getUserSearchConditionBuilder().is(\"surname\").equalTo(\"Verdi\").query());\n-        task.setUnmatchigRule(UnmatchingRule.ASSIGN);\n-        taskService.update(13L, task);\n-\n-        assertEquals(UnmatchingRule.ASSIGN, taskService.<PushTaskTO>read(13L).getUnmatchigRule());\n-\n-        execSyncTask(task.getId(), 50, true);\n-\n+    public void pushMatchingUser() throws Exception {\n+        assertTrue(userService.read(1L).getResources().contains(RESOURCE_NAME_TESTDB2));\n         assertFalse(userService.read(2L).getResources().contains(RESOURCE_NAME_TESTDB2));\n \n-        JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-        assertEquals(0, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='verdi'\").size());\n-        // ------------------------------------------\n+        final JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n+        assertEquals(1, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='verdi'\").size());\n+        assertEquals(1, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='rossini'\").size());\n \n         // ------------------------------------------\n-        // Assign Verdi to test2\n+        // Matching --> Deprovision --> dryRuyn\n+        // ------------------------------------------\n+        execSyncTask(19L, 50, true);\n+        assertTrue(userService.read(1L).getResources().contains(RESOURCE_NAME_TESTDB2));\n+        assertEquals(1, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='rossini'\").size());\n         // ------------------------------------------\n-        userTO = userService.read(2L);\n-        assertEquals(\"Verdi\", userTO.getAttrMap().get(\"surname\").getValues().get(0));\n-        assertFalse(userTO.getResources().contains(RESOURCE_NAME_TESTDB2));\n \n-        execSyncTask(task.getId(), 50, false);\n+        final Set<Long> pushTaskIds = new HashSet<Long>();\n+        pushTaskIds.add(18L);\n+        pushTaskIds.add(19L);\n+        pushTaskIds.add(16L);\n \n-        assertTrue(userService.read(2L).getResources().contains(RESOURCE_NAME_TESTDB2));\n-        assertEquals(\"verdi\", jdbcTemplate.queryForObject(\"SELECT ID FROM test2 WHERE ID=?\", String.class, \"verdi\"));\n-        // ------------------------------------------\n+        execSyncTasks(pushTaskIds, 50, false);\n \n         // ------------------------------------------\n-        // Matching --> Deprovision\n+        // Matching --> Deprovision && Ignore\n         // ------------------------------------------\n-        assertEquals(1, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='verdi'\").size());\n-\n-        task.setMatchigRule(MatchingRule.DEPROVISION);\n-        taskService.update(13L, task);\n-        assertEquals(MatchingRule.DEPROVISION, taskService.<PushTaskTO>read(13L).getMatchigRule());\n-\n-        execSyncTask(task.getId(), 50, false);\n-\n-        assertTrue(userService.read(2L).getResources().contains(RESOURCE_NAME_TESTDB2));\n+        assertFalse(userService.read(2L).getResources().contains(RESOURCE_NAME_TESTDB2));\n         // DELETE Capability not available ....\n         assertEquals(1, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='verdi'\").size());\n         // ------------------------------------------\n \n         // ------------------------------------------\n         // Matching --> Unassign\n         // ------------------------------------------\n-        task.setMatchigRule(MatchingRule.UNASSIGN);\n-        taskService.update(13L, task);\n-        assertEquals(MatchingRule.UNASSIGN, taskService.<PushTaskTO>read(13L).getMatchigRule());\n-\n-        execSyncTask(task.getId(), 50, false);\n-\n-        assertFalse(userService.read(2L).getResources().contains(RESOURCE_NAME_TESTDB2));\n+        assertFalse(userService.read(1L).getResources().contains(RESOURCE_NAME_TESTDB2));\n         // DELETE Capability not available ....\n-        assertEquals(1, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='verdi'\").size());\n+        assertEquals(1, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='rossini'\").size());\n         // ------------------------------------------\n \n         // ------------------------------------------\n         // Matching --> Link\n         // ------------------------------------------\n-        task.setMatchigRule(MatchingRule.LINK);\n-        taskService.update(13L, task);\n-        assertEquals(MatchingRule.LINK, taskService.<PushTaskTO>read(13L).getMatchigRule());\n-\n-        execSyncTask(task.getId(), 50, false);\n-\n+        execSyncTask(20L, 50, false);\n         assertTrue(userService.read(2L).getResources().contains(RESOURCE_NAME_TESTDB2));\n         assertEquals(1, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='verdi'\").size());\n         // ------------------------------------------\n \n-        // ------------------------------------------\n-        // Matching --> Unlink\n-        // ------------------------------------------\n-        task.setMatchigRule(MatchingRule.UNLINK);\n-        taskService.update(13L, task);\n-        assertEquals(MatchingRule.UNLINK, taskService.<PushTaskTO>read(13L).getMatchigRule());\n+        pushTaskIds.clear();\n+        pushTaskIds.add(21L);\n+        pushTaskIds.add(22L);\n \n-        execSyncTask(task.getId(), 50, false);\n-\n-        assertFalse(userService.read(2L).getResources().contains(RESOURCE_NAME_TESTDB2));\n-        assertEquals(\"verdi\", jdbcTemplate.queryForObject(\"SELECT ID FROM test2 WHERE ID=?\", String.class, \"verdi\"));\n-        // ------------------------------------------\n+        execSyncTasks(pushTaskIds, 50, false);\n \n         // ------------------------------------------\n-        // Matching --> Update\n+        // Matching --> Unlink && Update\n         // ------------------------------------------\n-        task.setMatchigRule(MatchingRule.UPDATE);\n-        taskService.update(13L, task);\n-        assertEquals(MatchingRule.UPDATE, taskService.<PushTaskTO>read(13L).getMatchigRule());\n-\n-        execSyncTask(task.getId(), 50, false);\n-\n         assertFalse(userService.read(2L).getResources().contains(RESOURCE_NAME_TESTDB2));\n         assertEquals(1, jdbcTemplate.queryForList(\"SELECT ID FROM test2 WHERE ID='verdi'\").size());\n         // ------------------------------------------\n+    }\n \n-        // ------------------------------------------\n-        // Matching --> Ignore\n-        // ------------------------------------------\n-        task.setMatchigRule(MatchingRule.IGNORE);\n-        taskService.update(13L, task);\n-        assertEquals(MatchingRule.IGNORE, taskService.<PushTaskTO>read(13L).getMatchigRule());\n+    private static class ThreadExec implements Callable<TaskExecTO> {\n \n-        execSyncTask(task.getId(), 50, false);\n+        private final TaskTestITCase test;\n \n-        assertFalse(userService.read(2L).getResources().contains(RESOURCE_NAME_TESTDB2));\n-        assertEquals(\"verdi\", jdbcTemplate.queryForObject(\"SELECT ID FROM test2 WHERE ID=?\", String.class, \"verdi\"));\n-        // ------------------------------------------\n+        private final Long taskId;\n \n-        task.setMatchigRule(MatchingRule.UPDATE);\n-        task.setUserFilter(null);\n-        taskService.update(13L, task);\n+        private final int maxWaitSeconds;\n \n-        jdbcTemplate.execute(\"DELETE FROM test2 WHERE ID='verdi'\");\n+        private final boolean dryRun;\n+\n+        public ThreadExec(TaskTestITCase test, Long taskId, int maxWaitSeconds, boolean dryRun) {\n+            this.test = test;\n+            this.taskId = taskId;\n+            this.maxWaitSeconds = maxWaitSeconds;\n+            this.dryRun = dryRun;\n+        }\n+\n+        @Override\n+        public TaskExecTO call() throws Exception {\n+            return test.execSyncTask(taskId, maxWaitSeconds, dryRun);\n+        }\n     }\n }"},{"sha":"7fd4103c4126eee3f09ab73f7af73569ed32ead1","filename":"core/src/test/resources/content.xml","status":"modified","additions":51,"deletions":7,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=5f3f9d13d29e37d0c9c6f2e094cead31b80cadf8","patch":"@@ -483,11 +483,8 @@ under the License.\n                 xmlConfiguration=\"%3Cset%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EattributesToSynchronize%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EAttributes%20to%20Synchronize%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20names%20of%20the%20attributes%20to%20synchronize.%20This%20ignores%20updates%20from%20the%20change%20log%20if%20they%20do%20not%20update%20any%20of%20the%20named%20attributes.%20For%20example%2C%20if%20only%20%26quot%3Bdepartment%26quot%3B%20is%20listed%2C%20then%20only%20changes%20that%20affect%20%26quot%3Bdepartment%26quot%3B%20will%20be%20processed.%20All%20other%20updates%20are%20ignored.%20If%20blank%20(the%20default)%2C%20then%20all%20changes%20are%20processed.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3Ecredentials%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EPassword%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EPassword%20for%20the%20principal.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eorg.identityconnectors.common.security.GuardedString%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Esecret%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EsynchronizePasswords%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EEnable%20Password%20Synchronization%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EIf%20true%2C%20the%20connector%20will%20synchronize%20passwords.%20The%20Password%20Capture%20Plugin%20needs%20to%20be%20installed%20for%20password%20synchronization%20to%20work.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Efalse%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EchangeLogBlockSize%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EChange%20Log%20Block%20Size%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20number%20of%20change%20log%20entries%20to%20fetch%20per%20query.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eint%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Etrue%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cint%3E100%3C%2Fint%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EblockSize%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EBlock%20Size%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20maximum%20number%20of%20accounts%20that%20can%20be%20in%20a%20block%20when%20retrieving%20accounts%20in%20blocks.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eint%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EpasswordHashAlgorithm%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EPassword%20Hash%20Algorithm%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EIndicates%20the%20algorithm%20that%20the%20Identity%20system%20should%20use%20to%20hash%20the%20password.%20Currently%20supported%20values%20are%20SSHA%2C%20SHA%2C%20SSHA1%2C%20and%20SHA1.%20A%20blank%20value%20indicates%20that%20the%20system%20will%20not%20hash%20passwords.%20This%20will%20cause%20cleartext%20passwords%20to%20be%20stored%20in%20LDAP%20unless%20the%20LDAP%20server%20performs%20the%20hash%20(Netscape%20Directory%20Server%20and%20iPlanet%20Directory%20Server%20do).%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3ESHA%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EchangeNumberAttribute%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EChange%20Number%20Attribute%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20name%20of%20the%20change%20number%20attribute%20in%20the%20change%20log%20entry.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Etrue%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3EchangeNumber%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EmaintainLdapGroupMembership%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EMaintain%20LDAP%20Group%20Membership%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EWhen%20enabled%20and%20a%20user%20is%20renamed%20or%20deleted%2C%20update%20any%20LDAP%20groups%20to%20which%20the%20user%20belongs%20to%20reflect%20the%20new%20name.%20Otherwise%2C%20the%20LDAP%20resource%20must%20maintain%20referential%20integrity%20with%20respect%20to%20group%20membership.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Etrue%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EusePagedResultControl%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EUse%20Paged%20Result%20Control%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EWhen%20enabled%2C%20the%20LDAP%20Paged%20Results%20control%20is%20preferred%20over%20the%20VLV%20control%20when%20retrieving%20accounts.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Efalse%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EuseBlocks%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EUse%20Blocks%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EWhen%20performing%20operations%20on%20large%20numbers%20of%20accounts%2C%20the%20accounts%20are%20processed%20in%20blocks%20to%20reduce%20the%20amount%20of%20memory%20used%20by%20the%20operation.%20Select%20this%20option%20to%20process%20accounts%20in%20blocks.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cboolean%3Efalse%3C%2Fboolean%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EuidAttribute%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EUid%20Attribute%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20name%20of%20the%20LDAP%20attribute%20which%20is%20mapped%20to%20the%20Uid%20attribute.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cnull%2F%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EobjectClassesToSynchronize%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EObject%20Classes%20to%20Synchronize%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20object%20classes%20to%20synchronize.%20The%20change%20log%20is%20for%20all%20objects%3B%20this%20filters%20updates%20to%20just%20the%20listed%20object%20classes.%20You%20should%20not%20list%20the%20superclasses%20of%20an%20object%20class%20unless%20you%20intend%20to%20synchronize%20objects%20with%20any%20of%20the%20superclass%20values.%20For%20example%2C%20if%20only%20%26quot%3BinetOrgPerson%26quot%3B%20objects%20should%20be%20synchronized%2C%20but%20the%20superclasses%20of%20%26quot%3BinetOrgPerson%26quot%3B%20(%26quot%3Bperson%26quot%3B%2C%20%26quot%3Borganizationalperson%26quot%3B%20and%20%26quot%3Btop%26quot%3B)%20should%20be%20filtered%20out%2C%20then%20list%20only%20%26quot%3BinetOrgPerson%26quot%3B%20here.%20All%20objects%20in%20LDAP%20are%20subclassed%20from%20%26quot%3Btop%26quot%3B.%20For%20this%20reason%2C%20you%20should%20never%20list%20%26quot%3Btop%26quot%3B%2C%20otherwise%20no%20object%20would%20be%20filtered.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Etrue%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3EinetOrgPerson%3C%2Fstring%3E%0A%20%20%20%20%20%20%3Cstring%3EgroupOfUniqueNames%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EgroupMemberAttribute%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EGroup%20Member%20Attribute%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20name%20of%20the%20group%20attribute%20that%20will%20be%20updated%20with%20the%20distinguished%20name%20of%20the%20user%20when%20the%20user%20is%20added%20to%20the%20group.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EaccountUserNameAttributes%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EAccount%20User%20Name%20Attributes%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EAttribute%20or%20attributes%20which%20holds%20the%20account%26apos%3Bs%20user%20name.%20They%20will%20be%20used%20when%20authenticating%20to%20find%20the%20LDAP%20entry%20for%20the%20user%20name%20to%20authenticate.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Euid%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EgroupNameAttributes%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EGroup%20Name%20Attributes%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EAttribute%20or%20attributes%20which%20holds%20the%20group%26apos%3Bs%20name.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Ecn%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EmodifiersNamesToFilterOut%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EFilter%20Out%20Changes%20By%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20names%20(DNs)%20of%20directory%20administrators%20to%20filter%20from%20the%20changes.%20Changes%20with%20the%20attribute%20%26quot%3BmodifiersName%26quot%3B%20that%20match%20entries%20in%20this%20list%20will%20be%20filtered%20out.%20The%20standard%20value%20is%20the%20administrator%20name%20used%20by%20this%20adapter%2C%20to%20prevent%20loops.%20Entries%20should%20be%20of%20the%20format%20%26quot%3Bcn%3DDirectory%20Manager%26quot%3B.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3Ehost%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EHost%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20name%20or%20IP%20address%20of%20the%20host%20where%20the%20LDAP%20server%20is%20running.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Elocalhost%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EbaseContexts%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EBase%20Contexts%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EOne%20or%20more%20starting%20points%20in%20the%20LDAP%20tree%20that%20will%20be%20used%20when%20searching%20the%20tree.%20Searches%20are%20performed%20when%20discovering%20users%20from%20the%20LDAP%20server%20or%20when%20looking%20for%20the%20groups%20of%20which%20a%20user%20is%20a%20member.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Eou%3Dpeople%2Co%3Disp%3C%2Fstring%3E%0A%20%20%20%20%20%20%3Cstring%3Eou%3Dgroups%2Co%3Disp%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EremoveLogEntryObjectClassFromFilter%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3ERemove%20Log%20Entry%20Object%20Class%20from%20Filter%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EIf%20this%20property%20is%20set%20(the%20default)%2C%20the%20filter%20used%20to%20fetch%20change%20log%20entries%20does%20not%20contain%20the%20%26quot%3BchangeLogEntry%26quot%3B%20object%20class%2C%20expecting%20that%20there%20are%20no%20entries%20of%20other%20object%20types%20in%20the%20change%20log.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Efalse%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3Essl%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3ESSL%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3ESelect%20the%20check%20box%20to%20connect%20to%20the%20LDAP%20server%20using%20SSL.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Efalse%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EbaseContextsToSynchronize%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EBase%20Contexts%20to%20Synchronize%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EOne%20or%20more%20starting%20points%20in%20the%20LDAP%20tree%20that%20will%20be%20used%20to%20determine%20if%20a%20change%20should%20be%20synchronized.%20The%20base%20contexts%20attribute%20will%20be%20used%20to%20synchronize%20a%20change%20if%20this%20property%20is%20not%20set.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Eou%3Dpeople%2Co%3Disp%3C%2Fstring%3E%0A%20%20%20%20%20%20%3Cstring%3Eou%3Dgroups%2Co%3Disp%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EaccountSearchFilter%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3ELDAP%20Filter%20for%20Retrieving%20Accounts%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EAn%20optional%20LDAP%20filter%20to%20control%20which%20accounts%20are%20returned%20from%20the%20LDAP%20resource.%20If%20no%20filter%20is%20specified%2C%20only%20accounts%20that%20include%20all%20specified%20object%20classes%20are%20returned.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Euid%3D*%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EaccountSynchronizationFilter%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3ELDAP%20Filter%20for%20Accounts%20to%20Synchronize%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EAn%20optional%20LDAP%20filter%20for%20the%20objects%20to%20synchronize.%20Because%20the%20change%20log%20is%20for%20all%20objects%2C%20this%20filter%20updates%20only%20objects%20that%20match%20the%20specified%20filter.%20If%20you%20specify%20a%20filter%2C%20an%20object%20will%20be%20synchronized%20only%20if%20it%20matches%20the%20filter%20and%20includes%20a%20synchronized%20object%20class.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3Efailover%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EFailover%20Servers%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EList%20all%20servers%20that%20should%20be%20used%20for%20failover%20in%20case%20the%20preferred%20server%20fails.%20If%20the%20preferred%20server%20fails%2C%20JNDI%20will%20connect%20to%20the%20next%20available%20server%20in%20the%20list.%20List%20all%20servers%20in%20the%20form%20of%20%26quot%3Bldap%3A%2F%2Fldap.example.com%3A389%2F%26quot%3B%2C%20which%20follows%20the%20standard%20LDAP%20v3%20URLs%20described%20in%20RFC%202255.%20Only%20the%20host%20and%20port%20parts%20of%20the%20URL%20are%20relevant%20in%20this%20setting.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EpasswordAttribute%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EPassword%20Attribute%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20name%20of%20the%20LDAP%20attribute%20which%20holds%20the%20password.%20When%20changing%20an%20user%26apos%3Bs%20password%2C%20the%20new%20password%20is%20set%20to%20this%20attribute.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Euserpassword%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EvlvSortAttribute%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EVLV%20Sort%20Attribute%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3ESpecify%20the%20sort%20attribute%20to%20use%20for%20VLV%20indexes%20on%20the%20resource.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3ErespectResourcePasswordPolicyChangeAfterReset%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3ERespect%20Resource%20Password%20Policy%20Change-After-Reset%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EWhen%20this%20resource%20is%20specified%20in%20a%20Login%20Module%20(i.e.%2C%20this%20resource%20is%20a%20pass-through%20authentication%20target)%20and%20the%20resource%26apos%3Bs%20password%20policy%20is%20configured%20for%20change-after-reset%2C%20a%20user%20whose%20resource%20account%20password%20has%20been%20administratively%20reset%20will%20be%20required%20to%20change%20that%20password%20after%20successfully%20authenticating.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Efalse%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EaccountObjectClasses%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EAccount%20Object%20Classes%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20object%20class%20or%20classes%20that%20will%20be%20used%20when%20creating%20new%20user%20objects%20in%20the%20LDAP%20tree.%20When%20entering%20more%20than%20one%20object%20class%2C%20each%20entry%20should%20be%20on%20its%20own%20line%3B%20do%20not%20use%20commas%20or%20semi-colons%20to%20separate%20multiple%20object%20classes.%20Some%20object%20classes%20may%20require%20that%20you%20specify%20all%20object%20classes%20in%20the%20class%20hierarchy.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3E%5BLjava.lang.String%3B%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3EinetOrgPerson%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EmaintainPosixGroupMembership%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EMaintain%20POSIX%20Group%20Membership%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EWhen%20enabled%20and%20a%20user%20is%20renamed%20or%20deleted%2C%20update%20any%20POSIX%20groups%20to%20which%20the%20user%20belongs%20to%20reflect%20the%20new%20name.%20Otherwise%2C%20the%20LDAP%20resource%20must%20maintain%20referential%20integrity%20with%20respect%20to%20group%20membership.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3EtruemaintainLdapGroupMembership%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EpasswordDecryptionInitializationVector%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EPassword%20Decryption%20Initialization%20Vector%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20initialization%20vector%20to%20decrypt%20passwords%20with%20when%20performing%20password%20synchronization.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eorg.identityconnectors.common.security.GuardedByteArray%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EreadSchema%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3ERead%20Schema%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EIf%20true%2C%20the%20connector%20will%20read%20the%20schema%20from%20the%20server.%20If%20false%2C%20the%20connector%20will%20provide%20a%20default%20schema%20based%20on%20the%20object%20classes%20in%20the%20configuration.%20This%20property%20must%20be%20true%20in%20order%20to%20use%20extended%20object%20classes.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Efalse%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3Eprincipal%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EPrincipal%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20distinguished%20name%20with%20which%20to%20authenticate%20to%20the%20LDAP%20server.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Euid%3Dadmin%2Cou%3Dsystem%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EpasswordDecryptionKey%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EPassword%20Decryption%20Key%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20key%20to%20decrypt%20passwords%20with%20when%20performing%20password%20synchronization.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eorg.identityconnectors.common.security.GuardedByteArray%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EstatusManagementClass%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EStatus%20management%20class%20%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EClass%20to%20be%20used%20to%20manage%20enabled%2Fdisabled%20status.%20If%20no%20class%20is%20specified%20then%20identity%20status%20management%20wont%20be%20possible.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Eorg.connid.bundles.ldap.commons.AttributeStatusManagement%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EfilterWithOrInsteadOfAnd%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EFilter%20with%20Or%20Instead%20of%20And%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3ENormally%20the%20the%20filter%20used%20to%20fetch%20change%20log%20entries%20is%20an%20and-based%20filter%20retrieving%20an%20interval%20of%20change%20entries.%20If%20this%20property%20is%20set%2C%20the%20filter%20will%20or%20together%20the%20required%20change%20numbers%20instead.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cstring%3Efalse%3C%2Fstring%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3Eport%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3ETCP%20Port%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3ETCP%2FIP%20port%20number%20used%20to%20communicate%20with%20the%20LDAP%20server.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Eint%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%3E%0A%20%20%20%20%20%20%3Cint%3E1389%3C%2Fint%3E%0A%20%20%20%20%3C%2Fvalues%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EpasswordAttributeToSynchronize%3C%2Fname%3E%0A%20%20%20%20%20%20%3CdisplayName%3EPassword%20Attribute%20to%20Synchronize%3C%2FdisplayName%3E%0A%20%20%20%20%20%20%3ChelpMessage%3EThe%20name%20of%20the%20password%20attribute%20to%20synchronize%20when%20performing%20password%20synchronization.%3C%2FhelpMessage%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%20%20%3Corder%3E0%3C%2Forder%3E%0A%20%20%20%20%20%20%3Cconfidential%3Efalse%3C%2Fconfidential%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%20%20%20%20%3Cvalues%2F%3E%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%3C%2Fset%3E\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"105\" capabilities=\"ONE_PHASE_CREATE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"105\" capabilities=\"ONE_PHASE_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"105\" capabilities=\"ONE_PHASE_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"105\" capabilities=\"ONE_PHASE_DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"105\" capabilities=\"ONE_PHASE_DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"105\" capabilities=\"SEARCH\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"105\" capabilities=\"ONE_PHASE_CREATE\"/>\n   \n   <ConnInstance id=\"106\" displayName=\"H2-test2\"\n                 location=\"connid://${testconnectorserver.key}@localhost:${testconnectorserver.port}\"\n@@ -618,9 +615,11 @@ under the License.\n   <!-- Use resource-testdb for passthrough authentication (SYNCOPE-164) in the global account policy -->\n   <Policy_ExternalResource account_policy_id=\"5\" resource_name=\"resource-testdb\"/>\n     \n+  <SyncopeUser_ExternalResource user_id=\"1\" resource_name=\"resource-testdb2\"/>\n   <SyncopeUser_ExternalResource user_id=\"3\" resource_name=\"ws-target-resource-delete\"/>\n   <SyncopeUser_ExternalResource user_id=\"3\" resource_name=\"ws-target-resource-2\"/>\n   <SyncopeUser_ExternalResource user_id=\"3\" resource_name=\"ws-target-resource-1\"/>\n+  <SyncopeUser_ExternalResource user_id=\"5\" resource_name=\"resource-testdb2\"/>\n   <SyncopeRole_ExternalResource role_id=\"3\" resource_name=\"ws-target-resource-list-mappings-1\"/>\n   <SyncopeRole_ExternalResource role_id=\"8\" resource_name=\"ws-target-resource-2\"/>\n   <SyncopeRole_ExternalResource role_id=\"3\" resource_name=\"ws-target-resource-list-mappings-2\"/>\n@@ -878,10 +877,12 @@ under the License.\n   <Task DTYPE=\"PropagationTask\" id=\"6\" propagationMode=\"TWO_PHASES\" propagationOperation=\"UPDATE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-nopropagation\" subjectType=\"USER\" subjectId=\"1\"\n         xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3Creadonly%3Efalse%3C%2Freadonly%3E%0A++++++++++%3Cdisposed%3Efalse%3C%2Fdisposed%3E%0A++++++++++%3CencryptedBytes%3Em9nh2US0Sa6m%2BcXccCq0Xw%3D%3D%3C%2FencryptedBytes%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Efullname%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Efullname%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E\"/>\n-  <TaskExec id=\"6\" task_id=\"6\" status=\"SUCCESS\"/>I\n+  <TaskExec id=\"6\" task_id=\"6\" status=\"SUCCESS\"/>\n   <Task DTYPE=\"SyncTask\" id=\"7\" name=\"TestDB Task\" resource_name=\"resource-testdb\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" fullReconciliation=\"1\"\n-        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"/>\n+        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"\n+        userTemplate=\"%3Corg.apache.syncope.common.to.UserTO%3E%0A++%3Cattrs%3E%0A++++%3Corg.apache.syncope.common.to.AttributeTO%3E%0A++++++%3Cschema%3Etype%3C%2Fschema%3E%0A++++++%3Cvalues%3E%0A++++++++%3Cstring%3E%26apos%3Btype+a%26apos%3B%3C%2Fstring%3E%0A++++++%3C%2Fvalues%3E%0A++++++%3Creadonly%3Efalse%3C%2Freadonly%3E%0A++++%3C%2Forg.apache.syncope.common.to.AttributeTO%3E%0A++++%3Corg.apache.syncope.common.to.AttributeTO%3E%0A++++++%3Cschema%3EuserId%3C%2Fschema%3E%0A++++++%3Cvalues%3E%0A++++++++%3Cstring%3E%26apos%3Breconciled%40syncope.apache.org%26apos%3B%3C%2Fstring%3E%0A++++++%3C%2Fvalues%3E%0A++++++%3Creadonly%3Efalse%3C%2Freadonly%3E%0A++++%3C%2Forg.apache.syncope.common.to.AttributeTO%3E%0A++++%3Corg.apache.syncope.common.to.AttributeTO%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cvalues%3E%0A++++++++%3Cstring%3E%26apos%3Breconciled+fullname%26apos%3B%3C%2Fstring%3E%0A++++++%3C%2Fvalues%3E%0A++++++%3Creadonly%3Efalse%3C%2Freadonly%3E%0A++++%3C%2Forg.apache.syncope.common.to.AttributeTO%3E%0A++++%3Corg.apache.syncope.common.to.AttributeTO%3E%0A++++++%3Cschema%3Esurname%3C%2Fschema%3E%0A++++++%3Cvalues%3E%0A++++++++%3Cstring%3E%26apos%3Bsurname%26apos%3B%3C%2Fstring%3E%0A++++++%3C%2Fvalues%3E%0A++++++%3Creadonly%3Efalse%3C%2Freadonly%3E%0A++++%3C%2Forg.apache.syncope.common.to.AttributeTO%3E%0A++%3C%2Fattrs%3E%0A++%3Cid%3E0%3C%2Fid%3E%0A++%3CderAttrs%2F%3E%0A++%3CvirAttrs%2F%3E%0A++%3Cresources%2F%3E%0A++%3CpropagationStatusTOs%2F%3E%0A++%3Cmemberships%2F%3E%0A%3C%2Forg.apache.syncope.common.to.UserTO%3E\"\n+        roleTemplate=\"%3Corg.apache.syncope.common.to.RoleTO%3E%0A++%3Cattrs%2F%3E%0A++%3Cid%3E0%3C%2Fid%3E%0A++%3CderAttrs%2F%3E%0A++%3CvirAttrs%2F%3E%0A++%3Cresources%2F%3E%0A++%3CpropagationStatusTOs%2F%3E%0A++%3Cparent%3E0%3C%2Fparent%3E%0A++%3CinheritOwner%3Efalse%3C%2FinheritOwner%3E%0A++%3CinheritTemplates%3Efalse%3C%2FinheritTemplates%3E%0A++%3CinheritAttrs%3Efalse%3C%2FinheritAttrs%3E%0A++%3CinheritDerAttrs%3Efalse%3C%2FinheritDerAttrs%3E%0A++%3CinheritVirAttrs%3Efalse%3C%2FinheritVirAttrs%3E%0A++%3CinheritPasswordPolicy%3Efalse%3C%2FinheritPasswordPolicy%3E%0A++%3CinheritAccountPolicy%3Efalse%3C%2FinheritAccountPolicy%3E%0A++%3Centitlements%2F%3E%0A++%3CrAttrTemplates%2F%3E%0A++%3CrDerAttrTemplates%2F%3E%0A++%3CrVirAttrTemplates%2F%3E%0A++%3CmAttrTemplates%2F%3E%0A++%3CmDerAttrTemplates%2F%3E%0A++%3CmVirAttrTemplates%2F%3E%0A%3C%2Forg.apache.syncope.common.to.RoleTO%3E\"/>\n   <Task DTYPE=\"NotificationTask\" id=\"8\" sender=\"admin@prova.org\" subject=\"Notification for SYNCOPE-81\" \n         textBody=\"NOTIFICATION-81\" htmlBody=\"NOTIFICATION-81\" traceLevel=\"ALL\"/>\n   <Task DTYPE=\"SyncTask\" id=\"9\" name=\"TestDB2 Task\" resource_name=\"resource-testdb2\"\n@@ -892,14 +893,57 @@ under the License.\n         jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"/>\n   <Task DTYPE=\"SyncTask\" id=\"11\" name=\"LDAP Sync Task\" resource_name=\"resource-ldap\"\n         fullReconciliation=\"1\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n-        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"/>\n+        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"\n+        userTemplate=\"%3Corg.apache.syncope.common.to.UserTO%3E%0A++%3Cattrs%2F%3E%0A++%3Cid%3E0%3C%2Fid%3E%0A++%3CderAttrs%2F%3E%0A++%3CvirAttrs%3E%0A++++%3Corg.apache.syncope.common.to.AttributeTO%3E%0A++++++%3Cschema%3EvirtualReadOnly%3C%2Fschema%3E%0A++++++%3Cvalues%3E%0A++++++++%3Cstring%3E%3C%2Fstring%3E%0A++++++%3C%2Fvalues%3E%0A++++++%3Creadonly%3Efalse%3C%2Freadonly%3E%0A++++%3C%2Forg.apache.syncope.common.to.AttributeTO%3E%0A++%3C%2FvirAttrs%3E%0A++%3Cresources%3E%0A++++%3Cstring%3Eresource-ldap%3C%2Fstring%3E%0A++%3C%2Fresources%3E%0A++%3CpropagationStatusTOs%2F%3E%0A++%3Cmemberships%2F%3E%0A%3C%2Forg.apache.syncope.common.to.UserTO%3E\"\n+        roleTemplate=\"%3Corg.apache.syncope.common.to.RoleTO%3E%0A++%3Cattrs%3E%0A++++%3Corg.apache.syncope.common.to.AttributeTO%3E%0A++++++%3Cschema%3Eshow%3C%2Fschema%3E%0A++++++%3Cvalues%3E%0A++++++++%3Cstring%3E%26apos%3Btrue%26apos%3B%3C%2Fstring%3E%0A++++++%3C%2Fvalues%3E%0A++++++%3Creadonly%3Efalse%3C%2Freadonly%3E%0A++++%3C%2Forg.apache.syncope.common.to.AttributeTO%3E%0A++%3C%2Fattrs%3E%0A++%3Cid%3E0%3C%2Fid%3E%0A++%3CderAttrs%2F%3E%0A++%3CvirAttrs%2F%3E%0A++%3Cresources%2F%3E%0A++%3CpropagationStatusTOs%2F%3E%0A++%3Cparent%3E8%3C%2Fparent%3E%0A++%3CinheritOwner%3Efalse%3C%2FinheritOwner%3E%0A++%3CinheritTemplates%3Efalse%3C%2FinheritTemplates%3E%0A++%3CinheritAttrs%3Efalse%3C%2FinheritAttrs%3E%0A++%3CinheritDerAttrs%3Efalse%3C%2FinheritDerAttrs%3E%0A++%3CinheritVirAttrs%3Efalse%3C%2FinheritVirAttrs%3E%0A++%3CinheritPasswordPolicy%3Efalse%3C%2FinheritPasswordPolicy%3E%0A++%3CinheritAccountPolicy%3Efalse%3C%2FinheritAccountPolicy%3E%0A++%3Centitlements%2F%3E%0A++%3CrAttrTemplates%3E%0A++++%3Cstring%3Eshow%3C%2Fstring%3E%0A++%3C%2FrAttrTemplates%3E%0A++%3CrDerAttrTemplates%2F%3E%0A++%3CrVirAttrTemplates%2F%3E%0A++%3CmAttrTemplates%2F%3E%0A++%3CmDerAttrTemplates%2F%3E%0A++%3CmVirAttrTemplates%2F%3E%0A%3C%2Forg.apache.syncope.common.to.RoleTO%3E\"/>\n   <SyncTask_actionsClassNames SyncTask_id=\"11\" element=\"org.apache.syncope.core.sync.impl.LDAPMembershipSyncActions\"/>\n   <Task DTYPE=\"SyncTask\" id=\"12\" name=\"VirAttrCache test\" resource_name=\"resource-csv\"\n         performCreate=\"0\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"0\" fullReconciliation=\"1\"\n         jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"/>\n   <Task DTYPE=\"PushTask\" id=\"13\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n-        jobClassName=\"org.apache.syncope.core.sync.impl.PushJob\"/>\n+        jobClassName=\"org.apache.syncope.core.sync.impl.PushJob\" unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\" \n+        userFilter=\"surname==Vivaldi\" roleFilter=\"name==_NO_ONE_\"/>\n+  <Task DTYPE=\"PushTask\" id=\"14\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n+        jobClassName=\"org.apache.syncope.core.sync.impl.PushJob\" unmatchingRule=\"PROVISION\" matchingRule=\"IGNORE\" \n+        userFilter=\"surname==Bellini\" roleFilter=\"name==_NO_ONE_\"/>\n+  <Task DTYPE=\"PushTask\" id=\"15\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n+        jobClassName=\"org.apache.syncope.core.sync.impl.PushJob\" unmatchingRule=\"UNLINK\" matchingRule=\"IGNORE\" \n+        userFilter=\"surname==Puccini\" roleFilter=\"name==_NO_ONE_\"/>\n+  <Task DTYPE=\"PushTask\" id=\"16\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n+        jobClassName=\"org.apache.syncope.core.sync.impl.PushJob\" unmatchingRule=\"IGNORE\" matchingRule=\"IGNORE\" \n+        userFilter=\"surname==Verdi\" roleFilter=\"name==_NO_ONE_\"/>\n+  <Task DTYPE=\"PushTask\" id=\"17\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n+        jobClassName=\"org.apache.syncope.core.sync.impl.PushJob\" unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\" \n+        userFilter=\"username==_NO_ONE_\" roleFilter=\"name==_NO_ONE_\"/>\n+  <Task DTYPE=\"PushTask\" id=\"18\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n+        jobClassName=\"org.apache.syncope.core.sync.impl.PushJob\" unmatchingRule=\"IGNORE\" matchingRule=\"DEPROVISION\" \n+        userFilter=\"surname==Verdi\" roleFilter=\"name==_NO_ONE_\"/>\n+  <Task DTYPE=\"PushTask\" id=\"19\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n+        jobClassName=\"org.apache.syncope.core.sync.impl.PushJob\" unmatchingRule=\"IGNORE\" matchingRule=\"UNASSIGN\" \n+        userFilter=\"surname==Rossini\" roleFilter=\"name==_NO_ONE_\"/>\n+  <Task DTYPE=\"PushTask\" id=\"20\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n+        jobClassName=\"org.apache.syncope.core.sync.impl.PushJob\" unmatchingRule=\"IGNORE\" matchingRule=\"LINK\" \n+        userFilter=\"surname==Verdi\" roleFilter=\"name==_NO_ONE_\"/>\n+  <Task DTYPE=\"PushTask\" id=\"21\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n+        jobClassName=\"org.apache.syncope.core.sync.impl.PushJob\" unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\" \n+        userFilter=\"surname==Verdi\" roleFilter=\"name==_NO_ONE_\"/>\n+  <Task DTYPE=\"PushTask\" id=\"22\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n+        jobClassName=\"org.apache.syncope.core.sync.impl.PushJob\" unmatchingRule=\"IGNORE\" matchingRule=\"UPDATE\" \n+        userFilter=\"surname==Verdi\" roleFilter=\"name==_NO_ONE_\"/>\n+  <Task DTYPE=\"PushTask\" id=\"23\" name=\"Export on resource-ldap\" resource_name=\"resource-ldap\"\n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n+        jobClassName=\"org.apache.syncope.core.sync.impl.PushJob\" unmatchingRule=\"ASSIGN\" matchingRule=\"UNLINK\" \n+        userFilter=\"username==_NO_ONE_\" roleFilter=\"name==citizen\"/>\n       \n   <Notification id=\"1\" sender=\"test@syncope.apache.org\" subject=\"Test subject\" template=\"test\" selfAsRecipient=\"0\" traceLevel=\"ALL\"\n                 userAbout=\"fullname==*o*;fullname==*i*\""}]}