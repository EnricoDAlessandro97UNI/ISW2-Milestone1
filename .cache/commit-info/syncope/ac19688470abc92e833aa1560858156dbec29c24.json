{"sha":"ac19688470abc92e833aa1560858156dbec29c24","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmFjMTk2ODg0NzBhYmM5MmU4MzNhYTE1NjA4NTgxNTZkYmVjMjljMjQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-07-07T09:19:11Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-07-07T09:19:11Z"},"message":"Merge from 1_2_X","tree":{"sha":"981f2e4b99e117e2f58df4320fa9bc59af3b1110","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/981f2e4b99e117e2f58df4320fa9bc59af3b1110"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ac19688470abc92e833aa1560858156dbec29c24","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ac19688470abc92e833aa1560858156dbec29c24","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ac19688470abc92e833aa1560858156dbec29c24","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ac19688470abc92e833aa1560858156dbec29c24/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"97607b16e4ed807ff055b3ae55f0c722717c6472","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/97607b16e4ed807ff055b3ae55f0c722717c6472","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/97607b16e4ed807ff055b3ae55f0c722717c6472"},{"sha":"33d8fabfb8b453bd2fcded15945ffb56a490feb7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/33d8fabfb8b453bd2fcded15945ffb56a490feb7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/33d8fabfb8b453bd2fcded15945ffb56a490feb7"}],"stats":{"total":50,"additions":24,"deletions":26},"files":[{"sha":"11bfce079b25585ffdebcd7f18ff7325b0867871","filename":"core/workflow-activiti/src/main/java/org/apache/syncope/core/workflow/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":24,"deletions":26,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ac19688470abc92e833aa1560858156dbec29c24/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ac19688470abc92e833aa1560858156dbec29c24/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=ac19688470abc92e833aa1560858156dbec29c24","patch":"@@ -88,9 +88,9 @@\n  */\n public class ActivitiUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(ActivitiUserWorkflowAdapter.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(ActivitiUserWorkflowAdapter.class);\n \n-    private static final String[] PROPERTY_IGNORE_PROPS = { \"type\" };\n+    protected static final String[] PROPERTY_IGNORE_PROPS = { \"type\" };\n \n     public static final String WF_PROCESS_ID = \"userWorkflow\";\n \n@@ -133,35 +133,35 @@ public class ActivitiUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n     public static final String EVENT = \"event\";\n \n     @Resource(name = \"adminUser\")\n-    private String adminUser;\n+    protected String adminUser;\n \n     @Autowired\n-    private RuntimeService runtimeService;\n+    protected RuntimeService runtimeService;\n \n     @Autowired\n-    private TaskService taskService;\n+    protected TaskService taskService;\n \n     @Autowired\n-    private FormService formService;\n+    protected FormService formService;\n \n     @Autowired\n-    private HistoryService historyService;\n+    protected HistoryService historyService;\n \n     @Autowired\n-    private RepositoryService repositoryService;\n+    protected RepositoryService repositoryService;\n \n     @Autowired\n-    private ActivitiImportUtils importUtils;\n+    protected ActivitiImportUtils importUtils;\n \n     @Autowired\n-    private UserDataBinder userDataBinder;\n+    protected UserDataBinder userDataBinder;\n \n     @Override\n     public String getPrefix() {\n         return \"ACT_\";\n     }\n \n-    private void throwException(final ActivitiException e, final String defaultMessage) {\n+    protected void throwException(final ActivitiException e, final String defaultMessage) {\n         if (e.getCause() != null) {\n             if (e.getCause().getCause() instanceof SyncopeClientException) {\n                 throw (SyncopeClientException) e.getCause().getCause();\n@@ -175,7 +175,7 @@ private void throwException(final ActivitiException e, final String defaultMessa\n         throw new WorkflowException(defaultMessage, e);\n     }\n \n-    private void updateStatus(final User user) {\n+    protected void updateStatus(final User user) {\n         List<Task> tasks = taskService.createTaskQuery().processInstanceId(user.getWorkflowId()).list();\n         if (tasks.isEmpty() || tasks.size() > 1) {\n             LOG.warn(\"While setting user status: unexpected task number ({})\", tasks.size());\n@@ -184,7 +184,7 @@ private void updateStatus(final User user) {\n         }\n     }\n \n-    private String getFormTask(final User user) {\n+    protected String getFormTask(final User user) {\n         String result = null;\n \n         List<Task> tasks = taskService.createTaskQuery().processInstanceId(user.getWorkflowId()).list();\n@@ -204,7 +204,7 @@ private String getFormTask(final User user) {\n         return result;\n     }\n \n-    private Set<String> getPerformedTasks(final User user) {\n+    protected Set<String> getPerformedTasks(final User user) {\n         final Set<String> result = new HashSet<>();\n \n         for (HistoricActivityInstance task\n@@ -219,9 +219,7 @@ private Set<String> getPerformedTasks(final User user) {\n     /**\n      * Saves resources to be propagated and password for later - after form submission - propagation.\n      */\n-    private void saveForFormSubmit(final User user, final String password,\n-            final PropagationByResource propByRes) {\n-\n+    protected void saveForFormSubmit(final User user, final String password, final PropagationByResource propByRes) {\n         String formTaskId = getFormTask(user);\n         if (formTaskId != null) {\n             // SYNCOPE-238: This is needed to simplify the task query in this.getForms()\n@@ -297,7 +295,7 @@ public WorkflowResult<Pair<Long, Boolean>> create(final UserTO userTO, final boo\n                 new ImmutablePair<>(user.getKey(), propagateEnable), propByRes, getPerformedTasks(user));\n     }\n \n-    private Set<String> doExecuteTask(final User user, final String task, final Map<String, Object> moreVariables) {\n+    protected Set<String> doExecuteTask(final User user, final String task, final Map<String, Object> moreVariables) {\n         Set<String> preTasks = getPerformedTasks(user);\n \n         final Map<String, Object> variables = new HashMap<>();\n@@ -548,7 +546,7 @@ public void importDefinition(final WorkflowDefinitionFormat format, final String\n         }\n     }\n \n-    private WorkflowFormPropertyType fromActivitiFormType(final FormType activitiFormType) {\n+    protected WorkflowFormPropertyType fromActivitiFormType(final FormType activitiFormType) {\n         WorkflowFormPropertyType result = WorkflowFormPropertyType.String;\n \n         if (\"string\".equals(activitiFormType.getName())) {\n@@ -570,19 +568,19 @@ private WorkflowFormPropertyType fromActivitiFormType(final FormType activitiFor\n         return result;\n     }\n \n-    private WorkflowFormTO getFormTO(final Task task) {\n+    protected WorkflowFormTO getFormTO(final Task task) {\n         return getFormTO(task, formService.getTaskFormData(task.getId()));\n     }\n \n-    private WorkflowFormTO getFormTO(final Task task, final TaskFormData fd) {\n+    protected WorkflowFormTO getFormTO(final Task task, final TaskFormData fd) {\n         final WorkflowFormTO formTO =\n                 getFormTO(task.getProcessInstanceId(), task.getId(), fd.getFormKey(), fd.getFormProperties());\n \n         BeanUtils.copyProperties(task, formTO);\n         return formTO;\n     }\n \n-    private WorkflowFormTO getFormTO(final HistoricTaskInstance task) {\n+    protected WorkflowFormTO getFormTO(final HistoricTaskInstance task) {\n         final List<HistoricFormPropertyEntity> props = new ArrayList<>();\n \n         for (HistoricDetail historicDetail : historyService.createHistoricDetailQuery().taskId(task.getId()).list()) {\n@@ -607,7 +605,7 @@ private WorkflowFormTO getFormTO(final HistoricTaskInstance task) {\n         return formTO;\n     }\n \n-    private WorkflowFormTO getHistoricFormTO(\n+    protected WorkflowFormTO getHistoricFormTO(\n             final String processInstanceId,\n             final String taskId,\n             final String formKey,\n@@ -636,7 +634,7 @@ private WorkflowFormTO getHistoricFormTO(\n     }\n \n     @SuppressWarnings(\"unchecked\")\n-    private WorkflowFormTO getFormTO(\n+    protected WorkflowFormTO getFormTO(\n             final String processInstanceId,\n             final String taskId,\n             final String formKey,\n@@ -716,7 +714,7 @@ public List<WorkflowFormTO> getForms(final String workflowId, final String name)\n         return forms;\n     }\n \n-    private <T extends Query<?, ?>, U extends Object> List<WorkflowFormTO> getForms(final Query<T, U> query) {\n+    protected <T extends Query<?, ?>, U extends Object> List<WorkflowFormTO> getForms(final Query<T, U> query) {\n         List<WorkflowFormTO> forms = new ArrayList<>();\n \n         for (U obj : query.list()) {\n@@ -762,7 +760,7 @@ public WorkflowFormTO getForm(final String workflowId) {\n         return result;\n     }\n \n-    private Pair<Task, TaskFormData> checkTask(final String taskId, final String authUser) {\n+    protected Pair<Task, TaskFormData> checkTask(final String taskId, final String authUser) {\n         Task task;\n         try {\n             task = taskService.createTaskQuery().taskId(taskId).singleResult();"}]}