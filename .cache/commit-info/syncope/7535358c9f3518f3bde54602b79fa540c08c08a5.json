{"sha":"7535358c9f3518f3bde54602b79fa540c08c08a5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc1MzUzNThjOWYzNTE4ZjNiZGU1NDYwMmI3OWZhNTQwYzA4YzA4YTU=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2013-07-18T09:19:19Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2013-07-18T09:19:19Z"},"message":"SYNCOPE-402 Fix RoleController, add propagation status to assigned resource when primary resource failed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1504397 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ea0eb48c8b9c8ed3e46cd98375f880abec4973e9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ea0eb48c8b9c8ed3e46cd98375f880abec4973e9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7535358c9f3518f3bde54602b79fa540c08c08a5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7535358c9f3518f3bde54602b79fa540c08c08a5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7535358c9f3518f3bde54602b79fa540c08c08a5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7535358c9f3518f3bde54602b79fa540c08c08a5/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"050d1990c93aa5067ea6d5485e410a4e62d9e6b8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/050d1990c93aa5067ea6d5485e410a4e62d9e6b8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/050d1990c93aa5067ea6d5485e410a4e62d9e6b8"}],"stats":{"total":102,"additions":63,"deletions":39},"files":[{"sha":"6cd126e9d1431179a70d49f80696539012793f49","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/DefaultPropagationHandler.java","status":"modified","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7535358c9f3518f3bde54602b79fa540c08c08a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDefaultPropagationHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7535358c9f3518f3bde54602b79fa540c08c08a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDefaultPropagationHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FDefaultPropagationHandler.java?ref=7535358c9f3518f3bde54602b79fa540c08c08a5","patch":"@@ -22,11 +22,16 @@\n import org.apache.syncope.common.to.PropagationStatusTO;\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\n import org.apache.syncope.core.connid.ConnObjectUtil;\n+import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.propagation.PropagationHandler;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class DefaultPropagationHandler implements PropagationHandler {\n \n+    protected static final Logger LOG = LoggerFactory.getLogger(DefaultPropagationHandler.class);\n+\n     private final ConnObjectUtil connObjectUtil;\n \n     private final List<PropagationStatusTO> propagations;\n@@ -57,4 +62,32 @@ public void handle(final String resource, final PropagationTaskExecStatus execut\n \n         propagations.add(propagation);\n     }\n+\n+    public void completeWhenPrimaryResourceErrored(\n+            final List<PropagationStatusTO> propagations, final List<PropagationTask> tasks) {\n+\n+        final String failedResource = propagations.get(propagations.size() - 1).getResource();\n+\n+        LOG.debug(\"Propagation error: {} primary resource failed to propagate\", failedResource);\n+\n+        for (PropagationTask propagationTask : tasks) {\n+            if (!containsPropagationStatusTO(propagationTask.getResource().getName(), propagations)) {\n+                final PropagationStatusTO propagationStatusTO = new PropagationStatusTO();\n+                propagationStatusTO.setResource(propagationTask.getResource().getName());\n+                propagationStatusTO.setStatus(PropagationTaskExecStatus.FAILURE);\n+                propagationStatusTO.setExecutionMessage(\n+                        \"Propagation error: \" + failedResource + \" primary resource failed to propagate.\");\n+                propagations.add(propagationStatusTO);\n+            }\n+        }\n+    }\n+\n+    private boolean containsPropagationStatusTO(final String resource, final List<PropagationStatusTO> propagations) {\n+        for (PropagationStatusTO status : propagations) {\n+            if (resource.equals(status.getResource())) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n }"},{"sha":"2b6c9171dd869404df79aa756b37b39da056102c","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":22,"deletions":4,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7535358c9f3518f3bde54602b79fa540c08c08a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7535358c9f3518f3bde54602b79fa540c08c08a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=7535358c9f3518f3bde54602b79fa540c08c08a5","patch":"@@ -42,6 +42,7 @@\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n+import org.apache.syncope.core.propagation.PropagationException;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n import org.apache.syncope.core.propagation.impl.DefaultPropagationHandler;\n import org.apache.syncope.core.propagation.impl.PropagationManager;\n@@ -281,7 +282,13 @@ public RoleTO create(final HttpServletResponse response, @RequestBody final Role\n         List<PropagationTask> tasks = propagationManager.getRoleCreateTaskIds(created, roleTO.getVirtualAttributes());\n \n         final List<PropagationStatusTO> propagations = new ArrayList<PropagationStatusTO>();\n-        taskExecutor.execute(tasks, new DefaultPropagationHandler(connObjectUtil, propagations));\n+        final DefaultPropagationHandler propHanlder = new DefaultPropagationHandler(connObjectUtil, propagations);\n+        try {\n+            taskExecutor.execute(tasks, new DefaultPropagationHandler(connObjectUtil, propagations));\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propHanlder.completeWhenPrimaryResourceErrored(propagations, tasks);\n+        }\n \n         final RoleTO savedTO = binder.getRoleTO(created.getResult());\n         savedTO.setPropagationStatusTOs(propagations);\n@@ -308,8 +315,13 @@ public RoleTO update(@RequestBody final RoleMod roleMod) {\n                 roleMod.getVirtualAttributesToBeRemoved(), roleMod.getVirtualAttributesToBeUpdated());\n \n         final List<PropagationStatusTO> propagations = new ArrayList<PropagationStatusTO>();\n-        taskExecutor.execute(tasks, new DefaultPropagationHandler(connObjectUtil, propagations));\n-\n+        final DefaultPropagationHandler propHanlder = new DefaultPropagationHandler(connObjectUtil, propagations);\n+        try {\n+            taskExecutor.execute(tasks, new DefaultPropagationHandler(connObjectUtil, propagations));\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propHanlder.completeWhenPrimaryResourceErrored(propagations, tasks);\n+        }\n         final RoleTO updatedTO = binder.getRoleTO(updated.getResult());\n         updatedTO.setPropagationStatusTOs(propagations);\n \n@@ -340,7 +352,13 @@ public RoleTO delete(@PathVariable(\"roleId\") final Long roleId) {\n         roleTO.setId(roleId);\n \n         final List<PropagationStatusTO> propagations = new ArrayList<PropagationStatusTO>();\n-        taskExecutor.execute(tasks, new DefaultPropagationHandler(connObjectUtil, propagations));\n+        final DefaultPropagationHandler propHanlder = new DefaultPropagationHandler(connObjectUtil, propagations);\n+        try {\n+            taskExecutor.execute(tasks, new DefaultPropagationHandler(connObjectUtil, propagations));\n+        } catch (PropagationException e) {\n+            LOG.error(\"Error propagation primary resource\", e);\n+            propHanlder.completeWhenPrimaryResourceErrored(propagations, tasks);\n+        }\n         roleTO.setPropagationStatusTOs(propagations);\n \n         rwfAdapter.delete(roleId);"},{"sha":"f3584361275108df5cbca222d1b6469a095110d6","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":8,"deletions":35,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7535358c9f3518f3bde54602b79fa540c08c08a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7535358c9f3518f3bde54602b79fa540c08c08a5/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=7535358c9f3518f3bde54602b79fa540c08c08a5","patch":"@@ -41,7 +41,6 @@\n import org.apache.syncope.common.types.AuditElements.Category;\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.AuditElements.UserSubCategory;\n-import org.apache.syncope.common.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.types.ResourceOperation;\n import org.apache.syncope.core.audit.AuditManager;\n import org.apache.syncope.core.connid.ConnObjectUtil;\n@@ -302,11 +301,12 @@ public UserTO createInternal(final UserTO userTO) {\n                 created, userTO.getPassword(), userTO.getVirtualAttributes());\n \n         final List<PropagationStatusTO> propagations = new ArrayList<PropagationStatusTO>();\n+        final DefaultPropagationHandler propHanlder = new DefaultPropagationHandler(connObjectUtil, propagations);\n         try {\n-            taskExecutor.execute(tasks, new DefaultPropagationHandler(connObjectUtil, propagations));\n+            taskExecutor.execute(tasks, propHanlder);\n         } catch (PropagationException e) {\n             LOG.error(\"Error propagation primary resource\", e);\n-            completeWhenErroredPrimaryPropagation(propagations, tasks);\n+            propHanlder.completeWhenPrimaryResourceErrored(propagations, tasks);\n         }\n \n         notificationManager.createTasks(created.getResult().getKey(), created.getPerformedTasks());\n@@ -385,11 +385,12 @@ public UserTO update(@RequestBody final UserMod userMod) {\n         }\n \n         final List<PropagationStatusTO> propagations = new ArrayList<PropagationStatusTO>();\n+        final DefaultPropagationHandler propHanlder = new DefaultPropagationHandler(connObjectUtil, propagations);\n         try {\n-            taskExecutor.execute(tasks, new DefaultPropagationHandler(connObjectUtil, propagations));\n+            taskExecutor.execute(tasks, propHanlder);\n         } catch (PropagationException e) {\n             LOG.error(\"Error propagation primary resource\", e);\n-            completeWhenErroredPrimaryPropagation(propagations, tasks);\n+            propHanlder.completeWhenPrimaryResourceErrored(propagations, tasks);\n         }\n \n         // 3. create notification tasks\n@@ -711,12 +712,12 @@ protected UserTO doDelete(final Long userId) {\n         userTO.setId(userId);\n \n         final List<PropagationStatusTO> propagations = new ArrayList<PropagationStatusTO>();\n-\n+        final DefaultPropagationHandler propHanlder = new DefaultPropagationHandler(connObjectUtil, propagations);\n         try {\n             taskExecutor.execute(tasks, new DefaultPropagationHandler(connObjectUtil, propagations));\n         } catch (PropagationException e) {\n             LOG.error(\"Error propagation primary resource\", e);\n-            completeWhenErroredPrimaryPropagation(propagations, tasks);\n+            propHanlder.completeWhenPrimaryResourceErrored(propagations, tasks);\n         }\n \n         userTO.setPropagationStatusTOs(propagations);\n@@ -777,32 +778,4 @@ public BulkActionRes bulkAction(@RequestBody final BulkAction bulkAction) {\n \n         return res;\n     }\n-\n-    private void completeWhenErroredPrimaryPropagation(\n-            final List<PropagationStatusTO> propagations, final List<PropagationTask> tasks) {\n-        \n-        final String failedResource = propagations.get(propagations.size() - 1).getResource();\n-        \n-        LOG.debug(\"Propagation error: {} primary resource failed to propagate\", failedResource);\n-\n-        for (PropagationTask propagationTask : tasks) {\n-            if (!containsPropagationStatusTO(propagationTask.getResource().getName(), propagations)) {\n-                final PropagationStatusTO propagationStatusTO = new PropagationStatusTO();\n-                propagationStatusTO.setResource(propagationTask.getResource().getName());\n-                propagationStatusTO.setStatus(PropagationTaskExecStatus.FAILURE);\n-                propagationStatusTO.setExecutionMessage(\n-                        \"Propagation error: \" + failedResource + \" primary resource failed to propagate.\");\n-                propagations.add(propagationStatusTO);\n-            }\n-        }\n-    }\n-\n-    private boolean containsPropagationStatusTO(final String resource, final List<PropagationStatusTO> propagations) {\n-        for (PropagationStatusTO status : propagations) {\n-            if (resource.equals(status.getResource())) {\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n }"}]}