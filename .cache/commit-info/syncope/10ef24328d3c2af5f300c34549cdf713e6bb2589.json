{"sha":"10ef24328d3c2af5f300c34549cdf713e6bb2589","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjEwZWYyNDMyOGQzYzJhZjVmMzAwYzM0NTQ5Y2RmNzEzZTZiYjI1ODk=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-12-03T13:48:57Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-12-03T13:48:57Z"},"message":"Merge from 0_2_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246677 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"02cf07d0d697120c805019a299f42eb46346c7b1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/02cf07d0d697120c805019a299f42eb46346c7b1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/10ef24328d3c2af5f300c34549cdf713e6bb2589","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/10ef24328d3c2af5f300c34549cdf713e6bb2589","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/10ef24328d3c2af5f300c34549cdf713e6bb2589","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/10ef24328d3c2af5f300c34549cdf713e6bb2589/comments","author":null,"committer":null,"parents":[{"sha":"a7e14552ab944a08142942cd51707f61c0c53c13","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a7e14552ab944a08142942cd51707f61c0c53c13","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a7e14552ab944a08142942cd51707f61c0c53c13"}],"stats":{"total":2551,"additions":1853,"deletions":698},"files":[{"sha":"3a6e7bc294e8ce0c1a9b48f2d233fc8257f52dca","filename":"console/pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -84,6 +84,12 @@\n             </exclusions>\n         </dependency>\n \n+        <dependency>\n+            <groupId>org.apache.wicket</groupId>\n+            <artifactId>wicket-auth-roles</artifactId>\n+            <type>jar</type>\n+        </dependency>\n+\n         <dependency>\n             <groupId>org.syncope</groupId>\n             <artifactId>syncope-client</artifactId>"},{"sha":"4146bbf36d7d971876fe5d136381988115939ae5","filename":"console/src/main/java/org/syncope/console/SyncopeApplication.java","status":"modified","additions":52,"deletions":11,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -14,25 +14,36 @@\n  */\n package org.syncope.console;\n \n-import java.io.InputStream;\n import org.apache.wicket.Request;\n import org.apache.wicket.RequestCycle;\n import org.apache.wicket.Response;\n import org.apache.wicket.Session;\n-import org.apache.wicket.protocol.http.WebApplication;\n+import org.apache.wicket.authentication.AuthenticatedWebApplication;\n+import org.apache.wicket.authentication.AuthenticatedWebSession;\n+import org.apache.wicket.authorization.strategies.role.RoleAuthorizationStrategy;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.protocol.http.WebRequest;\n import org.apache.wicket.protocol.http.WebResponse;\n import org.apache.wicket.spring.injection.annot.SpringComponentInjector;\n import org.springframework.beans.BeansException;\n import org.springframework.context.ApplicationContext;\n import org.springframework.context.ApplicationContextAware;\n+import org.syncope.console.pages.Configuration;\n+import org.syncope.console.pages.Connectors;\n import org.syncope.console.pages.Login;\n+import org.syncope.console.pages.Report;\n+import org.syncope.console.pages.Resources;\n+import org.syncope.console.pages.Roles;\n+import org.syncope.console.pages.Schema;\n+import org.syncope.console.pages.Tasks;\n+import org.syncope.console.pages.Users;\n import org.syncope.console.pages.WelcomePage;\n \n /**\n  * SyncopeApplication class.\n  */\n-public class SyncopeApplication extends WebApplication \n+public class SyncopeApplication extends AuthenticatedWebApplication\n         implements ApplicationContextAware {\n     SyncopeUser user = null;\n \n@@ -47,13 +58,37 @@ public SyncopeApplication()\n     @Override\n     protected void init()\n     {\n-\n         file = getServletContext().getInitParameter(\"authenticationFile\");\n         addComponentInstantiationListener(new SpringComponentInjector(this));\n         getResourceSettings().setThrowExceptionOnMissingResource( true );\n-     \n+\n+        getSecuritySettings().setAuthorizationStrategy(\n+                new RoleAuthorizationStrategy(new SyncopeRolesAuthorizer()));\n+\n+//        getApplicationSettings().setPageExpiredErrorPage(PageExpiredErrorPage\n+//                .class);\n+\n+        setupAuthorizations();\n     }\n \n+    public void setupAuthorizations() {\n+        MetaDataRoleAuthorizationStrategy.authorize(Schema.class,\n+                \"SCHEMA_LIST\");\n+        MetaDataRoleAuthorizationStrategy.authorize(Roles.class,\n+                \"ROLES_LIST\");\n+        MetaDataRoleAuthorizationStrategy.authorize(Connectors.class,\n+                \"CONNECTORS_LIST\");\n+        MetaDataRoleAuthorizationStrategy.authorize(Resources.class,\n+                \"RESOURCES_LIST\");\n+        MetaDataRoleAuthorizationStrategy.authorize(Users.class,\n+                \"USER_LIST\");\n+        MetaDataRoleAuthorizationStrategy.authorize(Report.class,\n+                \"REPORT_LIST\");\n+        MetaDataRoleAuthorizationStrategy.authorize(Tasks.class,\n+                \"TASKS_LIST\");\n+        MetaDataRoleAuthorizationStrategy.authorize(Configuration.class,\n+                \"CONFIGURATION_LIST\");\n+    }\n     /**\n      * Create a new custom SyncopeSession\n      * @param request\n@@ -76,9 +111,11 @@ public Session newSession( Request request, Response response )\n     /**\n      * @see org.apache.wicket.Application#getHomePage()\n      */\n+    @Override\n     public Class getHomePage()\n     {\n-        return (user == null) ? Login.class :  WelcomePage.class;\n+        return (((SyncopeSession)Session.get()).getUser() == null) ?\n+            Login.class :  WelcomePage.class;\n     }\n \n     @Override\n@@ -91,16 +128,20 @@ public ApplicationContext getApplicationContext() {\n         return applicationContext;\n     }\n     \n-    public InputStream getAuthenticationFile(){\n-    return getServletContext().getResourceAsStream(file);\n-    }\n-\n     @Override\n     public final RequestCycle newRequestCycle(final Request request,\n             final Response response) {\n         return new SyncopeRequestCycle(this, (WebRequest) request,\n                 (WebResponse) response);\n     }\n-}\n \n+    @Override\n+    protected Class<? extends AuthenticatedWebSession> getWebSessionClass() {\n+        return SyncopeSession.class;\n+    }\n \n+    @Override\n+    protected Class<? extends WebPage> getSignInPageClass() {\n+        return Login.class;\n+    }\n+}\n\\ No newline at end of file"},{"sha":"894a8390981611be965d6ee0e6eafbe48280a7e2","filename":"console/src/main/java/org/syncope/console/SyncopeRequestCycle.java","status":"modified","additions":11,"deletions":3,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeRequestCycle.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeRequestCycle.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeRequestCycle.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -18,6 +18,8 @@\n import org.apache.wicket.Page;\n import org.apache.wicket.PageParameters;\n import org.apache.wicket.Response;\n+import org.apache.wicket.authorization.UnauthorizedInstantiationException;\n+import org.apache.wicket.markup.html.pages.AccessDeniedPage;\n import org.apache.wicket.markup.html.pages.ExceptionErrorPage;\n import org.apache.wicket.model.StringResourceModel;\n import org.apache.wicket.protocol.http.PageExpiredException;\n@@ -51,8 +53,13 @@ public SyncopeRequestCycle(final WebApplication application,\n \tpublic final Page onRuntimeException(final Page cause,\n                 final RuntimeException e) {\n             //TODO : Log the exceptions\n+            if(e instanceof UnauthorizedInstantiationException)\n+                return new AccessDeniedPage();\n+            else {\n+           \n+           SyncopeSession session = (SyncopeSession)getSession();\n \n-            if(e instanceof PageExpiredException) {\n+           if(e instanceof PageExpiredException || !session.isAuthenticated() ) {\n                 PageParameters errorParameters = new PageParameters();\n \n                 errorParameters.add(\"errorTitle\",\n@@ -66,13 +73,13 @@ public final Page onRuntimeException(final Page cause,\n             }\n \n             else if(e.getCause().getCause() instanceof RestClientException) {\n-                \n+\n                 PageParameters errorParameters = new PageParameters();\n \n                 errorParameters.add(\"errorTitle\",\n                         new StringResourceModel(\"alert\", null).getString());\n \n-                errorParameters.add(\"errorMessage\", \n+                errorParameters.add(\"errorMessage\",\n                         new StringResourceModel(\"restClientException\", null)\n                         .getString());\n \n@@ -82,3 +89,4 @@ else if(e.getCause().getCause() instanceof RestClientException) {\n             else return new ExceptionErrorPage(e, cause);\n \t}\n }\n+}"},{"sha":"8bd973caae1eb89cfdab0b59ac90b20e039d5a84","filename":"console/src/main/java/org/syncope/console/SyncopeRolesAuthorizer.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeRolesAuthorizer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeRolesAuthorizer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeRolesAuthorizer.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.console;\n+\n+import org.apache.wicket.Session;\n+import org.apache.wicket.authorization.strategies.role.IRoleCheckingStrategy;\n+import org.apache.wicket.authorization.strategies.role.Roles;\n+\n+\n+/**\n+ * The authorizer we need to provide to the authorization strategy implementation\n+ * {@link org.apache.wicket.authorization.strategies.role.annotations\n+ *                                      .AnnotationsRoleAuthorizationStrategy}.\n+ */\n+public class SyncopeRolesAuthorizer implements IRoleCheckingStrategy\n+{\n+\n+    /**\n+     * Default Constructor.\n+     */\n+    public SyncopeRolesAuthorizer()\n+    {\n+    }\n+\n+    /**\n+     * @see org.apache.wicket.authorization.strategies.role.\n+     *                              IRoleCheckingStrategy#hasAnyRole(Roles)\n+     */\n+    public boolean hasAnyRole(Roles roles)\n+    {\n+        SyncopeSession authSession = (SyncopeSession)Session.get();\n+        SyncopeUser user = authSession.getUser();\n+        \n+        return (user == null) ? false : user.hasAnyRole(roles);\n+    }\n+}"},{"sha":"59af7ea363baa00224ac9d24791bf93d4264551b","filename":"console/src/main/java/org/syncope/console/SyncopeSession.java","status":"modified","additions":21,"deletions":3,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeSession.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -16,19 +16,20 @@\n \n import org.apache.wicket.Request;\n import org.apache.wicket.Session;\n-import org.apache.wicket.protocol.http.WebSession;\n+import org.apache.wicket.authentication.AuthenticatedWebSession;\n+import org.apache.wicket.authorization.strategies.role.Roles;\n \n /**\n  * Custom Syncope Session class.\n  */\n-public class SyncopeSession extends WebSession\n+public class SyncopeSession extends AuthenticatedWebSession\n {\n+    private SyncopeUser user;\n \n     public static SyncopeSession get()\n     {\n         return ( SyncopeSession ) Session.get();\n     }\n-    private SyncopeUser user;\n \n     public SyncopeSession( Request request )\n     {\n@@ -52,4 +53,21 @@ public synchronized void setUser( SyncopeUser user )\n         this.user = user;\n         dirty();\n     }\n+\n+    /*\n+     * Requested by AuthenticatedWebSession, but actually\n+     * not used (replaced in Login page).\n+     */\n+    @Override\n+    public boolean authenticate(String username, String password) {\n+       if(((SyncopeSession)Session.get()).getUser() != null)\n+            return true;\n+       else\n+           return false;\n+    }\n+\n+    @Override\n+    public Roles getRoles() {\n+       return getUser().getRoles();\n+    }\n }"},{"sha":"894128adb130903f737343b3273d1e5151e9020a","filename":"console/src/main/java/org/syncope/console/SyncopeUser.java","status":"modified","additions":42,"deletions":41,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeUser.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -14,66 +14,67 @@\n  */\n package org.syncope.console;\n \n+import org.apache.wicket.authorization.strategies.role.Roles;\n+\n /**\n  * SyncopeUser to store in SyncopeSession after the authentication.\n  */\n public class SyncopeUser implements java.io.Serializable\n {\n \n     private String username;\n-    private String name;\n-    private String surname;\n-\n-    private int role;\n-    private String email;\n+    \n+    private final Roles roles;\n \n-    public String getUsername()\n-    {\n-        return username;\n-    }\n+    /**\n+     * Create a new Syncope session user\n+     * @param username\n+     * @param roles a comma seperated list of roles \n+     * (corresponding to Syncope's entitlements)\n+     */\n+    public SyncopeUser(String username, String roles) {\n \n-    public void setUsername( String username )\n-    {\n+        if (username == null)\n+        {\n+            throw new IllegalArgumentException(\"username must be not null\");\n+        }\n+        if (roles == null)\n+        {\n+            throw new IllegalArgumentException(\"roles must be not null\");\n+        }\n         this.username = username;\n+        this.roles = new Roles(roles);\n     }\n \n-    public String getEmail()\n-    {\n-        return email;\n-    }\n-\n-    public void setEmail( String email )\n-    {\n-        this.email = email;\n-    }\n-\n-    public int getRole()\n-    {\n-        return role;\n-    }\n-\n-    public void setRole( int role )\n-    {\n-        this.role = role;\n-    }\n-\n-    public String getName()\n+    public String getUsername()\n     {\n-        return name;\n+        return username;\n     }\n \n-    public void setName( String name )\n+    /**\n+     * Whether this user has any of the given roles.\n+     *\n+     * @param roles\n+     *            set of roles\n+     * @return whether this user has any of the given roles\n+     */\n+    public boolean hasAnyRole(Roles roles)\n     {\n-        this.name = name;\n+        return this.roles.hasAnyRole(roles);\n     }\n \n-    public String getSurname()\n+   /**\n+     * Whether this user has the given role.\n+     *\n+     * @param role\n+     * @return whether this user has the given role\n+     */\n+    public boolean hasRole(String role)\n     {\n-        return surname;\n+        return this.roles.hasRole(role);\n     }\n \n-    public void setSurname( String surname )\n-    {\n-        this.surname = surname;\n+    public Roles getRoles() {\n+        return roles;\n     }\n-}\n+}\n\\ No newline at end of file"},{"sha":"8abad2e5f430d3bd83d93d2934ae567c63f611e3","filename":"console/src/main/java/org/syncope/console/commons/XMLRolesReader.java","status":"added","additions":128,"deletions":0,"changes":128,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FXMLRolesReader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FXMLRolesReader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FXMLRolesReader.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -0,0 +1,128 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+\n+package org.syncope.console.commons;\n+\n+import java.io.IOException;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n+import javax.xml.xpath.XPath;\n+import javax.xml.xpath.XPathConstants;\n+import javax.xml.xpath.XPathExpression;\n+import javax.xml.xpath.XPathExpressionException;\n+import javax.xml.xpath.XPathFactory;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.NodeList;\n+import org.xml.sax.SAXException;\n+\n+/**\n+ * XMLRolesReader singleton class.\n+ */\n+public class XMLRolesReader {\n+    private String authFilename;\n+\n+    public XMLRolesReader() {\n+    }\n+\n+    /**\n+     * Class constructor.\n+     * @param authFilename - name of the authorizations file placed in\n+     * \"/WEB-INF/classes\"\n+     * @throws SAXException\n+     * @throws IOException\n+     */\n+    public XMLRolesReader(String authFilename) throws SAXException, IOException {\n+\n+        this.authFilename = authFilename;\n+\n+    }\n+\n+    /**\n+     * Get all roles allowed for specific page and actio requested.\n+     *\n+     * @param pageId\n+     * @param actionId\n+     * @return roles list comma separated\n+     */\n+    public String getAllAllowedRoles(String pageId,String actionId) {\n+    String roles = \"\";\n+\n+    Document doc = null;\n+    \n+        try {\n+            doc = getDocumentBuilder();\n+        } catch (SAXException ex) {\n+            Logger.getLogger(XMLRolesReader.class.getName()).log(Level.SEVERE,\n+                    null, ex);\n+            return null;\n+        } catch (IOException ex) {\n+            Logger.getLogger(XMLRolesReader.class.getName()).log(Level.SEVERE,\n+                    null, ex);\n+            return null;\n+        } catch (ParserConfigurationException ex) {\n+            Logger.getLogger(XMLRolesReader.class.getName()).log(Level.SEVERE,\n+                    null, ex);\n+            return null;\n+        }\n+\n+    doc.getDocumentElement().normalize();\n+\n+    try {\n+\n+    XPathFactory factory = XPathFactory.newInstance();\n+    XPath xpath = factory.newXPath();\n+    XPathExpression expr\n+     = xpath.compile(\"//page[@id='\"+pageId+\"']/action[@id='\"+actionId+\"']/\" +\n+                     \"entitlement/text()\");\n+    Object result = expr.evaluate(doc, XPathConstants.NODESET);\n+\n+    NodeList nodes = (NodeList) result;\n+\n+    for (int i = 0; i < nodes.getLength(); i++) {\n+        if(i > 0) {\n+        roles += \",\";\n+        roles += nodes.item(i).getNodeValue();     \n+        }\n+        else\n+            roles += nodes.item(i).getNodeValue();\n+    }\n+\n+    }\n+    catch(XPathExpressionException ex) {\n+         Logger.getLogger(XMLRolesReader.class.getName()).log(Level.SEVERE,\n+                    null, ex);\n+    }\n+    \n+    //System.out.println(\"Roles : \" + roles);\n+\n+    return roles;\n+    }\n+\n+    public Document getDocumentBuilder() throws SAXException, IOException,\n+            ParserConfigurationException {\n+\n+    DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n+    dbf.setNamespaceAware(true);\n+    DocumentBuilder db = dbf.newDocumentBuilder();\n+    Document doc = db.parse(getClass().getResource(\"/\"+authFilename)\n+            .openStream());\n+\n+    return doc;\n+    }\n+\n+}"},{"sha":"0df81f1ed1af97a24932fd599fb3dfa417051f2f","filename":"console/src/main/java/org/syncope/console/pages/BasePage.java","status":"modified","additions":87,"deletions":8,"changes":95,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -15,9 +15,13 @@\n package org.syncope.console.pages;\n \n import org.apache.wicket.PageParameters;\n+import org.apache.wicket.authorization.strategies.role.annotations.AuthorizeAction;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.syncope.console.SyncopeSession;\n import org.syncope.console.SyncopeUser;\n+import org.syncope.console.commons.XMLRolesReader;\n \n /**\n  * Syncope Wicket base-page.\n@@ -26,6 +30,9 @@ public class BasePage extends CustomizableBasePage {\n \n     private static final long serialVersionUID = 1L;\n \n+    @SpringBean(name = \"xmlRolesReader\")\n+    protected XMLRolesReader xmlRolesReader;\n+\n     /**\n      * Constructor that is invoked when page is invoked without a\n      * sessadd(new BookmarkablePageLink(\"roles\", Roles.class));ion.\n@@ -36,21 +43,93 @@ public class BasePage extends CustomizableBasePage {\n     public BasePage(final PageParameters parameters) {\n         super(parameters);\n \n-        add(new BookmarkablePageLink(\"schema\", Schema.class));\n+        BookmarkablePageLink schemaLink = new BookmarkablePageLink(\"schema\",\n+                Schema.class);\n+\n+        String allowedSchemaRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\",\n+                        \"list\");\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(schemaLink, ENABLE,\n+                        allowedSchemaRoles);\n+        \n+        add(schemaLink);\n+\n+        BookmarkablePageLink usersLink = new BookmarkablePageLink(\"users\",\n+                Users.class);\n+\n+        String allowedUsersRoles = xmlRolesReader.getAllAllowedRoles(\"Users\",\n+                        \"list\");\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(usersLink, ENABLE,\n+                        allowedUsersRoles);\n+\n+        add(usersLink);\n+\n+        BookmarkablePageLink rolesLink= new BookmarkablePageLink(\"roles\",\n+                Roles.class);\n+\n+        String allowedRoleRoles = xmlRolesReader.getAllAllowedRoles(\"Roles\",\n+                        \"list\");\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(rolesLink, ENABLE,\n+                        allowedRoleRoles);\n+        \n+        add(rolesLink);\n+\n+        BookmarkablePageLink resourcesLink = new BookmarkablePageLink(\n+                \"resources\", Resources.class);\n+\n+        String allowedResourcesRoles = xmlRolesReader.getAllAllowedRoles(\n+                \"Resources\",\"list\");\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(resourcesLink, ENABLE,\n+                        allowedResourcesRoles);\n+\n+        add(resourcesLink);\n+\n+        BookmarkablePageLink connectorsLink =\n+                new BookmarkablePageLink(\"connectors\", Connectors.class);\n+\n+        String allowedConnectorsRoles = xmlRolesReader.getAllAllowedRoles(\n+                \"Connectors\",\"list\");\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(connectorsLink, ENABLE,\n+                        allowedConnectorsRoles);\n+\n+        add(connectorsLink);\n+\n+        BookmarkablePageLink reportLink = new BookmarkablePageLink(\n+                \"report\", Report.class);\n+\n+        String allowedReportRoles = xmlRolesReader.getAllAllowedRoles(\n+                \"Report\",\"list\");\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(reportLink, ENABLE,\n+                        allowedReportRoles);\n \n-        add(new BookmarkablePageLink(\"users\", Users.class));\n+        add(reportLink);\n \n-        add(new BookmarkablePageLink(\"roles\", Roles.class));\n+        BookmarkablePageLink configurationLink = new BookmarkablePageLink(\n+                \"configuration\", Configuration.class);\n \n-        add(new BookmarkablePageLink(\"resources\", Resources.class));\n+        String allowedConfigurationRoles = xmlRolesReader.getAllAllowedRoles(\n+                \"Configuration\",\"list\");\n \n-        add(new BookmarkablePageLink(\"connectors\", Connectors.class));\n+        MetaDataRoleAuthorizationStrategy.authorize(configurationLink, ENABLE,\n+                        allowedConfigurationRoles);\n \n-        add(new BookmarkablePageLink(\"report\", Report.class));\n+        add(configurationLink);\n \n-        add(new BookmarkablePageLink(\"configuration\", Configuration.class));\n+        BookmarkablePageLink taskLink = new BookmarkablePageLink(\"task\",\n+                Tasks.class);\n+        \n+        String allowedTasksRoles = xmlRolesReader.getAllAllowedRoles(\n+                \"Tasks\",\"list\");\n \n-        add(new BookmarkablePageLink(\"task\", Tasks.class));\n+        MetaDataRoleAuthorizationStrategy.authorize(taskLink, ENABLE,\n+                        allowedTasksRoles);   \n+        \n+        add(taskLink);\n \n         add(new BookmarkablePageLink(\"logout\", Logout.class));\n     }"},{"sha":"6e72041e9ce2c62167f35217438b2ef357a0fd50","filename":"console/src/main/java/org/syncope/console/pages/Configuration.java","status":"modified","additions":23,"deletions":2,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -30,6 +30,7 @@\n import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table\n         .AjaxFallbackDefaultDataTable;\n@@ -137,6 +138,12 @@ public Page createPage() {\n                 EditLinkPanel panel = new EditLinkPanel(componentId, model);\n                 panel.add(editLink);\n \n+                String allowedRoles = xmlRolesReader.getAllAllowedRoles(\n+                        \"Configuration\",\"read\");\n+\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        allowedRoles);\n+\n                 cellItem.add(panel);\n             }\n         });\n@@ -187,6 +194,12 @@ public CharSequence preDecorateScript(CharSequence script) {\n                 DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n                 panel.add(deleteLink);\n \n+                String allowedRoles = xmlRolesReader.getAllAllowedRoles(\n+                        \"Configuration\",\"delete\");\n+\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        allowedRoles);\n+\n                 cellItem.add(panel);\n             }\n         });\n@@ -217,7 +230,8 @@ public CharSequence preDecorateScript(CharSequence script) {\n         setWindowClosedCallback(createConfigWin, container);\n         setWindowClosedCallback(editConfigWin, container);\n \n-        add(new AjaxLink(\"createConfigurationLink\") {\n+        AjaxLink createConfigurationLink = new AjaxLink(\n+                \"createConfigurationLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n@@ -234,7 +248,14 @@ public Page createPage() {\n \n                 createConfigWin.show(target);\n             }\n-        });\n+        };\n+\n+        String allowedRoles = xmlRolesReader.getAllAllowedRoles(\n+                \"Configuration\",\"create\");\n+        MetaDataRoleAuthorizationStrategy.authorize(createConfigurationLink,\n+                ENABLE, allowedRoles);\n+\n+        add(createConfigurationLink);\n \n         Form paginatorForm = new Form(\"PaginatorForm\");\n "},{"sha":"a88985b625d9f74607136a542a77106c469715a0","filename":"console/src/main/java/org/syncope/console/pages/ConfigurationModalPage.java","status":"modified","additions":15,"deletions":1,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -18,6 +18,8 @@\n \n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.form.TextField;\n@@ -64,7 +66,7 @@ public ConfigurationModalPage(final BasePage basePage, final ModalWindow window,\n \n         value.setRequired(true);\n \n-        submit = new AjaxButton(\"submit\", new Model<String>(getString(\"submit\"))) {\n+        submit = new IndicatingAjaxButton(\"submit\", new Model<String>(getString(\"submit\"))) {\n \n             @Override\n             protected void onSubmit(AjaxRequestTarget target, Form form) {\n@@ -98,6 +100,18 @@ protected void onError(AjaxRequestTarget target, Form form) {\n             }\n         };\n \n+        String allowedRoles;\n+\n+        if(createFlag)\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Configuration\",\n+                    \"create\");\n+        else\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Configuration\",\n+                    \"update\");\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE,\n+                        allowedRoles);\n+\n         form.add(submit);\n \n         add(form);"},{"sha":"b4b5ee8edb5162caeeced05836fbe77ff1e54530","filename":"console/src/main/java/org/syncope/console/pages/Connectors.java","status":"modified","additions":20,"deletions":2,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -27,6 +27,7 @@\n import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n@@ -139,6 +140,11 @@ public Page createPage() {\n                 EditLinkPanel panel = new EditLinkPanel(componentId, model);\n                 panel.add(editLink);\n \n+                String allowedRoles = xmlRolesReader.getAllAllowedRoles(\n+                        \"Connectors\",\"read\");\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        allowedRoles);\n+\n                 cellItem.add(panel);\n             }\n         });\n@@ -187,6 +193,11 @@ public CharSequence preDecorateScript(CharSequence script) {\n                 DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n                 panel.add(deleteLink);\n \n+                String allowedRoles = xmlRolesReader.getAllAllowedRoles(\n+                        \"Connectors\",\"delete\");\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        allowedRoles);\n+\n                 cellItem.add(panel);\n             }\n         });\n@@ -213,7 +224,7 @@ public CharSequence preDecorateScript(CharSequence script) {\n         editConnectorWin.setPageMapName(\"edit-conn-modal\");\n         editConnectorWin.setCookieName(\"edit-conn-modal\");\n \n-        add(new AjaxLink(\"createConnectorLink\") {\n+       AjaxLink createConnectorLink = new AjaxLink(\"createConnectorLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n@@ -230,7 +241,14 @@ public Page createPage() {\n \n                 createConnectorWin.show(target);\n             }\n-        });\n+        };\n+\n+        String allowedRoles = xmlRolesReader.getAllAllowedRoles(\n+                \"Connectors\",\"create\");\n+        MetaDataRoleAuthorizationStrategy.authorize(createConnectorLink, ENABLE,\n+                allowedRoles);\n+        \n+        add(createConnectorLink);\n \n         Form paginatorForm = new Form(\"PaginatorForm\");\n "},{"sha":"a24073981f3e9e380e14761bda29cadbb3e5a296","filename":"console/src/main/java/org/syncope/console/pages/ConnectorsModalPage.java","status":"modified","additions":15,"deletions":1,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorsModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorsModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorsModalPage.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -25,6 +25,8 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n@@ -182,7 +184,7 @@ protected void populateItem(ListItem item) {\n \n         connectorForm.add(propertiesContainer);\n \n-        submit = new AjaxButton(\"submit\", new Model(getString(\"submit\"))) {\n+        submit = new IndicatingAjaxButton(\"submit\", new Model(getString(\"submit\"))) {\n \n             @Override\n             protected void onSubmit(AjaxRequestTarget target, Form form) {\n@@ -215,6 +217,18 @@ protected void onError(AjaxRequestTarget target, Form form) {\n                 target.addComponent(form.get(\"feedback\"));\n             }\n         };\n+    \n+        String allowedRoles;\n+\n+        if(createFlag)\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Connectors\",\n+                    \"create\");\n+        else\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Connectors\",\n+                    \"update\");\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE,\n+                        allowedRoles);\n \n         connectorForm.add(new FeedbackPanel(\"feedback\").setOutputMarkupId(true));\n "},{"sha":"091312c37219aa1dbd21f50940a61e0d7553de22","filename":"console/src/main/java/org/syncope/console/pages/DerivedSchemaModalPage.java","status":"modified","additions":15,"deletions":1,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -18,6 +18,8 @@\n \n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.form.TextField;\n@@ -70,7 +72,7 @@ public DerivedSchemaModalPage(final BasePage basePage, final ModalWindow window,\n \n         name.setEnabled(createFlag);\n \n-        submit = new AjaxButton(\"submit\") {\n+        submit = new IndicatingAjaxButton(\"submit\") {\n \n             @Override\n             protected void onSubmit(AjaxRequestTarget target, Form form) {\n@@ -110,6 +112,18 @@ protected void onError(AjaxRequestTarget target, Form form) {\n             }\n         };\n \n+        String allowedRoles;\n+\n+        if(createFlag)\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\",\n+                    \"create\");\n+        else\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\",\n+                    \"update\");\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE,\n+                        allowedRoles);\n+\n         schemaForm.add(name);\n         schemaForm.add(expression);\n "},{"sha":"44d6e4fadf43fdd284cfd00e5793dd88f4bd8728","filename":"console/src/main/java/org/syncope/console/pages/Login.java","status":"modified","additions":141,"deletions":25,"changes":166,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -14,13 +14,11 @@\n  */\n package org.syncope.console.pages;\n \n-import java.io.IOException;\n import java.io.InputStream;\n+import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n import java.util.Locale;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n import org.apache.wicket.PageParameters;\n import org.apache.wicket.Session;\n import org.apache.wicket.markup.html.WebPage;\n@@ -33,7 +31,6 @@\n import org.apache.wicket.markup.html.panel.FeedbackPanel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n-import org.syncope.console.SyncopeApplication;\n import org.syncope.console.SyncopeSession;\n import org.syncope.console.SyncopeUser;\n \n@@ -70,26 +67,15 @@ public Login(PageParameters parameters) {\n \n             @Override\n             public void onSubmit() {\n-                inputStream = ((SyncopeApplication)getApplication())\n-                        .getAuthenticationFile();\n-                Authentication auth = new Authentication();\n-                Boolean authenticated = auth.authentication(usernameField\n-                        .getRawInput(),\n-                        passwordField.getRawInput(), inputStream);\n-                if (authenticated == true) {\n-                    SyncopeUser user = new SyncopeUser();\n-                    user.setUsername(usernameField.getRawInput());\n-                    ((SyncopeSession)Session.get()).setUser(user);\n-                    setResponsePage(new WelcomePage(null));\n-                    try {\n-                        inputStream.close();\n-                    } catch (IOException ex) {\n-                        Logger.getLogger(Login.class.getName())\n-                                .log(Level.SEVERE, null, ex);\n-                    }\n-                } else {\n+               SyncopeUser user = authenticate(usernameField\n+                       .getRawInput(), passwordField.getRawInput());\n+\n+               if(user != null) {\n+                ((SyncopeSession)Session.get()).setUser(user);\n+                setResponsePage(new WelcomePage(null));\n+               }\n+               else\n                     error(getString(\"login-error\"));\n-                }\n             }\n         };\n \n@@ -100,6 +86,135 @@ public void onSubmit() {\n         add(new FeedbackPanel(\"feedback\"));\n     }\n \n+    /**\n+     *\n+     * @param username\n+     * @param password\n+     * @return\n+     */\n+    public SyncopeUser authenticate(String username, String password) {\n+\n+        SyncopeUser user = null;\n+        String roles = \"\";\n+\n+        if (\"admin\".equals(username) && \"password\".equals(password)) {\n+\n+\n+            List<String> rolesList = getAdminRoles();\n+\n+            for(int i = 0; i< rolesList.size(); i++) {\n+                String role = rolesList.get(i);\n+                roles +=role;\n+\n+                if(i != rolesList.size())\n+                    roles += \",\";\n+            }\n+\n+            user = new SyncopeUser(username, roles);\n+\n+            return user;\n+        }\n+        else  if (\"manager\".equals(username) && \"password\".equals(password)) {\n+\n+            List<String> rolesList = getManagerRoles();\n+\n+            for (int i = 0; i < rolesList.size(); i++) {\n+                String role = rolesList.get(i);\n+                roles += role;\n+\n+                if (i != rolesList.size())\n+                    roles += \",\";\n+\n+            }\n+\n+            user = new SyncopeUser(username, roles);\n+\n+            return user;\n+        }\n+        else\n+            return null;\n+    }\n+\n+    public List<String> getAdminRoles() {\n+        List<String> roles = new ArrayList<String>();\n+\n+        roles.add(\"USER_CREATE\");\n+        roles.add(\"USER_LIST\");\n+        roles.add(\"USER_READ\");\n+        roles.add(\"USER_DELETE\");\n+        roles.add(\"USER_UPDATE\");\n+        roles.add(\"USER_VIEW\");\n+\n+        roles.add(\"SCHEMA_CREATE\");\n+        roles.add(\"SCHEMA_LIST\");\n+        roles.add(\"SCHEMA_READ\");\n+        roles.add(\"SCHEMA_DELETE\");\n+        roles.add(\"SCHEMA_UPDATE\");\n+\n+        roles.add(\"ROLES_CREATE\");\n+        roles.add(\"ROLES_LIST\");\n+        roles.add(\"ROLES_READ\");\n+        roles.add(\"ROLES_DELETE\");\n+        roles.add(\"ROLES_UPDATE\");\n+\n+        roles.add(\"RESOURCES_CREATE\");\n+        roles.add(\"RESOURCES_LIST\");\n+        roles.add(\"RESOURCES_READ\");\n+        roles.add(\"RESOURCES_DELETE\");\n+        roles.add(\"RESOURCES_UPDATE\");\n+\n+        roles.add(\"CONNECTORS_CREATE\");\n+        roles.add(\"CONNECTORS_LIST\");\n+        roles.add(\"CONNECTORS_READ\");\n+        roles.add(\"CONNECTORS_DELETE\");\n+        roles.add(\"CONNECTORS_UPDATE\");\n+\n+        roles.add(\"REPORT_LIST\");\n+\n+        roles.add(\"CONFIGURATION_CREATE\");\n+        roles.add(\"CONFIGURATION_LIST\");\n+        roles.add(\"CONFIGURATION_READ\");\n+        roles.add(\"CONFIGURATION_DELETE\");\n+        roles.add(\"CONFIGURATION_UPDATE\");\n+\n+        roles.add(\"TASKS_CREATE\");\n+        roles.add(\"TASKS_LIST\");\n+        roles.add(\"TASKS_READ\");\n+        roles.add(\"TASKS_DELETE\");\n+        roles.add(\"TASKS_UPDATE\");\n+        roles.add(\"TASKS_EXECUTE\");\n+\n+        return roles;\n+    }\n+\n+    public List<String> getManagerRoles() {\n+        List<String> roles = new ArrayList<String>();\n+\n+        //roles.add(\"USER_CREATE\");\n+        roles.add(\"USER_LIST\");\n+        roles.add(\"USER_READ\");\n+        roles.add(\"USER_DELETE\");\n+//        roles.add(\"USER_UPDATE\");\n+\n+//        roles.add(\"SCHEMA_CREATE\");\n+        roles.add(\"SCHEMA_LIST\");\n+//        roles.add(\"SCHEMA_READ\");\n+//        roles.add(\"SCHEMA_DELETE\");\n+//        roles.add(\"SCHEMA_UPDATE\");\n+\n+         roles.add(\"CONNECTORS_LIST\");\n+         roles.add(\"REPORT_LIST\");\n+\n+//        roles.add(\"ROLES_CREATE\");\n+        roles.add(\"ROLES_LIST\");\n+        roles.add(\"ROLES_READ\");\n+//        roles.add(\"ROLES_DELETE\");\n+//        roles.add(\"ROLES_UPDATE\");\n+        roles.add(\"TASKS_LIST\");\n+\n+        return roles;\n+    }\n+\n     /**\n      * Inner class which implements (custom) Locale DropDownChoice component.\n      */\n@@ -118,16 +233,17 @@ public LocaleDropDown(String id, List<Locale> supportedLocales) {\n             setChoiceRenderer(new LocaleRenderer());\n             setModel(new IModel() {\n \n+                @Override\n                 public Object getObject() {\n-\n                     return getSession().getLocale();\n-\n                 }\n \n+                @Override\n                 public void setObject(Object object) {\n                     getSession().setLocale((Locale) object);\n                 }\n \n+                @Override\n                 public void detach() {\n                 }\n             });"},{"sha":"b833cb2b0e145a554f49b427a78ae3044470789f","filename":"console/src/main/java/org/syncope/console/pages/MembershipModalPage.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -28,6 +28,7 @@\n import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n@@ -243,6 +244,16 @@ protected void onError(AjaxRequestTarget target, Form form) {\n             }\n         };\n \n+        String allowedRoles = null;\n+\n+        if(createFlag)\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Users\",\"create\");\n+        else\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Users\",\"update\");\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER,\n+                allowedRoles);\n+\n         form.add(submit);\n \n "},{"sha":"d98a29237e4f2618e6069623cf0a45bd0ab163af","filename":"console/src/main/java/org/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":15,"deletions":1,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -28,6 +28,8 @@\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.ajax.markup.html.form.AjaxCheckBox;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.CheckBox;\n@@ -307,7 +309,7 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n \n         resourceForm.add(addSchemaMappingBtn);\n \n-        submit = new AjaxButton(\"submit\", new Model(getString(\"submit\"))) {\n+        submit = new IndicatingAjaxButton(\"submit\", new Model(getString(\"submit\"))) {\n \n             @Override\n             protected void onSubmit(AjaxRequestTarget target, Form form) {\n@@ -351,6 +353,18 @@ protected void onError(AjaxRequestTarget target, Form form) {\n             }\n         };\n \n+        String allowedRoles;\n+\n+        if(createFlag)\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Resources\",\n+                    \"create\");\n+        else\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Resources\",\n+                    \"update\");\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE,\n+                        allowedRoles);\n+\n         resourceForm.add(submit);\n \n         resourceForm.add(new FeedbackPanel(\"feedback\").setOutputMarkupId(true));"},{"sha":"3b9553f2cf8bbc15390bf7e75d74bbd01587f2ea","filename":"console/src/main/java/org/syncope/console/pages/Resources.java","status":"modified","additions":13,"deletions":1,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -27,6 +27,7 @@\n import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table\n         .AjaxFallbackDefaultDataTable;\n@@ -130,6 +131,12 @@ public Page createPage() {\n                     EditLinkPanel panel = new EditLinkPanel(componentId, model);\n                     panel.add(editLink);\n \n+                    String allowedRoles = xmlRolesReader.getAllAllowedRoles(\n+                        \"Resources\",\"read\");\n+                    \n+                    MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        allowedRoles);\n+\n                     cellItem.add(panel);\n             }\n         });\n@@ -170,6 +177,12 @@ public CharSequence preDecorateScript(CharSequence script) {\n                             model);\n                     panel.add(deleteLink);\n \n+                    String allowedRoles = xmlRolesReader.getAllAllowedRoles(\n+                        \"Resources\",\"delete\");\n+\n+                    MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        allowedRoles);\n+\n                     cellItem.add(panel);\n             }\n         });\n@@ -233,7 +246,6 @@ protected void onUpdate( AjaxRequestTarget target )\n               table.setRowsPerPage(paginatorRows);\n               \n               target.addComponent(container);\n-              target.addComponent(getPage().get(\"resourcesNavigator\"));\n             }\n \n           });"},{"sha":"a65045183fb64196825310187665d99a25b54417","filename":"console/src/main/java/org/syncope/console/pages/RoleModalPage.java","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -35,6 +35,8 @@\n import org.apache.wicket.ajax.IAjaxCallDecorator;\n import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -287,7 +289,7 @@ public CharSequence preDecorateScript(CharSequence script) {\n name.setRequired(true);\n container.add(name);\n \n-submit = new AjaxButton(\"submit\", new Model(getString(\"submit\"))) {\n+submit = new IndicatingAjaxButton(\"submit\", new Model(getString(\"submit\"))) {\n \n     @Override\n     protected void onSubmit(AjaxRequestTarget target, Form form) {\n@@ -336,6 +338,15 @@ protected void onError(AjaxRequestTarget target, Form form) {\n     }\n };\n \n+String allowedRoles;\n+\n+if(createFlag)\n+    allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Roles\",\"create\");\n+else\n+    allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Roles\",\"update\");\n+\n+MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE, allowedRoles);\n+\n form.add(submit);\n \n form.add(new FeedbackPanel(\"feedback\").setOutputMarkupId(true));"},{"sha":"cb4604cb0f61f6e05fbe2a36547981307c0073b9","filename":"console/src/main/java/org/syncope/console/pages/Schema.java","status":"modified","additions":502,"deletions":498,"changes":1000,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -27,9 +27,12 @@\n import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table\n+        .AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid\n+        .ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n@@ -56,60 +59,47 @@\n /**\n  * Schema WebPage.\n  */\n-public class Schema extends BasePage {\n+public class Schema extends BasePage\n+{\n+    protected enum SchemaType {RoleSchema, UserSchema, MembershipSchema};\n \n-    protected enum SourceMappingType {\n+    protected enum SchemaDerivedType {RoleDerivedSchema, UserDerivedSchema,\n+    MembershipDerivedSchema};\n \n-        RoleSchema, UserSchema, MembershipSchema\n-\n-    };\n-\n-    protected enum SchemaDerivedType {\n-\n-        RoleDerivedSchema, UserDerivedSchema,\n-        MembershipDerivedSchema\n-\n-    };\n     @SpringBean(name = \"schemaRestClient\")\n     SchemaRestClient restClient;\n \n     @SpringBean(name = \"utility\")\n     Utility utility;\n \n-    final ModalWindow createUserSchemaWin;\n+    /*@SpringBean(name = \"xmlRolesReader\")\n+    XMLRolesReader xmlRolesReader;*/\n \n+    final ModalWindow createUserSchemaWin;\n     final ModalWindow editUserSchemaWin;\n \n     final ModalWindow createUserDerivedSchemaWin;\n-\n     final ModalWindow editUserDerivedSchemaWin;\n \n     final ModalWindow createRoleSchemaWin;\n-\n     final ModalWindow editRoleSchemaWin;\n-\n+    \n     final ModalWindow createRoleDerivedSchemaWin;\n-\n     final ModalWindow editRoleDerivedSchemaWin;\n \n     final ModalWindow createMembershipSchemaWin;\n-\n     final ModalWindow editMembershipSchemaWin;\n \n     final ModalWindow createMembershipDerivedSchemaWin;\n-\n     final ModalWindow editMembershipDerivedSchemaWin;\n-\n+    \n     WebMarkupContainer userSchemaContainer;\n-\n     WebMarkupContainer userDerivedSchemaContainer;\n \n     WebMarkupContainer roleSchemasContainer;\n-\n     WebMarkupContainer roleDerivedSchemasContainer;\n \n     WebMarkupContainer membershipSchemaContainer;\n-\n     WebMarkupContainer membershipDerivedSchemaContainer;\n \n     private int userSchemaPageRows;\n@@ -125,61 +115,72 @@ protected enum SchemaDerivedType {\n     private int membershipDerPageRows;\n \n     /*\n-    Response flag set by the Modal Window after the operation is completed\n+     Response flag set by the Modal Window after the operation is completed\n      */\n     boolean operationResult = false;\n-\n     FeedbackPanel feedbackPanel;\n-\n-    public Schema(PageParameters parameters) {\n+    \n+    public Schema(PageParameters parameters)\n+    {\n         super(parameters);\n \n         add(createRoleSchemaWin = new ModalWindow(\"createRoleSchemaWin\"));\n         add(editRoleSchemaWin = new ModalWindow(\"editRoleSchemaWin\"));\n \n-        add(createRoleDerivedSchemaWin = new ModalWindow(\n-                \"createRoleDerivedSchemaWin\"));\n-        add(editRoleDerivedSchemaWin = new ModalWindow(\n-                \"editRoleDerivedSchemaWin\"));\n+        add(createRoleDerivedSchemaWin\n+                = new ModalWindow(\"createRoleDerivedSchemaWin\"));\n+\n+        add(editRoleDerivedSchemaWin\n+                = new ModalWindow(\"editRoleDerivedSchemaWin\"));\n \n         add(createUserSchemaWin = new ModalWindow(\"createUserSchemaWin\"));\n+        \n         add(editUserSchemaWin = new ModalWindow(\"editUserSchemaWin\"));\n-\n-        add(createUserDerivedSchemaWin = new ModalWindow(\n-                \"createUserDerSchemaWin\"));\n+        \n+        add(createUserDerivedSchemaWin\n+                = new ModalWindow(\"createUserDerSchemaWin\"));\n         add(editUserDerivedSchemaWin = new ModalWindow(\"editUserDerSchemaWin\"));\n \n-        add(createMembershipSchemaWin = new ModalWindow(\n-                \"createMembershipSchemaWin\"));\n+        add(createMembershipSchemaWin\n+                = new ModalWindow(\"createMembershipSchemaWin\"));\n         add(editMembershipSchemaWin = new ModalWindow(\"editMembershipSchemaWin\"));\n \n-        add(createMembershipDerivedSchemaWin = new ModalWindow(\n-                \"createMembershipDerSchemaWin\"));\n-        add(editMembershipDerivedSchemaWin = new ModalWindow(\n-                \"editMembershipDerSchemaWin\"));\n+        add(createMembershipDerivedSchemaWin\n+                = new ModalWindow(\"createMembershipDerSchemaWin\"));\n+        add(editMembershipDerivedSchemaWin\n+                = new ModalWindow(\"editMembershipDerSchemaWin\"));\n \n         feedbackPanel = new FeedbackPanel(\"feedback\");\n-        feedbackPanel.setOutputMarkupId(true);\n-\n+        feedbackPanel.setOutputMarkupId( true );\n+        \n         add(feedbackPanel);\n \n-        rolePageRows = utility.getPaginatorRowsToDisplay(\n-                Constants.CONF_ROLE_SCHEMA_PAGINATOR_ROWS);\n+        rolePageRows = utility.getPaginatorRowsToDisplay(Constants\n+                .CONF_ROLE_SCHEMA_PAGINATOR_ROWS);\n+\n+        roleDerPageRows = utility.getPaginatorRowsToDisplay(Constants\n+                .CONF_ROLE_DER_SCHEMA_PAGINATOR_ROWS);\n+\n+        userSchemaPageRows = utility.getPaginatorRowsToDisplay(Constants\n+                .CONF_USER_SCHEMA_PAGINATOR_ROWS);\n \n-        roleDerPageRows = utility.getPaginatorRowsToDisplay(\n-                Constants.CONF_ROLE_DER_SCHEMA_PAGINATOR_ROWS);\n+        userDerSchemaPageRows = utility.getPaginatorRowsToDisplay(Constants\n+                .CONF_USER_DER_SCHEMA_PAGINATOR_ROWS);\n \n-        userSchemaPageRows = utility.getPaginatorRowsToDisplay(\n-                Constants.CONF_USER_SCHEMA_PAGINATOR_ROWS);\n+        membershipPageRows = utility.getPaginatorRowsToDisplay(Constants\n+                .CONF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS);\n \n-        userDerSchemaPageRows = utility.getPaginatorRowsToDisplay(\n-                Constants.CONF_USER_DER_SCHEMA_PAGINATOR_ROWS);\n+        membershipDerPageRows = utility.getPaginatorRowsToDisplay(Constants\n+                .CONF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS);\n \n-        membershipPageRows = utility.getPaginatorRowsToDisplay(\n-                Constants.CONF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS);\n+        final String allowedCreateRoles = xmlRolesReader.getAllAllowedRoles(\n+                \"Schema\",\"create\");\n \n-        membershipDerPageRows = utility.getPaginatorRowsToDisplay(\n-                Constants.CONF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS);\n+        final String allowedReadRoles = xmlRolesReader.getAllAllowedRoles(\n+                \"Schema\",\"read\");\n+\n+        final String allowedDeleteRoles = xmlRolesReader.getAllAllowedRoles(\n+                \"Schema\",\"delete\");\n \n         List<IColumn> rolesColumns = new ArrayList<IColumn>();\n \n@@ -193,27 +194,26 @@ public Schema(PageParameters parameters) {\n                 \"attributes\", \"attributes\"));\n \n         rolesColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n-                getString(\"name\"))) {\n-\n-            public void populateItem(Item<ICellPopulator<SchemaTO>> cellItem,\n-                    String componentId, IModel<SchemaTO> model) {\n+                getString(\"name\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<SchemaTO>>\n+                    cellItem, String componentId, IModel<SchemaTO> model)\n+            {\n+                    final SchemaTO schemaTO = model.getObject();\n \n-                final SchemaTO schemaTO = model.getObject();\n-\n-                AjaxLink editLink = new AjaxLink(\"editLink\") {\n+                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n                         editRoleSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                            public Page createPage() {\n-                                SchemaModalPage window = new SchemaModalPage(\n-                                        Schema.this, editRoleSchemaWin, schemaTO,\n-                                        false);\n-                                window.setEntity(SchemaModalPage.Entity.ROLE);\n-                                return window;\n-                            }\n+                        public Page createPage() {\n+                            SchemaModalPage window = new SchemaModalPage(\n+                                    Schema.this, editRoleSchemaWin, schemaTO, false);\n+                            window.setEntity(SchemaModalPage.Entity.ROLE);\n+                            return window;\n+                        }\n                         });\n \n                         editRoleSchemaWin.show(target);\n@@ -223,19 +223,22 @@ public Page createPage() {\n                 EditLinkPanel panel = new EditLinkPanel(componentId, model);\n                 panel.add(editLink);\n \n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE, \n+                        allowedReadRoles);\n+\n                 cellItem.add(panel);\n             }\n         });\n \n-        rolesColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(getString(\n-                \"delete\"))) {\n-\n-            public void populateItem(Item<ICellPopulator<SchemaTO>> cellItem,\n-                    String componentId, IModel<SchemaTO> model) {\n+        rolesColumns.add(new AbstractColumn<SchemaTO>(new Model<String>\n+                (getString(\"delete\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<SchemaTO>>\n+                    cellItem, String componentId, IModel<SchemaTO> model)\n+            {\n+                    final SchemaTO schemaTO = model.getObject();\n \n-                final SchemaTO schemaTO = model.getObject();\n-\n-                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n+                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -249,23 +252,23 @@ public void onClick(AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.\n-                                getAjaxCallDecorator()) {\n-\n+                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(\n-                                    CharSequence script) {\n-                                return \"if (confirm('\" + getString(\n-                                        \"confirmDelete\") + \"'))\"\n-                                        + \"{\" + script + \"}\";\n+                            public CharSequence preDecorateScript(CharSequence script) {\n+                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n+                                        +\"{\"+script+\"}\";\n                             }\n                         };\n                     }\n                 };\n \n                 DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        allowedDeleteRoles);\n+\n                 panel.add(deleteLink);\n \n                 cellItem.add(panel);\n@@ -275,26 +278,25 @@ public CharSequence preDecorateScript(\n \n         final AjaxFallbackDefaultDataTable tableRoles =\n                 new AjaxFallbackDefaultDataTable(\"datatable\", rolesColumns,\n-                new SchemaProvider(SourceMappingType.RoleSchema), rolePageRows);\n+                new SchemaProvider(SchemaType.RoleSchema), rolePageRows);\n \n         Form rolesPaginatorForm = new Form(\"RolesPaginatorForm\");\n \n         final DropDownChoice rowsRoleChooser = new DropDownChoice(\"rowsChooser\",\n-                new PropertyModel(this, \"rolePageRows\"), utility.\n-                paginatorRowsChooser());\n+        new PropertyModel(this,\"rolePageRows\"),utility.paginatorRowsChooser());\n \n-        rowsRoleChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+        rowsRoleChooser.add(new AjaxFormComponentUpdatingBehavior( \"onchange\" ){\n+          protected void onUpdate( AjaxRequestTarget target )\n+            {\n+              utility.updatePaginatorRows(Constants\n+                      .CONF_ROLE_SCHEMA_PAGINATOR_ROWS, rolePageRows);\n \n-            protected void onUpdate(AjaxRequestTarget target) {\n-                utility.updatePaginatorRows(\n-                        Constants.CONF_ROLE_SCHEMA_PAGINATOR_ROWS,\n-                        rolePageRows);\n-\n-                tableRoles.setRowsPerPage(rolePageRows);\n-\n-                target.addComponent(roleSchemasContainer);\n+              tableRoles.setRowsPerPage(rolePageRows);\n+              \n+              target.addComponent(roleSchemasContainer);\n             }\n-        });\n+\n+          });\n \n         rolesPaginatorForm.add(rowsRoleChooser);\n         add(rolesPaginatorForm);\n@@ -304,65 +306,58 @@ protected void onUpdate(AjaxRequestTarget target) {\n         columnsRolesDer.add(new PropertyColumn(new Model(getString(\"name\")),\n                 \"name\", \"name\"));\n \n-        columnsRolesDer.add(new PropertyColumn(\n-                new Model(getString(\"expression\")),\n+        columnsRolesDer.add(new PropertyColumn(new Model(getString(\"expression\")),\n                 \"expression\", \"expression\"));\n \n-        columnsRolesDer.add(new PropertyColumn(\n-                new Model(getString(\"attributes\")),\n+        columnsRolesDer.add(new PropertyColumn(new Model(getString(\"attributes\")),\n                 \"derivedAttributes\", \"derivedAttributes\"));\n \n         columnsRolesDer.add(new AbstractColumn<DerivedSchemaTO>(\n                 new Model<String>(getString(\"edit\"))) {\n+            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n+                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n+            {\n+                    final DerivedSchemaTO schemaTO = model.getObject();\n \n-            public void populateItem(\n-                    Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n-                    String componentId, IModel<DerivedSchemaTO> model) {\n-\n-                final DerivedSchemaTO schemaTO = model.getObject();\n-\n-                AjaxLink editLink = new AjaxLink(\"editLink\") {\n+                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n-                        editRoleDerivedSchemaWin.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n+                        editRoleDerivedSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                                    public Page createPage() {\n-                                        DerivedSchemaModalPage form =\n-                                                new DerivedSchemaModalPage(\n-                                                Schema.this,\n-                                                editRoleDerivedSchemaWin,\n-                                                schemaTO, false);\n-                                        form.setEntity(\n-                                                DerivedSchemaModalPage.Entity.ROLE);\n-                                        return form;\n-                                    }\n-                                });\n+                        public Page createPage() {\n+                            DerivedSchemaModalPage form = new DerivedSchemaModalPage\n+                                    (Schema.this, editRoleDerivedSchemaWin, schemaTO, false);\n+                            form.setEntity(DerivedSchemaModalPage.Entity.ROLE);\n+                            return form;\n+                        }\n+                        });\n \n                         editRoleDerivedSchemaWin.show(target);\n                     }\n                 };\n \n                 EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                allowedReadRoles);\n+\n                 panel.add(editLink);\n \n                 cellItem.add(panel);\n             }\n         });\n \n-        columnsRolesDer.add(new AbstractColumn<DerivedSchemaTO>(\n-                new Model<String>(getString(\n-                \"delete\"))) {\n-\n-            public void populateItem(\n-                    Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n-                    String componentId, IModel<DerivedSchemaTO> model) {\n+        columnsRolesDer.add(new AbstractColumn<DerivedSchemaTO>(new Model<String>\n+                (getString(\"delete\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n+                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n+            {\n+                    final DerivedSchemaTO schemaTO = model.getObject();\n \n-                final DerivedSchemaTO schemaTO = model.getObject();\n-\n-                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n+                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -376,24 +371,24 @@ public void onClick(AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.\n-                                getAjaxCallDecorator()) {\n-\n+                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(\n-                                    CharSequence script) {\n-                                return \"if (confirm('\" + getString(\n-                                        \"confirmDelete\") + \"'))\"\n-                                        + \"{\" + script + \"}\";\n+                            public CharSequence preDecorateScript(CharSequence script) {\n+                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n+                                        +\"{\"+script+\"}\";\n                             }\n                         };\n                     }\n                 };\n \n \n                 DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                allowedDeleteRoles);\n+\n                 panel.add(deleteLink);\n \n                 cellItem.add(panel);\n@@ -409,22 +404,20 @@ public CharSequence preDecorateScript(\n         Form rolesDerPaginatorForm = new Form(\"RolesDerPaginatorForm\");\n \n         DropDownChoice rowsRolesDerChooser = new DropDownChoice(\"rowsChooser\",\n-                new PropertyModel(this, \"roleDerPageRows\"), utility.\n-                paginatorRowsChooser());\n+        new PropertyModel(this,\"roleDerPageRows\"),utility.paginatorRowsChooser());\n \n-        rowsRolesDerChooser.add(\n-                new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+        rowsRolesDerChooser.add(new AjaxFormComponentUpdatingBehavior( \"onchange\" ){\n+          protected void onUpdate( AjaxRequestTarget target )\n+            {\n+              utility.updatePaginatorRows(Constants.\n+                      CONF_ROLE_DER_SCHEMA_PAGINATOR_ROWS, rolePageRows);\n \n-                    protected void onUpdate(AjaxRequestTarget target) {\n-                        utility.updatePaginatorRows(\n-                                Constants.CONF_ROLE_DER_SCHEMA_PAGINATOR_ROWS,\n-                                rolePageRows);\n+              tableRolesDer.setRowsPerPage(roleDerPageRows);\n \n-                        tableRolesDer.setRowsPerPage(roleDerPageRows);\n+              target.addComponent(roleDerivedSchemasContainer);\n+            }\n \n-                        target.addComponent(roleDerivedSchemasContainer);\n-                    }\n-                });\n+          });\n \n         rolesDerPaginatorForm.add(rowsRolesDerChooser);\n         add(rolesDerPaginatorForm);\n@@ -441,52 +434,54 @@ protected void onUpdate(AjaxRequestTarget target) {\n                 \"attributes\", \"attributes\"));\n \n         userColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n-                getString(\"edit\"))) {\n-\n-            public void populateItem(Item<ICellPopulator<SchemaTO>> cellItem,\n-                    String componentId, IModel<SchemaTO> model) {\n+                getString(\"edit\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<SchemaTO>>\n+                    cellItem, String componentId, IModel<SchemaTO> model)\n+            {\n+                    final SchemaTO schemaTO = model.getObject();\n \n-                final SchemaTO schemaTO = model.getObject();\n-\n-                AjaxLink editLink = new AjaxLink(\"editLink\") {\n+                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n-                        editUserSchemaWin.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n+                        editUserSchemaWin.setPageCreator(new ModalWindow\n+                                .PageCreator() {\n \n-                                    public Page createPage() {\n-                                        SchemaModalPage form =\n-                                                new SchemaModalPage(\n-                                                Schema.this, editUserSchemaWin,\n-                                                schemaTO, false);\n-                                        form.setEntity(\n-                                                SchemaModalPage.Entity.USER);\n-                                        return form;\n-                                    }\n-                                });\n+                        public Page createPage() {\n+                            SchemaModalPage form = new SchemaModalPage(\n+                                    Schema.this, editUserSchemaWin, schemaTO,\n+                                    false);\n+                            form.setEntity(SchemaModalPage.Entity.USER);\n+                            return form;\n+                        }\n+                        });\n \n                         editUserSchemaWin.show(target);\n                     }\n                 };\n \n                 EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                allowedReadRoles);\n+\n                 panel.add(editLink);\n \n                 cellItem.add(panel);\n             }\n         });\n \n-        userColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n-                getString(\"delete\"))) {\n-\n-            public void populateItem(Item<ICellPopulator<SchemaTO>> cellItem,\n-                    String componentId, IModel<SchemaTO> model) {\n-\n-                final SchemaTO schemaTO = model.getObject();\n+        userColumns.add(new AbstractColumn<SchemaTO>(new Model<String>\n+                (getString(\"delete\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<SchemaTO>>\n+                    cellItem, String componentId, IModel<SchemaTO> model)\n+            {\n+                    final SchemaTO schemaTO = model.getObject();\n \n-                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n+                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -500,24 +495,24 @@ public void onClick(AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.\n-                                getAjaxCallDecorator()) {\n-\n+                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(\n-                                    CharSequence script) {\n-                                return \"if (confirm('\" + getString(\n-                                        \"confirmDelete\") + \"'))\"\n-                                        + \"{\" + script + \"}\";\n+                            public CharSequence preDecorateScript(CharSequence script) {\n+                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n+                                        +\"{\"+script+\"}\";\n                             }\n                         };\n                     }\n                 };\n \n \n                 DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                allowedDeleteRoles);\n+\n                 panel.add(deleteLink);\n \n                 cellItem.add(panel);\n@@ -527,29 +522,27 @@ public CharSequence preDecorateScript(\n \n         final AjaxFallbackDefaultDataTable tableUsers =\n                 new AjaxFallbackDefaultDataTable(\"datatable\", userColumns,\n-                new SchemaProvider(SourceMappingType.UserSchema),\n-                userSchemaPageRows);\n+                new SchemaProvider(SchemaType.UserSchema), userSchemaPageRows);\n \n \n         Form usersPaginatorForm = new Form(\"UsersPaginatorForm\");\n \n-        final DropDownChoice usersRowsChooser = new DropDownChoice(\n-                \"rowsChooser\",\n-                new PropertyModel(this, \"userSchemaPageRows\"),\n-                utility.paginatorRowsChooser());\n+        final DropDownChoice usersRowsChooser = new DropDownChoice(\"rowsChooser\",\n+               new PropertyModel(this,\"userSchemaPageRows\"),\n+               utility.paginatorRowsChooser());\n \n         usersRowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+          protected void onUpdate( AjaxRequestTarget target )\n+            {\n+              utility.updatePaginatorRows(Constants.CONF_USER_SCHEMA_PAGINATOR_ROWS,\n+                      userSchemaPageRows);\n \n-            protected void onUpdate(AjaxRequestTarget target) {\n-                utility.updatePaginatorRows(\n-                        Constants.CONF_USER_SCHEMA_PAGINATOR_ROWS,\n-                        userSchemaPageRows);\n+              tableUsers.setRowsPerPage(userSchemaPageRows);\n \n-                tableUsers.setRowsPerPage(userSchemaPageRows);\n-\n-                target.addComponent(userSchemaContainer);\n+              target.addComponent(userSchemaContainer);\n             }\n-        });\n+\n+          });\n \n         usersPaginatorForm.add(usersRowsChooser);\n         add(usersPaginatorForm);\n@@ -559,64 +552,60 @@ protected void onUpdate(AjaxRequestTarget target) {\n         columnsUsersDer.add(new PropertyColumn(new Model(getString(\"name\")),\n                 \"name\", \"name\"));\n \n-        columnsUsersDer.add(new PropertyColumn(\n-                new Model(getString(\"expression\")),\n+        columnsUsersDer.add(new PropertyColumn(new Model(getString(\"expression\")),\n                 \"expression\", \"expression\"));\n \n-        columnsUsersDer.add(new PropertyColumn(\n-                new Model(getString(\"attributes\")),\n+        columnsUsersDer.add(new PropertyColumn(new Model(getString(\"attributes\")),\n                 \"derivedAttributes\", \"derivedAttributes\"));\n \n         columnsUsersDer.add(new AbstractColumn<DerivedSchemaTO>(\n                 new Model<String>(getString(\"edit\"))) {\n+            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n+                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n+            {\n+                    final DerivedSchemaTO schemaTO = model.getObject();\n \n-            public void populateItem(\n-                    Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n-                    String componentId, IModel<DerivedSchemaTO> model) {\n-\n-                final DerivedSchemaTO schemaTO = model.getObject();\n-\n-                AjaxLink editLink = new AjaxLink(\"editLink\") {\n+                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n                         editUserDerivedSchemaWin.setPageCreator(\n                                 new ModalWindow.PageCreator() {\n \n-                                    public Page createPage() {\n-                                        DerivedSchemaModalPage window =\n-                                                new DerivedSchemaModalPage(\n-                                                Schema.this,\n-                                                editUserDerivedSchemaWin,\n-                                                schemaTO, false);\n-                                        window.setEntity(\n-                                                DerivedSchemaModalPage.Entity.USER);\n-                                        return window;\n-                                    }\n-                                });\n+                        public Page createPage() {\n+                            DerivedSchemaModalPage window = new DerivedSchemaModalPage\n+                                    (Schema.this, editUserDerivedSchemaWin,\n+                                    schemaTO, false);\n+                            window.setEntity(DerivedSchemaModalPage.Entity.USER);\n+                            return window;\n+                        }\n+                        });\n \n                         editUserDerivedSchemaWin.show(target);\n                     }\n                 };\n \n                 EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                allowedReadRoles);\n+\n                 panel.add(editLink);\n \n                 cellItem.add(panel);\n             }\n         });\n \n-        columnsUsersDer.add(new AbstractColumn<DerivedSchemaTO>(\n-                new Model<String>(getString(\"delete\"))) {\n-\n-            public void populateItem(\n-                    Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n-                    String componentId, IModel<DerivedSchemaTO> model) {\n+        columnsUsersDer.add(new AbstractColumn<DerivedSchemaTO>(new Model<String>\n+                (getString(\"delete\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n+                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n+            {\n+                    final DerivedSchemaTO schemaTO = model.getObject();\n \n-                final DerivedSchemaTO schemaTO = model.getObject();\n-\n-                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n+                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -630,23 +619,24 @@ public void onClick(AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.\n-                                getAjaxCallDecorator()) {\n-\n+                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n                             public CharSequence preDecorateScript(CharSequence script) {\n-                                return \"if (confirm('\" + getString(\n-                                        \"confirmDelete\") + \"'))\"\n-                                        + \"{\" + script + \"}\";\n+                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n+                                        +\"{\"+script+\"}\";\n                             }\n                         };\n                     }\n                 };\n \n \n                 DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                allowedDeleteRoles);\n+\n                 panel.add(deleteLink);\n \n                 cellItem.add(panel);\n@@ -662,77 +652,85 @@ public CharSequence preDecorateScript(CharSequence script) {\n \n         final DropDownChoice usersDerRowsChooser = new DropDownChoice(\n                 \"rowsChooser\",\n-                new PropertyModel(this, \"userDerSchemaPageRows\"),\n+                new PropertyModel(this,\"userDerSchemaPageRows\"),\n                 utility.paginatorRowsChooser());\n \n         usersDerRowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+          protected void onUpdate( AjaxRequestTarget target )\n+            {\n+              utility.updatePaginatorRows(Constants.CONF_USER_DER_SCHEMA_PAGINATOR_ROWS,\n+                      userDerSchemaPageRows);\n \n-            protected void onUpdate(AjaxRequestTarget target) {\n-                utility.updatePaginatorRows(\n-                        Constants.CONF_USER_DER_SCHEMA_PAGINATOR_ROWS,\n-                        userDerSchemaPageRows);\n-\n-                tableUsersDer.setRowsPerPage(userDerSchemaPageRows);\n+              tableUsersDer.setRowsPerPage(userDerSchemaPageRows);\n \n-                target.addComponent(userDerivedSchemaContainer);\n+              target.addComponent(userDerivedSchemaContainer);\n             }\n-        });\n+\n+          });\n \n         usersDerPaginatorForm.add(usersDerRowsChooser);\n         add(usersDerPaginatorForm);\n \n-        List<IColumn> membershipsColumns = new ArrayList<IColumn>();\n+       List<IColumn> membershipsColumns = new ArrayList<IColumn>();\n \n         membershipsColumns.add(new PropertyColumn(new Model(getString(\"name\")),\n                 \"name\", \"name\"));\n \n         membershipsColumns.add(new PropertyColumn(new Model(getString(\"type\")),\n                 \"type\", \"type\"));\n \n-        membershipsColumns.add(new PropertyColumn(new Model(getString(\n-                \"attributes\")),\n+        membershipsColumns.add(new PropertyColumn(new Model(getString(\"attributes\")),\n                 \"attributes\", \"attributes\"));\n \n         membershipsColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n-                getString(\"name\"))) {\n-\n-            public void populateItem(Item<ICellPopulator<SchemaTO>> cellItem, String componentId, IModel<SchemaTO> model) {\n-                final SchemaTO schemaTO = model.getObject();\n+                getString(\"name\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<SchemaTO>>\n+                    cellItem, String componentId, IModel<SchemaTO> model)\n+            {\n+                    final SchemaTO schemaTO = model.getObject();\n \n-                AjaxLink editLink = new AjaxLink(\"editLink\") {\n+                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n-                        editMembershipSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n+                        editMembershipSchemaWin.setPageCreator(new ModalWindow\n+                                .PageCreator() {\n \n-                            public Page createPage() {\n-                                SchemaModalPage form = new SchemaModalPage(\n-                                        Schema.this, editMembershipSchemaWin,\n-                                        schemaTO, false);\n-                                form.setEntity(SchemaModalPage.Entity.MEMBERSHIP);\n-                                return form;\n-                            }\n+                        public Page createPage() {\n+                            SchemaModalPage form = new SchemaModalPage(\n+                                    Schema.this, editMembershipSchemaWin,\n+                                    schemaTO, false);\n+                            form.setEntity(SchemaModalPage.Entity.MEMBERSHIP);\n+                            return form;\n+                        }\n                         });\n \n                         editMembershipSchemaWin.show(target);\n                     }\n                 };\n \n                 EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                allowedReadRoles);\n+\n                 panel.add(editLink);\n \n                 cellItem.add(panel);\n             }\n         });\n \n-        membershipsColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(getString(\n-                \"delete\"))) {\n-\n-            public void populateItem(Item<ICellPopulator<SchemaTO>> cellItem, String componentId, IModel<SchemaTO> model) {\n-                final SchemaTO schemaTO = model.getObject();\n+        membershipsColumns.add(new AbstractColumn<SchemaTO>(new Model<String>\n+                (getString(\"delete\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<SchemaTO>>\n+                    cellItem, String componentId, IModel<SchemaTO> model)\n+            {\n+                    final SchemaTO schemaTO = model.getObject();\n \n-                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n+                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -746,22 +744,23 @@ public void onClick(AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.\n-                                getAjaxCallDecorator()) {\n-\n+                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n                             public CharSequence preDecorateScript(CharSequence script) {\n-                                return \"if (confirm('\" + getString(\n-                                        \"confirmDelete\") + \"'))\"\n-                                        + \"{\" + script + \"}\";\n+                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n+                                        +\"{\"+script+\"}\";\n                             }\n                         };\n                     }\n                 };\n \n                 DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                allowedDeleteRoles);\n+\n                 panel.add(deleteLink);\n \n                 cellItem.add(panel);\n@@ -771,90 +770,91 @@ public CharSequence preDecorateScript(CharSequence script) {\n \n         final AjaxFallbackDefaultDataTable tableMemberships =\n                 new AjaxFallbackDefaultDataTable(\"datatable\", membershipsColumns,\n-                new SchemaProvider(SourceMappingType.MembershipSchema),\n+                new SchemaProvider(SchemaType.MembershipSchema),\n                 membershipPageRows);\n \n-        Form membershipPaginatorForm = new Form(\"MembershipPaginatorForm\");\n+       Form membershipPaginatorForm = new Form(\"MembershipPaginatorForm\");\n \n         final DropDownChoice membershipRowsChooser = new DropDownChoice(\n                 \"rowsChooser\",\n-                new PropertyModel(this, \"membershipPageRows\"),\n+                new PropertyModel(this,\"membershipPageRows\"),\n                 utility.paginatorRowsChooser());\n \n-        membershipRowsChooser.add(new AjaxFormComponentUpdatingBehavior(\n-                \"onchange\") {\n-\n-            protected void onUpdate(AjaxRequestTarget target) {\n-                utility.updatePaginatorRows(\n-                        Constants.CONF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS,\n-                        membershipPageRows);\n+        membershipRowsChooser.add(new AjaxFormComponentUpdatingBehavior\n+                (\"onchange\") { protected void onUpdate\n+                        ( AjaxRequestTarget target ) {\n+              utility.updatePaginatorRows(\n+                      Constants.CONF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS,\n+                      membershipPageRows);\n \n-                tableMemberships.setRowsPerPage(membershipPageRows);\n+              tableMemberships.setRowsPerPage(membershipPageRows);\n \n-                target.addComponent(membershipSchemaContainer);\n+              target.addComponent(membershipSchemaContainer);\n             }\n-        });\n+\n+          });\n \n         membershipPaginatorForm.add(membershipRowsChooser);\n         add(membershipPaginatorForm);\n \n         List<IColumn> columnsMembershipsDer = new ArrayList<IColumn>();\n \n-        columnsMembershipsDer.add(new PropertyColumn(\n-                new Model(getString(\"name\")),\n+        columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\"name\")),\n                 \"name\", \"name\"));\n \n-        columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\n-                \"expression\")),\n+        columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\"expression\")),\n                 \"expression\", \"expression\"));\n \n-        columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\n-                \"attributes\")),\n+        columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\"attributes\")),\n                 \"derivedAttributes\", \"derivedAttributes\"));\n \n         columnsMembershipsDer.add(new AbstractColumn<DerivedSchemaTO>(\n                 new Model<String>(getString(\"edit\"))) {\n+            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n+                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n+            {\n+                    final DerivedSchemaTO schemaTO = model.getObject();\n \n-            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>> cellItem, String componentId, IModel<DerivedSchemaTO> model) {\n-                final DerivedSchemaTO schemaTO = model.getObject();\n-\n-                AjaxLink editLink = new AjaxLink(\"editLink\") {\n+                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n                         editMembershipDerivedSchemaWin.setPageCreator(\n                                 new ModalWindow.PageCreator() {\n \n-                                    public Page createPage() {\n-                                        DerivedSchemaModalPage window = new DerivedSchemaModalPage(\n-                                                Schema.this,\n-                                                editMembershipDerivedSchemaWin,\n-                                                schemaTO, false);\n-                                        window.setEntity(\n-                                                DerivedSchemaModalPage.Entity.MEMBERSHIP);\n-                                        return window;\n-                                    }\n-                                });\n+                        public Page createPage() {\n+                            DerivedSchemaModalPage window = new DerivedSchemaModalPage\n+                                    (Schema.this, editMembershipDerivedSchemaWin, schemaTO, false);\n+                            window.setEntity(DerivedSchemaModalPage.Entity.MEMBERSHIP);\n+                            return window;\n+                        }\n+                        });\n \n                         editMembershipDerivedSchemaWin.show(target);\n                     }\n                 };\n \n                 EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                allowedReadRoles);\n+\n                 panel.add(editLink);\n \n                 cellItem.add(panel);\n             }\n         });\n \n-        columnsMembershipsDer.add(new AbstractColumn<DerivedSchemaTO>(new Model<String>(getString(\n-                \"delete\"))) {\n-\n-            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>> cellItem, String componentId, IModel<DerivedSchemaTO> model) {\n-                final DerivedSchemaTO schemaTO = model.getObject();\n+        columnsMembershipsDer.add(new AbstractColumn<DerivedSchemaTO>(new Model<String>\n+                (getString(\"delete\")))\n+        {\n+            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n+                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n+            {\n+                    final DerivedSchemaTO schemaTO = model.getObject();\n \n-                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n+                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -869,56 +869,55 @@ public void onClick(AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.\n-                                getAjaxCallDecorator()) {\n-\n+                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n                             public CharSequence preDecorateScript(CharSequence script) {\n-                                return \"if (confirm('\" + getString(\n-                                        \"confirmDelete\") + \"'))\"\n-                                        + \"{\" + script + \"}\";\n+                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n+                                        +\"{\"+script+\"}\";\n                             }\n                         };\n                     }\n                 };\n \n \n                 DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n+\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                allowedDeleteRoles);\n+\n                 panel.add(deleteLink);\n \n                 cellItem.add(panel);\n             }\n         });\n \n         final AjaxFallbackDefaultDataTable tableMembershipsDer =\n-                new AjaxFallbackDefaultDataTable(\"datatable\",\n-                columnsMembershipsDer,\n-                new DerivedSchemaProvider(\n-                SchemaDerivedType.MembershipDerivedSchema),\n+                new AjaxFallbackDefaultDataTable(\"datatable\", columnsMembershipsDer,\n+                new DerivedSchemaProvider(SchemaDerivedType.MembershipDerivedSchema),\n                 membershipDerPageRows);\n \n         Form membershipDerPaginatorForm = new Form(\"MembershipDerPaginatorForm\");\n \n         final DropDownChoice membershipDerRowsChooser = new DropDownChoice(\n                 \"rowsChooser\",\n-                new PropertyModel(this, \"membershipDerPageRows\"),\n+                new PropertyModel(this,\"membershipDerPageRows\"),\n                 utility.paginatorRowsChooser());\n \n-        membershipDerRowsChooser.add(new AjaxFormComponentUpdatingBehavior(\n-                \"onchange\") {\n+        membershipDerRowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+          protected void onUpdate( AjaxRequestTarget target )\n+            {\n+              utility.updatePaginatorRows(\n+                      Constants.CONF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS,\n+                      membershipDerPageRows);\n \n-            protected void onUpdate(AjaxRequestTarget target) {\n-                utility.updatePaginatorRows(\n-                        Constants.CONF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS,\n-                        membershipDerPageRows);\n+              tableMembershipsDer.setRowsPerPage(membershipDerPageRows);\n \n-                tableMembershipsDer.setRowsPerPage(membershipDerPageRows);\n-\n-                target.addComponent(membershipDerivedSchemaContainer);\n+              target.addComponent(membershipDerivedSchemaContainer);\n             }\n-        });\n+\n+          });\n \n         membershipDerPaginatorForm.add(membershipDerRowsChooser);\n         add(membershipDerPaginatorForm);\n@@ -927,30 +926,26 @@ protected void onUpdate(AjaxRequestTarget target) {\n         roleSchemasContainer.add(tableRoles);\n         roleSchemasContainer.setOutputMarkupId(true);\n \n-        roleDerivedSchemasContainer = new WebMarkupContainer(\n-                \"roleDerivedSchemasContainer\");\n+        roleDerivedSchemasContainer = new WebMarkupContainer(\"roleDerivedSchemasContainer\");\n         roleDerivedSchemasContainer.add(tableRolesDer);\n         roleDerivedSchemasContainer.setOutputMarkupId(true);\n \n         userSchemaContainer = new WebMarkupContainer(\"userSchemaContainer\");\n         userSchemaContainer.add(tableUsers);\n         userSchemaContainer.setOutputMarkupId(true);\n \n-        userDerivedSchemaContainer = new WebMarkupContainer(\n-                \"userDerivedSchemaContainer\");\n+        userDerivedSchemaContainer = new WebMarkupContainer(\"userDerivedSchemaContainer\");\n         userDerivedSchemaContainer.add(tableUsersDer);\n         userDerivedSchemaContainer.setOutputMarkupId(true);\n \n-        membershipSchemaContainer = new WebMarkupContainer(\n-                \"membershipSchemaContainer\");\n+        membershipSchemaContainer = new WebMarkupContainer(\"membershipSchemaContainer\");\n         membershipSchemaContainer.add(tableMemberships);\n         membershipSchemaContainer.setOutputMarkupId(true);\n \n-        membershipDerivedSchemaContainer = new WebMarkupContainer(\n-                \"membershipDerivedSchemaContainer\");\n+        membershipDerivedSchemaContainer = new WebMarkupContainer(\"membershipDerivedSchemaContainer\");\n         membershipDerivedSchemaContainer.add(tableMembershipsDer);\n         membershipDerivedSchemaContainer.setOutputMarkupId(true);\n-\n+        \n         add(roleSchemasContainer);\n         add(roleDerivedSchemasContainer);\n \n@@ -975,19 +970,19 @@ protected void onUpdate(AjaxRequestTarget target) {\n         editUserDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         editUserDerivedSchemaWin.setPageMapName(\"modal-4\");\n         editUserDerivedSchemaWin.setCookieName(\"modal-4\");\n-\n+        \n         createRoleSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         createRoleSchemaWin.setPageMapName(\"modal-5\");\n         createRoleSchemaWin.setCookieName(\"modal-5\");\n-\n+        \n         editRoleSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         editRoleSchemaWin.setPageMapName(\"modal-6\");\n         editRoleSchemaWin.setCookieName(\"modal-6\");\n-\n+        \n         createRoleDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         createRoleDerivedSchemaWin.setPageMapName(\"modal-7\");\n         createRoleDerivedSchemaWin.setCookieName(\"modal-7\");\n-\n+        \n         editRoleDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         editRoleDerivedSchemaWin.setPageMapName(\"modal-8\");\n         editRoleDerivedSchemaWin.setCookieName(\"modal-8\");\n@@ -1000,43 +995,33 @@ protected void onUpdate(AjaxRequestTarget target) {\n         createMembershipSchemaWin.setPageMapName(\"modal-10\");\n         createMembershipSchemaWin.setCookieName(\"modal-10\");\n \n-        createMembershipDerivedSchemaWin.setCssClassName(\n-                ModalWindow.CSS_CLASS_GRAY);\n+        createMembershipDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         createMembershipDerivedSchemaWin.setPageMapName(\"modal-11\");\n         createMembershipDerivedSchemaWin.setCookieName(\"modal-11\");\n \n-        editMembershipDerivedSchemaWin.setCssClassName(\n-                ModalWindow.CSS_CLASS_GRAY);\n+        editMembershipDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         editMembershipDerivedSchemaWin.setPageMapName(\"modal-12\");\n         editMembershipDerivedSchemaWin.setCookieName(\"modal-12\");\n \n         setWindowClosedCallback(createUserSchemaWin, userSchemaContainer);\n         setWindowClosedCallback(editUserSchemaWin, userSchemaContainer);\n \n-        setWindowClosedCallback(createUserDerivedSchemaWin,\n-                userDerivedSchemaContainer);\n-        setWindowClosedCallback(editUserDerivedSchemaWin,\n-                userDerivedSchemaContainer);\n+        setWindowClosedCallback(createUserDerivedSchemaWin, userDerivedSchemaContainer);\n+        setWindowClosedCallback(editUserDerivedSchemaWin, userDerivedSchemaContainer);\n \n         setWindowClosedCallback(createRoleSchemaWin, roleSchemasContainer);\n         setWindowClosedCallback(editRoleSchemaWin, roleSchemasContainer);\n \n-        setWindowClosedCallback(createRoleDerivedSchemaWin,\n-                roleDerivedSchemasContainer);\n-        setWindowClosedCallback(editRoleDerivedSchemaWin,\n-                roleDerivedSchemasContainer);\n+        setWindowClosedCallback(createRoleDerivedSchemaWin, roleDerivedSchemasContainer);\n+        setWindowClosedCallback(editRoleDerivedSchemaWin, roleDerivedSchemasContainer);\n \n-        setWindowClosedCallback(createMembershipSchemaWin,\n-                membershipSchemaContainer);\n-        setWindowClosedCallback(editMembershipSchemaWin,\n-                membershipSchemaContainer);\n+        setWindowClosedCallback(createMembershipSchemaWin, membershipSchemaContainer);\n+        setWindowClosedCallback(editMembershipSchemaWin, membershipSchemaContainer);\n \n-        setWindowClosedCallback(createMembershipDerivedSchemaWin,\n-                membershipDerivedSchemaContainer);\n-        setWindowClosedCallback(editMembershipDerivedSchemaWin,\n-                membershipDerivedSchemaContainer);\n+        setWindowClosedCallback(createMembershipDerivedSchemaWin, membershipDerivedSchemaContainer);\n+        setWindowClosedCallback(editMembershipDerivedSchemaWin, membershipDerivedSchemaContainer);\n \n-        add(new AjaxLink(\"createRoleSchemaWinLink\") {\n+        AjaxLink createRoleSchemaWinLink = new AjaxLink(\"createRoleSchemaWinLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n@@ -1045,39 +1030,47 @@ public void onClick(AjaxRequestTarget target) {\n \n                     public Page createPage() {\n                         SchemaModalPage form = new SchemaModalPage(Schema.this,\n-                                new ModalWindow(\"createRoleSchemaWin\"), null,\n-                                true);\n+                                new ModalWindow(\"createRoleSchemaWin\"), null, true);\n                         form.setEntity(SchemaModalPage.Entity.ROLE);\n                         return form;\n                     }\n                 });\n \n                 createRoleSchemaWin.show(target);\n             }\n-        });\n+        };\n \n-        add(new AjaxLink(\"createRoleDerivedSchemaWinLink\") {\n+        MetaDataRoleAuthorizationStrategy.authorize(createRoleSchemaWinLink, ENABLE,\n+        allowedCreateRoles);\n+        \n+        add(createRoleSchemaWinLink);\n+\n+        \n+       AjaxLink createRoleDerivedSchemaWinLink = new AjaxLink(\"createRoleDerivedSchemaWinLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n \n                 createRoleDerivedSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n \n                     public Page createPage() {\n-                        DerivedSchemaModalPage form = new DerivedSchemaModalPage(\n-                                Schema.this,\n-                                new ModalWindow(\"createRoleDerivedSchemaWin\"),\n-                                null, true);\n+                        DerivedSchemaModalPage form = new DerivedSchemaModalPage(Schema.this,\n+                                new ModalWindow(\"createRoleDerivedSchemaWin\"), null, true);\n                         form.setEntity(DerivedSchemaModalPage.Entity.ROLE);\n                         return form;\n                     }\n                 });\n \n                 createRoleDerivedSchemaWin.show(target);\n             }\n-        });\n+        };\n+        \n+        MetaDataRoleAuthorizationStrategy.authorize(createRoleDerivedSchemaWinLink, ENABLE, \n+        allowedCreateRoles);\n+        \n+        add(createRoleDerivedSchemaWinLink);\n \n-        add(new AjaxLink(\"createUserSchemaWinLink\") {\n+        AjaxLink createUserSchemaWinLink = new AjaxLink(\"createUserSchemaWinLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n@@ -1086,40 +1079,49 @@ public void onClick(AjaxRequestTarget target) {\n \n                     public Page createPage() {\n                         SchemaModalPage form = new SchemaModalPage(Schema.this,\n-                                new ModalWindow(\"createUserSchemaWin\"), null,\n-                                true);\n+                                new ModalWindow(\"createUserSchemaWin\"), null, true);\n                         form.setEntity(SchemaModalPage.Entity.USER);\n                         return form;\n                     }\n                 });\n \n                 createUserSchemaWin.show(target);\n             }\n-        });\n+        };\n+        \n+        add(createUserSchemaWinLink);\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(createUserSchemaWinLink, ENABLE,\n+        allowedCreateRoles);\n \n-        add(new AjaxLink(\"createUserDerSchemaWinLink\") {\n+        AjaxLink createUserDerSchemaWinLink = new AjaxLink(\"createUserDerSchemaWinLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n \n-                createUserDerivedSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n+            createUserDerivedSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                    public Page createPage() {\n-                        DerivedSchemaModalPage form = new DerivedSchemaModalPage(\n-                                Schema.this,\n-                                new ModalWindow(\"createUserDerSchemaModalWin\"),\n-                                null, true);\n-                        form.setEntity(DerivedSchemaModalPage.Entity.USER);\n+            public Page createPage() {\n+                DerivedSchemaModalPage form = new DerivedSchemaModalPage(Schema.this,\n+                        new ModalWindow(\"createUserDerSchemaModalWin\"), null, true);\n+                form.setEntity(DerivedSchemaModalPage.Entity.USER);\n \n-                        return form;\n-                    }\n-                });\n+                return form;\n+            }\n+            });\n \n-                createUserDerivedSchemaWin.show(target);\n+            createUserDerivedSchemaWin.show(target);\n             }\n-        });\n+        };\n+        \n+        MetaDataRoleAuthorizationStrategy.authorize(createUserDerSchemaWinLink, \n+                ENABLE, allowedCreateRoles);\n+        \n+        add(createUserDerSchemaWinLink);\n \n-        add(new AjaxLink(\"createMembershipSchemaWinLink\") {\n+        \n+        AjaxLink createMembershipSchemaWinLink = new AjaxLink(\n+            \"createMembershipSchemaWinLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n@@ -1128,40 +1130,47 @@ public void onClick(AjaxRequestTarget target) {\n \n                     public Page createPage() {\n                         SchemaModalPage form = new SchemaModalPage(Schema.this,\n-                                new ModalWindow(\"createMembershipSchemaModalWin\"),\n-                                null, true);\n+                                new ModalWindow(\"createMembershipSchemaModalWin\"), null, true);\n                         form.setEntity(SchemaModalPage.Entity.MEMBERSHIP);\n                         return form;\n                     }\n                 });\n \n                 createMembershipSchemaWin.show(target);\n             }\n-        });\n+        };\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(createMembershipSchemaWinLink,\n+                ENABLE, allowedCreateRoles);\n \n-        add(new AjaxLink(\"createMembershipDerSchemaWinLink\") {\n+        add(createMembershipSchemaWinLink);\n+\n+        AjaxLink createMembershipDerSchemaWinLink = new AjaxLink(\n+                \"createMembershipDerSchemaWinLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n \n-                createMembershipDerivedSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n+            createMembershipDerivedSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                    public Page createPage() {\n-                        DerivedSchemaModalPage form = new DerivedSchemaModalPage(\n-                                Schema.this,\n-                                new ModalWindow(\n-                                \"createMembershipDerivedSchemaWin\"),\n-                                null, true);\n-                        form.setEntity(DerivedSchemaModalPage.Entity.MEMBERSHIP);\n+            public Page createPage() {\n+                DerivedSchemaModalPage form = new DerivedSchemaModalPage(Schema.this,\n+                        new ModalWindow(\"createMembershipDerivedSchemaWin\"),\n+                        null, true);\n+                form.setEntity(DerivedSchemaModalPage.Entity.MEMBERSHIP);\n \n-                        return form;\n-                    }\n-                });\n+                return form;\n+            }\n+            });\n \n-                createMembershipDerivedSchemaWin.show(target);\n+            createMembershipDerivedSchemaWin.show(target);\n             }\n-        });\n+        };\n \n+        MetaDataRoleAuthorizationStrategy.authorize(createMembershipDerSchemaWinLink,\n+                ENABLE, allowedCreateRoles);\n+        \n+        add(createMembershipDerSchemaWinLink);\n     }\n \n     /**\n@@ -1173,17 +1182,16 @@ public void setWindowClosedCallback(ModalWindow window,\n             final WebMarkupContainer container) {\n \n         window.setWindowClosedCallback(\n-                new ModalWindow.WindowClosedCallback() {\n-\n-                    public void onClose(AjaxRequestTarget target) {\n-                        target.addComponent(container);\n-                        if (operationResult) {\n-                            info(getString(\"operation_succeded\"));\n-                            target.addComponent(feedbackPanel);\n-                            operationResult = false;\n-                        }\n+            new ModalWindow.WindowClosedCallback() {\n+                public void onClose(AjaxRequestTarget target) {\n+                    target.addComponent(container);\n+                    if(operationResult){\n+                        info(getString(\"operation_succeded\"));  \n+                        target.addComponent(feedbackPanel);\n+                        operationResult = false;\n                     }\n-                });\n+                }\n+            });\n     }\n \n     public boolean isOperationResult() {\n@@ -1199,14 +1207,14 @@ class SchemaProvider extends SortableDataProvider<SchemaTO> {\n         private SortableDataProviderComparator comparator =\n                 new SortableDataProviderComparator();\n \n-        private SourceMappingType schema;\n+        private SchemaType schema;\n \n-        public SchemaProvider(SourceMappingType schema) {\n+        public SchemaProvider(SchemaType schema) {\n \n             this.schema = schema;\n \n             //Default sorting\n-            setSort(\"name\", true);\n+            setSort(\"name\",true);\n         }\n \n         @Override\n@@ -1215,7 +1223,7 @@ public Iterator<SchemaTO> iterator(int first, int count) {\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first + count).iterator();\n+            return list.subList(first, first+count).iterator();\n         }\n \n         @Override\n@@ -1224,7 +1232,8 @@ public int size() {\n         }\n \n         @Override\n-        public IModel<SchemaTO> model(final SchemaTO user) {\n+        public IModel<SchemaTO> model(final SchemaTO\n+                user) {\n             return new AbstractReadOnlyModel<SchemaTO>() {\n \n                 @Override\n@@ -1234,51 +1243,48 @@ public SchemaTO getObject() {\n             };\n         }\n \n-        public List<SchemaTO> getAttributesSchemaListDB() {\n+        public List<SchemaTO> getAttributesSchemaListDB(){\n \n             List<SchemaTO> list = null;\n \n-            if (schema == SourceMappingType.RoleSchema) {\n+            if(schema == SchemaType.RoleSchema)\n                 list = restClient.getAllRoleSchemas();\n-            } else if (schema == SourceMappingType.UserSchema) {\n+            else if (schema == SchemaType.UserSchema)\n                 list = restClient.getAllUserSchemas();\n-            } else if (schema == SourceMappingType.MembershipSchema) {\n+            else if (schema == SchemaType.MembershipSchema)\n                 list = restClient.getAllMemberhipSchemas();\n-            }\n \n             return list;\n         }\n \n         class SortableDataProviderComparator implements\n                 Comparator<SchemaTO>, Serializable {\n-\n             public int compare(final SchemaTO o1,\n                     final SchemaTO o2) {\n-                PropertyModel<Comparable> model1 =\n-                        new PropertyModel<Comparable>(o1,\n-                        getSort().getProperty());\n-                PropertyModel<Comparable> model2 =\n-                        new PropertyModel<Comparable>(o2,\n-                        getSort().getProperty());\n-\n-                int result = 1;\n-\n-                if (model1.getObject() == null && model2.getObject() == null) {\n-                    result = 0;\n-                } else if (model1.getObject() == null) {\n-                    result = 1;\n-                } else if (model2.getObject() == null) {\n-                    result = -1;\n-                } else {\n-                    result = ((Comparable) model1.getObject()).compareTo(\n-                            model2.getObject());\n-                }\n-\n-                result = getSort().isAscending() ? result : -result;\n-\n-                return result;\n+                    PropertyModel<Comparable> model1 =\n+                            new PropertyModel<Comparable>(o1, getSort()\n+                            .getProperty());\n+                    PropertyModel<Comparable> model2 =\n+                            new PropertyModel<Comparable>(o2, getSort()\n+                            .getProperty());\n+\n+                    int result = 1;\n+\n+                    if(model1.getObject() == null && model2.getObject() == null)\n+                        result = 0;\n+                    else if(model1.getObject() == null)\n+                        result = 1;\n+                    else if(model2.getObject() == null)\n+                        result = -1;\n+                    else\n+                        result = ((Comparable)model1.getObject()).compareTo(\n+                                model2.getObject());\n+\n+                    result = getSort().isAscending() ? result : -result;\n+\n+                    return result;\n             }\n-        }\n+\t}\n     }\n \n     class DerivedSchemaProvider extends SortableDataProvider<DerivedSchemaTO> {\n@@ -1293,7 +1299,7 @@ public DerivedSchemaProvider(SchemaDerivedType schema) {\n             this.schema = schema;\n \n             //Default sorting\n-            setSort(\"name\", true);\n+            setSort(\"name\",true);\n         }\n \n         @Override\n@@ -1302,7 +1308,7 @@ public Iterator<DerivedSchemaTO> iterator(int first, int count) {\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first + count).iterator();\n+            return list.subList(first, first+count).iterator();\n         }\n \n         @Override\n@@ -1311,7 +1317,8 @@ public int size() {\n         }\n \n         @Override\n-        public IModel<DerivedSchemaTO> model(final DerivedSchemaTO schema) {\n+        public IModel<DerivedSchemaTO> model(final DerivedSchemaTO\n+                schema) {\n             return new AbstractReadOnlyModel<DerivedSchemaTO>() {\n \n                 @Override\n@@ -1321,50 +1328,47 @@ public DerivedSchemaTO getObject() {\n             };\n         }\n \n-        public List<DerivedSchemaTO> getAttributesSchemaListDB() {\n+        public List<DerivedSchemaTO> getAttributesSchemaListDB(){\n \n-            List<DerivedSchemaTO> list = null;\n+        List<DerivedSchemaTO> list = null;\n \n-            if (schema == SchemaDerivedType.RoleDerivedSchema) {\n-                list = restClient.getAllRoleDerivedSchemas();\n-            } else if (schema == SchemaDerivedType.UserDerivedSchema) {\n-                list = restClient.getAllUserDerivedSchemas();\n-            } else if (schema == SchemaDerivedType.MembershipDerivedSchema) {\n-                list = restClient.getAllMembershipDerivedSchemas();\n-            }\n+        if(schema == SchemaDerivedType.RoleDerivedSchema)\n+            list = restClient.getAllRoleDerivedSchemas();\n+        else if (schema == SchemaDerivedType.UserDerivedSchema)\n+            list = restClient.getAllUserDerivedSchemas();\n+        else if (schema == SchemaDerivedType.MembershipDerivedSchema)\n+            list = restClient.getAllMembershipDerivedSchemas();\n \n-            return list;\n+        return list;\n         }\n \n         class SortableDataProviderComparator implements\n                 Comparator<DerivedSchemaTO>, Serializable {\n-\n             public int compare(final DerivedSchemaTO o1,\n                     final DerivedSchemaTO o2) {\n-                PropertyModel<Comparable> model1 =\n-                        new PropertyModel<Comparable>(o1,\n-                        getSort().getProperty());\n-                PropertyModel<Comparable> model2 =\n-                        new PropertyModel<Comparable>(o2,\n-                        getSort().getProperty());\n-\n-                int result = 1;\n-\n-                if (model1.getObject() == null && model2.getObject() == null) {\n-                    result = 0;\n-                } else if (model1.getObject() == null) {\n-                    result = 1;\n-                } else if (model2.getObject() == null) {\n-                    result = -1;\n-                } else {\n-                    result = ((Comparable) model1.getObject()).compareTo(\n-                            model2.getObject());\n-                }\n-\n-                result = getSort().isAscending() ? result : -result;\n-\n-                return result;\n+                    PropertyModel<Comparable> model1 =\n+                            new PropertyModel<Comparable>(o1, getSort()\n+                            .getProperty());\n+                    PropertyModel<Comparable> model2 =\n+                            new PropertyModel<Comparable>(o2, getSort()\n+                            .getProperty());\n+\n+                    int result = 1;\n+\n+                    if(model1.getObject() == null && model2.getObject() == null)\n+                        result = 0;\n+                    else if(model1.getObject() == null)\n+                        result = 1;\n+                    else if(model2.getObject() == null)\n+                        result = -1;\n+                    else\n+                        result = ((Comparable)model1.getObject()).compareTo(\n+                                model2.getObject());\n+\n+                    result = getSort().isAscending() ? result : -result;\n+\n+                    return result;\n             }\n-        }\n+\t}\n     }\n-}\n+}\n\\ No newline at end of file"},{"sha":"d12714aebc34478998605796d6ccb771b340f6f5","filename":"console/src/main/java/org/syncope/console/pages/SchemaModalPage.java","status":"modified","additions":16,"deletions":2,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -39,7 +39,9 @@\n import org.syncope.console.rest.SchemaRestClient;\n import org.syncope.types.SchemaType;\n \n-\n+import org.apache.wicket.authorization.strategies.role.metadata\n+        .MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n /**\n  * Modal window with Schema form.\n  */\n@@ -129,7 +131,7 @@ else if (\"false\".startsWith(input.toLowerCase()))\n \n         readonly = new RadioChoice(\"readonly\",Arrays.asList(new Boolean[]{true,false}));\n \n-        submit = new AjaxButton(\"submit\", new Model(getString(\"submit\"))) {\n+        submit = new IndicatingAjaxButton(\"submit\", new Model(getString(\"submit\"))) {\n \n             @Override\n             protected void onSubmit(AjaxRequestTarget target, Form form) {\n@@ -179,6 +181,18 @@ protected void onError(AjaxRequestTarget target, Form form) {\n             \n         };\n \n+        String allowedRoles;\n+\n+        if(createFlag)\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\",\n+                    \"create\");\n+        else\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\",\n+                    \"update\");\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE,\n+                        allowedRoles);\n+\n         schemaForm.add(new FeedbackPanel(\"feedback\").setOutputMarkupId( true ));\n         \n         schemaForm.add(name);"},{"sha":"242a6afdfabfb3e40038dff1bcb67637730f3bb9","filename":"console/src/main/java/org/syncope/console/pages/SyncopeModalPage.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncopeModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncopeModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncopeModalPage.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -16,10 +16,15 @@\n package org.syncope.console.pages;\n \n import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.syncope.console.commons.XMLRolesReader;\n \n /**\n  * Syncope Modal Window.\n  */\n public class SyncopeModalPage extends WebPage {\n \n+    @SpringBean(name = \"xmlRolesReader\")\n+    protected XMLRolesReader xmlRolesReader;\n+\n }"},{"sha":"0bc466f26d298bfed36efe20d153bf61994a664f","filename":"console/src/main/java/org/syncope/console/pages/TaskModalPage.java","status":"modified","additions":31,"deletions":2,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -25,7 +25,11 @@\n import java.util.List;\n import org.apache.wicket.Application;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.IAjaxCallDecorator;\n+import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.authorization.strategies.role.metadata\n+        .MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.datetime.DateConverter;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table\n@@ -138,7 +142,8 @@ public void onClick(AjaxRequestTarget target) {\n \n                        target.addComponent(dialogContent);\n \n-                       target.appendJavascript(\"jQuery('#dialog').dialog('open')\");\n+                       target.appendJavascript(\"jQuery('#dialog')\" +\n+                               \".dialog('open')\");\n                     }\n                 };\n \n@@ -179,12 +184,36 @@ public void onClick(AjaxRequestTarget target) {\n                         target.addComponent(form.get(\"feedback\"));\n                         target.addComponent(container);\n                     }\n+\n+                   @Override\n+                    protected IAjaxCallDecorator getAjaxCallDecorator() {\n+                        return new AjaxPreprocessingCallDecorator(super\n+                                .getAjaxCallDecorator()) {\n+                            private static final long serialVersionUID = 1L;\n+\n+                            @Override\n+                            public CharSequence preDecorateScript(\n+                                    CharSequence script) {\n+                                return \"if (confirm('\"+\n+                                        getString(\"confirmDelete\")+\"'))\"\n+                                        +\"{\"+script+\"}\";\n+                            }\n+                        };\n+                    }\n                  };\n                     DeleteLinkPanel panel = new DeleteLinkPanel(componentId,\n                             model);\n                     panel.add(deleteLink);\n \n-                    cellItem.add(panel);\n+                 String allowedRoles = null;\n+\n+                 allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Tasks\",\n+                         \"delete\");\n+\n+                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                 allowedRoles);\n+\n+                 cellItem.add(panel);\n             }\n         });\n "},{"sha":"8a268b621c47a0da633259e6656ddd38433aa69e","filename":"console/src/main/java/org/syncope/console/pages/Tasks.java","status":"modified","additions":45,"deletions":15,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -19,7 +19,6 @@\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Comparator;\n-import java.util.Date;\n import java.util.Iterator;\n import java.util.List;\n import org.apache.wicket.Page;\n@@ -29,8 +28,10 @@\n import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table\n+        .AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n@@ -47,16 +48,15 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.syncope.client.to.TaskExecutionTO;\n import org.syncope.client.to.TaskTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.Utility;\n+import org.syncope.console.commons.XMLRolesReader;\n import org.syncope.console.rest.TasksRestClient;\n import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n import org.syncope.console.wicket.markup.html.form.EditLinkPanel;\n import org.syncope.console.wicket.markup.html.form.LinkPanel;\n-import org.syncope.types.TaskExecutionStatus;\n \n /**\n  * Tasks page.\n@@ -69,6 +69,9 @@ public class Tasks extends BasePage {\n     @SpringBean(name = \"utility\")\n     Utility utility;\n \n+    @SpringBean(name = \"xmlRolesReader\")\n+    XMLRolesReader xmlRolesReader;\n+\n     private int paginatorRows;\n \n     WebMarkupContainer container;\n@@ -129,11 +132,19 @@ public Page createPage() {\n \n                     }\n                  };\n-                    EditLinkPanel panel = new EditLinkPanel(componentId,\n-                            model);\n-                    panel.add(viewLink);\n+                EditLinkPanel panel = new EditLinkPanel(componentId,\n+                        model);\n+                panel.add(viewLink);\n+\n+                String allowedRoles = null;\n+\n+                allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Tasks\",\n+                        \"read\");\n \n-                    cellItem.add(panel);\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        allowedRoles);\n+\n+                cellItem.add(panel);\n             }\n         });\n \n@@ -171,6 +182,14 @@ public void onClick(AjaxRequestTarget target) {\n                  LinkPanel panel = new LinkPanel(componentId);\n                  panel.add(executeLink);\n \n+                 String allowedRoles = null;\n+\n+                 allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Tasks\",\n+                         \"execute\");\n+\n+                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                 allowedRoles);\n+\n                  cellItem.add(panel);\n             }\n         });\n@@ -198,22 +217,33 @@ public void onClick(AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super\n+                                .getAjaxCallDecorator()) {\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(CharSequence script) {\n-                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n+                            public CharSequence preDecorateScript(CharSequence\n+                                    script) {\n+                                return \"if (confirm('\"+\n+                                        getString(\"confirmDelete\")+\"'))\"\n                                         +\"{\"+script+\"}\";\n                             }\n                         };\n                     }\n                  };\n-                    DeleteLinkPanel panel = new DeleteLinkPanel(componentId,\n-                            model);\n-                    panel.add(deleteLink);\n+                DeleteLinkPanel panel = new DeleteLinkPanel(componentId,\n+                        model);\n+                panel.add(deleteLink);\n+\n+                 String allowedRoles = null;\n+\n+                 allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Tasks\",\n+                         \"delete\");\n \n-                    cellItem.add(panel);\n+                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                 allowedRoles);\n+\n+                 cellItem.add(panel);\n             }\n         });\n "},{"sha":"f3ba3790a0afd28f1d97cf720ccb8bd16ab10770","filename":"console/src/main/java/org/syncope/console/pages/UserModalPage.java","status":"modified","additions":12,"deletions":3,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -37,6 +37,8 @@\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.authorization.strategies.role.metadata\n+        .MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n \n@@ -388,9 +390,16 @@ protected void onError(AjaxRequestTarget target, Form form) {\n //    }\n };\n \n-userForm.add(submit);\n+String allowedRoles = null;\n+\n+if(createFlag)\n+    allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Users\",\"create\");\n+else\n+    allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Users\",\"update\");\n \n-//userForm.add(new NiceButton(\"submit\", new Model(getString(\"submit\"))));\n+MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER, allowedRoles);\n+\n+userForm.add(submit);\n \n userForm.add(new FeedbackPanel(\"feedback\").setOutputMarkupId(true));\n \n@@ -403,7 +412,7 @@ protected void onError(AjaxRequestTarget target, Form form) {\n \n     @Override\n     protected IModel<Object> getNodeTextModel(IModel<Object> model) {\n-        return new PropertyModel(model, \"userObject.treeNode.name\");\n+        return new PropertyModel(model, \"userObject.treeNode.displayName\");\n     }\n \n     @Override"},{"sha":"ca31dc0ebf45b932df7960b092b80ae8826cfa8d","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":26,"deletions":4,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -29,6 +29,8 @@\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.authorization.strategies.role.metadata\n+        .MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n@@ -374,7 +376,7 @@ public void onClose(AjaxRequestTarget target) {\n                     }\n                 });\n \n-        add(new AjaxLink(\"createUserLink\") {\n+        AjaxLink createUserLink = new AjaxLink(\"createUserLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n@@ -390,7 +392,16 @@ public Page createPage() {\n \n                 createUserWin.show(target);\n             }\n-        });\n+        };\n+\n+        String allowedRoles = null;\n+\n+        allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Users\",\"create\");\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(createUserLink, ENABLE,\n+                allowedRoles);\n+                \n+        add(createUserLink);\n \n         Form paginatorForm = new Form(\"PaginatorForm\");\n \n@@ -412,7 +423,8 @@ protected void onUpdate( AjaxRequestTarget target )\n         paginatorForm.add(rowsChooser);\n         add(paginatorForm);\n \n-        add(new AjaxLink(\"changeAttributesViewLink\") {\n+        AjaxLink changeAttributesViewLink = new AjaxLink(\n+                \"changeAttributesViewLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n@@ -430,7 +442,17 @@ public Page createPage() {\n \n                 changeAttribsViewWin.show(target);\n             }\n-        });\n+        };\n+\n+        String allowedViewRoles = null;\n+\n+        allowedViewRoles = xmlRolesReader.getAllAllowedRoles(\"Users\",\n+                \"changeView\");\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(changeAttributesViewLink,\n+                RENDER, allowedViewRoles);\n+        \n+        add(changeAttributesViewLink);\n \n         //TAB 2 - Search section start\n         final IModel userAttributes = new LoadableDetachableModel() {"},{"sha":"dcb3591614871ddf8bc52ee8588e2c9a86f2e029","filename":"console/src/main/java/org/syncope/console/pages/WelcomePage.java","status":"modified","additions":96,"deletions":10,"changes":106,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -15,34 +15,120 @@\n package org.syncope.console.pages;\n \n import org.apache.wicket.PageParameters;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.syncope.console.SyncopeSession;\n+import org.syncope.console.commons.XMLRolesReader;\n \n /**\n- *\n- * @author sara\n+ * Welcome page to display after successful login.\n  */\n public class WelcomePage extends WebPage {\n \n+    @SpringBean(name = \"xmlRolesReader\")\n+    protected XMLRolesReader xmlRolesReader;\n+\n     public WelcomePage(PageParameters parameters) {\n         super(parameters);\n-        add(new BookmarkablePageLink(\"schema\", Schema.class));\n \n-        add(new BookmarkablePageLink(\"users\", Users.class));\n+        BookmarkablePageLink schemaLink = new BookmarkablePageLink(\"schema\",\n+                Schema.class);\n+\n+        String allowedSchemaRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\",\n+                        \"list\");\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(schemaLink, ENABLE,\n+                        allowedSchemaRoles);\n+\n+        add(schemaLink);\n+\n+        BookmarkablePageLink usersLink = new BookmarkablePageLink(\"users\",\n+                Users.class);\n+\n+        String allowedUsersRoles = xmlRolesReader.getAllAllowedRoles(\"Users\",\n+                        \"list\");\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(usersLink, ENABLE,\n+                        allowedUsersRoles);\n+\n+        add(usersLink);\n+\n+        BookmarkablePageLink rolesLink= new BookmarkablePageLink(\"roles\",\n+                Roles.class);\n+\n+        String allowedRoleRoles = xmlRolesReader.getAllAllowedRoles(\"Roles\",\n+                        \"list\");\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(rolesLink, ENABLE,\n+                        allowedRoleRoles);\n+\n+        add(rolesLink);\n+\n+        BookmarkablePageLink resourcesLink = new BookmarkablePageLink(\n+                \"resources\", Resources.class);\n+\n+        String allowedResourcesRoles = xmlRolesReader.getAllAllowedRoles(\n+                \"Resources\",\"list\");\n \n-        add(new BookmarkablePageLink(\"roles\", Roles.class));\n+        MetaDataRoleAuthorizationStrategy.authorize(resourcesLink, ENABLE,\n+                        allowedResourcesRoles);\n \n-        add(new BookmarkablePageLink(\"resources\", Resources.class));\n+        add(resourcesLink);\n \n-        add(new BookmarkablePageLink(\"connectors\", Connectors.class));\n+        BookmarkablePageLink connectorsLink =\n+                new BookmarkablePageLink(\"connectors\", Connectors.class);\n \n-        add(new BookmarkablePageLink(\"report\", Report.class));\n+        String allowedConnectorsRoles = xmlRolesReader.getAllAllowedRoles(\n+                \"Connectors\",\"list\");\n \n-        add(new BookmarkablePageLink(\"configuration\", Configuration.class));\n+        MetaDataRoleAuthorizationStrategy.authorize(connectorsLink, ENABLE,\n+                        allowedConnectorsRoles);\n \n-        add(new BookmarkablePageLink(\"task\", Tasks.class));\n+        add(connectorsLink);\n+\n+        BookmarkablePageLink reportLink = new BookmarkablePageLink(\n+                \"report\", Report.class);\n+\n+        String allowedReportRoles = xmlRolesReader.getAllAllowedRoles(\n+                \"Report\",\"list\");\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(reportLink, ENABLE,\n+                        allowedReportRoles);\n+\n+        add(reportLink);\n+\n+        BookmarkablePageLink configurationLink = new BookmarkablePageLink(\n+                \"configuration\", Configuration.class);\n+\n+        String allowedConfigurationRoles = xmlRolesReader.getAllAllowedRoles(\n+                \"Configuration\",\"list\");\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(configurationLink, ENABLE,\n+                        allowedConfigurationRoles);\n+\n+        add(configurationLink);\n+\n+        BookmarkablePageLink taskLink = new BookmarkablePageLink(\"task\",\n+                Tasks.class);\n+\n+        String allowedTasksRoles = xmlRolesReader.getAllAllowedRoles(\n+                \"Tasks\",\"list\");\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(taskLink, ENABLE,\n+                        allowedTasksRoles);\n+\n+        add(taskLink);\n \n         add(new BookmarkablePageLink(\"logout\", Logout.class));\n \n+        SyncopeSession session = (SyncopeSession) getSession();\n+\n+        add(new Label(\"username\",new Model<String>(session.getUser()\n+                .getUsername())));\n+\n     }\n }"},{"sha":"447b911fdb5bfda4712f724170f1bb16a8c18d7d","filename":"console/src/main/java/org/syncope/console/rest/AuthRestClient.java","status":"added","additions":179,"deletions":0,"changes":179,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FAuthRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FAuthRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FAuthRestClient.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -0,0 +1,179 @@\n+/* \n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.console.rest;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.syncope.console.SyncopeUser;\n+\n+/**\n+ * Console client for invoking authentication services.\n+ */\n+public class AuthRestClient {\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG =\n+            LoggerFactory.getLogger(AuthRestClient.class);\n+    protected RestClient restClient;\n+\n+    /**\n+     * Authenticate the user.\n+     * @param username\n+     * @param password\n+     * @return SyncopeUser valued object\n+     */\n+    public SyncopeUser authenticate(String username, String password) {\n+\n+        SyncopeUser user = null;\n+        String roles = \"\";\n+\n+        if (\"admin\".equals(username) && \"password\".equals(password)) {\n+           \n+\n+            List<String> rolesList = getAdminRoles();\n+\n+            for(int i = 0; i< rolesList.size(); i++) {\n+                String role = rolesList.get(i);\n+                roles +=role;\n+\n+                if(i != rolesList.size())\n+                    roles += \",\";\n+            }\n+\n+            user = new SyncopeUser(username, roles);\n+\n+            return user;\n+        }\n+        else  if (\"manager\".equals(username) && \"password\".equals(password)) {\n+\n+            List<String> rolesList = getManagerRoles();\n+\n+            for (int i = 0; i < rolesList.size(); i++) {\n+                String role = rolesList.get(i);\n+                roles += role;\n+\n+                if (i != rolesList.size())\n+                    roles += \",\";\n+\n+            }\n+\n+            user = new SyncopeUser(username, roles);\n+\n+            return user;\n+        }\n+        else\n+            return null;\n+    }\n+\n+    public List<String> getAdminRoles() {\n+        List<String> roles = new ArrayList<String>();\n+        \n+        roles.add(\"USER_CREATE\");\n+        roles.add(\"USER_LIST\");\n+        roles.add(\"USER_READ\");\n+        roles.add(\"USER_DELETE\");\n+        roles.add(\"USER_UPDATE\");\n+        roles.add(\"USER_VIEW\");\n+\n+        roles.add(\"SCHEMA_CREATE\");\n+        roles.add(\"SCHEMA_LIST\");\n+        roles.add(\"SCHEMA_READ\");\n+        roles.add(\"SCHEMA_DELETE\");\n+        roles.add(\"SCHEMA_UPDATE\");\n+\n+        roles.add(\"ROLES_CREATE\");\n+        roles.add(\"ROLES_LIST\");\n+        roles.add(\"ROLES_READ\");\n+        roles.add(\"ROLES_DELETE\");\n+        roles.add(\"ROLES_UPDATE\");\n+\n+        roles.add(\"RESOURCES_CREATE\");\n+        roles.add(\"RESOURCES_LIST\");\n+        roles.add(\"RESOURCES_READ\");\n+        roles.add(\"RESOURCES_DELETE\");\n+        roles.add(\"RESOURCES_UPDATE\");\n+\n+        roles.add(\"CONNECTORS_CREATE\");\n+        roles.add(\"CONNECTORS_LIST\");\n+        roles.add(\"CONNECTORS_READ\");\n+        roles.add(\"CONNECTORS_DELETE\");\n+        roles.add(\"CONNECTORS_UPDATE\");\n+\n+        roles.add(\"REPORT_LIST\");\n+\n+        roles.add(\"CONFIGURATION_CREATE\");\n+        roles.add(\"CONFIGURATION_LIST\");\n+        roles.add(\"CONFIGURATION_READ\");\n+        roles.add(\"CONFIGURATION_DELETE\");\n+        roles.add(\"CONFIGURATION_UPDATE\");\n+\n+        roles.add(\"TASKS_CREATE\");\n+        roles.add(\"TASKS_LIST\");\n+        roles.add(\"TASKS_READ\");\n+        roles.add(\"TASKS_DELETE\");\n+        roles.add(\"TASKS_UPDATE\");\n+        roles.add(\"TASKS_EXECUTE\");\n+\n+        return roles;\n+    }\n+\n+    public List<String> getManagerRoles() {\n+        List<String> roles = new ArrayList<String>();\n+\n+        //roles.add(\"USER_CREATE\");\n+        roles.add(\"USER_LIST\");\n+        roles.add(\"USER_READ\");\n+        roles.add(\"USER_DELETE\");\n+//        roles.add(\"USER_UPDATE\");\n+\n+//        roles.add(\"SCHEMA_CREATE\");\n+        roles.add(\"SCHEMA_LIST\");\n+//        roles.add(\"SCHEMA_READ\");\n+//        roles.add(\"SCHEMA_DELETE\");\n+//        roles.add(\"SCHEMA_UPDATE\");\n+\n+         roles.add(\"CONNECTORS_LIST\");\n+         roles.add(\"REPORT_LIST\");\n+\n+//        roles.add(\"ROLES_CREATE\");\n+        roles.add(\"ROLES_LIST\");\n+        roles.add(\"ROLES_READ\");\n+//        roles.add(\"ROLES_DELETE\");\n+//        roles.add(\"ROLES_UPDATE\");\n+        roles.add(\"TASKS_LIST\");\n+\n+        return roles;\n+    }\n+\n+    /**\n+     * Getter for restClient attribute.\n+     * @return RestClient instance\n+     */\n+    public RestClient getRestClient() {\n+        return restClient;\n+    }\n+\n+    /**\n+     * Setter for restClient attribute.\n+     * @param restClient instance\n+     */\n+    public void setRestClient(RestClient restClient) {\n+        this.restClient = restClient;\n+    }\n+}"},{"sha":"fa20bec1448270a5a71a2f3b9f51b8edba2677a6","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/tree/NodeEditablePanel.java","status":"modified","additions":33,"deletions":7,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FNodeEditablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FNodeEditablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FNodeEditablePanel.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -21,12 +21,14 @@\n import org.apache.wicket.ajax.IAjaxCallDecorator;\n import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.syncope.client.to.RoleTO;\n+import org.syncope.console.commons.XMLRolesReader;\n import org.syncope.console.pages.BasePage;\n import org.syncope.console.pages.RoleModalPage;\n import org.syncope.console.pages.Roles;\n@@ -39,6 +41,9 @@ public class NodeEditablePanel extends Panel {\n     @SpringBean(name = \"rolesRestClient\")\n     RolesRestClient restClient;\n \n+    @SpringBean(name = \"xmlRolesReader\")\n+    protected XMLRolesReader xmlRolesReader;\n+\n     Fragment fragment;\n     /**\n      * Panel constructor.\n@@ -61,7 +66,7 @@ public NodeEditablePanel(String id, final Long idRole,IModel inputModel,\n         else {\n             fragment = new Fragment(\"menuPanel\", \"frag1\",this);\n \n-        fragment.add(new AjaxLink(\"createRoleLink\") {\n+        AjaxLink createRoleLink = new AjaxLink(\"createRoleLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n@@ -78,9 +83,16 @@ public Page createPage() {\n \n                 window.show(target);\n             }\n-        });\n+        };\n+\n+        String allowedCreateRoles = xmlRolesReader.getAllAllowedRoles(\n+                \"Roles\",\"create\");\n+        MetaDataRoleAuthorizationStrategy.authorize(createRoleLink, ENABLE,\n+                allowedCreateRoles);\n \n-        fragment.add(new AjaxLink(\"updateRoleLink\") {\n+        fragment.add(createRoleLink);\n+\n+        AjaxLink updateRoleLink = new AjaxLink(\"updateRoleLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n@@ -96,9 +108,16 @@ public Page createPage() {\n \n                 window.show(target);\n             }\n-        });\n+        };\n+\n+        String allowedReadRoles = xmlRolesReader.getAllAllowedRoles(\n+                \"Roles\",\"read\");\n+        MetaDataRoleAuthorizationStrategy.authorize(updateRoleLink, ENABLE,\n+                allowedReadRoles);\n+        \n+        fragment.add(updateRoleLink);\n \n-        fragment.add(new AjaxLink(\"dropRoleLink\") {\n+        AjaxLink dropRoleLink = new AjaxLink(\"dropRoleLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n@@ -108,7 +127,7 @@ public void onClick(AjaxRequestTarget target) {\n \n                 setResponsePage(new Roles(null));\n             }\n-            \n+\n             @Override\n             protected IAjaxCallDecorator getAjaxCallDecorator() {\n                 return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n@@ -121,7 +140,14 @@ public CharSequence preDecorateScript(CharSequence script) {\n                     }\n                 };\n             }\n-        });\n+        };\n+\n+        String allowedDropRoles = xmlRolesReader.getAllAllowedRoles(\n+                \"Roles\",\"delete\");\n+        MetaDataRoleAuthorizationStrategy.authorize(dropRoleLink, ENABLE,\n+                allowedDropRoles);\n+\n+        fragment.add(dropRoleLink);\n     }\n \n     add(fragment);"},{"sha":"2ba3087034016a12ddcdbb64b84f498bef8ff90b","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/tree/SyncopeRoleTree.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FSyncopeRoleTree.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FSyncopeRoleTree.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FSyncopeRoleTree.java?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -109,15 +109,15 @@ public boolean parentExists(Long parentId, List<Long> list) {\n         boolean found = false;\n \n         for (Long id : list) {\n-            if (!found && id == parentId) {\n+            if (!found && id.longValue() == parentId.longValue()) {\n                 found = true;\n             }\n         }\n         return found;\n     }\n \n     /**\n-     * Add a node child to the specific tree\n+     * Add a node child to the specific parent\n      * @param nodes list populate\n      * @param child to be added to list\n      * @return List<SyncopeTreeNode>\n@@ -129,15 +129,16 @@ public List<SyncopeTreeNode> addChildToParent(List<SyncopeTreeNode> nodes,\n             return nodes;\n         }\n         //if child is the root it won't be a child, so just ignore it\n-        if (child.getParentId() == child.getId()) {\n+        if (child.getParentId().longValue() == child.getId().longValue()) {\n             return nodes;\n         } else {\n             for (SyncopeTreeNode item : nodes) {\n-                if (item.getId() == child.getParentId()) {\n+                if (item.getId().longValue() == child.getParentId()\n+                        .longValue()) {\n                     item.getChildren().add(child);\n                     break;\n-                } else if (item.getId() != child.getParentId() &&\n-                        item.getChildren().size() > 0) {\n+                } else if (item.getId().longValue() != child.getParentId()\n+                        .longValue() && item.getChildren().size() > 0) {\n                     addChildToParent(item.getChildren(), child);\n                 }\n             }"},{"sha":"67ee5df0c8cbfcdbcfafd0b1b841e4de7aecd691","filename":"console/src/main/resources/applicationContext.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -76,4 +76,8 @@\n     <bean id=\"utility\" class=\"org.syncope.console.commons.Utility\">\n         <property name=\"configurationsRestClient\" ref=\"configurationsRestClient\"/>\n     </bean>\n+\n+    <bean id=\"xmlRolesReader\" class=\"org.syncope.console.commons.XMLRolesReader\">\n+         <constructor-arg value=\"authorizations.xml\"/>\n+    </bean>\n </beans>"},{"sha":"367f9bb1fb29305f55d6949504d64facb0b74cfd","filename":"console/src/main/resources/authorizations.xml","status":"added","additions":171,"deletions":0,"changes":171,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Fauthorizations.xml?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -0,0 +1,171 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+action@id = list|create|read|update|delete\n+\n+page@id= Schema|Users|Roles|Resources|Connectors|Report|Configuration|Task \n+-->\n+<auth>\n+    <page id=\"Schema\">\n+        <action id=\"list\">\n+            <entitlement>SCHEMA_LIST</entitlement>\n+        </action>\n+\n+        <action id=\"create\">\n+            <entitlement>SCHEMA_CREATE</entitlement>\n+        </action>\n+\n+        <action id=\"read\">\n+            <entitlement>SCHEMA_READ</entitlement>\n+        </action>\n+\n+        <action id=\"update\">\n+            <entitlement>SCHEMA_UPDATE</entitlement>\n+        </action>\n+\n+        <action id=\"delete\">\n+            <entitlement>SCHEMA_DELETE</entitlement>\n+        </action>\n+    </page>\n+\n+    <page id=\"Users\">\n+        <action id=\"list\">\n+            <entitlement>USER_LIST</entitlement>\n+        </action>\n+\n+        <action id=\"create\">\n+            <entitlement>USER_CREATE</entitlement>\n+        </action>\n+\n+        <action id=\"read\">\n+            <entitlement>USER_READ</entitlement>\n+        </action>\n+\n+        <action id=\"update\">\n+            <entitlement>USER_UPDATE</entitlement>\n+        </action>\n+\n+        <action id=\"delete\">\n+            <entitlement>USER_DELETE</entitlement>\n+        </action>\n+\n+        <action id=\"changeView\">\n+            <entitlement>USER_VIEW</entitlement>\n+        </action>\n+    </page>\n+\n+    <page id=\"Roles\">\n+        <action id=\"list\">\n+            <entitlement>ROLES_LIST</entitlement>\n+        </action>\n+\n+        <action id=\"create\">\n+            <entitlement>ROLES_CREATE</entitlement>\n+        </action>\n+\n+        <action id=\"read\">\n+            <entitlement>ROLES_READ</entitlement>\n+        </action>\n+\n+        <action id=\"update\">\n+            <entitlement>ROLES_UPDATE</entitlement>\n+        </action>\n+\n+        <action id=\"delete\">\n+            <entitlement>ROLES_DELETE</entitlement>\n+        </action>\n+    </page>\n+\n+    <page id=\"Resources\">\n+        <action id=\"list\">\n+            <entitlement>RESOURCES_LIST</entitlement>\n+        </action>\n+\n+        <action id=\"create\">\n+            <entitlement>RESOURCES_CREATE</entitlement>\n+        </action>\n+\n+        <action id=\"read\">\n+            <entitlement>RESOURCES_READ</entitlement>\n+        </action>\n+\n+        <action id=\"update\">\n+            <entitlement>RESOURCES_UPDATE</entitlement>\n+        </action>\n+\n+        <action id=\"delete\">\n+            <entitlement>RESOURCES_DELETE</entitlement>\n+        </action>\n+    </page>\n+\n+    <page id=\"Report\">\n+        <action id=\"list\">\n+            <entitlement>REPORT_LIST</entitlement>\n+        </action>\n+    </page>\n+\n+    <page id=\"Connectors\">\n+       <action id=\"list\">\n+            <entitlement>CONNECTORS_LIST</entitlement>\n+        </action>\n+\n+        <action id=\"create\">\n+            <entitlement>CONNECTORS_CREATE</entitlement>\n+        </action>\n+\n+        <action id=\"read\">\n+            <entitlement>CONNECTORS_READ</entitlement>\n+        </action>\n+\n+        <action id=\"update\">\n+            <entitlement>CONNECTORS_UPDATE</entitlement>\n+        </action>\n+\n+        <action id=\"delete\">\n+            <entitlement>CONNECTORS_DELETE</entitlement>\n+        </action>\n+    </page>\n+\n+    <page id=\"Report\">\n+\n+    </page>\n+\n+    <page id=\"Configuration\">\n+       <action id=\"list\">\n+            <entitlement>CONFIGURATION_LIST</entitlement>\n+        </action>\n+\n+        <action id=\"create\">\n+            <entitlement>CONFIGURATION_CREATE</entitlement>\n+        </action>\n+\n+        <action id=\"read\">\n+            <entitlement>CONFIGURATION_READ</entitlement>\n+        </action>\n+\n+        <action id=\"update\">\n+            <entitlement>CONFIGURATION_UPDATE</entitlement>\n+        </action>\n+\n+        <action id=\"delete\">\n+            <entitlement>CONFIGURATION_DELETE</entitlement>\n+        </action>\n+    </page>\n+\n+    <page id=\"Tasks\">\n+       <action id=\"list\">\n+            <entitlement>TASKS_LIST</entitlement>\n+        </action>\n+\n+        <action id=\"execute\">\n+            <entitlement>TASKS_EXECUTE</entitlement>\n+        </action>\n+\n+        <action id=\"read\">\n+            <entitlement>TASKS_READ</entitlement>\n+        </action>\n+\n+        <action id=\"delete\">\n+            <entitlement>TASKS_DELETE</entitlement>\n+        </action>\n+    </page>\n+</auth>\n\\ No newline at end of file"},{"sha":"8e5ecf8b3b659fad9ee32ede6971e013ee0e5f3d","filename":"console/src/main/resources/org/syncope/console/pages/BasePage.html","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -20,6 +20,16 @@\n        background: #cccccc url(css/images/ui-bg_highlight-soft_75_cccccc_1x100.png)\n            50% 50% repeat-x;\n     }\n+\n+    em {\n+        font-size: inherit;\n+        color: gray;\n+    }\n+\n+    em img {\n+        opacity:0.4;\n+        filter:alpha(opacity=40);\n+    }\n     </style>\n </wicket:head>\n "},{"sha":"69aa4b5080b2c0e1ebed524c3d7c16015d37590a","filename":"console/src/main/resources/org/syncope/console/pages/CustomizableBasePage.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FCustomizableBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FCustomizableBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FCustomizableBasePage.html?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -77,6 +77,6 @@\n     <body>\n \n         <wicket:child />\n-\n+        \n     </body>\n </html>\n\\ No newline at end of file"},{"sha":"636741e35ad9baddf97f259c7b1a130d53542c31","filename":"console/src/main/resources/org/syncope/console/pages/MembershipModalPage.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.html?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -21,7 +21,7 @@\n                     <li><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n                 </ul>\n                     <div id=\"tabs-1\">\n-                        <table style=\"font-size:14px\" width=\"100%\" wicket:id=\"container\">\n+                        <table style=\"font-size:1em\" width=\"100%\" wicket:id=\"container\">\n                             <tr wicket:id=\"membershipSchemas\">\n                                 <td><span wicket:id=\"name\"/></td>\n                                 <td>"},{"sha":"e8b34bf6cf7ce769c21764e6db4b69b84b1648b1","filename":"console/src/main/resources/org/syncope/console/pages/RoleModalPage.html","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.html?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -12,14 +12,13 @@\n  limitations under the License.\n  under the License.\n -->\n-<!--wicket:head>\n-    <style>\n-        table.palette td.header {\n-            background:url(\"images/ui-bg_glass_75_e6e6e6_1x400.png\")\n-                repeat-x scroll 50% 50% #E6E6E6 !important;\n+<wicket:head>\n+    <style type=\"text/css\">\n+        #tabs-3 table{\n+            font-size: 1.1em;\n         }\n     </style>\n-</wicket:head-->\n+</wicket:head>\n \n <wicket:extend>\n     <div style=\"margin:10px\" title=\"Create new Resource-Mappings\">\n@@ -32,7 +31,7 @@\n                     <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n                 </ul>\n                     <div id=\"tabs-1\">\n-                        <table class=\"stripedTable\" style=\"font-size:14px\" width=\"100%\" wicket:id=\"container\">\n+                        <table class=\"stripedTable\" style=\"font-size:1em\" width=\"100%\" wicket:id=\"container\">\n                             <tr>\n                                 <td><wicket:message key=\"name\"/></td>\n                                 <td>"},{"sha":"84aa6ee40ad314adc1822ffe4dddbf41a659dc16","filename":"console/src/main/resources/org/syncope/console/pages/UserModalPage.html","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -38,8 +38,6 @@\n             font-size: 1.1em;\n         }\n     </style>\n-\n-\n </wicket:head>\n \n <wicket:extend>\n@@ -106,7 +104,7 @@\n                 </p>\n                 \n                 <table id=\"users\" class=\"roleTable\"\n-                       style=\"font-size:12px\" wicket:id=\"membershipsContainer\"\n+                       style=\"font-size:1.1em\" wicket:id=\"membershipsContainer\"\n                         cellpadding=\"5px\" cellspacing=\"2px\">\n                    <thead>\n                         <tr class=\"ui-widget-header\">"},{"sha":"fcb199859b3452f769acc6ff3ab5a6299258c6d9","filename":"console/src/main/resources/org/syncope/console/pages/WelcomePage.html","status":"modified","additions":11,"deletions":3,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.html?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -21,14 +21,22 @@\n \n         <title>Syncope - Login</title>\n \n-        <!--link rel=\"shortcut icon\" href=\"img/favicon.png\" type=\"image/png\" /-->\n         <link rel=\"stylesheet\" href=\"css/stile_sy.css\" type=\"text/css\" media=\"all\"/>\n-\n+        <style type=\"text/css\">\n+            em {\n+                font-size: 14px;\n+                color: gray;\n+            }\n+            em img {\n+                opacity:0.4;\n+                filter:alpha(opacity=40);\n+            }\n+        </style>\n     </head>\n     <body>\n     <div id=\"splash\">\n       <img src=\"img/logo.png\" alt=\"syncope\" title=\"syncope\" id=\"logo\" />\n-      <h2>Benvenuto <strong>User</strong>!</h2>\n+      <h2>Benvenuto <strong><span wicket:id=\"username\"/></strong>!</h2>\n       <ul>\n         <li><a href=\"#\" wicket:id=\"schema\" class=\"schema\"><img src=\"img/menu/schema.png\" alt=\"Schema\" width=\"80\" height=\"80\" /><br /><wicket:message key=\"schema\"/></a></li>\n         <li><a href=\"#\" wicket:id=\"users\" class=\"users\"><img src=\"img/menu/users.png\" alt=\"Users\" width=\"80\" height=\"80\" /><br /><wicket:message key=\"users\"/></a></li>"},{"sha":"2fadba575f38f421d24470a3a83387d7877b7cc6","filename":"console/src/main/webapp/WEB-INF/authentication.xml","status":"removed","additions":0,"deletions":20,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a7e14552ab944a08142942cd51707f61c0c53c13/console%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fauthentication.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a7e14552ab944a08142942cd51707f61c0c53c13/console%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fauthentication.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fauthentication.xml?ref=a7e14552ab944a08142942cd51707f61c0c53c13","patch":"@@ -1,20 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-  Licensed under the Apache License, Version 2.0 (the \"License\");\n-  you may not use this file except in compliance with the License.\n-  You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-  Unless required by applicable law or agreed to in writing, software\n-  distributed under the License is distributed on an \"AS IS\" BASIS,\n-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-  See the License for the specific language governing permissions and\n-  limitations under the License.\n--->\n-<root>\n-    <user>\n-        <username>admin</username>\n-        <password>password</password>\n-    </user>\n-</root>"},{"sha":"ae05b8c3783983cb3d323373fb4694325286fc2c","filename":"console/src/main/webapp/WEB-INF/web.xml","status":"modified","additions":10,"deletions":12,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/console%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -12,18 +12,22 @@\n   See the License for the specific language governing permissions and\n   limitations under the License.\n -->\n-<web-app xmlns=\"http://java.sun.com/xml/ns/j2ee\"\n-         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-         xsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/javaee/web-app_2_4.xsd\"\n-         version=\"2.4\">\n+<web-app version=\"2.4\" xmlns=\"http://java.sun.com/xml/ns/j2ee\"\n+        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+        xsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee\n+        http://java.sun.com/xml/ns/javaee/web-app_2_4.xsd\">\n \n     <display-name>Syncope console</display-name>\n     <servlet>\n         <servlet-name>SyncopeApplication</servlet-name>\n-        <servlet-class>org.apache.wicket.protocol.http.WicketServlet</servlet-class>\n+        <servlet-class>\n+            org.apache.wicket.protocol.http.WicketServlet\n+        </servlet-class>\n         <init-param>\n             <param-name>applicationFactoryClassName</param-name>\n-            <param-value>org.apache.wicket.spring.SpringWebApplicationFactory</param-value>\n+            <param-value>\n+                org.apache.wicket.spring.SpringWebApplicationFactory\n+            </param-value>\n         </init-param>\n         <load-on-startup>1</load-on-startup>\n     </servlet>\n@@ -44,11 +48,6 @@\n         </param-value>\n     </context-param>\n \n-    <context-param>\n-        <param-name>authenticationFile</param-name>\n-        <param-value>/WEB-INF/authentication.xml</param-value>\n-    </context-param>\n-\n     <context-param>\n         <param-name>configuration</param-name>\n         <param-value>development</param-value>\n@@ -59,5 +58,4 @@\n             org.springframework.web.context.ContextLoaderListener\n         </listener-class>\n     </listener>\n-\n </web-app>"},{"sha":"28fadf454e3ace3821c548d54d1cb3199c07f885","filename":"pom.xml","status":"modified","additions":9,"deletions":3,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/10ef24328d3c2af5f300c34549cdf713e6bb2589/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/10ef24328d3c2af5f300c34549cdf713e6bb2589/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=10ef24328d3c2af5f300c34549cdf713e6bb2589","patch":"@@ -99,7 +99,7 @@\n         <commons-jexl.version>2.0.1</commons-jexl.version>\n         <commons-lang.version>2.5</commons-lang.version>\n         <commons-email.version>1.2</commons-email.version>\n-        \n+\n         <osworkflow.version>2.8.0</osworkflow.version>\n         <propertyset.version>1.3</propertyset.version>\n         <oscore.version>2.2.6</oscore.version>\n@@ -115,7 +115,7 @@\n         <ehcache.version>2.3.0</ehcache.version>\n         <ehcache-jgroupsreplication.version>1.4</ehcache-jgroupsreplication.version>\n \n-        <wicket.version>1.4.12</wicket.version>\n+        <wicket.version>1.4.14</wicket.version>\n \n         <org.apache.cxf.version>2.2.9</org.apache.cxf.version>\n \n@@ -340,6 +340,12 @@\n                 <version>${wicket.version}</version>\n             </dependency>\n \n+            <dependency>\n+                <groupId>org.apache.wicket</groupId>\n+                <artifactId>wicket-auth-roles</artifactId>\n+                <version>${wicket.version}</version>\n+            </dependency>\n+\n             <dependency>\n                 <groupId>org.hsqldb</groupId>\n                 <artifactId>hsqldb</artifactId>\n@@ -430,7 +436,7 @@\n \n     <build>\n         <defaultGoal>package</defaultGoal>\n-        \n+\n         <pluginManagement>\n             <plugins>\n                 <plugin>"}]}