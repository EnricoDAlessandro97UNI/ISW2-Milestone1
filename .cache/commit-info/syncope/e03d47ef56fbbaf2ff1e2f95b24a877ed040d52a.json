{"sha":"e03d47ef56fbbaf2ff1e2f95b24a877ed040d52a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmUwM2Q0N2VmNTZmYmJhZjJmZjFlMmY5NWIyNGE4NzdlZDA0MGQ1MmE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-07-11T10:15:07Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-07-11T10:15:16Z"},"message":"[SYNCOPE-1335] Missing statements added","tree":{"sha":"9a64771b885e61da6dd7c5b0999eddaa1a5a18b6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9a64771b885e61da6dd7c5b0999eddaa1a5a18b6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e03d47ef56fbbaf2ff1e2f95b24a877ed040d52a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e03d47ef56fbbaf2ff1e2f95b24a877ed040d52a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e03d47ef56fbbaf2ff1e2f95b24a877ed040d52a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e03d47ef56fbbaf2ff1e2f95b24a877ed040d52a/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6c104df3bbbc46949ce3e449945e2c8c905cc9d1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6c104df3bbbc46949ce3e449945e2c8c905cc9d1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6c104df3bbbc46949ce3e449945e2c8c905cc9d1"}],"stats":{"total":76,"additions":74,"deletions":2},"files":[{"sha":"01554f32604b3467f07ca397a17db056d7cd73c7","filename":"core/upgrade/src/main/java/org/apache/syncope/core/upgrade/GenerateUpgradeSQL.java","status":"modified","additions":74,"deletions":2,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e03d47ef56fbbaf2ff1e2f95b24a877ed040d52a/core%2Fupgrade%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FGenerateUpgradeSQL.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e03d47ef56fbbaf2ff1e2f95b24a877ed040d52a/core%2Fupgrade%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FGenerateUpgradeSQL.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fupgrade%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fupgrade%2FGenerateUpgradeSQL.java?ref=e03d47ef56fbbaf2ff1e2f95b24a877ed040d52a","patch":"@@ -91,10 +91,41 @@ public static void main(final String[] args) throws Exception {\n             schemaTool.run();\n \n             // now proceed with manual update statements...\n+            Connection conn = jdbcConf.getDataSource2(null).getConnection();\n+\n+            // User\n+            OUT.write(\"UPDATE SyncopeUser SET mustChangePassword=0 WHERE mustChangePassword IS NULL;\\n\");\n+\n+            // VirSchema\n+            OUT.write(\"UPDATE VirSchema SET readonly=0 WHERE readonly IS NULL;\\n\");\n+\n+            // ExternalResource\n+            OUT.write(\"UPDATE ExternalResource SET overrideCapabilities=0 WHERE overrideCapabilities IS NULL;\\n\");\n+\n             // OrgUnit\n             OUT.write(\"UPDATE OrgUnit SET ignoreCaseMatch=0;\\n\");\n \n-            Connection conn = jdbcConf.getDataSource2(null).getConnection();\n+            // OrgUnitItemTransformer\n+            try (Statement stmt = conn.createStatement();\n+                    ResultSet rs = stmt.executeQuery(\n+                            \"SELECT orgUnitItem_id,transformerClassName FROM OrgUnitItem_Transformer\")) {\n+\n+                while (rs.next()) {\n+                    String itemId = rs.getString(1);\n+                    String transformerClassName = rs.getString(2);\n+\n+                    String implementationId = \"OrgUnitItemTransformer_\" + itemId;\n+                    OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n+                            + \"'\" + implementationId + \"',\"\n+                            + \"'ITEM_TRANSFORMER',\"\n+                            + \"'JAVA',\"\n+                            + \"'\" + transformerClassName + \"');\\n\");\n+                    OUT.write(\"INSERT INTO OrgUnitItemTransformer(item_id,implementation_id) VALUES(\"\n+                            + \"'\" + itemId + \"',\"\n+                            + \"'\" + implementationId + \"');\\n\");\n+                }\n+            }\n+            OUT.write(\"DROP TABLE OrgUnitItem_Transformer;\\n\");\n \n             // PlainSchema\n             try (Statement stmt = conn.createStatement();\n@@ -210,6 +241,7 @@ public static void main(final String[] args) throws Exception {\n \n             // Task\n             OUT.write(\"UPDATE Task SET remediation=0;\\n\");\n+            OUT.write(\"UPDATE Task SET active=0 WHERE active IS NULL;\\n\");\n \n             OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n                     + \"'PullJobDelegate',\"\n@@ -375,12 +407,52 @@ public static void main(final String[] args) throws Exception {\n                 }\n             }\n             OUT.write(\"DROP TABLE ReportletConfInstance;\\n\");\n+\n+            // MappingItemTransformer\n+            try (Statement stmt = conn.createStatement();\n+                    ResultSet rs = stmt.executeQuery(\n+                            \"SELECT mappingItem_id,transformerClassName FROM MappingItem_Transformer\")) {\n+\n+                while (rs.next()) {\n+                    String itemId = rs.getString(1);\n+                    String transformerClassName = rs.getString(2);\n+\n+                    String implementationId = \"MappingItemTransformer_\" + itemId;\n+                    OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n+                            + \"'\" + implementationId + \"',\"\n+                            + \"'ITEM_TRANSFORMER',\"\n+                            + \"'JAVA',\"\n+                            + \"'\" + transformerClassName + \"');\\n\");\n+                    OUT.write(\"INSERT INTO MappingItemTransformer(item_id,implementation_id) VALUES(\"\n+                            + \"'\" + itemId + \"',\"\n+                            + \"'\" + implementationId + \"');\\n\");\n+                }\n+            }\n+            OUT.write(\"DROP TABLE MappingItem_Transformer;\\n\");\n+\n+            // Notification\n+            try (Statement stmt = conn.createStatement();\n+                    ResultSet rs = stmt.executeQuery(\n+                            \"SELECT DISTINCT recipientsProviderClassName \"\n+                            + \"FROM Notification WHERE recipientsProviderClassName IS NOT NULL\")) {\n+\n+                while (rs.next()) {\n+                    String recipientsProviderClassName = rs.getString(1);\n+                    OUT.write(\"INSERT INTO Implementation(id,type,engine,body) VALUES(\"\n+                            + \"'\" + recipientsProviderClassName + \"',\"\n+                            + \"'RECIPIENTS_PROVIDER',\"\n+                            + \"'JAVA',\"\n+                            + \"'\" + recipientsProviderClassName + \"');\\n\");\n+                }\n+            }\n+            OUT.write(\"UPDATE Notification SET recipientsProvider_id=recipientsProviderClassName;\\n\");\n+            OUT.write(\"ALTER TABLE Notification DROP COLUMN recipientsProviderClassName;\\n\");\n         } finally {\n             OUT.flush();\n             OUT.close();\n         }\n     }\n-    \n+\n     private GenerateUpgradeSQL() {\n         // private constructor\n     }"}]}