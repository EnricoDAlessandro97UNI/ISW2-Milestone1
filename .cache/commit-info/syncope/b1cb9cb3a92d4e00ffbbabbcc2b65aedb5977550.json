{"sha":"b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmIxY2I5Y2IzYTkyZDRlMDBmZmJiYWJiY2MyYjY1YWVkYjU5Nzc1NTA=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-04-19T18:38:53Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-04-19T18:38:53Z"},"message":"SYNCOPE-62 #comment added and managed AbstractSchema field to specify enum labels\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1328074 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"00059e657a34eb11a90702ad2bae879db6e8af33","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/00059e657a34eb11a90702ad2bae879db6e8af33"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"851cdd64e3b4f27d542c65449d50d716c3acea3c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/851cdd64e3b4f27d542c65449d50d716c3acea3c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/851cdd64e3b4f27d542c65449d50d716c3acea3c"}],"stats":{"total":463,"additions":302,"deletions":161},"files":[{"sha":"3b3ebf13ef7c58956ffea22e8c529122f8b329bb","filename":"client/src/main/java/org/apache/syncope/client/to/SchemaTO.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fto%2FSchemaTO.java?ref=b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550","patch":"@@ -34,6 +34,8 @@ public class SchemaTO extends AbstractBaseBean {\n \n     private String enumerationValues;\n \n+    private String enumerationKeys;\n+\n     private boolean multivalue;\n \n     private boolean uniqueConstraint;\n@@ -74,6 +76,14 @@ public void setEnumerationValues(String enumerationValues) {\n         this.enumerationValues = enumerationValues;\n     }\n \n+    public String getEnumerationKeys() {\n+        return enumerationKeys;\n+    }\n+\n+    public void setEnumerationKeys(String enumerationKeys) {\n+        this.enumerationKeys = enumerationKeys;\n+    }\n+\n     public boolean isMultivalue() {\n         return multivalue;\n     }"},{"sha":"74cc302ef55050ef7a2a52d168b22b83c5613b5e","filename":"console/src/main/java/org/apache/syncope/console/pages/SchemaModalPage.java","status":"modified","additions":78,"deletions":20,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java?ref=b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550","patch":"@@ -18,16 +18,13 @@\n  */\n package org.apache.syncope.console.pages;\n \n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n-import org.apache.syncope.client.AbstractBaseBean;\n-import org.apache.syncope.client.to.SchemaTO;\n-import org.apache.syncope.client.validation.SyncopeClientCompositeErrorException;\n-import org.apache.syncope.types.AttributableType;\n-import org.apache.syncope.types.SchemaType;\n+import org.apache.commons.lang.StringUtils;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n@@ -41,12 +38,19 @@\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.util.string.Strings;\n+import org.apache.syncope.client.AbstractBaseBean;\n+import org.apache.syncope.client.to.SchemaTO;\n+import org.apache.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n+import org.apache.syncope.types.AttributableType;\n+import org.apache.syncope.types.SchemaType;\n \n /**\n  * Modal window with Schema form.\n@@ -63,17 +67,16 @@ public SchemaModalPage(AttributableType kind) {\n     public void setSchemaModalPage(final PageReference callerPageRef, final ModalWindow window,\n             AbstractBaseBean schemaTO, final boolean createFlag) {\n \n-        final SchemaTO schema = schemaTO == null\n-                ? new SchemaTO()\n-                : (SchemaTO) schemaTO;\n+        final SchemaTO schema = schemaTO == null ? new SchemaTO() : (SchemaTO) schemaTO;\n \n         final Form schemaForm = new Form(\"form\");\n \n         schemaForm.setModel(new CompoundPropertyModel(schema));\n         schemaForm.setOutputMarkupId(Boolean.TRUE);\n \n-        final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\"name\", getString(\"name\"), new PropertyModel<String>(\n-                schema, \"name\"));\n+        final AjaxTextFieldPanel name =\n+                new AjaxTextFieldPanel(\"name\", getString(\"name\"), new PropertyModel<String>(schema, \"name\"));\n+\n         name.addRequiredLabel();\n         name.setEnabled(createFlag);\n \n@@ -101,15 +104,28 @@ protected List<String> load() {\n         type.setChoices(Arrays.asList(SchemaType.values()));\n         type.addRequiredLabel();\n \n-        final AjaxTextFieldPanel enumerationValues = new AjaxTextFieldPanel(\"enumerationValues\",\n-                getString(\"enumerationValues\"), new PropertyModel<String>(schema, \"enumerationValues\"));\n+        final MultiValueSelectorPanel<String> enumerationValues =\n+                new MultiValueSelectorPanel<String>(\"enumerationValues\",\n+                new Model(),\n+                new AjaxTextFieldPanel(\"panel\", \"enumerationValues\", new Model(null)).addRequiredLabel());\n+        schemaForm.add(enumerationValues);\n+\n+        enumerationValues.setModelObject((Serializable) getEnumValuesAsList(schema.getEnumerationValues()));\n+\n+        final MultiValueSelectorPanel<String> enumerationKeys =\n+                new MultiValueSelectorPanel<String>(\"enumerationKeys\",\n+                new Model(),\n+                new AjaxTextFieldPanel(\"panel\", \"enumerationKeys\", new Model(null)));\n+        schemaForm.add(enumerationKeys);\n+\n+        enumerationKeys.setModelObject((Serializable) getEnumValuesAsList(schema.getEnumerationKeys()));\n \n         if (schema != null && SchemaType.Enum.equals(((SchemaTO) schema).getType())) {\n-            enumerationValues.addRequiredLabel();\n             enumerationValues.setEnabled(Boolean.TRUE);\n+            enumerationKeys.setEnabled(Boolean.TRUE);\n         } else {\n-            enumerationValues.removeRequiredLabel();\n             enumerationValues.setEnabled(Boolean.FALSE);\n+            enumerationKeys.setEnabled(Boolean.FALSE);\n         }\n \n         type.getField().add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n@@ -119,13 +135,23 @@ protected List<String> load() {\n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n                 if (SchemaType.Enum.ordinal() == Integer.parseInt(type.getField().getValue())) {\n-                    enumerationValues.addRequiredLabel();\n                     enumerationValues.setEnabled(Boolean.TRUE);\n-                    enumerationValues.setModelObject(((SchemaTO) schema).getEnumerationValues());\n+                    enumerationValues.setModelObject((Serializable) getEnumValuesAsList(schema.getEnumerationValues()));\n+\n+                    enumerationKeys.setEnabled(Boolean.TRUE);\n+                    enumerationKeys.setModelObject((Serializable) getEnumValuesAsList(schema.getEnumerationKeys()));\n                 } else {\n-                    enumerationValues.removeRequiredLabel();\n+                    final List<String> values = new ArrayList<String>();\n+                    values.add(\"\");\n+\n                     enumerationValues.setEnabled(Boolean.FALSE);\n-                    enumerationValues.setModelObject(null);\n+                    enumerationValues.setModelObject((Serializable) values);\n+\n+                    final List<String> keys = new ArrayList<String>();\n+                    keys.add(\"\");\n+\n+                    enumerationKeys.setEnabled(Boolean.FALSE);\n+                    enumerationKeys.setModelObject((Serializable) keys);\n                 }\n \n                 target.add(schemaForm);\n@@ -180,7 +206,10 @@ protected void onUpdate(AjaxRequestTarget art) {\n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n \n-                SchemaTO schemaTO = (SchemaTO) form.getDefaultModelObject();\n+                final SchemaTO schemaTO = (SchemaTO) form.getDefaultModelObject();\n+\n+                schemaTO.setEnumerationValues(getEnumValuesAsString(enumerationValues.getView().getModelObject()));\n+                schemaTO.setEnumerationKeys(getEnumValuesAsString(enumerationKeys.getView().getModelObject()));\n \n                 if (schemaTO.isMultivalue() && schemaTO.isUniqueConstraint()) {\n                     error(getString(\"multivalueAndUniqueConstr.validation\"));\n@@ -226,7 +255,6 @@ protected void onError(final AjaxRequestTarget target, final Form form) {\n         schemaForm.add(conversionPattern);\n         schemaForm.add(validatorClass);\n         schemaForm.add(type);\n-        schemaForm.add(enumerationValues);\n         schemaForm.add(mandatoryCondition);\n         schemaForm.add(multivalue);\n         schemaForm.add(readonly);\n@@ -236,4 +264,34 @@ protected void onError(final AjaxRequestTarget target, final Form form) {\n \n         add(schemaForm);\n     }\n+\n+    private String getEnumValuesAsString(final List<String> enumerationValues) {\n+        final StringBuilder builder = new StringBuilder();\n+\n+        for (String str : enumerationValues) {\n+            if (StringUtils.isNotBlank(str)) {\n+                if (builder.length() > 0) {\n+                    builder.append(Schema.enumValuesSeparator);\n+                }\n+\n+                builder.append(str.trim());\n+            }\n+        }\n+\n+        return builder.toString();\n+    }\n+\n+    private List<String> getEnumValuesAsList(final String enumerationValues) {\n+        final List<String> values = new ArrayList<String>();\n+\n+        if (StringUtils.isNotBlank(enumerationValues)) {\n+            for (String value : enumerationValues.split(Schema.enumValuesSeparator)) {\n+                values.add(value.trim());\n+            }\n+        } else {\n+            values.add(\"\");\n+        }\n+\n+        return values;\n+    }\n }"},{"sha":"79f0de9c2e22f31cacf9a05b59eb9bd6a54bb9fa","filename":"console/src/main/java/org/apache/syncope/console/pages/UserModalPage.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550","patch":"@@ -18,6 +18,14 @@\n  */\n package org.apache.syncope.console.pages;\n \n+import org.apache.syncope.client.to.UserTO;\n+import org.apache.syncope.console.pages.panels.AttributesPanel;\n+import org.apache.syncope.console.pages.panels.DerivedAttributesPanel;\n+import org.apache.syncope.console.pages.panels.ResourcesPanel;\n+import org.apache.syncope.console.pages.panels.RolesPanel;\n+import org.apache.syncope.console.pages.panels.UserDetailsPanel;\n+import org.apache.syncope.console.pages.panels.UserManagementResultPanel;\n+import org.apache.syncope.console.pages.panels.VirtualAttributesPanel;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n@@ -30,14 +38,6 @@\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n-import org.apache.syncope.client.to.UserTO;\n-import org.apache.syncope.console.pages.panels.AttributesPanel;\n-import org.apache.syncope.console.pages.panels.DerivedAttributesPanel;\n-import org.apache.syncope.console.pages.panels.ResourcesPanel;\n-import org.apache.syncope.console.pages.panels.RolesPanel;\n-import org.apache.syncope.console.pages.panels.UserDetailsPanel;\n-import org.apache.syncope.console.pages.panels.UserManagementResultPanel;\n-import org.apache.syncope.console.pages.panels.VirtualAttributesPanel;\n \n /**\n  * Modal window with User form."},{"sha":"1b2fa6a68355a3d1f3fb15c25dc9397fd7035be7","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AttributesPanel.java","status":"modified","additions":75,"deletions":26,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java?ref=b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550","patch":"@@ -19,21 +19,31 @@\n package org.apache.syncope.console.pages.panels;\n \n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.Collection;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import org.apache.commons.lang.StringUtils;\n import org.apache.syncope.client.SyncopeConstants;\n import org.apache.syncope.client.to.AbstractAttributableTO;\n import org.apache.syncope.client.to.AttributeTO;\n import org.apache.syncope.client.to.RoleTO;\n import org.apache.syncope.client.to.SchemaTO;\n import org.apache.syncope.client.to.UserTO;\n+import org.apache.syncope.console.pages.Schema;\n+import org.apache.syncope.console.rest.SchemaRestClient;\n+import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.DateTextFieldPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.DateTimeFieldPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.FieldPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.SchemaType;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -42,15 +52,8 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.apache.syncope.console.pages.Schema;\n-import org.apache.syncope.console.rest.SchemaRestClient;\n-import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.DateTextFieldPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.DateTimeFieldPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.FieldPanel;\n-import org.apache.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class AttributesPanel extends Panel {\n \n@@ -61,6 +64,8 @@ public class AttributesPanel extends Panel {\n \n     private final boolean templateMode;\n \n+    private static Logger LOG = LoggerFactory.getLogger(AttributesPanel.class);\n+\n     public <T extends AbstractAttributableTO> AttributesPanel(final String id, final T entityTO, final Form form,\n             final boolean templateMode) {\n \n@@ -107,15 +112,14 @@ protected void populateItem(final ListItem item) {\n                         ? attributeTO.getSchema() + \" (JEXL)\"\n                         : attributeTO.getSchema()));\n \n-                final FieldPanel panel = getFieldPanel(schemas.getObject().get(attributeTO.getSchema()), form,\n-                        attributeTO);\n+                final FieldPanel panel =\n+                        getFieldPanel(schemas.getObject().get(attributeTO.getSchema()), form, attributeTO);\n \n                 if (templateMode || !schemas.getObject().get(attributeTO.getSchema()).isMultivalue()) {\n-\n                     item.add(panel);\n                 } else {\n-                    item.add(new MultiValueSelectorPanel<String>(\"panel\", new PropertyModel(attributeTO, \"values\"),\n-                            panel));\n+                    item.add(new MultiValueSelectorPanel<String>(\n+                            \"panel\", new PropertyModel(attributeTO, \"values\"), panel));\n                 }\n             }\n         };\n@@ -156,17 +160,12 @@ private FieldPanel getFieldPanel(final SchemaTO schemaTO, final Form form, final\n \n         final FieldPanel panel;\n \n-        final boolean required = templateMode\n-                ? false\n-                : schemaTO.getMandatoryCondition().equalsIgnoreCase(\"true\");\n+        final boolean required = templateMode ? false : schemaTO.getMandatoryCondition().equalsIgnoreCase(\"true\");\n+\n+        final boolean readOnly = templateMode ? false : schemaTO.isReadonly();\n \n-        final boolean readOnly = templateMode\n-                ? false\n-                : schemaTO.isReadonly();\n+        final SchemaType type = templateMode ? SchemaType.String : schemaTO.getType();\n \n-        final SchemaType type = templateMode\n-                ? SchemaType.String\n-                : schemaTO.getType();\n         switch (type) {\n             case Boolean:\n                 panel = new AjaxCheckBoxPanel(\"panel\", schemaTO.getName(), new Model());\n@@ -199,11 +198,29 @@ private FieldPanel getFieldPanel(final SchemaTO schemaTO, final Form form, final\n \n             case Enum:\n                 panel = new AjaxDropDownChoicePanel<String>(\"panel\", schemaTO.getName(), new Model());\n-                ((AjaxDropDownChoicePanel) panel).setChoices(Arrays.asList(schemaTO.getEnumerationValues().split(\n-                        Schema.enumValuesSeparator)));\n+                ((AjaxDropDownChoicePanel) panel).setChoices(getEnumeratedValues(schemaTO));\n+\n+                if (StringUtils.isNotBlank(schemaTO.getEnumerationKeys())) {\n+                    ((AjaxDropDownChoicePanel) panel).setChoiceRenderer(new IChoiceRenderer<String>() {\n+\n+                        final Map<String, String> valueMap = getEnumeratedKeyValues(schemaTO);\n+\n+                        @Override\n+                        public String getDisplayValue(final String value) {\n+                            return valueMap.get(value) == null ? value : valueMap.get(value);\n+                        }\n+\n+                        @Override\n+                        public String getIdValue(final String value, int i) {\n+                            return value;\n+                        }\n+                    });\n+                }\n+\n                 if (required) {\n                     panel.addRequiredLabel();\n                 }\n+\n                 break;\n \n             default:\n@@ -218,4 +235,36 @@ private FieldPanel getFieldPanel(final SchemaTO schemaTO, final Form form, final\n \n         return panel;\n     }\n+\n+    private Map<String, String> getEnumeratedKeyValues(final SchemaTO schemaTO) {\n+        final Map<String, String> res = new HashMap<String, String>();\n+\n+        final String[] values = StringUtils.isBlank(schemaTO.getEnumerationValues())\n+                ? new String[0]\n+                : schemaTO.getEnumerationValues().split(Schema.enumValuesSeparator);\n+\n+        final String[] keys = StringUtils.isBlank(schemaTO.getEnumerationKeys())\n+                ? new String[0]\n+                : schemaTO.getEnumerationKeys().split(Schema.enumValuesSeparator);\n+\n+        for (int i = 0; i < values.length; i++) {\n+            res.put(values[i].trim(), keys.length > i ? keys[i].trim() : null);\n+        }\n+\n+        return res;\n+    }\n+\n+    private List<String> getEnumeratedValues(final SchemaTO schemaTO) {\n+        final List<String> res = new ArrayList<String>();\n+\n+        final String[] values = StringUtils.isBlank(schemaTO.getEnumerationValues())\n+                ? new String[0]\n+                : schemaTO.getEnumerationValues().split(Schema.enumValuesSeparator);\n+\n+        for (String value : values) {\n+            res.add(value.trim());\n+        }\n+\n+        return res;\n+    }\n }"},{"sha":"136446c09d8b59c80e4280dfd47d02d608004b90","filename":"console/src/main/resources/org/apache/syncope/console/pages/SchemaModalPage.html","status":"modified","additions":112,"deletions":103,"changes":215,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.html?ref=b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550","patch":"@@ -13,122 +13,131 @@\n  under the License.\n -->\n <wicket:head>\n-    <style type=\"text/css\">\n-        /* Style for autocomplete field */\n-        div.wicket-aa {\n-            font-family: \"Lucida Grande\",\"Lucida Sans Unicode\",Tahoma,Verdana;\n-            font-size: 12px;\n-            background-color: white;\n-            border-width: 1px;\n-            border-color: #cccccc;\n-            border-style: solid;\n-            padding: 2px;\n-            margin: 1px 0 0 0;\n-            text-align:left;\n-        }\n-        div.wicket-aa ul { list-style:none; padding: 2px; margin:0; }\n-        div.wicket-aa ul li.selected { background-color: #FFFF00; padding: 2px; margin:0; }\n-    </style>\n+  <style type=\"text/css\">\n+    /* Style for autocomplete field */\n+    div.wicket-aa {\n+      font-family: \"Lucida Grande\",\"Lucida Sans Unicode\",Tahoma,Verdana;\n+      font-size: 12px;\n+      background-color: white;\n+      border-width: 1px;\n+      border-color: #cccccc;\n+      border-style: solid;\n+      padding: 2px;\n+      margin: 1px 0 0 0;\n+      text-align:left;\n+    }\n+    div.wicket-aa ul { list-style:none; padding: 2px; margin:0; }\n+    div.wicket-aa ul li.selected { background-color: #FFFF00; padding: 2px; margin:0; }\n+  </style>\n </wicket:head>\n <wicket:extend>\n-    <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n+  <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n <div style=\"margin:10px\">\n-    <form wicket:id=\"form\">\n-        <div id=\"formtable\">\n-            <div class=\"tablerow alt\">\n-                <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <label for=\"name\"><wicket:message key=\"name\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"name\">[name]</span>\n-                </div>\n-            </div>\n-\n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <label for=\"conversionPattern\"><wicket:message key=\"conversionPattern\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"conversionPattern\">[conversionPattern]</span>\n-                </div>\n-            </div>\n+  <form wicket:id=\"form\">\n+    <div id=\"formtable\">\n+      <div class=\"tablerow alt\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <label for=\"name\"><wicket:message key=\"name\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"name\">[name]</span>\n+        </div>\n+      </div>\n \n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <label for=\"validatorClass\"><wicket:message key=\"validatorClass\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"validatorClass\">[validatorClass]</span>\n-                </div>\n-            </div>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <label for=\"conversionPattern\"><wicket:message key=\"conversionPattern\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"conversionPattern\">[conversionPattern]</span>\n+        </div>\n+      </div>\n \n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <label for=\"type\"><wicket:message key=\"type\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"type\">[type]</span>\n-                </div>\n-            </div>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <label for=\"validatorClass\"><wicket:message key=\"validatorClass\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"validatorClass\">[validatorClass]</span>\n+        </div>\n+      </div>\n \n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <label for=\"mandatoryCondition\"><wicket:message key=\"mandatoryCondition\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <input type=\"text\" class=\"ui-widget-content ui-corner-all\"\n-                           id=\"mandatoryCondition\" wicket:id=\"mandatoryCondition\"/>\n-                </div>\n-            </div>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <label for=\"type\"><wicket:message key=\"type\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"type\">[type]</span>\n+        </div>\n+      </div>\n \n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <label for=\"enumerationValues\"><wicket:message key=\"enumerationValues\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"enumerationValues\">[enumerationValues]</span>\n-                </div>\n-            </div>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <label for=\"mandatoryCondition\"><wicket:message key=\"mandatoryCondition\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <input type=\"text\" class=\"ui-widget-content ui-corner-all\"\n+                 id=\"mandatoryCondition\" wicket:id=\"mandatoryCondition\"/>\n+        </div>\n+      </div>\n \n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <label for=\"multivalue\" class=\"onerowlabel\"><wicket:message key=\"multivalue\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"multivalue\">[multivalue]</span>\n-                </div>\n-            </div>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <label for=\"enumerationValues\"><wicket:message key=\"enumerationValues\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"enumerationValues\">[enumerationValues]</span>\n+        </div>\n+      </div>\n \n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <label for=\"readonly\" class=\"onerowlabel\"><wicket:message key=\"readonly\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"readonly\">[readonly]</span>\n-                </div>\n-            </div>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <label for=\"enumerationKeys\"><wicket:message key=\"enumerationKeys\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"enumerationKeys\">[enumerationValues]</span>\n+        </div>\n+      </div>\n \n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <label for=\"uniqueConstraint\" class=\"onerowlabel\"><wicket:message key=\"uniqueConstraint\"/></label>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"uniqueConstraint\">[uniqueConstraint]</span>\n-                </div>\n-            </div>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <label for=\"multivalue\" class=\"onerowlabel\"><wicket:message key=\"multivalue\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"multivalue\">[multivalue]</span>\n         </div>\n+      </div>\n \n-        <script type=\"text/javascript\">\n-            $(function() {\n-                $('#formtable div.tablerow:even').addClass(\"alt\");\n-            });\n-        </script>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <label for=\"readonly\" class=\"onerowlabel\"><wicket:message key=\"readonly\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"readonly\">[readonly]</span>\n+        </div>\n+      </div>\n \n-        <div style=\"margin: 10px 0px 0\">\n-            <input type=\"submit\"\n-                   class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                   wicket:id=\"apply\"/>\n+      <div class=\"tablerow\">\n+        <div class=\"tablecolumn_label short_dynamicsize\">\n+          <label for=\"uniqueConstraint\" class=\"onerowlabel\"><wicket:message key=\"uniqueConstraint\"/></label>\n+        </div>\n+        <div class=\"tablecolumn_field medium_dynamicsize\">\n+          <span wicket:id=\"uniqueConstraint\">[uniqueConstraint]</span>\n         </div>\n-    </form>\n+      </div>\n+    </div>\n+\n+    <script type=\"text/javascript\">\n+      $(function() {\n+        $('#formtable div.tablerow:even').addClass(\"alt\");\n+      });\n+    </script>\n+\n+    <div style=\"margin: 10px 0px 0\">\n+      <input type=\"submit\"\n+             class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+             wicket:id=\"apply\"/>\n+    </div>\n+  </form>\n </div>\n </wicket:extend>"},{"sha":"9b68cf1fb09e055569a476fc9c0a92148ee752e6","filename":"console/src/main/resources/org/apache/syncope/console/pages/SchemaModalPage.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.properties?ref=b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550","patch":"@@ -21,7 +21,8 @@ tab4=User derived attributes\n create_attribute=Create new attribute\n required_alert=All form fields are required.\n mandatoryCondition=Mandatory condition\n-enumerationValues= Accepted values\n+enumerationValues= Enumeration values\n+enumerationKeys= Enumeration labels\n uniqueConstraint=Unique constraint\n multivalue=Multivalue\n multivalueAndUniqueConstr.validation='Multivalue' and 'Unique constraint' options can't be both checked"},{"sha":"f76d5d19310a49096dcc24ddddae4573bedd5d82","filename":"console/src/main/resources/org/apache/syncope/console/pages/SchemaModalPage_it.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage_it.properties?ref=b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550","patch":"@@ -21,7 +21,8 @@ tab4=Attributi utenti derivati\n create_attribute=Crea nuovo attributo\n required_alert=Tutti i campi sono richiesti\n mandatoryCondition=Vincolo d'obbligatoriet\\u00e0\n-enumerationValues= Valori ammessi\n+enumerationValues= Valori enumeration\n+enumerationKeys= Label enumeration\n multivalue=Multivalore\n type=Tipo\n validatorClass=Validatore"},{"sha":"c5726271464a5d9350d7fabfd816ada9a00ce28e","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractSchema.java","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractSchema.java?ref=b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550","patch":"@@ -79,6 +79,9 @@ public abstract class AbstractSchema extends AbstractBaseBean {\n     @Column(nullable = true)\n     private String enumerationValues;\n \n+    @Column(nullable = true)\n+    private String enumerationKeys;\n+\n     @Transient\n     private AbstractValidator validator;\n \n@@ -148,7 +151,7 @@ public AbstractValidator getValidator() {\n         if (getValidatorClass() != null && getValidatorClass().length() > 0) {\n             try {\n                 Constructor validatorConstructor = Class.forName(getValidatorClass()).getConstructor(\n-                        new Class[] { getClass().getSuperclass() });\n+                        new Class[]{getClass().getSuperclass()});\n                 validator = (AbstractValidator) validatorConstructor.newInstance(this);\n             } catch (Exception e) {\n                 LOG.error(\"Could not instantiate validator of type \" + getValidatorClass()\n@@ -179,6 +182,14 @@ public void setEnumerationValues(final String enumerationValues) {\n         this.enumerationValues = enumerationValues;\n     }\n \n+    public String getEnumerationKeys() {\n+        return enumerationKeys;\n+    }\n+\n+    public void setEnumerationKeys(String enumerationKeys) {\n+        this.enumerationKeys = enumerationKeys;\n+    }\n+\n     public String getConversionPattern() {\n         if (!getType().isConversionPatternNeeded()) {\n             LOG.debug(\"Conversion pattern is not needed: {}'s type is {}\", this, getType());"},{"sha":"472b658a9b0c15574bed2d9eea7c33286cbd6848","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/SchemaTest.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FSchemaTest.java?ref=b1cb9cb3a92d4e00ffbbabbcc2b65aedb5977550","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.persistence.dao;\n \n-import org.apache.syncope.core.persistence.dao.SchemaDAO;\n import static org.junit.Assert.*;\n \n import java.util.List;\n@@ -114,11 +113,14 @@ public void checkForEnumType() {\n         assertNotNull(ex);\n \n         schema.setEnumerationValues(\"red\" + AbstractSchema.enumValuesSeparator + \"yellow\");\n+        schema.setEnumerationKeys(\"1\" + AbstractSchema.enumValuesSeparator + \"2\");\n \n         schemaDAO.save(schema);\n \n         RSchema actual = schemaDAO.find(schema.getName(), RSchema.class);\n         assertNotNull(actual);\n+        assertNotNull(actual.getEnumerationKeys());\n+        assertFalse(actual.getEnumerationKeys().isEmpty());\n     }\n \n     @Test(expected = InvalidEntityException.class)"}]}