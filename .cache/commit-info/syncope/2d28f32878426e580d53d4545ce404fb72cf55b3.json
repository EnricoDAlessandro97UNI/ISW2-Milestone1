{"sha":"2d28f32878426e580d53d4545ce404fb72cf55b3","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJkMjhmMzI4Nzg0MjZlNTgwZDUzZDQ1NDVjZTQwNGZiNzJjZjU1YjM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-02-18T13:39:16Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-02-18T13:41:01Z"},"message":"[SYNCOPE-1502] Bring back actual result sorting","tree":{"sha":"a038e0294979e5a4fbaad4794eef552edf899ee1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a038e0294979e5a4fbaad4794eef552edf899ee1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2d28f32878426e580d53d4545ce404fb72cf55b3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2d28f32878426e580d53d4545ce404fb72cf55b3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2d28f32878426e580d53d4545ce404fb72cf55b3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2d28f32878426e580d53d4545ce404fb72cf55b3/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"d043ab8815c79573f24f44d3befb9665af4efe63","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d043ab8815c79573f24f44d3befb9665af4efe63","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d043ab8815c79573f24f44d3befb9665af4efe63"}],"stats":{"total":7,"additions":5,"deletions":2},"files":[{"sha":"ea9c5ed0cc39fbf1de3dc32f05e7b48e9c6bb51a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractAnySearchDAO.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2d28f32878426e580d53d4545ce404fb72cf55b3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2d28f32878426e580d53d4545ce404fb72cf55b3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnySearchDAO.java?ref=2d28f32878426e580d53d4545ce404fb72cf55b3","patch":"@@ -20,8 +20,9 @@\n \n import java.lang.annotation.Annotation;\n import java.lang.reflect.Field;\n-import java.util.Optional;\n+import java.util.Comparator;\n import java.util.List;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n import javax.validation.ValidationException;\n@@ -302,7 +303,9 @@ protected <T extends Any<?>> List<T> buildResult(final List<Object> raw, final A\n                 map(key -> key instanceof Object[] ? (String) ((Object[]) key)[0] : ((String) key)).\n                 collect(Collectors.toList());\n \n-        List<Any<?>> anys = anyUtilsFactory.getInstance(kind).dao().findByKeys(keys);\n+        // sort anys according to keys' sorting, as their ordering is same as raw, e.g. the actual sql query results\n+        List<Any<?>> anys = anyUtilsFactory.getInstance(kind).dao().findByKeys(keys).stream().\n+                sorted(Comparator.comparing(any -> keys.indexOf(any.getKey()))).collect(Collectors.toList());\n \n         keys.stream().filter(key -> !anys.stream().anyMatch(any -> key.equals(any.getKey()))).\n                 forEach(key -> LOG.error(\"Could not find {} with id {}, even if returned by native query\", kind, key));"}]}