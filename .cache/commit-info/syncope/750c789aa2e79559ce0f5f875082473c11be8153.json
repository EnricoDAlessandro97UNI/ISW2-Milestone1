{"sha":"750c789aa2e79559ce0f5f875082473c11be8153","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc1MGM3ODlhYTJlNzk1NTljZTBmNWY4NzUwODI0NzNjMTFiZTgxNTM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-03-14T08:20:06Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-03-14T08:20:23Z"},"message":"[SYNCOPE-1045] Properly managing exceptions when updating workflow definition from Activiti Modeler","tree":{"sha":"c596eeef17dc82a449aa4dacdebdda1b63c12687","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c596eeef17dc82a449aa4dacdebdda1b63c12687"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/750c789aa2e79559ce0f5f875082473c11be8153","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/750c789aa2e79559ce0f5f875082473c11be8153","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/750c789aa2e79559ce0f5f875082473c11be8153","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/750c789aa2e79559ce0f5f875082473c11be8153/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"a0ffad75eeb166590f05f2d80d043c56b620023c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a0ffad75eeb166590f05f2d80d043c56b620023c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a0ffad75eeb166590f05f2d80d043c56b620023c"}],"stats":{"total":24,"additions":18,"deletions":6},"files":[{"sha":"9eeab54c3ba71b0ad524e02bb766c20bcf2d1b73","filename":"client/console/src/main/java/org/apache/syncope/client/console/resources/WorkflowDefPUTResource.java","status":"modified","additions":18,"deletions":6,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/750c789aa2e79559ce0f5f875082473c11be8153/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefPUTResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/750c789aa2e79559ce0f5f875082473c11be8153/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefPUTResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefPUTResource.java?ref=750c789aa2e79559ce0f5f875082473c11be8153","patch":"@@ -21,6 +21,7 @@\n import java.io.IOException;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n import org.apache.cxf.common.util.UrlUtils;\n import org.apache.syncope.client.console.rest.WorkflowRestClient;\n import org.apache.wicket.request.resource.AbstractResource;\n@@ -39,6 +40,8 @@ public class WorkflowDefPUTResource extends AbstractResource {\n \n     private static final Logger LOG = LoggerFactory.getLogger(WorkflowDefPUTResource.class);\n \n+    private final WorkflowRestClient restClient = new WorkflowRestClient();\n+\n     @Override\n     protected ResourceResponse newResourceResponse(final Attributes attributes) {\n         String definition = null;\n@@ -53,14 +56,23 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n                 }\n             }\n         } catch (IOException e) {\n-            LOG.error(\"Could not extract workflow definition from request\", e);\n+            LOG.error(\"Could not extract workflow definition\", e);\n+        }\n+        if (definition == null) {\n+            return new ResourceResponse().setStatusCode(Response.Status.BAD_REQUEST.getStatusCode()).\n+                    setError(Response.Status.BAD_REQUEST.getStatusCode(),\n+                            \"Could not extract workflow definition\");\n         }\n \n-        new WorkflowRestClient().updateDefinition(MediaType.APPLICATION_JSON_TYPE, definition);\n-\n-        ResourceResponse response = new ResourceResponse();\n-        response.setStatusCode(204);\n-        return response;\n+        try {\n+            restClient.updateDefinition(MediaType.APPLICATION_JSON_TYPE, definition);\n+            return new ResourceResponse().setStatusCode(Response.Status.NO_CONTENT.getStatusCode());\n+        } catch (Exception e) {\n+            LOG.error(\"While updating workflow definition\", e);\n+            return new ResourceResponse().setStatusCode(Response.Status.BAD_REQUEST.getStatusCode()).\n+                    setError(Response.Status.BAD_REQUEST.getStatusCode(),\n+                            \"While updating workflow definition: \" + e.getMessage());\n+        }\n     }\n \n }"}]}