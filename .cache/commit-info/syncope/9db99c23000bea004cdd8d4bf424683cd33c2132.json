{"sha":"9db99c23000bea004cdd8d4bf424683cd33c2132","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjlkYjk5YzIzMDAwYmVhMDA0Y2RkOGQ0YmY0MjQ2ODNjZDMzYzIxMzI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-02-18T14:44:40Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-02-18T14:44:40Z"},"message":"[SYNCOPE-317] Fixing SyncopeUser.suspended management across different players\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1447284 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c2950eccf00d5a0620cb293fbffb09942db52137","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c2950eccf00d5a0620cb293fbffb09942db52137"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9db99c23000bea004cdd8d4bf424683cd33c2132","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9db99c23000bea004cdd8d4bf424683cd33c2132","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9db99c23000bea004cdd8d4bf424683cd33c2132","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9db99c23000bea004cdd8d4bf424683cd33c2132/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"dd81cbff9f7a25f11b26c5c2c43b9c2d2ff4a13b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dd81cbff9f7a25f11b26c5c2c43b9c2d2ff4a13b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dd81cbff9f7a25f11b26c5c2c43b9c2d2ff4a13b"}],"stats":{"total":163,"additions":73,"deletions":90},"files":[{"sha":"d44a97ea865c416618bb571dddee157de84e461c","filename":"client/src/main/java/org/apache/syncope/client/services/proxy/TaskServiceProxy.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9db99c23000bea004cdd8d4bf424683cd33c2132/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FTaskServiceProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9db99c23000bea004cdd8d4bf424683cd33c2132/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FTaskServiceProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fservices%2Fproxy%2FTaskServiceProxy.java?ref=9db99c23000bea004cdd8d4bf424683cd33c2132","patch":"@@ -24,10 +24,8 @@\n import java.util.HashSet;\r\n import java.util.List;\r\n import java.util.Set;\r\n-\r\n import javax.ws.rs.core.Response;\r\n import javax.xml.ws.WebServiceException;\r\n-\r\n import org.apache.syncope.common.SyncopeConstants;\r\n import org.apache.syncope.common.services.TaskService;\r\n import org.apache.syncope.common.to.JobClassTO;\r\n@@ -39,7 +37,6 @@\n import org.apache.syncope.common.to.SyncTaskTO;\r\n import org.apache.syncope.common.to.TaskExecTO;\r\n import org.apache.syncope.common.to.TaskTO;\r\n-import org.apache.syncope.common.types.PropagationTaskExecStatus;\r\n import org.apache.syncope.common.types.TaskType;\r\n import org.apache.syncope.common.util.CollectionWrapper;\r\n import org.springframework.http.HttpMethod;\r"},{"sha":"a4457816fce05a6def114c0bfba79c31f912a3e3","filename":"core/src/main/java/org/apache/syncope/core/policy/AccountPolicyEnforcer.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java?ref=9db99c23000bea004cdd8d4bf424683cd33c2132","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.policy;\n \n import java.util.regex.Pattern;\n-\n import org.apache.syncope.common.types.AccountPolicySpec;\n import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;"},{"sha":"a54092da035f9b1bc3e2f5351655b2aa99596b67","filename":"core/src/main/java/org/apache/syncope/core/security/SyncopeUserDetailsService.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeUserDetailsService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeUserDetailsService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeUserDetailsService.java?ref=9db99c23000bea004cdd8d4bf424683cd33c2132","patch":"@@ -21,7 +21,6 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-\n import org.apache.syncope.core.persistence.beans.Entitlement;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;"},{"sha":"7423082e0b95081aca2db4e73b02dd89f5a1427a","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/SyncopeSyncResultHandler.java","status":"modified","additions":10,"deletions":8,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FSyncopeSyncResultHandler.java?ref=9db99c23000bea004cdd8d4bf424683cd33c2132","patch":"@@ -430,7 +430,7 @@ public List<Long> findExisting(final String uid, final ConnectorObject connObj,\n             syncRule = attrUtil.getCorrelationRule(policySpec);\n             altSearchSchemas = attrUtil.getAltSearchSchemas(policySpec);\n         }\n-        \n+\n         return syncRule == null ? altSearchSchemas == null\n                 ? findByAccountIdItem(uid, attrUtil)\n                 : findByAttributableSearch(connObj, altSearchSchemas, attrUtil)\n@@ -594,14 +594,16 @@ protected void updateUser(final Long id, SyncDelta delta, final boolean dryRun,\n \n         Boolean enabled = readEnabled(delta.getObject());\n         if (enabled != null) {\n-            WorkflowResult<Long> enableUpdate = null;\n-\n             SyncopeUser user = userDAO.find(id);\n-            enableUpdate = user.isSuspended() == null\n-                    ? uwfAdapter.activate(id, null)\n-                    : enabled\n-                    ? uwfAdapter.reactivate(id)\n-                    : uwfAdapter.suspend(id);\n+\n+            WorkflowResult<Long> enableUpdate = null;\n+            if (user.isSuspended() == null) {\n+                enableUpdate = uwfAdapter.activate(id, null);\n+            } else if (enabled && user.isSuspended()) {\n+                enableUpdate = uwfAdapter.reactivate(id);\n+            } else if (!enabled && !user.isSuspended()) {\n+                enableUpdate = uwfAdapter.suspend(id);\n+            }\n \n             if (enableUpdate != null) {\n                 if (enableUpdate.getPropByRes() != null) {"},{"sha":"5c8472616e8effe1098d3074375291f784e5f09e","filename":"core/src/main/java/org/apache/syncope/core/workflow/WorkflowException.java","status":"modified","additions":11,"deletions":2,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowException.java?ref=9db99c23000bea004cdd8d4bf424683cd33c2132","patch":"@@ -21,8 +21,7 @@\n import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n \n /**\n- * Wrapper for all workflow related exceptions. Original exceptions will depend\n- * on UserWorkflowAdapter implementation.\n+ * Wrapper for all workflow related exceptions. Original exceptions will depend on UserWorkflowAdapter implementation.\n  *\n  * @see UserWorkflowAdapter\n  */\n@@ -41,4 +40,14 @@ public class WorkflowException extends RuntimeException {\n     public WorkflowException(final Throwable cause) {\n         super(cause);\n     }\n+\n+    /**\n+     * Return a new instance wrapping the original workflow exception, additionally providing a local message.\n+     *\n+     * @param message local message\n+     * @param cause original workflow exception\n+     */\n+    public WorkflowException(final String message, final Throwable cause) {\n+        super(message, cause);\n+    }\n }"},{"sha":"1f2382c3c09c43199ea3c68e189d567f3363024e","filename":"core/src/main/java/org/apache/syncope/core/workflow/WorkflowUserSuspender.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowUserSuspender.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowUserSuspender.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2FWorkflowUserSuspender.java?ref=9db99c23000bea004cdd8d4bf424683cd33c2132","patch":"@@ -21,7 +21,6 @@\n import java.util.AbstractMap.SimpleEntry;\n import java.util.List;\n import java.util.Map;\n-\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;"},{"sha":"08600c1fad7470d3d8325873df1a1c6a2d145f1e","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/AbstractUserWorkflowAdapter.java","status":"modified","additions":5,"deletions":9,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FAbstractUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FAbstractUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FAbstractUserWorkflowAdapter.java?ref=9db99c23000bea004cdd8d4bf424683cd33c2132","patch":"@@ -23,7 +23,6 @@\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.rest.controller.UnauthorizedRoleException;\n import org.apache.syncope.core.rest.data.UserDataBinder;\n@@ -58,7 +57,7 @@ public WorkflowResult<Entry<Long, Boolean>> create(final UserTO userTO)\n \n     @Override\n     public WorkflowResult<Long> activate(final Long userId, final String token)\n-            throws UnauthorizedRoleException, NotFoundException, WorkflowException {\n+            throws UnauthorizedRoleException, WorkflowException {\n \n         return doActivate(dataBinder.getUserFromId(userId), token);\n     }\n@@ -68,7 +67,7 @@ protected abstract WorkflowResult<Map.Entry<Long, Boolean>> doUpdate(SyncopeUser\n \n     @Override\n     public WorkflowResult<Map.Entry<Long, Boolean>> update(final UserMod userMod)\n-            throws UnauthorizedRoleException, NotFoundException, WorkflowException {\n+            throws UnauthorizedRoleException, WorkflowException {\n \n         return doUpdate(dataBinder.getUserFromId(userMod.getId()), userMod);\n     }\n@@ -77,14 +76,13 @@ public WorkflowResult<Map.Entry<Long, Boolean>> update(final UserMod userMod)\n \n     @Override\n     public WorkflowResult<Long> suspend(final Long userId)\n-            throws UnauthorizedRoleException, NotFoundException, WorkflowException {\n+            throws UnauthorizedRoleException, WorkflowException {\n \n         return suspend(dataBinder.getUserFromId(userId));\n     }\n \n     @Override\n     public WorkflowResult<Long> suspend(final SyncopeUser user) throws UnauthorizedRoleException, WorkflowException {\n-\n         // set suspended flag\n         user.setSuspended(Boolean.TRUE);\n \n@@ -94,9 +92,7 @@ public WorkflowResult<Long> suspend(final SyncopeUser user) throws UnauthorizedR\n     protected abstract WorkflowResult<Long> doReactivate(SyncopeUser user) throws WorkflowException;\n \n     @Override\n-    public WorkflowResult<Long> reactivate(final Long userId)\n-            throws UnauthorizedRoleException, NotFoundException, WorkflowException {\n-\n+    public WorkflowResult<Long> reactivate(final Long userId) throws UnauthorizedRoleException, WorkflowException {\n         final SyncopeUser user = dataBinder.getUserFromId(userId);\n \n         // reset failed logins\n@@ -111,7 +107,7 @@ public WorkflowResult<Long> reactivate(final Long userId)\n     protected abstract void doDelete(SyncopeUser user) throws WorkflowException;\n \n     @Override\n-    public void delete(final Long userId) throws UnauthorizedRoleException, NotFoundException, WorkflowException {\n+    public void delete(final Long userId) throws UnauthorizedRoleException, WorkflowException {\n         doDelete(dataBinder.getUserFromId(userId));\n     }\n }"},{"sha":"a0838f92ac795b61e1b2532a9fa5401446ed72a0","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/NoOpUserWorkflowAdapter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java?ref=9db99c23000bea004cdd8d4bf424683cd33c2132","patch":"@@ -95,7 +95,7 @@ protected WorkflowResult<Long> doActivate(final SyncopeUser user, final String t\n             throws WorkflowException {\n \n         if (!user.checkToken(token)) {\n-            throw new WorkflowException(new RuntimeException(\"Wrong token: \" + token));\n+            throw new WorkflowException(new IllegalArgumentException(\"Wrong token: \" + token + \" for \" + user));\n         }\n \n         user.removeToken();"},{"sha":"3a5f48ff36d4227aa15ca735d719322b363b7fb3","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/UserWorkflowAdapter.java","status":"modified","additions":6,"deletions":15,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FUserWorkflowAdapter.java?ref=9db99c23000bea004cdd8d4bf424683cd33c2132","patch":"@@ -22,7 +22,6 @@\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n-import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.apache.syncope.core.rest.controller.UnauthorizedRoleException;\n import org.apache.syncope.core.workflow.WorkflowAdapter;\n import org.apache.syncope.core.workflow.WorkflowException;\n@@ -75,11 +74,9 @@ WorkflowResult<Map.Entry<Long, Boolean>> create(UserTO userTO, boolean disablePw\n      * @param taskId to be executed\n      * @return user just updated\n      * @throws UnauthorizedRoleException authorization exception\n-     * @throws NotFoundException user not found exception\n      * @throws WorkflowException workflow exception\n      */\n-    WorkflowResult<Long> execute(UserTO userTO, String taskId)\n-            throws UnauthorizedRoleException, NotFoundException, WorkflowException;\n+    WorkflowResult<Long> execute(UserTO userTO, String taskId) throws UnauthorizedRoleException, WorkflowException;\n \n     /**\n      * Activate an user.\n@@ -88,34 +85,30 @@ WorkflowResult<Long> execute(UserTO userTO, String taskId)\n      * @param token to be verified for activation\n      * @return user just updated\n      * @throws UnauthorizedRoleException authorization exception\n-     * @throws NotFoundException user not found exception\n      * @throws WorkflowException workflow exception\n      */\n-    WorkflowResult<Long> activate(Long userId, String token)\n-            throws UnauthorizedRoleException, NotFoundException, WorkflowException;\n+    WorkflowResult<Long> activate(Long userId, String token) throws UnauthorizedRoleException, WorkflowException;\n \n     /**\n      * Update an user.\n      *\n      * @param userMod modification set to be performed\n      * @return user just updated and propagations to be performed\n      * @throws UnauthorizedRoleException authorization exception\n-     * @throws NotFoundException user not found exception\n      * @throws WorkflowException workflow exception\n      */\n     WorkflowResult<Map.Entry<Long, Boolean>> update(UserMod userMod)\n-            throws UnauthorizedRoleException, NotFoundException, WorkflowException;\n+            throws UnauthorizedRoleException, WorkflowException;\n \n     /**\n      * Suspend an user.\n      *\n      * @param userId user to be suspended\n      * @return user just suspended\n      * @throws UnauthorizedRoleException authorization exception\n-     * @throws NotFoundException user not found exception\n      * @throws WorkflowException workflow exception\n      */\n-    WorkflowResult<Long> suspend(Long userId) throws UnauthorizedRoleException, NotFoundException, WorkflowException;\n+    WorkflowResult<Long> suspend(Long userId) throws UnauthorizedRoleException, WorkflowException;\n \n     /**\n      * Suspend an user.\n@@ -133,18 +126,16 @@ WorkflowResult<Map.Entry<Long, Boolean>> update(UserMod userMod)\n      * @param userId user to be reactivated\n      * @return user just reactivated\n      * @throws UnauthorizedRoleException authorization exception\n-     * @throws NotFoundException user not found exception\n      * @throws WorkflowException workflow exception\n      */\n-    WorkflowResult<Long> reactivate(Long userId) throws UnauthorizedRoleException, NotFoundException, WorkflowException;\n+    WorkflowResult<Long> reactivate(Long userId) throws UnauthorizedRoleException, WorkflowException;\n \n     /**\n      * Delete an user.\n      *\n      * @param userId user to be deleted\n      * @throws UnauthorizedRoleException authorization exception\n-     * @throws NotFoundException user not found exception\n      * @throws WorkflowException workflow exception\n      */\n-    void delete(Long userId) throws UnauthorizedRoleException, NotFoundException, WorkflowException;\n+    void delete(Long userId) throws UnauthorizedRoleException, WorkflowException;\n }"},{"sha":"80b1905edab870d11805602f2dcf3683a8e2b869","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":36,"deletions":47,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=9db99c23000bea004cdd8d4bf424683cd33c2132","patch":"@@ -53,6 +53,7 @@\n import org.activiti.engine.repository.ProcessDefinition;\n import org.activiti.engine.runtime.ProcessInstance;\n import org.activiti.engine.task.Task;\n+import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang.StringUtils;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.UserTO;\n@@ -212,14 +213,19 @@ public WorkflowResult<Map.Entry<Long, Boolean>> create(final UserTO userTO, fina\n \n         final ProcessInstance processInstance;\n         try {\n-            processInstance = runtimeService.startProcessInstanceByKey(\"userWorkflow\", variables);\n+            processInstance = runtimeService.startProcessInstanceByKey(WF_PROCESS_ID, variables);\n         } catch (ActivitiException e) {\n-            throw new WorkflowException(e);\n+            throw new WorkflowException(\"While starting \" + WF_PROCESS_ID + \" instance\", e);\n         }\n \n         SyncopeUser user = (SyncopeUser) runtimeService.getVariable(processInstance.getProcessInstanceId(),\n                 SYNCOPE_USER);\n \n+        Boolean updatedEnabled = (Boolean) runtimeService.getVariable(processInstance.getProcessInstanceId(), ENABLED);\n+        if (updatedEnabled != null) {\n+            user.setSuspended(!updatedEnabled);\n+        }\n+\n         // this will make SyncopeUserValidator not to consider password policies at all\n         if (disablePwdPolicyCheck) {\n             user.removeClearPassword();\n@@ -277,7 +283,7 @@ private Set<String> doExecuteTask(final SyncopeUser user, final String task,\n             try {\n                 taskService.complete(tasks.get(0).getId(), variables);\n             } catch (ActivitiException e) {\n-                throw new WorkflowException(e);\n+                throw new WorkflowException(\"While completing task '\" + tasks.get(0).getName() + \"' for \" + user, e);\n             }\n         } else {\n             LOG.warn(\"Expected a single task, found {}\", tasks.size());\n@@ -362,7 +368,7 @@ protected void doDelete(final SyncopeUser user)\n \n     @Override\n     public WorkflowResult<Long> execute(final UserTO userTO, final String taskId)\n-            throws UnauthorizedRoleException, NotFoundException, WorkflowException {\n+            throws UnauthorizedRoleException, WorkflowException {\n \n         SyncopeUser user = dataBinder.getUserFromId(userTO.getId());\n \n@@ -376,17 +382,20 @@ public WorkflowResult<Long> execute(final UserTO userTO, final String taskId)\n         return new WorkflowResult<Long>(updated.getId(), null, performedTasks);\n     }\n \n-    @Override\n-    public WorkflowDefinitionTO getDefinition()\n-            throws WorkflowException {\n-\n-        ProcessDefinition procDef;\n+    protected ProcessDefinition getProcessDefinition() {\n         try {\n-            procDef = repositoryService.createProcessDefinitionQuery().processDefinitionKey(\n+            return repositoryService.createProcessDefinitionQuery().processDefinitionKey(\n                     ActivitiUserWorkflowAdapter.WF_PROCESS_ID).latestVersion().singleResult();\n         } catch (ActivitiException e) {\n-            throw new WorkflowException(e);\n+            throw new WorkflowException(\"While accessing process \" + ActivitiUserWorkflowAdapter.WF_PROCESS_ID, e);\n         }\n+    }\n+\n+    @Override\n+    public WorkflowDefinitionTO getDefinition()\n+            throws WorkflowException {\n+\n+        ProcessDefinition procDef = getProcessDefinition();\n \n         InputStream procDefIS = repositoryService.getResourceAsStream(procDef.getDeploymentId(), WF_PROCESS_RESOURCE);\n         Reader reader = null;\n@@ -402,16 +411,8 @@ public WorkflowDefinitionTO getDefinition()\n         } catch (IOException e) {\n             LOG.error(\"While reading workflow definition {}\", procDef.getKey(), e);\n         } finally {\n-            try {\n-                if (reader != null) {\n-                    reader.close();\n-                }\n-                if (procDefIS != null) {\n-                    procDefIS.close();\n-                }\n-            } catch (IOException ioe) {\n-                LOG.error(\"While closing input stream for {}\", procDef.getKey(), ioe);\n-            }\n+            IOUtils.closeQuietly(reader);\n+            IOUtils.closeQuietly(procDefIS);\n         }\n \n         WorkflowDefinitionTO definitionTO = new WorkflowDefinitionTO();\n@@ -423,18 +424,17 @@ public WorkflowDefinitionTO getDefinition()\n \n     @Override\n     public void updateDefinition(final WorkflowDefinitionTO definition)\n-            throws NotFoundException, WorkflowException {\n+            throws WorkflowException {\n \n         if (!ActivitiUserWorkflowAdapter.WF_PROCESS_ID.equals(definition.getId())) {\n-\n             throw new NotFoundException(\"Workflow process id \" + definition.getId());\n         }\n \n         try {\n             repositoryService.createDeployment().addInputStream(ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE,\n                     new ByteArrayInputStream(definition.getXmlDefinition().getBytes())).deploy();\n         } catch (ActivitiException e) {\n-            throw new WorkflowException(e);\n+            throw new WorkflowException(\"While updating process \" + ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE, e);\n         }\n     }\n \n@@ -444,13 +444,7 @@ public List<String> getDefinedTasks()\n \n         List<String> result = new ArrayList<String>();\n \n-        ProcessDefinition procDef;\n-        try {\n-            procDef = repositoryService.createProcessDefinitionQuery().processDefinitionKey(\n-                    ActivitiUserWorkflowAdapter.WF_PROCESS_ID).latestVersion().singleResult();\n-        } catch (ActivitiException e) {\n-            throw new WorkflowException(e);\n-        }\n+        ProcessDefinition procDef = getProcessDefinition();\n \n         InputStream procDefIS = repositoryService.getResourceAsStream(procDef.getDeploymentId(), WF_PROCESS_RESOURCE);\n \n@@ -467,13 +461,9 @@ public List<String> getDefinedTasks()\n                 result.add(nodeList.item(i).getAttributes().getNamedItem(\"id\").getNodeValue());\n             }\n         } catch (Exception e) {\n-            throw new WorkflowException(e);\n+            throw new WorkflowException(\"While reading defined tasks\", e);\n         } finally {\n-            try {\n-                procDefIS.close();\n-            } catch (IOException ioe) {\n-                LOG.error(\"While closing input stream for {}\", procDef.getKey(), ioe);\n-            }\n+            IOUtils.closeQuietly(procDefIS);\n         }\n \n         return result;\n@@ -560,7 +550,7 @@ public WorkflowFormTO getForm(final String workflowId)\n         try {\n             task = taskService.createTaskQuery().processInstanceId(workflowId).singleResult();\n         } catch (ActivitiException e) {\n-            throw new WorkflowException(e);\n+            throw new WorkflowException(\"While reading form for workflow instance \" + workflowId, e);\n         }\n \n         TaskFormData formData;\n@@ -579,9 +569,7 @@ public WorkflowFormTO getForm(final String workflowId)\n         return result;\n     }\n \n-    private Map.Entry<Task, TaskFormData> checkTask(final String taskId, final String username)\n-            throws NotFoundException {\n-\n+    private Map.Entry<Task, TaskFormData> checkTask(final String taskId, final String username) {\n         Task task;\n         try {\n             task = taskService.createTaskQuery().taskId(taskId).singleResult();\n@@ -608,14 +596,15 @@ private Map.Entry<Task, TaskFormData> checkTask(final String taskId, final Strin\n \n     @Override\n     public WorkflowFormTO claimForm(final String taskId, final String username)\n-            throws NotFoundException, WorkflowException {\n+            throws WorkflowException {\n \n         Map.Entry<Task, TaskFormData> checked = checkTask(taskId, username);\n \n         if (!adminUser.equals(username)) {\n             List<Task> tasksForUser = taskService.createTaskQuery().taskId(taskId).taskCandidateUser(username).list();\n             if (tasksForUser.isEmpty()) {\n-                throw new WorkflowException(new RuntimeException(username + \" is not candidate for task \" + taskId));\n+                throw new WorkflowException(\n+                        new IllegalArgumentException(username + \" is not candidate for task \" + taskId));\n             }\n         }\n \n@@ -624,20 +613,20 @@ public WorkflowFormTO claimForm(final String taskId, final String username)\n             taskService.setOwner(taskId, username);\n             task = taskService.createTaskQuery().taskId(taskId).singleResult();\n         } catch (ActivitiException e) {\n-            throw new WorkflowException(e);\n+            throw new WorkflowException(\"While reading task \" + taskId, e);\n         }\n \n         return getFormTO(task, checked.getValue());\n     }\n \n     @Override\n     public WorkflowResult<Map.Entry<Long, String>> submitForm(final WorkflowFormTO form, final String username)\n-            throws NotFoundException, WorkflowException {\n+            throws WorkflowException {\n \n         Map.Entry<Task, TaskFormData> checked = checkTask(form.getTaskId(), username);\n \n         if (!checked.getKey().getOwner().equals(username)) {\n-            throw new WorkflowException(new RuntimeException(\"Task \" + form.getTaskId() + \" assigned to \"\n+            throw new WorkflowException(new IllegalArgumentException(\"Task \" + form.getTaskId() + \" assigned to \"\n                     + checked.getKey().getOwner() + \" but submited by \" + username));\n         }\n \n@@ -650,7 +639,7 @@ public WorkflowResult<Map.Entry<Long, String>> submitForm(final WorkflowFormTO f\n         try {\n             formService.submitTaskFormData(form.getTaskId(), form.getPropertiesForSubmit());\n         } catch (ActivitiException e) {\n-            throw new WorkflowException(e);\n+            throw new WorkflowException(\"While submitting form for task \" + form.getTaskId(), e);\n         }\n \n         Set<String> postTasks = getPerformedTasks(user);"},{"sha":"1aad3bc2182fdff86df9947d860c1276db970eb8","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/task/AutoActivate.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2Ftask%2FAutoActivate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2Ftask%2FAutoActivate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2Ftask%2FAutoActivate.java?ref=9db99c23000bea004cdd8d4bf424683cd33c2132","patch":"@@ -25,7 +25,6 @@ public class AutoActivate extends AbstractActivitiDelegate {\n \n     @Override\n     protected void doExecute(final DelegateExecution execution) throws Exception {\n-\n         execution.setVariable(ActivitiUserWorkflowAdapter.PROPAGATE_ENABLE, Boolean.TRUE);\n     }\n }"},{"sha":"5b39692af383709d41a24e4c1a7d4a79afbe793c","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9db99c23000bea004cdd8d4bf424683cd33c2132/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=9db99c23000bea004cdd8d4bf424683cd33c2132","patch":"@@ -44,11 +44,11 @@\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.SchedTaskTO;\n import org.apache.syncope.common.to.SyncActionClassTO;\n+import org.apache.syncope.common.to.SyncPolicyTO;\n import org.apache.syncope.common.to.SyncTaskTO;\n import org.apache.syncope.common.to.TaskExecTO;\n import org.apache.syncope.common.to.TaskTO;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.common.to.SyncPolicyTO;\n import org.apache.syncope.common.types.IntMappingType;\n import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\n@@ -327,6 +327,9 @@ public void sync() {\n             userTO = userService.read(\"test3\");\n             assertNotNull(userTO);\n             assertEquals(\"active\", userTO.getStatus());\n+\n+            // SYNCOPE-317\n+            execSyncTask(SYNC_TASK_ID, 50, false);\n         } finally {\n             removeTestUsers();\n         }"}]}