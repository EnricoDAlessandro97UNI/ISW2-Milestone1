{"sha":"75ee922abd7072ef1d87824e1388eaa5facfcd04","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc1ZWU5MjJhYmQ3MDcyZWYxZDg3ODI0ZTEzODhlYWE1ZmFjZmNkMDQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-12-26T15:53:45Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-12-26T16:25:46Z"},"message":"Enhancing Swagger friendliness for REST services","tree":{"sha":"eb649955fb29ea819e3ad2e2bbb9b0c89034c0bf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/eb649955fb29ea819e3ad2e2bbb9b0c89034c0bf"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/75ee922abd7072ef1d87824e1388eaa5facfcd04","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/75ee922abd7072ef1d87824e1388eaa5facfcd04","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/75ee922abd7072ef1d87824e1388eaa5facfcd04","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/75ee922abd7072ef1d87824e1388eaa5facfcd04/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b3af58c1eb8179d70c6c450010f3c049e87664e5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b3af58c1eb8179d70c6c450010f3c049e87664e5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b3af58c1eb8179d70c6c450010f3c049e87664e5"}],"stats":{"total":853,"additions":578,"deletions":275},"files":[{"sha":"b9412808e66ccb6d8dac4af3be2b39033bac675c","filename":"client/console/src/main/java/org/apache/syncope/client/console/bulk/BulkContent.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -184,8 +184,8 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                 throw new IllegalArgumentException(\"Invalid bulk action executor\");\n                             }\n \n-                            final AbstractAnyRestClient<?, ?> anyRestClient = AbstractAnyRestClient.class.cast(\n-                                    bulkActionExecutor);\n+                            final AbstractAnyRestClient<?> anyRestClient = AbstractAnyRestClient.class.\n+                                    cast(bulkActionExecutor);\n \n                             // Group bean information by anyKey\n                             final Map<String, List<StatusBean>> beans = new HashMap<>();"},{"sha":"ff4161c57636b42a529201e608410de22fc08b73","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/AnyDataProvider.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAnyDataProvider.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -42,7 +42,7 @@\n \n     private final SortableAnyProviderComparator<A> comparator;\n \n-    private final AbstractAnyRestClient<A, ?> restClient;\n+    private final AbstractAnyRestClient<A> restClient;\n \n     protected String fiql;\n \n@@ -55,7 +55,7 @@\n     private final PageReference pageRef;\n \n     public AnyDataProvider(\n-            final AbstractAnyRestClient<A, ?> restClient,\n+            final AbstractAnyRestClient<A> restClient,\n             final int paginatorRows,\n             final boolean filtered,\n             final String realm,"},{"sha":"3ce39ea42f0acc219c5c2ca29ae4987af86d1904","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/ResourceStatusDataProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FResourceStatusDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FResourceStatusDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FResourceStatusDataProvider.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -48,7 +48,7 @@ public class ResourceStatusDataProvider extends DirectoryDataProvider<StatusBean\n \n     private final SortableDataProviderComparator<StatusBean> comparator;\n \n-    private final AbstractAnyRestClient<? extends AnyTO, ?> restClient;\n+    private final AbstractAnyRestClient<? extends AnyTO> restClient;\n \n     protected String fiql;\n "},{"sha":"427953b7497a5b4f13fdcbc26c719d600464d878","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -61,7 +61,7 @@\n import org.apache.wicket.model.util.ListModel;\n import org.springframework.util.ReflectionUtils;\n \n-public abstract class AnyDirectoryPanel<A extends AnyTO, E extends AbstractAnyRestClient<A, ?>>\n+public abstract class AnyDirectoryPanel<A extends AnyTO, E extends AbstractAnyRestClient<A>>\n         extends DirectoryPanel<A, AnyWrapper<A>, AnyDataProvider<A>, E> {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n@@ -234,7 +234,7 @@ public interface AnyDirectoryPanelBuilder extends Serializable {\n         List<AnyTypeClassTO> getAnyTypeClassTOs();\n     }\n \n-    public abstract static class Builder<A extends AnyTO, E extends AbstractAnyRestClient<A, ?>>\n+    public abstract static class Builder<A extends AnyTO, E extends AbstractAnyRestClient<A>>\n             extends DirectoryPanel.Builder<A, AnyWrapper<A>, E>\n             implements AnyDirectoryPanelBuilder {\n "},{"sha":"3ce4143d5b6e8bdd41cff7815d0e3516a53e10c8","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AnySelectionDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -35,7 +35,7 @@\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.model.IModel;\n \n-public abstract class AnySelectionDirectoryPanel<A extends AnyTO, E extends AbstractAnyRestClient<A, ?>>\n+public abstract class AnySelectionDirectoryPanel<A extends AnyTO, E extends AbstractAnyRestClient<A>>\n         extends AnyDirectoryPanel<A, E> {\n \n     private static final long serialVersionUID = -1100228004207271272L;\n@@ -71,7 +71,7 @@ protected Collection<ActionType> getBulkActions() {\n         return Collections.<ActionType>emptyList();\n     }\n \n-    public abstract static class Builder<A extends AnyTO, E extends AbstractAnyRestClient<A, ?>>\n+    public abstract static class Builder<A extends AnyTO, E extends AbstractAnyRestClient<A>>\n             extends AnyDirectoryPanel.Builder<A, E> {\n \n         private static final long serialVersionUID = 5460024856989891156L;"},{"sha":"4cfdddbc69dbc4f085edf35279c54866f9e69942","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AbstractAnyRestClient.java","status":"modified","additions":8,"deletions":27,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -20,10 +20,8 @@\n \n import java.util.List;\n import javax.ws.rs.core.GenericType;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.syncope.client.console.commons.status.StatusUtils;\n-import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.patch.AssociationPatch;\n import org.apache.syncope.common.lib.patch.DeassociationPatch;\n import org.apache.syncope.common.lib.patch.StatusPatch;\n@@ -36,11 +34,11 @@\n import org.apache.syncope.common.rest.api.service.AnyService;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n \n-public abstract class AbstractAnyRestClient<TO extends AnyTO, P extends AnyPatch> extends BaseRestClient {\n+public abstract class AbstractAnyRestClient<TO extends AnyTO> extends BaseRestClient {\n \n     private static final long serialVersionUID = 1962529678091410544L;\n \n-    protected abstract Class<? extends AnyService<TO, P>> getAnyServiceClass();\n+    protected abstract Class<? extends AnyService<TO>> getAnyServiceClass();\n \n     public abstract int searchCount(String realm, String fiql, String type);\n \n@@ -50,23 +48,6 @@ public TO read(final String key) {\n         return getService(getAnyServiceClass()).read(key);\n     }\n \n-    public ProvisioningResult<TO> create(final TO to) {\n-        Response response = getService(getAnyServiceClass()).create(to);\n-        return response.readEntity(new GenericType<ProvisioningResult<TO>>() {\n-        });\n-    }\n-\n-    public ProvisioningResult<TO> update(final String etag, final P patch) {\n-        ProvisioningResult<TO> result;\n-        synchronized (this) {\n-            result = getService(etag, getAnyServiceClass()).update(patch).\n-                    readEntity(new GenericType<ProvisioningResult<TO>>() {\n-                    });\n-            resetClient(getAnyServiceClass());\n-        }\n-        return result;\n-    }\n-\n     public ProvisioningResult<TO> delete(final String etag, final String key) {\n         ProvisioningResult<TO> result;\n         synchronized (this) {\n@@ -81,7 +62,7 @@ public ProvisioningResult<TO> delete(final String etag, final String key) {\n     public BulkActionResult unlink(final String etag, final String key, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n-            AnyService<?, ?> service = getService(etag, getAnyServiceClass());\n+            AnyService<?> service = getService(etag, getAnyServiceClass());\n \n             DeassociationPatch deassociationPatch = new DeassociationPatch.Builder().key(key).\n                     action(ResourceDeassociationAction.UNLINK).\n@@ -97,7 +78,7 @@ public BulkActionResult unlink(final String etag, final String key, final List<S\n     public BulkActionResult link(final String etag, final String key, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n-            AnyService<?, ?> service = getService(etag, getAnyServiceClass());\n+            AnyService<?> service = getService(etag, getAnyServiceClass());\n \n             StatusPatch statusPatch = StatusUtils.buildStatusPatch(statuses);\n \n@@ -116,7 +97,7 @@ public BulkActionResult link(final String etag, final String key, final List<Sta\n     public BulkActionResult deprovision(final String etag, final String key, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n-            AnyService<?, ?> service = getService(etag, getAnyServiceClass());\n+            AnyService<?> service = getService(etag, getAnyServiceClass());\n \n             DeassociationPatch deassociationPatch = new DeassociationPatch.Builder().key(key).\n                     action(ResourceDeassociationAction.DEPROVISION).\n@@ -132,7 +113,7 @@ public BulkActionResult deprovision(final String etag, final String key, final L\n     public BulkActionResult provision(final String etag, final String key, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n-            AnyService<?, ?> service = getService(etag, getAnyServiceClass());\n+            AnyService<?> service = getService(etag, getAnyServiceClass());\n \n             StatusPatch statusPatch = StatusUtils.buildStatusPatch(statuses);\n \n@@ -151,7 +132,7 @@ public BulkActionResult provision(final String etag, final String key, final Lis\n     public BulkActionResult unassign(final String etag, final String key, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n-            AnyService<?, ?> service = getService(etag, getAnyServiceClass());\n+            AnyService<?> service = getService(etag, getAnyServiceClass());\n \n             DeassociationPatch deassociationPatch = new DeassociationPatch.Builder().key(key).\n                     action(ResourceDeassociationAction.UNASSIGN).\n@@ -167,7 +148,7 @@ public BulkActionResult unassign(final String etag, final String key, final List\n     public BulkActionResult assign(final String etag, final String key, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n-            AnyService<?, ?> service = getService(etag, getAnyServiceClass());\n+            AnyService<?> service = getService(etag, getAnyServiceClass());\n \n             StatusPatch statusPatch = StatusUtils.buildStatusPatch(statuses);\n "},{"sha":"31cd3a87a35fa074019aa2b1d1a9f7d51161d3fb","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AnyObjectRestClient.java","status":"modified","additions":25,"deletions":3,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -18,9 +18,14 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n+import static org.apache.syncope.client.console.rest.BaseRestClient.getService;\n+\n import java.util.List;\n+import javax.ws.rs.core.GenericType;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.rest.api.beans.AnyQuery;\n import org.apache.syncope.common.rest.api.service.AnyObjectService;\n import org.apache.syncope.common.rest.api.service.AnyService;\n@@ -29,15 +34,32 @@\n /**\n  * Console client for invoking Rest any type class services.\n  */\n-public class AnyObjectRestClient extends AbstractAnyRestClient<AnyObjectTO, AnyObjectPatch> {\n+public class AnyObjectRestClient extends AbstractAnyRestClient<AnyObjectTO> {\n \n     private static final long serialVersionUID = -8874495991295283249L;\n \n     @Override\n-    protected Class<? extends AnyService<AnyObjectTO, AnyObjectPatch>> getAnyServiceClass() {\n+    protected Class<? extends AnyService<AnyObjectTO>> getAnyServiceClass() {\n         return AnyObjectService.class;\n     }\n \n+    public ProvisioningResult<AnyObjectTO> create(final AnyObjectTO anyObjectTO) {\n+        Response response = getService(AnyObjectService.class).create(anyObjectTO);\n+        return response.readEntity(new GenericType<ProvisioningResult<AnyObjectTO>>() {\n+        });\n+    }\n+\n+    public ProvisioningResult<AnyObjectTO> update(final String etag, final AnyObjectPatch patch) {\n+        ProvisioningResult<AnyObjectTO> result;\n+        synchronized (this) {\n+            result = getService(etag, AnyObjectService.class).update(patch).\n+                    readEntity(new GenericType<ProvisioningResult<AnyObjectTO>>() {\n+                    });\n+            resetClient(getAnyServiceClass());\n+        }\n+        return result;\n+    }\n+\n     @Override\n     public int searchCount(final String realm, final String fiql, final String type) {\n         return getService(AnyObjectService.class).\n@@ -52,6 +74,6 @@ public List<AnyObjectTO> search(final String realm, final String fiql, final int\n \n         return getService(AnyObjectService.class).search(\n                 new AnyQuery.Builder().realm(realm).fiql(fiql).page(page).size(size).\n-                orderBy(toOrderBy(sort)).details(false).build()).getResult();\n+                        orderBy(toOrderBy(sort)).details(false).build()).getResult();\n     }\n }"},{"sha":"c7ff004f81c40e31a89946951a96f15c5a214180","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"modified","additions":22,"deletions":2,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -20,9 +20,12 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import javax.ws.rs.core.GenericType;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.patch.GroupPatch;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.PagedResult;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.types.BulkMembersActionType;\n import org.apache.syncope.common.rest.api.beans.AnyQuery;\n import org.apache.syncope.common.rest.api.service.AnyService;\n@@ -32,15 +35,32 @@\n /**\n  * Console client for invoking Rest Group's services.\n  */\n-public class GroupRestClient extends AbstractAnyRestClient<GroupTO, GroupPatch> {\n+public class GroupRestClient extends AbstractAnyRestClient<GroupTO> {\n \n     private static final long serialVersionUID = -8549081557283519638L;\n \n     @Override\n-    protected Class<? extends AnyService<GroupTO, GroupPatch>> getAnyServiceClass() {\n+    protected Class<? extends AnyService<GroupTO>> getAnyServiceClass() {\n         return GroupService.class;\n     }\n \n+    public ProvisioningResult<GroupTO> create(final GroupTO groupTO) {\n+        Response response = getService(GroupService.class).create(groupTO);\n+        return response.readEntity(new GenericType<ProvisioningResult<GroupTO>>() {\n+        });\n+    }\n+\n+    public ProvisioningResult<GroupTO> update(final String etag, final GroupPatch patch) {\n+        ProvisioningResult<GroupTO> result;\n+        synchronized (this) {\n+            result = getService(etag, GroupService.class).update(patch).\n+                    readEntity(new GenericType<ProvisioningResult<GroupTO>>() {\n+                    });\n+            resetClient(getAnyServiceClass());\n+        }\n+        return result;\n+    }\n+\n     @Override\n     public int searchCount(final String realm, final String fiql, final String type) {\n         return getService(GroupService.class)."},{"sha":"b64ff9b9dbff2974b9d71abf4f960b81395a908e","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":13,"deletions":2,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -42,12 +42,12 @@\n /**\n  * Console client for invoking rest users services.\n  */\n-public class UserRestClient extends AbstractAnyRestClient<UserTO, UserPatch> {\n+public class UserRestClient extends AbstractAnyRestClient<UserTO> {\n \n     private static final long serialVersionUID = -1575748964398293968L;\n \n     @Override\n-    protected Class<? extends AnyService<UserTO, UserPatch>> getAnyServiceClass() {\n+    protected Class<? extends AnyService<UserTO>> getAnyServiceClass() {\n         return UserService.class;\n     }\n \n@@ -57,6 +57,17 @@ public ProvisioningResult<UserTO> create(final UserTO userTO, final boolean stor\n         });\n     }\n \n+    public ProvisioningResult<UserTO> update(final String etag, final UserPatch patch) {\n+        ProvisioningResult<UserTO> result;\n+        synchronized (this) {\n+            result = getService(etag, UserService.class).update(patch).\n+                    readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n+                    });\n+            resetClient(getAnyServiceClass());\n+        }\n+        return result;\n+    }\n+\n     @Override\n     public int searchCount(final String realm, final String fiql, final String type) {\n         return getService(UserService.class)."},{"sha":"9f9dbd8628244a2b2dfa5a9cf72fe828008ec3d1","filename":"client/console/src/main/java/org/apache/syncope/client/console/status/AnyStatusDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -59,7 +59,7 @@\n import org.apache.wicket.model.StringResourceModel;\n \n public class AnyStatusDirectoryPanel\n-        extends DirectoryPanel<StatusBean, StatusBean, DirectoryDataProvider<StatusBean>, AbstractAnyRestClient<?, ?>>\n+        extends DirectoryPanel<StatusBean, StatusBean, DirectoryDataProvider<StatusBean>, AbstractAnyRestClient<?>>\n         implements ModalPanel {\n \n     private static final long serialVersionUID = -9148734710505211261L;"},{"sha":"c51981c60ce79953229173ca00883250f6e262c9","filename":"client/console/src/main/java/org/apache/syncope/client/console/status/AnyStatusModal.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusModal.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -42,7 +42,7 @@ public AnyStatusModal(\n \n     @Override\n     protected DirectoryPanel<\n-        StatusBean, StatusBean, DirectoryDataProvider<StatusBean>, AbstractAnyRestClient<?, ?>> getStatusDirectoryPanel(\n+        StatusBean, StatusBean, DirectoryDataProvider<StatusBean>, AbstractAnyRestClient<?>> getStatusDirectoryPanel(\n             final MultilevelPanel mlp,\n             final BaseModal<?> baseModal,\n             final PageReference pageReference,"},{"sha":"a37ab4a39dcb11f21326e0dac6b102e56261d3a3","filename":"client/console/src/main/java/org/apache/syncope/client/console/status/ResourceStatusDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusDirectoryPanel.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -50,7 +50,7 @@\n import org.apache.wicket.model.StringResourceModel;\n \n public class ResourceStatusDirectoryPanel\n-        extends DirectoryPanel<StatusBean, StatusBean, DirectoryDataProvider<StatusBean>, AbstractAnyRestClient<?, ?>>\n+        extends DirectoryPanel<StatusBean, StatusBean, DirectoryDataProvider<StatusBean>, AbstractAnyRestClient<?>>\n         implements ModalPanel {\n \n     private static final long serialVersionUID = -9148734710505211261L;"},{"sha":"25badd690756bf2ab79e746d980676420decefa0","filename":"client/console/src/main/java/org/apache/syncope/client/console/status/ResourceStatusModal.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusModal.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -74,7 +74,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n     @Override\n     protected DirectoryPanel<\n-        StatusBean, StatusBean, DirectoryDataProvider<StatusBean>, AbstractAnyRestClient<?, ?>> getStatusDirectoryPanel(\n+        StatusBean, StatusBean, DirectoryDataProvider<StatusBean>, AbstractAnyRestClient<?>> getStatusDirectoryPanel(\n             final MultilevelPanel mlp,\n             final BaseModal<?> baseModal,\n             final PageReference pageReference,"},{"sha":"baba5a5abe04dfe5d03804ed03bced81f3b6096e","filename":"client/console/src/main/java/org/apache/syncope/client/console/status/StatusModal.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -52,7 +52,7 @@ public StatusModal(\n     }\n \n     protected abstract DirectoryPanel<\n-        StatusBean, StatusBean, DirectoryDataProvider<StatusBean>, AbstractAnyRestClient<?, ?>> getStatusDirectoryPanel(\n+        StatusBean, StatusBean, DirectoryDataProvider<StatusBean>, AbstractAnyRestClient<?>> getStatusDirectoryPanel(\n             final MultilevelPanel mlp,\n             final BaseModal<?> baseModal,\n             final PageReference pageReference,"},{"sha":"c66b7f3cfaf86f2ffcdc43cc469a35d24fac9287","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AccessTokenService.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAccessTokenService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAccessTokenService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAccessTokenService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -57,10 +57,12 @@ public interface AccessTokenService extends JAXRSService {\n \n     /**\n      * Invalidates the access token of the requesting user.\n+     *\n+     * @return an empty response if operation was successful\n      */\n     @POST\n     @Path(\"logout\")\n-    void logout();\n+    Response logout();\n \n     /**\n      * Returns a paged list of existing access tokens matching the given query.\n@@ -75,8 +77,9 @@ public interface AccessTokenService extends JAXRSService {\n      * Invalidates the access token matching the provided key.\n      *\n      * @param key access token key\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@PathParam(\"key\") String key);\n+    Response delete(@PathParam(\"key\") String key);\n }"},{"sha":"144fcf229b8063d56e009e8fffaf1dfff1fb45f7","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyObjectService.java","status":"modified","additions":47,"deletions":1,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyObjectService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyObjectService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyObjectService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -18,13 +18,59 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import javax.validation.constraints.NotNull;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.PUT;\n import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.cxf.jaxrs.ext.PATCH;\n import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n \n /**\n  * REST operations for anyObjects.\n  */\n @Path(\"anyObjects\")\n-public interface AnyObjectService extends AnyService<AnyObjectTO, AnyObjectPatch> {\n+public interface AnyObjectService extends AnyService<AnyObjectTO> {\n+\n+    /**\n+     * Creates a new any object.\n+     *\n+     * @param anyObjectTO any object to be created\n+     * @return Response object featuring Location header of created any object as well as the any\n+     * object itself enriched with propagation status information - ProvisioningResult as Entity\n+     */\n+    @POST\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    Response create(@NotNull AnyObjectTO anyObjectTO);\n+\n+    /**\n+     * Updates any object matching the provided key.\n+     *\n+     * @param anyObjectPatch modification to be applied to any object matching the provided key\n+     * @return Response object featuring the updated any object enriched with propagation status information\n+     * - ProvisioningResult as Entity\n+     */\n+    @PATCH\n+    @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    Response update(@NotNull AnyObjectPatch anyObjectPatch);\n+\n+    /**\n+     * Updates any object matching the provided key.\n+     *\n+     * @param anyObjectTO complete update\n+     * @return Response object featuring the updated any object enriched with propagation status information\n+     * - ProvisioningResult as Entity\n+     */\n+    @PUT\n+    @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    Response update(@NotNull AnyObjectTO anyObjectTO);\n }"},{"sha":"a72cc16bcf99cf3827293ce9102aee8f5b4ee7e0","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyService.java","status":"modified","additions":3,"deletions":42,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -31,8 +31,6 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.ext.PATCH;\n-import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.patch.AssociationPatch;\n import org.apache.syncope.common.lib.patch.DeassociationPatch;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -42,7 +40,7 @@\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.rest.api.beans.AnyQuery;\n \n-public interface AnyService<TO extends AnyTO, P extends AnyPatch> extends JAXRSService {\n+public interface AnyService<TO extends AnyTO> extends JAXRSService {\n \n     /**\n      * Reads the list of attributes owned by the given any object for the given schema type.\n@@ -102,31 +100,6 @@ AttrTO read(\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     PagedResult<TO> search(@BeanParam AnyQuery anyQuery);\n \n-    /**\n-     * Creates a new any object.\n-     *\n-     * @param anyTO any object to be created\n-     * @return Response object featuring Location header of created any object as well as the any\n-     * object itself enriched with propagation status information - ProvisioningResult as Entity\n-     */\n-    @POST\n-    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response create(@NotNull TO anyTO);\n-\n-    /**\n-     * Updates any object matching the provided key.\n-     *\n-     * @param anyPatch modification to be applied to any object matching the provided key\n-     * @return Response object featuring the updated any object enriched with propagation status information\n-     * - ProvisioningResult as Entity\n-     */\n-    @PATCH\n-    @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response update(@NotNull P anyPatch);\n-\n     /**\n      * Adds or replaces the attribute, owned by the given any object, for the given schema type and schema.\n      *\n@@ -144,31 +117,19 @@ Response update(\n             @NotNull @PathParam(\"schemaType\") SchemaType schemaType,\n             @NotNull AttrTO attrTO);\n \n-    /**\n-     * Updates any object matching the provided key.\n-     *\n-     * @param anyTO complete update\n-     * @return Response object featuring the updated any object enriched with propagation status information\n-     * - ProvisioningResult as Entity\n-     */\n-    @PUT\n-    @Path(\"{key}\")\n-    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response update(@NotNull TO anyTO);\n-\n     /**\n      * Deletes the attribute, owned by the given any object, for the given schema type and schema.\n      *\n      * @param key any object key or name\n      * @param schemaType schema type\n      * @param schema schema\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}/{schemaType}/{schema}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void delete(\n+    Response delete(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"schemaType\") SchemaType schemaType,\n             @NotNull @PathParam(\"schema\") String schema);"},{"sha":"74846a19b92eac5ca34a5384f26a16c84963fabf","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyTypeClassService.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeClassService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -72,18 +72,20 @@ public interface AnyTypeClassService extends JAXRSService {\n      * Updates the anyTypeClass matching the provided key.\n      *\n      * @param anyTypeClassTO anyTypeClass to be stored\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void update(@NotNull AnyTypeClassTO anyTypeClassTO);\n+    Response update(@NotNull AnyTypeClassTO anyTypeClassTO);\n \n     /**\n      * Deletes the anyTypeClass matching the provided key.\n      *\n      * @param key anyTypeClass key to be deleted\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") String key);\n+    Response delete(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"667009c52f4aa6bb459b988e71c60be84cd4ed72","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyTypeService.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyTypeService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -72,18 +72,20 @@ public interface AnyTypeService extends JAXRSService {\n      * Updates the anyType matching the provided key.\n      *\n      * @param anyTypeTO anyType to be stored\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void update(@NotNull AnyTypeTO anyTypeTO);\n+    Response update(@NotNull AnyTypeTO anyTypeTO);\n \n     /**\n      * Deletes the anyType matching the provided key.\n      *\n      * @param key anyType key to be deleted\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") String key);\n+    Response delete(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"add8bd200d950be2d86b858e3804cce2a8746fb3","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConfigurationService.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConfigurationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConfigurationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConfigurationService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -70,19 +70,21 @@ public interface ConfigurationService extends JAXRSService {\n      * Creates / updates the configuration parameter with the given schema.\n      *\n      * @param value parameter value\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{schema}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void set(@NotNull AttrTO value);\n+    Response set(@NotNull AttrTO value);\n \n     /**\n      * Deletes the configuration parameter with matching schema.\n      *\n      * @param schema configuration parameter schema\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{schema}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void delete(@NotNull @PathParam(\"schema\") String schema);\n+    Response delete(@NotNull @PathParam(\"schema\") String schema);\n }"},{"sha":"f7f0466f151cfc13b58d8faa2db9d88b4b0bbf46","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConnectorHistoryService.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorHistoryService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorHistoryService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorHistoryService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -27,6 +27,7 @@\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.ConnInstanceHistoryConfTO;\n \n /**\n@@ -50,17 +51,19 @@ public interface ConnectorHistoryService extends JAXRSService {\n      * Restores the connector configuration history instance matching the provided key.\n      *\n      * @param key connector configuration history instance key to be restored\n+     * @return an empty response if operation was successful\n      */\n     @POST\n     @Path(\"{key}\")\n-    void restore(@NotNull @PathParam(\"key\") String key);\n+    Response restore(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Deletes the connector configuration history instance matching the provided key.\n      *\n      * @param key connector configuration history instance key to be deleted\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") String key);\n+    Response delete(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"4a1adfe9e3dbfca337aee64d82c66e4baf3d8f3f","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConnectorService.java","status":"modified","additions":9,"deletions":4,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -123,35 +123,40 @@ ConnInstanceTO readByResource(\n      * Updates the connector instance matching the provided key.\n      *\n      * @param connInstanceTO connector instance to be stored\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void update(@NotNull ConnInstanceTO connInstanceTO);\n+    Response update(@NotNull ConnInstanceTO connInstanceTO);\n \n     /**\n      * Deletes the connector instance matching the provided key.\n      *\n      * @param key connector instance key to be deleted\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") String key);\n+    Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Checks whether the connection to resource could be established.\n      *\n      * @param connInstanceTO connector instance to be used for connection check\n+     * @return an empty response if operation was successful\n      */\n     @POST\n     @Path(\"check\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void check(@NotNull ConnInstanceTO connInstanceTO);\n+    Response check(@NotNull ConnInstanceTO connInstanceTO);\n \n     /**\n      * Reload all connector bundles and instances.\n+     *\n+     * @return an empty response if operation was successful\n      */\n     @POST\n     @Path(\"reload\")\n-    void reload();\n+    Response reload();\n }"},{"sha":"2e343b99c771379158a9362b85299028e2d06831","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/DomainService.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDomainService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -72,18 +72,20 @@ public interface DomainService extends JAXRSService {\n      * Updates the domain matching the provided key.\n      *\n      * @param domainTO domain to be stored\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void update(@NotNull DomainTO domainTO);\n+    Response update(@NotNull DomainTO domainTO);\n \n     /**\n      * Deletes the domain matching the provided key.\n      *\n      * @param key domain key to be deleted\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") String key);\n+    Response delete(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"1ebea81eef4ad8ae748e7e4f176da749a56c99dc","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/DynRealmService.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDynRealmService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDynRealmService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FDynRealmService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -72,19 +72,21 @@ public interface DynRealmService extends JAXRSService {\n      * Updates the dynamic realm matching the provided key.\n      *\n      * @param dynDynRealmTO dynamic realm to be stored\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void update(@NotNull DynRealmTO dynDynRealmTO);\n+    Response update(@NotNull DynRealmTO dynDynRealmTO);\n \n     /**\n      * Deletes the dynamic realm matching the provided key.\n      *\n      * @param key dynamic realm key to be deleted\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") String key);\n+    Response delete(@NotNull @PathParam(\"key\") String key);\n \n }"},{"sha":"11fd1dccf7c1b6e67bcefa24ba13c6afbda00720","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ExecutableService.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FExecutableService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FExecutableService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FExecutableService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -31,6 +31,7 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.JobTO;\n@@ -68,10 +69,11 @@ public interface ExecutableService extends JAXRSService {\n      * Deletes the executable execution matching the provided key.\n      *\n      * @param executionKey key of executable execution to be deleted\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"executions/{executionKey}\")\n-    void deleteExecution(@NotNull @PathParam(\"executionKey\") String executionKey);\n+    Response deleteExecution(@NotNull @PathParam(\"executionKey\") String executionKey);\n \n     /**\n      * Deletes the executions belonging matching the given query.\n@@ -110,8 +112,9 @@ public interface ExecutableService extends JAXRSService {\n      *\n      * @param key executable key\n      * @param action action to execute\n+     * @return an empty response if operation was successful\n      */\n     @POST\n     @Path(\"jobs/{key}\")\n-    void actionJob(@NotNull @PathParam(\"key\") String key, @QueryParam(\"action\") JobAction action);\n+    Response actionJob(@NotNull @PathParam(\"key\") String key, @QueryParam(\"action\") JobAction action);\n }"},{"sha":"c060bdbec29d02edb048169b7c1f1bafd6c9286b","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/GroupService.java","status":"modified","additions":44,"deletions":2,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FGroupService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -20,12 +20,16 @@\n \n import java.util.List;\n import javax.validation.constraints.NotNull;\n+import javax.ws.rs.Consumes;\n import javax.ws.rs.GET;\n import javax.ws.rs.POST;\n+import javax.ws.rs.PUT;\n import javax.ws.rs.Path;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.cxf.jaxrs.ext.PATCH;\n import org.apache.syncope.common.lib.patch.GroupPatch;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n@@ -35,10 +39,48 @@\n  * REST operations for groups.\n  */\n @Path(\"groups\")\n-public interface GroupService extends AnyService<GroupTO, GroupPatch> {\n+public interface GroupService extends AnyService<GroupTO> {\n \n     /**\n-     * This method is similar to read() but uses different authentication handling to ensure that a user\n+     * Creates a new group.\n+     *\n+     * @param groupTO group to be created\n+     * @return Response object featuring Location header of created group as well as the any\n+     * object itself enriched with propagation status information - ProvisioningResult as Entity\n+     */\n+    @POST\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    Response create(@NotNull GroupTO groupTO);\n+\n+    /**\n+     * Updates group matching the provided key.\n+     *\n+     * @param groupPatch modification to be applied to group matching the provided key\n+     * @return Response object featuring the updated group enriched with propagation status information\n+     * - ProvisioningResult as Entity\n+     */\n+    @PATCH\n+    @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    Response update(@NotNull GroupPatch groupPatch);\n+\n+    /**\n+     * Updates group matching the provided key.\n+     *\n+     * @param groupTO complete update\n+     * @return Response object featuring the updated group enriched with propagation status information\n+     * - ProvisioningResult as Entity\n+     */\n+    @PUT\n+    @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    Response update(@NotNull GroupTO groupTO);\n+\n+    /**\n+     * This method is similar to read() but uses different authentication handling to ensure that a group\n      * can read his own groups.\n      *\n      * @return own groups"},{"sha":"9ff841353ca3ee715db1f35e9ca20d1a16eb5833","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ImplementationService.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FImplementationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FImplementationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FImplementationService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -75,18 +75,20 @@ public interface ImplementationService extends JAXRSService {\n      * Updates an existing implementation.\n      *\n      * @param implementationTO implementation.\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void update(@NotNull ImplementationTO implementationTO);\n+    Response update(@NotNull ImplementationTO implementationTO);\n \n     /**\n      * Deletes the implementation matching the given key.\n      *\n      * @param key key for implementation to be deleted\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") String key);\n+    Response delete(@NotNull @PathParam(\"key\") String key);\n \n }"},{"sha":"b1d889c1b7614563711694050c27887bad7783fd","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/LoggerService.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FLoggerService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -28,6 +28,7 @@\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.log.EventCategoryTO;\n import org.apache.syncope.common.lib.log.LogAppender;\n import org.apache.syncope.common.lib.log.LogStatementTO;\n@@ -99,20 +100,22 @@ public interface LoggerService extends JAXRSService {\n      *\n      * @param type LoggerType to be selected\n      * @param logger Logger to be created or updated\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{type}/{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void update(@NotNull @PathParam(\"type\") LoggerType type, @NotNull LoggerTO logger);\n+    Response update(@NotNull @PathParam(\"type\") LoggerType type, @NotNull LoggerTO logger);\n \n     /**\n      * Deletes the logger with matching name.\n      *\n      * @param type LoggerType to be selected\n      * @param name Logger name to be deleted\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{type}/{name}\")\n-    void delete(@NotNull @PathParam(\"type\") LoggerType type, @NotNull @PathParam(\"name\") String name);\n+    Response delete(@NotNull @PathParam(\"type\") LoggerType type, @NotNull @PathParam(\"name\") String name);\n \n }"},{"sha":"1cd8e73d7da56b9c56b1c767fc82ec358d0da478","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/MailTemplateService.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FMailTemplateService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FMailTemplateService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FMailTemplateService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -74,10 +74,11 @@ public interface MailTemplateService extends JAXRSService {\n      * Deletes the mail template matching the given key.\n      *\n      * @param key key for mail template to be deleted\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") String key);\n+    Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Gets the template for the given key and format, if available.\n@@ -98,10 +99,11 @@ Response getFormat(\n      * @param key mail template\n      * @param format template format\n      * @param templateIn template to be set\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{key}/{format}\")\n-    void setFormat(\n+    Response setFormat(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"format\") MailTemplateFormat format,\n             InputStream templateIn);\n@@ -111,10 +113,11 @@ void setFormat(\n      *\n      * @param key mail template\n      * @param format template format\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}/{format}\")\n-    void removeFormat(\n+    Response removeFormat(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"format\") MailTemplateFormat format);\n "},{"sha":"458ae63ef6575441be60d295f238f2b8e1fb19e7","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/NotificationService.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -75,20 +75,22 @@ public interface NotificationService extends JAXRSService {\n      * Updates the notification matching the given key.\n      *\n      * @param notificationTO notification to be stored\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void update(@NotNull NotificationTO notificationTO);\n+    Response update(@NotNull NotificationTO notificationTO);\n \n     /**\n      * Deletes the notification matching the given key.\n      *\n      * @param key key for notification to be deleted\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") String key);\n+    Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Returns details about notification job.\n@@ -104,8 +106,9 @@ public interface NotificationService extends JAXRSService {\n      * Executes an action on the notification job.\n      *\n      * @param action action to execute\n+     * @return an empty response if operation was successful\n      */\n     @POST\n     @Path(\"job\")\n-    void actionJob(@QueryParam(\"action\") JobAction action);\n+    Response actionJob(@QueryParam(\"action\") JobAction action);\n }"},{"sha":"7c621961acc06a6b715bec91a16ee8ab9bfad5cd","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/PolicyService.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -77,19 +77,21 @@ public interface PolicyService extends JAXRSService {\n      * Updates policy matching the given key.\n      *\n      * @param policyTO Policy to replace existing policy\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void update(@NotNull AbstractPolicyTO policyTO);\n+    Response update(@NotNull AbstractPolicyTO policyTO);\n \n     /**\n      * Delete policy matching the given key.\n      *\n      * @param key key of policy to be deleted\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") String key);\n+    Response delete(@NotNull @PathParam(\"key\") String key);\n \n }"},{"sha":"dfd516f5857e0e0bd1875b58106fbabca99f8800","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RelationshipTypeService.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRelationshipTypeService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -72,18 +72,20 @@ public interface RelationshipTypeService extends JAXRSService {\n      * Updates the relationshipType matching the provided key.\n      *\n      * @param relationshipTypeTO relationshipType to be stored\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void update(@NotNull RelationshipTypeTO relationshipTypeTO);\n+    Response update(@NotNull RelationshipTypeTO relationshipTypeTO);\n \n     /**\n      * Deletes the relationshipType matching the provided key.\n      *\n      * @param key relationshipType key to be deleted\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") String key);\n+    Response delete(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"4db932134056e602420db8568599eee22eab0f00","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ReportService.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -74,20 +74,22 @@ public interface ReportService extends ExecutableService {\n      * Updates report with matching key.\n      *\n      * @param reportTO report to be stored\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void update(@NotNull ReportTO reportTO);\n+    Response update(@NotNull ReportTO reportTO);\n \n     /**\n      * Deletes report with matching key.\n      *\n      * @param key Deletes report with matching key\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") String key);\n+    Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Exports the report execution with matching key in the requested format."},{"sha":"6bfb15172144a5833e0fd9a589d3759063fa603b","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ReportTemplateService.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportTemplateService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportTemplateService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportTemplateService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -74,17 +74,19 @@ public interface ReportTemplateService extends JAXRSService {\n      * Deletes the report template matching the given key.\n      *\n      * @param key key for report template to be deleted\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") String key);\n+    Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Gets the template for the given key and format, if available.\n      *\n      * @param key report template\n      * @param format template format\n      * @return report template with matching key and format, if available\n+     * @return an empty response if operation was successful\n      */\n     @GET\n     @Path(\"{key}/{format}\")\n@@ -98,10 +100,11 @@ Response getFormat(\n      * @param key report template\n      * @param format template format\n      * @param templateIn template to be set\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{key}/{format}\")\n-    void setFormat(\n+    Response setFormat(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"format\") ReportTemplateFormat format,\n             InputStream templateIn);\n@@ -111,10 +114,11 @@ void setFormat(\n      *\n      * @param key report template\n      * @param format template format\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}/{format}\")\n-    void removeFormat(\n+    Response removeFormat(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"format\") ReportTemplateFormat format);\n "},{"sha":"67c8d588a824178bee13e16939eb7550dbf058fe","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ResourceHistoryService.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceHistoryService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceHistoryService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceHistoryService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -27,6 +27,7 @@\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.ResourceHistoryConfTO;\n \n /**\n@@ -50,17 +51,19 @@ public interface ResourceHistoryService extends JAXRSService {\n      * Restores the resource configuration history matching the provided key.\n      *\n      * @param key resource configuration history key to be restored\n+     * @return an empty response if operation was successful\n      */\n     @POST\n     @Path(\"{key}\")\n-    void restore(@NotNull @PathParam(\"key\") String key);\n+    Response restore(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Deletes the resource configuration history matching the provided key.\n      *\n      * @param key resource configuration history key to be deleted\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") String key);\n+    Response delete(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"e6adc5a460a0ead0e9a83f335d274f6dcb161c58","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ResourceService.java","status":"modified","additions":14,"deletions":5,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -111,53 +111,62 @@ PagedConnObjectTOResult listConnObjects(\n      * Updates the resource matching the given name.\n      *\n      * @param resourceTO resource to be stored\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void update(@NotNull ResourceTO resourceTO);\n+    Response update(@NotNull ResourceTO resourceTO);\n \n     /**\n      * Queries the connector underlying the given resource for the latest sync token value associated to the given any\n      * type and stores the value internally, for later usage.\n      *\n      * @param key resource\n      * @param anyTypeKey any type\n+     * @return an empty response if operation was successful\n      */\n     @POST\n     @Path(\"{key}/{anyTypeKey}\")\n-    void setLatestSyncToken(@NotNull @PathParam(\"key\") String key, @NotNull @PathParam(\"anyTypeKey\") String anyTypeKey);\n+    Response setLatestSyncToken(\n+            @NotNull @PathParam(\"key\") String key,\n+            @NotNull @PathParam(\"anyTypeKey\") String anyTypeKey);\n \n     /**\n      * Removes the sync token value associated to the given any type from the given resource.\n      *\n      * @param key resource\n      * @param anyTypeKey any type\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}/{anyTypeKey}\")\n-    void removeSyncToken(@NotNull @PathParam(\"key\") String key, @NotNull @PathParam(\"anyTypeKey\") String anyTypeKey);\n+    Response removeSyncToken(\n+            @NotNull @PathParam(\"key\") String key,\n+            @NotNull @PathParam(\"anyTypeKey\") String anyTypeKey);\n \n     /**\n      * Deletes the resource matching the given name.\n      *\n      * @param key name of resource to be deleted\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void delete(@NotNull @PathParam(\"key\") String key);\n+    Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Checks whether the connection to resource could be established.\n      *\n      * @param resourceTO resource to be checked\n+     * @return an empty response if operation was successful\n      */\n     @POST\n     @Path(\"check\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void check(@NotNull ResourceTO resourceTO);\n+    Response check(@NotNull ResourceTO resourceTO);\n \n     /**\n      * De-associate any objects from the given resource."},{"sha":"557db7666cf438512966365abca4c1d6374d7d06","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RoleService.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRoleService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -73,20 +73,22 @@ public interface RoleService extends JAXRSService {\n      * Updates the role matching the provided key.\n      *\n      * @param roleTO role to be stored\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void update(@NotNull RoleTO roleTO);\n+    Response update(@NotNull RoleTO roleTO);\n \n     /**\n      * Deletes the role matching the provided key.\n      *\n      * @param key role key to be deleted\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") String key);\n+    Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Gets the console layout information as JSON string for the role with the given key, if available.\n@@ -104,18 +106,20 @@ public interface RoleService extends JAXRSService {\n      *\n      * @param key role key\n      * @param consoleLayoutInfoIn console layout information to be set\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{key}/consoleLayout\")\n     @Consumes({ MediaType.APPLICATION_JSON })\n-    void setConsoleLayoutInfo(@NotNull @PathParam(\"key\") String key, InputStream consoleLayoutInfoIn);\n+    Response setConsoleLayoutInfo(@NotNull @PathParam(\"key\") String key, InputStream consoleLayoutInfoIn);\n \n     /**\n      * Removes the console layout information for the role with the given key, if available.\n      *\n      * @param key role key\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}/consoleLayout\")\n-    void removeConsoleLayoutInfo(@NotNull @PathParam(\"key\") String key);\n+    Response removeConsoleLayoutInfo(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"51403bde511f48624e301b587ca325652f87a166","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SchemaService.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSchemaService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -84,19 +84,21 @@ <T extends AbstractSchemaTO> T read(\n      *\n      * @param type type for schemas to be updated\n      * @param schemaTO updated schema to be stored\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{type}/{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void update(@NotNull @PathParam(\"type\") SchemaType type, @NotNull AbstractSchemaTO schemaTO);\n+    Response update(@NotNull @PathParam(\"type\") SchemaType type, @NotNull AbstractSchemaTO schemaTO);\n \n     /**\n      * Deletes the schema matching the given type and key.\n      *\n      * @param type type for schema to be deleted\n      * @param key name of schema to be deleted\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{type}/{key}\")\n-    void delete(@NotNull @PathParam(\"type\") SchemaType type, @NotNull @PathParam(\"key\") String key);\n+    Response delete(@NotNull @PathParam(\"type\") SchemaType type, @NotNull @PathParam(\"key\") String key);\n }"},{"sha":"9b43250d7f77627d881b357092deaa03b1ad09e6","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SecurityQuestionService.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -72,20 +72,22 @@ public interface SecurityQuestionService extends JAXRSService {\n      * Updates the security question matching the provided key.\n      *\n      * @param securityQuestionTO security question to be stored\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void update(@NotNull SecurityQuestionTO securityQuestionTO);\n+    Response update(@NotNull SecurityQuestionTO securityQuestionTO);\n \n     /**\n      * Deletes the security question matching the provided key.\n      *\n      * @param key security question key to be deleted\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") String key);\n+    Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Ask for security question configured for the user matching the given username, if any."},{"sha":"205e6cd1e2d37e68da5ff88cf5709697941f9b7d","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/TaskService.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -85,20 +85,22 @@ <T extends AbstractTaskTO> T read(\n      * Updates the task matching the provided key.\n      *\n      * @param taskTO updated task to be stored\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void update(@NotNull AbstractTaskTO taskTO);\n+    Response update(@NotNull AbstractTaskTO taskTO);\n \n     /**\n      * Deletes the task matching the provided key.\n      *\n      * @param key key of task to be deleted\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") String key);\n+    Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Executes the provided bulk action."},{"sha":"651c9d05a79e08be17f5a79dbdf3a928a9d64484","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserSelfService.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -116,10 +116,11 @@ Response create(@NotNull UserTO userTO,\n      *\n      * @param username username for which the security answer is provided\n      * @param securityAnswer actual answer text\n+     * @return an empty response if operation was successful\n      */\n     @POST\n     @Path(\"requestPasswordReset\")\n-    void requestPasswordReset(@NotNull @QueryParam(\"username\") String username, String securityAnswer);\n+    Response requestPasswordReset(@NotNull @QueryParam(\"username\") String username, String securityAnswer);\n \n     /**\n      * Reset the password value for the user matching the provided token, if available and still valid.\n@@ -129,8 +130,9 @@ Response create(@NotNull UserTO userTO,\n      *\n      * @param token password reset token\n      * @param password new password to be set\n+     * @return an empty response if operation was successful\n      */\n     @POST\n     @Path(\"confirmPasswordReset\")\n-    void confirmPasswordReset(@NotNull @QueryParam(\"token\") String token, String password);\n+    Response confirmPasswordReset(@NotNull @QueryParam(\"token\") String token, String password);\n }"},{"sha":"310e631f6abde9dbc07342934194e7bad8d4991e","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserService.java","status":"modified","additions":29,"deletions":1,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -22,11 +22,13 @@\n import javax.ws.rs.Consumes;\n import javax.ws.rs.DefaultValue;\n import javax.ws.rs.POST;\n+import javax.ws.rs.PUT;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n+import org.apache.cxf.jaxrs.ext.PATCH;\n import org.apache.syncope.common.lib.patch.StatusPatch;\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.common.lib.to.UserTO;\n@@ -35,7 +37,7 @@\n  * REST operations for users.\n  */\n @Path(\"users\")\n-public interface UserService extends AnyService<UserTO, UserPatch> {\n+public interface UserService extends AnyService<UserTO> {\n \n     /**\n      * Creates a new user.\n@@ -52,6 +54,32 @@ Response create(\n             @NotNull UserTO userTO,\n             @DefaultValue(\"true\") @QueryParam(\"storePassword\") boolean storePassword);\n \n+    /**\n+     * Updates user matching the provided key.\n+     *\n+     * @param userPatch modification to be applied to user matching the provided key\n+     * @return Response object featuring the updated user enriched with propagation status information\n+     * - ProvisioningResult as Entity\n+     */\n+    @PATCH\n+    @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    Response update(@NotNull UserPatch userPatch);\n+\n+    /**\n+     * Updates user matching the provided key.\n+     *\n+     * @param userTO complete update\n+     * @return Response object featuring the updated user enriched with propagation status information\n+     * - ProvisioningResult as Entity\n+     */\n+    @PUT\n+    @Path(\"{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    Response update(@NotNull UserTO userTO);\n+\n     /**\n      * Performs a status update on given user.\n      *"},{"sha":"fcd6751d2dcffb322f2aadf6d8b0b5baea972db9","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/WorkflowService.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -83,11 +83,12 @@ Response exportDiagram(\n      * @param anyType any object type\n      * @param key workflow definition key\n      * @param definition workflow definition for matching kind\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{anyType}/{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void set(\n+    Response set(\n             @NotNull @PathParam(\"anyType\") String anyType,\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull String definition);\n@@ -97,10 +98,11 @@ void set(\n      *\n      * @param anyType any object type\n      * @param key workflow definition key\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{anyType}/{key}\")\n-    void delete(\n+    Response delete(\n             @NotNull @PathParam(\"anyType\") String anyType,\n             @NotNull @PathParam(\"key\") String key);\n }"},{"sha":"abff7a35df285efd65b50a800f0aa6c7bd0d9f69","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AbstractAnyLogic.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -247,15 +247,13 @@ protected boolean securityChecks(final Set<String> effectiveRealms, final String\n \n     public abstract TO read(String key);\n \n-    public abstract ProvisioningResult<TO> create(TO anyTO, boolean nullPriorityAsync);\n-\n-    public abstract ProvisioningResult<TO> update(P anyPatch, boolean nullPriorityAsync);\n-\n-    public abstract ProvisioningResult<TO> delete(String key, boolean nullPriorityAsync);\n-\n     public abstract Pair<Integer, List<TO>> search(\n             SearchCond searchCond,\n             int page, int size, List<OrderByClause> orderBy,\n             String realm,\n             boolean details);\n+\n+    public abstract ProvisioningResult<TO> update(P anyPatch, boolean nullPriorityAsync);\n+\n+    public abstract ProvisioningResult<TO> delete(String key, boolean nullPriorityAsync);\n }"},{"sha":"3acbc209f0e14cf8646db432bd680e1ed6527ea0","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AnyObjectLogic.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -99,7 +99,6 @@ public Pair<Integer, List<AnyObjectTO>> search(\n         return Pair.of(count, result);\n     }\n \n-    @Override\n     public ProvisioningResult<AnyObjectTO> create(final AnyObjectTO anyObjectTO, final boolean nullPriorityAsync) {\n         Pair<AnyObjectTO, List<LogicActions>> before = beforeCreate(anyObjectTO);\n "},{"sha":"cbda5b69645695f9fef16e8780fbbef3e32034bb","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/GroupLogic.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -173,7 +173,6 @@ public Pair<Integer, List<GroupTO>> search(\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.GROUP_CREATE + \"')\")\n-    @Override\n     public ProvisioningResult<GroupTO> create(final GroupTO groupTO, final boolean nullPriorityAsync) {\n         Pair<GroupTO, List<LogicActions>> before = beforeCreate(groupTO);\n "},{"sha":"b4fb038c9ed5c18d62e3e3e89a203c6a970dc5a9","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/UserLogic.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -124,12 +124,6 @@ public ProvisioningResult<UserTO> selfCreate(\n         return doCreate(userTO, storePassword, true, nullPriorityAsync);\n     }\n \n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.USER_CREATE + \"')\")\n-    @Override\n-    public ProvisioningResult<UserTO> create(final UserTO userTO, final boolean nullPriorityAsync) {\n-        return doCreate(userTO, true, false, nullPriorityAsync);\n-    }\n-\n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.USER_CREATE + \"')\")\n     public ProvisioningResult<UserTO> create(\n             final UserTO userTO, final boolean storePassword, final boolean nullPriorityAsync) {"},{"sha":"c8c05724b3ea831a4e334647b5f416e4b6953466","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AbstractAnyService.java","status":"modified","additions":6,"deletions":25,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractAnyService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -26,7 +26,6 @@\n import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.patch.AssociationPatch;\n@@ -57,15 +56,15 @@\n \n public abstract class AbstractAnyService<TO extends AnyTO, P extends AnyPatch>\n         extends AbstractServiceImpl\n-        implements AnyService<TO, P> {\n+        implements AnyService<TO> {\n \n     protected abstract AnyDAO<?> getAnyDAO();\n \n     protected abstract AbstractAnyLogic<TO, P> getAnyLogic();\n \n     protected abstract P newPatch(String key);\n \n-    private String getActualKey(final String key) {\n+    protected String getActualKey(final String key) {\n         String actualKey = key;\n         if (!SyncopeConstants.UUID_PATTERN.matcher(key).matches()) {\n             actualKey = getAnyDAO().findKey(key);\n@@ -152,12 +151,6 @@ public PagedResult<TO> search(final AnyQuery anyQuery) {\n         return buildPagedResult(result.getRight(), anyQuery.getPage(), anyQuery.getSize(), result.getLeft());\n     }\n \n-    @Override\n-    public Response create(final TO anyTO) {\n-        ProvisioningResult<TO> created = getAnyLogic().create(anyTO, isNullPriorityAsync());\n-        return createResponse(created);\n-    }\n-\n     protected Date findLastChange(final String key) {\n         Date lastChange = getAnyDAO().findLastChange(key);\n         if (lastChange == null) {\n@@ -167,8 +160,7 @@ protected Date findLastChange(final String key) {\n         return lastChange;\n     }\n \n-    @Override\n-    public Response update(final P anyPatch) {\n+    protected Response doUpdate(final P anyPatch) {\n         anyPatch.setKey(getActualKey(anyPatch.getKey()));\n         Date etagDate = findLastChange(anyPatch.getKey());\n         checkETag(String.valueOf(etagDate.getTime()));\n@@ -199,7 +191,7 @@ private void addUpdateOrReplaceAttr(\n             default:\n         }\n \n-        update(patch);\n+        doUpdate(patch);\n     }\n \n     @Override\n@@ -210,22 +202,11 @@ public Response update(final String key, final SchemaType schemaType, final Attr\n     }\n \n     @Override\n-    public Response update(final TO anyTO) {\n-        anyTO.setKey(getActualKey(anyTO.getKey()));\n-        TO before = getAnyLogic().read(anyTO.getKey());\n-\n-        checkETag(before.getETagValue());\n-\n-        ProvisioningResult<TO> updated = getAnyLogic().update(AnyOperations.<TO, P>diff(anyTO, before, false),\n-                isNullPriorityAsync());\n-        return modificationResponse(updated);\n-    }\n-\n-    @Override\n-    public void delete(final String key, final SchemaType schemaType, final String schema) {\n+    public Response delete(final String key, final SchemaType schemaType, final String schema) {\n         String actualKey = getActualKey(key);\n         addUpdateOrReplaceAttr(\n                 actualKey, schemaType, new AttrTO.Builder().schema(schema).build(), PatchOperation.DELETE);\n+        return Response.noContent().build();\n     }\n \n     @Override"},{"sha":"c5f3c89987996329807fd6718abfda94bdaae707","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AbstractExecutableService.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractExecutableService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractExecutableService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractExecutableService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.rest.cxf.service;\n \n import java.util.List;\n+import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.ExecTO;\n@@ -51,8 +52,9 @@ public List<ExecTO> listRecentExecutions(final int max) {\n     }\n \n     @Override\n-    public void deleteExecution(final String executionKey) {\n+    public Response deleteExecution(final String executionKey) {\n         getExecutableLogic().deleteExecution(executionKey);\n+        return Response.noContent().build();\n     }\n \n     @Override\n@@ -76,8 +78,9 @@ public List<JobTO> listJobs() {\n     }\n \n     @Override\n-    public void actionJob(final String key, final JobAction action) {\n+    public Response actionJob(final String key, final JobAction action) {\n         getExecutableLogic().actionJob(key, action);\n+        return Response.noContent().build();\n     }\n \n }"},{"sha":"150829812bf0678618e8345d161ec95108163c2c","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AccessTokenServiceImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAccessTokenServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAccessTokenServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAccessTokenServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -59,8 +59,9 @@ public Response refresh() {\n     }\n \n     @Override\n-    public void logout() {\n+    public Response logout() {\n         logic.logout();\n+        return Response.noContent().build();\n     }\n \n     @Override\n@@ -73,8 +74,9 @@ public PagedResult<AccessTokenTO> list(final AccessTokenQuery query) {\n     }\n \n     @Override\n-    public void delete(final String key) {\n+    public Response delete(final String key) {\n         logic.delete(key);\n+        return Response.noContent().build();\n     }\n \n }"},{"sha":"961a32863efb0d6afeaaf4d60d0db047e955790b","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AnyObjectServiceImpl.java","status":"modified","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyObjectServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyObjectServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyObjectServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -18,12 +18,15 @@\n  */\n package org.apache.syncope.core.rest.cxf.service;\n \n+import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n import org.apache.syncope.common.lib.search.SpecialAttr;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.PagedResult;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.rest.api.beans.AnyQuery;\n import org.apache.syncope.common.rest.api.service.AnyObjectService;\n@@ -60,6 +63,29 @@ protected AnyObjectPatch newPatch(final String key) {\n         return patch;\n     }\n \n+    @Override\n+    public Response create(final AnyObjectTO anyObjectTO) {\n+        ProvisioningResult<AnyObjectTO> created = logic.create(anyObjectTO, isNullPriorityAsync());\n+        return createResponse(created);\n+    }\n+\n+    @Override\n+    public Response update(final AnyObjectTO anyObjectTO) {\n+        anyObjectTO.setKey(getActualKey(anyObjectTO.getKey()));\n+        AnyObjectTO before = logic.read(anyObjectTO.getKey());\n+\n+        checkETag(before.getETagValue());\n+\n+        ProvisioningResult<AnyObjectTO> updated =\n+                logic.update(AnyOperations.diff(anyObjectTO, before, false), isNullPriorityAsync());\n+        return modificationResponse(updated);\n+    }\n+\n+    @Override\n+    public Response update(final AnyObjectPatch anyObjectPatch) {\n+        return doUpdate(anyObjectPatch);\n+    }\n+\n     @Override\n     public PagedResult<AnyObjectTO> search(final AnyQuery anyQuery) {\n         if (StringUtils.isBlank(anyQuery.getFiql())"},{"sha":"336cea49110792af3b5471a4b867d78ba9151450","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AnyTypeClassServiceImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeClassServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeClassServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeClassServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -54,13 +54,15 @@ public Response create(final AnyTypeClassTO anyTypeTO) {\n     }\n \n     @Override\n-    public void update(final AnyTypeClassTO anyTypeTO) {\n+    public Response update(final AnyTypeClassTO anyTypeTO) {\n         logic.update(anyTypeTO);\n+        return Response.noContent().build();\n     }\n \n     @Override\n-    public void delete(final String key) {\n+    public Response delete(final String key) {\n         logic.delete(key);\n+        return Response.noContent().build();\n     }\n \n }"},{"sha":"c5802416bbaa95a37bad4f09c62f858b76468f1b","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AnyTypeServiceImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAnyTypeServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -54,13 +54,15 @@ public Response create(final AnyTypeTO anyTypeTO) {\n     }\n \n     @Override\n-    public void update(final AnyTypeTO anyTypeTO) {\n+    public Response update(final AnyTypeTO anyTypeTO) {\n         logic.update(anyTypeTO);\n+        return Response.noContent().build();\n     }\n \n     @Override\n-    public void delete(final String key) {\n+    public Response delete(final String key) {\n         logic.delete(key);\n+        return Response.noContent().build();\n     }\n \n }"},{"sha":"befd5b3d86e3153ac53fbee6a92763710f4f23ef","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ConfigurationServiceImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConfigurationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConfigurationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConfigurationServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -50,8 +50,9 @@ public Response export() {\n     }\n \n     @Override\n-    public void delete(final String schema) {\n+    public Response delete(final String schema) {\n         logic.delete(schema);\n+        return Response.noContent().build();\n     }\n \n     @Override\n@@ -65,7 +66,8 @@ public AttrTO get(final String schema) {\n     }\n \n     @Override\n-    public void set(final AttrTO value) {\n+    public Response set(final AttrTO value) {\n         logic.set(value);\n+        return Response.noContent().build();\n     }\n }"},{"sha":"205b3e0f9518c0cb34c80f75e35f8dc3c45c7b07","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ConnectorHistoryServiceImpl.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorHistoryServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorHistoryServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorHistoryServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.rest.cxf.service;\n \n import java.util.List;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.ConnInstanceHistoryConfTO;\n import org.apache.syncope.common.rest.api.service.ConnectorHistoryService;\n import org.apache.syncope.core.logic.ConnectorHistoryLogic;\n@@ -37,13 +38,15 @@ public List<ConnInstanceHistoryConfTO> list(final String connectorKey) {\n     }\n \n     @Override\n-    public void restore(final String key) {\n+    public Response restore(final String key) {\n         logic.restore(key);\n+        return Response.noContent().build();\n     }\n \n     @Override\n-    public void delete(final String key) {\n+    public Response delete(final String key) {\n         logic.delete(key);\n+        return Response.noContent().build();\n     }\n \n }"},{"sha":"082d89ea7fd741a36ecc6faaac63ea1136ab458d","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ConnectorServiceImpl.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FConnectorServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -46,8 +46,9 @@ public Response create(final ConnInstanceTO connInstanceTO) {\n     }\n \n     @Override\n-    public void delete(final String key) {\n+    public Response delete(final String key) {\n         logic.delete(key);\n+        return Response.noContent().build();\n     }\n \n     @Override\n@@ -78,17 +79,20 @@ public ConnInstanceTO readByResource(final String resourceName, final String lan\n     }\n \n     @Override\n-    public void update(final ConnInstanceTO connInstanceTO) {\n+    public Response update(final ConnInstanceTO connInstanceTO) {\n         logic.update(connInstanceTO);\n+        return Response.noContent().build();\n     }\n \n     @Override\n-    public void check(final ConnInstanceTO connInstanceTO) {\n+    public Response check(final ConnInstanceTO connInstanceTO) {\n         logic.check(connInstanceTO);\n+        return Response.noContent().build();\n     }\n \n     @Override\n-    public void reload() {\n+    public Response reload() {\n         logic.reload();\n+        return Response.noContent().build();\n     }\n }"},{"sha":"168c3cda27cb783c171fdb9c14eceaae1b0d1c19","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/DomainServiceImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FDomainServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FDomainServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FDomainServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -54,13 +54,15 @@ public Response create(final DomainTO anyTypeTO) {\n     }\n \n     @Override\n-    public void update(final DomainTO anyTypeTO) {\n+    public Response update(final DomainTO anyTypeTO) {\n         logic.update(anyTypeTO);\n+        return Response.noContent().build();\n     }\n \n     @Override\n-    public void delete(final String key) {\n+    public Response delete(final String key) {\n         logic.delete(key);\n+        return Response.noContent().build();\n     }\n \n }"},{"sha":"dec464b4ddf5a1da98e1a6eae61af9cc348622ab","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/DynRealmServiceImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FDynRealmServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FDynRealmServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FDynRealmServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -54,13 +54,15 @@ public Response create(final DynRealmTO roleTO) {\n     }\n \n     @Override\n-    public void update(final DynRealmTO roleTO) {\n+    public Response update(final DynRealmTO roleTO) {\n         logic.update(roleTO);\n+        return Response.noContent().build();\n     }\n \n     @Override\n-    public void delete(final String key) {\n+    public Response delete(final String key) {\n         logic.delete(key);\n+        return Response.noContent().build();\n     }\n \n }"},{"sha":"4e23d2272ccd71c76088cb22f52c73799b52f31a","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/GroupServiceImpl.java","status":"modified","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FGroupServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FGroupServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FGroupServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -19,9 +19,12 @@\n package org.apache.syncope.core.rest.cxf.service;\n \n import java.util.List;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.patch.GroupPatch;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.types.BulkMembersActionType;\n import org.apache.syncope.common.rest.api.service.GroupService;\n import org.apache.syncope.core.logic.AbstractAnyLogic;\n@@ -57,6 +60,29 @@ protected GroupPatch newPatch(final String key) {\n         return patch;\n     }\n \n+    @Override\n+    public Response create(final GroupTO groupTO) {\n+        ProvisioningResult<GroupTO> created = logic.create(groupTO, isNullPriorityAsync());\n+        return createResponse(created);\n+    }\n+\n+    @Override\n+    public Response update(final GroupTO groupTO) {\n+        groupTO.setKey(getActualKey(groupTO.getKey()));\n+        GroupTO before = logic.read(groupTO.getKey());\n+\n+        checkETag(before.getETagValue());\n+\n+        ProvisioningResult<GroupTO> updated =\n+                logic.update(AnyOperations.diff(groupTO, before, false), isNullPriorityAsync());\n+        return modificationResponse(updated);\n+    }\n+\n+    @Override\n+    public Response update(final GroupPatch groupPatch) {\n+        return doUpdate(groupPatch);\n+    }\n+\n     @Override\n     public List<GroupTO> own() {\n         return logic.own();"},{"sha":"c85793b91b892a5195d6bc59cd0bdd927704e81f","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ImplementationServiceImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FImplementationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FImplementationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FImplementationServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -55,13 +55,15 @@ public Response create(final ImplementationTO implementationTO) {\n     }\n \n     @Override\n-    public void update(final ImplementationTO implementationTO) {\n+    public Response update(final ImplementationTO implementationTO) {\n         logic.update(implementationTO);\n+        return Response.noContent().build();\n     }\n \n     @Override\n-    public void delete(final String key) {\n+    public Response delete(final String key) {\n         logic.delete(key);\n+        return Response.noContent().build();\n     }\n \n }"},{"sha":"4f8c2f4c45aa5701c812b8d905769926d487be90","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/LoggerServiceImpl.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FLoggerServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FLoggerServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FLoggerServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -21,6 +21,7 @@\n import java.text.ParseException;\n import java.util.List;\n import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.log.EventCategoryTO;\n import org.apache.syncope.common.lib.log.LogAppender;\n import org.apache.syncope.common.lib.log.LogStatementTO;\n@@ -50,7 +51,7 @@ public List<LogStatementTO> getLastLogStatements(final String memoryAppender) {\n     }\n \n     @Override\n-    public void delete(final LoggerType type, final String name) {\n+    public Response delete(final LoggerType type, final String name) {\n         switch (type) {\n             case LOG:\n                 logic.deleteLog(name);\n@@ -67,7 +68,7 @@ public void delete(final LoggerType type, final String name) {\n             default:\n                 throw new BadRequestException();\n         }\n-\n+        return Response.noContent().build();\n     }\n \n     @Override\n@@ -100,7 +101,7 @@ public LoggerTO read(final LoggerType type, final String name) {\n     }\n \n     @Override\n-    public void update(final LoggerType type, final LoggerTO logger) {\n+    public Response update(final LoggerType type, final LoggerTO logger) {\n         switch (type) {\n             case LOG:\n                 logic.setLogLevel(logger.getKey(), logger.getLevel().getLevel());\n@@ -117,6 +118,7 @@ public void update(final LoggerType type, final LoggerTO logger) {\n             default:\n                 throw new BadRequestException();\n         }\n+        return Response.noContent().build();\n     }\n \n     @Override"},{"sha":"ff5cb133f4639486eac3deaa8deecc02816ab34b","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/MailTemplateServiceImpl.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FMailTemplateServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FMailTemplateServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FMailTemplateServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -61,8 +61,9 @@ public List<MailTemplateTO> list() {\n     }\n \n     @Override\n-    public void delete(final String key) {\n+    public Response delete(final String key) {\n         logic.delete(key);\n+        return Response.noContent().build();\n     }\n \n     @Override\n@@ -76,17 +77,19 @@ public Response getFormat(final String key, final MailTemplateFormat format) {\n     }\n \n     @Override\n-    public void setFormat(final String key, final MailTemplateFormat format, final InputStream templateIn) {\n+    public Response setFormat(final String key, final MailTemplateFormat format, final InputStream templateIn) {\n         try {\n             logic.setFormat(key, format, IOUtils.toString(templateIn, StandardCharsets.UTF_8));\n+            return Response.noContent().build();\n         } catch (final IOException e) {\n             LOG.error(\"While setting format {} for mail template {}\", format, key, e);\n             throw new InternalServerErrorException(\"Could not read entity\", e);\n         }\n     }\n \n     @Override\n-    public void removeFormat(final String key, final MailTemplateFormat format) {\n+    public Response removeFormat(final String key, final MailTemplateFormat format) {\n         logic.setFormat(key, format, null);\n+        return Response.noContent().build();\n     }\n }"},{"sha":"9671f937f25138ce48e8969dd99c31c71f80816a","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/NotificationServiceImpl.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FNotificationServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FNotificationServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FNotificationServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -56,13 +56,15 @@ public List<NotificationTO> list() {\n     }\n \n     @Override\n-    public void update(final NotificationTO notificationTO) {\n+    public Response update(final NotificationTO notificationTO) {\n         logic.update(notificationTO);\n+        return Response.noContent().build();\n     }\n \n     @Override\n-    public void delete(final String key) {\n+    public Response delete(final String key) {\n         logic.delete(key);\n+        return Response.noContent().build();\n     }\n \n     @Override\n@@ -71,7 +73,8 @@ public JobTO getJob() {\n     }\n \n     @Override\n-    public void actionJob(final JobAction action) {\n+    public Response actionJob(final JobAction action) {\n         logic.actionJob(action);\n+        return Response.noContent().build();\n     }\n }"},{"sha":"64f765d02dcf7984fee5146527d4468931192663","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/PolicyServiceImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FPolicyServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FPolicyServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FPolicyServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -45,8 +45,9 @@ public Response create(final AbstractPolicyTO policyTO) {\n     }\n \n     @Override\n-    public void delete(final String key) {\n+    public Response delete(final String key) {\n         logic.delete(key);\n+        return Response.noContent().build();\n     }\n \n     @Override\n@@ -60,7 +61,8 @@ public <T extends AbstractPolicyTO> T read(final String key) {\n     }\n \n     @Override\n-    public void update(final AbstractPolicyTO policyTO) {\n+    public Response update(final AbstractPolicyTO policyTO) {\n         logic.update(policyTO);\n+        return Response.noContent().build();\n     }\n }"},{"sha":"ffff1b36e3cbe4d31d7db450750546c3355d43b0","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/RelationshipTypeServiceImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRelationshipTypeServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRelationshipTypeServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRelationshipTypeServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -54,13 +54,15 @@ public Response create(final RelationshipTypeTO anyTypeTO) {\n     }\n \n     @Override\n-    public void update(final RelationshipTypeTO anyTypeTO) {\n+    public Response update(final RelationshipTypeTO anyTypeTO) {\n         logic.update(anyTypeTO);\n+        return Response.noContent().build();\n     }\n \n     @Override\n-    public void delete(final String key) {\n+    public Response delete(final String key) {\n         logic.delete(key);\n+        return Response.noContent().build();\n     }\n \n }"},{"sha":"65e1b43e86779af8ea57edbf9f8a52774c4214da","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ReportServiceImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -54,8 +54,9 @@ public Response create(final ReportTO reportTO) {\n     }\n \n     @Override\n-    public void update(final ReportTO reportTO) {\n+    public Response update(final ReportTO reportTO) {\n         logic.update(reportTO);\n+        return Response.noContent().build();\n     }\n \n     @Override\n@@ -81,7 +82,8 @@ public Response exportExecutionResult(final String executionKey, final ReportExe\n     }\n \n     @Override\n-    public void delete(final String key) {\n+    public Response delete(final String key) {\n         logic.delete(key);\n+        return Response.noContent().build();\n     }\n }"},{"sha":"98dbc161837f107547d1f4e16499d477abe9a162","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ReportTemplateServiceImpl.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportTemplateServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportTemplateServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportTemplateServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -62,8 +62,9 @@ public List<ReportTemplateTO> list() {\n     }\n \n     @Override\n-    public void delete(final String key) {\n+    public Response delete(final String key) {\n         logic.delete(key);\n+        return Response.noContent().build();\n     }\n \n     @Override\n@@ -77,17 +78,19 @@ public Response getFormat(final String key, final ReportTemplateFormat format) {\n     }\n \n     @Override\n-    public void setFormat(final String key, final ReportTemplateFormat format, final InputStream templateIn) {\n+    public Response setFormat(final String key, final ReportTemplateFormat format, final InputStream templateIn) {\n         try {\n             logic.setFormat(key, format, IOUtils.toString(templateIn, StandardCharsets.UTF_8.name()));\n+            return Response.noContent().build();\n         } catch (final IOException e) {\n             LOG.error(\"While setting format {} for report template {}\", format, key, e);\n             throw new InternalServerErrorException(\"Could not read entity\", e);\n         }\n     }\n \n     @Override\n-    public void removeFormat(final String key, final ReportTemplateFormat format) {\n+    public Response removeFormat(final String key, final ReportTemplateFormat format) {\n         logic.setFormat(key, format, null);\n+        return Response.noContent().build();\n     }\n }"},{"sha":"ef5aead8d9a7f91854701a86a14befbba9018484","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ResourceHistoryServiceImpl.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceHistoryServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceHistoryServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceHistoryServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.rest.cxf.service;\n \n import java.util.List;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.ResourceHistoryConfTO;\n import org.apache.syncope.common.rest.api.service.ResourceHistoryService;\n import org.apache.syncope.core.logic.ResourceHistoryLogic;\n@@ -37,13 +38,15 @@ public List<ResourceHistoryConfTO> list(final String resourceKey) {\n     }\n \n     @Override\n-    public void restore(final String key) {\n+    public Response restore(final String key) {\n         logic.restore(key);\n+        return Response.noContent().build();\n     }\n \n     @Override\n-    public void delete(final String key) {\n+    public Response delete(final String key) {\n         logic.delete(key);\n+        return Response.noContent().build();\n     }\n \n }"},{"sha":"e3c99928d36855925392b288ca6efa8956c6a618","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ResourceServiceImpl.java","status":"modified","additions":10,"deletions":5,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FResourceServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -72,23 +72,27 @@ public Response create(final ResourceTO resourceTO) {\n     }\n \n     @Override\n-    public void update(final ResourceTO resourceTO) {\n+    public Response update(final ResourceTO resourceTO) {\n         logic.update(resourceTO);\n+        return Response.noContent().build();\n     }\n \n     @Override\n-    public void setLatestSyncToken(final String key, final String anyTypeKey) {\n+    public Response setLatestSyncToken(final String key, final String anyTypeKey) {\n         logic.setLatestSyncToken(key, anyTypeKey);\n+        return Response.noContent().build();\n     }\n \n     @Override\n-    public void removeSyncToken(final String key, final String anyTypeKey) {\n+    public Response removeSyncToken(final String key, final String anyTypeKey) {\n         logic.removeSyncToken(key, anyTypeKey);\n+        return Response.noContent().build();\n     }\n \n     @Override\n-    public void delete(final String key) {\n+    public Response delete(final String key) {\n         logic.delete(key);\n+        return Response.noContent().build();\n     }\n \n     @Override\n@@ -138,8 +142,9 @@ public PagedConnObjectTOResult listConnObjects(\n     }\n \n     @Override\n-    public void check(final ResourceTO resourceTO) {\n+    public Response check(final ResourceTO resourceTO) {\n         logic.check(resourceTO);\n+        return Response.noContent().build();\n     }\n \n     @Override"},{"sha":"b31b4e1d48a7ead5c4c9e8c44ea696c6cdaac5b6","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/RoleServiceImpl.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FRoleServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -61,13 +61,15 @@ public Response create(final RoleTO roleTO) {\n     }\n \n     @Override\n-    public void update(final RoleTO roleTO) {\n+    public Response update(final RoleTO roleTO) {\n         logic.update(roleTO);\n+        return Response.noContent().build();\n     }\n \n     @Override\n-    public void delete(final String key) {\n+    public Response delete(final String key) {\n         logic.delete(key);\n+        return Response.noContent().build();\n     }\n \n     @Override\n@@ -81,18 +83,20 @@ public Response getConsoleLayoutInfo(final String key) {\n     }\n \n     @Override\n-    public void setConsoleLayoutInfo(final String key, final InputStream consoleLayoutIn) {\n+    public Response setConsoleLayoutInfo(final String key, final InputStream consoleLayoutIn) {\n         try {\n             logic.setConsoleLayoutInfo(key, IOUtils.toString(consoleLayoutIn, StandardCharsets.UTF_8.name()));\n+            return Response.noContent().build();\n         } catch (final IOException e) {\n             LOG.error(\"While setting console layout info for role {}\", key, e);\n             throw new InternalServerErrorException(\"Could not read entity\", e);\n         }\n     }\n \n     @Override\n-    public void removeConsoleLayoutInfo(final String key) {\n+    public Response removeConsoleLayoutInfo(final String key) {\n         logic.setConsoleLayoutInfo(key, null);\n+        return Response.noContent().build();\n     }\n \n }"},{"sha":"b6c739749ce9f204fa0d945e2be8754bdb0463b4","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SchemaServiceImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSchemaServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSchemaServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSchemaServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -47,8 +47,9 @@ public Response create(final SchemaType schemaType, final AbstractSchemaTO schem\n     }\n \n     @Override\n-    public void delete(final SchemaType schemaType, final String key) {\n+    public Response delete(final SchemaType schemaType, final String key) {\n         logic.delete(schemaType, key);\n+        return Response.noContent().build();\n     }\n \n     @Override\n@@ -62,7 +63,8 @@ public <T extends AbstractSchemaTO> T read(final SchemaType schemaType, final St\n     }\n \n     @Override\n-    public void update(final SchemaType schemaType, final AbstractSchemaTO schemaTO) {\n+    public Response update(final SchemaType schemaType, final AbstractSchemaTO schemaTO) {\n         logic.update(schemaType, schemaTO);\n+        return Response.noContent().build();\n     }\n }"},{"sha":"fbfd00a5da2566740d4a840460b2f033ed7cb4ab","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SecurityQuestionServiceImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSecurityQuestionServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSecurityQuestionServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSecurityQuestionServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -55,13 +55,15 @@ public Response create(final SecurityQuestionTO securityQuestionTO) {\n     }\n \n     @Override\n-    public void update(final SecurityQuestionTO securityQuestionTO) {\n+    public Response update(final SecurityQuestionTO securityQuestionTO) {\n         logic.update(securityQuestionTO);\n+        return Response.noContent().build();\n     }\n \n     @Override\n-    public void delete(final String key) {\n+    public Response delete(final String key) {\n         logic.delete(key);\n+        return Response.noContent().build();\n     }\n \n     @Override"},{"sha":"47a860c6d172c9fba3f6c2fb00e8933bed3b9413","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/TaskServiceImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -63,8 +63,9 @@ public Response create(final SchedTaskTO taskTO) {\n     }\n \n     @Override\n-    public void delete(final String key) {\n+    public Response delete(final String key) {\n         logic.delete(key);\n+        return Response.noContent().build();\n     }\n \n     @SuppressWarnings(\"unchecked\")\n@@ -89,9 +90,10 @@ public <T extends AbstractTaskTO> T read(final String key, final boolean details\n     }\n \n     @Override\n-    public void update(final AbstractTaskTO taskTO) {\n+    public Response update(final AbstractTaskTO taskTO) {\n         if (taskTO instanceof SchedTaskTO) {\n             logic.updateSchedTask((SchedTaskTO) taskTO);\n+            return Response.noContent().build();\n         } else {\n             throw new BadRequestException();\n         }"},{"sha":"f6a800f1d0b5c26be4f50da9c6c135d428b65e21","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/UserSelfServiceImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserSelfServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -89,25 +89,27 @@ public Response changePassword(final String password) {\n     }\n \n     @Override\n-    public void requestPasswordReset(final String username, final String securityAnswer) {\n+    public Response requestPasswordReset(final String username, final String securityAnswer) {\n         if (!syncopeLogic.isPwdResetAllowed()) {\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.DelegatedAdministration);\n             sce.getElements().add(\"Password reset forbidden by configuration\");\n             throw sce;\n         }\n \n         logic.requestPasswordReset(username, securityAnswer);\n+        return Response.noContent().build();\n     }\n \n     @Override\n-    public void confirmPasswordReset(final String token, final String password) {\n+    public Response confirmPasswordReset(final String token, final String password) {\n         if (!syncopeLogic.isPwdResetAllowed()) {\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.DelegatedAdministration);\n             sce.getElements().add(\"Password reset forbidden by configuration\");\n             throw sce;\n         }\n \n         logic.confirmPasswordReset(token, password);\n+        return Response.noContent().build();\n     }\n \n }"},{"sha":"4af144bd24554edbf6f520b0d6752f1393fb28bb","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/UserServiceImpl.java","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FUserServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -20,6 +20,7 @@\n \n import java.util.Date;\n import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.patch.StatusPatch;\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n@@ -64,6 +65,23 @@ public Response create(final UserTO userTO, final boolean storePassword) {\n         return createResponse(created);\n     }\n \n+    @Override\n+    public Response update(final UserTO userTO) {\n+        userTO.setKey(getActualKey(userTO.getKey()));\n+        UserTO before = logic.read(userTO.getKey());\n+\n+        checkETag(before.getETagValue());\n+\n+        ProvisioningResult<UserTO> updated =\n+                logic.update(AnyOperations.diff(userTO, before, false), isNullPriorityAsync());\n+        return modificationResponse(updated);\n+    }\n+\n+    @Override\n+    public Response update(final UserPatch userPatch) {\n+        return doUpdate(userPatch);\n+    }\n+\n     @Override\n     public Response status(final StatusPatch statusPatch) {\n         Date etagDate = findLastChange(statusPatch.getKey());"},{"sha":"b67e5bb68bb83e09d07f959909025541c044e3eb","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/WorkflowServiceImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FWorkflowServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FWorkflowServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FWorkflowServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -66,18 +66,20 @@ public Response exportDiagram(final String anyType, final String key) {\n     }\n \n     @Override\n-    public void set(final String anyType, final String key, final String definition) {\n+    public Response set(final String anyType, final String key, final String definition) {\n         WorkflowDefinitionFormat format =\n                 messageContext.getHttpHeaders().getMediaType().equals(MediaType.APPLICATION_JSON_TYPE)\n                 ? WorkflowDefinitionFormat.JSON\n                 : WorkflowDefinitionFormat.XML;\n \n         logic.importDefinition(anyType, key, format, definition);\n+        return Response.noContent().build();\n     }\n \n     @Override\n-    public void delete(final String anyType, final String key) {\n+    public Response delete(final String anyType, final String key) {\n         logic.delete(anyType, key);\n+        return Response.noContent().build();\n     }\n \n }"},{"sha":"e576b5239869c418c6752cc32d5185f543d0b717","filename":"ext/camel/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/CamelRouteService.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FCamelRouteService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -29,6 +29,7 @@\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.CamelMetrics;\n import org.apache.syncope.common.lib.to.CamelRouteTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -64,18 +65,21 @@ public interface CamelRouteService extends JAXRSService {\n      * Update the given route.\n      *\n      * @param route to be updated\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void update(@NotNull CamelRouteTO route);\n+    Response update(@NotNull CamelRouteTO route);\n \n     /**\n      * Restart the underlying Apache Camel context.\n+     *\n+     * @return an empty response if operation was successful\n      */\n     @POST\n     @Path(\"restartContext\")\n-    void restartContext();\n+    Response restartContext();\n \n     /**\n      * Provides Camel metrics."},{"sha":"a7f6fbd034f93a5b8cf525bacc739521341a20e3","filename":"ext/camel/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/CamelRouteServiceImpl.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/ext%2Fcamel%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FCamelRouteServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/ext%2Fcamel%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FCamelRouteServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FCamelRouteServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.rest.cxf.service;\n \n import java.util.List;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.CamelMetrics;\n import org.apache.syncope.common.lib.to.CamelRouteTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -44,13 +45,15 @@ public CamelRouteTO read(final String key) {\n     }\n \n     @Override\n-    public void update(final CamelRouteTO route) {\n+    public Response update(final CamelRouteTO route) {\n         logic.update(route);\n+        return Response.noContent().build();\n     }\n \n     @Override\n-    public void restartContext() {\n+    public Response restartContext() {\n         logic.restartContext();\n+        return Response.noContent().build();\n     }\n \n     @Override"},{"sha":"e2736767411cf517fbbc4b9dce16f2657c4b5655","filename":"ext/saml2sp/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SAML2IdPService.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2IdPService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2IdPService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2IdPService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -84,18 +84,20 @@ public interface SAML2IdPService extends JAXRSService {\n      * Updates the SAML 2.0 Identity Provider with matching entityID.\n      *\n      * @param saml2IdpTO idp configuration to be stored\n+     * @return an empty response if operation was successful\n      */\n     @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void update(@NotNull SAML2IdPTO saml2IdpTO);\n+    Response update(@NotNull SAML2IdPTO saml2IdpTO);\n \n     /**\n      * Deletes the SAML 2.0 Identity Provider with matching entityID.\n      *\n      * @param key SAML 2.0 Identity Provider's entityID\n+     * @return an empty response if operation was successful\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@PathParam(\"key\") String key);\n+    Response delete(@PathParam(\"key\") String key);\n }"},{"sha":"ed964d608f71d854cb12157653be55f813db7bd9","filename":"ext/saml2sp/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SAML2SPService.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2SPService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2SPService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2SPService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -88,10 +88,11 @@ SAML2RequestTO createLoginRequest(\n      * Validates the received SAML 2.0 logout response.\n      *\n      * @param response SAML response and relay state\n+     * @return an empty response if operation was successful\n      */\n     @POST\n     @Path(\"logoutResponse\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void validateLogoutResponse(SAML2ReceivedResponseTO response);\n+    Response validateLogoutResponse(SAML2ReceivedResponseTO response);\n }"},{"sha":"bd2f5f955787de0c1e5c2118aabe376af2809ae0","filename":"ext/saml2sp/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SAML2IdPServiceImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/ext%2Fsaml2sp%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2IdPServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/ext%2Fsaml2sp%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2IdPServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2IdPServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -61,13 +61,15 @@ public Response importFromMetadata(final InputStream input) {\n     }\n \n     @Override\n-    public void update(final SAML2IdPTO saml2IdpTO) {\n+    public Response update(final SAML2IdPTO saml2IdpTO) {\n         logic.update(saml2IdpTO);\n+        return Response.noContent().build();\n     }\n \n     @Override\n-    public void delete(final String key) {\n+    public Response delete(final String key) {\n         logic.delete(key);\n+        return Response.noContent().build();\n     }\n \n }"},{"sha":"93cd87b571dcd159e74c90eece1f4692faa0427b","filename":"ext/saml2sp/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SAML2SPServiceImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/ext%2Fsaml2sp%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2SPServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/ext%2Fsaml2sp%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2SPServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2SPServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -66,8 +66,9 @@ public SAML2RequestTO createLogoutRequest(final String spEntityID) {\n     }\n \n     @Override\n-    public void validateLogoutResponse(final SAML2ReceivedResponseTO response) {\n+    public Response validateLogoutResponse(final SAML2ReceivedResponseTO response) {\n         logic.validateLogoutResponse(getJWTToken(), response);\n+        return Response.noContent().build();\n     }\n \n     private String getJWTToken() {"},{"sha":"1efad9a4649c28051950a4cf0dd480e5eb62f8f0","filename":"ext/scimv2/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SCIMConfService.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/ext%2Fscimv2%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSCIMConfService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/ext%2Fscimv2%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSCIMConfService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSCIMConfService.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -25,6 +25,7 @@\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.scim.SCIMConf;\n \n /**\n@@ -46,8 +47,9 @@ public interface SCIMConfService extends JAXRSService {\n      * Sets SCIM configuration.\n      *\n      * @param conf SCIM configuration\n+     * @return Response.noContent().build();\n      */\n     @PUT\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void set(@NotNull SCIMConf conf);\n+    Response set(@NotNull SCIMConf conf);\n }"},{"sha":"1d147013dcd03c8f9a068c9264f28b899446702b","filename":"ext/scimv2/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SCIMConfServiceImpl.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/ext%2Fscimv2%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSCIMConfServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/ext%2Fscimv2%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSCIMConfServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSCIMConfServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.rest.cxf.service;\n \n+import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.scim.SCIMConf;\n import org.apache.syncope.common.rest.api.service.SCIMConfService;\n import org.apache.syncope.core.logic.scim.SCIMConfManager;\n@@ -34,8 +35,9 @@ public SCIMConf get() {\n     }\n \n     @Override\n-    public void set(final SCIMConf conf) {\n+    public Response set(final SCIMConf conf) {\n         manager.set(conf);\n+        return Response.noContent().build();\n     }\n \n }"},{"sha":"4ecc96689184b40c73a5d21f30d8c0282d1bb9af","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/service/UserServiceImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2Fservice%2FUserServiceImpl.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -40,7 +40,7 @@ public class UserServiceImpl extends AbstractService<SCIMUser> implements UserSe\n \n     @Override\n     public Response create(final SCIMUser user) {\n-        ProvisioningResult<UserTO> result = userLogic().create(binder().toUserTO(user), false);\n+        ProvisioningResult<UserTO> result = userLogic().create(binder().toUserTO(user), true, false);\n         return createResponse(\n                 result.getEntity().getKey(),\n                 binder().toSCIMUser("},{"sha":"6951a609be777486d6829253af8f0fee7c12f9d5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuthenticationITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuthenticationITCase.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -249,7 +249,7 @@ public void delegatedUserCRUD() {\n             // 4. as delegated, create user under realm / -> fail\n             UserTO user = UserITCase.getUniqueSampleTO(\"delegated@syncope.apache.org\");\n             try {\n-                delegatedUserService.create(user);\n+                delegatedUserService.create(user, true);\n                 fail(\"This should not happen\");\n             } catch (SyncopeClientException e) {\n                 assertEquals(ClientExceptionType.DelegatedAdministration, e.getType());\n@@ -258,7 +258,7 @@ public void delegatedUserCRUD() {\n             // 5. set realm to /even/two -> succeed\n             user.setRealm(\"/even/two\");\n \n-            Response response = delegatedUserService.create(user);\n+            Response response = delegatedUserService.create(user, true);\n             assertEquals(Response.Status.CREATED.getStatusCode(), response.getStatus());\n \n             user = response.readEntity(new GenericType<ProvisioningResult<UserTO>>() {"},{"sha":"db176df781bb5fa80096b874d76f68a6fa9fcc1a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/MultitenancyITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -120,7 +120,7 @@ public void createUser() {\n         user.setUsername(getUUIDString());\n         user.setPassword(\"password\");\n \n-        Response response = adminClient.getService(UserService.class).create(user);\n+        Response response = adminClient.getService(UserService.class).create(user, true);\n         assertEquals(Response.Status.CREATED.getStatusCode(), response.getStatus());\n \n         user = response.readEntity(new GenericType<ProvisioningResult<UserTO>>() {"},{"sha":"deacadc43853c712fd1168b0384d5a62934281c4","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SCIMITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -313,9 +313,9 @@ public void search() {\n         assertEquals(\"additional\", additional.getDisplayName());\n \n         // gt\n-        UserTO newUser = userService.create(UserITCase.getUniqueSampleTO(\"scimsearch@syncope.apache.org\")).readEntity(\n-                new GenericType<ProvisioningResult<UserTO>>() {\n-        }).getEntity();\n+        UserTO newUser = userService.create(UserITCase.getUniqueSampleTO(\"scimsearch@syncope.apache.org\"), true).\n+                readEntity(new GenericType<ProvisioningResult<UserTO>>() {\n+                }).getEntity();\n \n         Date value = new Date(newUser.getCreationDate().getTime() - 1000);\n         response = webClient().path(\"Users\").query(\"filter\", \"meta.created gt \\\"\""},{"sha":"83d41c1a7ba86117b0afd3eaa865df2906ff5689","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75ee922abd7072ef1d87824e1388eaa5facfcd04/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75ee922abd7072ef1d87824e1388eaa5facfcd04/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java?ref=75ee922abd7072ef1d87824e1388eaa5facfcd04","patch":"@@ -882,7 +882,7 @@ public void async() {\n         user.getResources().add(RESOURCE_NAME_TESTDB2);\n         user.getResources().add(RESOURCE_NAME_LDAP);\n \n-        ProvisioningResult<UserTO> result = asyncService.create(user).readEntity(\n+        ProvisioningResult<UserTO> result = asyncService.create(user, true).readEntity(\n                 new GenericType<ProvisioningResult<UserTO>>() {\n         });\n         assertNotNull(result);\n@@ -1289,7 +1289,7 @@ public void restResource() {\n         userTO.getResources().add(\"rest-target-resource\");\n \n         // 1. create\n-        ProvisioningResult<UserTO> result = userService.create(userTO).readEntity(\n+        ProvisioningResult<UserTO> result = userService.create(userTO, true).readEntity(\n                 new GenericType<ProvisioningResult<UserTO>>() {\n         });\n         assertEquals(1, result.getPropagationStatuses().size());"}]}