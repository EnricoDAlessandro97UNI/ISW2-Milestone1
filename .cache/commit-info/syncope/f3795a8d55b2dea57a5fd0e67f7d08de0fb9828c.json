{"sha":"f3795a8d55b2dea57a5fd0e67f7d08de0fb9828c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmYzNzk1YThkNTViMmRlYTU3YTVmZDBlNjdmN2QwOGRlMGZiOTgyOGM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-02-12T06:52:27Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-02-12T06:52:51Z"},"message":"[SYNCOPE-1010] Missing mamagement in PushJobDelegate","tree":{"sha":"27e78c84ace1f9daf0abf228b020519c0b1fccc9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/27e78c84ace1f9daf0abf228b020519c0b1fccc9"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f3795a8d55b2dea57a5fd0e67f7d08de0fb9828c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f3795a8d55b2dea57a5fd0e67f7d08de0fb9828c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f3795a8d55b2dea57a5fd0e67f7d08de0fb9828c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f3795a8d55b2dea57a5fd0e67f7d08de0fb9828c/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"c02ed90d89e5679977879e815ee40df595f0f89d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c02ed90d89e5679977879e815ee40df595f0f89d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c02ed90d89e5679977879e815ee40df595f0f89d"}],"stats":{"total":49,"additions":25,"deletions":24},"files":[{"sha":"9d4ab3e3220232cf7462f9801486b81f53169869","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPushResultHandler.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f3795a8d55b2dea57a5fd0e67f7d08de0fb9828c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f3795a8d55b2dea57a5fd0e67f7d08de0fb9828c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java?ref=f3795a8d55b2dea57a5fd0e67f7d08de0fb9828c","patch":"@@ -214,7 +214,7 @@ private void doHandle(final Any<?> any) throws JobExecutionException {\n                     switch (profile.getTask().getUnmatchingRule()) {\n                         case ASSIGN:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeAssign(this.getProfile(), any);\n+                                action.beforeAssign(profile, any);\n                             }\n \n                             if (!profile.getTask().isPerformCreate()) {\n@@ -227,7 +227,7 @@ private void doHandle(final Any<?> any) throws JobExecutionException {\n \n                         case PROVISION:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeProvision(this.getProfile(), any);\n+                                action.beforeProvision(profile, any);\n                             }\n \n                             if (!profile.getTask().isPerformCreate()) {\n@@ -240,7 +240,7 @@ private void doHandle(final Any<?> any) throws JobExecutionException {\n \n                         case UNLINK:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeUnlink(this.getProfile(), any);\n+                                action.beforeUnlink(profile, any);\n                             }\n \n                             if (!profile.getTask().isPerformUpdate()) {\n@@ -264,7 +264,7 @@ private void doHandle(final Any<?> any) throws JobExecutionException {\n                     switch (profile.getTask().getMatchingRule()) {\n                         case UPDATE:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeUpdate(this.getProfile(), any);\n+                                action.beforeUpdate(profile, any);\n                             }\n                             if (!profile.getTask().isPerformUpdate()) {\n                                 LOG.debug(\"PushTask not configured for update\");\n@@ -276,7 +276,7 @@ private void doHandle(final Any<?> any) throws JobExecutionException {\n \n                         case DEPROVISION:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeDeprovision(this.getProfile(), any);\n+                                action.beforeDeprovision(profile, any);\n                             }\n \n                             if (!profile.getTask().isPerformDelete()) {\n@@ -289,7 +289,7 @@ private void doHandle(final Any<?> any) throws JobExecutionException {\n \n                         case UNASSIGN:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeUnassign(this.getProfile(), any);\n+                                action.beforeUnassign(profile, any);\n                             }\n \n                             if (!profile.getTask().isPerformDelete()) {\n@@ -302,7 +302,7 @@ private void doHandle(final Any<?> any) throws JobExecutionException {\n \n                         case LINK:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeLink(this.getProfile(), any);\n+                                action.beforeLink(profile, any);\n                             }\n \n                             if (!profile.getTask().isPerformUpdate()) {\n@@ -315,7 +315,7 @@ private void doHandle(final Any<?> any) throws JobExecutionException {\n \n                         case UNLINK:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeUnlink(this.getProfile(), any);\n+                                action.beforeUnlink(profile, any);\n                             }\n \n                             if (!profile.getTask().isPerformUpdate()) {\n@@ -335,7 +335,7 @@ private void doHandle(final Any<?> any) throws JobExecutionException {\n                 }\n \n                 for (PushActions action : profile.getActions()) {\n-                    action.after(this.getProfile(), any, result);\n+                    action.after(profile, any, result);\n                 }\n \n                 result.setStatus(ProvisioningReport.Status.SUCCESS);\n@@ -352,7 +352,7 @@ private void doHandle(final Any<?> any) throws JobExecutionException {\n                 LOG.warn(\"Error pushing {} towards {}\", any, profile.getTask().getResource(), e);\n \n                 for (PushActions action : profile.getActions()) {\n-                    action.onError(this.getProfile(), any, result, e);\n+                    action.onError(profile, any, result, e);\n                 }\n \n                 throw new JobExecutionException(e);"},{"sha":"be6ffe621b67f96ea1bd8387b3d29ead2504581a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PushJobDelegate.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f3795a8d55b2dea57a5fd0e67f7d08de0fb9828c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f3795a8d55b2dea57a5fd0e67f7d08de0fb9828c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushJobDelegate.java?ref=f3795a8d55b2dea57a5fd0e67f7d08de0fb9828c","patch":"@@ -134,6 +134,7 @@ protected String doExecuteProvisioning(\n         }\n \n         ProvisioningProfile<PushTask, PushActions> profile = new ProvisioningProfile<>(connector, pushTask);\n+        profile.getActions().addAll(actions);\n         profile.setDryRun(dryRun);\n         profile.setResAct(null);\n \n@@ -147,7 +148,7 @@ protected String doExecuteProvisioning(\n         if (pushTask.getResource().getOrgUnit() != null) {\n             SyncopePushResultHandler rhandler =\n                     (SyncopePushResultHandler) ApplicationContextProvider.getBeanFactory().\n-                    createBean(RealmPushResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+                            createBean(RealmPushResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n             rhandler.setProfile(profile);\n \n             for (Realm realm : realmDAO.findAll()) {\n@@ -166,17 +167,17 @@ protected String doExecuteProvisioning(\n         // ...then provisions for any types\n         AnyObjectPushResultHandler ahandler =\n                 (AnyObjectPushResultHandler) ApplicationContextProvider.getBeanFactory().\n-                createBean(AnyObjectPushResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+                        createBean(AnyObjectPushResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n         ahandler.setProfile(profile);\n \n         UserPushResultHandler uhandler =\n                 (UserPushResultHandler) ApplicationContextProvider.getBeanFactory().\n-                createBean(UserPushResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+                        createBean(UserPushResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n         uhandler.setProfile(profile);\n \n         GroupPushResultHandler ghandler =\n                 (GroupPushResultHandler) ApplicationContextProvider.getBeanFactory().\n-                createBean(GroupPushResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+                        createBean(GroupPushResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n         ghandler.setProfile(profile);\n \n         for (Provision provision : pushTask.getResource().getProvisions()) {"},{"sha":"34e753054283e86449420549fb28ba2b6f22b023","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/RealmPushResultHandlerImpl.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f3795a8d55b2dea57a5fd0e67f7d08de0fb9828c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPushResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f3795a8d55b2dea57a5fd0e67f7d08de0fb9828c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPushResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FRealmPushResultHandlerImpl.java?ref=f3795a8d55b2dea57a5fd0e67f7d08de0fb9828c","patch":"@@ -167,7 +167,7 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n                     switch (profile.getTask().getUnmatchingRule()) {\n                         case ASSIGN:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeAssign(this.getProfile(), realm);\n+                                action.beforeAssign(profile, realm);\n                             }\n \n                             if (!profile.getTask().isPerformCreate()) {\n@@ -180,7 +180,7 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n \n                         case PROVISION:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeProvision(this.getProfile(), realm);\n+                                action.beforeProvision(profile, realm);\n                             }\n \n                             if (!profile.getTask().isPerformCreate()) {\n@@ -193,7 +193,7 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n \n                         case UNLINK:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeUnlink(this.getProfile(), realm);\n+                                action.beforeUnlink(profile, realm);\n                             }\n \n                             if (!profile.getTask().isPerformUpdate()) {\n@@ -217,7 +217,7 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n                     switch (profile.getTask().getMatchingRule()) {\n                         case UPDATE:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeUpdate(this.getProfile(), realm);\n+                                action.beforeUpdate(profile, realm);\n                             }\n                             if (!profile.getTask().isPerformUpdate()) {\n                                 LOG.debug(\"PushTask not configured for update\");\n@@ -229,7 +229,7 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n \n                         case DEPROVISION:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeDeprovision(this.getProfile(), realm);\n+                                action.beforeDeprovision(profile, realm);\n                             }\n \n                             if (!profile.getTask().isPerformDelete()) {\n@@ -242,7 +242,7 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n \n                         case UNASSIGN:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeUnassign(this.getProfile(), realm);\n+                                action.beforeUnassign(profile, realm);\n                             }\n \n                             if (!profile.getTask().isPerformDelete()) {\n@@ -255,7 +255,7 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n \n                         case LINK:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeLink(this.getProfile(), realm);\n+                                action.beforeLink(profile, realm);\n                             }\n \n                             if (!profile.getTask().isPerformUpdate()) {\n@@ -268,7 +268,7 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n \n                         case UNLINK:\n                             for (PushActions action : profile.getActions()) {\n-                                action.beforeUnlink(this.getProfile(), realm);\n+                                action.beforeUnlink(profile, realm);\n                             }\n \n                             if (!profile.getTask().isPerformUpdate()) {\n@@ -288,7 +288,7 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n                 }\n \n                 for (PushActions action : profile.getActions()) {\n-                    action.after(this.getProfile(), realm, result);\n+                    action.after(profile, realm, result);\n                 }\n \n                 result.setStatus(ProvisioningReport.Status.SUCCESS);\n@@ -308,7 +308,7 @@ private void doHandle(final Realm realm) throws JobExecutionException {\n                 LOG.warn(\"Error pushing {} towards {}\", realm, profile.getTask().getResource(), e);\n \n                 for (PushActions action : profile.getActions()) {\n-                    action.onError(this.getProfile(), realm, result, e);\n+                    action.onError(profile, realm, result, e);\n                 }\n \n                 throw new JobExecutionException(e);"}]}