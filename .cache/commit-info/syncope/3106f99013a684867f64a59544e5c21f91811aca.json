{"sha":"3106f99013a684867f64a59544e5c21f91811aca","node_id":"C_kwDOJfYA1toAKDMxMDZmOTkwMTNhNjg0ODY3ZjY0YTU5NTQ0ZTVjMjFmOTE4MTFhY2E","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2023-03-14T11:49:36Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2023-03-14T11:50:52Z"},"message":"[SYNCOPE-1737] Restored missing WAClientApp#getAuthModules population (#425)","tree":{"sha":"9f74fe395cab208ac0668b7eab6867bf0cf5808c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9f74fe395cab208ac0668b7eab6867bf0cf5808c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3106f99013a684867f64a59544e5c21f91811aca","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3106f99013a684867f64a59544e5c21f91811aca","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3106f99013a684867f64a59544e5c21f91811aca","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3106f99013a684867f64a59544e5c21f91811aca/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"72de6dcc8992e8f03c44334c3ab8282c63c19f2d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/72de6dcc8992e8f03c44334c3ab8282c63c19f2d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/72de6dcc8992e8f03c44334c3ab8282c63c19f2d"}],"stats":{"total":46,"additions":39,"deletions":7},"files":[{"sha":"6361102ca2536a6d7de07279f9ce590f10ad81fd","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ProvisioningContext.java","status":"modified","additions":9,"deletions":3,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3106f99013a684867f64a59544e5c21f91811aca/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3106f99013a684867f64a59544e5c21f91811aca/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java?ref=3106f99013a684867f64a59544e5c21f91811aca","patch":"@@ -36,6 +36,7 @@\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.ApplicationDAO;\n import org.apache.syncope.core.persistence.api.dao.AuditConfDAO;\n+import org.apache.syncope.core.persistence.api.dao.AuthModuleDAO;\n import org.apache.syncope.core.persistence.api.dao.ConnInstanceDAO;\n import org.apache.syncope.core.persistence.api.dao.DelegationDAO;\n import org.apache.syncope.core.persistence.api.dao.DerSchemaDAO;\n@@ -1223,8 +1224,13 @@ public WAConfigDataBinder waConfigDataBinder(\n     public WAClientAppDataBinder waClientAppDataBinder(\n             final ClientAppDataBinder clientAppDataBinder,\n             final PolicyDataBinder policyDataBinder,\n-            final AuthModuleDataBinder authModuleDataBinder) {\n-\n-        return new WAClientAppDataBinderImpl(clientAppDataBinder, policyDataBinder, authModuleDataBinder);\n+            final AuthModuleDataBinder authModuleDataBinder,\n+            final AuthModuleDAO authModuleDAO) {\n+\n+        return new WAClientAppDataBinderImpl(\n+                clientAppDataBinder,\n+                policyDataBinder,\n+                authModuleDataBinder,\n+                authModuleDAO);\n     }\n }"},{"sha":"cfc65f71fba9f2515b272e0ca4fa6d2a345531a8","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/wa/WAClientAppDataBinderImpl.java","status":"modified","additions":22,"deletions":1,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3106f99013a684867f64a59544e5c21f91811aca/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2Fwa%2FWAClientAppDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3106f99013a684867f64a59544e5c21f91811aca/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2Fwa%2FWAClientAppDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2Fwa%2FWAClientAppDataBinderImpl.java?ref=3106f99013a684867f64a59544e5c21f91811aca","patch":"@@ -18,7 +18,11 @@\n  */\n package org.apache.syncope.core.provisioning.java.data.wa;\n \n+import org.apache.syncope.common.lib.policy.AuthPolicyConf;\n+import org.apache.syncope.common.lib.policy.DefaultAuthPolicyConf;\n import org.apache.syncope.common.lib.wa.WAClientApp;\n+import org.apache.syncope.core.persistence.api.dao.AuthModuleDAO;\n+import org.apache.syncope.core.persistence.api.entity.am.AuthModule;\n import org.apache.syncope.core.persistence.api.entity.am.ClientApp;\n import org.apache.syncope.core.provisioning.api.data.AuthModuleDataBinder;\n import org.apache.syncope.core.provisioning.api.data.ClientAppDataBinder;\n@@ -37,14 +41,18 @@ public class WAClientAppDataBinderImpl implements WAClientAppDataBinder {\n \n     protected final AuthModuleDataBinder authModuleDataBinder;\n \n+    protected final AuthModuleDAO authModuleDAO;\n+\n     public WAClientAppDataBinderImpl(\n             final ClientAppDataBinder clientAppDataBinder,\n             final PolicyDataBinder policyDataBinder,\n-            final AuthModuleDataBinder authModuleDataBinder) {\n+            final AuthModuleDataBinder authModuleDataBinder,\n+            final AuthModuleDAO authModuleDAO) {\n \n         this.clientAppDataBinder = clientAppDataBinder;\n         this.policyDataBinder = policyDataBinder;\n         this.authModuleDataBinder = authModuleDataBinder;\n+        this.authModuleDAO = authModuleDAO;\n     }\n \n     @Override\n@@ -53,11 +61,24 @@ public WAClientApp getWAClientApp(final ClientApp clientApp) {\n         waClientApp.setClientAppTO(clientAppDataBinder.getClientAppTO(clientApp));\n \n         try {\n+            AuthPolicyConf authPolicyConf = null;\n             if (clientApp.getAuthPolicy() != null) {\n+                authPolicyConf = clientApp.getAuthPolicy().getConf();\n                 waClientApp.setAuthPolicy(policyDataBinder.getPolicyTO(clientApp.getAuthPolicy()));\n             } else if (clientApp.getRealm() != null && clientApp.getRealm().getAuthPolicy() != null) {\n+                authPolicyConf = clientApp.getRealm().getAuthPolicy().getConf();\n                 waClientApp.setAuthPolicy(policyDataBinder.getPolicyTO(clientApp.getRealm().getAuthPolicy()));\n             }\n+            if (authPolicyConf instanceof DefaultAuthPolicyConf) {\n+                ((DefaultAuthPolicyConf) authPolicyConf).getAuthModules().forEach(key -> {\n+                    AuthModule authModule = authModuleDAO.find(key);\n+                    if (authModule == null) {\n+                        LOG.warn(\"AuthModule \" + authModule + \" not found\");\n+                    } else {\n+                        waClientApp.getAuthModules().add(authModuleDataBinder.getAuthModuleTO(authModule));\n+                    }\n+                });\n+            }\n \n             if (clientApp.getAccessPolicy() != null) {\n                 waClientApp.setAccessPolicy(policyDataBinder.getPolicyTO(clientApp.getAccessPolicy()));"},{"sha":"37c08cd1fcbebcee95d1bb09cb3ddc0b5e480162","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/DefaultAuthMapper.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3106f99013a684867f64a59544e5c21f91811aca/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FDefaultAuthMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3106f99013a684867f64a59544e5c21f91811aca/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FDefaultAuthMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FDefaultAuthMapper.java?ref=3106f99013a684867f64a59544e5c21f91811aca","patch":"@@ -61,8 +61,9 @@ public AuthMapperResult build(\n         Set<Pair<String, String>> delegatedAuthHandlers = new HashSet<>();\n \n         DefaultAuthPolicyConf policyConf = (DefaultAuthPolicyConf) policy.getConf();\n-        if (!policyConf.getAuthModules().isEmpty()) {\n-            Set<String> authHandlers = new HashSet<>(policyConf.getAuthModules());\n+        Set<String> authHandlers = authModules.stream().map(AuthModuleTO::getKey).\n+                collect(Collectors.toCollection(HashSet::new));\n+        if (!authHandlers.isEmpty()) {\n             mfaAuthHandlers.addAll(authEventExecPlan.getObject().getAuthenticationHandlers().stream().\n                     filter(MultifactorAuthenticationHandler.class::isInstance).\n                     filter(mfaAuthHander -> policyConf.getAuthModules().contains(mfaAuthHander.getName()))."},{"sha":"87e6303d155f02a73f2b579624a7e66bef71f30b","filename":"wa/starter/src/test/java/org/apache/syncope/wa/starter/WAServiceRegistryTest.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3106f99013a684867f64a59544e5c21f91811aca/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FWAServiceRegistryTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3106f99013a684867f64a59544e5c21f91811aca/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FWAServiceRegistryTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FWAServiceRegistryTest.java?ref=3106f99013a684867f64a59544e5c21f91811aca","patch":"@@ -104,6 +104,10 @@ private static void addPolicies(\n \n         waClientApp.setAuthPolicy(authPolicy);\n \n+        AuthModuleTO authModule = new AuthModuleTO();\n+        authModule.setKey(\"TestAuthModule\");\n+        waClientApp.getAuthModules().add(authModule);\n+\n         AccessPolicyTO accessPolicy = new AccessPolicyTO();\n         DefaultAccessPolicyConf accessPolicyConf = new DefaultAccessPolicyConf();\n         accessPolicyConf.setEnabled(true);\n@@ -260,7 +264,7 @@ public void delegatedAuthentication() {\n         assertNotNull(service);\n \n         assertEquals(\n-                Set.of(\"DelegatedClientAuthenticationHandler\"),\n+                Set.of(\"TestAuthModule\", \"DelegatedClientAuthenticationHandler\"),\n                 service.getAuthenticationPolicy().getRequiredAuthenticationHandlers());\n \n         RegisteredServiceAccessStrategy accessStrategy = service.getAccessStrategy();"}]}