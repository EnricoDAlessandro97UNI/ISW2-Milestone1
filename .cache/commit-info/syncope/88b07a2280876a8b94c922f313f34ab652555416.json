{"sha":"88b07a2280876a8b94c922f313f34ab652555416","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg4YjA3YTIyODA4NzZhOGI5NGM5MjJmMzEzZjM0YWI2NTI1NTU0MTY=","commit":{"author":{"name":"skylark17","email":"matteo.alessandroni@tirasa.net","date":"2019-06-10T09:18:48Z"},"committer":{"name":"skylark17","email":"matteo.alessandroni@tirasa.net","date":"2019-06-10T09:25:19Z"},"message":"[SYNCOPE-1421] Fix to Enduser and Console tests","tree":{"sha":"52870d0d8c82b91f45b1b1f6bd30da822d7fb83f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/52870d0d8c82b91f45b1b1f6bd30da822d7fb83f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/88b07a2280876a8b94c922f313f34ab652555416","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/88b07a2280876a8b94c922f313f34ab652555416","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/88b07a2280876a8b94c922f313f34ab652555416","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/88b07a2280876a8b94c922f313f34ab652555416/comments","author":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"committer":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"parents":[{"sha":"e9743ceb3d8256e958df333689e6e707a91b5a86","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e9743ceb3d8256e958df333689e6e707a91b5a86","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e9743ceb3d8256e958df333689e6e707a91b5a86"}],"stats":{"total":3216,"additions":1776,"deletions":1440},"files":[{"sha":"d6423c7371f12db90533f4dab20d28ca5920d993","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/init/ClassPathScanImplementationLookup.java","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Finit%2FClassPathScanImplementationLookup.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -25,6 +25,7 @@\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.syncope.client.enduser.annotations.ExtPage;\n import org.apache.syncope.client.enduser.annotations.Resource;\n+import org.apache.syncope.client.enduser.pages.BaseEnduserWebPage;\n import org.apache.syncope.client.enduser.pages.BaseExtPage;\n import org.apache.syncope.client.ui.commons.annotations.BinaryPreview;\n import org.apache.syncope.client.ui.commons.markup.html.form.preview.AbstractBinaryPreviewer;\n@@ -51,6 +52,8 @@ public class ClassPathScanImplementationLookup {\n \n     private List<Class<? extends BaseExtPage>> extPages;\n \n+    private List<Class<? extends BaseEnduserWebPage>> pages;\n+\n     /**\n      * This method can be overridden by subclasses to customize classpath scan.\n      *\n@@ -62,6 +65,7 @@ protected String getBasePackage() {\n \n     @SuppressWarnings(\"unchecked\")\n     public void load() {\n+        pages = new ArrayList<>();\n         previewers = new ArrayList<>();\n         extPages = new ArrayList<>();\n         ssoLoginFormPanels = new ArrayList<>();\n@@ -72,6 +76,7 @@ public void load() {\n         scanner.addIncludeFilter(new AssignableTypeFilter(BaseExtPage.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(BaseSSOLoginFormPanel.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(AbstractBinaryPreviewer.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(BaseEnduserWebPage.class));\n \n         for (BeanDefinition bd : scanner.findCandidateComponents(getBasePackage())) {\n             try {\n@@ -96,6 +101,8 @@ public void load() {\n                         previewers.add((Class<? extends AbstractBinaryPreviewer>) clazz);\n                     } else if (BaseSSOLoginFormPanel.class.isAssignableFrom(clazz)) {\n                         ssoLoginFormPanels.add((Class<? extends BaseSSOLoginFormPanel>) clazz);\n+                    } else if (BaseEnduserWebPage.class.isAssignableFrom(clazz)) {\n+                        pages.add((Class<? extends BaseEnduserWebPage>) clazz);\n                     }\n                 }\n             } catch (Throwable t) {\n@@ -106,6 +113,8 @@ public void load() {\n \n         ssoLoginFormPanels = Collections.unmodifiableList(ssoLoginFormPanels);\n \n+        pages = Collections.unmodifiableList(pages);\n+\n         LOG.debug(\"Binary previewers found: {}\", previewers);\n         LOG.debug(\"Extension pages found: {}\", extPages);\n         LOG.debug(\"SSO Login pages found: {}\", ssoLoginFormPanels);\n@@ -137,5 +146,9 @@ public List<Class<? extends BaseSSOLoginFormPanel>> getSSOLoginFormPanels() {\n     public List<Class<? extends BaseExtPage>> getExtPageClasses() {\n         return extPages;\n     }\n+    \n+    public List<Class<? extends BaseEnduserWebPage>> getPageClasses() {\n+        return pages;\n+    }\n \n }"},{"sha":"28dd0a3c3658bfb4fb328201319cc6b592057644","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractConsoleITCase.java","status":"modified","additions":10,"deletions":7,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractConsoleITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -34,6 +34,7 @@\n import org.apache.syncope.common.keymaster.client.self.SelfKeymasterClientContext;\n import org.apache.syncope.common.rest.api.service.SyncopeService;\n import org.apache.syncope.fit.ui.AbstractUITCase;\n+import org.apache.syncope.fit.ui.UtilityUIT;\n import org.apache.wicket.util.tester.FormTester;\n import org.apache.wicket.util.tester.WicketTester;\n import org.junit.jupiter.api.BeforeAll;\n@@ -44,9 +45,11 @@\n \n public abstract class AbstractConsoleITCase extends AbstractUITCase {\n \n+    protected static UtilityUIT UTILITY_UI;\n+\n     @ImportAutoConfiguration(classes = { SelfKeymasterClientContext.class })\n     @Configuration\n-    public static class SyncopeWebApplicationTestConfig {\n+    public static class SyncopeConsoleWebApplicationTestConfig {\n \n         @Bean\n         public GeneralSettingsProperties generalSettingsProperties() {\n@@ -91,13 +94,13 @@ public PreviewUtils previewUtils() {\n     @BeforeAll\n     public static void setUp() {\n         synchronized (LOG) {\n-            if (TESTER == null) {\n+            if (UTILITY_UI == null) {\n                 AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();\n-                ctx.register(SyncopeWebApplicationTestConfig.class);\n+                ctx.register(SyncopeConsoleWebApplicationTestConfig.class);\n                 ctx.register(SyncopeWebApplication.class);\n                 ctx.refresh();\n \n-                TESTER = new WicketTester(ctx.getBean(SyncopeWebApplication.class));\n+                UTILITY_UI = new UtilityUIT(new WicketTester(ctx.getBean(SyncopeWebApplication.class)));\n             }\n \n             if (SYNCOPE_SERVICE == null) {\n@@ -109,10 +112,10 @@ public static void setUp() {\n     }\n \n     protected void doLogin(final String user, final String passwd) {\n-        TESTER.startPage(Login.class);\n-        TESTER.assertRenderedPage(Login.class);\n+        UTILITY_UI.getTester().startPage(Login.class);\n+        UTILITY_UI.getTester().assertRenderedPage(Login.class);\n \n-        FormTester formTester = TESTER.newFormTester(\"login\");\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\"login\");\n         formTester.setValue(\"username\", user);\n         formTester.setValue(\"password\", passwd);\n         formTester.submit(\"submit\");"},{"sha":"08b50d1396de74d4e95ac269782cb724ea57c87f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AbstractTypesITCase.java","status":"modified","additions":50,"deletions":47,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractTypesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractTypesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAbstractTypesITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -42,128 +42,131 @@ public void login() {\n     }\n \n     protected void browsingToRelationshipType() {\n-        TESTER.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n-        TESTER.assertRenderedPage(Types.class);\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n+        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n \n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n-        TESTER.assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n+        UTILITY_UI.getTester().assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n     }\n \n     protected void browsingToAnyTypes() {\n-        TESTER.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n-        TESTER.assertRenderedPage(Types.class);\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n+        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n \n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n-        TESTER.assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n     }\n \n     protected void browsingToAnyTypeClasses() {\n-        TESTER.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n-        TESTER.assertRenderedPage(Types.class);\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n+        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n \n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n-        TESTER.assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        UTILITY_UI.getTester().assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n     }\n \n     protected void browsingToPlainSchemas() {\n-        TESTER.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n-        TESTER.assertRenderedPage(Types.class);\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n+        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n \n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n-        TESTER.assertComponent(PLAIN_DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        UTILITY_UI.getTester().assertComponent(PLAIN_DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n     }\n \n     protected void browsingToVirtualSchemas() {\n-        TESTER.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n-        TESTER.assertRenderedPage(Types.class);\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n+        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n \n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n-        TESTER.assertComponent(VIRTUAL_DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        UTILITY_UI.getTester().assertComponent(VIRTUAL_DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n     }\n \n     protected void createPlainSchema(final String key) {\n         browsingToPlainSchemas();\n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:container:content:add\");\n \n-        TESTER.assertComponent(\n+        UTILITY_UI.getTester().assertComponent(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:details:key:textField\", key);\n         formTester.setValue(\"content:form:view:details:type:dropDownChoiceField\", \"3\");\n-        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:0:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:0:\"\n                 + \"body:content:outerObjectsRepeater:0:outer:form:content:form:buttons:next\", Constants.ON_CLICK);\n \n-        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n+        formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n \n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n     }\n \n     protected void createAnyTypeClassWithoutSchema(final String name) {\n         browsingToAnyTypeClasses();\n \n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        final FormTester formTester = TESTER.newFormTester(\n+        final FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:anyTypeClassDetailsPanel:form:key:textField\", name);\n \n-        TESTER.clearFeedbackMessages();\n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clearFeedbackMessages();\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n \n-        TESTER.clearFeedbackMessages();\n+        UTILITY_UI.getTester().clearFeedbackMessages();\n     }\n \n     protected void createAnyType(final String name) {\n         browsingToAnyTypes();\n \n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        final FormTester formTester = TESTER.newFormTester(\n+        final FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:anyTypeDetailsPanel:container:form:key:textField\", name);\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n \n-        TESTER.clearFeedbackMessages();\n+        UTILITY_UI.getTester().clearFeedbackMessages();\n     }\n \n     protected void createRelationshipType(final String name) {\n         browsingToRelationshipType();\n \n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        final FormTester formTester = TESTER.newFormTester(\n+        final FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:relationshipTypeDetails:container:form:key:textField\", name);\n         formTester.setValue(\n                 \"content:relationshipTypeDetails:container:form:description:textField\", \"test relationshipType\");\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n \n-        TESTER.clearFeedbackMessages();\n-        TESTER.assertRenderedPage(Types.class);\n+        UTILITY_UI.getTester().clearFeedbackMessages();\n+        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n     }\n }"},{"sha":"52f1ab511c06364a38d13585d1ad59ad118475c5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AjaxBrowseITCase.java","status":"modified","additions":21,"deletions":21,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxBrowseITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxBrowseITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxBrowseITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -36,50 +36,50 @@ public class AjaxBrowseITCase extends AbstractConsoleITCase {\n \n     @Test\n     public void loginPage() {\n-        TESTER.startPage(Login.class);\n-        TESTER.assertRenderedPage(Login.class);\n+        UTILITY_UI.getTester().startPage(Login.class);\n+        UTILITY_UI.getTester().assertRenderedPage(Login.class);\n     }\n \n     @Test\n     public void successfulLogin() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        TESTER.assertRenderedPage(Dashboard.class);\n+        UTILITY_UI.getTester().assertRenderedPage(Dashboard.class);\n     }\n \n     @Test\n     public void unsuccessfulLogin() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD + 1);\n-        TESTER.assertRenderedPage(Login.class);\n+        UTILITY_UI.getTester().assertRenderedPage(Login.class);\n     }\n \n     @Test\n     public void browsingBookmarkablePageLink() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n \n-        TESTER.assertRenderedPage(Dashboard.class);\n+        UTILITY_UI.getTester().assertRenderedPage(Dashboard.class);\n \n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.assertRenderedPage(Realms.class);\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().assertRenderedPage(Realms.class);\n \n-        TESTER.clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n-        TESTER.assertRenderedPage(Topology.class);\n+        UTILITY_UI.getTester().clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n+        UTILITY_UI.getTester().assertRenderedPage(Topology.class);\n \n-        TESTER.clickLink(\"body:reportsLI:reports\");\n-        TESTER.assertRenderedPage(Reports.class);\n+        UTILITY_UI.getTester().clickLink(\"body:reportsLI:reports\");\n+        UTILITY_UI.getTester().assertRenderedPage(Reports.class);\n \n-        TESTER.clickLink(\"body:configurationLI:configurationUL:logsLI:logs\");\n-        TESTER.assertRenderedPage(Logs.class);\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:logsLI:logs\");\n+        UTILITY_UI.getTester().assertRenderedPage(Logs.class);\n \n-        TESTER.clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n-        TESTER.assertRenderedPage(Types.class);\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:typesLI:types\");\n+        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n \n-        TESTER.clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n-        TESTER.assertRenderedPage(Security.class);\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n+        UTILITY_UI.getTester().assertRenderedPage(Security.class);\n \n-        TESTER.clickLink(\"body:configurationLI:configurationUL:policiesLI:policies\");\n-        TESTER.assertRenderedPage(Policies.class);\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:policiesLI:policies\");\n+        UTILITY_UI.getTester().assertRenderedPage(Policies.class);\n \n-        TESTER.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n-        TESTER.assertRenderedPage(Notifications.class);\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n+        UTILITY_UI.getTester().assertRenderedPage(Notifications.class);\n     }\n }"},{"sha":"233acdadaa9f7633308fd81e32c930a888f75cba","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AjaxPalettePanelITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxPalettePanelITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxPalettePanelITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxPalettePanelITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -41,10 +41,10 @@ public void isRendered() {\n         TestPage<String, AjaxPalettePanel<String>> testPage =\n                 new TestPage.Builder<String, AjaxPalettePanel<String>>().build(\n                         new AjaxPalettePanel.Builder<String>().setAllowOrder(true).build(\n-                        TestPage.FIELD, SELECTED, ALL));\n-        TESTER.startPage(testPage);\n+                                TestPage.FIELD, SELECTED, ALL));\n+        UTILITY_UI.getTester().startPage(testPage);\n \n-        FormTester formTester = TESTER.newFormTester(testPage.getForm().getId());\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(testPage.getForm().getId());\n         formTester.submit();\n \n         Collection<String> list = testPage.getFieldPanel().getModelCollection();"},{"sha":"50dd1a6899fb9652f7f6d64c0fb6582a812f1f35","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AjaxTextFieldITCase.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxTextFieldITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxTextFieldITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAjaxTextFieldITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -38,8 +38,8 @@ public void emptyInputConvertedToNull() {\n         TestPage<String, AjaxTextFieldPanel> testPage =\n                 new TestPage.Builder<String, AjaxTextFieldPanel>().build(\n                         new AjaxTextFieldPanel(TestPage.FIELD, TestPage.FIELD, TEXT_MODEL));\n-        TESTER.startPage(testPage);\n-        FormTester formTester = TESTER.newFormTester(testPage.getForm().getId());\n+        UTILITY_UI.getTester().startPage(testPage);\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(testPage.getForm().getId());\n         formTester.setValue(\"field:textField\", \"\");\n         formTester.submit();\n         assertNull(testPage.getFieldPanel().getField().getDefaultModelObject());\n@@ -52,8 +52,8 @@ public void valueAttribute() {\n                         new AjaxTextFieldPanel(TestPage.FIELD, TestPage.FIELD, TEXT_MODEL));\n         String text = \"sometext\";\n         TEXT_MODEL.setObject(text);\n-        TESTER.startPage(testPage);\n-        assertTrue(TESTER.getLastResponseAsString().contains(Strings.escapeMarkup(text)));\n+        UTILITY_UI.getTester().startPage(testPage);\n+        assertTrue(UTILITY_UI.getTester().getLastResponseAsString().contains(Strings.escapeMarkup(text)));\n     }\n \n     @Test\n@@ -63,8 +63,8 @@ public void nullIsNotValidated() {\n                         new AjaxTextFieldPanel(TestPage.FIELD, TestPage.FIELD, TEXT_MODEL));\n         testPage.getFieldPanel().getField().setRequired(false);\n         testPage.getFieldPanel().getField().add(StringValidator.minimumLength(2));\n-        TESTER.startPage(testPage);\n-        FormTester formTester = TESTER.newFormTester(testPage.getForm().getId());\n+        UTILITY_UI.getTester().startPage(testPage);\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(testPage.getForm().getId());\n         formTester.setValue(\"field:textField\", \"\");\n         formTester.submit();\n         assertNull(testPage.getFieldPanel().getDefaultModelObject());\n@@ -78,9 +78,9 @@ public void requiredAttribute() {\n                         new AjaxTextFieldPanel(TestPage.FIELD, TestPage.FIELD, TEXT_MODEL));\n         testPage.getFieldPanel().setOutputMarkupId(true);\n         testPage.getFieldPanel().getField().setRequired(true);\n-        TESTER.startPage(testPage);\n-        TESTER.assertLabel(\"form:field:field-label\", \"field\");\n-        TESTER.assertVisible(\"form:field:required\");\n-        TESTER.assertVisible(\"form:field:externalAction\");\n+        UTILITY_UI.getTester().startPage(testPage);\n+        UTILITY_UI.getTester().assertLabel(\"form:field:field-label\", \"field\");\n+        UTILITY_UI.getTester().assertVisible(\"form:field:required\");\n+        UTILITY_UI.getTester().assertVisible(\"form:field:externalAction\");\n     }\n }"},{"sha":"534d523b4a2baad10ce0de131f0af11b7788d6a7","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyObjectsITCase.java","status":"modified","additions":38,"deletions":31,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -42,104 +42,111 @@ public void login() {\n \n     @Test\n     public void filteredSearch() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n \n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n \n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n \n-        TESTER.executeAjaxEvent(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:\"\n                 + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panelPlus:add\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(\n+        UTILITY_UI.getTester().assertComponent(\n                 \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n                 + \"searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panel:container:value:\"\n                 + \"textField\", TextField.class);\n     }\n \n     @Test\n     public void clickToClonePrinter() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n \n-        Component component = findComponentByProp(\"key\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"key\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:1:action:action\");\n \n-        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         formTester.submit(\"buttons:cancel\");\n     }\n \n     @Test\n     public void editPrinter() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n \n-        Component component = findComponentByProp(\"key\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"key\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n \n-        TESTER.assertComponent(TAB_PANEL\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:\"\n                 + \"firstLevelContainer:first:container:content:group:beans:0:fields:0:field\", Label.class);\n \n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n-        component = findComponentByProp(\"key\", CONTAINER\n+        component = UTILITY_UI.findComponentByProp(\"key\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n     }\n \n     @Test\n     public void checkDeletePrinterLink() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n \n-        Component component = findComponentByProp(\"key\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"key\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.assertComponent(TAB_PANEL\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:5:action:action\",\n                 IndicatingOnConfirmAjaxLink.class);"},{"sha":"4e265d539dd1a8a41133d7efb9a3e8f225df16e5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyTypeClassesITCase.java","status":"modified","additions":45,"deletions":41,"changes":86,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypeClassesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypeClassesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypeClassesITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -37,48 +37,51 @@ public class AnyTypeClassesITCase extends AbstractTypesITCase {\n     public void read() {\n         browsingToAnyTypeClasses();\n \n-        Component component = findComponentByProp(KEY, DATATABLE_PATH, \"csv\");\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        Component component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, \"csv\");\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n \n         // click edit\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", BaseModal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                BaseModal.class);\n     }\n \n     @Test\n     public void create() {\n         browsingToAnyTypeClasses();\n         final String anyTypeClassTest = \"anyTypeClassTest\";\n \n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:anyTypeClassDetailsPanel:form:key:textField\", anyTypeClassTest);\n         formTester.setValue(\n                 \"content:anyTypeClassDetailsPanel:form:container:derSchemas:paletteField:recorder\", \"mderiveddata\");\n \n-        TESTER.clearFeedbackMessages();\n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clearFeedbackMessages();\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n \n-        TESTER.clearFeedbackMessages();\n-        TESTER.assertRenderedPage(Types.class);\n+        UTILITY_UI.getTester().clearFeedbackMessages();\n+        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n \n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n-        TESTER.assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        UTILITY_UI.getTester().assertComponent(DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable\",\n                 AjaxFallbackDataTable.class);\n \n-        TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n+        UTILITY_UI.getTester().assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n \n-        Component result = findComponentByProp(KEY, DATATABLE_PATH, anyTypeClassTest);\n+        Component result = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, anyTypeClassTest);\n \n-        TESTER.assertLabel(result.getPageRelativePath() + \":cells:3:cell\", \"[mderiveddata]\");\n+        UTILITY_UI.getTester().assertLabel(result.getPageRelativePath() + \":cells:3:cell\", \"[mderiveddata]\");\n     }\n \n     @Test\n@@ -89,42 +92,43 @@ public void update() {\n         createPlainSchema(plainSchema);\n         browsingToAnyTypeClasses();\n \n-        Component component = findComponentByProp(KEY, DATATABLE_PATH, name);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        Component component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, name);\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n \n         // click edit\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\n                 \"content:anyTypeClassDetailsPanel:form:container:plainSchemas:paletteField:recorder\", plainSchema);\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        component = findComponentByProp(KEY, DATATABLE_PATH, name);\n+        component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, name);\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n \n         // click delete\n-        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"));\n \n-        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"),\n                 Constants.ON_CLICK);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n-        component = findComponentByProp(KEY, DATATABLE_PATH, name);\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, name);\n \n         assertNull(component);\n     }\n@@ -134,28 +138,28 @@ public void delete() {\n         final String anyTypeClassName = \"zStringDelete\";\n         createAnyTypeClassWithoutSchema(anyTypeClassName);\n         browsingToAnyTypeClasses();\n-        TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n+        UTILITY_UI.getTester().assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n \n-        Component component = findComponentByProp(KEY, DATATABLE_PATH, anyTypeClassName);\n+        Component component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, anyTypeClassName);\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n \n         // click delete\n-        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"));\n \n-        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"),\n                 Constants.ON_CLICK);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n \n-        TESTER.cleanupFeedbackMessages();\n-        component = findComponentByProp(KEY, DATATABLE_PATH, anyTypeClassName);\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, anyTypeClassName);\n \n         assertNull(component);\n     }"},{"sha":"5b6034fa8a5541f3e1ffc1bc63dc08a5cda0ee40","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyTypesITCase.java","status":"modified","additions":42,"deletions":37,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyTypesITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -37,56 +37,60 @@ public class AnyTypesITCase extends AbstractTypesITCase {\n     @Test\n     public void read() {\n         browsingToAnyTypes();\n-        TESTER.assertComponent(\n+        UTILITY_UI.getTester().assertComponent(\n                 DATATABLE_PATH\n                 + \":tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable:body:rows:1:cells:1:cell\", Label.class);\n \n-        Component component = findComponentByProp(KEY, DATATABLE_PATH, \"GROUP\");\n+        Component component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, \"GROUP\");\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n \n         // click edit\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", BaseModal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                BaseModal.class);\n     }\n \n     @Test\n     public void create() {\n         browsingToAnyTypes();\n         final String anyTypeTest = \"anyTypeTest2\";\n \n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        final FormTester formTester = TESTER.newFormTester(\n+        final FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:anyTypeDetailsPanel:container:form:key:textField\", anyTypeTest);\n         formTester.setValue(\"content:anyTypeDetailsPanel:container:form:classes:paletteField:recorder\", \"csv\");\n \n-        TESTER.clearFeedbackMessages();\n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clearFeedbackMessages();\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n \n-        TESTER.clearFeedbackMessages();\n-        TESTER.assertRenderedPage(Types.class);\n+        UTILITY_UI.getTester().clearFeedbackMessages();\n+        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n \n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n-        TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n \n-        Component component = findComponentByProp(KEY, DATATABLE_PATH, anyTypeTest);\n+        Component component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, anyTypeTest);\n \n-        TESTER.assertLabel(component.getPageRelativePath() + \":cells:1:cell\", anyTypeTest);\n-        TESTER.assertLabel(component.getPageRelativePath() + \":cells:3:cell\", \"[csv]\");\n+        UTILITY_UI.getTester().assertLabel(component.getPageRelativePath() + \":cells:1:cell\", anyTypeTest);\n+        UTILITY_UI.getTester().assertLabel(component.getPageRelativePath() + \":cells:3:cell\", \"[csv]\");\n \n         // issue SYNCOPE-1111\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.assertRenderedPage(Realms.class);\n-        TESTER.assertLabel(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:4:link:title\",\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().assertRenderedPage(Realms.class);\n+        UTILITY_UI.getTester().assertLabel(\n+                \"body:content:body:container:content:tabbedPanel:tabs-container:tabs:4:link:title\",\n                 anyTypeTest);\n     }\n \n@@ -96,24 +100,25 @@ public void update() {\n         createAnyTypeClassWithoutSchema(name);\n         browsingToAnyTypes();\n \n-        Component component = findComponentByProp(KEY, DATATABLE_PATH, \"GROUP\");\n+        Component component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, \"GROUP\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n \n         // click edit\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        final FormTester formTester = TESTER.newFormTester(\n+        final FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\n                 \"content:anyTypeDetailsPanel:container:form:classes:paletteField:recorder\", name + \",minimal group\");\n \n-        TESTER.clearFeedbackMessages();\n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clearFeedbackMessages();\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n     }\n \n     @Test\n@@ -122,28 +127,28 @@ public void delete() {\n         createAnyType(name);\n         browsingToAnyTypes();\n \n-        TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n-        Component component = findComponentByProp(KEY, DATATABLE_PATH, name);\n+        UTILITY_UI.getTester().assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n+        Component component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, name);\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n \n-        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n \n         // click delete\n-        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"));\n \n-        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"),\n                 Constants.ON_CLICK);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n \n-        TESTER.cleanupFeedbackMessages();\n-        component = findComponentByProp(KEY, DATATABLE_PATH, name);\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        component = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, name);\n \n         assertNull(component);\n     }"},{"sha":"cab8a3d2edfd35ab8e79a5557809e7c0d2e48a33","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/BatchesITCase.java","status":"modified","additions":100,"deletions":84,"changes":184,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBatchesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBatchesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBatchesITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -44,68 +44,70 @@ public void login() {\n \n     @Test\n     public void users() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        FormTester formTester = TESTER.newFormTester(CONTAINER + \"searchContainer:resultTable:tablePanel:groupForm\");\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(CONTAINER\n+                + \"searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 2);\n \n-        TESTER.executeAjaxEvent(CONTAINER + \"searchContainer:resultTable:tablePanel:batchLink\",\n+        UTILITY_UI.getTester().executeAjaxEvent(CONTAINER + \"searchContainer:resultTable:tablePanel:batchLink\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(CONTAINER\n+        UTILITY_UI.getTester().assertComponent(CONTAINER\n                 + \"searchContainer:resultTable:batchModal:form:content:content:container\", WebMarkupContainer.class);\n \n-        assertNotNull(findComponentByProp(\"username\", CONTAINER\n+        assertNotNull(UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \"searchContainer:resultTable:batchModal:form:content:content:container\", \"rossini\"));\n     }\n \n     @Test\n     public void userResource() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         // manage resource\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n                 + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:5:\"\n                 + \"action:action\");\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        component = findComponentByProp(\"resource\",\n+        component = UTILITY_UI.findComponentByProp(\"resource\",\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"resource-csv\");\n         assertNotNull(component);\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 0);\n \n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:batchLink\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        assertNotNull(findComponentByProp(\"resource\", TAB_PANEL + \"outerObjectsRepeater:2:outer:\"\n+        assertNotNull(UTILITY_UI.findComponentByProp(\"resource\", TAB_PANEL + \"outerObjectsRepeater:2:outer:\"\n                 + \"form:content:status:secondLevelContainer:second:container\", \"resource-csv\"));\n     }\n \n@@ -121,243 +123,257 @@ public void userStatusOnSyncopeOnly() {\n \n     private void userStatusBatch(final int index, final String resource) {\n         // suspend \n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         // enable\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n                 + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:4:\"\n                 + \"action:action\");\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        component = findComponentByProp(\"resource\",\n+        component = UTILITY_UI.findComponentByProp(\"resource\",\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", resource);\n \n-        component = TESTER.getComponentFromLastRenderedPage(component.getPageRelativePath() + \":cells:1:cell:check\");\n+        component = UTILITY_UI.getTester().getComponentFromLastRenderedPage(component.getPageRelativePath()\n+                + \":cells:1:cell:check\");\n         assertEquals(Status.ACTIVE, StatusBean.class.cast(component.getDefaultModelObject()).getStatus());\n         assertEquals(resource, StatusBean.class.cast(component.getDefaultModelObject()).getResource());\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", index);\n \n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:batchLink\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n         // suspend link\n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:secondLevelContainer:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+                + \"outerObjectsRepeater:2:outer:form:content:status:secondLevelContainer:\"\n                 + \"second:container:actions:actionRepeater:0:action:action\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.assertLabel(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        UTILITY_UI.getTester().assertLabel(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container:selectedObjects:body:rows:1:cells:4:cell\", \"SUCCESS\");\n \n-        TESTER.executeAjaxEvent(TAB_PANEL\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n                 + \"outerObjectsRepeater:2:outer:form:content:status:secondLevelContainer:back\",\n                 Constants.ON_CLICK);\n \n-        component = findComponentByProp(\"resource\",\n+        component = UTILITY_UI.findComponentByProp(\"resource\",\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", resource);\n \n-        component = TESTER.getComponentFromLastRenderedPage(component.getPageRelativePath() + \":cells:1:cell:check\");\n+        component = UTILITY_UI.getTester().getComponentFromLastRenderedPage(component.getPageRelativePath()\n+                + \":cells:1:cell:check\");\n         assertEquals(Status.SUSPENDED, StatusBean.class.cast(component.getDefaultModelObject()).getStatus());\n         assertEquals(resource, StatusBean.class.cast(component.getDefaultModelObject()).getResource());\n \n         // re-activate\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        component = findComponentByProp(\"username\", CONTAINER\n+        component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         // enable\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n                 + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:4:\"\n                 + \"action:action\");\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        formTester = TESTER.newFormTester(\n+        formTester = UTILITY_UI.getTester().newFormTester(\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", index);\n \n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:batchLink\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n         // suspend link\n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:secondLevelContainer:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+                + \"outerObjectsRepeater:2:outer:form:content:status:secondLevelContainer:\"\n                 + \"second:container:actions:actionRepeater:1:action:action\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.assertLabel(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        UTILITY_UI.getTester().assertLabel(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container:selectedObjects:body:rows:1:cells:4:cell\", \"SUCCESS\");\n \n-        TESTER.executeAjaxEvent(TAB_PANEL\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n                 + \"outerObjectsRepeater:2:outer:form:content:status:secondLevelContainer:back\",\n                 Constants.ON_CLICK);\n \n-        component = findComponentByProp(\"resource\",\n+        component = UTILITY_UI.findComponentByProp(\"resource\",\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", resource);\n \n-        component = TESTER.getComponentFromLastRenderedPage(component.getPageRelativePath() + \":cells:1:cell:check\");\n+        component = UTILITY_UI.getTester().getComponentFromLastRenderedPage(component.getPageRelativePath()\n+                + \":cells:1:cell:check\");\n         assertEquals(Status.ACTIVE, StatusBean.class.cast(component.getDefaultModelObject()).getStatus());\n         assertEquals(resource, StatusBean.class.cast(component.getDefaultModelObject()).getResource());\n \n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:dialog:footer:buttons:0:button\",\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+                + \"outerObjectsRepeater:2:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n     }\n \n     @Test\n     public void groupResource() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n-        Component component = findComponentByProp(\"name\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         // manage resource\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n                 + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:6:\"\n                 + \"action:action\");\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:first:\"\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:first:\"\n                 + \"container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:topToolbars:\"\n                 + \"toolbars:1:headers:2:header:orderByLink\", true);\n \n-        component = findComponentByProp(\"resource\",\n+        component = UTILITY_UI.findComponentByProp(\"resource\",\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"resource-ldap\");\n         assertNotNull(component);\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 0);\n \n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:batchLink\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        assertNotNull(findComponentByProp(\"resource\", TAB_PANEL + \"outerObjectsRepeater:2:outer:\"\n+        assertNotNull(UTILITY_UI.findComponentByProp(\"resource\", TAB_PANEL + \"outerObjectsRepeater:2:outer:\"\n                 + \"form:content:status:secondLevelContainer:second:container:selectedObjects\", \"resource-ldap\"));\n     }\n \n     @Test\n     public void printerResource() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n \n-        Component component = findComponentByProp(\"key\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"key\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"8559d14d-58c2-46eb-a2d4-a7d35161e8f8\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n         // manage resource\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:1\"\n                 + \":outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:2:\"\n                 + \"action:action\");\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:first:\"\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:first:\"\n                 + \"container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:topToolbars:\"\n                 + \"toolbars:1:headers:2:header:orderByLink\", true);\n \n-        component = findComponentByProp(\"resource\",\n+        component = UTILITY_UI.findComponentByProp(\"resource\",\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"resource-db-scripted\");\n         assertNotNull(component);\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 0);\n \n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:batchLink\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:2:outer:form:content:status:\"\n                 + \"secondLevelContainer:second:container\", WebMarkupContainer.class);\n \n-        assertNotNull(findComponentByProp(\"resource\", TAB_PANEL + \"outerObjectsRepeater:2:outer:\"\n+        assertNotNull(UTILITY_UI.findComponentByProp(\"resource\", TAB_PANEL + \"outerObjectsRepeater:2:outer:\"\n                 + \"form:content:status:secondLevelContainer:second:container:selectedObjects\", \"resource-db-scripted\"));\n     }\n \n     @Test\n     public void executePropagationTask() {\n-        TESTER.clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n+        UTILITY_UI.getTester().clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n \n-        Component component = findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n+        Component component = UTILITY_UI.findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:propagation\");\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:toggle:container:content:togglePanelContainer:container:actions:propagation\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm\");\n         assertNotNull(formTester);\n \n         formTester.select(\"checkgroup\", 0);\n \n-        TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:batchLink\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:secondLevelContainer:\"\n+        UTILITY_UI.getTester().assertComponent(\n+                \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:secondLevelContainer:\"\n                 + \"second:container:selectedObjects:body:rows:1:cells:1:cell\", Label.class);\n     }\n }"},{"sha":"fe42c23e4b30041aa4aec82974ac1cfab7602d48","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/DisplayAttributesITCase.java","status":"modified","additions":11,"deletions":9,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -29,29 +29,31 @@ public class DisplayAttributesITCase extends AbstractConsoleITCase {\n     @BeforeEach\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.assertRenderedPage(Realms.class);\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().assertRenderedPage(Realms.class);\n     }\n \n     @Test\n     public void readAndSet() {\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:container:content:\"\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:container:content:\"\n                 + \"searchContainer:tablehandling:actionRepeater:1:action:action\");\n \n-        TESTER.assertComponent(\n+        UTILITY_UI.getTester().assertComponent(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:3:outer\",\n                 Modal.class);\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:3:outer:form\");\n \n         formTester.setValue(\"content:container:details:paletteField:recorder\", \"status\");\n \n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n                 + \"3:outer:dialog:footer:inputs:0:submit\");\n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n \n-        TESTER.clearFeedbackMessages();\n+        UTILITY_UI.getTester().clearFeedbackMessages();\n     }\n }"},{"sha":"da5ed9c0e957e8feb95182c8bbdbdd198b77aada","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/GroupsITCase.java","status":"modified","additions":79,"deletions":63,"changes":142,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -44,75 +44,83 @@ public void login() {\n \n     @Test\n     public void read() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n-        Component component = findComponentByProp(\"name\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"artDirector\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:3:action:action\");\n \n-        FormTester formTester = TESTER.newFormTester(TAB_PANEL\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n                 + \"outerObjectsRepeater:7:outer:container:content:togglePanelContainer:membersForm\");\n \n         formTester.select(\"type:dropDownChoiceField\", 0);\n         formTester.submit(\"changeit\");\n \n-        TESTER.assertModelValue(TAB_PANEL\n+        UTILITY_UI.getTester().assertModelValue(TAB_PANEL\n                 + \"outerObjectsRepeater:6:outer:dialog:header:header-label\", \"USER members of artDirector\");\n-        assertNotNull(findComponentByProp(\"username\", TAB_PANEL\n+        assertNotNull(UTILITY_UI.findComponentByProp(\"username\", TAB_PANEL\n                 + \"outerObjectsRepeater:6:outer:form:content:searchResult:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\"));\n \n-        TESTER.executeAjaxEvent(TAB_PANEL\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n                 + \"outerObjectsRepeater:6:outer:dialog:footer:buttons:0:button\", Constants.ON_CLICK);\n     }\n \n     @Test\n     public void filteredSearch() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n \n-        TESTER.executeAjaxEvent(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:\"\n                 + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panelPlus:add\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:\"\n+        UTILITY_UI.getTester().assertComponent(\n+                \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:\"\n                 + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panel:container:\"\n                 + \"value:textField\", TextField.class);\n     }\n \n     private void cloneGroup(final String group) {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n-        Component component = findComponentByProp(\"name\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", group);\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:1:action:action\");\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:name:textField\",\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form:view:name:textField\",\n                 TextField.class);\n \n-        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.setValue(\"view:name:textField\", group + \"_clone\");\n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n-        component = findComponentByProp(\"name\", CONTAINER\n+        component = UTILITY_UI.findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", group + \"_clone\");\n         assertNotNull(component);\n     }\n@@ -121,123 +129,131 @@ private void cloneGroup(final String group) {\n     public void clickToCloneGroup() {\n         cloneGroup(\"director\");\n \n-        Component component = findComponentByProp(\"name\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director_clone\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:9:action:action\");\n \n-        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(TAB_PANEL\n+        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:9:action:action\"), Constants.ON_CLICK);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void editGroup() {\n         cloneGroup(\"director\");\n \n-        Component component = findComponentByProp(\"name\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director_clone\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:name:textField\",\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form:view:name:textField\",\n                 TextField.class);\n \n-        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n         // -------------------------\n         // SYNCOPE-1026\n         // -------------------------\n-        assertEquals(TESTER.getComponentFromLastRenderedPage(\"body:content:body:container:content:tabbedPanel:panel:\"\n+        assertEquals(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+                \"body:content:body:container:content:tabbedPanel:panel:\"\n                 + \"searchResult:outerObjectsRepeater:0:outer:form:content:form:view:ownerContainer:search:userOwner:\"\n                 + \"textField\").getDefaultModelObjectAsString(), \"[823074dc-d280-436d-a7dd-07399fae48ec] puccini\");\n \n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:0:\"\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:ownerContainer:search:userOwnerReset\");\n \n-        assertEquals(TESTER.getComponentFromLastRenderedPage(\"body:content:body:container:content:tabbedPanel:panel:\"\n+        assertEquals(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n+                \"body:content:body:container:content:tabbedPanel:panel:\"\n                 + \"searchResult:outerObjectsRepeater:0:outer:form:content:form:view:ownerContainer:search:userOwner:\"\n                 + \"textField\").getDefaultModelObjectAsString(), StringUtils.EMPTY);\n         // -------------------------\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.assertComponent(TAB_PANEL\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n                 + \"container:content:group:beans:0:fields:0:field\", Label.class);\n \n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n-        component = findComponentByProp(\"name\", CONTAINER\n+        component = UTILITY_UI.findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director_clone\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(TAB_PANEL\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n+        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:9:action:action\"));\n \n-        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(TAB_PANEL\n+        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:9:action:action\"), Constants.ON_CLICK);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void checkDeleteGroupLink() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n-        Component component = findComponentByProp(\"name\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"name\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.assertComponent(TAB_PANEL\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:9:action:action\", IndicatingOnConfirmAjaxLink.class);\n     }"},{"sha":"c84ca1d501bb12965092c2ab33c009378249e594","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/LogsITCase.java","status":"modified","additions":20,"deletions":19,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLogsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLogsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FLogsITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -41,63 +41,64 @@ public class LogsITCase extends AbstractConsoleITCase {\n     @BeforeEach\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        TESTER.clickLink(\"body:configurationLI:configurationUL:logsLI:logs\");\n-        TESTER.assertRenderedPage(Logs.class);\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:logsLI:logs\");\n+        UTILITY_UI.getTester().assertRenderedPage(Logs.class);\n     }\n \n     @Test\n     public void readCoreLogs() {\n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n-        TESTER.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n+        UTILITY_UI.getTester().assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n \n         assertNotNull(searchLog(KEY, CONTAINER_PATH, \"io.swagger\"));\n     }\n \n     @Test\n     public void updateCoreLogs() {\n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n-        TESTER.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n+        UTILITY_UI.getTester().assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n \n         Component result = searchLog(KEY, CONTAINER_PATH, \"io.swagger\");\n         assertNotNull(result);\n \n-        TESTER.getRequest().addParameter(\n+        UTILITY_UI.getTester().getRequest().addParameter(\n                 result.getPageRelativePath() + \":fields:1:field:dropDownChoiceField\", \"6\");\n-        TESTER.assertComponent(\n+        UTILITY_UI.getTester().assertComponent(\n                 result.getPageRelativePath() + \":fields:1:field:dropDownChoiceField\", DropDownChoice.class);\n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 result.getPageRelativePath() + \":fields:1:field:dropDownChoiceField\", Constants.ON_CHANGE);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n     }\n \n     @Test\n     public void readConsoleLogs() {\n-        TESTER.assertComponent(\"body:content:tabbedPanel:tabs-container:tabs:1:link\", AjaxFallbackLink.class);\n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n-        TESTER.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:tabs-container:tabs:1:link\",\n+                AjaxFallbackLink.class);\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n \n         assertNotNull(searchLog(KEY, CONTAINER_PATH, \"org.apache.wicket\"));\n     }\n \n     @Test\n     public void updateConsoleLogs() {\n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n-        TESTER.assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().assertComponent(CONTAINER_PATH, WebMarkupContainer.class);\n \n         Component result = searchLog(KEY, CONTAINER_PATH, \"org.apache.wicket\");\n         assertNotNull(result);\n \n-        TESTER.getRequest().addParameter(\n+        UTILITY_UI.getTester().getRequest().addParameter(\n                 result.getPageRelativePath() + \":fields:1:field:dropDownChoiceField\", \"6\");\n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 result.getPageRelativePath() + \":fields:1:field:dropDownChoiceField\", Constants.ON_CHANGE);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n     }\n \n     private Component searchLog(final String property, final String searchPath, final String key) {\n-        Component component = TESTER.getComponentFromLastRenderedPage(searchPath);\n+        Component component = UTILITY_UI.getTester().getComponentFromLastRenderedPage(searchPath);\n \n         Component result = component.getPage().\n                 visitChildren(ListItem.class, (final ListItem<LoggerTO> object, final IVisit<Component> visit) -> {"},{"sha":"be9bec3f0f4ff6535877c7c79c96dd6542fa5c4f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/NotificationsITCase.java","status":"modified","additions":74,"deletions":57,"changes":131,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FNotificationsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FNotificationsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FNotificationsITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -35,48 +35,52 @@ public class NotificationsITCase extends AbstractConsoleITCase {\n     @BeforeEach\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        TESTER.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n-        TESTER.assertRenderedPage(Notifications.class);\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n+        UTILITY_UI.getTester().assertRenderedPage(Notifications.class);\n     }\n \n     private void createNotification(final String sender, final String subject) {\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n \n         formTester.select(\"content:form:view:template:dropDownChoiceField\", 2);\n         formTester.select(\"content:form:view:traceLevel:dropDownChoiceField\", 0);\n         formTester.setValue(\"content:form:view:sender:textField\", sender);\n         formTester.setValue(\"content:form:view:subject:textField\", subject);\n \n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n         formTester.submit(\"content:form:buttons:next\");\n-        TESTER.assertNoErrorMessage();\n+        UTILITY_UI.getTester().assertNoErrorMessage();\n \n         // -------------------------------\n         // recipients\n         // -------------------------------\n-        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n-        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form:content:form:\"\n+        formTester = UTILITY_UI.getTester().newFormTester(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form:content:form:\"\n                 + \"view:staticRecipients:multiValueContainer:innerForm:content:panelPlus:add\", Constants.ON_CLICK);\n         formTester.setValue(\"content:form:view:staticRecipients:multiValueContainer:innerForm:content:view:0:panel:\"\n                 + \"textField\", \"recipient@syncope.org\");\n         formTester.setValue(\"content:form:view:selfAsRecipient:checkboxField\", true);\n         formTester.setValue(\"content:form:view:recipientAttrName:textField\", \"email\");\n \n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n         formTester.submit(\"content:form:buttons:next\");\n-        TESTER.assertNoErrorMessage();\n+        UTILITY_UI.getTester().assertNoErrorMessage();\n \n         // -------------------------------\n         // generate event to populate eventsPanel\n         // -------------------------------\n-        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:eventSelection:categoryContainer:category:dropDownChoiceField\", \"0\");\n-        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form:\"\n                 + \"content:form:view:eventSelection:categoryContainer:category:dropDownChoiceField\",\n                 Constants.ON_CHANGE);\n         // -------------------------------\n@@ -85,32 +89,35 @@ private void createNotification(final String sender, final String subject) {\n         // select event template\n         // -------------------------------\n         formTester.setValue(\"content:form:view:eventSelection:eventsContainer:eventsPanel:successGroup\", \"check0\");\n-        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form:content:\"\n                 + \"form:view:eventSelection:eventsContainer:eventsPanel:successGroup\",\n                 Constants.ON_CLICK);\n         // -------------------------------\n \n         formTester.setValue(\"content:form:view:eventSelection:categoryContainer:category:dropDownChoiceField\", \"0\");\n         formTester.setValue(\"content:form:view:eventSelection:eventsContainer:eventsPanel:successGroup\", \"check0\");\n \n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n         formTester.submit(\"content:form:buttons:next\");\n-        TESTER.assertNoErrorMessage();\n+        UTILITY_UI.getTester().assertNoErrorMessage();\n \n-        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n-        TESTER.cleanupFeedbackMessages();\n+        formTester = UTILITY_UI.getTester().newFormTester(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n         formTester.submit(\"content:form:buttons:finish\");\n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n \n-        TESTER.cleanupFeedbackMessages();\n-        TESTER.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n     }\n \n     @Test\n     public void read() {\n-        assertNull(findComponentByProp(KEY, \"body:content:tabbedPanel:panel:container:content:searchContainer:\"\n+        assertNull(UTILITY_UI.findComponentByProp(KEY,\n+                \"body:content:tabbedPanel:panel:container:content:searchContainer:\"\n                 + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", 1));\n     }\n \n@@ -122,106 +129,116 @@ public void create() {\n     @Test\n     public void update() {\n         createNotification(\"update@syncope.org\", \"createToUpdate\");\n-        Component result = findComponentByProp(\"Subject\", \"body:content:tabbedPanel:panel:container:content:\"\n+        Component result = UTILITY_UI.findComponentByProp(\"Subject\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"createToUpdate\");\n \n         // edit notification\n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void execute() {\n-        TESTER.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n \n-        Component result = findComponentByProp(\"subject\",\n+        Component result = UTILITY_UI.findComponentByProp(\"subject\",\n                 \"body:content:tabbedPanel:panel:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"Password Reset request\");\n \n         // notification tasks link\n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n                 + \"content:tasks:firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        result = findComponentByProp(\"subject\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n+        result = UTILITY_UI.findComponentByProp(\"subject\",\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n                 + \"content:tasks:firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable\", \"Notification for SYNCOPE-81\");\n \n         // execute task\n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:tasks:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:\"\n                 + \"container:actions:actions:actionRepeater:3:action:action\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:notificationsLI:notifications\");\n \n-        result = findComponentByProp(\"subject\", \"body:content:tabbedPanel:panel:container:content:\"\n+        result = UTILITY_UI.findComponentByProp(\"subject\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"Password Reset request\");\n \n         // notification tasks link\n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n-        result = findComponentByProp(\"subject\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n+        result = UTILITY_UI.findComponentByProp(\"subject\",\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n                 + \"content:tasks:firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable\", \"Notification for SYNCOPE-81\");\n \n         // view task\n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:tasks:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:\"\n                 + \"container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertLabel(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:tasks:\"\n+        UTILITY_UI.getTester().assertLabel(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:tasks:\"\n                 + \"secondLevelContainer:title\", \"Executions\");\n \n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:tasks:\"\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:tasks:\"\n                 + \"secondLevelContainer:back\");\n \n-        assertNotNull(findComponentByProp(\"subject\", \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n+        assertNotNull(UTILITY_UI.findComponentByProp(\"subject\",\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:\"\n                 + \"content:tasks:firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:\"\n                 + \"groupForm:checkgroup:dataTable\", \"Notification for SYNCOPE-81\"));\n     }\n \n     @Test\n     public void delete() {\n         createNotification(\"delete@syncope.org\", \"createToDelete\");\n-        Component result = findComponentByProp(\"Subject\", \"body:content:tabbedPanel:panel:container:content:\"\n+        Component result = UTILITY_UI.findComponentByProp(\"Subject\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"createToDelete\");\n \n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n \n         // delete task\n-        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\"));\n \n-        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\"),\n                 Constants.ON_CLICK);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        assertNull(findComponentByProp(\"Subject\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNull(UTILITY_UI.findComponentByProp(\"Subject\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"createToDelete\"));\n     }\n }"},{"sha":"16140e632200f9ad380ec4c3756ea784ba9549a1","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/ParametersITCase.java","status":"modified","additions":38,"deletions":34,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FParametersITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -34,93 +34,97 @@ public class ParametersITCase extends AbstractConsoleITCase {\n     @BeforeEach\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        TESTER.clickLink(\"body:keymasterLI:keymasterUL:parametersLI:parameters\");\n-        TESTER.assertRenderedPage(Parameters.class);\n+        UTILITY_UI.getTester().clickLink(\"body:keymasterLI:keymasterUL:parametersLI:parameters\");\n+        UTILITY_UI.getTester().assertRenderedPage(Parameters.class);\n     }\n \n     @Test\n     public void readParameter() {\n-        TESTER.assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n-        assertNotNull(findComponentByProp(SCHEMA, \"body:content:parametersPanel\", \"authentication.statuses\"));\n+        UTILITY_UI.getTester().assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n+        assertNotNull(UTILITY_UI.findComponentByProp(SCHEMA, \"body:content:parametersPanel\", \"authentication.statuses\"));\n     }\n \n     @Test\n     public void createParameter() {\n-        TESTER.assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n \n-        TESTER.clickLink(\"body:content:parametersPanel:container:content:add\");\n-        TESTER.assertComponent(\"body:content:parametersPanel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().clickLink(\"body:content:parametersPanel:container:content:add\");\n+        UTILITY_UI.getTester().assertComponent(\"body:content:parametersPanel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         FormTester formTester =\n-                TESTER.newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n+                UTILITY_UI.getTester().newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:next\");\n \n-        formTester = TESTER.newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(\n+                \"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:parametersCreateWizardPanel:form:view:content:schema:textField\", \"testParam\");\n         formTester.setValue(\"content:parametersCreateWizardPanel:form:view:content:attrs:0:panel:textField\", \"test\");\n \n         formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n \n-        TESTER.cleanupFeedbackMessages();\n-        TESTER.assertRenderedPage(Parameters.class);\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertRenderedPage(Parameters.class);\n     }\n \n     @Test\n     public void updateParameter() {\n-        TESTER.assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n \n-        Component result = findComponentByProp(SCHEMA, \"body:content:parametersPanel\", \"notification.maxRetries\");\n+        Component result = UTILITY_UI.findComponentByProp(SCHEMA, \"body:content:parametersPanel\",\n+                \"notification.maxRetries\");\n         assertNotNull(result);\n \n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:parametersPanel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\"body:content:parametersPanel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n         FormTester formTester =\n-                TESTER.newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n+                UTILITY_UI.getTester().newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:next\");\n \n-        formTester = TESTER.newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(\n+                \"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:parametersCreateWizardPanel:form:view:content:attrs:0:panel:spinner\", \"70\");\n-                             \n+\n         formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n \n-        TESTER.cleanupFeedbackMessages();\n-        TESTER.assertRenderedPage(Parameters.class);\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertRenderedPage(Parameters.class);\n     }\n \n     @Test\n     public void deleteParameter() {\n-        TESTER.assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:parametersPanel\", WebMarkupContainer.class);\n \n-        TESTER.clickLink(\"body:content:parametersPanel:container:content:add\");\n-        TESTER.assertComponent(\"body:content:parametersPanel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().clickLink(\"body:content:parametersPanel:container:content:add\");\n+        UTILITY_UI.getTester().assertComponent(\"body:content:parametersPanel:outerObjectsRepeater:0:outer\", Modal.class);\n \n         FormTester formTester =\n-                TESTER.newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n+                UTILITY_UI.getTester().newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:next\");\n \n-        formTester = TESTER.newFormTester(\"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(\n+                \"body:content:parametersPanel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:parametersCreateWizardPanel:form:view:content:schema:textField\", \"deleteParam\");\n         formTester.setValue(\"content:parametersCreateWizardPanel:form:view:content:attrs:0:panel:textField\", \"test\");\n \n         formTester.submit(\"content:parametersCreateWizardPanel:form:buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        Component result = findComponentByProp(SCHEMA, \"body:content:parametersPanel\", \"deleteParam\");\n+        Component result = UTILITY_UI.findComponentByProp(SCHEMA, \"body:content:parametersPanel\", \"deleteParam\");\n         assertNotNull(result);\n \n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:parametersPanel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\"body:content:parametersPanel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n     }\n }"},{"sha":"af2c20fc5cc1e92fa745aaaefe731d11f61ed25d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/PoliciesITCase.java","status":"modified","additions":289,"deletions":236,"changes":525,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FPoliciesITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -37,228 +37,243 @@ public class PoliciesITCase extends AbstractConsoleITCase {\n     @BeforeEach\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        TESTER.clickLink(\"body:configurationLI:configurationUL:policiesLI:policies\");\n-        TESTER.assertRenderedPage(Policies.class);\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:policiesLI:policies\");\n+        UTILITY_UI.getTester().assertRenderedPage(Policies.class);\n     }\n \n     private void createAccountPolicy(final String description) {\n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        Component modal = TESTER.getComponentFromLastRenderedPage(\n+        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description);\n         formTester.setValue(\"content:fields:1:field:spinner\", \"1\");\n         formTester.setValue(\"content:fields:2:field:checkboxField\", true);\n         formTester.setValue(\"content:fields:3:field:paletteField:recorder\", \"ws-target-resource-nopropagation4\");\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        closeCallBack(modal);\n+        UTILITY_UI.closeCallBack(modal);\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:container:content:\"\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", WebMarkupContainer.class);\n \n-        Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+                \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:0:field:textField\", description);\n-        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:1:field:spinner\", 1);\n-        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:2:field:checkboxField\", true);\n-        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:3:field:paletteField:recorder\", \"ws-target-resource-nopropagation4\");\n \n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n \n-        component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        component = UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n         assertNotNull(component);\n     }\n \n     private void createPasswordPolicy(final String description) {\n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        Component modal = TESTER.getComponentFromLastRenderedPage(\n+        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description);\n         formTester.setValue(\"content:fields:1:field:spinner\", \"1\");\n         formTester.setValue(\"content:fields:2:field:checkboxField\", true);\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        closeCallBack(modal);\n+        UTILITY_UI.closeCallBack(modal);\n \n-        Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+                \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:0:field:textField\", description);\n-        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:1:field:spinner\", 1);\n-        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:2:field:checkboxField\", true);\n \n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n \n-        assertNotNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNotNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n     }\n \n     private void createPullPolicy(final String description) {\n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        Component modal = TESTER.getComponentFromLastRenderedPage(\n+        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description);\n \n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        closeCallBack(modal);\n+        UTILITY_UI.closeCallBack(modal);\n \n-        Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+                \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:0:field:textField\", description);\n \n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n \n-        assertNotNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNotNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n     }\n \n     private void deleteAccountPolicy(final String description) {\n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n-        Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:0:link\");\n+        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+                \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n+        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\"));\n \n-        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\"),\n                 Constants.ON_CLICK);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        assertNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n     }\n \n     private void deletePasswordPolicy(final String description) {\n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n-        Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+                \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n+        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\"));\n \n-        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\"),\n                 Constants.ON_CLICK);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        assertNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n     }\n \n     private void deletePullPolicy(final String description) {\n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n-        Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:2:link\");\n+        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+                \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n+        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\"));\n \n-        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\"),\n                 Constants.ON_CLICK);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        assertNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n     }\n \n     @Test\n     public void read() {\n-        assertNotNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNotNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"an account policy\"));\n     }\n \n@@ -274,37 +289,40 @@ public void cloneDeleteAccountPolicy() {\n         final String description = \"My Test Account Policy to be cloned\";\n         createAccountPolicy(description);\n \n-        Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+                \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        Component modal = TESTER.getComponentFromLastRenderedPage(\n+        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description + \"2\");\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        closeCallBack(modal);\n+        UTILITY_UI.closeCallBack(modal);\n \n-        assertNotNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNotNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n \n         deleteAccountPolicy(description);\n \n-        assertNotNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNotNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description + \"2\"));\n \n         deleteAccountPolicy(description + \"2\");\n@@ -322,37 +340,40 @@ public void cloneDeletePasswordPolicy() {\n         final String description = \"My Test Password Policy to be cloned\";\n         createPasswordPolicy(description);\n \n-        Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+                \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        Component modal = TESTER.getComponentFromLastRenderedPage(\n+        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description + \"2\");\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        closeCallBack(modal);\n+        UTILITY_UI.closeCallBack(modal);\n \n-        assertNotNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNotNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n \n         deletePasswordPolicy(description);\n \n-        assertNotNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNotNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description + \"2\"));\n \n         deletePasswordPolicy(description + \"2\");\n@@ -370,37 +391,40 @@ public void cloneDeletePullPolicy() {\n         final String description = \"My Test Pull Policy to be cloned\";\n         createPullPolicy(description);\n \n-        Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+                \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        Component modal = TESTER.getComponentFromLastRenderedPage(\n+        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description + \"2\");\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        closeCallBack(modal);\n+        UTILITY_UI.closeCallBack(modal);\n \n-        assertNotNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNotNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description));\n \n         deletePullPolicy(description);\n \n-        assertNotNull(findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        assertNotNull(UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description + \"2\"));\n \n         deletePullPolicy(description + \"2\");\n@@ -411,84 +435,93 @@ public void createUpdateDeleteAccountPolicy() {\n         final String description = \"Account Policy To Be Updated\";\n         createAccountPolicy(description);\n \n-        Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+                \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        Component modal = TESTER.getComponentFromLastRenderedPage(\n+        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:1:field:spinner\", \"2\");\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        closeCallBack(modal);\n+        UTILITY_UI.closeCallBack(modal);\n \n-        component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        component = UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:1:field:spinner\", 2);\n \n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n \n         deleteAccountPolicy(description);\n     }\n \n     private void composeDefaultAccountPolicy(final String policyDescription) {\n-        Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+                \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", policyDescription);\n \n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        Component modal = TESTER.getComponentFromLastRenderedPage(\n+        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer\");\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:container:content:add\");\n \n-        FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n         formTester.setValue(\"view:rule:dropDownChoiceField\", \"0\");\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n+        formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:container:content:utility\");\n \n-        closeCallBack(modal);\n+        UTILITY_UI.closeCallBack(modal);\n     }\n \n     @Test\n@@ -504,45 +537,50 @@ public void createUpdateDeletePasswordPolicy() {\n         final String description = \"Password Policy To Be Updated\";\n         createPasswordPolicy(description);\n \n-        Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+                \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        Component modal = TESTER.getComponentFromLastRenderedPage(\n+        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:1:field:spinner\", \"2\");\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        closeCallBack(modal);\n+        UTILITY_UI.closeCallBack(modal);\n \n-        component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        component = UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:1:field:spinner\", 2);\n \n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n \n@@ -554,38 +592,42 @@ public void createComposeDeletePasswordPolicy() {\n         final String description = \"Password Policy To Be Composed\";\n         createPasswordPolicy(description);\n \n-        Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+                \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer\",\n+                Modal.class);\n \n-        Component modal = TESTER.getComponentFromLastRenderedPage(\n+        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer\");\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:container:content:add\");\n \n-        FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n         formTester.setValue(\"view:rule:dropDownChoiceField\", \"0\");\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n+        formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:4:\"\n                 + \"outer:form:content:container:content:wizard:form\");\n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:4:outer:form:content:container:content:utility\");\n \n-        closeCallBack(modal);\n+        UTILITY_UI.closeCallBack(modal);\n \n         deletePasswordPolicy(description);\n     }\n@@ -595,45 +637,50 @@ public void createUpdateDeletePullPolicy() {\n         final String description = \"Pull Policy To Be Updated\";\n         createPullPolicy(description);\n \n-        Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+                \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n \n-        Component modal = TESTER.getComponentFromLastRenderedPage(\n+        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\");\n \n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:fields:0:field:textField\", description + \"2\");\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        closeCallBack(modal);\n+        UTILITY_UI.closeCallBack(modal);\n \n-        component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        component = UTILITY_UI.findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description + \"2\");\n \n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n+        UTILITY_UI.getTester().assertModelValue(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\"\n                 + \":content:fields:0:field:textField\", description + \"2\");\n \n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n \n@@ -645,42 +692,46 @@ public void createComposeDeletePullPolicy() {\n         final String description = \"Pull Policy To Be Composed\";\n         createPullPolicy(description);\n \n-        Component component = findComponentByProp(\"description\", \"body:content:tabbedPanel:panel:container:content:\"\n+        Component component = UTILITY_UI.findComponentByProp(\"description\",\n+                \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", description);\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer\",\n+                Modal.class);\n \n-        Component modal = TESTER.getComponentFromLastRenderedPage(\n+        Component modal = UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:form\");\n \n-        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:form:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:form:content:\"\n                 + \"correlationRules:multiValueContainer:innerForm:content:panelPlus:add\", Constants.ON_CLICK);\n \n-        component = findComponentById(\n+        component = UTILITY_UI.findComponentById(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:form:content:\"\n                 + \"correlationRules:multiValueContainer:innerForm:content:view:0:panel:rule\",\n                 \"dropDownChoiceField\");\n         assertNotNull(component);\n \n         formTester.setValue(component, \"0\");\n-        TESTER.executeAjaxEvent(component, Constants.ON_CHANGE);\n+        UTILITY_UI.getTester().executeAjaxEvent(component, Constants.ON_CHANGE);\n         formTester.setValue(component, \"0\");\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:dialog:footer:inputs:0:submit\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        closeCallBack(modal);\n+        UTILITY_UI.closeCallBack(modal);\n \n         deletePullPolicy(description);\n     }\n@@ -693,67 +744,69 @@ public void issueSYNCOPE1030() {\n         composeDefaultAccountPolicy(description);\n \n         // goto realms\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.assertRenderedPage(Realms.class);\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().assertRenderedPage(Realms.class);\n \n         // edit root realm\n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:1:action:action\");\n-        TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n \n         // set new account policy\n-        TESTER.assertLabel(\"body:content:body:outerObjectsRepeater:0:outer:form:content:form:view:details:container:\"\n+        UTILITY_UI.getTester().assertLabel(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:form:view:details:container:\"\n                 + \"accountPolicy:field-label\", \"Account Policy\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:form\");\n         formTester.select(\"view:details:container:accountPolicy:dropDownChoiceField\", 0);\n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\",\n                 Constants.ON_CLICK);\n \n         // create user with a valid account name\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\",\n+        Component component = UTILITY_UI.findComponentByProp(\"username\",\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:container:content:\"\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n                 + \"1:outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:1:\"\n                 + \"action:action\");\n \n-        TESTER.assertComponent(\n+        UTILITY_UI.getTester().assertComponent(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n                 TextField.class);\n \n-        formTester = TESTER.newFormTester(\n+        formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(\n+        formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(\n+        formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(\n+        formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n@@ -762,42 +815,42 @@ public void issueSYNCOPE1030() {\n         formTester.setValue(\"view:plainSchemas:tabs:0:body:content:schemas:14:panel:textField\", \"ross1030@apace.org\");\n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n-        component = findComponentByProp(\"username\",\n+        component = UTILITY_UI.findComponentByProp(\"username\",\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:container:content:\"\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini_clone\");\n         assertNotNull(component);\n \n         // delete the new user\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n \n-        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n+        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n                 + \"1:outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:8:\"\n                 + \"action:action\"));\n \n-        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n                 + \"1:outer:container:content:togglePanelContainer:container:actions:actions:actionRepeater:8:\"\n                 + \"action:action\"), Constants.ON_CLICK);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        component = findComponentByProp(\"username\",\n+        component = UTILITY_UI.findComponentByProp(\"username\",\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:container:content:\"\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini_clone\");\n         assertNull(component);\n \n         // delete default policy\n-        TESTER.clickLink(\"body:configurationLI:configurationUL:policiesLI:policies\");\n-        TESTER.assertRenderedPage(Policies.class);\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:policiesLI:policies\");\n+        UTILITY_UI.getTester().assertRenderedPage(Policies.class);\n         deleteAccountPolicy(description);\n     }\n }"},{"sha":"16b70689ef1cd82181a59f6c60842abdf53ddcd9","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RealmsITCase.java","status":"modified","additions":99,"deletions":76,"changes":175,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -34,218 +34,241 @@ public class RealmsITCase extends AbstractConsoleITCase {\n     @BeforeEach\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.assertRenderedPage(Realms.class);\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().assertRenderedPage(Realms.class);\n     }\n \n     @Test\n     public void read() {\n-        TESTER.assertLabel(\"body:content:body:container:content:tabbedPanel:panel:container:accountPolicy:field-label\",\n+        UTILITY_UI.getTester().assertLabel(\n+                \"body:content:body:container:content:tabbedPanel:panel:container:accountPolicy:field-label\",\n                 \"Account Policy\");\n     }\n \n     @Test\n     public void create() {\n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:0:action:action\");\n-        TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:form\");\n         formTester.setValue(\"view:details:container:generics:name:textField\", \"testRealm\");\n \n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.executeAjaxEvent(\"body:content:body:outerObjectsRepeater:0:outer:form:content:action:actionRepeater:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:actionRepeater:\"\n                 + \"0:action:action\", Constants.ON_CLICK);\n \n         // remove the new realm just created\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n \n-        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:btn\", Constants.ON_CLICK);\n-        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:5:button\",\n+        UTILITY_UI.getTester().\n+                executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:btn\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:5:button\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/testRealm\");\n+        UTILITY_UI.getTester().assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/testRealm\");\n \n-        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:3:action:action\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.assertLabel(\"body:content:body:container:content:tabbedPanel:panel:container:accountPolicy:field-label\",\n+        UTILITY_UI.getTester().assertLabel(\n+                \"body:content:body:container:content:tabbedPanel:panel:container:accountPolicy:field-label\",\n                 \"Account Policy\");\n \n-        TESTER.assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/\");\n+        UTILITY_UI.getTester().assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/\");\n     }\n \n     @Test\n     public void update() {\n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:1:action:action\");\n-        TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:form\");\n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.executeAjaxEvent(\"body:content:body:outerObjectsRepeater:0:outer:form:content:action:actionRepeater:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:actionRepeater:\"\n                 + \"0:action:action\", Constants.ON_CLICK);\n     }\n \n     @Test\n     public void addUserTemplate() {\n-        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:btn\", Constants.ON_CLICK);\n-        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:4:button\",\n+        UTILITY_UI.getTester().\n+                executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:btn\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:4:button\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/odd\");\n+        UTILITY_UI.getTester().assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/odd\");\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:2:action:action\");\n-        TESTER.assertComponent(\"body:content:toggleTemplates\", TogglePanel.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:toggleTemplates\", TogglePanel.class);\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:toggleTemplates:container:content:togglePanelContainer:templatesForm\");\n         formTester.setValue(\"type:dropDownChoiceField\", \"0\");\n         formTester.submit(\"changeit\");\n \n-        TESTER.assertComponent(\"body:content:templateModal\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:templateModal\", Modal.class);\n \n-        formTester = TESTER.newFormTester(\"body:content:templateModal:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(\"body:content:templateModal:form:content:form\");\n         formTester.setValue(\"view:username:textField\", \"'k' + firstname\");\n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/odd\");\n+        UTILITY_UI.getTester().assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/odd\");\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:2:action:action\");\n-        TESTER.assertComponent(\"body:content:toggleTemplates\", TogglePanel.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:toggleTemplates\", TogglePanel.class);\n \n-        formTester = TESTER.newFormTester(\n+        formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:toggleTemplates:container:content:togglePanelContainer:templatesForm\");\n         formTester.setValue(\"type:dropDownChoiceField\", \"0\");\n         formTester.submit(\"changeit\");\n \n-        TESTER.assertComponent(\"body:content:templateModal\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:templateModal\", Modal.class);\n \n-        TESTER.assertModelValue(\"body:content:templateModal:form:content:form:view:username:textField\",\n+        UTILITY_UI.getTester().assertModelValue(\"body:content:templateModal:form:content:form:view:username:textField\",\n                 \"'k' + firstname\");\n \n-        formTester = TESTER.newFormTester(\"body:content:templateModal:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(\"body:content:templateModal:form:content:form\");\n         formTester.setValue(\"view:username:textField\", \"\");\n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void verifyPropagation() {\n-        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:btn\", Constants.ON_CLICK);\n-        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:2:button\",\n+        UTILITY_UI.getTester().\n+                executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:btn\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:2:button\",\n                 Constants.ON_CLICK);\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:1:action:action\");\n-        TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n-        TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:form:view:details:\"\n+        UTILITY_UI.getTester().assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertModelValue(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:form:view:details:\"\n                 + \"container:generics:name:textField\", \"even\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:form\");\n         formTester.setValue(\"view:details:container:resources:paletteField:recorder\", \"resource-ldap-orgunit\");\n \n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n         // ----------------------------------\n         // Check for propagation results\n         // ----------------------------------\n-        Component component = findComponentByProp(\"resource\", \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n+        Component component = UTILITY_UI.findComponentByProp(\"resource\",\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n                 + \"content:customResultBody:firstLevelContainer:first:container\", \"resource-ldap-orgunit\");\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":actions:actionRepeater:0:action:action\");\n+        UTILITY_UI.getTester().clickLink(component.getPageRelativePath() + \":actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertLabel(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+        UTILITY_UI.getTester().assertLabel(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:0:value:leftAttribute:field-label\", \"__NAME__\");\n \n-        TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+        UTILITY_UI.getTester().assertModelValue(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:0:value:leftAttribute:textField\", null);\n \n-        TESTER.assertLabel(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+        UTILITY_UI.getTester().assertLabel(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:0:value:rightAttribute:field-label\", \"__NAME__\");\n \n-        TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+        UTILITY_UI.getTester().assertModelValue(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:0:value:rightAttribute:textField\",\n                 \"ou=even,o=isp\");\n \n-        TESTER.clickLink(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:back\");\n \n-        assertNotNull(findComponentByProp(\"resource\", \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n+        assertNotNull(UTILITY_UI.findComponentByProp(\"resource\", \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n                 + \"content:customResultBody:firstLevelContainer:first:container\", \"resource-ldap-orgunit\"));\n         // ----------------------------------\n \n-        TESTER.executeAjaxEvent(\"body:content:body:outerObjectsRepeater:0:outer:form:content:action:actionRepeater:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:actionRepeater:\"\n                 + \"0:action:action\", Constants.ON_CLICK);\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:body:container:content:tabbedPanel:panel:actions:actions:actionRepeater:1:action:action\");\n-        TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n-        TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:form:view:details:\"\n+        UTILITY_UI.getTester().assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertModelValue(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:form:view:details:\"\n                 + \"container:generics:name:textField\", \"even\");\n \n-        formTester = TESTER.newFormTester(\n+        formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:body:outerObjectsRepeater:0:outer:form:content:form\");\n         formTester.setValue(\"view:details:container:resources:paletteField:recorder\", \"\");\n \n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n         // ----------------------------------\n         // Check for propagation results\n         // ----------------------------------\n-        component = findComponentByProp(\"resource\", \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n+        component = UTILITY_UI.findComponentByProp(\"resource\", \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n                 + \"content:customResultBody:firstLevelContainer:first:container\", \"resource-ldap-orgunit\");\n \n-        TESTER.clickLink(component.getPageRelativePath() + \":actions:actionRepeater:0:action:action\");\n+        UTILITY_UI.getTester().clickLink(component.getPageRelativePath() + \":actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertLabel(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+        UTILITY_UI.getTester().assertLabel(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:4:value:leftAttribute:field-label\", \"ou\");\n \n-        TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+        UTILITY_UI.getTester().assertModelValue(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:4:value:leftAttribute:textField\", \"even\");\n \n-        TESTER.assertLabel(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+        UTILITY_UI.getTester().assertLabel(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:4:value:rightAttribute:field-label\", \"ou\");\n \n-        TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+        UTILITY_UI.getTester().assertModelValue(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:second:remoteObject:propView:4:value:rightAttribute:textField\", null);\n \n-        TESTER.clickLink(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n                 + \"secondLevelContainer:back\");\n \n-        assertNotNull(findComponentByProp(\"resource\", \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n+        assertNotNull(UTILITY_UI.findComponentByProp(\"resource\", \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n                 + \"content:customResultBody:firstLevelContainer:first:container\", \"resource-ldap-orgunit\"));\n         // ----------------------------------\n \n-        TESTER.executeAjaxEvent(\"body:content:body:outerObjectsRepeater:0:outer:form:content:action:actionRepeater:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:actionRepeater:\"\n                 + \"0:action:action\", Constants.ON_CLICK);\n     }\n }"},{"sha":"0e214626b2e0f6a30eed870edaaae6c8f21573a5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RelationshipTypesITCase.java","status":"modified","additions":26,"deletions":24,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRelationshipTypesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRelationshipTypesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRelationshipTypesITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -35,16 +35,17 @@ public class RelationshipTypesITCase extends AbstractTypesITCase {\n     public void read() {\n         browsingToRelationshipType();\n \n-        Component result = findComponentByProp(KEY, DATATABLE_PATH, \"inclusion\");\n+        Component result = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, \"inclusion\");\n \n-        TESTER.assertComponent(\n+        UTILITY_UI.getTester().assertComponent(\n                 result.getPageRelativePath() + \":cells:1:cell\", Label.class);\n \n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(\n+        UTILITY_UI.getTester().assertComponent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", BaseModal.class);\n     }\n \n@@ -54,12 +55,12 @@ public void create() {\n         createRelationshipType(name);\n         browsingToRelationshipType();\n \n-        TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n+        UTILITY_UI.getTester().assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n \n-        Component result = findComponentByProp(KEY, DATATABLE_PATH, name);\n+        Component result = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, name);\n \n-        TESTER.assertLabel(result.getPageRelativePath() + \":cells:1:cell\", name);\n-        TESTER.assertLabel(result.getPageRelativePath() + \":cells:2:cell\", \"test relationshipType\");\n+        UTILITY_UI.getTester().assertLabel(result.getPageRelativePath() + \":cells:1:cell\", name);\n+        UTILITY_UI.getTester().assertLabel(result.getPageRelativePath() + \":cells:2:cell\", \"test relationshipType\");\n     }\n \n     @Test\n@@ -68,21 +69,22 @@ public void update() {\n         createRelationshipType(name);\n         browsingToRelationshipType();\n \n-        Component result = findComponentByProp(KEY, DATATABLE_PATH, name);\n+        Component result = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, name);\n         assertNotNull(result);\n \n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        final FormTester formTester = TESTER.newFormTester(\n+        final FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\n                 \"content:relationshipTypeDetails:container:form:description:textField\", \"new description\");\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n     }\n \n     @Test\n@@ -91,26 +93,26 @@ public void delete() {\n         createRelationshipType(name);\n         browsingToRelationshipType();\n \n-        TESTER.assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n+        UTILITY_UI.getTester().assertComponent(DATATABLE_PATH, AjaxDataTablePanel.class);\n \n-        Component result = findComponentByProp(KEY, DATATABLE_PATH, name);\n+        Component result = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, name);\n         assertNotNull(result);\n \n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n \n-        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"));\n \n-        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"), Constants.ON_CLICK);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n \n-        TESTER.cleanupFeedbackMessages();\n-        result = findComponentByProp(KEY, DATATABLE_PATH, name);\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        result = UTILITY_UI.findComponentByProp(KEY, DATATABLE_PATH, name);\n \n         assertNull(result);\n     }"},{"sha":"e24230f92751454ed65bf89a72d9131acb068978","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/ReportsITCase.java","status":"modified","additions":45,"deletions":37,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FReportsITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -35,123 +35,131 @@ public class ReportsITCase extends AbstractConsoleITCase {\n     @BeforeEach\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        TESTER.clickLink(\"body:reportsLI:reports\");\n-        TESTER.assertRenderedPage(Reports.class);\n+        UTILITY_UI.getTester().clickLink(\"body:reportsLI:reports\");\n+        UTILITY_UI.getTester().assertRenderedPage(Reports.class);\n     }\n \n     private void createReport(final String name) {\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:container:content:add\");\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:content:add\");\n \n-        TESTER.assertComponent(\n+        UTILITY_UI.getTester().assertComponent(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:name:textField\", name);\n         formTester.setValue(\"content:form:view:template:dropDownChoiceField\", \"0\");\n         formTester.submit(\"content:form:buttons:next\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater\"\n+        UTILITY_UI.getTester().assertComponent(\n+                \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater\"\n                 + \":0:outer:form:content:form:view:schedule:seconds:textField\", TextField.class);\n \n-        formTester = TESTER.newFormTester(\n+        formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.clickLink(\"body:reportsLI:reports\");\n+        UTILITY_UI.getTester().clickLink(\"body:reportsLI:reports\");\n     }\n \n     private void delete(final String name) {\n-        TESTER.clickLink(\"body:reportsLI:reports\");\n+        UTILITY_UI.getTester().clickLink(\"body:reportsLI:reports\");\n \n-        Component result = findComponentByProp(\n+        Component result = UTILITY_UI.findComponentByProp(\n                 \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", name);\n \n         assertNotNull(result);\n \n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n                 + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:5:action:action\");\n \n-        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n                 + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:5:action:action\"),\n                 Constants.ON_CLICK);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        assertNull(findComponentByProp(\n+        assertNull(UTILITY_UI.findComponentByProp(\n                 \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"deleteReport\"));\n     }\n \n     @Test\n     public void read() {\n-        Component result = findComponentByProp(\n+        Component result = UTILITY_UI.findComponentByProp(\n                 \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"test\");\n \n         assertNotNull(result);\n \n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n                 + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:3:action:action\");\n \n-        TESTER.assertModelValue(\n+        UTILITY_UI.getTester().assertModelValue(\n                 \"body:content:tabbedPanel:panel:secondLevelContainer:title\", \"Executions of report 'test'\");\n-        result = findComponentByProp(\"status\", \"body:content:tabbedPanel:panel:secondLevelContainer:second:executions:\"\n+        result = UTILITY_UI.findComponentByProp(\"status\",\n+                \"body:content:tabbedPanel:panel:secondLevelContainer:second:executions:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"SUCCESS\");\n \n         assertNotNull(result);\n \n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:secondLevelContainer:second:executions:firstLevelContainer:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:secondLevelContainer:second:executions:firstLevelContainer:\"\n                 + \"first:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:actions:\"\n                 + \"actions:actionRepeater:0:action:action\");\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:secondLevelContainer:second:executions:secondLevelContainer:back\");\n \n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:secondLevelContainer:back\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:secondLevelContainer:back\");\n \n-        assertNotNull(findComponentByProp(\n+        assertNotNull(UTILITY_UI.findComponentByProp(\n                 \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"reconciliation\"));\n     }\n \n     @Test\n     public void update() {\n         createReport(\"updateReport\");\n-        Component result = findComponentByProp(\n+        Component result = UTILITY_UI.findComponentByProp(\n                 \"name\", \"body:content:tabbedPanel:panel:firstLevelContainer:first:container:\"\n                 + \"content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"updateReport\");\n \n         assertNotNull(result);\n \n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:1:outer:\"\n                 + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertModelValue(\"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:\"\n+        UTILITY_UI.getTester().assertModelValue(\n+                \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:\"\n                 + \"0:outer:dialog:header:header-label\", \"Edit Report updateReport\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:template:dropDownChoiceField\", \"1\");\n \n-        formTester = TESTER.newFormTester(\n+        formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:firstLevelContainer:first:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n         delete(\"updateReport\");\n     }"},{"sha":"3c8a56276d589a0fca70e8b3f441fb6e0ef33981","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RolesITCase.java","status":"modified","additions":46,"deletions":34,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRolesITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -34,60 +34,67 @@ public class RolesITCase extends AbstractConsoleITCase {\n     @BeforeEach\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        TESTER.clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n-        TESTER.assertRenderedPage(Security.class);\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n+        UTILITY_UI.getTester().assertRenderedPage(Security.class);\n     }\n \n     private void createRole(final String name) {\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n \n-        TESTER.assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\",\n+                Modal.class);\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:key:textField\", name);\n         formTester.submit(\"content:form:buttons:next\");\n \n-        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:entitlements:paletteField:recorder\",\n                 \"WORKFLOW_DEF_READ,NOTIFICATION_UPDATE,RELATIONSHIPTYPE_READ,RELATIONSHIPTYPE_LIST\");\n         formTester.submit(\"content:form:buttons:next\");\n \n-        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:next\");\n \n-        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:next\");\n \n-        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n     }\n \n     @Test\n     public void read() {\n-        Component result = findComponentByProp(KEY, \"body:content:tabbedPanel:panel:container:content:searchContainer:\"\n+        Component result = UTILITY_UI.findComponentByProp(KEY,\n+                \"body:content:tabbedPanel:panel:container:content:searchContainer:\"\n                 + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"Other\");\n         assertNotNull(result);\n \n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:2:action:action\");\n \n-        TESTER.assertModelValue(\n+        UTILITY_UI.getTester().assertModelValue(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:dialog:header:header-label\",\n                 \"Role 'Other' members\");\n \n-        assertNotNull(findComponentByProp(\"username\",\n+        assertNotNull(UTILITY_UI.findComponentByProp(\"username\",\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:form:\"\n                 + \"content:searchResult:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"rossini\"));\n \n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:5:outer:dialog:footer:buttons:0:button\",\n                 Constants.ON_CLICK);\n     }\n@@ -100,56 +107,61 @@ public void create() {\n     @Test\n     public void update() {\n         createRole(\"updateRole\");\n-        Component result = findComponentByProp(KEY, \"body:content:tabbedPanel:panel:container:content:searchContainer:\"\n+        Component result = UTILITY_UI.findComponentByProp(KEY,\n+                \"body:content:tabbedPanel:panel:container:content:searchContainer:\"\n                 + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"updateRole\");\n \n         assertNotNull(result);\n \n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:\"\n                 + \"container:actions:actions:actionRepeater:0:action:action\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:key:textField\", \"updateRole\");\n         formTester.submit(\"content:form:buttons:next\");\n \n-        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:entitlements:paletteField:recorder\",\n                 \"WORKFLOW_DEF_READ,NOTIFICATION_UPDATE\");\n         formTester.submit(\"content:form:buttons:next\");\n \n-        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void delete() {\n         createRole(\"deleteRole\");\n-        Component result = findComponentByProp(KEY, \"body:content:tabbedPanel:panel:container:content:searchContainer:\"\n+        Component result = UTILITY_UI.findComponentByProp(KEY,\n+                \"body:content:tabbedPanel:panel:container:content:searchContainer:\"\n                 + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"deleteRole\");\n \n         assertNotNull(result);\n \n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n \n-        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n+        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:\"\n                 + \"container:actions:actions:actionRepeater:4:action:action\"));\n \n-        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:togglePanelContainer:\"\n                 + \"container:actions:actions:actionRepeater:4:action:action\"), \"onclick\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        assertNull(findComponentByProp(KEY, \"body:content:tabbedPanel:panel:container:content:searchContainer:\"\n+        assertNull(UTILITY_UI.findComponentByProp(KEY,\n+                \"body:content:tabbedPanel:panel:container:content:searchContainer:\"\n                 + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"deleteRole\"));\n     }\n }"},{"sha":"ef82eeb104fcb5a8ceff63e2fb1ca72e09431f45","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/SchemasITCase.java","status":"modified","additions":55,"deletions":55,"changes":110,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSchemasITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -35,20 +35,20 @@ public class SchemasITCase extends AbstractTypesITCase {\n     @Test\n     public void readPlainSchema() {\n         browsingToPlainSchemas();\n-        TESTER.assertLabel(\n+        UTILITY_UI.getTester().assertLabel(\n                 PLAIN_DATATABLE_PATH\n                 + \":tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable:body:rows:1:cells:1:cell\", \"aLong\");\n \n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 PLAIN_DATATABLE_PATH + \":tablePanel:groupForm:checkgroup:dataTable:body:rows:1\",\n                 Constants.ON_CLICK);\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:1:outer:\"\n                 + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(\n+        UTILITY_UI.getTester().assertComponent(\n                 \"body:content:tabbedPanel:\"\n                 + \"panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:\"\n                 + \"form:content:form:view:kind:dropDownChoiceField\", DropDownChoice.class);\n@@ -57,133 +57,133 @@ public void readPlainSchema() {\n     @Test\n     public void createPlainSchema() {\n         browsingToPlainSchemas();\n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:container:content:add\");\n \n-        TESTER.assertComponent(\n+        UTILITY_UI.getTester().assertComponent(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:details:key:textField\", \"zBoolean\");\n         formTester.setValue(\"content:form:view:details:type:dropDownChoiceField\", \"3\");\n-        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:0:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:0:\"\n                 + \"body:content:outerObjectsRepeater:0:outer:form:content:form:buttons:next\", Constants.ON_CLICK);\n \n-        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n+        formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n \n-        TESTER.cleanupFeedbackMessages();\n-        TESTER.assertRenderedPage(Types.class);\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n     }\n \n     @Test\n     public void updatePlainSchema() {\n         browsingToPlainSchemas();\n \n-        Component result = findComponentByProp(KEY, PLAIN_DATATABLE_PATH, \"ctype\");\n+        Component result = UTILITY_UI.findComponentByProp(KEY, PLAIN_DATATABLE_PATH, \"ctype\");\n \n-        TESTER.assertLabel(result.getPageRelativePath() + \":cells:1:cell\", \"ctype\");\n+        UTILITY_UI.getTester().assertLabel(result.getPageRelativePath() + \":cells:1:cell\", \"ctype\");\n         assertNotNull(result);\n \n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:1:outer:\"\n                 + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(\n+        UTILITY_UI.getTester().assertComponent(\n                 \"body:content:tabbedPanel:\"\n                 + \"panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:\"\n                 + \"form:content:form:view:kind:dropDownChoiceField\", DropDownChoice.class);\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:details:multivalue:checkboxField\", \"true\");\n \n-        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:0:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:0:\"\n                 + \"body:content:outerObjectsRepeater:0:outer:form:content:form:buttons:next\", Constants.ON_CLICK);\n \n-        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n+        formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n     }\n \n     @Test\n     public void deletePlainSchema() {\n         browsingToPlainSchemas();\n         //create new Plain Schema\n         final String schemaName = \"zStringDelete\";\n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:container:content:add\");\n \n-        TESTER.assertComponent(\n+        UTILITY_UI.getTester().assertComponent(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:form:view:details:key:textField\", schemaName);\n         formTester.setValue(\"content:form:view:details:type:dropDownChoiceField\", \"0\");\n-        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:0:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:0:\"\n                 + \"body:content:outerObjectsRepeater:0:outer:form:content:form:buttons:next\", Constants.ON_CLICK);\n \n-        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n+        formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:0:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");;\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");;\n \n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n         //delete plain schema\n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 PLAIN_DATATABLE_PATH\n                 + \":tablePanel:groupForm:checkgroup:dataTable:bottomToolbars:toolbars:3:span:navigator:last\");\n \n-        TESTER.assertComponent(PLAIN_DATATABLE_PATH, AjaxDataTablePanel.class);\n+        UTILITY_UI.getTester().assertComponent(PLAIN_DATATABLE_PATH, AjaxDataTablePanel.class);\n \n-        Component result = findComponentByProp(KEY, PLAIN_DATATABLE_PATH, schemaName);\n+        Component result = UTILITY_UI.findComponentByProp(KEY, PLAIN_DATATABLE_PATH, schemaName);\n         assertNotNull(result);\n \n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n \n-        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:1:outer:\"\n                 + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n-        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:outerObjectsRepeater:1:outer:\"\n                 + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"),\n                 Constants.ON_CLICK);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        assertNull(findComponentByProp(KEY, PLAIN_DATATABLE_PATH, schemaName));\n+        assertNull(UTILITY_UI.findComponentByProp(KEY, PLAIN_DATATABLE_PATH, schemaName));\n     }\n \n     @Test\n     public void createVirtualSchema() {\n         browsingToVirtualSchemas();\n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:2:body:content:container:content:add\");\n \n-        TESTER.assertComponent(\n+        UTILITY_UI.getTester().assertComponent(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:2:body:content:outerObjectsRepeater:0:outer\",\n                 Modal.class);\n \n-        FormTester formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:2:body:content:outerObjectsRepeater:0:outer:form\");\n \n         formTester.setValue(\"content:form:view:details:resource:dropDownChoiceField\", \"0\");\n-        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:2:body:content:outerObjectsRepeater:0:outer:form:\"\n                 + \"content:form:view:details:resource:dropDownChoiceField\", Constants.ON_CHANGE);\n \n@@ -192,33 +192,33 @@ public void createVirtualSchema() {\n         formTester.setValue(\"content:form:view:details:anyType:dropDownChoiceField\", \"0\");\n         formTester.setValue(\"content:form:view:details:extAttrName:textField\", \"virattr\");\n \n-        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:2:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\"body:content:tabbedPanel:panel:accordionPanel:tabs:2:\"\n                 + \"body:content:outerObjectsRepeater:0:outer:form:content:form:buttons:next\", Constants.ON_CLICK);\n \n-        formTester = TESTER.newFormTester(\"body:content:tabbedPanel:panel:\"\n+        formTester = UTILITY_UI.getTester().newFormTester(\"body:content:tabbedPanel:panel:\"\n                 + \"accordionPanel:tabs:2:body:content:outerObjectsRepeater:0:outer:form\");\n         formTester.submit(\"content:form:buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n-        TESTER.assertRenderedPage(Types.class);\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertRenderedPage(Types.class);\n \n-        Component result = findComponentByProp(KEY, VIRTUAL_DATATABLE_PATH, \"mynewvir\");\n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        Component result = UTILITY_UI.findComponentByProp(KEY, VIRTUAL_DATATABLE_PATH, \"mynewvir\");\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n \n-        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:2:body:content:outerObjectsRepeater:1:outer:\"\n                 + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n-        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:accordionPanel:tabs:2:body:content:outerObjectsRepeater:1:outer:\"\n                 + \"container:content:togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"),\n                 Constants.ON_CLICK);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        assertNull(findComponentByProp(KEY, VIRTUAL_DATATABLE_PATH, \"mynewvir\"));\n+        assertNull(UTILITY_UI.findComponentByProp(KEY, VIRTUAL_DATATABLE_PATH, \"mynewvir\"));\n     }\n }"},{"sha":"285ba853697579b330a32a4e0bc451d0ba88a65a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/SecurityQuestionsITCase.java","status":"modified","additions":32,"deletions":29,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FSecurityQuestionsITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -37,43 +37,44 @@ public class SecurityQuestionsITCase extends AbstractConsoleITCase {\n     @BeforeEach\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        TESTER.clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n-        TESTER.assertRenderedPage(Security.class);\n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n+        UTILITY_UI.getTester().assertRenderedPage(Security.class);\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n     }\n \n     private void createSecurityQuestion(final String name) {\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:panel:container:content:add\");\n \n-        TESTER.assertComponent(\n+        UTILITY_UI.getTester().assertComponent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:securityQuestionDetailsPanel:container:form:content:textField\",\n                 name);\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n-        TESTER.clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:configurationLI:configurationUL:securityLI:security\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:tabbedPanel:tabs-container:tabs:3:link\");\n     }\n \n     @Test\n     public void read() {\n-        Label label = (Label) TESTER.getComponentFromLastRenderedPage(\n+        Label label = (Label) UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:container:content:searchContainer:resultTable:\"\n                 + \"tablePanel:groupForm:checkgroup:dataTable:body:rows:1:cells:2:cell\");\n         assertTrue(label.getDefaultModelObjectAsString().startsWith(\"What&#039;s your \"));\n \n-        TESTER.executeAjaxEvent(\"body:content:tabbedPanel:panel:container:content:searchContainer:resultTable:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:content:tabbedPanel:panel:container:content:searchContainer:resultTable:\"\n                 + \"tablePanel:groupForm:checkgroup:dataTable:body:rows:1\", Constants.ON_CLICK);\n \n-        TESTER.assertComponent(\n+        UTILITY_UI.getTester().assertComponent(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\",\n                 IndicatingAjaxLink.class);\n@@ -87,51 +88,53 @@ public void create() {\n     @Test\n     public void update() {\n         createSecurityQuestion(\"What's your preferred color?\");\n-        Component result = findComponentByProp(\"content\", \"body:content:tabbedPanel:panel:container:content:\"\n+        Component result = UTILITY_UI.findComponentByProp(\"content\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 \"What's your preferred color?\");\n \n         assertNotNull(result);\n \n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:form\");\n         formTester.setValue(\"content:securityQuestionDetailsPanel:container:form:content:textField\",\n                 \"What's your preferred car?\");\n \n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:0:outer:dialog:footer:inputs:0:submit\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void delete() {\n         String name = \"What's your preferred color?\";\n         createSecurityQuestion(name);\n \n-        Component result = findComponentByProp(\"content\", \"body:content:tabbedPanel:panel:container:content:\"\n+        Component result = UTILITY_UI.findComponentByProp(\"content\", \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 name);\n         assertNotNull(result);\n \n-        TESTER.executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(\"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(result.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\");\n \n-        TESTER.executeAjaxEvent(TESTER.getComponentFromLastRenderedPage(\n+        UTILITY_UI.getTester().executeAjaxEvent(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\n                 \"body:content:tabbedPanel:panel:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:1:action:action\"), \"onclick\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        assertNull(findComponentByProp(\"content\",\n+        assertNull(UTILITY_UI.findComponentByProp(\"content\",\n                 \"body:content:tabbedPanel:panel:container:content:\"\n                 + \"searchContainer:resultTable:\"\n                 + \"tablePanel:groupForm:checkgroup:dataTable\", name));"},{"sha":"0029c16e3ea24da0d056cb94821faeff34aa7675","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/TopologyITCase.java","status":"modified","additions":218,"deletions":168,"changes":386,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -43,100 +43,117 @@ public class TopologyITCase extends AbstractConsoleITCase {\n     @BeforeEach\n     public void login() {\n         doLogin(ADMIN_UNAME, ADMIN_PWD);\n-        TESTER.clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n-        TESTER.assertRenderedPage(Topology.class);\n+        UTILITY_UI.getTester().clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n+        UTILITY_UI.getTester().assertRenderedPage(Topology.class);\n     }\n \n     @Test\n     public void showTopology() {\n-        TESTER.assertComponent(\"body:syncope\", WebMarkupContainer.class);\n-        TESTER.assertComponent(\"body:resources:1\", WebMarkupContainer.class);\n-        TESTER.assertComponent(\"body:resources:2:resources:0\", WebMarkupContainer.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:syncope\", WebMarkupContainer.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:resources:1\", WebMarkupContainer.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:resources:2:resources:0\", WebMarkupContainer.class);\n     }\n \n     @Test\n     public void showTopologyToggleMenu() {\n-        TESTER.executeAjaxEvent(\"body:resources:2:resources:0:res\", Constants.ON_CLICK);\n-        TESTER.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:delete\",\n+        UTILITY_UI.getTester().executeAjaxEvent(\"body:resources:2:resources:0:res\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().assertComponent(\n+                \"body:toggle:container:content:togglePanelContainer:container:actions:delete\",\n                 AjaxLink.class);\n-        TESTER.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:edit\",\n+        UTILITY_UI.getTester().assertComponent(\n+                \"body:toggle:container:content:togglePanelContainer:container:actions:edit\",\n                 AjaxLink.class);\n-        TESTER.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:propagation\",\n+        UTILITY_UI.getTester().assertComponent(\n+                \"body:toggle:container:content:togglePanelContainer:container:actions:propagation\",\n                 AjaxLink.class);\n-        TESTER.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:pull\",\n+        UTILITY_UI.getTester().assertComponent(\n+                \"body:toggle:container:content:togglePanelContainer:container:actions:pull\",\n                 AjaxLink.class);\n-        TESTER.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:push\",\n+        UTILITY_UI.getTester().assertComponent(\n+                \"body:toggle:container:content:togglePanelContainer:container:actions:push\",\n                 AjaxLink.class);\n-        TESTER.executeAjaxEvent(\"body:syncope\", Constants.ON_CLICK);\n-        TESTER.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:tasks\",\n+        UTILITY_UI.getTester().executeAjaxEvent(\"body:syncope\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().assertComponent(\n+                \"body:toggle:container:content:togglePanelContainer:container:actions:tasks\",\n                 AjaxLink.class);\n-        TESTER.executeAjaxEvent(\"body:conns:0:conns:3:conn\", Constants.ON_CLICK);\n-        TESTER.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:create\",\n+        UTILITY_UI.getTester().executeAjaxEvent(\"body:conns:0:conns:3:conn\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().assertComponent(\n+                \"body:toggle:container:content:togglePanelContainer:container:actions:create\",\n                 AjaxLink.class);\n-        TESTER.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:delete\",\n+        UTILITY_UI.getTester().assertComponent(\n+                \"body:toggle:container:content:togglePanelContainer:container:actions:delete\",\n                 AjaxLink.class);\n-        TESTER.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:edit\",\n+        UTILITY_UI.getTester().assertComponent(\n+                \"body:toggle:container:content:togglePanelContainer:container:actions:edit\",\n                 AjaxLink.class);\n     }\n \n     @Test\n     public void resourceBatchAction() {\n-        Component component = findComponentByProp(\"key\", \"body:resources\", \"ws-target-resource-1\");\n+        Component component = UTILITY_UI.findComponentByProp(\"key\", \"body:resources\", \"ws-target-resource-1\");\n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:reconciliation\");\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:toggle:container:content:togglePanelContainer:container:actions:reconciliation\");\n \n-        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:1:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:toggle:outerObjectsRepeater:1:outer\", Modal.class);\n \n-        FormTester formTester = TESTER.newFormTester(\"body:toggle:outerObjectsRepeater:1:outer:form\");\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\"body:toggle:outerObjectsRepeater:1:outer:form\");\n         formTester.setValue(\"content:anyTypes:dropDownChoiceField\", \"0\");\n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:anyTypes:dropDownChoiceField\",\n                 Constants.ON_CHANGE);\n         formTester.setValue(\"content:anyTypes:dropDownChoiceField\", \"0\");\n \n-        component = findComponentByProp(\"key\", \"body:toggle:outerObjectsRepeater:1:outer:form:content:status:\"\n+        component = UTILITY_UI.findComponentByProp(\"key\",\n+                \"body:toggle:outerObjectsRepeater:1:outer:form:content:status:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"b3cbc78d-32e6-4bd4-92e0-bbe07566a2ee\");\n \n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:1:outer:dialog:footer:buttons:0:button\", Constants.ON_CLICK);\n     }\n \n     @Test\n     public void editProvisioning() {\n-        Component component = findComponentByProp(\"key\", \"body:resources\", \"ws-target-resource-1\");\n+        Component component = UTILITY_UI.findComponentByProp(\"key\", \"body:resources\", \"ws-target-resource-1\");\n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:provision\");\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:toggle:container:content:togglePanelContainer:container:actions:provision\");\n \n-        TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:group:beans:0:fields:0\", Constants.ON_CLICK);\n \n-        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:form:content:toggle:container:content:\"\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:toggle:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(\n+        formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n         formTester.submit(\"buttons:next\");\n \n-        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:\"\n+        UTILITY_UI.getTester().assertComponent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:\"\n                 + \"container:content:wizard:form:view:mapping:mappingContainer:mappings:1\", WebMarkupContainer.class);\n \n-        TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:wizard:form:view:mapping:mappingContainer:mappings:1:itemTransformers:icon\",\n                 Constants.ON_CLICK);\n \n-        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:\"\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:\"\n                 + \"wizard:form:view:mapping:mappingContainer:mappings:0:itemTransformers:alertsLink\");\n \n-        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n+        UTILITY_UI.getTester().assertComponent(\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:wizard:outerObjectsRepeater:0:outer:container:content:togglePanelContainer:\"\n                 + \"form:classes:paletteField\", NonI18nPalette.class);\n     }\n@@ -145,68 +162,72 @@ public void editProvisioning() {\n     public void createNewResurceAndProvisionRules() {\n         final String res = UUID.randomUUID().toString();\n \n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 \"body:conns:0:conns:0:conn\", Constants.ON_CLICK);\n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 \"body:toggle:container:content:togglePanelContainer:container:actions:create\", Constants.ON_CLICK);\n \n-        FormTester formTester = TESTER.newFormTester(\"body:toggle:outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n+                \"body:toggle:outerObjectsRepeater:0:outer:form:content:form\");\n \n         formTester.setValue(\"view:container:key:textField\", res);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(\"body:toggle:outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(\"body:toggle:outerObjectsRepeater:0:outer:form:content:form\");\n         formTester.submit(\"buttons:next\");\n \n         // click on finish to create the external resource \n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n         // ajax event required to retrieve AjaxRequestTarget (used into finish custom event)\n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:0:outer:form:content:form:buttons:finish\", Constants.ON_CLICK);\n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n \n-        TESTER.cleanupFeedbackMessages();\n-        TESTER.clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n \n-        Component component = findComponentByProp(\"key\", \"body:resources\", res);\n+        Component component = UTILITY_UI.findComponentByProp(\"key\", \"body:resources\", res);\n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:provision\");\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:toggle:container:content:togglePanelContainer:container:actions:provision\");\n \n         // -- create new provision rules for the current resource\n-        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:add\");\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:add\");\n \n-        formTester = TESTER.newFormTester(\n+        formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:objectTypeToggle:container:\"\n                 + \"content:togglePanelContainer:objectTypeForm\");\n         formTester.select(\"type:dropDownChoiceField\", 1);\n         formTester.submit(\"changeit\");\n-        TESTER.assertNoErrorMessage();\n-        TESTER.assertNoInfoMessage();\n+        UTILITY_UI.getTester().assertNoErrorMessage();\n+        UTILITY_UI.getTester().assertNoInfoMessage();\n \n         // choose object class\n-        formTester = TESTER.newFormTester(\n+        formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n         formTester.submit(\"buttons:next\");\n-        TESTER.assertNoErrorMessage();\n-        TESTER.assertNoInfoMessage();\n+        UTILITY_UI.getTester().assertNoErrorMessage();\n+        UTILITY_UI.getTester().assertNoInfoMessage();\n \n         // aux classes\n-        formTester = TESTER.newFormTester(\n+        formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n         formTester.submit(\"buttons:next\");\n-        TESTER.assertNoErrorMessage();\n-        TESTER.assertNoInfoMessage();\n+        UTILITY_UI.getTester().assertNoErrorMessage();\n+        UTILITY_UI.getTester().assertNoInfoMessage();\n \n         // set a new mapping rule\n-        TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:wizard:form:view:mapping:mappingContainer:addMappingBtn\", Constants.ON_CLICK);\n \n-        formTester = TESTER.newFormTester(\n+        formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n \n         formTester.setValue(\"view:mapping:mappingContainer:mappings:0:connObjectKey:checkboxField\", \"true\");\n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\"\n                 + \":view:mapping:mappingContainer:mappings:0:connObjectKey:checkboxField\", Constants.ON_CHANGE);\n \n@@ -215,97 +236,106 @@ public void createNewResurceAndProvisionRules() {\n         formTester.setValue(\"view:mapping:mappingContainer:mappings:0:connObjectKey:checkboxField\", \"true\");\n \n         formTester.submit(\"buttons:next\");\n-        TESTER.assertNoErrorMessage();\n-        TESTER.assertNoInfoMessage();\n+        UTILITY_UI.getTester().assertNoErrorMessage();\n+        UTILITY_UI.getTester().assertNoInfoMessage();\n \n         // finish\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n         // ajax event required to retrieve AjaxRequestTarget (used into finish custom event)\n-        TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:wizard:form:buttons:finish\", Constants.ON_CLICK);\n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n \n-        TESTER.assertComponent(\n+        UTILITY_UI.getTester().assertComponent(\n                 \"body:toggle:outerObjectsRepeater:3:outer:dialog:footer:inputs:0:submit\", AjaxSubmitLink.class);\n \n         // save\n-        TESTER.cleanupFeedbackMessages();\n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 \"body:toggle:outerObjectsRepeater:3:outer:dialog:footer:inputs:0:submit\", Constants.ON_CLICK);\n-        TESTER.assertNoErrorMessage();\n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertNoErrorMessage();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n \n-        TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:group:beans:0:fields:0\", Constants.ON_CLICK);\n \n-        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:form:content:toggle:container:content:\"\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:toggle:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        formTester = TESTER.newFormTester(\n+        formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(\n+        formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n         formTester.submit(\"buttons:next\");\n \n-        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:\"\n+        UTILITY_UI.getTester().assertComponent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:\"\n                 + \"container:content:wizard:form:view:mapping:mappingContainer:mappings:0\", WebMarkupContainer.class);\n \n-        TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:wizard:form:buttons:cancel\", Constants.ON_CLICK);\n \n-        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:dialog:footer:buttons:0:button\");\n+        UTILITY_UI.getTester().clickLink(\"body:toggle:outerObjectsRepeater:3:outer:dialog:footer:buttons:0:button\");\n \n-        TESTER.cleanupFeedbackMessages();\n-        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:delete\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n+        UTILITY_UI.getTester().clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:delete\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n-        component = findComponentByProp(\"key\", \"body:resources\", res);\n+        UTILITY_UI.getTester().clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n+        component = UTILITY_UI.findComponentByProp(\"key\", \"body:resources\", res);\n         assertNull(component);\n     }\n \n     @Test\n     public void executePullTask() {\n-        Component component = findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n+        Component component = UTILITY_UI.findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:pull\");\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:pull\");\n \n-        component = findComponentByProp(\"name\", \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n+        component = UTILITY_UI.findComponentByProp(\"name\",\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"TestDB Task\");\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:3:action:action\");\n \n-        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"container:content:startAt:container:content:togglePanelContainer:startAtForm:startAt\");\n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n \n-        component = findComponentByProp(\"name\", \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n+        component = UTILITY_UI.findComponentByProp(\"name\",\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", \"TestDB Task\");\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertLabel(\n+        UTILITY_UI.getTester().assertLabel(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:secondLevelContainer:title\",\n                 \"Executions of task &#039;TestDB Task&#039;\");\n \n         int iteration = 0;\n         do {\n             try {\n-                component = findComponentByProp(\"status\",\n+                component = UTILITY_UI.findComponentByProp(\"status\",\n                         \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:secondLevelContainer:\"\n                         + \"second:executions:firstLevelContainer:first:container:content:searchContainer:resultTable:\"\n                         + \"tablePanel:groupForm:checkgroup:dataTable\", \"SUCCESS\");\n@@ -318,228 +348,248 @@ public void executePullTask() {\n                 } catch (Exception ignore) {\n                 }\n \n-                TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n+                UTILITY_UI.getTester().executeAjaxEvent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                         + \"secondLevelContainer:second:executions:firstLevelContainer:first:container:content:\"\n                         + \"searchContainer:tablehandling:actionRepeater:0:action:action\", Constants.ON_CLICK);\n \n                 iteration++;\n             }\n         } while (iteration < 10);\n \n-        component = findComponentByProp(\"status\",\n+        component = UTILITY_UI.findComponentByProp(\"status\",\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:secondLevelContainer:\"\n                 + \"second:executions:firstLevelContainer:first:container:content:searchContainer:resultTable:\"\n                 + \"tablePanel:groupForm:checkgroup:dataTable\", \"SUCCESS\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:secondLevelContainer:second:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:secondLevelContainer:second:\"\n                 + \"executions:firstLevelContainer:first:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n+        UTILITY_UI.getTester().assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"secondLevelContainer:second:executions:secondLevelContainer:title\", Label.class);\n     }\n \n     @Test\n     public void readPropagationTaskExecutions() {\n-        Component component = findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n+        Component component = UTILITY_UI.findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:propagation\");\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:toggle:container:content:togglePanelContainer:container:actions:propagation\");\n \n-        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:\"\n+        UTILITY_UI.getTester().assertComponent(\n+                \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n                 WebMarkupContainer.class);\n \n-        component = findComponentByProp(\"operation\", \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n+        component = UTILITY_UI.findComponentByProp(\"operation\",\n+                \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\", ResourceOperation.CREATE);\n \n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:first:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:2:action:action\");\n \n-        TESTER.clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n+        UTILITY_UI.getTester().clickLink(\"body:idmPages:0:idmPageLI:idmPage\");\n \n-        component = findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n+        component = UTILITY_UI.findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:propagation\");\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:toggle:container:content:togglePanelContainer:container:actions:propagation\");\n \n-        component = findComponentByPropNotNull(\"start\", \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n+        component = UTILITY_UI.findComponentByPropNotNull(\"start\",\n+                \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:searchContainer:resultTable:tablePanel:groupForm:\"\n                 + \"checkgroup:dataTable\");\n \n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:first:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertLabel(\n+        UTILITY_UI.getTester().assertLabel(\n                 \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:secondLevelContainer:title\",\n                 \"CREATE __ACCOUNT__\");\n \n-        component = findComponentByProp(\"status\", \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n+        component = UTILITY_UI.findComponentByProp(\"status\",\n+                \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n                 + \"secondLevelContainer:second:executions:firstLevelContainer:first:container:content:searchContainer:\"\n                 + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"FAILURE\");\n \n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:secondLevelContainer:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:secondLevelContainer:\"\n                 + \"second:executions:firstLevelContainer:first:outerObjectsRepeater:1:outer:container:content:\"\n                 + \"togglePanelContainer:container:actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n+        UTILITY_UI.getTester().assertComponent(\"body:toggle:outerObjectsRepeater:1:outer:form:content:tasks:\"\n                 + \"secondLevelContainer:second:executions:secondLevelContainer:title\", Label.class);\n     }\n \n     @Test\n     public void editPushTask() {\n-        Component component = findComponentByProp(\"key\", \"body:resources\", \"resource-ldap\");\n+        Component component = UTILITY_UI.findComponentByProp(\"key\", \"body:resources\", \"resource-ldap\");\n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:push\");\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:push\");\n \n-        TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:\"\n                 + \"body:rows:1\", Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:1:action:action\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:\"\n                 + \"tasks:firstLevelContainer:first:container:content:wizard:form\");\n         formTester.setValue(\"view:description:textField\", \"test\");\n         formTester.submit(\"buttons:next\");\n \n-        TESTER.assertModelValue(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n+        UTILITY_UI.getTester().assertModelValue(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:wizard:form:view:filters:0:filters:tabs:0:body:\"\n                 + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panel:container:\"\n                 + \"value:textField\", \"_NO_ONE_\");\n \n-        formTester = TESTER.newFormTester(\n+        formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:\"\n                 + \"tasks:firstLevelContainer:first:container:content:wizard:form\");\n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void createSchedTask() {\n-        TESTER.executeAjaxEvent(\"body:syncope\", Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:tasks\");\n-        TESTER.clickLink(\n+        UTILITY_UI.getTester().executeAjaxEvent(\"body:syncope\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:tasks\");\n+        UTILITY_UI.getTester().clickLink(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"container:content:add\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"container:content:wizard:form\");\n         formTester.setValue(\"view:name:textField\", \"test\");\n         formTester.select(\"view:jobDelegate:dropDownChoiceField\", 0);\n \n         formTester.submit(\"buttons:next\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        formTester = TESTER.newFormTester(\n+        formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"container:content:wizard:form\");\n \n-        TESTER.assertComponent(\n+        UTILITY_UI.getTester().assertComponent(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:wizard:form:view:schedule:seconds:textField\", TextField.class);\n \n         formTester.submit(\"buttons:finish\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void addGroupTemplate() {\n-        Component component = findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n+        Component component = UTILITY_UI.findComponentByProp(\"key\", \"body:resources\", \"resource-testdb\");\n         assertNotNull(component);\n-        TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:pull\");\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:pull\");\n \n-        TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:\"\n                 + \"body:rows:1\", Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:4:action:action\");\n \n-        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n+        UTILITY_UI.getTester().assertComponent(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:toggleTemplates\", TogglePanel.class);\n \n-        FormTester formTester = TESTER.newFormTester(\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:container:\"\n                 + \"content:toggleTemplates:container:content:togglePanelContainer:templatesForm\");\n \n         formTester.setValue(\"type:dropDownChoiceField\", \"1\");\n         formTester.submit(\"changeit\");\n \n-        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:toggle:outerObjectsRepeater:2:outer\", Modal.class);\n \n-        formTester = TESTER.newFormTester(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n+        formTester = UTILITY_UI.getTester().newFormTester(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:wizard:form\");\n         formTester.setValue(\"view:name:textField\", \"'k' + name\");\n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable:\"\n                 + \"body:rows:1\", Constants.ON_CLICK);\n-        TESTER.clickLink(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:\"\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:4:action:action\");\n \n-        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n+        UTILITY_UI.getTester().assertComponent(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:toggleTemplates\", TogglePanel.class);\n \n-        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n+        UTILITY_UI.getTester().assertComponent(\n+                \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:\"\n                 + \"first:container:content:toggleTemplates\", TogglePanel.class);\n \n-        formTester = TESTER.newFormTester(\n+        formTester = UTILITY_UI.getTester().newFormTester(\n                 \"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:firstLevelContainer:first:container:\"\n                 + \"content:toggleTemplates:container:content:togglePanelContainer:templatesForm\");\n \n         formTester.setValue(\"type:dropDownChoiceField\", \"1\");\n         formTester.submit(\"changeit\");\n \n-        TESTER.assertComponent(\"body:toggle:outerObjectsRepeater:2:outer\", Modal.class);\n+        UTILITY_UI.getTester().assertComponent(\"body:toggle:outerObjectsRepeater:2:outer\", Modal.class);\n \n-        TESTER.assertModelValue(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n+        UTILITY_UI.getTester().assertModelValue(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:wizard:form:view:name:textField\",\n                 \"'k' + name\");\n \n-        formTester = TESTER.newFormTester(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n+        formTester = UTILITY_UI.getTester().newFormTester(\"body:toggle:outerObjectsRepeater:2:outer:form:content:tasks:\"\n                 + \"firstLevelContainer:first:container:content:wizard:form\");\n         formTester.setValue(\"view:name:textField\", \"\");\n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void reloadConnectors() {\n-        TESTER.executeAjaxEvent(\"body:syncope\", Constants.ON_CLICK);\n-        TESTER.assertComponent(\"body:toggle:container:content:togglePanelContainer:container:actions:reload\",\n+        UTILITY_UI.getTester().executeAjaxEvent(\"body:syncope\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().assertComponent(\n+                \"body:toggle:container:content:togglePanelContainer:container:actions:reload\",\n                 AjaxLink.class);\n \n-        TESTER.cleanupFeedbackMessages();\n-        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n-        TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:reload\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().getRequest().addParameter(\"confirm\", \"true\");\n+        UTILITY_UI.getTester().clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:reload\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n     }\n }"},{"sha":"59ec6ea82643f36c10e2022a9cb3b13efb8c247a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/UsersITCase.java","status":"modified","additions":230,"deletions":187,"changes":417,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -45,129 +45,141 @@ public void login() {\n \n     @Test\n     public void filteredSearch() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n+        UTILITY_UI.getTester().clickLink(\n+                \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n \n-        TESTER.executeAjaxEvent(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:\"\n                 + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panelPlus:add\",\n                 Constants.ON_CLICK);\n \n-        TESTER.assertComponent(\n+        UTILITY_UI.getTester().assertComponent(\n                 \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n                 + \"searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panel:container:value:\"\n                 + \"textField\", TextField.class);\n-        TESTER.assertComponent(\n+        UTILITY_UI.getTester().assertComponent(\n                 \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n                 + \"searchFormContainer:search:multiValueContainer:innerForm:content:view:1:panel:container:value:\"\n                 + \"textField\", TextField.class);\n     }\n \n     @Test\n     public void forceChangePassword() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"verdi\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:2:action:action\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n     }\n \n     @Test\n     public void clickToCloneUser() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:1:action:action\");\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n                 TextField.class);\n \n-        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         formTester.submit(\"buttons:cancel\");\n     }\n \n     @Test\n     public void editRelationships() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n                 TextField.class);\n \n-        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:relationships:actions:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form:view:relationships:actions:\"\n                 + \"actionRepeater:0:action:action\", Constants.ON_CLICK);\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         formTester.setValue(\"view:relationships:specification:type:dropDownChoiceField\", \"1\");\n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:relationships:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form:view:relationships:\"\n                 + \"specification:type:dropDownChoiceField\", Constants.ON_CHANGE);\n         // The ON_CHANGE above should enable this component, but it doesn't; doing it by hand\n-        Component otherType = findComponentById(\n+        Component otherType = UTILITY_UI.findComponentById(\n                 TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:relationships:specification\",\n                 \"otherType\");\n         assertNotNull(otherType);\n         otherType.setEnabled(true);\n \n         formTester.setValue(\"view:relationships:specification:otherType:dropDownChoiceField\", \"PRINTER\");\n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:relationships:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form:view:relationships:\"\n                 + \"specification:otherType:dropDownChoiceField\", Constants.ON_CHANGE);\n \n-        component = findComponentByProp(\"name\", TAB_PANEL + \"outerObjectsRepeater:\"\n+        component = UTILITY_UI.findComponentByProp(\"name\", TAB_PANEL + \"outerObjectsRepeater:\"\n                 + \"0:outer:form:content:form:view:relationships:specification:searchPanelContainer:searchPanel:\"\n                 + \"searchResultPanel:container:content:searchContainer:resultTable:tablePanel:groupForm:checkgroup:\"\n                 + \"dataTable:body:rows:1:cells:2:cell\", \"Canon MF 8030cn\");\n@@ -178,106 +190,114 @@ public void editRelationships() {\n \n     @Test\n     public void editUser() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n                 TextField.class);\n \n-        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n \n-        TESTER.assertComponent(TAB_PANEL\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n                 + \"container:content:group:beans:0:fields:1:field\", Label.class);\n \n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n-        component = findComponentByProp(\"username\", CONTAINER\n+        component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNotNull(component);\n     }\n \n     @Test\n     public void editUserMembership() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:btn\", Constants.ON_CLICK);\n-        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:2:button\",\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().\n+                executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:btn\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:2:button\",\n                 Constants.ON_CLICK);\n \n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNull(component);\n \n-        component = findComponentByProp(\"username\", CONTAINER\n+        component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         formTester.setValue(\"view:groupsContainer:groups:paletteField:recorder\", \"additional,root,otherchild\");\n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:buttons:next\", Constants.ON_CLICK);\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:title\",\n                 Constants.ON_CLICK);\n@@ -286,166 +306,178 @@ public void editUserMembership() {\n                 + \"schemas:0:panel:spinner\", \"1\");\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.assertComponent(TAB_PANEL\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n                 + \"container:content:group:beans:0:fields:1:field\", Label.class);\n \n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n-        component = findComponentByProp(\"username\", CONTAINER\n+        component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n         // reset ....\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.setValue(\"view:groupsContainer:groups:paletteField:recorder\", \"root,otherchild\");\n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:buttons:finish\", Constants.ON_CLICK);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void editUserMemberships() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:btn\", Constants.ON_CLICK);\n-        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:2:button\",\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().\n+                executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:btn\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(\n+                \"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:2:button\",\n                 Constants.ON_CLICK);\n \n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n         // click on \"edit\"\n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         // add \"additional\" group in order to show membership attributes\n         formTester.setValue(\"view:groupsContainer:groups:paletteField:recorder\", \"additional,root,otherchild\");\n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:buttons:next\",\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form:buttons:next\",\n                 Constants.ON_CLICK);\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         // open membership attributes accordion\n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:title\",\n                 Constants.ON_CLICK);\n \n         // edit multivalue text field, set 2 elements in total\n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:\"\n                 + \"body:content:schemas:5:panel:multiValueContainer:innerForm:content:view:0:panel:field\",\n                 TextField.class);\n         formTester.setValue(\"view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:content:\"\n                 + \"schemas:5:panel:multiValueContainer:innerForm:content:view:0:panel:field\", \"2019-03-05\");\n \n-        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(TAB_PANEL\n+                + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:\"\n                 + \"body:content:schemas:5:panel:multiValueContainer:innerForm:content:view:0:panelPlus:add\"));\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:\"\n                 + \"body:content:schemas:5:panel:multiValueContainer:innerForm:content:view:1:panel:field\",\n                 TextField.class);\n         formTester.setValue(\"view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:content:\"\n                 + \"schemas:5:panel:multiValueContainer:innerForm:content:view:1:panel:field\", \"2019-03-06\");\n \n-        TESTER.clickLink(TESTER.getComponentFromLastRenderedPage(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        UTILITY_UI.getTester().clickLink(UTILITY_UI.getTester().getComponentFromLastRenderedPage(TAB_PANEL\n+                + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:\"\n                 + \"body:content:schemas:5:panel:multiValueContainer:innerForm:content:view:1:panelPlus:add\"));\n \n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.assertComponent(TAB_PANEL\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n                 + \"container:content:group:beans:0:fields:1:field\", Label.class);\n \n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n         // reopen form and go to Plain Attributes page...\n-        component = findComponentByProp(\"username\", CONTAINER\n+        component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         // add \"additional\" group in order to show membership attributes\n         formTester.setValue(\"view:groupsContainer:groups:paletteField:recorder\", \"additional,root,otherchild\");\n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:buttons:next\",\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form:buttons:next\",\n                 Constants.ON_CLICK);\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         // open membership attributes accordion\n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:title\",\n                 Constants.ON_CLICK);\n \n         // ... check multivalue field values has been saved\n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:\"\n                 + \"body:content:schemas:5:panel:multiValueContainer:innerForm:content:view:0:panel:field\",\n                 TextField.class);\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:\"\n                 + \"body:content:schemas:5:panel:multiValueContainer:innerForm:content:view:1:panel:field\",\n                 TextField.class);\n@@ -456,74 +488,77 @@ public void editUserMemberships() {\n         Calendar cal2 = Calendar.getInstance();\n         cal2.set(2019, Calendar.MARCH, 6, 0, 0, 0);\n         cal2.set(Calendar.MILLISECOND, 0);\n-        TESTER.assertModelValue(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        UTILITY_UI.getTester().assertModelValue(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:content:\"\n                 + \"schemas:5:panel:multiValueContainer:innerForm:content:view:0:panel:field\", cal.getTime());\n-        TESTER.assertModelValue(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        UTILITY_UI.getTester().assertModelValue(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:content:\"\n                 + \"schemas:5:panel:multiValueContainer:innerForm:content:view:1:panel:field\", cal2.getTime());\n \n         // ... remove all values from multivalue field\n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:\"\n                 + \"content:schemas:5:panel:multiValueContainer:innerForm:content:view:1:drop\",\n                 Constants.ON_CLICK);\n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:\"\n                 + \"content:schemas:5:panel:multiValueContainer:innerForm:content:view:0:drop\",\n                 Constants.ON_CLICK);\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.assertComponent(TAB_PANEL\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n                 + \"container:content:group:beans:0:fields:1:field\", Label.class);\n \n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n         // reopen form and go to Plain Attributes page...\n-        component = findComponentByProp(\"username\", CONTAINER\n+        component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         // add \"additional\" group in order to show membership attributes\n         formTester.setValue(\"view:groupsContainer:groups:paletteField:recorder\", \"additional,root,otherchild\");\n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:buttons:next\",\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form:buttons:next\",\n                 Constants.ON_CLICK);\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n         // open membership attributes accordion\n-        TESTER.executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:title\",\n                 Constants.ON_CLICK);\n \n         // ... check multivalue field is now empty\n-        TESTER.assertModelValue(TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        UTILITY_UI.getTester().assertModelValue(TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:content:\"\n                 + \"schemas:5:panel:multiValueContainer:innerForm:content:view:0:panel:field\", null);\n-        component = findComponentByProp(\"syncope-path\", TAB_PANEL + \"outerObjectsRepeater:0:\"\n+        component = UTILITY_UI.findComponentByProp(\"syncope-path\", TAB_PANEL + \"outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:body:\"\n                 + \"content:schemas:5:panel:multiValueContainer:innerForm\",\n                 TAB_PANEL + \"outerObjectsRepeater:0:\"\n@@ -537,48 +572,51 @@ public void editUserMemberships() {\n \n     @Test\n     public void checkDeleteUsrLink() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.assertComponent(TAB_PANEL\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:8:action:action\", IndicatingOnConfirmAjaxLink.class);\n     }\n \n     @Test\n     public void editDateTimeField() {\n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n                 TextField.class);\n \n-        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.setValue(\"view:plainSchemas:tabs:0:body:content:schemas:1:panel:field:datepicker\", \"1/19/17\");\n         formTester.setValue(\"view:plainSchemas:tabs:0:body:content:schemas:1:panel:field:timepicker\", \"12:00 AM\");\n@@ -588,110 +626,115 @@ public void editDateTimeField() {\n \n         formTester.submit(\"buttons:finish\");\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.assertComponent(TAB_PANEL\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n                 + \"outerObjectsRepeater:0:outer:form:content:customResultBody:resources:firstLevelContainer:first:\"\n                 + \"container:content:group:beans:0:fields:1:field\", Label.class);\n \n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:action:actionRepeater:0:action:action\");\n \n-        component = findComponentByProp(\"username\", CONTAINER\n+        component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:0:action:action\");\n \n-        TESTER.assertComponent(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n+        UTILITY_UI.getTester().assertComponent(TAB_PANEL\n+                + \"outerObjectsRepeater:0:outer:form:content:form:view:username:textField\",\n                 TextField.class);\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n         formTester.submit(\"buttons:next\");\n \n         Calendar cal = Calendar.getInstance();\n         cal.set(2017, Calendar.JANUARY, 19, 0, 0, 0);\n         cal.set(Calendar.MILLISECOND, 0);\n \n-        TESTER.assertModelValue(\"body:content:body:container:content:\"\n+        UTILITY_UI.getTester().assertModelValue(\"body:content:body:container:content:\"\n                 + \"tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n                 + \"0:outer:form:content:form:view:plainSchemas:tabs:0:\"\n                 + \"body:content:schemas:1:panel:field:datepicker\", cal.getTime());\n \n-        assertEquals(TESTER.getComponentFromLastRenderedPage(\"body:content:body:\"\n+        assertEquals(UTILITY_UI.getTester().getComponentFromLastRenderedPage(\"body:content:body:\"\n                 + \"container:content:tabbedPanel:panel:searchResult:\"\n                 + \"outerObjectsRepeater:0:outer:form:content:form:view:plainSchemas:\"\n                 + \"tabs:0:body:content:schemas:1:panel:field:timepicker\").getDefaultModelObjectAsString(), \"12:00 AM\");\n \n-        TESTER.assertModelValue(\"body:content:body:container:content:\"\n+        UTILITY_UI.getTester().assertModelValue(\"body:content:body:container:content:\"\n                 + \"tabbedPanel:panel:searchResult:outerObjectsRepeater:0:outer:form:content:\"\n                 + \"form:view:plainSchemas:tabs:0:body:content:schemas:8:panel:\"\n                 + \"multiValueContainer:innerForm:content:view:0:panel:field\", cal.getTime());\n     }\n \n     @Test\n     public void changePassword() {\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        Component component = findComponentByProp(\"username\", CONTAINER\n+        Component component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"vivaldi\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:3:action:action\");\n \n-        TESTER.assertLabel(TAB_PANEL + \"outerObjectsRepeater:3:outer:form:content:status:resources:\"\n+        UTILITY_UI.getTester().assertLabel(TAB_PANEL + \"outerObjectsRepeater:3:outer:form:content:status:resources:\"\n                 + \"firstLevelContainer:first:container:content:group:beans:0:fields:0:field\", \"syncope\");\n \n-        FormTester formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:3:outer:form\");\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:3:outer:form\");\n         formTester.setValue(\"content:passwordPanel:passwordInnerForm:password:passwordField\", \"Password345\");\n         formTester.setValue(\"content:passwordPanel:passwordInnerForm:confirmPassword:passwordField\", \"Password345\");\n         formTester.select(\"content:status:resources:firstLevelContainer:first:container:content:group\", 0);\n \n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 TAB_PANEL + \"outerObjectsRepeater:3:outer:dialog:footer:inputs:0:submit\", Constants.ON_CLICK);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n \n-        TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n+        UTILITY_UI.getTester().clickLink(\"body:realmsLI:realms\");\n+        UTILITY_UI.getTester().clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        component = findComponentByProp(\"username\", CONTAINER\n+        component = UTILITY_UI.findComponentByProp(\"username\", CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"vivaldi\");\n         assertNotNull(component);\n \n-        TESTER.executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n-        TESTER.clickLink(TAB_PANEL + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(component.getPageRelativePath(), Constants.ON_CLICK);\n+        UTILITY_UI.getTester().clickLink(TAB_PANEL\n+                + \"outerObjectsRepeater:1:outer:container:content:togglePanelContainer:container:\"\n                 + \"actions:actions:actionRepeater:3:action:action\");\n \n-        TESTER.assertLabel(TAB_PANEL + \"outerObjectsRepeater:3:outer:form:content:status:resources:\"\n+        UTILITY_UI.getTester().assertLabel(TAB_PANEL + \"outerObjectsRepeater:3:outer:form:content:status:resources:\"\n                 + \"firstLevelContainer:first:container:content:group:beans:0:fields:0:field\", \"syncope\");\n \n-        formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:3:outer:form\");\n+        formTester = UTILITY_UI.getTester().newFormTester(TAB_PANEL + \"outerObjectsRepeater:3:outer:form\");\n         formTester.setValue(\"content:passwordPanel:passwordInnerForm:password:passwordField\", \"Password123\");\n         formTester.setValue(\"content:passwordPanel:passwordInnerForm:confirmPassword:passwordField\", \"Password123\");\n         formTester.select(\"content:status:resources:firstLevelContainer:first:container:content:group\", 0);\n \n-        TESTER.executeAjaxEvent(\n+        UTILITY_UI.getTester().executeAjaxEvent(\n                 TAB_PANEL + \"outerObjectsRepeater:3:outer:dialog:footer:inputs:0:submit\", Constants.ON_CLICK);\n \n-        TESTER.assertInfoMessages(\"Operation successfully executed\");\n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().assertInfoMessages(\"Operation successfully executed\");\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n     }\n }"},{"sha":"cc0d2dde17e819a8a627f46302275a40646d3080","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/enduser/AbstractEnduserITCase.java","status":"modified","additions":12,"deletions":9,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAbstractEnduserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAbstractEnduserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAbstractEnduserITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -34,8 +34,6 @@\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n import org.apache.syncope.common.rest.api.service.SyncopeService;\n-import org.apache.syncope.fit.ui.AbstractUITCase;\n-import org.apache.wicket.util.tester.FormTester;\n import org.apache.wicket.util.tester.WicketTester;\n import org.junit.jupiter.api.BeforeAll;\n import org.springframework.boot.autoconfigure.ImportAutoConfiguration;\n@@ -44,6 +42,9 @@\n import org.springframework.context.annotation.Configuration;\n import org.apache.syncope.common.keymaster.client.self.SelfKeymasterClientContext;\n import org.apache.syncope.common.rest.api.service.UserService;\n+import org.apache.syncope.fit.ui.AbstractUITCase;\n+import org.apache.syncope.fit.ui.UtilityUIT;\n+import org.apache.wicket.util.tester.FormTester;\n \n public abstract class AbstractEnduserITCase extends AbstractUITCase {\n \n@@ -55,9 +56,11 @@ public abstract class AbstractEnduserITCase extends AbstractUITCase {\n \n     protected static UserService userService;\n \n+    protected static UtilityUIT UTILITY_UI;\n+\n     @ImportAutoConfiguration(classes = { SelfKeymasterClientContext.class })\n     @Configuration\n-    public static class SyncopeWebApplicationTestConfig {\n+    public static class SyncopeEnduserWebApplicationTestConfig {\n \n         @Bean\n         public GeneralSettingsProperties generalSettingsProperties() {\n@@ -102,13 +105,13 @@ public PreviewUtils previewUtils() {\n     @BeforeAll\n     public static void setUp() {\n         synchronized (LOG) {\n-            if (TESTER == null) {\n+            if (UTILITY_UI == null) {\n                 AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();\n-                ctx.register(SyncopeWebApplicationTestConfig.class);\n+                ctx.register(SyncopeEnduserWebApplicationTestConfig.class);\n                 ctx.register(SyncopeWebApplication.class);\n                 ctx.refresh();\n \n-                TESTER = new WicketTester(ctx.getBean(SyncopeWebApplication.class));\n+                UTILITY_UI = new UtilityUIT(new WicketTester(ctx.getBean(SyncopeWebApplication.class)));\n             }\n \n             if (SYNCOPE_SERVICE == null) {\n@@ -135,10 +138,10 @@ public static void restSetup() {\n     }\n \n     protected void doLogin(final String user, final String passwd) {\n-        TESTER.startPage(Login.class);\n-        TESTER.assertRenderedPage(Login.class);\n+        UTILITY_UI.getTester().startPage(Login.class);\n+        UTILITY_UI.getTester().assertRenderedPage(Login.class);\n \n-        FormTester formTester = TESTER.newFormTester(\"login\");\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(\"login\");\n         formTester.setValue(\"username\", user);\n         formTester.setValue(\"password\", passwd);\n         formTester.submit(\"submit\");"},{"sha":"7c8b0093304c3eee2b4978a895fbe129d4d142bc","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/enduser/SelfRegistrationITCase.java","status":"modified","additions":71,"deletions":60,"changes":131,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FSelfRegistrationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FSelfRegistrationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FSelfRegistrationITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -31,8 +31,10 @@\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.TextField;\n import org.apache.wicket.util.tester.FormTester;\n+import org.junit.jupiter.api.Disabled;\n import org.junit.jupiter.api.Test;\n \n+@Disabled(\"WIP\")\n public class SelfRegistrationITCase extends AbstractEnduserITCase {\n \n     private static final String WIZARD_FORM = \"body:wizard:form\";\n@@ -41,35 +43,39 @@ public class SelfRegistrationITCase extends AbstractEnduserITCase {\n     public void selfCreate() {\n         String username = \"testUser\";\n \n-        TESTER.startPage(Login.class);\n-        TESTER.assertRenderedPage(Login.class);\n+        UTILITY_UI.getTester().startPage(Login.class);\n+        UTILITY_UI.getTester().assertRenderedPage(Login.class);\n \n-        TESTER.clickLink(\"self-registration\");\n+        UTILITY_UI.getTester().clickLink(\"self-registration\");\n \n-        TESTER.assertComponent(WIZARD_FORM + \":view:username:textField\", TextField.class);\n-        FormTester formTester = TESTER.newFormTester(WIZARD_FORM);\n+        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:username:textField\", TextField.class);\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(WIZARD_FORM);\n         assertNotNull(formTester);\n         formTester.setValue(\"view:username:textField\", username);\n-        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n \n         // check required field is correctly set\n-        TESTER.assertNoInfoMessage();\n-        TESTER.assertNoErrorMessage();\n+        UTILITY_UI.getTester().assertNoInfoMessage();\n+        UTILITY_UI.getTester().assertNoErrorMessage();\n \n-        TESTER.assertComponent(WIZARD_FORM + \":view:auxClasses:paletteField:choices\", Choices.class);\n-        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:auxClasses:paletteField:choices\", Choices.class);\n+        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n \n-        TESTER.assertComponent(WIZARD_FORM + \":view:groupsContainer:groups:form:filter:textField\", TextField.class);\n-        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:groupsContainer:groups:form:filter:textField\",\n+                TextField.class);\n+        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n \n-        TESTER.assertComponent(WIZARD_FORM + \":view:plainSchemas:tabs:0:body:content:schemas:6:panel:textField\",\n+        UTILITY_UI.getTester().assertComponent(WIZARD_FORM\n+                + \":view:plainSchemas:tabs:0:body:content:schemas:6:panel:textField\",\n                 TextField.class);\n-        TESTER.assertComponent(WIZARD_FORM + \":view:plainSchemas:tabs:0:body:content:schemas:12:panel:textField\",\n+        UTILITY_UI.getTester().assertComponent(WIZARD_FORM\n+                + \":view:plainSchemas:tabs:0:body:content:schemas:12:panel:textField\",\n                 TextField.class);\n-        TESTER.assertComponent(WIZARD_FORM + \":view:plainSchemas:tabs:0:body:content:schemas:14:panel:textField\",\n+        UTILITY_UI.getTester().assertComponent(WIZARD_FORM\n+                + \":view:plainSchemas:tabs:0:body:content:schemas:14:panel:textField\",\n                 TextField.class);\n \n-        formTester = TESTER.newFormTester(WIZARD_FORM);\n+        formTester = UTILITY_UI.getTester().newFormTester(WIZARD_FORM);\n         assertNotNull(formTester);\n         formTester.setValue(\"view:plainSchemas:tabs:0:body:content:schemas:6:panel:textField\",\n                 \"User fullname\");\n@@ -78,101 +84,106 @@ public void selfCreate() {\n         formTester.setValue(\"view:plainSchemas:tabs:0:body:content:schemas:14:panel:textField\",\n                 \"test@email.com\");\n \n-        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n \n         // check required fields were correctly set\n-        TESTER.assertNoInfoMessage();\n-        TESTER.assertNoErrorMessage();\n+        UTILITY_UI.getTester().assertNoInfoMessage();\n+        UTILITY_UI.getTester().assertNoErrorMessage();\n \n-        TESTER.assertComponent(WIZARD_FORM + \":view:derSchemas:tabs:0:body:content:schemas:0:panel:textField\",\n+        UTILITY_UI.getTester().assertComponent(WIZARD_FORM\n+                + \":view:derSchemas:tabs:0:body:content:schemas:0:panel:textField\",\n                 TextField.class);\n \n-        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n-        TESTER.assertComponent(WIZARD_FORM + \":view:virSchemas:tabs:0:body:content:schemas:0:panel:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:virSchemas:tabs:0:body:content:schemas:0:panel:\"\n                 + \"multiValueContainer:innerForm:content:field-label\",\n                 Label.class);\n \n-        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n-        TESTER.assertComponent(WIZARD_FORM + \":view:resources:paletteField:choices\", Choices.class);\n+        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:resources:paletteField:choices\", Choices.class);\n \n-        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:finish\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:finish\", Constants.ON_CLICK);\n \n-        TESTER.assertRenderedPage(Login.class);\n-        TESTER.assertComponent(\"login:username\", TextField.class);\n+        UTILITY_UI.getTester().assertRenderedPage(Login.class);\n+        UTILITY_UI.getTester().assertComponent(\"login:username\", TextField.class);\n \n         assertFalse(userService.search(new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n                 fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(username).query()).\n                 build()).getResult().isEmpty());\n+        \n+        assertNotNull(userService.read(username));\n \n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n     }\n \n     @Test\n     public void selfPasswordReset() {\n-        TESTER.startPage(Login.class);\n-        TESTER.assertRenderedPage(Login.class);\n+        UTILITY_UI.getTester().startPage(Login.class);\n+        UTILITY_UI.getTester().assertRenderedPage(Login.class);\n \n-        TESTER.clickLink(\"self-pwd-reset\");\n+        UTILITY_UI.getTester().clickLink(\"self-pwd-reset\");\n     }\n \n     @Test\n     public void selfUpdate() {\n         String username = \"puccini\";\n         String newEmail = \"giacomo.puccini@email.com\";\n \n-        TESTER.startPage(Login.class);\n+        UTILITY_UI.getTester().startPage(Login.class);\n         doLogin(username, \"password\");\n \n-        TESTER.assertComponent(WIZARD_FORM + \":view:username:textField\", TextField.class);\n-        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:username:textField\", TextField.class);\n+        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n \n-        TESTER.assertComponent(WIZARD_FORM + \":view:auxClasses:paletteField:choices\", Choices.class);\n-        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:auxClasses:paletteField:choices\", Choices.class);\n+        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n \n-        TESTER.assertComponent(WIZARD_FORM + \":view:groupsContainer:groups:form:filter:textField\", TextField.class);\n-        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:groupsContainer:groups:form:filter:textField\",\n+                TextField.class);\n+        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n \n-        TESTER.assertComponent(WIZARD_FORM + \":view:plainSchemas:tabs:0:body:content:schemas:6:panel:textField\",\n+        UTILITY_UI.getTester().assertComponent(WIZARD_FORM\n+                + \":view:plainSchemas:tabs:0:body:content:schemas:6:panel:textField\",\n                 TextField.class);\n-        TESTER.assertComponent(WIZARD_FORM + \":view:plainSchemas:tabs:0:body:content:schemas:12:panel:textField\",\n+        UTILITY_UI.getTester().assertComponent(WIZARD_FORM\n+                + \":view:plainSchemas:tabs:0:body:content:schemas:12:panel:textField\",\n                 TextField.class);\n-        TESTER.assertComponent(WIZARD_FORM + \":view:plainSchemas:tabs:0:body:content:schemas:14:panel:textField\",\n+        UTILITY_UI.getTester().assertComponent(WIZARD_FORM\n+                + \":view:plainSchemas:tabs:0:body:content:schemas:14:panel:textField\",\n                 TextField.class);\n \n-        FormTester formTester = TESTER.newFormTester(WIZARD_FORM);\n+        FormTester formTester = UTILITY_UI.getTester().newFormTester(WIZARD_FORM);\n         assertNotNull(formTester);\n-        TESTER.assertComponent(WIZARD_FORM + \":view:plainSchemas:tabs:0:body:content:schemas:4:panel:textField\",\n+        UTILITY_UI.getTester().assertComponent(WIZARD_FORM\n+                + \":view:plainSchemas:tabs:0:body:content:schemas:4:panel:textField\",\n                 TextField.class);\n         formTester.setValue(\"view:plainSchemas:tabs:0:body:content:schemas:4:panel:textField\", newEmail);\n \n-        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n \n         // check required fields were correctly set\n-        TESTER.assertNoInfoMessage();\n-        TESTER.assertNoErrorMessage();\n+        UTILITY_UI.getTester().assertNoInfoMessage();\n+        UTILITY_UI.getTester().assertNoErrorMessage();\n \n-        TESTER.assertComponent(WIZARD_FORM + \":view:derSchemas:tabs:0:body:content:schemas:0:panel:textField\",\n+        UTILITY_UI.getTester().assertComponent(WIZARD_FORM\n+                + \":view:derSchemas:tabs:0:body:content:schemas:0:panel:textField\",\n                 TextField.class);\n \n-        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n-        TESTER.assertComponent(WIZARD_FORM + \":view:virSchemas:tabs:0:body:content:schemas:0:panel:\"\n+        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:virSchemas:tabs:0:body:content:schemas:0:panel:\"\n                 + \"multiValueContainer:innerForm:content:field-label\",\n                 Label.class);\n-        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n-        TESTER.assertComponent(WIZARD_FORM + \":view:resources:paletteField:choices\", Choices.class);\n+        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:next\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().assertComponent(WIZARD_FORM + \":view:resources:paletteField:choices\", Choices.class);\n \n-        TESTER.executeAjaxEvent(WIZARD_FORM + \":buttons:finish\", Constants.ON_CLICK);\n+        UTILITY_UI.getTester().executeAjaxEvent(WIZARD_FORM + \":buttons:finish\", Constants.ON_CLICK);\n \n-        TESTER.assertRenderedPage(Login.class);\n-        TESTER.assertComponent(\"login:username\", TextField.class);\n+        UTILITY_UI.getTester().assertRenderedPage(Login.class);\n+        UTILITY_UI.getTester().assertComponent(\"login:username\", TextField.class);\n \n-        assertTrue(userService.search(new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n-                fiql(SyncopeClient.getUserSearchConditionBuilder().is(\"username\").equalTo(username).query()).\n-                build()).getResult().stream().anyMatch(userTO -> {\n-                    return userTO.getPlainAttr(\"email\").get().getValues().get(0).equals(newEmail);\n-                }));\n+        assertTrue(userService.read(username).getPlainAttr(\"email\").get().getValues().get(0).equals(newEmail));\n \n-        TESTER.cleanupFeedbackMessages();\n+        UTILITY_UI.getTester().cleanupFeedbackMessages();\n     }\n \n     @Test"},{"sha":"4da9dbcc24b5a66391ae7db8607a708c54958125","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/ui/AbstractUITCase.java","status":"modified","additions":0,"deletions":62,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FAbstractUITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FAbstractUITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FAbstractUITCase.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -18,16 +18,7 @@\n  */\n package org.apache.syncope.fit.ui;\n \n-import java.io.Serializable;\n-import java.lang.reflect.Method;\n import org.apache.syncope.common.rest.api.service.SyncopeService;\n-import org.apache.wicket.Component;\n-import org.apache.wicket.MarkupContainer;\n-import org.apache.wicket.behavior.AbstractAjaxBehavior;\n-import org.apache.wicket.core.util.lang.PropertyResolver;\n-import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.util.tester.WicketTester;\n-import org.apache.wicket.util.visit.IVisit;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -45,59 +36,6 @@ public abstract class AbstractUITCase {\n \n     protected static final String SCHEMA = \"schema\";\n \n-    protected static WicketTester TESTER;\n-\n     protected static SyncopeService SYNCOPE_SERVICE;\n \n-    protected <V extends Serializable> Component findComponentByProp(\n-            final String property, final String searchPath, final V key) {\n-\n-        Component component = TESTER.getComponentFromLastRenderedPage(searchPath);\n-        return (component instanceof MarkupContainer ? MarkupContainer.class.cast(component) : component.getPage()).\n-                visitChildren(ListItem.class, (ListItem<?> object, IVisit<Component> visit) -> {\n-                    try {\n-                        Method getter = PropertyResolver.getPropertyGetter(property, object.getModelObject());\n-                        if (getter != null && getter.invoke(object.getModelObject()).equals(key)) {\n-                            visit.stop(object);\n-                        }\n-                    } catch (Exception e) {\n-                        LOG.error(\"Error invoke method\", e);\n-                    }\n-                });\n-    }\n-\n-    protected <V extends Serializable> Component findComponentByPropNotNull(\n-            final String property, final String searchPath) {\n-\n-        Component component = TESTER.getComponentFromLastRenderedPage(searchPath);\n-        return (component instanceof MarkupContainer ? MarkupContainer.class.cast(component) : component.getPage()).\n-                visitChildren(ListItem.class, (ListItem<?> object, IVisit<Component> visit) -> {\n-                    try {\n-                        Method getter = PropertyResolver.getPropertyGetter(property, object.getModelObject());\n-                        if (getter != null && getter.invoke(object.getModelObject()) != null) {\n-                            visit.stop(object);\n-                        }\n-                    } catch (Exception e) {\n-                        LOG.error(\"Error invoke method\", e);\n-                    }\n-                });\n-    }\n-\n-    protected Component findComponentById(final String searchPath, final String id) {\n-        Component component = TESTER.getComponentFromLastRenderedPage(searchPath);\n-        return (component instanceof MarkupContainer ? MarkupContainer.class.cast(component) : component.getPage()).\n-                visitChildren(Component.class, (final Component object, final IVisit<Component> visit) -> {\n-                    if (object.getId().equals(id)) {\n-                        visit.stop(object);\n-                    }\n-                });\n-    }\n-\n-    protected void closeCallBack(final Component modal) {\n-        modal.getBehaviors().stream().\n-                filter(behavior -> (behavior instanceof AbstractAjaxBehavior)).\n-                forEachOrdered(behavior -> {\n-                    TESTER.executeBehavior((AbstractAjaxBehavior) behavior);\n-                });\n-    }\n }"},{"sha":"93dea13ed2ff4ac15b66160219dd5c9df75affbe","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/ui/UtilityUIT.java","status":"added","additions":99,"deletions":0,"changes":99,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FUtilityUIT.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/88b07a2280876a8b94c922f313f34ab652555416/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FUtilityUIT.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fui%2FUtilityUIT.java?ref=88b07a2280876a8b94c922f313f34ab652555416","patch":"@@ -0,0 +1,99 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.ui;\n+\n+import java.io.Serializable;\n+import java.lang.reflect.Method;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.MarkupContainer;\n+import org.apache.wicket.behavior.AbstractAjaxBehavior;\n+import org.apache.wicket.core.util.lang.PropertyResolver;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.util.tester.WicketTester;\n+import org.apache.wicket.util.visit.IVisit;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class UtilityUIT {\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(UtilityUIT.class);\n+\n+    private final WicketTester tester;\n+\n+    public UtilityUIT(final WicketTester tester) {\n+        this.tester = tester;\n+    }\n+\n+    public <V extends Serializable> Component findComponentByProp(\n+            final String property, final String searchPath, final V key) {\n+\n+        Component component = tester.getComponentFromLastRenderedPage(searchPath);\n+        return (component instanceof MarkupContainer ? MarkupContainer.class.cast(component) : component.getPage()).\n+                visitChildren(ListItem.class, (ListItem<?> object, IVisit<Component> visit) -> {\n+                    try {\n+                        Method getter = PropertyResolver.getPropertyGetter(property, object.getModelObject());\n+                        if (getter != null && getter.invoke(object.getModelObject()).equals(key)) {\n+                            visit.stop(object);\n+                        }\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error invoke method\", e);\n+                    }\n+                });\n+    }\n+\n+    public <V extends Serializable> Component findComponentByPropNotNull(\n+            final String property, final String searchPath) {\n+\n+        Component component = tester.getComponentFromLastRenderedPage(searchPath);\n+        return (component instanceof MarkupContainer ? MarkupContainer.class.cast(component) : component.getPage()).\n+                visitChildren(ListItem.class, (ListItem<?> object, IVisit<Component> visit) -> {\n+                    try {\n+                        Method getter = PropertyResolver.getPropertyGetter(property, object.getModelObject());\n+                        if (getter != null && getter.invoke(object.getModelObject()) != null) {\n+                            visit.stop(object);\n+                        }\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error invoke method\", e);\n+                    }\n+                });\n+    }\n+\n+    public Component findComponentById(final String searchPath, final String id) {\n+        Component component = tester.getComponentFromLastRenderedPage(searchPath);\n+        return (component instanceof MarkupContainer ? MarkupContainer.class.cast(component) : component.getPage()).\n+                visitChildren(Component.class, (final Component object, final IVisit<Component> visit) -> {\n+                    if (object.getId().equals(id)) {\n+                        visit.stop(object);\n+                    }\n+                });\n+    }\n+\n+    public void closeCallBack(final Component modal) {\n+        modal.getBehaviors().stream().\n+                filter(behavior -> (behavior instanceof AbstractAjaxBehavior)).\n+                forEachOrdered(behavior -> {\n+                    tester.executeBehavior((AbstractAjaxBehavior) behavior);\n+                });\n+    }\n+\n+    public WicketTester getTester() {\n+        return tester;\n+    }\n+\n+}"}]}