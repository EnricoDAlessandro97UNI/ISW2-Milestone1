{"sha":"14246792934da9a365a82643c46c359cc805c0bb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE0MjQ2NzkyOTM0ZGE5YTM2NWE4MjY0M2M0NmMzNTljYzgwNWMwYmI=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-09-08T13:05:20Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-09-08T13:05:48Z"},"message":"[SYNCOPE-932] fixes","tree":{"sha":"69811153ea6688ce4cbcc570d46e47566cc28314","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/69811153ea6688ce4cbcc570d46e47566cc28314"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/14246792934da9a365a82643c46c359cc805c0bb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/14246792934da9a365a82643c46c359cc805c0bb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/14246792934da9a365a82643c46c359cc805c0bb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/14246792934da9a365a82643c46c359cc805c0bb/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"e4f1f02375e55c48d48aec2e66689885a1c482ef","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e4f1f02375e55c48d48aec2e66689885a1c482ef","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e4f1f02375e55c48d48aec2e66689885a1c482ef"}],"stats":{"total":186,"additions":172,"deletions":14},"files":[{"sha":"950e54667afa26d2bf85bd7b52a8c017d7d9054e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyPanel.java","status":"modified","additions":21,"deletions":3,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14246792934da9a365a82643c46c359cc805c0bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14246792934da9a365a82643c46c359cc805c0bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java?ref=14246792934da9a365a82643c46c359cc805c0bb","patch":"@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.Collections;\n+import java.util.List;\n import java.util.Map;\n import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.client.console.layout.AnyObjectFormLayoutInfo;\n@@ -173,18 +174,35 @@ public void onEvent(final IEvent<?> event) {\n \n     private AbstractSearchPanel getSearchPanel(final String id) {\n         final AbstractSearchPanel panel;\n+\n+        final List<SearchClause> clauses = new ArrayList<>();\n+        final SearchClause clause = new SearchClause();\n+        clauses.add(clause);\n+\n         switch (anyTypeTO.getKind()) {\n             case USER:\n+                clause.setComparator(SearchClause.Comparator.EQUALS);\n+                clause.setType(SearchClause.Type.ATTRIBUTE);\n+                clause.setProperty(\"username\");\n+\n                 panel = new UserSearchPanel.Builder(\n-                        new ListModel<>(new ArrayList<SearchClause>())).required(false).enableSearch().build(id);\n+                        new ListModel<>(clauses)).required(false).enableSearch().build(id);\n                 break;\n             case GROUP:\n+                clause.setComparator(SearchClause.Comparator.EQUALS);\n+                clause.setType(SearchClause.Type.ATTRIBUTE);\n+                clause.setProperty(\"name\");\n+\n                 panel = new GroupSearchPanel.Builder(\n-                        new ListModel<>(new ArrayList<SearchClause>())).required(false).enableSearch().build(id);\n+                        new ListModel<>(clauses)).required(false).enableSearch().build(id);\n                 break;\n             case ANY_OBJECT:\n+                clause.setComparator(SearchClause.Comparator.EQUALS);\n+                clause.setType(SearchClause.Type.ATTRIBUTE);\n+                clause.setProperty(\"name\");\n+\n                 panel = new AnyObjectSearchPanel.Builder(anyTypeTO.getKey(),\n-                        new ListModel<>(new ArrayList<SearchClause>())).required(false).enableSearch().build(id);\n+                        new ListModel<>(clauses)).required(false).enableSearch().build(id);\n                 break;\n             default:\n                 panel = null;"},{"sha":"93ed5525648124fb8362bdbceb1ece40d1c27b67","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AbstractSearchPanel.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14246792934da9a365a82643c46c359cc805c0bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14246792934da9a365a82643c46c359cc805c0bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java?ref=14246792934da9a365a82643c46c359cc805c0bb","patch":"@@ -33,6 +33,7 @@\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.wicket.event.IEventSink;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n@@ -87,10 +88,17 @@ public abstract class AbstractSearchPanel extends Panel {\n \n         protected boolean enableSearch = false;\n \n+        protected IEventSink resultContainer;\n+\n         public Builder(final IModel<List<SearchClause>> model) {\n             this.model = model;\n         }\n \n+        public Builder<T> enableSearch(final IEventSink resultContainer) {\n+            this.resultContainer = resultContainer;\n+            return enableSearch();\n+        }\n+\n         public Builder<T> enableSearch() {\n             this.enableSearch = true;\n             return this;\n@@ -132,7 +140,7 @@ protected AbstractSearchPanel(\n                 types, anames, dnames, groupNames, roleNames, resourceNames);\n \n         if (enableSearch) {\n-            searchClausePanel.enableSearch();\n+            searchClausePanel.enableSearch(builder.resultContainer);\n         }\n \n         final MultiFieldPanel.Builder<SearchClause> searchView = new MultiFieldPanel.Builder<SearchClause>(model) {"},{"sha":"e4327cbe155a2ef0244158a44c38f7bc1431e004","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchClausePanel.java","status":"modified","additions":84,"deletions":3,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14246792934da9a365a82643c46c359cc805c0bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14246792934da9a365a82643c46c359cc805c0bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java?ref=14246792934da9a365a82643c46c359cc805c0bb","patch":"@@ -35,17 +35,23 @@\n import org.apache.syncope.client.console.panels.search.SearchClause.Comparator;\n import org.apache.syncope.client.console.panels.search.SearchClause.Operator;\n import org.apache.syncope.client.console.panels.search.SearchClause.Type;\n+import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxEventBehavior;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.common.lib.to.RelationshipTypeTO;\n import org.apache.syncope.common.rest.api.service.RelationshipTypeService;\n+import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.Component;\n import org.apache.wicket.MarkupContainer;\n+import org.apache.wicket.ajax.AjaxEventBehavior;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.attributes.AjaxCallListener;\n+import org.apache.wicket.ajax.attributes.AjaxRequestAttributes;\n import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.event.IEventSink;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.CheckBox;\n import org.apache.wicket.markup.html.form.Form;\n@@ -88,6 +94,8 @@ public class SearchClausePanel extends FieldPanel<SearchClause> {\n \n     private final AjaxSubmitLink searchButton;\n \n+    private IEventSink resultContainer;\n+\n     public SearchClausePanel(\n             final String id,\n             final String name,\n@@ -118,7 +126,11 @@ public SearchClausePanel(\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                send(this, Broadcast.BUBBLE, new SearchEvent(target));\n+                if (resultContainer == null) {\n+                    send(this, Broadcast.BUBBLE, new SearchEvent(target));\n+                } else {\n+                    send(resultContainer, Broadcast.EXACT, new SearchEvent(target));\n+                }\n             }\n         };\n \n@@ -224,8 +236,42 @@ public String transform(final RelationshipTypeTO input) {\n         };\n     }\n \n-    public void enableSearch() {\n+    public void enableSearch(final IEventSink resultContainer) {\n+        this.resultContainer = resultContainer;\n         this.searchButton.setEnabled(true);\n+\n+        field.add(AttributeModifier.replace(\n+                \"onkeydown\",\n+                Model.of(\"if(event.keyCode == 13) {event.preventDefault();}\")));\n+\n+        field.add(new AjaxEventBehavior(\"onkeydown\") {\n+\n+            private static final long serialVersionUID = -7133385027739964990L;\n+\n+            @Override\n+            protected void onEvent(final AjaxRequestTarget target) {\n+                if (resultContainer == null) {\n+                    send(SearchClausePanel.this, Broadcast.BUBBLE, new SearchEvent(target));\n+                } else {\n+                    send(resultContainer, Broadcast.EXACT, new SearchEvent(target));\n+                }\n+            }\n+\n+            @Override\n+            protected void updateAjaxAttributes(final AjaxRequestAttributes attributes) {\n+                super.updateAjaxAttributes(attributes);\n+\n+                attributes.getAjaxCallListeners().add(new AjaxCallListener() {\n+\n+                    private static final long serialVersionUID = 7160235486520935153L;\n+\n+                    @Override\n+                    public CharSequence getPrecondition(final Component component) {\n+                        return \"if (Wicket.Event.keyCode(attrs.event)  == 13) { return true; } else { return false; }\";\n+                    }\n+                });\n+            }\n+        });\n     }\n \n     @Override\n@@ -345,6 +391,41 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         value.hideLabel().setOutputMarkupId(true);\n         field.add(value);\n \n+        value.getField().add(AttributeModifier.replace(\n+                \"onkeydown\",\n+                Model.of(\"if(event.keyCode == 13) {event.preventDefault();}\")));\n+\n+        value.getField().add(new IndicatorAjaxEventBehavior(\"onkeydown\") {\n+\n+            private static final long serialVersionUID = -7133385027739964990L;\n+\n+            @Override\n+            protected void onEvent(final AjaxRequestTarget target) {\n+                target.focusComponent(null);\n+                value.getField().inputChanged();\n+                value.getField().validate();\n+                if (value.getField().isValid()) {\n+                    value.getField().valid();\n+                    value.getField().updateModel();\n+                }\n+            }\n+\n+            @Override\n+            protected void updateAjaxAttributes(final AjaxRequestAttributes attributes) {\n+                super.updateAjaxAttributes(attributes);\n+\n+                attributes.getAjaxCallListeners().add(new AjaxCallListener() {\n+\n+                    private static final long serialVersionUID = 7160235486520935153L;\n+\n+                    @Override\n+                    public CharSequence getPrecondition(final Component component) {\n+                        return \"if (Wicket.Event.keyCode(attrs.event)  == 13) { return true; } else { return false; }\";\n+                    }\n+                });\n+            }\n+        });\n+\n         final AjaxDropDownChoicePanel<SearchClause.Type> type = new AjaxDropDownChoicePanel<>(\n                 \"type\", \"type\", new PropertyModel<SearchClause.Type>(searchClause, \"type\"));\n         type.setChoices(types).hideLabel().setRequired(required).setOutputMarkupId(true);\n@@ -669,7 +750,7 @@ public FieldPanel<SearchClause> clone() {\n         panel.setReadOnly(this.isReadOnly());\n         panel.setRequired(this.isRequired());\n         if (searchButton.isEnabled()) {\n-            panel.enableSearch();\n+            panel.enableSearch(resultContainer);\n         }\n         return panel;\n     }"},{"sha":"a62e6ae610cea8bffe4469e22209003b03ea0d97","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/ajax/form/IndicatorAjaxEventBehavior.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14246792934da9a365a82643c46c359cc805c0bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FIndicatorAjaxEventBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14246792934da9a365a82643c46c359cc805c0bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FIndicatorAjaxEventBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fajax%2Fform%2FIndicatorAjaxEventBehavior.java?ref=14246792934da9a365a82643c46c359cc805c0bb","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.ajax.form;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.wicket.ajax.AjaxEventBehavior;\n+import org.apache.wicket.ajax.IAjaxIndicatorAware;\n+\n+/**\n+ * An {@link AjaxEventBehavior} not showin veil.\n+ */\n+public abstract class IndicatorAjaxEventBehavior\n+        extends AjaxEventBehavior implements IAjaxIndicatorAware {\n+\n+    private static final long serialVersionUID = -5144403874783384604L;\n+\n+    private final String indicator;\n+\n+    public IndicatorAjaxEventBehavior(final String event) {\n+        this(event, StringUtils.EMPTY);\n+    }\n+\n+    public IndicatorAjaxEventBehavior(final String event, final String indicator) {\n+        super(event);\n+        this.indicator = indicator;\n+    }\n+\n+    @Override\n+    public String getAjaxIndicatorMarkupId() {\n+        return indicator;\n+    }\n+}"},{"sha":"19c7cdf2043ccaeec8618981d8279d143987bf25","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AbstractMultiPanel.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14246792934da9a365a82643c46c359cc805c0bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractMultiPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14246792934da9a365a82643c46c359cc805c0bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractMultiPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractMultiPanel.java?ref=14246792934da9a365a82643c46c359cc805c0bb","patch":"@@ -59,6 +59,7 @@ public AbstractMultiPanel(\n         add(container);\n \n         form = new Form<>(\"innerForm\");\n+        form.setDefaultButton(null);\n         container.add(form);\n         // -----------------------\n "},{"sha":"6b9696fe50eb42425a93380ad76fce6a55d62114","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDropDownChoicePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14246792934da9a365a82643c46c359cc805c0bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14246792934da9a365a82643c46c359cc805c0bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java?ref=14246792934da9a365a82643c46c359cc805c0bb","patch":"@@ -59,7 +59,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 }\n             });\n         }\n-        \n+\n         setNullValid(true);\n     }\n "},{"sha":"eb5b3188c5f7a83226ce5340db14bcddd7acc75d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Ownership.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14246792934da9a365a82643c46c359cc805c0bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14246792934da9a365a82643c46c359cc805c0bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java?ref=14246792934da9a365a82643c46c359cc805c0bb","patch":"@@ -173,7 +173,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n         groupSearchFragment = new Fragment(\"search\", \"groupSearchFragment\", this);\n         groupSearchPanel = new GroupSearchPanel.Builder(\n-                new ListModel<>(new ArrayList<SearchClause>())).required(false).enableSearch().build(\"groupsearch\");\n+                new ListModel<>(new ArrayList<SearchClause>())).required(false).enableSearch(Ownership.this).\n+                build(\"groupsearch\");\n         groupSearchFragment.add(groupSearchPanel.setRenderBodyOnly(true));\n \n         AnyTypeTO anyTypeTO = anyTypeRestClient.read(AnyTypeKind.GROUP.name());\n@@ -187,7 +188,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n         userSearchFragment = new Fragment(\"search\", \"userSearchFragment\", this);\n         userSearchPanel = UserSearchPanel.class.cast(new UserSearchPanel.Builder(\n-                new ListModel<>(new ArrayList<SearchClause>())).required(false).enableSearch().build(\"usersearch\"));\n+                new ListModel<>(new ArrayList<SearchClause>())).required(false).enableSearch(Ownership.this).\n+                build(\"usersearch\"));\n         userSearchFragment.add(userSearchPanel.setRenderBodyOnly(true));\n \n         anyTypeTO = anyTypeRestClient.read(AnyTypeKind.USER.name());"},{"sha":"b73f73fc5e01e850346007b2c4bde567d4c18830","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Relationships.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14246792934da9a365a82643c46c359cc805c0bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14246792934da9a365a82643c46c359cc805c0bb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java?ref=14246792934da9a365a82643c46c359cc805c0bb","patch":"@@ -328,7 +328,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         anyObjectSearchPanel = new AnyObjectSearchPanel.Builder(\n                                 anyType.getKey(),\n                                 new ListModel<>(new ArrayList<SearchClause>())).\n-                                enableSearch().\n+                                enableSearch(Specification.this).\n                                 build(\"searchPanel\");\n                         fragment.add(anyObjectSearchPanel.setRenderBodyOnly(true));\n "},{"sha":"e7f7d89188661b3011118c1ec8155aa2808c9e45","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyObjectsITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14246792934da9a365a82643c46c359cc805c0bb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14246792934da9a365a82643c46c359cc805c0bb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java?ref=14246792934da9a365a82643c46c359cc805c0bb","patch":"@@ -50,7 +50,7 @@ public void filteredSearch() {\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n \n         TESTER.executeAjaxEvent(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:\"\n-                + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:panelPlus:add\",\n+                + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panelPlus:add\",\n                 Constants.ON_CLICK);\n \n         TESTER.assertComponent("},{"sha":"9b0ff4f614f2e9979686c005c8be92d30bb2729e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/GroupsITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14246792934da9a365a82643c46c359cc805c0bb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14246792934da9a365a82643c46c359cc805c0bb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java?ref=14246792934da9a365a82643c46c359cc805c0bb","patch":"@@ -76,7 +76,7 @@ public void filteredSearch() {\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n \n         TESTER.executeAjaxEvent(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:\"\n-                + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:panelPlus:add\",\n+                + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panelPlus:add\",\n                 Constants.ON_CLICK);\n \n         TESTER.assertComponent(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:\""},{"sha":"f44121f6170217d123ace6ad734e4a3af3db2826","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/UsersITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/14246792934da9a365a82643c46c359cc805c0bb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/14246792934da9a365a82643c46c359cc805c0bb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java?ref=14246792934da9a365a82643c46c359cc805c0bb","patch":"@@ -49,7 +49,7 @@ public void filteredSearch() {\n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n \n         TESTER.executeAjaxEvent(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:\"\n-                + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:panelPlus:add\",\n+                + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panelPlus:add\",\n                 Constants.ON_CLICK);\n \n         TESTER.assertComponent("}]}