{"sha":"a427cd05c7936d2a9a85ff27361a62c2515905b4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmE0MjdjZDA1Yzc5MzZkMmE5YTg1ZmYyNzM2MWE2MmMyNTE1OTA1YjQ=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2014-07-02T08:46:38Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2014-07-02T08:46:38Z"},"message":"[SYNCOPE-392, SYNCOPE-471] integration test improvement + some fixes around sync matching/unmatching rules\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1607297 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e4c987a4cc87b19bf35fdbc1ea0b9c8e285b360e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e4c987a4cc87b19bf35fdbc1ea0b9c8e285b360e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a427cd05c7936d2a9a85ff27361a62c2515905b4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a427cd05c7936d2a9a85ff27361a62c2515905b4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a427cd05c7936d2a9a85ff27361a62c2515905b4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a427cd05c7936d2a9a85ff27361a62c2515905b4/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"ca7d49d1aab9456bf8e9ab8ef84c7eb701dc05d6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ca7d49d1aab9456bf8e9ab8ef84c7eb701dc05d6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ca7d49d1aab9456bf8e9ab8ef84c7eb701dc05d6"}],"stats":{"total":244,"additions":106,"deletions":138},"files":[{"sha":"12dfc90b34d6578f1f28cf34e9e15a58e11f4c3c","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/PushPolicy.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPushPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPushPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FPushPolicy.java?ref=a427cd05c7936d2a9a85ff27361a62c2515905b4","patch":"@@ -34,7 +34,7 @@ public PushPolicy(boolean global) {\n         super();\n \n         this.type = global\n-                ? PolicyType.GLOBAL_SYNC\n-                : PolicyType.SYNC;\n+                ? PolicyType.GLOBAL_PUSH\n+                : PolicyType.PUSH;\n     }\n }"},{"sha":"5151ec6526da6cd0640be111b6b02affa561e65c","filename":"core/src/main/java/org/apache/syncope/core/sync/DefaultSyncActions.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FDefaultSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FDefaultSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FDefaultSyncActions.java?ref=a427cd05c7936d2a9a85ff27361a62c2515905b4","patch":"@@ -35,7 +35,7 @@ public void beforeAll(final SyncProfile<?, ?> profile) throws JobExecutionExcept\n     }\n \n     @Override\n-    public <T extends AbstractAttributableTO> SyncDelta beforeCreate(\n+    public <T extends AbstractAttributableTO> SyncDelta beforeProvision(\n             final SyncProfile<?, ?> profile,\n             final SyncDelta delta,\n             final T subject) throws JobExecutionException {"},{"sha":"42548d167a8db32154e5da2be1aef05809b2f4b0","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncActions.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncActions.java?ref=a427cd05c7936d2a9a85ff27361a62c2515905b4","patch":"@@ -40,7 +40,7 @@ public interface SyncActions extends AbstractSyncActions<AbstractSyncopeResultHa\n      * @return synchronization information used for user status evaluation and to be passed to the 'after' method.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    <T extends AbstractAttributableTO> SyncDelta beforeCreate(\n+    <T extends AbstractAttributableTO> SyncDelta beforeProvision(\n             final SyncProfile<?, ?> profile,\n             final SyncDelta delta,\n             final T subject) throws JobExecutionException;\n@@ -162,7 +162,7 @@ <T extends AbstractAttributableTO> SyncDelta beforeDelete(\n      * Action to be executed after each local user / role synchronization.\n      *\n      * @param profile profile of the synchronization being executed.\n-     * @param delta retrieved synchronization information (may be modified by 'beforeCreate/beforeUpdate/beforeDelete')\n+     * @param delta retrieved synchronization information (may be modified by 'beforeProvision/beforeUpdate/beforeDelete')\n      * @param subject synchronized local user / role\n      * @param result global synchronization results at the current synchronization step\n      * @throws JobExecutionException in case of generic failure"},{"sha":"c19e1d755cec278ba4cef4ac70a8c325da1d140b","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSubjectSyncResultHandler.java","status":"modified","additions":86,"deletions":72,"changes":158,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectSyncResultHandler.java?ref=a427cd05c7936d2a9a85ff27361a62c2515905b4","patch":"@@ -107,99 +107,118 @@ public boolean handle(final SyncDelta delta) {\n         }\n     }\n \n-    protected List<SyncResult> assign(\n-            final SyncDelta delta, final AttributableUtil attrUtil, final boolean dryRun)\n+    protected List<SyncResult> assign(final SyncDelta delta, final AttributableUtil attrUtil)\n             throws JobExecutionException {\n \n         final AbstractSubjectTO subjectTO =\n                 connObjectUtil.getSubjectTO(delta.getObject(), profile.getSyncTask(), attrUtil);\n \n         subjectTO.getResources().add(profile.getSyncTask().getResource().getName());\n \n-        SyncDelta _delta = delta;\n-        for (SyncActions action : profile.getActions()) {\n-            _delta = action.beforeAssign(this.getProfile(), _delta, subjectTO);\n+        if (!profile.getSyncTask().isPerformCreate()) {\n+            LOG.debug(\"SyncTask not configured for create\");\n+            return Collections.<SyncResult>emptyList();\n         }\n \n-        return create(subjectTO, _delta, attrUtil, \"assign\", dryRun);\n-    }\n+        final SyncResult result = new SyncResult();\n+        result.setOperation(ResourceOperation.CREATE);\n+        result.setSubjectType(attrUtil.getType());\n+        result.setStatus(SyncResult.Status.SUCCESS);\n \n-    protected List<SyncResult> create(\n-            final SyncDelta delta, final AttributableUtil attrUtil, final boolean dryRun)\n-            throws JobExecutionException {\n+        // Attributable transformation (if configured)\n+        AbstractSubjectTO transformed = attrTransformer.transform(subjectTO);\n+        LOG.debug(\"Transformed: {}\", transformed);\n \n-        final AbstractSubjectTO subjectTO =\n-                connObjectUtil.getSubjectTO(delta.getObject(), profile.getSyncTask(), attrUtil);\n+        result.setName(getName(transformed));\n \n-        return create(subjectTO, delta, attrUtil, \"provision\", dryRun);\n+        if (profile.isDryRun()) {\n+            result.setId(0L);\n+        } else {\n+            SyncDelta _delta = delta;\n+            for (SyncActions action : profile.getActions()) {\n+                _delta = action.beforeAssign(this.getProfile(), _delta, transformed);\n+            }\n+\n+            create(transformed, _delta, attrUtil, \"assign\", result);\n+        }\n+\n+        return Collections.singletonList(result);\n     }\n \n-    private List<SyncResult> create(\n-            final AbstractSubjectTO subjectTO,\n-            final SyncDelta delta,\n-            final AttributableUtil attrUtil,\n-            final String operation,\n-            final boolean dryRun)\n+    protected List<SyncResult> create(final SyncDelta delta, final AttributableUtil attrUtil)\n             throws JobExecutionException {\n \n         if (!profile.getSyncTask().isPerformCreate()) {\n             LOG.debug(\"SyncTask not configured for create\");\n             return Collections.<SyncResult>emptyList();\n         }\n \n+        final AbstractSubjectTO subjectTO =\n+                connObjectUtil.getSubjectTO(delta.getObject(), profile.getSyncTask(), attrUtil);\n+\n+        // Attributable transformation (if configured)\n+        AbstractSubjectTO transformed = attrTransformer.transform(subjectTO);\n+        LOG.debug(\"Transformed: {}\", transformed);\n+\n         final SyncResult result = new SyncResult();\n         result.setOperation(ResourceOperation.CREATE);\n         result.setSubjectType(attrUtil.getType());\n         result.setStatus(SyncResult.Status.SUCCESS);\n \n-        // Attributable transformation (if configured)\n-        AbstractSubjectTO actual = attrTransformer.transform(subjectTO);\n-        LOG.debug(\"Transformed: {}\", actual);\n+        result.setName(getName(transformed));\n \n-        result.setName(getName(actual));\n-\n-        if (dryRun) {\n+        if (profile.isDryRun()) {\n             result.setId(0L);\n         } else {\n             SyncDelta _delta = delta;\n             for (SyncActions action : profile.getActions()) {\n-                _delta = action.beforeCreate(this.getProfile(), _delta, subjectTO);\n+                _delta = action.beforeProvision(this.getProfile(), _delta, transformed);\n             }\n \n-            Object output;\n-            Result resultStatus;\n+            create(transformed, _delta, attrUtil, \"provision\", result);\n+        }\n \n-            try {\n-                actual = create(actual, _delta, result);\n-                result.setName(getName(actual));\n-                output = actual;\n-                resultStatus = Result.SUCCESS;\n-            } catch (PropagationException e) {\n-                // A propagation failure doesn't imply a synchronization failure.\n-                // The propagation exception status will be reported into the propagation task execution.\n-                LOG.error(\"Could not propagate {} {}\", attrUtil.getType(), _delta.getUid().getUidValue(), e);\n-                output = e;\n-                resultStatus = Result.FAILURE;\n-            } catch (Exception e) {\n-                result.setStatus(SyncResult.Status.FAILURE);\n-                result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n-                LOG.error(\"Could not create {} {} \", attrUtil.getType(), _delta.getUid().getUidValue(), e);\n-                output = e;\n-                resultStatus = Result.FAILURE;\n-            }\n+        return Collections.<SyncResult>singletonList(result);\n+    }\n+\n+    private void create(\n+            final AbstractSubjectTO subjectTO,\n+            final SyncDelta delta,\n+            final AttributableUtil attrUtil,\n+            final String operation,\n+            final SyncResult result)\n+            throws JobExecutionException {\n+\n+        Object output;\n+        Result resultStatus;\n+\n+        try {\n+            AbstractSubjectTO actual = create(subjectTO, delta, result);\n+            result.setName(getName(actual));\n+            output = actual;\n+            resultStatus = Result.SUCCESS;\n \n             for (SyncActions action : profile.getActions()) {\n-                action.after(this.getProfile(), _delta, actual, result);\n+                action.after(this.getProfile(), delta, actual, result);\n             }\n-\n-            audit(operation, resultStatus, null, output, _delta);\n+        } catch (PropagationException e) {\n+            // A propagation failure doesn't imply a synchronization failure.\n+            // The propagation exception status will be reported into the propagation task execution.\n+            LOG.error(\"Could not propagate {} {}\", attrUtil.getType(), delta.getUid().getUidValue(), e);\n+            output = e;\n+            resultStatus = Result.FAILURE;\n+        } catch (Exception e) {\n+            result.setStatus(SyncResult.Status.FAILURE);\n+            result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n+            LOG.error(\"Could not create {} {} \", attrUtil.getType(), delta.getUid().getUidValue(), e);\n+            output = e;\n+            resultStatus = Result.FAILURE;\n         }\n \n-        return Collections.singletonList(result);\n+        audit(operation, resultStatus, null, output, delta);\n     }\n \n-    protected List<SyncResult> update(SyncDelta delta, final List<Long> subjects, final AttributableUtil attrUtil,\n-            final boolean dryRun)\n+    protected List<SyncResult> update(SyncDelta delta, final List<Long> subjects, final AttributableUtil attrUtil)\n             throws JobExecutionException {\n \n         if (!profile.getSyncTask().isPerformUpdate()) {\n@@ -233,7 +252,7 @@ protected List<SyncResult> update(SyncDelta delta, final List<Long> subjects, fi\n                 result.setName(getName(before));\n             }\n \n-            if (!dryRun) {\n+            if (!profile.isDryRun()) {\n                 if (before == null) {\n                     resultStatus = Result.FAILURE;\n                     output = null;\n@@ -284,8 +303,7 @@ protected List<SyncResult> deprovision(\n             SyncDelta delta,\n             final List<Long> subjects,\n             final AttributableUtil attrUtil,\n-            final boolean unlink,\n-            final boolean dryRun)\n+            final boolean unlink)\n             throws JobExecutionException {\n \n         if (!profile.getSyncTask().isPerformUpdate()) {\n@@ -316,7 +334,7 @@ protected List<SyncResult> deprovision(\n                 result.setMessage(String.format(\"Subject '%s(%d)' not found\", attrUtil.getType().name(), id));\n             }\n \n-            if (!dryRun) {\n+            if (!profile.isDryRun()) {\n                 if (before == null) {\n                     resultStatus = Result.FAILURE;\n                     output = null;\n@@ -369,8 +387,7 @@ protected List<SyncResult> link(\n             SyncDelta delta,\n             final List<Long> subjects,\n             final AttributableUtil attrUtil,\n-            final boolean unlink,\n-            final boolean dryRun)\n+            final boolean unlink)\n             throws JobExecutionException {\n \n         if (!profile.getSyncTask().isPerformUpdate()) {\n@@ -401,7 +418,7 @@ protected List<SyncResult> link(\n                 result.setMessage(String.format(\"Subject '%s(%d)' not found\", attrUtil.getType().name(), id));\n             }\n \n-            if (!dryRun) {\n+            if (!profile.isDryRun()) {\n                 if (before == null) {\n                     resultStatus = Result.FAILURE;\n                     output = null;\n@@ -449,8 +466,7 @@ protected List<SyncResult> link(\n         return updResults;\n     }\n \n-    protected List<SyncResult> delete(SyncDelta delta, final List<Long> subjects, final AttributableUtil attrUtil,\n-            final boolean dryRun)\n+    protected List<SyncResult> delete(SyncDelta delta, final List<Long> subjects, final AttributableUtil attrUtil)\n             throws JobExecutionException {\n \n         if (!profile.getSyncTask().isPerformDelete()) {\n@@ -478,7 +494,7 @@ protected List<SyncResult> delete(SyncDelta delta, final List<Long> subjects, fi\n                 result.setSubjectType(attrUtil.getType());\n                 result.setStatus(SyncResult.Status.SUCCESS);\n \n-                if (!dryRun) {\n+                if (!profile.isDryRun()) {\n                     for (SyncActions action : profile.getActions()) {\n                         delta = action.beforeDelete(this.getProfile(), delta, before);\n                     }\n@@ -559,32 +575,30 @@ protected final void doHandle(final SyncDelta delta, final Collection<SyncResult\n                 if (subjectIds.isEmpty()) {\n                     switch (profile.getSyncTask().getUnmatchingRule()) {\n                         case ASSIGN:\n-                            profile.getResults().addAll(assign(delta, attrUtil, profile.isDryRun()));\n+                            profile.getResults().addAll(assign(delta, attrUtil));\n                             break;\n                         case PROVISION:\n-                            profile.getResults().addAll(create(delta, attrUtil, profile.isDryRun()));\n+                            profile.getResults().addAll(create(delta, attrUtil));\n                             break;\n                         default:\n                         // do nothing\n                     }\n                 } else {\n                     switch (profile.getSyncTask().getMatchingRule()) {\n                         case UPDATE:\n-                            profile.getResults().addAll(update(delta, subjectIds, attrUtil, profile.isDryRun()));\n+                            profile.getResults().addAll(update(delta, subjectIds, attrUtil));\n                             break;\n                         case DEPROVISION:\n-                            profile.getResults().addAll(\n-                                    deprovision(delta, subjectIds, attrUtil, false, profile.isDryRun()));\n+                            profile.getResults().addAll(deprovision(delta, subjectIds, attrUtil, false));\n                             break;\n                         case UNASSIGN:\n-                            profile.getResults().addAll(\n-                                    deprovision(delta, subjectIds, attrUtil, true, profile.isDryRun()));\n+                            profile.getResults().addAll(deprovision(delta, subjectIds, attrUtil, true));\n                             break;\n                         case LINK:\n-                            profile.getResults().addAll(link(delta, subjectIds, attrUtil, false, profile.isDryRun()));\n+                            profile.getResults().addAll(link(delta, subjectIds, attrUtil, false));\n                             break;\n                         case UNLINK:\n-                            profile.getResults().addAll(link(delta, subjectIds, attrUtil, true, profile.isDryRun()));\n+                            profile.getResults().addAll(link(delta, subjectIds, attrUtil, true));\n                             break;\n                         default:\n                         // do nothing\n@@ -594,7 +608,7 @@ protected final void doHandle(final SyncDelta delta, final Collection<SyncResult\n                 if (subjectIds.isEmpty()) {\n                     LOG.debug(\"No match found for deletion\");\n                 } else {\n-                    profile.getResults().addAll(delete(delta, subjectIds, attrUtil, profile.isDryRun()));\n+                    profile.getResults().addAll(delete(delta, subjectIds, attrUtil));\n                 }\n             }\n         } catch (IllegalStateException e) {"},{"sha":"3cf28caf861fb814d455f2995cbb6149509c4796","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/DBPasswordSyncActions.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FDBPasswordSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FDBPasswordSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FDBPasswordSyncActions.java?ref=a427cd05c7936d2a9a85ff27361a62c2515905b4","patch":"@@ -61,7 +61,7 @@ public class DBPasswordSyncActions extends DefaultSyncActions {\n \n     @Transactional(readOnly = true)\n     @Override\n-    public <T extends AbstractAttributableTO> SyncDelta beforeCreate(\n+    public <T extends AbstractAttributableTO> SyncDelta beforeProvision(\n             final SyncProfile<?, ?> profile,\n             final SyncDelta delta,\n             final T subject) throws JobExecutionException {"},{"sha":"59e465218ccb432c725e6fb7844842a39b398a29","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/LDAPMembershipSyncActions.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java?ref=a427cd05c7936d2a9a85ff27361a62c2515905b4","patch":"@@ -119,7 +119,7 @@ protected String getGroupMembershipAttrName(final Connector connector) {\n \n     /**\n      * Keep track of members of the role being updated <b>before</b> actual update takes place. This is not needed on\n-     * <ul> <li>beforeCreate() - because the synchronizing role does not exist yet on Syncope</li> <li>beforeDelete() -\n+     * <ul> <li>beforeProvision() - because the synchronizing role does not exist yet on Syncope</li> <li>beforeDelete() -\n      * because role delete cascades as membership removal for all users involved</li> </ul>\n      *\n      * {@inheritDoc}\n@@ -298,7 +298,6 @@ public <T extends AbstractAttributableTO> void after(\n             final SyncDelta delta,\n             final T subject,\n             final SyncResult result) throws JobExecutionException {\n-\n         if (!(profile.getSyncTask() instanceof SyncTask)) {\n             return;\n         }"},{"sha":"65f43cc70959166b97794a4f481dbef73008977a","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/LDAPPasswordSyncActions.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPPasswordSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPPasswordSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPPasswordSyncActions.java?ref=a427cd05c7936d2a9a85ff27361a62c2515905b4","patch":"@@ -54,7 +54,7 @@ public class LDAPPasswordSyncActions extends DefaultSyncActions {\n \n     @Transactional(readOnly = true)\n     @Override\n-    public <T extends AbstractAttributableTO> SyncDelta beforeCreate(\n+    public <T extends AbstractAttributableTO> SyncDelta beforeProvision(\n             final SyncProfile<?, ?> profile,\n             final SyncDelta delta,\n             final T subject) throws JobExecutionException {"},{"sha":"5b709600e134e8b8de4701205d19ba69612cb0eb","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/TaskTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java?ref=a427cd05c7936d2a9a85ff27361a62c2515905b4","patch":"@@ -67,7 +67,7 @@ public void findAll() {\n         assertEquals(4, taskDAO.findAll(PropagationTask.class).size());\n         assertEquals(1, taskDAO.findAll(NotificationTask.class).size());\n         assertEquals(1, taskDAO.findAll(SchedTask.class).size());\n-        assertEquals(6, taskDAO.findAll(SyncTask.class).size());\n+        assertEquals(7, taskDAO.findAll(SyncTask.class).size());\n         assertEquals(11, taskDAO.findAll(PushTask.class).size());\n     }\n "},{"sha":"3aa7e958587c0713c3b7338e83109dfde9fb9721","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":1,"deletions":54,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=a427cd05c7936d2a9a85ff27361a62c2515905b4","patch":"@@ -68,7 +68,6 @@\n import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.common.types.UnmatchingRule;\n import org.apache.syncope.common.wrap.PushActionClass;\n-import org.apache.syncope.core.sync.TestSyncActions;\n import org.apache.syncope.core.sync.TestSyncRule;\n import org.apache.syncope.core.sync.impl.SyncJob;\n import org.apache.syncope.core.workflow.ActivitiDetector;\n@@ -325,33 +324,6 @@ public void sync() {\n             int usersPre = userService.list(1, 1).getTotalCount();\n             assertNotNull(usersPre);\n \n-            // Update sync task\n-            SyncTaskTO task = taskService.read(SYNC_TASK_ID);\n-            assertNotNull(task);\n-\n-            // add custom SyncJob actions\n-            task.getActionsClassNames().add(TestSyncActions.class.getName());\n-\n-            // add user template\n-            UserTO template = new UserTO();\n-            template.getAttrs().add(attributeTO(\"type\",\n-                    \"email == 'test8@syncope.apache.org'? 'TYPE_8': 'TYPE_OTHER'\"));\n-            template.getDerAttrs().add(attributeTO(\"cn\", null));\n-            template.getResources().add(RESOURCE_NAME_TESTDB);\n-\n-            MembershipTO membershipTO = new MembershipTO();\n-            membershipTO.setRoleId(8L);\n-            membershipTO.getAttrs().add(attributeTO(\"subscriptionDate\", \"'2009-08-18T16:33:12.203+0200'\"));\n-            template.getMemberships().add(membershipTO);\n-\n-            task.setUserTemplate(template);\n-\n-            taskService.update(task.getId(), task);\n-            SyncTaskTO actual = taskService.read(task.getId());\n-            assertNotNull(actual);\n-            assertEquals(task.getId(), actual.getId());\n-            assertEquals(TestSyncActions.class.getName(), actual.getActionsClassNames().get(0));\n-\n             execSyncTask(SYNC_TASK_ID, 50, false);\n \n             // after execution of the sync task the user data should be synced from\n@@ -793,32 +765,7 @@ public void issueSYNCOPE272() {\n             assertEquals(1, userTO.getPropagationStatusTOs().size());\n             assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n \n-            // update sync task\n-            SyncTaskTO task = taskService.read(SYNC_TASK_ID);\n-            assertNotNull(task);\n-\n-            // add user template\n-            AttributeTO newAttrTO = new AttributeTO();\n-            newAttrTO.setSchema(\"firstname\");\n-            newAttrTO.getValues().add(\"\");\n-\n-            UserTO template = new UserTO();\n-            template.getAttrs().add(newAttrTO);\n-            template.getAttrs().add(attributeTO(\"userId\", \"'test'\"));\n-            template.getAttrs().add(attributeTO(\"fullname\", \"'test'\"));\n-            template.getAttrs().add(attributeTO(\"surname\", \"'test'\"));\n-            template.getResources().add(RESOURCE_NAME_TESTDB);\n-\n-            task.setUserTemplate(template);\n-\n-            taskService.update(task.getId(), task);\n-            SyncTaskTO actual = taskService.read(task.getId());\n-            assertNotNull(actual);\n-            assertEquals(task.getId(), actual.getId());\n-\n-            TaskExecTO taskExecTO = execSyncTask(SYNC_TASK_ID, 50, false);\n-            assertNotNull(actual);\n-            assertEquals(task.getId(), actual.getId());\n+            TaskExecTO taskExecTO = execSyncTask(24L, 50, false);\n \n             assertNotNull(taskExecTO.getStatus());\n             assertTrue(PropagationTaskExecStatus.valueOf(taskExecTO.getStatus()).isSuccessful());"},{"sha":"75ea2a4609e7b7d8078cc932f38999324a2fa6ea","filename":"core/src/test/java/org/apache/syncope/core/sync/TestSyncActions.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FTestSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FTestSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FTestSyncActions.java?ref=a427cd05c7936d2a9a85ff27361a62c2515905b4","patch":"@@ -30,7 +30,7 @@ public class TestSyncActions extends DefaultSyncActions {\n     private int counter = 0;\n \n     @Override\n-    public <T extends AbstractAttributableTO> SyncDelta beforeCreate(\n+    public <T extends AbstractAttributableTO> SyncDelta beforeProvision(\n             final SyncProfile<?, ?> profile,\n             final SyncDelta delta,\n             final T subject) throws JobExecutionException {"},{"sha":"0aad9584d297d3d3a25d32b50ad7abc2bfad6abe","filename":"core/src/test/resources/content.xml","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a427cd05c7936d2a9a85ff27361a62c2515905b4/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=a427cd05c7936d2a9a85ff27361a62c2515905b4","patch":"@@ -872,7 +872,10 @@ under the License.\n         xmlAttributes=\"%3Cset%3E%0A++%3Corg.identityconnectors.framework.common.objects.Name%3E%0A++++%3Cname%3E__NAME__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3EuserId%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Name%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3E__PASSWORD__%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Corg.identityconnectors.common.security.GuardedString%3E%0A++++++++++%3C__readOnly%3Efalse%3C%2F__readOnly%3E%0A++++++++++%3C__disposed%3Efalse%3C%2F__disposed%3E%0A++++++++++%3C__encryptedBytes%3EQTOgwEhIHqtAI%2FYlgDhYc37esEF8VLDMU2IY1ciltrg%3D%3C%2F__encryptedBytes%3E%0A++++++++++%3C__base64SHA1Hash%3EW5%2FrwtdCnI8gAnIUhKcahMEnMMc%3D%3C%2F__base64SHA1Hash%3E%0A++++++++%3C%2Forg.identityconnectors.common.security.GuardedString%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A++%3Corg.identityconnectors.framework.common.objects.Attribute%3E%0A++++%3Cname%3Etype%3C%2Fname%3E%0A++++%3Cvalue+class%3D%22java.util.Collections%24UnmodifiableRandomAccessList%22+resolves-to%3D%22java.util.Collections%24UnmodifiableList%22%3E%0A++++++%3Cc+class%3D%22list%22%3E%0A++++++++%3Cstring%3Etype%3C%2Fstring%3E%0A++++++%3C%2Fc%3E%0A++++++%3Clist+reference%3D%22..%2Fc%22%2F%3E%0A++++%3C%2Fvalue%3E%0A++%3C%2Forg.identityconnectors.framework.common.objects.Attribute%3E%0A%3C%2Fset%3E\"/>\n   <Task DTYPE=\"SyncTask\" id=\"4\" name=\"CSV Task\" resource_name=\"resource-csv\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" fullReconciliation=\"0\"\n-        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"/>\n+        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"\n+        userTemplate=\"%3Corg.apache.syncope.common.to.UserTO%3E%0A++%3Cattrs%3E%0A++++%3Corg.apache.syncope.common.to.AttributeTO%3E%0A++++++%3Cschema%3Etype%3C%2Fschema%3E%0A++++++%3Cvalues%3E%0A++++++++%3Cstring%3Eemail+%3D%3D+%26apos%3Btest8%40syncope.apache.org%26apos%3B%3F+%26apos%3BTYPE_8%26apos%3B%3A+%26apos%3BTYPE_OTHER%26apos%3B%3C%2Fstring%3E%0A++++++%3C%2Fvalues%3E%0A++++++%3Creadonly%3Efalse%3C%2Freadonly%3E%0A++++%3C%2Forg.apache.syncope.common.to.AttributeTO%3E%0A++%3C%2Fattrs%3E%0A++%3Cid%3E0%3C%2Fid%3E%0A++%3CderAttrs%3E%0A++++%3Corg.apache.syncope.common.to.AttributeTO%3E%0A++++++%3Cschema%3Ecn%3C%2Fschema%3E%0A++++++%3Cvalues%3E%0A++++++++%3Cnull%2F%3E%0A++++++%3C%2Fvalues%3E%0A++++++%3Creadonly%3Efalse%3C%2Freadonly%3E%0A++++%3C%2Forg.apache.syncope.common.to.AttributeTO%3E%0A++%3C%2FderAttrs%3E%0A++%3CvirAttrs%2F%3E%0A++%3Cresources%3E%0A++++%3Cstring%3Eresource-testdb%3C%2Fstring%3E%0A++%3C%2Fresources%3E%0A++%3CpropagationStatusTOs%2F%3E%0A++%3Cmemberships%3E%0A++++%3Corg.apache.syncope.common.to.MembershipTO%3E%0A++++++%3Cattrs%3E%0A++++++++%3Corg.apache.syncope.common.to.AttributeTO%3E%0A++++++++++%3Cschema%3EsubscriptionDate%3C%2Fschema%3E%0A++++++++++%3Cvalues%3E%0A++++++++++++%3Cstring%3E%26apos%3B2009-08-18T16%3A33%3A12.203%2B0200%26apos%3B%3C%2Fstring%3E%0A++++++++++%3C%2Fvalues%3E%0A++++++++++%3Creadonly%3Efalse%3C%2Freadonly%3E%0A++++++++%3C%2Forg.apache.syncope.common.to.AttributeTO%3E%0A++++++%3C%2Fattrs%3E%0A++++++%3Cid%3E0%3C%2Fid%3E%0A++++++%3CderAttrs%2F%3E%0A++++++%3CvirAttrs%2F%3E%0A++++++%3CroleId%3E8%3C%2FroleId%3E%0A++++%3C%2Forg.apache.syncope.common.to.MembershipTO%3E%0A++%3C%2Fmemberships%3E%0A%3C%2Forg.apache.syncope.common.to.UserTO%3E\"\n+        roleTemplate=\"%3Corg.apache.syncope.common.to.RoleTO%3E%0A++%3Cattrs%2F%3E%0A++%3Cid%3E0%3C%2Fid%3E%0A++%3CderAttrs%2F%3E%0A++%3CvirAttrs%2F%3E%0A++%3Cresources%2F%3E%0A++%3CpropagationStatusTOs%2F%3E%0A++%3Cparent%3E0%3C%2Fparent%3E%0A++%3CinheritOwner%3Efalse%3C%2FinheritOwner%3E%0A++%3CinheritTemplates%3Efalse%3C%2FinheritTemplates%3E%0A++%3CinheritAttrs%3Efalse%3C%2FinheritAttrs%3E%0A++%3CinheritDerAttrs%3Efalse%3C%2FinheritDerAttrs%3E%0A++%3CinheritVirAttrs%3Efalse%3C%2FinheritVirAttrs%3E%0A++%3CinheritPasswordPolicy%3Efalse%3C%2FinheritPasswordPolicy%3E%0A++%3CinheritAccountPolicy%3Efalse%3C%2FinheritAccountPolicy%3E%0A++%3Centitlements%2F%3E%0A++%3CrAttrTemplates%2F%3E%0A++%3CrDerAttrTemplates%2F%3E%0A++%3CrVirAttrTemplates%2F%3E%0A++%3CmAttrTemplates%2F%3E%0A++%3CmDerAttrTemplates%2F%3E%0A++%3CmVirAttrTemplates%2F%3E%0A%3C%2Forg.apache.syncope.common.to.RoleTO%3E\"/>\n+  <SyncTask_actionsClassNames SyncTask_id=\"4\" element=\"org.apache.syncope.core.sync.TestSyncActions\"/>\n   <Task DTYPE=\"SchedTask\" id=\"5\" name=\"SampleJob Task\" jobClassName=\"org.apache.syncope.core.quartz.SampleJob\" cronExpression=\"0 0 0 1 * ?\"/>\n   <Task DTYPE=\"PropagationTask\" id=\"6\" propagationMode=\"TWO_PHASES\" propagationOperation=\"UPDATE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-nopropagation\" subjectType=\"USER\" subjectId=\"1\"\n@@ -944,6 +947,11 @@ under the License.\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n         jobClassName=\"org.apache.syncope.core.sync.impl.PushJob\" unmatchingRule=\"ASSIGN\" matchingRule=\"UNLINK\" \n         userFilter=\"username==_NO_ONE_\" roleFilter=\"name==citizen\"/>\n+  <Task DTYPE=\"SyncTask\" id=\"24\" name=\"CSV Task 2\" resource_name=\"resource-csv\"\n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" fullReconciliation=\"0\"\n+        jobClassName=\"org.apache.syncope.core.sync.impl.SyncJob\"\n+        userTemplate=\"%3Corg.apache.syncope.common.to.UserTO%3E%0A++%3Cattrs%3E%0A++++%3Corg.apache.syncope.common.to.AttributeTO%3E%0A++++++%3Cschema%3Efirstname%3C%2Fschema%3E%0A++++++%3Cvalues%3E%0A++++++++%3Cstring%3E%3C%2Fstring%3E%0A++++++%3C%2Fvalues%3E%0A++++++%3Creadonly%3Efalse%3C%2Freadonly%3E%0A++++%3C%2Forg.apache.syncope.common.to.AttributeTO%3E%0A++++%3Corg.apache.syncope.common.to.AttributeTO%3E%0A++++++%3Cschema%3EuserId%3C%2Fschema%3E%0A++++++%3Cvalues%3E%0A++++++++%3Cstring%3E%26apos%3Btest%26apos%3B%3C%2Fstring%3E%0A++++++%3C%2Fvalues%3E%0A++++++%3Creadonly%3Efalse%3C%2Freadonly%3E%0A++++%3C%2Forg.apache.syncope.common.to.AttributeTO%3E%0A++++%3Corg.apache.syncope.common.to.AttributeTO%3E%0A++++++%3Cschema%3Efullname%3C%2Fschema%3E%0A++++++%3Cvalues%3E%0A++++++++%3Cstring%3E%26apos%3Btest%26apos%3B%3C%2Fstring%3E%0A++++++%3C%2Fvalues%3E%0A++++++%3Creadonly%3Efalse%3C%2Freadonly%3E%0A++++%3C%2Forg.apache.syncope.common.to.AttributeTO%3E%0A++++%3Corg.apache.syncope.common.to.AttributeTO%3E%0A++++++%3Cschema%3Esurname%3C%2Fschema%3E%0A++++++%3Cvalues%3E%0A++++++++%3Cstring%3E%26apos%3Btest%26apos%3B%3C%2Fstring%3E%0A++++++%3C%2Fvalues%3E%0A++++++%3Creadonly%3Efalse%3C%2Freadonly%3E%0A++++%3C%2Forg.apache.syncope.common.to.AttributeTO%3E%0A++%3C%2Fattrs%3E%0A++%3Cid%3E0%3C%2Fid%3E%0A++%3CderAttrs%2F%3E%0A++%3CvirAttrs%2F%3E%0A++%3Cresources%3E%0A++++%3Cstring%3Eresource-testdb%3C%2Fstring%3E%0A++%3C%2Fresources%3E%0A++%3CpropagationStatusTOs%2F%3E%0A++%3Cmemberships%2F%3E%0A%3C%2Forg.apache.syncope.common.to.UserTO%3E\"\n+        roleTemplate=\"%3Corg.apache.syncope.common.to.RoleTO%3E%0A++%3Cattrs%2F%3E%0A++%3Cid%3E0%3C%2Fid%3E%0A++%3CderAttrs%2F%3E%0A++%3CvirAttrs%2F%3E%0A++%3Cresources%2F%3E%0A++%3CpropagationStatusTOs%2F%3E%0A++%3Cparent%3E0%3C%2Fparent%3E%0A++%3CinheritOwner%3Efalse%3C%2FinheritOwner%3E%0A++%3CinheritTemplates%3Efalse%3C%2FinheritTemplates%3E%0A++%3CinheritAttrs%3Efalse%3C%2FinheritAttrs%3E%0A++%3CinheritDerAttrs%3Efalse%3C%2FinheritDerAttrs%3E%0A++%3CinheritVirAttrs%3Efalse%3C%2FinheritVirAttrs%3E%0A++%3CinheritPasswordPolicy%3Efalse%3C%2FinheritPasswordPolicy%3E%0A++%3CinheritAccountPolicy%3Efalse%3C%2FinheritAccountPolicy%3E%0A++%3Centitlements%2F%3E%0A++%3CrAttrTemplates%2F%3E%0A++%3CrDerAttrTemplates%2F%3E%0A++%3CrVirAttrTemplates%2F%3E%0A++%3CmAttrTemplates%2F%3E%0A++%3CmDerAttrTemplates%2F%3E%0A++%3CmVirAttrTemplates%2F%3E%0A%3C%2Forg.apache.syncope.common.to.RoleTO%3E\"/>\n       \n   <Notification id=\"1\" sender=\"test@syncope.apache.org\" subject=\"Test subject\" template=\"test\" selfAsRecipient=\"0\" traceLevel=\"ALL\"\n                 userAbout=\"fullname==*o*;fullname==*i*\""}]}