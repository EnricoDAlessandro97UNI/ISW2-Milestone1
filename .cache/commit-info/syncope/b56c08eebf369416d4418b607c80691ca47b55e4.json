{"sha":"b56c08eebf369416d4418b607c80691ca47b55e4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmI1NmMwOGVlYmYzNjk0MTZkNDQxOGI2MDdjODA2OTFjYTQ3YjU1ZTQ=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-09-29T13:44:47Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-09-29T13:44:47Z"},"message":"[SYNCOPE-156] merge from master + connector and resource modal re-work. Still re-working on provisions and mappings","tree":{"sha":"b4c12514851f1bf05af45192fb202e4f37808d7a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b4c12514851f1bf05af45192fb202e4f37808d7a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b56c08eebf369416d4418b607c80691ca47b55e4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b56c08eebf369416d4418b607c80691ca47b55e4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b56c08eebf369416d4418b607c80691ca47b55e4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b56c08eebf369416d4418b607c80691ca47b55e4/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"6f67940385ee969cbef7bd360d385badbc3c055f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6f67940385ee969cbef7bd360d385badbc3c055f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6f67940385ee969cbef7bd360d385badbc3c055f"},{"sha":"5dc51917f7c1e89da5d9558c17f1048a7eaa68cc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5dc51917f7c1e89da5d9558c17f1048a7eaa68cc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5dc51917f7c1e89da5d9558c17f1048a7eaa68cc"}],"stats":{"total":5181,"additions":2917,"deletions":2264},"files":[{"sha":"c62180e0b82a8b852bf634263c534a7c3ea27780","filename":"archetype/pom.xml","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/archetype%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/archetype%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fpom.xml?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -227,4 +227,24 @@ under the License.\n       </resource>\n     </resources>\n   </build>\n+  \n+  <profiles>\n+    <profile>\n+      <id>doc</id>\n+\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.asciidoctor</groupId>\n+            <artifactId>asciidoctor-maven-plugin</artifactId>\n+            <inherited>false</inherited>\n+            <configuration>\n+              <skip>true</skip>\n+            </configuration>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+  </profiles>\n+  \n </project>"},{"sha":"def8f5077dc60279c0606849bcfc3ba541361c17","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/ReportCommand.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FReportCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FReportCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FReportCommand.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -28,7 +28,6 @@\n import javax.xml.transform.TransformerException;\n import org.apache.syncope.client.cli.SyncopeServices;\n import org.apache.syncope.client.cli.util.XMLUtils;\n-import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ReportExecTO;\n import org.apache.syncope.common.lib.to.ReportTO;\n@@ -94,7 +93,7 @@ public void execute() {\n         } else if (list) {\n             LOG.debug(\"- report list command\");\n             try {\n-                for (ReportTO reportTO : reportService.list(SyncopeClient.getListQueryBuilder().build()).getResult()) {\n+                for (ReportTO reportTO : reportService.list()) {\n                     System.out.println(reportTO);\n                 }\n             } catch (final SyncopeClientException ex) {"},{"sha":"c055c95ae5a65b725c4fe07044cc5e5bff73d4c1","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractConnectorConfPanel.java","status":"added","additions":114,"deletions":0,"changes":114,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractConnectorConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractConnectorConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractConnectorConfPanel.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.syncope.client.console.wicket.markup.html.list.ConnConfPropertyListView;\n+import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.syncope.common.lib.types.ConnConfProperty;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+\n+/**\n+ * Modal window with Connector form.\n+ *\n+ * @param <T> model type.\n+ */\n+public abstract class AbstractConnectorConfPanel<T extends AbstractBaseBean> extends Panel {\n+\n+    private static final long serialVersionUID = -2025535531121434050L;\n+\n+    protected final WebMarkupContainer propertiesContainer;\n+\n+    protected final AjaxButton check;\n+\n+    protected final IModel<T> model;\n+\n+    public AbstractConnectorConfPanel(final String id, final IModel<T> model) {\n+\n+        super(id, model);\n+        this.model = model;\n+        setOutputMarkupId(true);\n+\n+        propertiesContainer = new WebMarkupContainer(\"connectorPropertiesContainer\");\n+        propertiesContainer.setOutputMarkupId(true);\n+        add(propertiesContainer);\n+\n+        check = new IndicatingAjaxButton(\"check\", new ResourceModel(\"check\")) {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                check(target);\n+            }\n+        };\n+        propertiesContainer.add(check);\n+    }\n+\n+    protected void setConfPropertyListView(final String modelExpression, final boolean withOverridable) {\n+\n+        final ConnConfPropertyListView connPropView = new ConnConfPropertyListView(\n+                \"connectorProperties\",\n+                new PropertyModel<List<ConnConfProperty>>(model.getObject(), modelExpression) {\n+\n+                    private static final long serialVersionUID = 1L;\n+\n+                    @Override\n+                    public List<ConnConfProperty> getObject() {\n+                        final List<ConnConfProperty> res = new ArrayList<>((Set<ConnConfProperty>) super.getObject());\n+\n+                        // re-order properties\n+                        Collections.sort(res, new Comparator<ConnConfProperty>() {\n+\n+                            @Override\n+                            public int compare(final ConnConfProperty left, final ConnConfProperty right) {\n+                                if (left == null) {\n+                                    return -1;\n+                                } else {\n+                                    return left.compareTo(right);\n+                                }\n+                            }\n+                        });\n+\n+                        return res;\n+                    }\n+                },\n+                withOverridable\n+        );\n+\n+        connPropView.setOutputMarkupId(true);\n+        propertiesContainer.add(connPropView);\n+    }\n+\n+    protected abstract void check(final AjaxRequestTarget taget);\n+\n+    protected abstract List<ConnConfProperty> getConnProperties(final T instance);\n+}"},{"sha":"15f4f02b9876b6935a38b9a88ab30ae9ae527319","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractResourceModal.java","status":"modified","additions":44,"deletions":1,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractResourceModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractResourceModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractResourceModal.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -19,11 +19,17 @@\n package org.apache.syncope.client.console.panels;\n \n import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.List;\n import org.apache.syncope.client.console.topology.TopologyNode;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal.ModalEvent;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n \n /**\n  * Modal window with Resource form.\n@@ -32,8 +38,46 @@ public abstract class AbstractResourceModal extends AbstractModalPanel {\n \n     private static final long serialVersionUID = 1734415311027284221L;\n \n+    protected final List<ITab> tabs;\n+\n     public AbstractResourceModal(final BaseModal<?> modal, final PageReference pageRef) {\n         super(modal, pageRef);\n+\n+        this.tabs = new ArrayList<>();\n+        add(new AjaxBootstrapTabbedPanel<ITab>(\"tabbedPanel\", tabs));\n+    }\n+\n+    private class AjaxBootstrapTabbedPanel<T extends ITab>\n+            extends de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel<T> {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        public AjaxBootstrapTabbedPanel(final String id, final List<T> tabs) {\n+            super(id, tabs);\n+        }\n+\n+        @Override\n+        protected WebMarkupContainer newLink(final String linkId, final int index) {\n+            return new AjaxSubmitLink(linkId) {\n+\n+                private static final long serialVersionUID = 1L;\n+\n+                @Override\n+                protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                    setSelectedTab(index);\n+                    if (target != null) {\n+                        target.add(AjaxBootstrapTabbedPanel.this);\n+                    }\n+                    onAjaxUpdate(target);\n+                }\n+\n+                @Override\n+                protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                    modal.getFeedbackPanel().refresh(target);\n+                }\n+            };\n+        }\n+\n     }\n \n     public static class CreateEvent extends ModalEvent {\n@@ -74,6 +118,5 @@ public TopologyNode.Kind getKind() {\n         public Serializable getParent() {\n             return parent;\n         }\n-\n     }\n }"},{"sha":"fbb805989470dc8f8dbd7320ba0d9125a954cbdd","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnectorCapabilitiesPanel.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorCapabilitiesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorCapabilitiesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorCapabilitiesPanel.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import org.apache.syncope.client.console.wicket.markup.html.form.CheckBoxMultipleChoiceFieldPanel;\n+import org.apache.syncope.common.lib.to.ConnInstanceTO;\n+import org.apache.syncope.common.lib.types.ConnectorCapability;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.PropertyModel;\n+\n+/**\n+ * Modal window with Connector form.\n+ */\n+public class ConnectorCapabilitiesPanel extends Panel {\n+\n+    private static final long serialVersionUID = -2025535531121434050L;\n+\n+    public ConnectorCapabilitiesPanel(final String id, final IModel<ConnInstanceTO> model) {\n+\n+        super(id, model);\n+        setOutputMarkupId(true);\n+\n+        final IModel<List<ConnectorCapability>> all = new LoadableDetachableModel<List<ConnectorCapability>>() {\n+\n+            private static final long serialVersionUID = 5275935387613157437L;\n+\n+            @Override\n+            protected List<ConnectorCapability> load() {\n+                return Arrays.asList(ConnectorCapability.values());\n+            }\n+        };\n+\n+        add(new CheckBoxMultipleChoiceFieldPanel<>(\n+                \"capabilitiesPalette\",\n+                new PropertyModel<List<ConnectorCapability>>(model.getObject(), \"capabilities\"),\n+                all));\n+    }\n+}"},{"sha":"2e813ed05f6aee80c814de514a2e5efc10fdee02","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnectorConfPanel.java","status":"added","additions":86,"deletions":0,"changes":86,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorConfPanel.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Transformer;\n+import org.apache.syncope.common.lib.to.ConnBundleTO;\n+import org.apache.syncope.common.lib.to.ConnInstanceTO;\n+import org.apache.syncope.common.lib.types.ConnConfPropSchema;\n+import org.apache.syncope.common.lib.types.ConnConfProperty;\n+import org.apache.wicket.model.IModel;\n+\n+/**\n+ * Modal window with Connector form.\n+ */\n+public abstract class ConnectorConfPanel extends AbstractConnectorConfPanel<ConnInstanceTO> {\n+\n+    private static final long serialVersionUID = -2025535531121434050L;\n+\n+    private final List<ConnBundleTO> bundles;\n+\n+    public ConnectorConfPanel(final String id, final IModel<ConnInstanceTO> model, final List<ConnBundleTO> bundles) {\n+\n+        super(id, model);\n+        this.bundles = bundles;\n+\n+        final List<ConnConfProperty> properties = getConnProperties(model.getObject());\n+        model.getObject().getConfiguration().clear();\n+        model.getObject().getConfiguration().addAll(properties);\n+\n+        setConfPropertyListView(\"configuration\", true);\n+    }\n+\n+    /**\n+     * Ge available configuration properties.\n+     *\n+     * @param instance connector instance.\n+     * @return configuration properties.\n+     */\n+    @Override\n+    protected final List<ConnConfProperty> getConnProperties(final ConnInstanceTO instance) {\n+\n+        final List<ConnConfProperty> res = CollectionUtils.collect(\n+                ConnectorModal.getBundle(instance, bundles).getProperties(),\n+                new Transformer<ConnConfPropSchema, ConnConfProperty>() {\n+\n+                    @Override\n+                    public ConnConfProperty transform(final ConnConfPropSchema key) {\n+                        final ConnConfProperty property = new ConnConfProperty();\n+                        property.setSchema(key);\n+\n+                        if (instance.getKey() != 0 && instance.getConfigurationMap().containsKey(key.getName())\n+                        && instance.getConfigurationMap().get(key.getName()).getValues() != null) {\n+                            property.getValues().addAll(instance.getConfigurationMap().get(key.getName()).getValues());\n+                            property.setOverridable(instance.getConfigurationMap().get(key.getName()).isOverridable());\n+                        }\n+\n+                        if (property.getValues().isEmpty() && !key.getDefaultValues().isEmpty()) {\n+                            property.getValues().addAll(key.getDefaultValues());\n+                        }\n+                        return property;\n+                    }\n+                },\n+                new ArrayList<ConnConfProperty>());\n+\n+        return res;\n+    }\n+}"},{"sha":"f7544c30cd9b7c4c56689f634104a0bb2e539a6c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnectorDetailsPanel.java","status":"added","additions":197,"deletions":0,"changes":197,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorDetailsPanel.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -0,0 +1,197 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.collections4.Transformer;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.SpinnerFieldPanel;\n+import org.apache.syncope.common.lib.to.ConnBundleTO;\n+import org.apache.syncope.common.lib.to.ConnInstanceTO;\n+import org.apache.syncope.common.lib.to.ConnPoolConfTO;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.markup.html.form.DropDownChoice;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.PropertyModel;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Modal window with Connector form.\n+ */\n+public class ConnectorDetailsPanel extends Panel {\n+\n+    private static final long serialVersionUID = -2025535531121434050L;\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG = LoggerFactory.getLogger(ConnectorDetailsPanel.class);\n+\n+    public ConnectorDetailsPanel(\n+            final String id, final IModel<ConnInstanceTO> model, final List<ConnBundleTO> bundles) {\n+\n+        super(id, model);\n+        setOutputMarkupId(true);\n+\n+        final AjaxTextFieldPanel displayName = new AjaxTextFieldPanel(\n+                \"displayName\", \"displayName\", new PropertyModel<String>(model.getObject(), \"displayName\"), false);\n+        displayName.setOutputMarkupId(true);\n+        displayName.addRequiredLabel();\n+        add(displayName);\n+\n+        final AjaxTextFieldPanel location = new AjaxTextFieldPanel(\n+                \"location\",\n+                \"location\",\n+                new PropertyModel<String>(model.getObject(), \"location\"),\n+                false);\n+        location.setRequired(true);\n+        location.addRequiredLabel();\n+        location.setOutputMarkupId(true);\n+        location.setEnabled(false);\n+        add(location);\n+\n+        final AjaxDropDownChoicePanel<String> bundleName = new AjaxDropDownChoicePanel<>(\n+                \"connectorName\",\n+                \"connectorName\",\n+                new PropertyModel<String>(model.getObject(), \"bundleName\"), false);\n+\n+        ((DropDownChoice<String>) bundleName.getField()).setNullValid(true);\n+        bundleName.setChoices(CollectionUtils.collect(bundles, new Transformer<ConnBundleTO, String>() {\n+\n+            @Override\n+            public String transform(final ConnBundleTO input) {\n+                return input.getBundleName();\n+            }\n+        }, new ArrayList<String>()));\n+\n+        bundleName.setRequired(true);\n+        bundleName.addRequiredLabel();\n+        bundleName.setOutputMarkupId(true);\n+        bundleName.setEnabled(model.getObject().getKey() == 0);\n+        bundleName.getField().setOutputMarkupId(true);\n+        add(bundleName);\n+\n+        final AjaxDropDownChoicePanel<String> version = new AjaxDropDownChoicePanel<>(\n+                \"version\",\n+                \"version\",\n+                new PropertyModel<String>(model.getObject(), \"version\"), false);\n+\n+        version.setChoices(getVersions(model.getObject(), bundles));\n+\n+        version.setRequired(true);\n+        version.addRequiredLabel();\n+        version.setEnabled(model.getObject().getBundleName() != null);\n+        version.setOutputMarkupId(true);\n+        version.addRequiredLabel();\n+        version.getField().setOutputMarkupId(true);\n+        add(version);\n+\n+        bundleName.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                ((DropDownChoice<String>) bundleName.getField()).setNullValid(false);\n+                version.setChoices(getVersions(model.getObject(), bundles));\n+                version.setEnabled(true);\n+                target.add(version);\n+            }\n+        });\n+\n+        if (model.getObject().getPoolConf() == null) {\n+            model.getObject().setPoolConf(new ConnPoolConfTO());\n+        }\n+\n+        add(new SpinnerFieldPanel<>(\n+                \"connRequestTimeout\",\n+                \"connRequestTimeout\",\n+                Integer.class,\n+                new PropertyModel<Integer>(model, \"connRequestTimeout\"),\n+                0,\n+                Integer.MAX_VALUE));\n+\n+        add(new SpinnerFieldPanel<>(\n+                \"poolMaxObjects\",\n+                \"poolMaxObjects\",\n+                Integer.class,\n+                new PropertyModel<Integer>(model.getObject().getPoolConf(), \"maxObjects\"),\n+                0,\n+                Integer.MAX_VALUE));\n+\n+        add(new SpinnerFieldPanel<>(\n+                \"poolMinIdle\",\n+                \"poolMinIdle\",\n+                Integer.class,\n+                new PropertyModel<Integer>(model.getObject().getPoolConf(), \"minIdle\"),\n+                0,\n+                Integer.MAX_VALUE));\n+\n+        add(new SpinnerFieldPanel<>(\n+                \"poolMaxIdle\",\n+                \"poolMaxIdle\",\n+                Integer.class,\n+                new PropertyModel<Integer>(model.getObject().getPoolConf(), \"maxIdle\"),\n+                0,\n+                Integer.MAX_VALUE));\n+\n+        add(new SpinnerFieldPanel<>(\n+                \"poolMaxWait\",\n+                \"poolMaxWait\",\n+                Long.class,\n+                new PropertyModel<Long>(model.getObject().getPoolConf(), \"maxWait\"),\n+                0L,\n+                Long.MAX_VALUE));\n+\n+        add(new SpinnerFieldPanel<>(\n+                \"poolMinEvictableIdleTime\",\n+                \"poolMinEvictableIdleTime\",\n+                Long.class,\n+                new PropertyModel<Long>(model.getObject().getPoolConf(), \"minEvictableIdleTimeMillis\"),\n+                0L,\n+                Long.MAX_VALUE));\n+    }\n+\n+    private List<String> getVersions(final ConnInstanceTO connInstanceTO, final List<ConnBundleTO> bundles) {\n+        return new ArrayList<>(CollectionUtils.collect(\n+                CollectionUtils.select(bundles, new Predicate<ConnBundleTO>() {\n+\n+                    @Override\n+                    public boolean evaluate(final ConnBundleTO object) {\n+                        return object.getLocation().equals(connInstanceTO.getLocation())\n+                        && object.getBundleName().equals(connInstanceTO.getBundleName());\n+                    }\n+                }), new Transformer<ConnBundleTO, String>() {\n+\n+                    @Override\n+                    public String transform(final ConnBundleTO input) {\n+                        return input.getVersion();\n+                    }\n+                }, new HashSet<String>()));\n+    }\n+}"},{"sha":"69891358e0cb3534463ea1f97fc650ee706da9e2","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ConnectorModal.java","status":"modified","additions":89,"deletions":363,"changes":452,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -18,51 +18,28 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import static org.apache.syncope.client.console.panels.AbstractModalPanel.LOG;\n+\n import java.io.Serializable;\n import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.EnumSet;\n-import java.util.HashMap;\n import java.util.List;\n-import java.util.Map;\n-import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.pages.AbstractBasePage;\n import org.apache.syncope.client.console.topology.Topology;\n import org.apache.syncope.client.console.topology.TopologyNode;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.CheckBoxMultipleChoiceFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.form.SpinnerFieldPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.list.ConnConfPropertyListView;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ConnBundleTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n-import org.apache.syncope.common.lib.to.ConnPoolConfTO;\n-import org.apache.syncope.common.lib.types.ConnConfPropSchema;\n-import org.apache.syncope.common.lib.types.ConnConfProperty;\n-import org.apache.syncope.common.lib.types.ConnectorCapability;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.form.AjaxFormChoiceComponentUpdatingBehavior;\n-import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.event.Broadcast;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.form.DropDownChoice;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.list.ListView;\n-import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n-import org.apache.wicket.validation.validator.RangeValidator;\n \n /**\n  * Modal window with Connector form.\n@@ -71,391 +48,140 @@ public class ConnectorModal extends AbstractResourceModal {\n \n     private static final long serialVersionUID = -2025535531121434050L;\n \n-    private final Map<String, Map<String, Map<String, ConnBundleTO>>> mapConnBundleTOs;\n-\n-    private final List<ConnectorCapability> selectedCapabilities;\n-\n-    private ConnBundleTO bundleTO;\n-\n-    private List<ConnConfProperty> properties;\n-\n-    private final WebMarkupContainer propertiesContainer;\n-\n-    private final ListView<ConnConfProperty> connPropView;\n-\n-    private final ConnInstanceTO connInstanceTO;\n+    private final List<ConnBundleTO> bundles;\n \n     public ConnectorModal(\n-            final BaseModal<Serializable> modal, final PageReference pageRef, final ConnInstanceTO connInstanceTO) {\n+            final BaseModal<Serializable> modal,\n+            final PageReference pageRef,\n+            final IModel<ConnInstanceTO> model) {\n \n         super(modal, pageRef);\n \n-        this.connInstanceTO = connInstanceTO;\n-\n-        this.add(new Label(\"new\", connInstanceTO.getKey() == 0\n-                ? new ResourceModel(\"new\")\n-                : new Model<>(StringUtils.EMPTY)));\n-        this.add(new Label(\"key\", connInstanceTO.getKey() == 0\n-                ? StringUtils.EMPTY\n-                : connInstanceTO.getKey()));\n-\n-        // general data setup\n-        selectedCapabilities = new ArrayList<>(connInstanceTO.getKey() == 0\n-                ? EnumSet.noneOf(ConnectorCapability.class)\n-                : connInstanceTO.getCapabilities());\n-\n-        mapConnBundleTOs = new HashMap<>();\n-        for (ConnBundleTO connBundleTO : connectorRestClient.getAllBundles()) {\n-            // by location\n-            if (!mapConnBundleTOs.containsKey(connBundleTO.getLocation())) {\n-                mapConnBundleTOs.put(connBundleTO.getLocation(), new HashMap<String, Map<String, ConnBundleTO>>());\n-            }\n-            final Map<String, Map<String, ConnBundleTO>> byLocation = mapConnBundleTOs.get(connBundleTO.getLocation());\n-\n-            // by name\n-            if (!byLocation.containsKey(connBundleTO.getBundleName())) {\n-                byLocation.put(connBundleTO.getBundleName(), new HashMap<String, ConnBundleTO>());\n-            }\n-            final Map<String, ConnBundleTO> byName = byLocation.get(connBundleTO.getBundleName());\n-\n-            // by version\n-            if (!byName.containsKey(connBundleTO.getVersion())) {\n-                byName.put(connBundleTO.getVersion(), connBundleTO);\n-            }\n-        }\n-\n-        bundleTO = getSelectedBundleTO(connInstanceTO);\n-        properties = fillProperties(bundleTO, connInstanceTO);\n-\n-        propertiesContainer = new WebMarkupContainer(\"container\");\n-        propertiesContainer.setOutputMarkupId(true);\n-        add(propertiesContainer);\n-\n-        final Form<ConnInstanceTO> connectorPropForm = new Form<>(\"connectorPropForm\");\n-        connectorPropForm.setModel(new CompoundPropertyModel<>(connInstanceTO));\n-        connectorPropForm.setOutputMarkupId(true);\n-        propertiesContainer.add(connectorPropForm);\n-\n-        final AjaxTextFieldPanel displayName = new AjaxTextFieldPanel(\n-                \"displayName\", \"display name\", new PropertyModel<String>(connInstanceTO, \"displayName\"));\n-        displayName.setOutputMarkupId(true);\n-        displayName.addRequiredLabel();\n-        add(displayName);\n-\n-        final AjaxDropDownChoicePanel<String> location = new AjaxDropDownChoicePanel<>(\"location\", \"location\",\n-                new Model<>(bundleTO == null ? connInstanceTO.getLocation() : bundleTO.getLocation()));\n-        ((DropDownChoice<String>) location.getField()).setNullValid(true);\n-        location.setStyleSheet(\"long_dynamicsize\");\n-        location.setChoices(new ArrayList<>(mapConnBundleTOs.keySet()));\n-        location.setRequired(true);\n-        location.addRequiredLabel();\n-        location.setOutputMarkupId(true);\n-        location.setEnabled(connInstanceTO.getKey() == 0 && StringUtils.isBlank(connInstanceTO.getLocation()));\n-        location.getField().setOutputMarkupId(true);\n-        add(location);\n+        this.bundles = CollectionUtils.select(connectorRestClient.getAllBundles(),\n+                new Predicate<ConnBundleTO>() {\n \n-        final AjaxDropDownChoicePanel<String> connectorName = new AjaxDropDownChoicePanel<>(\"connectorName\",\n-                \"connectorName\",\n-                new Model<>(bundleTO == null ? null : bundleTO.getBundleName()));\n-        ((DropDownChoice<String>) connectorName.getField()).setNullValid(true);\n-        connectorName.setStyleSheet(\"long_dynamicsize\");\n-        connectorName.setChoices(bundleTO == null\n-                ? StringUtils.isBlank(connInstanceTO.getLocation())\n-                        ? new ArrayList<String>()\n-                        : new ArrayList<>(mapConnBundleTOs.get(connInstanceTO.getLocation()).keySet())\n-                : new ArrayList<>(mapConnBundleTOs.get(bundleTO.getLocation()).keySet()));\n-        connectorName.setRequired(true);\n-        connectorName.addRequiredLabel();\n-        connectorName.setOutputMarkupId(true);\n-        connectorName.setEnabled(connInstanceTO.getKey() == 0);\n-        connectorName.getField().setOutputMarkupId(true);\n-        add(connectorName);\n-\n-        final AjaxDropDownChoicePanel<String> version = new AjaxDropDownChoicePanel<>(\"version\", \"version\",\n-                new Model<>(bundleTO == null ? null : bundleTO.getVersion()));\n-        version.setStyleSheet(\"long_dynamicsize\");\n-        version.setChoices(bundleTO == null\n-                ? new ArrayList<String>()\n-                : new ArrayList<>(mapConnBundleTOs.get(connInstanceTO.getLocation()).\n-                        get(connInstanceTO.getBundleName()).keySet()));\n-        version.setRequired(true);\n-        version.addRequiredLabel();\n-        version.setEnabled(connInstanceTO.getBundleName() != null);\n-        version.setOutputMarkupId(true);\n-        version.addRequiredLabel();\n-        version.getField().setOutputMarkupId(true);\n-        add(version);\n-\n-        final SpinnerFieldPanel<Integer> connRequestTimeout = new SpinnerFieldPanel<>(\"connRequestTimeout\",\n-                \"connRequestTimeout\", Integer.class,\n-                new PropertyModel<Integer>(connInstanceTO, \"connRequestTimeout\"), 0, null);\n-        connRequestTimeout.getField().add(new RangeValidator<>(0, Integer.MAX_VALUE));\n-        add(connRequestTimeout);\n-\n-        if (connInstanceTO.getPoolConf() == null) {\n-            connInstanceTO.setPoolConf(new ConnPoolConfTO());\n-        }\n-        final SpinnerFieldPanel<Integer> poolMaxObjects = new SpinnerFieldPanel<>(\"poolMaxObjects\", \"poolMaxObjects\",\n-                Integer.class,\n-                new PropertyModel<Integer>(connInstanceTO.getPoolConf(), \"maxObjects\"), 0, null);\n-        poolMaxObjects.getField().add(new RangeValidator<>(0, Integer.MAX_VALUE));\n-        add(poolMaxObjects);\n-        final SpinnerFieldPanel<Integer> poolMinIdle = new SpinnerFieldPanel<>(\"poolMinIdle\", \"poolMinIdle\",\n-                Integer.class,\n-                new PropertyModel<Integer>(connInstanceTO.getPoolConf(), \"minIdle\"), 0, null);\n-        poolMinIdle.getField().add(new RangeValidator<>(0, Integer.MAX_VALUE));\n-        add(poolMinIdle);\n-        final SpinnerFieldPanel<Integer> poolMaxIdle = new SpinnerFieldPanel<>(\"poolMaxIdle\", \"poolMaxIdle\",\n-                Integer.class,\n-                new PropertyModel<Integer>(connInstanceTO.getPoolConf(), \"maxIdle\"), 0, null);\n-        poolMaxIdle.getField().add(new RangeValidator<>(0, Integer.MAX_VALUE));\n-        add(poolMaxIdle);\n-        final SpinnerFieldPanel<Long> poolMaxWait = new SpinnerFieldPanel<>(\"poolMaxWait\", \"poolMaxWait\", Long.class,\n-                new PropertyModel<Long>(connInstanceTO.getPoolConf(), \"maxWait\"), 0L, null);\n-        poolMaxWait.getField().add(new RangeValidator<>(0L, Long.MAX_VALUE));\n-        add(poolMaxWait);\n-        final SpinnerFieldPanel<Long> poolMinEvictableIdleTime = new SpinnerFieldPanel<>(\"poolMinEvictableIdleTime\",\n-                \"poolMinEvictableIdleTime\", Long.class,\n-                new PropertyModel<Long>(connInstanceTO.getPoolConf(), \"minEvictableIdleTimeMillis\"),\n-                0L, null);\n-        poolMinEvictableIdleTime.getField().add(new RangeValidator<>(0L, Long.MAX_VALUE));\n-        add(poolMinEvictableIdleTime);\n+                    @Override\n+                    public boolean evaluate(final ConnBundleTO object) {\n+                        return object.getLocation().equals(model.getObject().getLocation());\n+                    }\n+                }, new ArrayList<ConnBundleTO>());\n \n-        // form - first tab - onchange()\n-        location.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+        //--------------------------------\n+        // Connector details panel\n+        //--------------------------------\n+        tabs.add(new AbstractTab(new ResourceModel(\"general\", \"general\")) {\n \n-            private static final long serialVersionUID = -1107858522700306810L;\n+            private static final long serialVersionUID = -5861786415855103549L;\n \n             @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                ((DropDownChoice<String>) location.getField()).setNullValid(false);\n-                connInstanceTO.setLocation(location.getModelObject());\n-                target.add(location);\n-\n-                connectorName.setChoices(new ArrayList<>(\n-                        mapConnBundleTOs.get(location.getModelObject()).keySet()));\n-                connectorName.setEnabled(true);\n-                connectorName.getField().setModelValue(null);\n-                target.add(connectorName);\n-\n-                version.setChoices(new ArrayList<String>());\n-                version.getField().setModelValue(null);\n-                version.setEnabled(false);\n-                target.add(version);\n-\n-                properties.clear();\n-                target.add(propertiesContainer);\n+            public Panel getPanel(final String panelId) {\n+                return new ConnectorDetailsPanel(panelId, model, bundles);\n             }\n         });\n-        connectorName.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n+        //--------------------------------\n \n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                ((DropDownChoice<String>) connectorName.getField()).setNullValid(false);\n-                connInstanceTO.setBundleName(connectorName.getModelObject());\n-                target.add(connectorName);\n+        //--------------------------------\n+        // Connector configuration panel\n+        //--------------------------------\n+        tabs.add(new AbstractTab(new ResourceModel(\"configuration\", \"configuration\")) {\n \n-                List<String> versions = new ArrayList<>(\n-                        mapConnBundleTOs.get(location.getModelObject()).get(connectorName.getModelObject()).keySet());\n-                version.setChoices(versions);\n-                version.setEnabled(true);\n-                if (versions.size() == 1) {\n-                    selectVersion(target, connInstanceTO, version, versions.get(0));\n-                    version.getField().setModelObject(versions.get(0));\n-                } else {\n-                    version.getField().setModelValue(null);\n-                    properties.clear();\n-                    target.add(propertiesContainer);\n-                }\n-                target.add(version);\n-            }\n-        });\n-        version.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n+            private static final long serialVersionUID = -5861786415855103549L;\n \n             @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                selectVersion(target, connInstanceTO, version, version.getModelObject());\n-            }\n-        });\n-\n-        // form - second tab (properties)\n-        connPropView = new ConnConfPropertyListView(\"connectorProperties\",\n-                new PropertyModel<List<ConnConfProperty>>(this, \"properties\"),\n-                true, connInstanceTO.getConfiguration());\n-        connPropView.setOutputMarkupId(true);\n-        connectorPropForm.add(connPropView);\n-\n-        final AjaxButton check = new IndicatingAjaxButton(\"check\", new ResourceModel(\"check\")) {\n+            public Panel getPanel(final String panelId) {\n+                return new ConnectorConfPanel(panelId, model, bundles) {\n \n-            private static final long serialVersionUID = -7978723352517770644L;\n-\n-            @Override\n-            public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                final ConnInstanceTO conn = (ConnInstanceTO) form.getModelObject();\n-\n-                // ensure that connector bundle information is in sync\n-                conn.setBundleName(bundleTO.getBundleName());\n-                conn.setVersion(bundleTO.getVersion());\n-                conn.setConnectorName(bundleTO.getConnectorName());\n-\n-                if (connectorRestClient.check(conn)) {\n-                    info(getString(\"success_connection\"));\n-                } else {\n-                    error(getString(\"error_connection\"));\n-                }\n-\n-                modal.getFeedbackPanel().refresh(target);\n-            }\n-        };\n-        connectorPropForm.add(check);\n-\n-        // form - third tab (capabilities)\n-        final IModel<List<ConnectorCapability>> capabilities\n-                = new LoadableDetachableModel<List<ConnectorCapability>>() {\n-\n-                    private static final long serialVersionUID = 5275935387613157437L;\n+                    private static final long serialVersionUID = 1L;\n \n                     @Override\n-                    protected List<ConnectorCapability> load() {\n-                        return Arrays.asList(ConnectorCapability.values());\n+                    protected void check(final AjaxRequestTarget target) {\n+                        if (connectorRestClient.check(model.getObject())) {\n+                            info(getString(\"success_connection\"));\n+                        } else {\n+                            error(getString(\"error_connection\"));\n+                        }\n+                        modal.getFeedbackPanel().refresh(target);\n                     }\n-                };\n-        CheckBoxMultipleChoiceFieldPanel<ConnectorCapability> capabilitiesPalette\n-                = new CheckBoxMultipleChoiceFieldPanel<>(\n-                        \"capabilitiesPalette\",\n-                        new PropertyModel<List<ConnectorCapability>>(this, \"selectedCapabilities\"), capabilities);\n-\n-        capabilitiesPalette.add(new AjaxFormChoiceComponentUpdatingBehavior() {\n \n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n+                };\n             }\n         });\n+        //--------------------------------\n \n-        add(capabilitiesPalette);\n-    }\n-\n-    private ConnBundleTO getSelectedBundleTO(final ConnInstanceTO connInstanceTO) {\n-        ConnBundleTO result = null;\n-        if (connInstanceTO != null\n-                && StringUtils.isNotBlank(connInstanceTO.getLocation())\n-                && StringUtils.isNotBlank(connInstanceTO.getBundleName())\n-                && StringUtils.isNotBlank(connInstanceTO.getVersion())\n-                && mapConnBundleTOs.containsKey(connInstanceTO.getLocation())) {\n-\n-            Map<String, Map<String, ConnBundleTO>> byLocation = mapConnBundleTOs.get(connInstanceTO.getLocation());\n-            if (byLocation.containsKey(connInstanceTO.getBundleName())) {\n-                Map<String, ConnBundleTO> byName = byLocation.get(connInstanceTO.getBundleName());\n-                if (byName.containsKey(connInstanceTO.getVersion())) {\n-                    result = byName.get(connInstanceTO.getVersion());\n-                }\n-            }\n-        }\n-        return result;\n-    }\n-\n-    private List<ConnConfProperty> fillProperties(final ConnBundleTO bundleTO, final ConnInstanceTO connInstanceTO) {\n-        final List<ConnConfProperty> props = new ArrayList<>();\n-\n-        if (bundleTO != null) {\n-            for (ConnConfPropSchema key : bundleTO.getProperties()) {\n-                final ConnConfProperty property = new ConnConfProperty();\n-                property.setSchema(key);\n-                if (connInstanceTO.getKey() != 0\n-                        && connInstanceTO.getConfigurationMap().containsKey(key.getName())\n-                        && connInstanceTO.getConfigurationMap().get(key.getName()).getValues() != null) {\n-\n-                    property.getValues().addAll(connInstanceTO.getConfigurationMap().get(key.getName()).getValues());\n-                    property.setOverridable(connInstanceTO.getConfigurationMap().get(key.getName()).isOverridable());\n-                }\n+        //--------------------------------\n+        // Connector configuration panel\n+        //--------------------------------\n+        tabs.add(new AbstractTab(new ResourceModel(\"capabilities\", \"capabilities\")) {\n \n-                if (property.getValues().isEmpty() && !key.getDefaultValues().isEmpty()) {\n-                    property.getValues().addAll(key.getDefaultValues());\n-                }\n+            private static final long serialVersionUID = -5861786415855103549L;\n \n-                props.add(property);\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                return new ConnectorCapabilitiesPanel(panelId, model);\n             }\n-        }\n-\n-        // re-order properties (implements Comparable)\n-        Collections.sort(props);\n-        return props;\n-    }\n-\n-    private void selectVersion(final AjaxRequestTarget target, final ConnInstanceTO connInstanceTO,\n-            final AjaxDropDownChoicePanel<String> version, final String versionValue) {\n-\n-        connInstanceTO.setVersion(versionValue);\n-        target.add(version);\n-\n-        bundleTO = getSelectedBundleTO(connInstanceTO);\n-        properties = fillProperties(bundleTO, connInstanceTO);\n-        target.add(propertiesContainer);\n+        });\n+        //--------------------------------\n     }\n \n-    public List<ConnConfProperty> getProperties() {\n-        return properties;\n+    @Override\n+    public void onError(final AjaxRequestTarget target, final Form<?> form) {\n+        modal.getFeedbackPanel().refresh(target);\n     }\n \n     @Override\n     public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-        final ConnInstanceTO conn = (ConnInstanceTO) form.getModelObject();\n+        final ConnInstanceTO connInstanceTO = (ConnInstanceTO) form.getModelObject();\n \n-        conn.setConnectorName(bundleTO.getConnectorName());\n-        conn.setBundleName(bundleTO.getBundleName());\n-        conn.setVersion(bundleTO.getVersion());\n-        conn.getConfiguration().clear();\n-        conn.getConfiguration().addAll(connPropView.getModelObject());\n+        final ConnBundleTO bundleTO = ConnectorModal.getBundle(connInstanceTO, bundles);\n \n-        // Set the model object's capabilities to capabilitiesPalette's converted Set\n-        conn.getCapabilities().clear();\n-        conn.getCapabilities().addAll(selectedCapabilities.isEmpty()\n-                ? EnumSet.noneOf(ConnectorCapability.class)\n-                : EnumSet.copyOf(selectedCapabilities));\n+        connInstanceTO.setConnectorName(bundleTO.getConnectorName());\n+        connInstanceTO.setBundleName(bundleTO.getBundleName());\n+        connInstanceTO.setVersion(bundleTO.getVersion());\n \n         // Reset pool configuration if all fields are null\n-        if (conn.getPoolConf() != null\n-                && conn.getPoolConf().getMaxIdle() == null\n-                && conn.getPoolConf().getMaxObjects() == null\n-                && conn.getPoolConf().getMaxWait() == null\n-                && conn.getPoolConf().getMinEvictableIdleTimeMillis() == null\n-                && conn.getPoolConf().getMinIdle() == null) {\n-\n-            conn.setPoolConf(null);\n+        if (connInstanceTO.getPoolConf() != null\n+                && connInstanceTO.getPoolConf().getMaxIdle() == null\n+                && connInstanceTO.getPoolConf().getMaxObjects() == null\n+                && connInstanceTO.getPoolConf().getMaxWait() == null\n+                && connInstanceTO.getPoolConf().getMinEvictableIdleTimeMillis() == null\n+                && connInstanceTO.getPoolConf().getMinIdle() == null) {\n+\n+            connInstanceTO.setPoolConf(null);\n         }\n \n         try {\n             if (connInstanceTO.getKey() == 0) {\n-                connectorRestClient.create(conn);\n+                connectorRestClient.create(connInstanceTO);\n                 send(pageRef.getPage(), Broadcast.BREADTH, new CreateEvent(\n-                        conn.getKey(),\n-                        conn.getDisplayName(),\n+                        connInstanceTO.getKey(),\n+                        connInstanceTO.getDisplayName(),\n                         TopologyNode.Kind.CONNECTOR,\n-                        conn.getLocation().startsWith(Topology.CONNECTOR_SERVER_LOCATION_PREFIX)\n-                                ? conn.getLocation() : Topology.ROOT_NAME,\n+                        connInstanceTO.getLocation().startsWith(Topology.CONNECTOR_SERVER_LOCATION_PREFIX)\n+                                ? connInstanceTO.getLocation() : Topology.ROOT_NAME,\n                         target));\n             } else {\n-                connectorRestClient.update(conn);\n+                connectorRestClient.update(connInstanceTO);\n             }\n \n-            ((BasePage) pageRef.getPage()).setModalResult(true);\n+            if (pageRef.getPage() instanceof AbstractBasePage) {\n+                ((AbstractBasePage) pageRef.getPage()).setModalResult(true);\n+            }\n             modal.close(target);\n-        } catch (SyncopeClientException e) {\n+        } catch (Exception e) {\n+            LOG.error(\"Failure managing resource {}\", connInstanceTO, e);\n             error(getString(Constants.ERROR) + \": \" + e.getMessage());\n             modal.getFeedbackPanel().refresh(target);\n-            ((BasePage) pageRef.getPage()).setModalResult(false);\n-            LOG.error(\"While creating or updating connector {}\", conn, e);\n         }\n     }\n \n-    @Override\n-    public void onError(final AjaxRequestTarget target, final Form<?> form) {\n-        modal.getFeedbackPanel().refresh(target);\n+    protected static ConnBundleTO getBundle(final ConnInstanceTO connInstanceTO, final List<ConnBundleTO> bundles) {\n+        return CollectionUtils.find(bundles, new Predicate<ConnBundleTO>() {\n+\n+            @Override\n+            public boolean evaluate(final ConnBundleTO bundle) {\n+                return bundle.getBundleName().equals(connInstanceTO.getBundleName())\n+                        && bundle.getVersion().equals(connInstanceTO.getVersion());\n+            }\n+        });\n     }\n }"},{"sha":"ca67bdbd83e88997ccd6b550987587143b96ed6a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -18,12 +18,13 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import java.beans.IntrospectionException;\n import java.beans.PropertyDescriptor;\n import java.io.Serializable;\n import java.lang.reflect.Field;\n+import java.lang.reflect.InvocationTargetException;\n import java.util.ArrayList;\n import java.util.Arrays;\n-import java.util.Collections;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.Constants;\n@@ -107,10 +108,10 @@ private ListViewPanel(\n \n         if (toBeIncluded.isEmpty()) {\n             LOG.warn(\"No field has been retrieved from {}\", reference.getName());\n-            listOfItems = Collections.<T>emptyList();\n+            listOfItems = new ArrayList<>();\n         } else if (list == null || list.isEmpty()) {\n             LOG.info(\"No item to be shown\");\n-            listOfItems = Collections.<T>emptyList();\n+            listOfItems = new ArrayList<>();\n         } else {\n             listOfItems = list;\n             if (LOG.isDebugEnabled()) {\n@@ -157,7 +158,8 @@ protected void populateItem(final ListItem<String> fieldItem) {\n                                     ? new Label(\"field\", StringUtils.EMPTY)\n                                     : new Label(\"field\", new ResourceModel(value.toString(), value.toString())));\n \n-                        } catch (Exception e) {\n+                        } catch (IntrospectionException | IllegalAccessException | IllegalArgumentException \n+                                | InvocationTargetException e) {\n                             LOG.error(\"Error retrieving value for field {}\", fieldItem.getModelObject(), e);\n                             fieldItem.add(new Label(\"field\", StringUtils.EMPTY));\n                         }"},{"sha":"cdce531934554116e9955fcc4d788dedf0944166","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceConnConfPanel.java","status":"modified","additions":11,"deletions":111,"changes":122,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceConnConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceConnConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceConnConfPanel.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -19,100 +19,47 @@\n package org.apache.syncope.client.console.panels;\n \n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-import org.apache.syncope.client.console.pages.BaseModalPage;\n-import org.apache.syncope.client.console.panels.ResourceDetailsPanel.DetailsModEvent;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal.ModalEvent;\n-import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel.MultiValueSelectorEvent;\n-import org.apache.syncope.client.console.wicket.markup.html.list.ConnConfPropertyListView;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n-import org.apache.wicket.event.Broadcast;\n-import org.apache.wicket.event.IEvent;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.list.ListView;\n-import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.IModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n \n-public class ResourceConnConfPanel extends Panel {\n+public abstract class ResourceConnConfPanel extends AbstractConnectorConfPanel<ResourceTO> {\n \n     private static final long serialVersionUID = -7982691107029848579L;\n \n     @SpringBean\n     private ConnectorRestClient restClient;\n \n-    private final ResourceTO resourceTO;\n-\n     private final boolean createFlag;\n \n-    private List<ConnConfProperty> connConfProperties;\n-\n-    private final WebMarkupContainer connConfPropContainer;\n-\n-    private final AjaxButton check;\n-\n-    public ResourceConnConfPanel(final String id, final ResourceTO resourceTO, final boolean createFlag) {\n-        super(id);\n-        setOutputMarkupId(true);\n+    public ResourceConnConfPanel(final String id, final IModel<ResourceTO> model, final boolean createFlag) {\n+        super(id, model);\n \n         this.createFlag = createFlag;\n-        this.resourceTO = resourceTO;\n-\n-        connConfProperties = getConnConfProperties();\n-\n-        connConfPropContainer = new WebMarkupContainer(\"connectorPropertiesContainer\");\n-        connConfPropContainer.setOutputMarkupId(true);\n-        add(connConfPropContainer);\n-\n-        /*\n-         * the list of overridable connector properties\n-         */\n-        final ListView<ConnConfProperty> connPropView = new ConnConfPropertyListView(\"connectorProperties\",\n-                new PropertyModel<List<ConnConfProperty>>(this, \"connConfProperties\"),\n-                false, resourceTO.getConnConfProperties());\n-        connPropView.setOutputMarkupId(true);\n-        connConfPropContainer.add(connPropView);\n-\n-        check = new IndicatingAjaxButton(\"check\", new ResourceModel(\"check\")) {\n \n-            private static final long serialVersionUID = -4199438518229098169L;\n+        final List<ConnConfProperty> connConfProperties = getConnProperties(model.getObject());\n+        model.getObject().getConnConfProperties().clear();\n+        model.getObject().getConnConfProperties().addAll(connConfProperties);\n \n-            @Override\n-            public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                final ResourceTO to = (ResourceTO) form.getModelObject();\n-\n-                if (restClient.check(to)) {\n-                    info(getString(\"success_connection\"));\n-                } else {\n-                    error(getString(\"error_connection\"));\n-                }\n-\n-                ((BaseModalPage) getPage()).getFeedbackPanel().refresh(target);\n-            }\n-        };\n+        setConfPropertyListView(\"connConfProperties\", false);\n \n         check.setEnabled(!connConfProperties.isEmpty());\n         check.setVisible(!connConfProperties.isEmpty());\n-\n-        connConfPropContainer.add(check);\n     }\n \n     /**\n      * Get overridable properties.\n      *\n+     * @param resourceTO resource instance.\n      * @return overridable properties.\n      */\n-    private List<ConnConfProperty> getConnConfProperties() {\n+    @Override\n+    protected final List<ConnConfProperty> getConnProperties(final ResourceTO resourceTO) {\n         List<ConnConfProperty> props = new ArrayList<>();\n         Long connectorKey = resourceTO.getConnector();\n         if (connectorKey != null && connectorKey > 0) {\n@@ -137,53 +84,6 @@ private List<ConnConfProperty> getConnConfProperties() {\n             }\n         }\n \n-        // re-order properties\n-        Collections.sort(props);\n-\n         return props;\n     }\n-\n-    @Override\n-    public void onEvent(final IEvent<?> event) {\n-        AjaxRequestTarget target = null;\n-        if (event.getPayload() instanceof DetailsModEvent) {\n-            // connector change: update properties and forward event\n-            target = ((ModalEvent) event.getPayload()).getTarget();\n-\n-            connConfProperties = getConnConfProperties();\n-            check.setEnabled(!connConfProperties.isEmpty());\n-\n-            target.add(connConfPropContainer);\n-        } else if (event.getPayload() instanceof MultiValueSelectorEvent) {\n-            // multi value connector property change: forward event\n-            target = ((MultiValueSelectorEvent) event.getPayload()).getTarget();\n-        }\n-\n-        if (target != null) {\n-            send(getPage(), Broadcast.BREADTH, new ConnConfModEvent(target, connConfProperties));\n-        }\n-    }\n-\n-    /**\n-     * Connector configuration properties modification event.\n-     */\n-    public static class ConnConfModEvent extends ModalEvent {\n-\n-        private final List<ConnConfProperty> configuration;\n-\n-        /**\n-         * Constructor.\n-         *\n-         * @param target request target.\n-         * @param configuration connector configuration properties.\n-         */\n-        public ConnConfModEvent(final AjaxRequestTarget target, final List<ConnConfProperty> configuration) {\n-            super(target);\n-            this.configuration = configuration;\n-        }\n-\n-        public List<ConnConfProperty> getConfiguration() {\n-            return configuration;\n-        }\n-    }\n }"},{"sha":"fe33899b4bef12ce6021996ac5300d007492fed5","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceDetailsPanel.java","status":"modified","additions":63,"deletions":174,"changes":237,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -20,30 +20,19 @@\n \n import java.util.Arrays;\n import java.util.List;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.rest.ConnectorRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal.ModalEvent;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.SpinnerFieldPanel;\n-import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.TraceLevel;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.form.ChoiceRenderer;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -56,12 +45,10 @@ public class ResourceDetailsPanel extends Panel {\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(ResourceDetailsPanel.class);\n \n-    @SpringBean\n-    private ConnectorRestClient connRestClient;\n-\n-    private ConnInstanceTO connInstanceTO;\n-\n-    public ResourceDetailsPanel(final String id, final ResourceTO resourceTO, final List<String> actionClassNames,\n+    public ResourceDetailsPanel(\n+            final String id,\n+            final IModel<ResourceTO> model,\n+            final List<String> actionClassNames,\n             final boolean createFlag) {\n \n         super(id);\n@@ -72,176 +59,78 @@ public ResourceDetailsPanel(final String id, final ResourceTO resourceTO, final\n         container.setRenderBodyOnly(true);\n         add(container);\n \n-        final AjaxTextFieldPanel resourceName = new AjaxTextFieldPanel(\"name\", new ResourceModel(\"name\", \"name\").\n-                getObject(), new PropertyModel<String>(resourceTO, \"key\"));\n-\n-        resourceName.setEnabled(createFlag);\n-        resourceName.addRequiredLabel();\n-        container.add(resourceName);\n+        container.add(new AjaxTextFieldPanel(\n+                \"name\",\n+                new ResourceModel(\"name\", \"name\").\n+                getObject(),\n+                new PropertyModel<String>(model, \"key\"),\n+                false).addRequiredLabel().setEnabled(createFlag));\n \n-        final AjaxCheckBoxPanel enforceMandatoryCondition = new AjaxCheckBoxPanel(\"enforceMandatoryCondition\",\n+        container.add(new AjaxCheckBoxPanel(\n+                \"enforceMandatoryCondition\",\n                 new ResourceModel(\"enforceMandatoryCondition\", \"enforceMandatoryCondition\").getObject(),\n-                new PropertyModel<Boolean>(resourceTO, \"enforceMandatoryCondition\"));\n-        container.add(enforceMandatoryCondition);\n+                new PropertyModel<Boolean>(model, \"enforceMandatoryCondition\"),\n+                false));\n \n-        final AjaxCheckBoxPanel propagationPrimary = new AjaxCheckBoxPanel(\"propagationPrimary\", new ResourceModel(\n-                \"propagationPrimary\", \"propagationPrimary\").getObject(), new PropertyModel<Boolean>(resourceTO,\n-                        \"propagationPrimary\"));\n-        container.add(propagationPrimary);\n+        container.add(new AjaxCheckBoxPanel(\n+                \"propagationPrimary\",\n+                new ResourceModel(\"propagationPrimary\", \"propagationPrimary\").getObject(),\n+                new PropertyModel<Boolean>(model, \"propagationPrimary\"),\n+                false));\n \n-        final SpinnerFieldPanel<Integer> propagationPriority = new SpinnerFieldPanel<>(\n+        container.add(new SpinnerFieldPanel<>(\n                 \"propagationPriority\",\n                 \"propagationPriority\",\n                 Integer.class,\n-                new PropertyModel<Integer>(resourceTO, \"propagationPriority\"));\n-        container.add(propagationPriority);\n+                new PropertyModel<Integer>(model, \"propagationPriority\")));\n \n-        final AjaxDropDownChoicePanel<PropagationMode> propagationMode = new AjaxDropDownChoicePanel<>(\n-                \"propagationMode\", new ResourceModel(\"propagationMode\", \"propagationMode\").getObject(),\n-                new PropertyModel<PropagationMode>(resourceTO, \"propagationMode\"));\n-        propagationMode.setChoices(Arrays.asList(PropagationMode.values()));\n-        container.add(propagationMode);\n-\n-        final AjaxCheckBoxPanel randomPwdIfNotProvided = new AjaxCheckBoxPanel(\"randomPwdIfNotProvided\",\n+        container.add(new AjaxCheckBoxPanel(\"randomPwdIfNotProvided\",\n                 new ResourceModel(\"randomPwdIfNotProvided\", \"randomPwdIfNotProvided\").getObject(),\n-                new PropertyModel<Boolean>(resourceTO, \"randomPwdIfNotProvided\"));\n-        container.add(randomPwdIfNotProvided);\n-\n-        final AjaxDropDownChoicePanel<String> template\n-                = new AjaxDropDownChoicePanel<>(\"panel\", \"panel\", new Model<String>());\n-        template.setChoices(actionClassNames);\n-        template.setNullValid(true);\n-        template.setRequired(true);\n+                new PropertyModel<Boolean>(model, \"randomPwdIfNotProvided\"),\n+                false));\n \n-        final MultiFieldPanel<String> actions = new MultiFieldPanel<>(\n+        container.add(new MultiFieldPanel<>(\n                 \"actionsClasses\",\n                 \"actionsClasses\",\n-                new PropertyModel<List<String>>(resourceTO, \"propagationActionsClassNames\"),\n-                template, true);\n-\n-        container.add(actions);\n-\n-        final AjaxDropDownChoicePanel<TraceLevel> createTraceLevel = new AjaxDropDownChoicePanel<>(\n-                \"createTraceLevel\", new ResourceModel(\"createTraceLevel\", \"createTraceLevel\").getObject(),\n-                new PropertyModel<TraceLevel>(resourceTO, \"createTraceLevel\"));\n-        createTraceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n-        container.add(createTraceLevel);\n-\n-        final AjaxDropDownChoicePanel<TraceLevel> updateTraceLevel = new AjaxDropDownChoicePanel<>(\n-                \"updateTraceLevel\", new ResourceModel(\"updateTraceLevel\", \"updateTraceLevel\").getObject(),\n-                new PropertyModel<TraceLevel>(resourceTO, \"updateTraceLevel\"));\n-        updateTraceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n-        container.add(updateTraceLevel);\n-\n-        final AjaxDropDownChoicePanel<TraceLevel> deleteTraceLevel = new AjaxDropDownChoicePanel<>(\n-                \"deleteTraceLevel\", new ResourceModel(\"deleteTraceLevel\", \"deleteTraceLevel\").getObject(),\n-                new PropertyModel<TraceLevel>(resourceTO, \"deleteTraceLevel\"));\n-        deleteTraceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n-        container.add(deleteTraceLevel);\n-\n-        final AjaxDropDownChoicePanel<TraceLevel> syncTraceLevel = new AjaxDropDownChoicePanel<>(\n-                \"syncTraceLevel\", new ResourceModel(\"syncTraceLevel\", \"syncTraceLevel\").getObject(),\n-                new PropertyModel<TraceLevel>(resourceTO, \"syncTraceLevel\"));\n-        syncTraceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n-        container.add(syncTraceLevel);\n-\n-        final IModel<List<ConnInstanceTO>> connectors = new LoadableDetachableModel<List<ConnInstanceTO>>() {\n-\n-            private static final long serialVersionUID = 5275935387613157437L;\n-\n-            @Override\n-            protected List<ConnInstanceTO> load() {\n-                return connRestClient.getAllConnectors();\n-            }\n-        };\n-\n-        connInstanceTO = getConectorInstanceTO(connectors.getObject(), resourceTO);\n-\n-        final AjaxDropDownChoicePanel<ConnInstanceTO> conn = new AjaxDropDownChoicePanel<>(\"connector\",\n+                new PropertyModel<List<String>>(model, \"propagationActionsClassNames\"),\n+                new AjaxDropDownChoicePanel<>(\"panel\", \"panel\", new Model<String>()).\n+                setChoices(actionClassNames).setNullValid(true).setRequired(true),\n+                false));\n+\n+        container.add(new AjaxDropDownChoicePanel<>(\n+                \"createTraceLevel\",\n+                new ResourceModel(\"createTraceLevel\", \"createTraceLevel\").getObject(),\n+                new PropertyModel<TraceLevel>(model, \"createTraceLevel\"),\n+                false).\n+                setChoices(Arrays.asList(TraceLevel.values())));\n+\n+        container.add(new AjaxDropDownChoicePanel<>(\n+                \"updateTraceLevel\",\n+                new ResourceModel(\"updateTraceLevel\", \"updateTraceLevel\").getObject(),\n+                new PropertyModel<TraceLevel>(model, \"updateTraceLevel\"),\n+                false).\n+                setChoices(Arrays.asList(TraceLevel.values())));\n+\n+        container.add(new AjaxDropDownChoicePanel<>(\n+                \"deleteTraceLevel\",\n+                new ResourceModel(\"deleteTraceLevel\", \"deleteTraceLevel\").getObject(),\n+                new PropertyModel<TraceLevel>(model, \"deleteTraceLevel\"),\n+                false).\n+                setChoices(Arrays.asList(TraceLevel.values())));\n+\n+        container.add(new AjaxDropDownChoicePanel<>(\n+                \"syncTraceLevel\",\n+                new ResourceModel(\"syncTraceLevel\", \"syncTraceLevel\").getObject(),\n+                new PropertyModel<TraceLevel>(model, \"syncTraceLevel\"),\n+                false).\n+                setChoices(Arrays.asList(TraceLevel.values())));\n+\n+        container.add(new AjaxTextFieldPanel(\n+                \"connector\",\n                 new ResourceModel(\"connector\", \"connector\").getObject(),\n-                new PropertyModel<ConnInstanceTO>(this, \"connInstanceTO\"));\n-        conn.setChoices(connectors.getObject());\n-        conn.setChoiceRenderer(new ChoiceRenderer<ConnInstanceTO>(\"displayName\", \"key\"));\n-\n-        conn.getField().setModel(new IModel<ConnInstanceTO>() {\n-\n-            private static final long serialVersionUID = -4202872830392400310L;\n+                new Model<String>(model.getObject().getConnectorDisplayName()),\n+                false).addRequiredLabel().setEnabled(false));\n \n-            @Override\n-            public ConnInstanceTO getObject() {\n-                return connInstanceTO;\n-            }\n-\n-            @Override\n-            public void setObject(final ConnInstanceTO connector) {\n-                resourceTO.setConnector(connector.getKey());\n-                connInstanceTO = connector;\n-            }\n-\n-            @Override\n-            public void detach() {\n-            }\n-        });\n-\n-        conn.addRequiredLabel();\n-        conn.setEnabled(false);\n-\n-        conn.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n-\n-            private static final long serialVersionUID = -1107858522700306810L;\n-\n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                send(getPage(), Broadcast.BREADTH, new DetailsModEvent(target));\n-            }\n-        });\n-\n-        container.add(conn);\n-\n-        add(new AnnotatedBeanPanel(\"systeminformation\", resourceTO));\n-    }\n-\n-    /**\n-     * Get the connetorTO linked to the resource.\n-     *\n-     * @param connectorTOs list of all connectors.\n-     * @param resourceTO resource.\n-     * @return selected connector instance: in case of no connectors available, null; in case of new resource\n-     * specification, the first on connector available\n-     */\n-    private ConnInstanceTO getConectorInstanceTO(final List<ConnInstanceTO> connectorTOs, final ResourceTO resourceTO) {\n-        if (connectorTOs.isEmpty()) {\n-            resourceTO.setConnector(null);\n-            return null;\n-        } else {\n-            // use the first element as default\n-            ConnInstanceTO res = connectorTOs.get(0);\n-\n-            for (ConnInstanceTO to : connectorTOs) {\n-                if (Long.valueOf(to.getKey()).equals(resourceTO.getConnector())) {\n-                    res = to;\n-                }\n-            }\n-\n-            // in case of no match\n-            resourceTO.setConnector(res.getKey());\n-\n-            return res;\n-        }\n-    }\n-\n-    /**\n-     * Connector instance modification event.\n-     */\n-    public static class DetailsModEvent extends ModalEvent {\n-\n-        /**\n-         * Constructor.\n-         *\n-         * @param target request target.\n-         */\n-        public DetailsModEvent(final AjaxRequestTarget target) {\n-            super(target);\n-        }\n+        add(new AnnotatedBeanPanel(\"systeminformation\", model.getObject()));\n     }\n }"},{"sha":"46cc21f08827bedab6ae89bf230d47655266af3b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceMappingPanel.java","status":"modified","additions":0,"deletions":23,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceMappingPanel.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -22,12 +22,10 @@\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.Comparator;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.JexlHelpUtils;\n-import org.apache.syncope.client.console.panels.ResourceConnConfPanel.ConnConfModEvent;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n import org.apache.syncope.client.console.rest.SchemaRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n@@ -52,7 +50,6 @@\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n-import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n@@ -462,26 +459,6 @@ private void setEnabled() {\n         }\n     }\n \n-    @Override\n-    public void onEvent(final IEvent<?> event) {\n-        if (event.getPayload() instanceof ConnConfModEvent) {\n-            final AjaxRequestTarget target = ((ConnConfModEvent) event.getPayload()).getTarget();\n-\n-            final List<ConnConfProperty> conf = ((ConnConfModEvent) event.getPayload()).getConfiguration();\n-\n-            mappings.removeAll();\n-\n-            addMappingBtn.setEnabled(resourceTO.getConnector() != null && resourceTO.getConnector() > 0);\n-\n-            schemaNames.clear();\n-            schemaNames.addAll(getSchemaNames(resourceTO.getConnector(), new HashSet<ConnConfProperty>(conf)));\n-\n-            setEnabled();\n-\n-            target.add(this);\n-        }\n-    }\n-\n     /**\n      * Set attribute names for a drop down choice list.\n      *"},{"sha":"1f9ae6b5d0700cf785149bc8f9e0692c850fcf27","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceModal.java","status":"modified","additions":22,"deletions":14,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -20,11 +20,9 @@\n \n import static org.apache.wicket.Component.ENABLE;\n \n-import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.List;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Predicate;\n import org.apache.commons.lang3.SerializationUtils;\n@@ -44,9 +42,9 @@\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n-import org.apache.wicket.extensions.markup.html.tabs.ITab;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n \n /**\n@@ -61,26 +59,23 @@ public class ResourceModal extends AbstractResourceModal {\n     public ResourceModal(\n             final BaseModal<Serializable> modal,\n             final PageReference pageRef,\n-            final ResourceTO resourceTO,\n+            final IModel<ResourceTO> model,\n             final boolean createFlag) {\n \n         super(modal, pageRef);\n \n         this.createFlag = createFlag;\n \n-        final List<ITab> tabs = new ArrayList<>();\n-        add(new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", tabs));\n-\n         //--------------------------------\n         // Resource details panel\n         //--------------------------------\n-        tabs.add(new AbstractTab(new ResourceModel(\"resource\", \"resource\")) {\n+        tabs.add(new AbstractTab(new ResourceModel(\"general\", \"general\")) {\n \n             private static final long serialVersionUID = -5861786415855103549L;\n \n             @Override\n             public Panel getPanel(final String panelId) {\n-                return new ResourceDetailsPanel(panelId, resourceTO,\n+                return new ResourceDetailsPanel(panelId, model,\n                         resourceRestClient.getPropagationActionsClasses(), createFlag);\n             }\n         });\n@@ -90,7 +85,7 @@ public Panel getPanel(final String panelId) {\n         // Resource provision panels\n         //--------------------------------\n         final ListViewPanel.Builder<ProvisionTO> builder = ListViewPanel.builder(ProvisionTO.class, pageRef);\n-        builder.setItems(resourceTO.getProvisions());\n+        builder.setItems(model.getObject().getProvisions());\n         builder.includes(\"anyType\", \"objectClass\");\n \n         builder.addAction(new ActionLink<ProvisionTO>() {\n@@ -136,13 +131,13 @@ public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionT\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n-                resourceTO.getProvisions().remove(provisionTO);\n+                model.getObject().getProvisions().remove(provisionTO);\n                 send(pageRef.getPage(), Broadcast.DEPTH,\n                         new AjaxWizard.NewItemFinishEvent<ProvisionTO>(null, target));\n             }\n         }, ActionLink.ActionType.DELETE, Entitlement.RESOURCE_DELETE);\n \n-        builder.addNewItemPanelBuilder(new ProvisionWizardBuilder(\"wizard\", resourceTO, pageRef));\n+        builder.addNewItemPanelBuilder(new ProvisionWizardBuilder(\"wizard\", model.getObject(), pageRef));\n         builder.addNotificationPanel(modal.getFeedbackPanel());\n \n         tabs.add(new AbstractTab(new ResourceModel(\"provisions\", \"provisions\")) {\n@@ -165,7 +160,20 @@ public Panel getPanel(final String panelId) {\n \n             @Override\n             public Panel getPanel(final String panelId) {\n-                final ResourceConnConfPanel panel = new ResourceConnConfPanel(panelId, resourceTO, createFlag);\n+                final ResourceConnConfPanel panel = new ResourceConnConfPanel(panelId, model, createFlag) {\n+\n+                    private static final long serialVersionUID = 1L;\n+\n+                    @Override\n+                    protected void check(final AjaxRequestTarget target) {\n+                        if (connectorRestClient.check(model.getObject())) {\n+                            info(getString(\"success_connection\"));\n+                        } else {\n+                            error(getString(\"error_connection\"));\n+                        }\n+                        modal.getFeedbackPanel().refresh(target);\n+                    }\n+                };\n                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE, Entitlement.CONNECTOR_READ);\n                 return panel;\n             }\n@@ -181,7 +189,7 @@ public Panel getPanel(final String panelId) {\n \n             @Override\n             public Panel getPanel(final String panelId) {\n-                return new ResourceSecurityPanel(panelId, resourceTO);\n+                return new ResourceSecurityPanel(panelId, model);\n             }\n         });\n         //--------------------------------"},{"sha":"4aab37eea0cf049a4be5ade4793fe0e4682a4d5c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ResourceSecurityPanel.java","status":"modified","additions":18,"deletions":23,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceSecurityPanel.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -49,7 +49,7 @@ public class ResourceSecurityPanel extends Panel {\n \n     private IModel<Map<Long, String>> syncPolicies = null;\n \n-    public ResourceSecurityPanel(final String id, final ResourceTO resourceTO) {\n+    public ResourceSecurityPanel(final String id, final IModel<ResourceTO> model) {\n \n         super(id);\n \n@@ -105,48 +105,45 @@ protected Map<Long, String> load() {\n         // -------------------------------\n         // Password policy specification\n         // -------------------------------\n-        final AjaxDropDownChoicePanel<Long> passwordPolicy = new AjaxDropDownChoicePanel<Long>(\"passwordPolicy\",\n-                new ResourceModel(\"passwordPolicy\", \"passwordPolicy\").getObject(), new PropertyModel<Long>(resourceTO,\n-                        \"passwordPolicy\"));\n+        final AjaxDropDownChoicePanel<Long> passwordPolicy = new AjaxDropDownChoicePanel<Long>(\n+                \"passwordPolicy\",\n+                new ResourceModel(\"passwordPolicy\", \"passwordPolicy\").getObject(),\n+                new PropertyModel<Long>(model, \"passwordPolicy\"),\n+                false);\n \n         passwordPolicy.setChoiceRenderer(new PolicyRenderer(PolicyType.PASSWORD));\n-\n         passwordPolicy.setChoices(new ArrayList<>(passwordPolicies.getObject().keySet()));\n-\n         ((DropDownChoice<?>) passwordPolicy.getField()).setNullValid(true);\n-\n         container.add(passwordPolicy);\n         // -------------------------------\n \n         // -------------------------------\n         // Account policy specification\n         // -------------------------------\n-        final AjaxDropDownChoicePanel<Long> accountPolicy = new AjaxDropDownChoicePanel<Long>(\"accountPolicy\",\n-                new ResourceModel(\"accountPolicy\", \"accountPolicy\").getObject(), new PropertyModel<Long>(resourceTO,\n-                        \"accountPolicy\"));\n+        final AjaxDropDownChoicePanel<Long> accountPolicy = new AjaxDropDownChoicePanel<Long>(\n+                \"accountPolicy\",\n+                new ResourceModel(\"accountPolicy\", \"accountPolicy\").getObject(),\n+                new PropertyModel<Long>(model, \"accountPolicy\"),\n+                false);\n \n         accountPolicy.setChoiceRenderer(new PolicyRenderer(PolicyType.ACCOUNT));\n-\n         accountPolicy.setChoices(new ArrayList<Long>(accountPolicies.getObject().keySet()));\n-\n         ((DropDownChoice<?>) accountPolicy.getField()).setNullValid(true);\n-\n         container.add(accountPolicy);\n         // -------------------------------\n \n         // -------------------------------\n         // Sync policy specification\n         // -------------------------------\n-        final AjaxDropDownChoicePanel<Long> syncPolicy = new AjaxDropDownChoicePanel<Long>(\"syncPolicy\",\n-                new ResourceModel(\"syncPolicy\", \"syncPolicy\").getObject(), new PropertyModel<Long>(resourceTO,\n-                        \"syncPolicy\"));\n+        final AjaxDropDownChoicePanel<Long> syncPolicy = new AjaxDropDownChoicePanel<Long>(\n+                \"syncPolicy\",\n+                new ResourceModel(\"syncPolicy\", \"syncPolicy\").getObject(),\n+                new PropertyModel<Long>(model, \"syncPolicy\"),\n+                false);\n \n         syncPolicy.setChoiceRenderer(new PolicyRenderer(PolicyType.SYNC));\n-\n         syncPolicy.setChoices(new ArrayList<Long>(syncPolicies.getObject().keySet()));\n-\n         ((DropDownChoice<?>) syncPolicy.getField()).setNullValid(true);\n-\n         container.add(syncPolicy);\n         // -------------------------------\n     }\n@@ -155,7 +152,7 @@ private class PolicyRenderer extends ChoiceRenderer<Long> {\n \n         private static final long serialVersionUID = 8060500161321947000L;\n \n-        private PolicyType type;\n+        private final PolicyType type;\n \n         public PolicyRenderer(final PolicyType type) {\n             super();\n@@ -178,9 +175,7 @@ public Object getDisplayValue(final Long object) {\n \n         @Override\n         public String getIdValue(final Long object, final int index) {\n-            return String.valueOf(object != null\n-                    ? object\n-                    : 0L);\n+            return String.valueOf(object != null ? object : 0L);\n         }\n     };\n }"},{"sha":"95f3bab58a1fd3b9841f107b6fece9d737c76118","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ReportRestClient.java","status":"modified","additions":1,"deletions":17,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -20,11 +20,9 @@\n \n import java.util.List;\n import javax.ws.rs.core.Response;\n-import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.to.ReportTO;\n import org.apache.syncope.common.lib.types.ReportExecExportFormat;\n import org.apache.syncope.common.rest.api.service.ReportService;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n import org.springframework.stereotype.Component;\n \n @Component\n@@ -37,21 +35,7 @@ public ReportTO read(final Long reportId) {\n     }\n \n     public List<ReportTO> list() {\n-        return getService(ReportService.class).\n-                list(SyncopeClient.getListQueryBuilder().build()).\n-                getResult();\n-    }\n-\n-    public List<ReportTO> list(final int page, final int size, final SortParam<String> sort) {\n-        return getService(ReportService.class).\n-                list(SyncopeClient.getListQueryBuilder().page(page).size(size).orderBy(toOrderBy(sort)).build()).\n-                getResult();\n-    }\n-\n-    public int count() {\n-        return getService(ReportService.class).\n-                list(SyncopeClient.getListQueryBuilder().page(1).size(1).build()).\n-                getTotalCount();\n+        return getService(ReportService.class).list();\n     }\n \n     public void create(final ReportTO reportTO) {"},{"sha":"974b78c50d5709f82ce9cbb0856e263c304db290","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/TaskRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -62,7 +62,7 @@ public List<String> getPushActionsClasses() {\n      */\n     public int count(final String kind) {\n         return getService(TaskService.class).\n-                list(TaskType.fromString(kind), SyncopeClient.getListQueryBuilder().page(1).size(1).build()).\n+                list(TaskType.fromString(kind), SyncopeClient.getTaskQueryBuilder().page(1).size(1).build()).\n                 getTotalCount();\n     }\n \n@@ -71,7 +71,7 @@ public <T extends AbstractTaskTO> List<T> list(final Class<T> reference,\n             final int page, final int size, final SortParam<String> sort) {\n \n         return (List<T>) getService(TaskService.class).\n-                list(getTaskType(reference), SyncopeClient.getListQueryBuilder().page(page).size(size).\n+                list(getTaskType(reference), SyncopeClient.getTaskQueryBuilder().page(page).size(size).\n                         orderBy(toOrderBy(sort)).build()).\n                 getResult();\n     }"},{"sha":"5ad33a95d9bda781fa2a71db40e3b5af6cefbc0a","filename":"client/console/src/main/java/org/apache/syncope/client/console/themes/AdminLTE.java","status":"modified","additions":0,"deletions":14,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fthemes%2FAdminLTE.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fthemes%2FAdminLTE.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fthemes%2FAdminLTE.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -19,12 +19,6 @@\n package org.apache.syncope.client.console.themes;\n \n import de.agilecoders.wicket.core.settings.Theme;\n-import de.agilecoders.wicket.extensions.markup.html.bootstrap.jqueryui.JQueryUIAllJavaScriptReference;\n-import de.agilecoders.wicket.extensions.markup.html.bootstrap.jqueryui.JQueryUICoreJavaScriptReference;\n-import de.agilecoders.wicket.extensions.markup.html.bootstrap.jqueryui.JQueryUIDraggableJavaScriptReference;\n-import de.agilecoders.wicket.extensions.markup.html.bootstrap.jqueryui.JQueryUIMouseJavaScriptReference;\n-import de.agilecoders.wicket.extensions.markup.html.bootstrap.jqueryui.JQueryUIResizableJavaScriptReference;\n-import de.agilecoders.wicket.extensions.markup.html.bootstrap.jqueryui.JQueryUIWidgetJavaScriptReference;\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.wicket.markup.head.CssHeaderItem;\n@@ -44,14 +38,6 @@ public List<HeaderItem> getDependencies() {\n         references.add(JavaScriptHeaderItem.forReference(\n                 new JQueryPluginResourceReference(AdminLTE.class, \"js/AdminLTE-app.min.js\"), \"adminltejs\"));\n \n-        // Adds WebjarsJavaScriptResourceReference about JQuery\n-        references.add(JavaScriptHeaderItem.forReference(JQueryUIAllJavaScriptReference.instance()));\n-        references.add(JavaScriptHeaderItem.forReference(JQueryUICoreJavaScriptReference.instance()));\n-        references.add(JavaScriptHeaderItem.forReference(JQueryUIMouseJavaScriptReference.instance()));\n-        references.add(JavaScriptHeaderItem.forReference(JQueryUIWidgetJavaScriptReference.instance()));\n-        references.add(JavaScriptHeaderItem.forReference(JQueryUIResizableJavaScriptReference.instance()));\n-        references.add(JavaScriptHeaderItem.forReference(JQueryUIDraggableJavaScriptReference.instance()));\n-\n         references.add(CssHeaderItem.forReference(AdminLTECssResourceReference.INSTANCE));\n         references.addAll(super.getDependencies());\n         return references;"},{"sha":"8a68ca38fd45a9d8b38700785b783648e3401fa3","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyNodePanel.java","status":"modified","additions":17,"deletions":8,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyNodePanel.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -45,6 +45,8 @@\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.Logger;\n@@ -130,10 +132,12 @@ private Fragment getLocationFragment(final TopologyNode node, final PageReferenc\n \n             @Override\n             public void onClickInternal(final AjaxRequestTarget target) {\n-                final ConnInstanceTO model = new ConnInstanceTO();\n-                model.setLocation(node.getKey().toString());\n+                final ConnInstanceTO modelObject = new ConnInstanceTO();\n+                modelObject.setLocation(node.getKey().toString());\n \n+                final IModel<ConnInstanceTO> model = new CompoundPropertyModel<>(modelObject);\n                 modal.setFormModel(model);\n+\n                 target.add(modal.setContent(new ConnectorModal(modal, pageRef, model)));\n \n                 modal.header(new Model<String>(MessageFormat.format(getString(\"connector.new\"), node.getKey())));\n@@ -180,11 +184,13 @@ public void onClickInternal(final AjaxRequestTarget target) {\n \n             @Override\n             public void onClickInternal(final AjaxRequestTarget target) {\n-                final ResourceTO model = new ResourceTO();\n-                model.setConnector(Long.class.cast(node.getKey()));\n-                model.setConnectorDisplayName(node.getDisplayName());\n+                final ResourceTO modelObject = new ResourceTO();\n+                modelObject.setConnector(Long.class.cast(node.getKey()));\n+                modelObject.setConnectorDisplayName(node.getDisplayName());\n \n+                final IModel<ResourceTO> model = new CompoundPropertyModel<>(modelObject);\n                 modal.setFormModel(model);\n+\n                 target.add(modal.setContent(new ResourceModal(modal, pageRef, model, true)));\n \n                 modal.header(new Model<String>(MessageFormat.format(getString(\"resource.new\"), node.getKey())));\n@@ -205,9 +211,11 @@ public void onClickInternal(final AjaxRequestTarget target) {\n \n             @Override\n             public void onClickInternal(final AjaxRequestTarget target) {\n-                final ConnInstanceTO model = connectorRestClient.read(Long.class.cast(node.getKey()));\n+                final ConnInstanceTO modelObject = connectorRestClient.read(Long.class.cast(node.getKey()));\n \n+                final IModel<ConnInstanceTO> model = new CompoundPropertyModel<>(modelObject);\n                 modal.setFormModel(model);\n+\n                 target.add(modal.setContent(new ConnectorModal(modal, pageRef, model)));\n \n                 modal.header(new Model<String>(MessageFormat.format(getString(\"connector.edit\"), node.getKey())));\n@@ -254,10 +262,11 @@ public void onClickInternal(final AjaxRequestTarget target) {\n \n             @Override\n             public void onClickInternal(final AjaxRequestTarget target) {\n+                final ResourceTO modelObject = resourceRestClient.read(node.getKey().toString());\n \n-                final ResourceTO model = resourceRestClient.read(node.getKey().toString());\n-\n+                final IModel<ResourceTO> model = new CompoundPropertyModel<>(modelObject);\n                 modal.setFormModel(model);\n+\n                 target.add(modal.setContent(new ResourceModal(modal, pageRef, model, false)));\n \n                 modal.header(new Model<String>(MessageFormat.format(getString(\"resource.edit\"), node.getKey())));"},{"sha":"124b09625a2b576d9a4e7269a21723c9c6a8b402","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -40,6 +40,7 @@\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -117,6 +118,11 @@ public BaseModal<T> setFormModel(final T modelObject) {\n         return this;\n     }\n \n+    public BaseModal<T> setFormModel(final IModel<T> model) {\n+        form.setModel(model);\n+        return this;\n+    }\n+\n     public T getFormModel() {\n         return form.getModelObject();\n     }"},{"sha":"1f58760aed3bd5ee187b4007feb6560000acf59d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AbstractFieldPanel.java","status":"modified","additions":65,"deletions":3,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -18,8 +18,11 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n+import org.apache.commons.lang3.StringUtils;\n import org.apache.wicket.Component;\n import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.FormComponent;\n+import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n@@ -35,12 +38,23 @@\n \n     private static final long serialVersionUID = 5958017546318855690L;\n \n-    protected final String name;\n+    private static final String LABEL = \"field-label\";\n+\n+    private static final String EXTERNAL_ACTION = \"externalAction\";\n+\n+    private static final String EXTERNAL_ACTION_ICON = \"externalActionIcon\";\n+\n+    protected boolean isRequiredLabelAdded = false;\n+\n+    protected String name;\n \n     public AbstractFieldPanel(final String id, final String name, final IModel<T> model) {\n         super(id, model);\n         this.name = name;\n \n+        add(new Fragment(\"required\", \"emptyFragment\", AbstractFieldPanel.this));\n+        add(new Fragment(\"externalAction\", \"emptyFragment\", AbstractFieldPanel.this));\n+\n         addLabel();\n         setOutputMarkupId(true);\n     }\n@@ -50,18 +64,66 @@ public final AbstractFieldPanel<T> addLabel() {\n     }\n \n     public final AbstractFieldPanel<T> addLabel(final String name) {\n-        addOrReplace(new Label(\"field-label\", new ResourceModel(name, name)));\n+        addOrReplace(new Label(LABEL, new ResourceModel(name, name)));\n         return this;\n     }\n \n     public AbstractFieldPanel<T> hideLabel() {\n-        final Component label = get(\"field-label\");\n+        final Component label = get(LABEL);\n \n         if (label != null) {\n             label.setVisible(false);\n         }\n+\n+        return this;\n+    }\n+\n+    public AbstractFieldPanel<T> showExternAction(final FormComponent<?> component) {\n+        final Fragment fragment = new Fragment(\"externalAction\", \"externalActionFragment\", AbstractFieldPanel.this);\n+        addOrReplace(fragment);\n+        fragment.add(component.setRenderBodyOnly(false));\n+        return this;\n+    }\n+\n+    public boolean isRequired() {\n+        return false;\n+    }\n+\n+    public AbstractFieldPanel<T> setRequired(final boolean required) {\n         return this;\n     }\n \n+    public AbstractFieldPanel<T> addRequiredLabel() {\n+        if (!isRequired()) {\n+            setRequired(true);\n+        }\n+\n+        final Fragment fragment = new Fragment(\"required\", \"requiredFragment\", this);\n+        fragment.add(new Label(\"requiredLabel\", \"*\"));\n+        replace(fragment);\n+\n+        this.isRequiredLabelAdded = true;\n+\n+        return this;\n+    }\n+\n+    public AbstractFieldPanel<T> removeRequiredLabel() {\n+        if (isRequired()) {\n+            setRequired(false);\n+        }\n+\n+        final Fragment fragment = new Fragment(\"required\", \"emptyFragment\", this);\n+\n+        replace(fragment);\n+\n+        this.isRequiredLabelAdded = false;\n+\n+        return this;\n+    }\n+\n+    protected String externalActionIcon() {\n+        return StringUtils.EMPTY;\n+    }\n+\n     public abstract AbstractFieldPanel<T> setModelObject(T object);\n }"},{"sha":"789a8e17eed15b9042a46c28de380db6088b5d3b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxCheckBoxPanel.java","status":"modified","additions":1,"deletions":16,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -23,12 +23,10 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.CheckBox;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.ResourceModel;\n \n public class AjaxCheckBoxPanel extends FieldPanel<Boolean> {\n \n@@ -40,7 +38,7 @@ public AjaxCheckBoxPanel(final String id, final String name, final IModel<Boolea\n \n     public AjaxCheckBoxPanel(\n             final String id, final String name, final IModel<Boolean> model, final boolean enableOnChange) {\n-        super(id, model);\n+        super(id, name, model);\n \n         field = new CheckBox(\"checkboxField\", model);\n         add(field.setLabel(new Model<String>(name)).setOutputMarkupId(true));\n@@ -56,19 +54,6 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 }\n             });\n         }\n-\n-        add(new Label(\"label\", new ResourceModel(name, name)));\n-    }\n-\n-    @Override\n-    public FieldPanel<Boolean> addRequiredLabel() {\n-        if (!isRequired()) {\n-            setRequired(true);\n-        }\n-\n-        this.isRequiredLabelAdded = true;\n-\n-        return this;\n     }\n \n     @Override"},{"sha":"a8315202358f41df99eaa6a0b77cbe49278037f6","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxPasswordFieldPanel.java","status":"modified","additions":9,"deletions":4,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -23,19 +23,24 @@\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.markup.html.form.PasswordTextField;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n \n public class AjaxPasswordFieldPanel extends FieldPanel<String> {\n \n     private static final long serialVersionUID = -5490115280336667460L;\n \n     public AjaxPasswordFieldPanel(final String id, final String name, final IModel<String> model) {\n-        super(id, model);\n+        this(id, name, model, true);\n+    }\n+\n+    public AjaxPasswordFieldPanel(\n+            final String id, final String name, final IModel<String> model, final boolean enableOnChange) {\n+        super(id, name, model);\n \n         field = new PasswordTextField(\"passwordField\", model);\n-        add(field.setLabel(new Model<>(name)).setRequired(false).setOutputMarkupId(true));\n+        add(field.setLabel(new ResourceModel(name, name)).setRequired(false).setOutputMarkupId(true));\n \n-        if (!isReadOnly()) {\n+        if (enableOnChange && !isReadOnly()) {\n             field.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n \n                 private static final long serialVersionUID = -1107858522700306810L;"},{"sha":"59a2c002fb29ee5871ff290d86b627ad992291db","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxTextFieldPanel.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -28,7 +28,6 @@\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteSettings;\n import org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteTextField;\n-import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.validation.IValidator;\n@@ -45,7 +44,7 @@ public AjaxTextFieldPanel(final String id, final String name, final IModel<Strin\n \n     public AjaxTextFieldPanel(\n             final String id, final String name, final IModel<String> model, final boolean enableOnChange) {\n-        super(id, model);\n+        super(id, name, model);\n \n         final AutoCompleteSettings settings = new AutoCompleteSettings();\n         settings.setShowCompleteListOnFocusGain(true);\n@@ -84,8 +83,6 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 }\n             });\n         }\n-\n-        add(new Label(\"label\", new ResourceModel(name, name)));\n     }\n \n     public void addValidator(final IValidator<? super String> validator) {"},{"sha":"89970f8e0a9b4c41c2af032d83b58ced1907a622","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/FieldPanel.java","status":"modified","additions":2,"deletions":35,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -23,10 +23,8 @@\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.wicket.AttributeModifier;\n-import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.FormComponent;\n import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n@@ -39,17 +37,12 @@\n \n     protected String title = null;\n \n-    protected boolean isRequiredLabelAdded = false;\n-\n     public FieldPanel(final String id, final IModel<T> model) {\n         this(id, id, model);\n     }\n \n     public FieldPanel(final String id, final String name, final IModel<T> model) {\n         super(id, name, model);\n-\n-        final Fragment fragment = new Fragment(\"required\", \"notRequiredFragment\", this);\n-        add(fragment);\n     }\n \n     public FormComponent<T> getField() {\n@@ -75,6 +68,7 @@ public FieldPanel<T> setStyleSheet(final String... classes) {\n         return this;\n     }\n \n+    @Override\n     public FieldPanel<T> setRequired(final boolean required) {\n         field.setRequired(required);\n         return this;\n@@ -85,6 +79,7 @@ public FieldPanel<T> setReadOnly(final boolean readOnly) {\n         return this;\n     }\n \n+    @Override\n     public boolean isRequired() {\n         return field.isRequired();\n     }\n@@ -93,34 +88,6 @@ public boolean isReadOnly() {\n         return !field.isEnabled();\n     }\n \n-    public FieldPanel<T> addRequiredLabel() {\n-        if (!isRequired()) {\n-            setRequired(true);\n-        }\n-\n-        final Fragment fragment = new Fragment(\"required\", \"requiredFragment\", this);\n-        fragment.add(new Label(\"requiredLabel\", \"*\"));\n-        replace(fragment);\n-\n-        this.isRequiredLabelAdded = true;\n-\n-        return this;\n-    }\n-\n-    public FieldPanel<T> removeRequiredLabel() {\n-        if (isRequired()) {\n-            setRequired(false);\n-        }\n-\n-        final Fragment fragment = new Fragment(\"required\", \"notRequiredFragment\", this);\n-\n-        replace(fragment);\n-\n-        this.isRequiredLabelAdded = false;\n-\n-        return this;\n-    }\n-\n     @Override\n     public FieldPanel<T> setModelObject(final T object) {\n         field.setModelObject(object);"},{"sha":"3370cd7bf315f7e0549d9e5c3f4448cc60efcfae","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/SpinnerFieldPanel.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSpinnerFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSpinnerFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSpinnerFieldPanel.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -26,8 +26,6 @@\n \n     private static final long serialVersionUID = 6413819574530703577L;\n \n-    private String name;\n-\n     private Class<T> reference;\n \n     private IModel<T> model;"},{"sha":"3691171ec0e597cd0ee49a8449284d6e5fbee9da","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/list/AltListView.java","status":"removed","additions":0,"deletions":59,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6f67940385ee969cbef7bd360d385badbc3c055f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FAltListView.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6f67940385ee969cbef7bd360d385badbc3c055f/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FAltListView.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FAltListView.java?ref=6f67940385ee969cbef7bd360d385badbc3c055f","patch":"@@ -1,59 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.wicket.markup.html.list;\n-\n-import java.util.List;\n-import org.apache.wicket.markup.ComponentTag;\n-import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.markup.html.list.ListView;\n-import org.apache.wicket.model.IModel;\n-\n-public abstract class AltListView<T> extends ListView<T> {\n-\n-    private static final long serialVersionUID = 251378224847354710L;\n-\n-    public AltListView(final String id) {\n-        super(id);\n-    }\n-\n-    public AltListView(final String id, final IModel<? extends List<T>> model) {\n-        super(id, model);\n-    }\n-\n-    public AltListView(final String id, final List<T> list) {\n-        super(id, list);\n-    }\n-\n-    @Override\n-    protected ListItem<T> newItem(final int index, final IModel<T> itemModel) {\n-        return new ListItem<T>(index, itemModel) {\n-\n-            private static final long serialVersionUID = 5473483270932376694L;\n-\n-            @Override\n-            protected void onComponentTag(final ComponentTag tag) {\n-                if (index % 2 == 0) {\n-                    tag.append(\"class\", \"alt\", \" \");\n-                }\n-\n-                super.onComponentTag(tag);\n-            }\n-        };\n-    }\n-}"},{"sha":"e71365f9963a32e7af7a2032c44b10847bd693fa","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/list/ConnConfPropertyListView.java","status":"modified","additions":73,"deletions":36,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Flist%2FConnConfPropertyListView.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -18,43 +18,50 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.list;\n \n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.checkbox.bootstraptoggle.BootstrapToggle;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.form.checkbox.bootstraptoggle.BootstrapToggleConfig;\n import java.io.Serializable;\n import java.util.List;\n-import java.util.Set;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AbstractFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPasswordFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MultiFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.SpinnerFieldPanel;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.CheckBox;\n+import org.apache.wicket.markup.html.form.FormComponent;\n import org.apache.wicket.markup.html.form.PasswordTextField;\n import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.util.ClassUtils;\n \n-public class ConnConfPropertyListView extends AltListView<ConnConfProperty> {\n+public class ConnConfPropertyListView extends ListView<ConnConfProperty> {\n \n     private static final long serialVersionUID = -5239334900329150316L;\n \n     private static final Logger LOG = LoggerFactory.getLogger(ConnConfPropertyListView.class);\n \n     private final boolean withOverridable;\n \n-    private final Set<ConnConfProperty> configuration;\n-\n-    public ConnConfPropertyListView(final String id, final IModel<? extends List<ConnConfProperty>> model,\n-            final boolean withOverridable, final Set<ConnConfProperty> configuration) {\n+    public ConnConfPropertyListView(\n+            final String id,\n+            final IModel<? extends List<ConnConfProperty>> model,\n+            final boolean withOverridable) {\n \n         super(id, model);\n-        this.configuration = configuration;\n         this.withOverridable = withOverridable;\n     }\n \n@@ -63,22 +70,20 @@ public ConnConfPropertyListView(final String id, final IModel<? extends List<Con\n     protected void populateItem(final ListItem<ConnConfProperty> item) {\n         final ConnConfProperty property = item.getModelObject();\n \n-        final Label label = new Label(\"connPropAttrSchema\",\n-                StringUtils.isBlank(property.getSchema().getDisplayName())\n-                        ? property.getSchema().getName()\n-                        : property.getSchema().getDisplayName());\n+        final Label label = new Label(\"connPropAttrSchema\", StringUtils.isBlank(property.getSchema().getDisplayName())\n+                ? property.getSchema().getName() : property.getSchema().getDisplayName());\n         item.add(label);\n \n-        FieldPanel<? extends Serializable> field;\n+        final FieldPanel<? extends Serializable> field;\n         boolean required = false;\n         boolean isArray = false;\n \n         if (property.getSchema().isConfidential()\n                 || Constants.GUARDED_STRING.equalsIgnoreCase(property.getSchema().getType())\n                 || Constants.GUARDED_BYTE_ARRAY.equalsIgnoreCase(property.getSchema().getType())) {\n \n-            field = new AjaxPasswordFieldPanel(\"panel\",\n-                    label.getDefaultModelObjectAsString(), new Model<String>());\n+            field = new AjaxPasswordFieldPanel(\n+                    \"panel\", label.getDefaultModelObjectAsString(), new Model<String>(), false);\n             ((PasswordTextField) field.getField()).setResetPassword(false);\n \n             required = property.getSchema().isRequired();\n@@ -90,25 +95,24 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n                 if (ClassUtils.isPrimitiveOrWrapper(propertySchemaClass)) {\n                     propertySchemaClass = org.apache.commons.lang3.ClassUtils.primitiveToWrapper(propertySchemaClass);\n                 }\n-            } catch (Exception e) {\n+            } catch (ClassNotFoundException e) {\n                 LOG.error(\"Error parsing attribute type\", e);\n                 propertySchemaClass = String.class;\n             }\n \n             if (ClassUtils.isAssignable(Number.class, propertySchemaClass)) {\n                 @SuppressWarnings(\"unchecked\")\n                 final Class<Number> numberClass = (Class<Number>) propertySchemaClass;\n-                field = new SpinnerFieldPanel<Number>(\"panel\",\n-                        label.getDefaultModelObjectAsString(), numberClass, new Model<Number>(), null, null);\n+                field = new SpinnerFieldPanel<Number>(\n+                        \"panel\", label.getDefaultModelObjectAsString(), numberClass, new Model<Number>());\n \n                 required = property.getSchema().isRequired();\n             } else if (ClassUtils.isAssignable(Boolean.class, propertySchemaClass)) {\n-                field = new AjaxCheckBoxPanel(\"panel\",\n-                        label.getDefaultModelObjectAsString(), new Model<Boolean>());\n+                field = new AjaxCheckBoxPanel(\n+                        \"panel\", label.getDefaultModelObjectAsString(), new Model<Boolean>(), false);\n             } else {\n-                field = new AjaxTextFieldPanel(\"panel\",\n-                        label.getDefaultModelObjectAsString(), new Model<String>());\n-\n+                field = new AjaxTextFieldPanel(\n+                        \"panel\", label.getDefaultModelObjectAsString(), new Model<String>(), false);\n                 required = property.getSchema().isRequired();\n             }\n \n@@ -119,34 +123,67 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n \n         field.setTitle(property.getSchema().getHelpMessage());\n \n-        if (required) {\n-            field.addRequiredLabel();\n-        }\n-\n+        final AbstractFieldPanel<? extends Serializable> fieldPanel;\n         if (isArray) {\n-            if (property.getValues().isEmpty()) {\n-                property.getValues().add(null);\n-            }\n-\n-            final MultiFieldPanel multiFieldPanel = new MultiFieldPanel(\"panel\", \"connPropAttrSchema\",\n-                    new PropertyModel<List<String>>(property, \"values\"), field);\n+            final MultiFieldPanel multiFieldPanel = new MultiFieldPanel(\n+                    \"panel\",\n+                    label.getDefaultModelObjectAsString(),\n+                    new PropertyModel<List<String>>(property, \"values\"),\n+                    field, true);\n             item.add(multiFieldPanel);\n+            fieldPanel = multiFieldPanel;\n         } else {\n             setNewFieldModel(field, property.getValues());\n             item.add(field);\n+            fieldPanel = field;\n         }\n \n-        if (withOverridable) {\n-            item.add(new AjaxCheckBoxPanel(\"connPropAttrOverridable\",\n-                    \"connPropAttrOverridable\", new PropertyModel<Boolean>(property, \"overridable\")));\n+        if (required) {\n+            fieldPanel.addRequiredLabel();\n         }\n \n-        configuration.add(property);\n+        if (withOverridable) {\n+            fieldPanel.showExternAction(addCheckboxToggle(property));\n+        }\n     }\n \n     @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     private void setNewFieldModel(final FieldPanel field, final List<Object> values) {\n         field.setNewModel(values);\n     }\n \n+    private FormComponent<?> addCheckboxToggle(final ConnConfProperty property) {\n+\n+        final BootstrapToggleConfig config = new BootstrapToggleConfig();\n+        config\n+                .withOnStyle(BootstrapToggleConfig.Style.info).withOffStyle(BootstrapToggleConfig.Style.warning)\n+                .withSize(BootstrapToggleConfig.Size.mini)\n+                .withOnLabel(\"Overridable\")\n+                .withOffLabel(\"Not Overridable\");\n+\n+        return new BootstrapToggle(\"externalAction\", new PropertyModel<Boolean>(property, \"overridable\"), config) {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            @Override\n+            protected CheckBox newCheckBox(final String id, final IModel<Boolean> model) {\n+                final CheckBox checkBox = super.newCheckBox(id, model);\n+                checkBox.add(new AjaxFormComponentUpdatingBehavior(\"change\") {\n+\n+                    private static final long serialVersionUID = 1L;\n+\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                    }\n+                });\n+                return checkBox;\n+            }\n+\n+            @Override\n+            protected void onComponentTag(final ComponentTag tag) {\n+                super.onComponentTag(tag);\n+                tag.append(\"class\", \"overridable\", \" \");\n+            }\n+        };\n+    }\n }"},{"sha":"c3729bd548fcad51c0a7a4720b855bca76a60902","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/provision/ProvisionWizardBuilder.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fprovision%2FProvisionWizardBuilder.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -194,12 +194,12 @@ protected void onUpdate(final AjaxRequestTarget target) {\n      * Construct.\n      *\n      * @param id The component id\n-     * @param resourceTO external resource to be updated.\n+     * @param resurceTO external resource to be updated.\n      * @param pageRef Caller page reference.\n      */\n-    public ProvisionWizardBuilder(final String id, final ResourceTO resourceTO, final PageReference pageRef) {\n+    public ProvisionWizardBuilder(final String id, final ResourceTO resurceTO, final PageReference pageRef) {\n         super(id, new ProvisionTO(), pageRef);\n-        this.resourceTO = resourceTO;\n+        this.resourceTO = resurceTO;\n     }\n \n     @Override"},{"sha":"dbf377cd001935a06fbae6912da6ec432556c9c0","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -212,3 +212,9 @@ div.realms div.summarize {\n .navbar a {\n   height: 55px\n }\n+\n+span.overridable div.checkbox {\n+  float: right; \n+  margin: 0px; \n+  padding: 0px;\n+}"},{"sha":"0a3802f5c96eb4ef6c2d882bfb98dd8eb58e60c4","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AbstractConnectorConfPanel.html","status":"renamed","additions":16,"deletions":18,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractConnectorConfPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractConnectorConfPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractConnectorConfPanel.html?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -17,24 +17,22 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:panel>\n-    <span wicket:id=\"connectorPropertiesContainer\">\n-      <div id=\"formtable\">\n-        <div class=\"tablerow\" wicket:id=\"connectorProperties\">\n-          <div class=\"tablecolumn_label medium_fixedsize\">\n-            <span wicket:id=\"connPropAttrSchema\">[connPropAttrSchema]</span>\n-          </div>\n-          <div class=\"tablecolumn_field medium_dynamicsize\">\n-            <span wicket:id=\"panel\">[connPropAttrValue]</span>\n-          </div>\n+  <head>\n+    <title>Connector configuration panel</title>\n+  </head>\n+  <body>\n+    <wicket:panel>\n+      <span wicket:id=\"connectorPropertiesContainer\">\n+        <div class=\"form-group\" wicket:id=\"connectorProperties\">\n+          <span wicket:id=\"panel\">[panel]</span>\n         </div>\n-      </div>\n \n-      <div>\n-        <a style=\"position: absolute; top: 2px; right:20px;\" wicket:id=\"check\">\n-          <i class=\"fa fa-heartbeat fa-2x\"></i> \n-        </a>\n-      </div>\n-    </span>\n-  </wicket:panel>\n+        <div>\n+          <a style=\"position: absolute; top: 25px; right:20px;\" wicket:id=\"check\"  href=\"#\">\n+            <i class=\"fa fa-heartbeat fa-2x\"></i>\n+          </a>\n+        </div>\n+      </span>\n+    </wicket:panel>\n+  </body>\n </html>","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceConnConfPanel.html"},{"sha":"bd4cd4b1dcf971ea6770e46d6a8c26be9a9518cd","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AbstractResourceModal.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractResourceModal.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractResourceModal.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractResourceModal.html?ref=b56c08eebf369416d4418b607c80691ca47b55e4","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModal.html"},{"sha":"b5aa95df7d107ccbc2ea525bd416c0193dc36a09","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ConnectorCapabilitiesPanel.html","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorCapabilitiesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorCapabilitiesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorCapabilitiesPanel.html?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -0,0 +1,28 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head>\n+    <title>Connector capabilities panel</title>\n+  </head>\n+  <body>\n+    <wicket:panel>\n+      <span wicket:id=\"capabilitiesPalette\"/> \n+    </wicket:panel>\n+  </body>\n+</html>"},{"sha":"390176cc3b325d78e9df56b76b748335f6c7d1b1","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ConnectorDetailsPanel.html","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorDetailsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorDetailsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorDetailsPanel.html?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -0,0 +1,61 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head>\n+    <title>Connector details panel</title>\n+  </head>\n+  <body>\n+    <wicket:panel>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"displayName\">[displayName]</span>\n+      </div>\n+\n+      <div class=\"form-group\">\n+        <span wicket:id=\"location\">[location]</span>\n+      </div>\n+\n+      <div class=\"form-group\">\n+        <span wicket:id=\"connectorName\">[connectorName]</span>\n+      </div>\n+\n+      <div class=\"form-group\">\n+        <span wicket:id=\"version\">[version]</span>\n+      </div>\n+\n+      <div class=\"form-group\" style=\"padding: 30px 0px 0px 0px\">\n+        <table class=\"table\">\n+          <tbody>\n+            <tr>\n+              <td><span wicket:id=\"connRequestTimeout\">[connRequestTimeout]</span></td>\n+              <td><span wicket:id=\"poolMaxObjects\">[poolMaxObjects]</span></td>\n+            </tr>\n+            <tr>\n+              <td><span wicket:id=\"poolMinIdle\">[poolMinIdle]</span></td>\n+              <td><span wicket:id=\"poolMaxIdle\">[poolMaxIdle]</span></td>\n+            </tr>\n+            <tr>\n+              <td><span wicket:id=\"poolMaxWait\">[poolMaxWait]</span></td>\n+              <td><span wicket:id=\"poolMinEvictableIdleTime\">[poolMinEvictableIdleTime]</span></td>\n+            </tr>\n+          </tbody>\n+        </table>\n+      </div>\n+    </wicket:panel>\n+  </body>\n+</html>"},{"sha":"2580a9176c06c812885df38a9095cc32a1c4c28a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ConnectorModal.html","status":"removed","additions":0,"deletions":147,"changes":147,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6f67940385ee969cbef7bd360d385badbc3c055f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6f67940385ee969cbef7bd360d385badbc3c055f/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.html?ref=6f67940385ee969cbef7bd360d385badbc3c055f","patch":"@@ -1,147 +0,0 @@\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:extend>\n-    <div class=\"tabbable tabs-left\">\n-      <ul class=\"nav nav-tabs\">\n-        <li class=\"active\"><a  data-toggle=\"tab\" href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n-        <li><a  data-toggle=\"tab\" href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n-        <li><a  data-toggle=\"tab\" href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n-      </ul>\n-      <div class=\"tab-content\">\n-        <div id=\"tabs-1\" class=\"tab-pane active\">\n-          <div id=\"formtable\">\n-            <div class=\"tablerow alt\">\n-              <div class=\"tablecolumn_label short_dynamicsize\">\n-                <label for=\"displayName\"><wicket:message key=\"displayName\"/></label>\n-              </div>\n-              <div class=\"tablecolumn_field short_dynamicsize\">\n-                <span wicket:id=\"displayName\">[displayName]</span>\n-              </div>\n-            </div>\n-\n-            <div class=\"tablerow\">\n-              <div class=\"tablecolumn_label short_dynamicsize\">\n-                <label for=\"location\"><wicket:message key=\"location\"/></label>\n-              </div>\n-              <div class=\"tablecolumn_field short_dynamicsize\">\n-                <span wicket:id=\"location\">[location]</span>\n-              </div>\n-            </div>\n-\n-            <div class=\"tablerow alt\">\n-              <div class=\"tablecolumn_label short_dynamicsize\">\n-                <label for=\"name\"><wicket:message key=\"name\"/></label>\n-              </div>\n-              <div class=\"tablecolumn_field medium_dynamicsize\">\n-                <span wicket:id=\"connectorName\">[connectorName]</span>\n-              </div>\n-            </div>\n-\n-            <div class=\"tablerow\">\n-              <div class=\"tablecolumn_label short_dynamicsize\">\n-                <label for=\"version\"><wicket:message key=\"version\"/></label>\n-              </div>\n-              <div class=\"tablecolumn_field short_dynamicsize\">\n-                <span wicket:id=\"version\">[version]</span>\n-              </div>\n-            </div>\n-          </div>\n-          <div style=\"display: table; border: 1px solid #BBBBBB;\">\n-            <div class=\"tablerow2 alt\">\n-              <div class=\"tablecolumn2_label short_dynamicsize\">\n-                <label for=\"connRequestTimeout\"><wicket:message key=\"connRequestTimeout\"/></label>\n-              </div>\n-              <div class=\"tablecolumn2_field short_dynamicsize\">\n-                <span wicket:id=\"connRequestTimeout\">[connRequestTimeout]</span>\n-              </div>\n-              <div class=\"tablecolumn2_label short_dynamicsize\">\n-                <label for=\"poolMaxObjects\"><wicket:message key=\"poolMaxObjects\"/></label>\n-              </div>\n-              <div class=\"tablecolumn2_field short_dynamicsize\">\n-                <span wicket:id=\"poolMaxObjects\">[poolMaxObjects]</span>\n-              </div>\n-            </div>\n-            <div class=\"tablerow2\">\n-              <div class=\"tablecolumn2_label short_dynamicsize\">\n-                <label for=\"poolMinIdle\"><wicket:message key=\"poolMinIdle\"/></label>\n-              </div>\n-              <div class=\"tablecolumn2_field short_dynamicsize\">\n-                <span wicket:id=\"poolMinIdle\">[poolMinIdle]</span>\n-              </div>\n-              <div class=\"tablecolumn2_label short_dynamicsize\">\n-                <label for=\"poolMaxIdle\"><wicket:message key=\"poolMaxIdle\"/></label>\n-              </div>\n-              <div class=\"tablecolumn2_field short_dynamicsize\">\n-                <span wicket:id=\"poolMaxIdle\">[poolMaxIdle]</span>\n-              </div>\n-            </div>\n-            <div class=\"tablerow2 alt\">\n-              <div class=\"tablecolumn2_label short_dynamicsize\">\n-                <label for=\"poolMaxWait\"><wicket:message key=\"poolMaxWait\"/></label>\n-              </div>\n-              <div class=\"tablecolumn2_field short_dynamicsize\">\n-                <span wicket:id=\"poolMaxWait\">[poolMaxWait]</span>\n-              </div>\n-              <div class=\"tablecolumn2_label short_dynamicsize\">\n-                <label for=\"poolMinEvictableIdleTime\"><wicket:message key=\"poolMinEvictableIdleTime\"/></label>\n-              </div>\n-              <div class=\"tablecolumn2_field short_dynamicsize\">\n-                <span wicket:id=\"poolMinEvictableIdleTime\">[poolMinEvictableIdleTime]</span>\n-              </div>\n-            </div>\n-          </div>\n-        </div>\n-        <div id=\"tabs-2\" class=\"tab-pane\">\n-          <div id=\"formtable\">\n-            <span wicket:id=\"container\">\n-              <div style=\"border-bottom: 10px\">\n-                <div style=\"width: 40px; text-align: center; font-size: 7px\">\n-                  <label for=\"version\"><wicket:message key=\"overridable\"/></label>\n-                </div>\n-              </div>\n-              <form wicket:id=\"connectorPropForm\">\n-                <div class=\"tablerow connectorProp\" wicket:id=\"connectorProperties\">\n-                  <div class=\"tablecolumn_check\" style=\"width: 27px; text-align: center; margin-right: 10px\">\n-                    <span wicket:id=\"connPropAttrOverridable\">[connPropAttrOverridable]</span>\n-                  </div>\n-                  <div class=\"tablecolumn_connPropAttr\">\n-                    <span wicket:id=\"connPropAttrSchema\">[connPropAttrSchema]</span>\n-                  </div>\n-                  <div class=\"tablecolumn_field veryshort_fixedsize\">\n-                    <span wicket:id=\"panel\">[panel]</span>\n-                  </div>\n-                </div>\n-                <div>\n-                  <a style=\"position: absolute; top: 2px; right:20px;\" wicket:id=\"check\">\n-                    <img src=\"img/ping.png\"width=\"30\" height=\"30\"\n-                         alt=\"ping\" title=\"title\" wicket:message=\"title:check\"/>\n-                  </a>\n-                </div>\n-              </form>\n-            </span>\n-          </div>\n-        </div>\n-        <div id=\"tabs-3\" class=\"tab-pane\">\n-          <span wicket:id=\"capabilitiesPalette\"/>\n-        </div>\n-      </div>\n-    </div>\n-  </wicket:extend>\n-</html>"},{"sha":"69ea457e073a611c84f48f7b3fdb47496d1184ef","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ConnectorModal.properties","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal.properties?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -14,9 +14,10 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-tab1=General\n-tab2=Configuration\n-tab3=Capabilities\n+general=General\n+configuration=Configuration\n+capabilities=Capabilities\n+\n displayName=Display name\n bundleName=Bundle name\n version=Version"},{"sha":"16126bade87da896830e301a85285a0bf53f5d2a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ConnectorModal_it.properties","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal_it.properties?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -14,9 +14,10 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-tab1=Generale\n-tab2=Configurazione\n-tab3=Capabilities\n+general=Generale\n+configuration=Configurazione\n+capabilities=Capabilities\n+\n bundleName=Bundle name\n version=Versione\n connRequestTimeout=Timeout richiesta (sec)"},{"sha":"28e5825759ece8f2ed41374a37d4ff566830ea51","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ConnectorModal_pt_BR.properties","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnectorModal_pt_BR.properties?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -14,9 +14,10 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-tab1=Geral\n-tab2=Configura\\u00e7\\u00e3o\n-tab3=Capacidades\n+general=Geral\n+configuration=Configura\\u00e7\\u00e3o\n+capabilities=Capacidades\n+\n displayName=Mostrar Nome\n bundleName=Nome do Pacote\n version=Vers\\u00e3o"},{"sha":"67bbd730c0b5396720c058792de1e7bcb2b5cf12","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceDetailsPanel.html","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceDetailsPanel.html?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -47,10 +47,6 @@\n           <span wicket:id=\"propagationPriority\">[propagationPriority]</span>\n         </div>\n \n-        <div class=\"form-group\">\n-          <span wicket:id=\"propagationMode\">[propagationMode]</span>\n-        </div>\n-\n         <div class=\"form-group\">\n           <span wicket:id=\"randomPwdIfNotProvided\">[randomPwdIfNotProvided]</span>\n         </div>"},{"sha":"bad05824949e4ae04cbf91a4e86c31b3fb7c245b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModal.properties","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal.properties?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -14,11 +14,12 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-resource=Resource details\n+general=Resource details\n provisions=Provisioning\n-umapping=User mapping\n connectorProperties=Connector properties\n security=Security\n+\n+umapping=User mapping\n required_alert=All form fields are required\n connector=Connector\n existing_resources=Existing resources"},{"sha":"02c2b81b30ad928de6942a3d946c3ac364c6b0f8","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModal_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_it.properties?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -14,7 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-resource=Dettagli Risorsa\n+general=Dettagli Risorsa\n provisions=Provisioning\n umapping=Mapping utenti\n connectorProperties=Propriet\\u00e0\\u00a0 Connettore"},{"sha":"9d6faa5404fbed6d9d0ef69aadfe109a6a5c3709","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ResourceModal_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FResourceModal_pt_BR.properties?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -14,7 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-resource=Detalhes de Recursos\n+general=Detalhes de Recursos\n provisions=Provisioning\n umapping=Mapeamento de usu\\u00e1rios\n connectorProperties=Propriedades de Conectores"},{"sha":"b3ee7bcc6ab9693c39ddb948fe807e655a2a8e30","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AbstractFieldPanel.html","status":"renamed","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAbstractFieldPanel.html?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -23,7 +23,11 @@\n       <span wicket:id=\"requiredLabel\"/>\n     </wicket:fragment>\n \n-    <wicket:fragment wicket:id=\"notRequiredFragment\">\n+    <wicket:fragment wicket:id=\"externalActionFragment\">\n+      <span wicket:id=\"externalAction\"/>\n+    </wicket:fragment>\n+\n+    <wicket:fragment wicket:id=\"emptyFragment\">\n     </wicket:fragment>\n \n     <wicket:child />","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/FieldPanel.html"},{"sha":"17289db50f7242d45f7bfc744d828a7cc228b55d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AjaxCheckBoxPanel.html","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.html?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -23,9 +23,12 @@\n   <body>\n     <wicket:extend>\n       <div class=\"checkbox\">\n-        <label>\n-          <input type=\"checkbox\" wicket:id=\"checkboxField\">\n-            <label wicket:id=\"label\">[LABEL]</label>\n+        <label  style=\"width:100%\">\n+          <input type=\"checkbox\" wicket:id=\"checkboxField\" />\n+          <wicket:enclosure child=\"field-label\">\n+            <label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>\n+            <span wicket:id=\"externalAction\"/>\n+          </wicket:enclosure>\n         </label>\n       </div>\n     </wicket:extend>"},{"sha":"b9af86851b3e6d2bd052c729256b7a38bd7473aa","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDropDownChoicePanel.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.html?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -23,6 +23,7 @@\n   <wicket:extend>\n     <wicket:enclosure child=\"field-label\">\n       <label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>\n+      <span wicket:id=\"externalAction\"/>\n     </wicket:enclosure>\n     <fieldset class=\"input-group\">\n       <select wicket:id=\"dropDownChoiceField\" />"},{"sha":"2d220382bc54d23cfee8ec74efa6be301b73f833","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AjaxPasswordFieldPanel.html","status":"modified","additions":14,"deletions":3,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.html?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -17,7 +17,18 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:extend>\n-    <input type=\"password\" class=\"form-control\" wicket:id=\"passwordField\" />\n-  </wicket:extend>\n+  <head>\n+    <title>Ajaxt password field panel</title>\n+  </head>\n+  <body>\n+    <wicket:extend>\n+      <wicket:enclosure child=\"field-label\">\n+        <label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>\n+        <span wicket:id=\"externalAction\"/>\n+      </wicket:enclosure>\n+      <fieldset class=\"input-group\">\n+        <input type=\"password\" class=\"form-control\" wicket:id=\"passwordField\" />\n+      </fieldset>\n+    </wicket:extend>\n+  </body>\n </html>\n\\ No newline at end of file"},{"sha":"3168f319606d62625cad292bd90b94a4b1dd4bee","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AjaxTextFieldPanel.html","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.html?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -24,8 +24,9 @@\n     <wicket:extend>\n       <wicket:enclosure child=\"field-label\">\n         <label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>\n+        <span wicket:id=\"externalAction\"/>\n       </wicket:enclosure>\n-      <fieldset class=\"form-group input-group\">\n+      <fieldset class=\"input-group\">\n         <input type=\"text\" class=\"form-control\" wicket:id=\"textField\"/>\n       </fieldset>\n     </wicket:extend>"},{"sha":"653dce82a6069a8c2048bdeeba1adaf58aab73b9","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/CheckBoxMultipleChoiceFieldPanel.html","status":"modified","additions":12,"deletions":6,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.html?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -16,10 +16,16 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<html>\n-  <wicket:panel>\n-    <div class=\"form-group\">\n-      <span wicket:id=\"checkBoxMultipleChoice\" />\n-    </div>\n-  </wicket:panel>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head>\n+    <title>Checkbox multi-choice field panel</title>\n+  </head>\n+  <body>\n+    <wicket:extend>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"checkBoxMultipleChoice\" />\n+      </div>\n+    </wicket:extend>\n+  </body>\n </html>\n+"},{"sha":"d1e0a4692963ae1effdf69d1d0de18224e1e232b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/MultiFieldPanel.html","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.html?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -21,10 +21,10 @@\n     <title>Multivalue conatiner</title>\n   </head>\n   <body>\n-    <wicket:panel>\n+    <wicket:extend>\n       <wicket:enclosure child=\"field-label\">\n-        <!--<label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>-->\n-        <label wicket:id=\"field-label\">[LABEL]</label>\n+        <label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>\n+        <span wicket:id=\"externalAction\"/>\n       </wicket:enclosure>\n \n       <span wicket:id=\"multiValueContainer\">\n@@ -60,6 +60,6 @@\n \n       <wicket:fragment wicket:id=\"emptyFragment\">\n       </wicket:fragment>\n-    </wicket:panel>\n+    </wicket:extend>\n   </body>\n </html>"},{"sha":"bc3410545dccaab4a112feca690ee09c71bf0684","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/SpinnerFieldPanel.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSpinnerFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSpinnerFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSpinnerFieldPanel.html?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -20,6 +20,7 @@\n   <wicket:extend>\n     <wicket:enclosure child=\"field-label\">\n       <label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>\n+      <span wicket:id=\"externalAction\"/>\n     </wicket:enclosure>\n     <input wicket:id=\"spinner\"/>\n   </wicket:extend>"},{"sha":"9717d53a886b8cb1ee8f8ff85c0cb2d6b7315074","filename":"client/lib/src/main/java/org/apache/syncope/client/lib/SyncopeClient.java","status":"modified","additions":16,"deletions":5,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FSyncopeClient.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -31,10 +31,11 @@\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.cxf.transport.http.URLConnectionHTTPConduit;\n-import org.apache.syncope.client.lib.builders.ListQueryBuilder;\n+import org.apache.syncope.client.lib.builders.AnyQueryBuilder;\n import org.apache.syncope.client.lib.builders.AnyListQueryBuilder;\n import org.apache.syncope.client.lib.builders.AnySearchQueryBuilder;\n import org.apache.syncope.client.lib.builders.ConnObjectTOListQueryBuilder;\n+import org.apache.syncope.client.lib.builders.TaskQueryBuilder;\n import org.apache.syncope.common.lib.search.AnyObjectFiqlSearchConditionBuilder;\n import org.apache.syncope.common.lib.search.OrderByClauseBuilder;\n import org.apache.syncope.common.lib.search.GroupFiqlSearchConditionBuilder;\n@@ -110,13 +111,23 @@ public static OrderByClauseBuilder getOrderByClauseBuilder() {\n     }\n \n     /**\n-     * Returns a new instance of {@link ListQueryBuilder}, for assisted building of some service's {@code list()}\n+     * Returns a new instance of {@link TaskQueryBuilder}, for assisted building of some service's {@code list()}\n      * arguments.\n      *\n-     * @return default instance of {@link ListQueryBuilder}\n+     * @return default instance of {@link AnyQueryBuilder}\n      */\n-    public static ListQueryBuilder getListQueryBuilder() {\n-        return new ListQueryBuilder();\n+    public static TaskQueryBuilder getTaskQueryBuilder() {\n+        return new TaskQueryBuilder();\n+    }\n+\n+    /**\n+     * Returns a new instance of {@link AnyQueryBuilder}, for assisted building of some service's {@code list()}\n+     * arguments.\n+     *\n+     * @return default instance of {@link AnyQueryBuilder}\n+     */\n+    public static AnyQueryBuilder getAnyQueryBuilder() {\n+        return new AnyQueryBuilder();\n     }\n \n     /**"},{"sha":"4c615545daa08b7f6d408f75666a26914bb7dbde","filename":"client/lib/src/main/java/org/apache/syncope/client/lib/builders/AbstractQueryBuilder.java","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FAbstractQueryBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FAbstractQueryBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FAbstractQueryBuilder.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.lib.builders;\n+\n+import org.apache.syncope.common.rest.api.beans.AbstractQuery;\n+\n+public abstract class AbstractQueryBuilder<Q extends AbstractQuery, B extends AbstractQueryBuilder<Q, B>> {\n+\n+    private Q instance;\n+\n+    protected abstract Q newInstance();\n+\n+    protected Q getInstance() {\n+        if (instance == null) {\n+            instance = newInstance();\n+        }\n+        return instance;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public B page(final Integer page) {\n+        getInstance().setPage(page);\n+        return (B) this;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public B size(final Integer size) {\n+        getInstance().setSize(size);\n+        return (B) this;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public B orderBy(final String orderBy) {\n+        getInstance().setOrderBy(orderBy);\n+        return (B) this;\n+    }\n+\n+    public Q build() {\n+        return getInstance();\n+    }\n+}"},{"sha":"da069cc63612b2bce6a048f042c3866251acabfb","filename":"client/lib/src/main/java/org/apache/syncope/client/lib/builders/AnyListQueryBuilder.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FAnyListQueryBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FAnyListQueryBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FAnyListQueryBuilder.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -19,10 +19,10 @@\n package org.apache.syncope.client.lib.builders;\n \n import java.util.ArrayList;\n-import org.apache.syncope.common.rest.api.beans.ListQuery;\n+import org.apache.syncope.common.rest.api.beans.AnyQuery;\n import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n \n-public class AnyListQueryBuilder extends ListQueryBuilder {\n+public class AnyListQueryBuilder extends AnyQueryBuilder {\n \n     private final AnyListQuery instance = new AnyListQuery();\n \n@@ -57,7 +57,7 @@ public AnyListQueryBuilder realm(final String realm) {\n \n     @Override\n     public AnyListQuery build() {\n-        ListQuery lq = super.build();\n+        AnyQuery lq = super.build();\n         instance.setPage(lq.getPage());\n         instance.setSize(lq.getSize());\n         instance.setOrderBy(lq.getOrderBy());"},{"sha":"ad5457ef37f272e211529dbbc261dbfa7583c720","filename":"client/lib/src/main/java/org/apache/syncope/client/lib/builders/AnyQueryBuilder.java","status":"renamed","additions":17,"deletions":22,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FAnyQueryBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FAnyQueryBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FAnyQueryBuilder.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -18,37 +18,32 @@\n  */\n package org.apache.syncope.client.lib.builders;\n \n-import org.apache.syncope.common.rest.api.beans.ListQuery;\n+import org.apache.syncope.common.rest.api.beans.AnyQuery;\n \n-public class ListQueryBuilder {\n+public class AnyQueryBuilder extends AbstractQueryBuilder<AnyQuery, AnyQueryBuilder> {\n \n-    private final ListQuery instance = new ListQuery();\n-\n-    public ListQueryBuilder page(final Integer page) {\n-        instance.setPage(page);\n-\n-        return this;\n+    @Override\n+    protected AnyQuery newInstance() {\n+        return new AnyQuery();\n     }\n \n-    public ListQueryBuilder size(final Integer size) {\n-        instance.setSize(size);\n-\n-        return this;\n+    @Override\n+    public AnyQueryBuilder page(final Integer page) {\n+        return AnyQueryBuilder.class.cast(super.page(page));\n     }\n \n-    public ListQueryBuilder orderBy(final String orderBy) {\n-        instance.setOrderBy(orderBy);\n-\n-        return this;\n+    @Override\n+    public AnyQueryBuilder size(final Integer size) {\n+        return AnyQueryBuilder.class.cast(super.size(size));\n     }\n \n-    public ListQueryBuilder details(final boolean details) {\n-        instance.setDetails(details);\n-\n-        return this;\n+    @Override\n+    public AnyQueryBuilder orderBy(final String orderBy) {\n+        return AnyQueryBuilder.class.cast(super.orderBy(orderBy));\n     }\n \n-    public ListQuery build() {\n-        return instance;\n+    public AnyQueryBuilder details(final boolean details) {\n+        getInstance().setDetails(details);\n+        return this;\n     }\n }","previous_filename":"client/lib/src/main/java/org/apache/syncope/client/lib/builders/ListQueryBuilder.java"},{"sha":"c87b68cd996eae21d48eb46ea907a173367a036c","filename":"client/lib/src/main/java/org/apache/syncope/client/lib/builders/TaskQueryBuilder.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FTaskQueryBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FTaskQueryBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2Fbuilders%2FTaskQueryBuilder.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.lib.builders;\n+\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.rest.api.beans.TaskQuery;\n+\n+public class TaskQueryBuilder extends AbstractQueryBuilder<TaskQuery, TaskQueryBuilder> {\n+\n+    @Override\n+    protected TaskQuery newInstance() {\n+        return new TaskQuery();\n+    }\n+\n+    @Override\n+    public TaskQueryBuilder page(final Integer page) {\n+        return TaskQueryBuilder.class.cast(super.page(page));\n+    }\n+\n+    @Override\n+    public TaskQueryBuilder size(final Integer size) {\n+        return TaskQueryBuilder.class.cast(super.size(size));\n+    }\n+\n+    @Override\n+    public TaskQueryBuilder orderBy(final String orderBy) {\n+        return TaskQueryBuilder.class.cast(super.orderBy(orderBy));\n+    }\n+\n+    public TaskQueryBuilder resource(final String resource) {\n+        getInstance().setResource(resource);\n+        return this;\n+    }\n+\n+    public TaskQueryBuilder anyTypeKind(final AnyTypeKind anyTypeKind) {\n+        getInstance().setAnyTypeKind(anyTypeKind);\n+        return this;\n+    }\n+\n+    public TaskQueryBuilder anyTypeKey(final Long anyTypeKey) {\n+        getInstance().setAnyTypeKey(anyTypeKey);\n+        return this;\n+    }\n+}"},{"sha":"68bd1e572953895a3366b7ffb4d018bc8a313b8e","filename":"client/pom.xml","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/client%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fpom.xml?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -37,6 +37,25 @@ under the License.\n     <rootpom.basedir>${basedir}/..</rootpom.basedir>\n   </properties>\n \n+  <profiles>\n+    <profile>\n+      <id>doc</id>\n+\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.asciidoctor</groupId>\n+            <artifactId>asciidoctor-maven-plugin</artifactId>\n+            <inherited>false</inherited>\n+            <configuration>\n+              <skip>true</skip>\n+            </configuration>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+  </profiles>\n+  \n   <modules>\n     <module>lib</module>\n     <module>console</module>"},{"sha":"b838f6e4be69e179a5740e4fc277c81825907290","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/MappingItemTO.java","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingItemTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingItemTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingItemTO.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n+import java.util.ArrayList;\n+import java.util.List;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n@@ -64,10 +66,12 @@ public class MappingItemTO extends AbstractBaseBean {\n     private String mandatoryCondition = \"false\";\n \n     /**\n-     * Mapping purposes: SYNCHRONIZATION, PROPAGATION, BOTH, NONE.\n+     * Mapping purposes.\n      */\n     private MappingPurpose purpose;\n \n+    private final List<String> mappingItemTransformerClassNames = new ArrayList<>();\n+\n     public boolean isConnObjectKey() {\n         return connObjectKey;\n     }\n@@ -131,4 +135,9 @@ public MappingPurpose getPurpose() {\n     public void setPurpose(final MappingPurpose purpose) {\n         this.purpose = purpose;\n     }\n+\n+    public List<String> getMappingItemTransformerClassNames() {\n+        return mappingItemTransformerClassNames;\n+    }\n+\n }"},{"sha":"1b1d556cf9cd201ae808f075c2073bf9aa71dca7","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/PropagationTaskTO.java","status":"modified","additions":5,"deletions":16,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationTaskTO.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -21,7 +21,6 @@\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n \n @XmlRootElement(name = \"propagationTask\")\n@@ -30,9 +29,7 @@ public class PropagationTaskTO extends AbstractTaskTO {\n \n     private static final long serialVersionUID = 386450127003321197L;\n \n-    private PropagationMode propagationMode;\n-\n-    private ResourceOperation propagationOperation;\n+    private ResourceOperation operation;\n \n     private String connObjectKey;\n \n@@ -64,14 +61,6 @@ public void setOldConnObjectKey(final String oldConnObjectKey) {\n         this.oldConnObjectKey = oldConnObjectKey;\n     }\n \n-    public PropagationMode getPropagationMode() {\n-        return propagationMode;\n-    }\n-\n-    public void setPropagationMode(final PropagationMode propagationMode) {\n-        this.propagationMode = propagationMode;\n-    }\n-\n     public String getResource() {\n         return resource;\n     }\n@@ -80,12 +69,12 @@ public void setResource(final String resource) {\n         this.resource = resource;\n     }\n \n-    public ResourceOperation getPropagationOperation() {\n-        return propagationOperation;\n+    public ResourceOperation getOperation() {\n+        return operation;\n     }\n \n-    public void setPropagationOperation(final ResourceOperation propagationOperation) {\n-        this.propagationOperation = propagationOperation;\n+    public void setOperation(final ResourceOperation operation) {\n+        this.operation = operation;\n     }\n \n     public String getXmlAttributes() {"},{"sha":"419b8520d706d5ed43feccf6d6dbfd522201795b","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ResourceTO.java","status":"modified","additions":5,"deletions":28,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -32,7 +32,6 @@\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Predicate;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.TraceLevel;\n \n @XmlRootElement(name = \"resource\")\n@@ -57,21 +56,19 @@ public class ResourceTO extends AbstractAnnotatedBean {\n \n     private boolean propagationPrimary;\n \n-    private int propagationPriority;\n+    private int propagationPriority = 0;\n \n     private boolean randomPwdIfNotProvided;\n \n-    private PropagationMode propagationMode;\n-\n     private boolean enforceMandatoryCondition;\n \n-    private TraceLevel createTraceLevel;\n+    private TraceLevel createTraceLevel = TraceLevel.ALL;\n \n-    private TraceLevel updateTraceLevel;\n+    private TraceLevel updateTraceLevel = TraceLevel.ALL;\n \n-    private TraceLevel deleteTraceLevel;\n+    private TraceLevel deleteTraceLevel = TraceLevel.ALL;\n \n-    private TraceLevel syncTraceLevel;\n+    private TraceLevel syncTraceLevel = TraceLevel.ALL;\n \n     private Long passwordPolicy;\n \n@@ -83,18 +80,6 @@ public class ResourceTO extends AbstractAnnotatedBean {\n \n     private final List<String> propagationActionsClassNames = new ArrayList<>();\n \n-    public ResourceTO() {\n-        super();\n-\n-        propagationMode = PropagationMode.TWO_PHASES;\n-        propagationPriority = 0;\n-\n-        createTraceLevel = TraceLevel.ALL;\n-        updateTraceLevel = TraceLevel.ALL;\n-        deleteTraceLevel = TraceLevel.ALL;\n-        syncTraceLevel = TraceLevel.ALL;\n-    }\n-\n     public String getKey() {\n         return key;\n     }\n@@ -152,14 +137,6 @@ public void setRandomPwdIfNotProvided(final boolean randomPwdIfNotProvided) {\n         this.randomPwdIfNotProvided = randomPwdIfNotProvided;\n     }\n \n-    public PropagationMode getPropagationMode() {\n-        return propagationMode;\n-    }\n-\n-    public void setPropagationMode(final PropagationMode propagationMode) {\n-        this.propagationMode = propagationMode;\n-    }\n-\n     public TraceLevel getCreateTraceLevel() {\n         return createTraceLevel;\n     }"},{"sha":"f65badca990e7b7d9faf94b4b846f167bd647285","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/SyncopeTO.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncopeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncopeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncopeTO.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -65,6 +65,8 @@ public class SyncopeTO extends AbstractBaseBean {\n \n     private final List<String> passwordRules = new ArrayList<>();\n \n+    private final List<String> mappingItemTransformers = new ArrayList<>();\n+\n     private final List<String> taskJobs = new ArrayList<>();\n \n     private final List<String> logicActions = new ArrayList<>();\n@@ -163,6 +165,13 @@ public List<String> getPasswordRules() {\n         return passwordRules;\n     }\n \n+    @XmlElementWrapper(name = \"mappingItemTransformers\")\n+    @XmlElement(name = \"mappingItemTransformer\")\n+    @JsonProperty(\"mappingItemTransformers\")\n+    public List<String> getMappingItemTransformers() {\n+        return mappingItemTransformers;\n+    }\n+\n     @XmlElementWrapper(name = \"taskJobs\")\n     @XmlElement(name = \"taskJob\")\n     @JsonProperty(\"taskJobs\")"},{"sha":"41b1e4a27ff16d7ea2aa6464178c2fff7354d215","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/ConnectorCapability.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnectorCapability.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnectorCapability.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnectorCapability.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -27,12 +27,9 @@\n public enum ConnectorCapability {\n \n     AUTHENTICATE,\n-    ONE_PHASE_CREATE,\n-    TWO_PHASES_CREATE,\n-    ONE_PHASE_UPDATE,\n-    TWO_PHASES_UPDATE,\n-    ONE_PHASE_DELETE,\n-    TWO_PHASES_DELETE,\n+    CREATE,\n+    UPDATE,\n+    DELETE,\n     SEARCH,\n     SYNC;\n "},{"sha":"c676c3b52b2bed20d69315caac2982f1b21318e8","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/PropagationTaskExecStatus.java","status":"modified","additions":0,"deletions":14,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPropagationTaskExecStatus.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPropagationTaskExecStatus.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPropagationTaskExecStatus.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -22,26 +22,12 @@\n \n /**\n  * Status of a propagation task execution.\n- *\n- * CREATED -&gt; SUBMITTED or UBSUBMITTED (depending on the external resource to\n- * return success or failure).\n- * SUBMITTED -&gt; SUCCESS or FAILURE (depending on the external resource to\n- * report success or failure).\n  */\n @XmlEnum\n public enum PropagationTaskExecStatus {\n \n     CREATED,\n-    SUBMITTED,\n-    UNSUBMITTED,\n     SUCCESS,\n     FAILURE;\n \n-    public boolean isSuccessful() {\n-        return this == SUCCESS || this == SUBMITTED;\n-    }\n-\n-    public static PropagationTaskExecStatus fromString(final String value) {\n-        return PropagationTaskExecStatus.valueOf(value.toUpperCase());\n-    }\n }"},{"sha":"8ba7e7a5aad36b9c384e05b955afa25a54896c9d","filename":"common/pom.xml","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fpom.xml?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -37,6 +37,25 @@ under the License.\n     <rootpom.basedir>${basedir}/..</rootpom.basedir>\n   </properties>\n \n+  <profiles>\n+    <profile>\n+      <id>doc</id>\n+\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.asciidoctor</groupId>\n+            <artifactId>asciidoctor-maven-plugin</artifactId>\n+            <inherited>false</inherited>\n+            <configuration>\n+              <skip>true</skip>\n+            </configuration>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+  </profiles>\n+\n   <modules>\n     <module>lib</module>\n     <module>rest-api</module>"},{"sha":"a8c6bb8b30ea631000eb9f029c1dafa9b1026426","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/AbstractQuery.java","status":"renamed","additions":2,"deletions":33,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAbstractQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAbstractQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAbstractQuery.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -18,17 +18,13 @@\n  */\n package org.apache.syncope.common.rest.api.beans;\n \n-import java.io.Serializable;\n import javax.validation.constraints.Min;\n import javax.ws.rs.DefaultValue;\n import javax.ws.rs.QueryParam;\n-import org.apache.commons.lang3.builder.EqualsBuilder;\n-import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n-import org.apache.commons.lang3.builder.ToStringStyle;\n+import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.rest.api.service.JAXRSService;\n \n-public class ListQuery implements Serializable {\n+public abstract class AbstractQuery extends AbstractBaseBean {\n \n     private static final long serialVersionUID = -371488230250055359L;\n \n@@ -38,8 +34,6 @@ public class ListQuery implements Serializable {\n \n     private String orderBy;\n \n-    private Boolean details;\n-\n     public Integer getPage() {\n         return page;\n     }\n@@ -70,29 +64,4 @@ public String getOrderBy() {\n     public void setOrderBy(final String orderBy) {\n         this.orderBy = orderBy;\n     }\n-\n-    @QueryParam(JAXRSService.PARAM_DETAILS)\n-    @DefaultValue(\"true\")\n-    public boolean isDetails() {\n-        return details == null ? true : details;\n-    }\n-\n-    public void setDetails(final boolean details) {\n-        this.details = details;\n-    }\n-\n-    @Override\n-    public boolean equals(final Object obj) {\n-        return EqualsBuilder.reflectionEquals(this, obj);\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return HashCodeBuilder.reflectionHashCode(this);\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return ReflectionToStringBuilder.toString(this, ToStringStyle.MULTI_LINE_STYLE);\n-    }\n }","previous_filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/ListQuery.java"},{"sha":"ef9b93d3cd63eb5689ec14c35c25b7a963155195","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/AnyListQuery.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAnyListQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAnyListQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAnyListQuery.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -23,7 +23,7 @@\n import javax.ws.rs.MatrixParam;\n import org.apache.syncope.common.lib.SyncopeConstants;\n \n-public class AnyListQuery extends ListQuery {\n+public class AnyListQuery extends AnyQuery {\n \n     private static final long serialVersionUID = -5197167078435619636L;\n "},{"sha":"bcf10ce47371204279af5e6fa536c6cb0c6f63b9","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/AnyQuery.java","status":"renamed","additions":17,"deletions":6,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAnyQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAnyQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAnyQuery.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -16,14 +16,25 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.common.lib.types;\n+package org.apache.syncope.common.rest.api.beans;\n \n-import javax.xml.bind.annotation.XmlEnum;\n+import javax.ws.rs.DefaultValue;\n+import javax.ws.rs.QueryParam;\n+import org.apache.syncope.common.rest.api.service.JAXRSService;\n \n-@XmlEnum\n-public enum PropagationMode {\n+public class AnyQuery extends AbstractQuery {\n \n-    ONE_PHASE,\n-    TWO_PHASES\n+    private static final long serialVersionUID = -371488230250055359L;\n \n+    private Boolean details;\n+\n+    public boolean isDetails() {\n+        return details == null ? true : details;\n+    }\n+\n+    @QueryParam(JAXRSService.PARAM_DETAILS)\n+    @DefaultValue(\"true\")\n+    public void setDetails(final boolean details) {\n+        this.details = details;\n+    }\n }","previous_filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/PropagationMode.java"},{"sha":"7f59abf668135bf72195347283ae94ed45a21e89","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/TaskQuery.java","status":"added","additions":64,"deletions":0,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FTaskQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FTaskQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FTaskQuery.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.rest.api.beans;\n+\n+import javax.validation.constraints.Min;\n+import javax.ws.rs.QueryParam;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.rest.api.service.JAXRSService;\n+\n+public class TaskQuery extends AbstractQuery {\n+\n+    private static final long serialVersionUID = -8792519310029596796L;\n+\n+    private String resource;\n+\n+    private AnyTypeKind anyTypeKind;\n+\n+    private Long anyTypeKey;\n+\n+    public String getResource() {\n+        return resource;\n+    }\n+\n+    @QueryParam(JAXRSService.PARAM_RESOURCE)\n+    public void setResource(final String resource) {\n+        this.resource = resource;\n+    }\n+\n+    public AnyTypeKind getAnyTypeKind() {\n+        return anyTypeKind;\n+    }\n+\n+    @QueryParam(JAXRSService.PARAM_ANYTYPE_KIND)\n+    public void setAnyTypeKind(final AnyTypeKind anyTypeKind) {\n+        this.anyTypeKind = anyTypeKind;\n+    }\n+\n+    public Long getAnyTypeKey() {\n+        return anyTypeKey;\n+    }\n+\n+    @Min(1)\n+    @QueryParam(JAXRSService.PARAM_ANYTYPE_KEY)\n+    public void setAnyTypeKey(final Long anyTypeKey) {\n+        this.anyTypeKey = anyTypeKey;\n+    }\n+\n+}"},{"sha":"68afb1a405f3508f976f27e327163f842dd6dbd0","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/JAXRSService.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FJAXRSService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FJAXRSService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FJAXRSService.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -28,6 +28,12 @@ public interface JAXRSService {\n \n     String PARAM_ORDERBY = \"orderby\";\n \n+    String PARAM_RESOURCE = \"resource\";\n+\n+    String PARAM_ANYTYPE_KIND = \"anyTypeKind\";\n+\n+    String PARAM_ANYTYPE_KEY = \"anyTypeKey\";\n+\n     String PARAM_DETAILS = \"details\";\n \n     String PARAM_CONNID_PAGED_RESULTS_COOKIE = \"connIdPagedResultsCookie\";"},{"sha":"bc8b34659b91dbd1ad9c7f7b52126a929a6f4542","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ReportService.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -20,7 +20,6 @@\n \n import java.util.List;\n import javax.validation.constraints.NotNull;\n-import javax.ws.rs.BeanParam;\n import javax.ws.rs.Consumes;\n import javax.ws.rs.DELETE;\n import javax.ws.rs.GET;\n@@ -33,13 +32,11 @@\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.ReportExecTO;\n import org.apache.syncope.common.lib.to.ReportTO;\n import org.apache.syncope.common.lib.types.JobAction;\n import org.apache.syncope.common.lib.types.JobStatusType;\n import org.apache.syncope.common.lib.types.ReportExecExportFormat;\n-import org.apache.syncope.common.rest.api.beans.ListQuery;\n \n /**\n  * REST operations for reports.\n@@ -70,14 +67,13 @@ public interface ReportService extends JAXRSService {\n     ReportExecTO readExecution(@NotNull @PathParam(\"executionKey\") Long executionKey);\n \n     /**\n-     * Returns a paged list of all existing reports matching the given query;\n+     * Returns a list of all existing reports.\n      *\n-     * @param listQuery query conditions\n      * @return paged list of existing reports matching the given query\n      */\n     @GET\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    PagedResult<ReportTO> list(@BeanParam ListQuery listQuery);\n+    List<ReportTO> list();\n \n     /**\n      * Creates a new report."},{"sha":"d8814d3d69e761d708590c93c3fcdb5d39a5989b","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/TaskService.java","status":"modified","additions":5,"deletions":17,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -38,13 +38,12 @@\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.PagedResult;\n-import org.apache.syncope.common.lib.to.ReportExecTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n import org.apache.syncope.common.lib.to.TaskExecTO;\n import org.apache.syncope.common.lib.types.JobAction;\n import org.apache.syncope.common.lib.types.JobStatusType;\n import org.apache.syncope.common.lib.types.TaskType;\n-import org.apache.syncope.common.rest.api.beans.ListQuery;\n+import org.apache.syncope.common.rest.api.beans.TaskQuery;\n \n /**\n  * REST operations for tasks.\n@@ -78,16 +77,16 @@ public interface TaskService extends JAXRSService {\n     /**\n      * Returns a paged list of existing tasks matching type and the given query.\n      *\n-     * @param taskType type of tasks to be listed\n-     * @param listQuery query conditions\n+     * @param type type of tasks to be listed\n+     * @param query query conditions\n      * @param <T> type of taskTO\n      * @return paged list of existing tasks matching type and the given query\n      */\n     @GET\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     <T extends AbstractTaskTO> PagedResult<T> list(\n-            @NotNull @MatrixParam(\"type\") TaskType taskType,\n-            @BeanParam ListQuery listQuery);\n+            @NotNull @MatrixParam(\"type\") TaskType type,\n+            @BeanParam TaskQuery query);\n \n     /**\n      * Creates a new task.\n@@ -141,17 +140,6 @@ <T extends AbstractTaskTO> PagedResult<T> list(\n     TaskExecTO execute(@NotNull @PathParam(\"key\") Long key,\n             @QueryParam(\"dryRun\") @DefaultValue(\"false\") boolean dryRun);\n \n-    /**\n-     * Reports task execution result.\n-     *\n-     * @param executionKey key of task execution being reported\n-     * @param reportExec execution being reported\n-     */\n-    @POST\n-    @Path(\"executions/{executionKey}/report\")\n-    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    void report(@NotNull @PathParam(\"executionKey\") Long executionKey, @NotNull ReportExecTO reportExec);\n-\n     /**\n      * Executes the provided bulk action.\n      *"},{"sha":"29cd65ab3d8af77b97bd845d509200e2e1ae4796","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ReportLogic.java","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -47,7 +47,6 @@\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.ReportDAO;\n import org.apache.syncope.core.persistence.api.dao.ReportExecDAO;\n-import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n import org.apache.syncope.core.persistence.api.entity.Report;\n import org.apache.syncope.core.persistence.api.entity.ReportExec;\n@@ -128,13 +127,8 @@ public ReportTO update(final ReportTO reportTO) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + Entitlement.REPORT_LIST + \"')\")\n-    public int count() {\n-        return reportDAO.count();\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + Entitlement.REPORT_LIST + \"')\")\n-    public List<ReportTO> list(final int page, final int size, final List<OrderByClause> orderByClauses) {\n-        return CollectionUtils.collect(reportDAO.findAll(page, size, orderByClauses),\n+    public List<ReportTO> list() {\n+        return CollectionUtils.collect(reportDAO.findAll(),\n                 new Transformer<Report, ReportTO>() {\n \n                     @Override"},{"sha":"c3ce0c696be55e51284f194b74e0dfdee1531a14","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ResourceLogic.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -36,7 +36,6 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.Entitlement;\n-import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.core.persistence.api.dao.DuplicateException;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n@@ -92,6 +91,9 @@ public class ResourceLogic extends AbstractTransactionalLogic<ResourceTO> {\n     @Autowired\n     private ConnObjectUtils connObjectUtils;\n \n+    @Autowired\n+    private MappingUtils mappingUtils;\n+\n     @Autowired\n     private ConnectorFactory connFactory;\n \n@@ -216,13 +218,13 @@ public ConnObjectTO readConnObject(final String key, final String anyTypeKey, fi\n             throw new NotFoundException(\n                     \"ConnObjectKey mapping for \" + init.getMiddle() + \" \" + anyKey + \" on resource '\" + key + \"'\");\n         }\n-        String connObjectKeyValue = MappingUtils.getConnObjectKeyValue(any, init.getRight());\n+        String connObjectKeyValue = mappingUtils.getConnObjectKeyValue(any, init.getRight());\n \n         Connector connector = connFactory.getConnector(init.getLeft());\n         ConnectorObject connectorObject = connector.getObject(\n                 init.getRight().getObjectClass(),\n                 new Uid(connObjectKeyValue),\n-                connector.getOperationOptions(MappingUtils.getMappingItems(init.getRight(), MappingPurpose.BOTH)));\n+                connector.getOperationOptions(MappingUtils.getBothMappingItems(init.getRight())));\n         if (connectorObject == null) {\n             throw new NotFoundException(\n                     \"Object \" + connObjectKeyValue + \" with class \" + init.getRight().getObjectClass()"},{"sha":"480efc159335b9300ddf8dfd9e443f465a798732","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/SyncopeLogic.java","status":"modified","additions":13,"deletions":12,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -82,7 +82,7 @@ public class SyncopeLogic extends AbstractLogic<SyncopeTO> {\n     private PasswordGenerator passwordGenerator;\n \n     @Autowired\n-    private ImplementationLookup implementationLookup;\n+    private ImplementationLookup implLookup;\n \n     @Resource(name = \"velocityResourceLoader\")\n     private ResourceWithFallbackLoader resourceLoader;\n@@ -128,17 +128,18 @@ public SyncopeTO info() {\n         syncopeTO.setVirAttrCache(virAttrCache.getClass().getName());\n         syncopeTO.setPasswordGenerator(passwordGenerator.getClass().getName());\n \n-        syncopeTO.getReportlets().addAll(implementationLookup.getClassNames(Type.REPORTLET));\n-        syncopeTO.getAccountRules().addAll(implementationLookup.getClassNames(Type.ACCOUNT_RULE));\n-        syncopeTO.getPasswordRules().addAll(implementationLookup.getClassNames(Type.PASSWORD_RULE));\n-        syncopeTO.getTaskJobs().addAll(implementationLookup.getClassNames(Type.TASKJOBDELEGATE));\n-        syncopeTO.getLogicActions().addAll(implementationLookup.getClassNames(Type.LOGIC_ACTIONS));\n-        syncopeTO.getPropagationActions().addAll(implementationLookup.getClassNames(Type.PROPAGATION_ACTIONS));\n-        syncopeTO.getSyncActions().addAll(implementationLookup.getClassNames(Type.SYNC_ACTIONS));\n-        syncopeTO.getPushActions().addAll(implementationLookup.getClassNames(Type.PUSH_ACTIONS));\n-        syncopeTO.getSyncCorrelationRules().addAll(implementationLookup.getClassNames(Type.SYNC_CORRELATION_RULE));\n-        syncopeTO.getPushCorrelationRules().addAll(implementationLookup.getClassNames(Type.PUSH_CORRELATION_RULE));\n-        syncopeTO.getValidators().addAll(implementationLookup.getClassNames(Type.VALIDATOR));\n+        syncopeTO.getReportlets().addAll(implLookup.getClassNames(Type.REPORTLET));\n+        syncopeTO.getAccountRules().addAll(implLookup.getClassNames(Type.ACCOUNT_RULE));\n+        syncopeTO.getPasswordRules().addAll(implLookup.getClassNames(Type.PASSWORD_RULE));\n+        syncopeTO.getMappingItemTransformers().addAll(implLookup.getClassNames(Type.MAPPING_ITEM_TRANSFORMER));\n+        syncopeTO.getTaskJobs().addAll(implLookup.getClassNames(Type.TASKJOBDELEGATE));\n+        syncopeTO.getLogicActions().addAll(implLookup.getClassNames(Type.LOGIC_ACTIONS));\n+        syncopeTO.getPropagationActions().addAll(implLookup.getClassNames(Type.PROPAGATION_ACTIONS));\n+        syncopeTO.getSyncActions().addAll(implLookup.getClassNames(Type.SYNC_ACTIONS));\n+        syncopeTO.getPushActions().addAll(implLookup.getClassNames(Type.PUSH_ACTIONS));\n+        syncopeTO.getSyncCorrelationRules().addAll(implLookup.getClassNames(Type.SYNC_CORRELATION_RULE));\n+        syncopeTO.getPushCorrelationRules().addAll(implLookup.getClassNames(Type.PUSH_CORRELATION_RULE));\n+        syncopeTO.getValidators().addAll(implLookup.getClassNames(Type.VALIDATOR));\n \n         Set<String> htmlTemplates = new HashSet<>();\n         Set<String> textTemplates = new HashSet<>();"},{"sha":"3c9647e028897efee86fad3463a9550d91a0971f","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/TaskLogic.java","status":"modified","additions":15,"deletions":50,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -32,12 +32,11 @@\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n import org.apache.syncope.common.lib.to.SyncTaskTO;\n import org.apache.syncope.common.lib.to.TaskExecTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.Entitlement;\n import org.apache.syncope.common.lib.types.JobAction;\n import org.apache.syncope.common.lib.types.JobStatusType;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n-import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.TaskDAO;\n@@ -56,6 +55,7 @@\n import org.apache.syncope.core.provisioning.api.job.JobInstanceLoader;\n import org.apache.syncope.core.logic.notification.NotificationJobDelegate;\n import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n+import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n import org.apache.syncope.core.provisioning.java.job.TaskJob;\n import org.quartz.JobDataMap;\n import org.quartz.JobKey;\n@@ -76,6 +76,9 @@ public class TaskLogic extends AbstractJobLogic<AbstractTaskTO> {\n     @Autowired\n     private ConfDAO confDAO;\n \n+    @Autowired\n+    private ExternalResourceDAO resourceDAO;\n+\n     @Autowired\n     private TaskDataBinder binder;\n \n@@ -146,23 +149,27 @@ public <T extends SchedTaskTO> T updateSched(final SchedTaskTO taskTO) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + Entitlement.TASK_LIST + \"')\")\n-    public int count(final TaskType taskType) {\n-        return taskDAO.count(taskType);\n+    public int count(\n+            final TaskType type, final String resource, final AnyTypeKind anyTypeKind, final Long anyTypeKey) {\n+\n+        return taskDAO.count(type, resourceDAO.find(resource), anyTypeKind, anyTypeKey);\n     }\n \n     @PreAuthorize(\"hasRole('\" + Entitlement.TASK_LIST + \"')\")\n     @SuppressWarnings(\"unchecked\")\n-    public <T extends AbstractTaskTO> List<T> list(final TaskType taskType,\n+    public <T extends AbstractTaskTO> List<T> list(\n+            final TaskType type, final String resource, final AnyTypeKind anyTypeKind, final Long anyTypeKey,\n             final int page, final int size, final List<OrderByClause> orderByClauses) {\n \n-        final TaskUtils taskUtilss = taskUtilsFactory.getInstance(taskType);\n+        final TaskUtils taskUtils = taskUtilsFactory.getInstance(type);\n \n-        return CollectionUtils.collect(taskDAO.findAll(page, size, orderByClauses, taskType),\n+        return CollectionUtils.collect(taskDAO.findAll(\n+                type, resourceDAO.find(resource), anyTypeKind, anyTypeKey, page, size, orderByClauses),\n                 new Transformer<Task, T>() {\n \n                     @Override\n                     public T transform(final Task task) {\n-                        return (T) binder.getTaskTO(task, taskUtilss);\n+                        return (T) binder.getTaskTO(task, taskUtils);\n                     }\n                 }, new ArrayList<T>());\n     }\n@@ -238,48 +245,6 @@ public TaskExecTO execute(final Long taskKey, final boolean dryRun) {\n         return result;\n     }\n \n-    @PreAuthorize(\"hasRole('\" + Entitlement.TASK_READ + \"')\")\n-    public TaskExecTO report(final Long execKey, final PropagationTaskExecStatus status, final String message) {\n-        TaskExec exec = taskExecDAO.find(execKey);\n-        if (exec == null) {\n-            throw new NotFoundException(\"Task execution \" + execKey);\n-        }\n-\n-        SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidPropagationTaskExecReport);\n-\n-        TaskUtils taskUtils = taskUtilsFactory.getInstance(exec.getTask());\n-        if (TaskType.PROPAGATION == taskUtils.getType()) {\n-            PropagationTask task = (PropagationTask) exec.getTask();\n-            if (task.getPropagationMode() != PropagationMode.TWO_PHASES) {\n-                sce.getElements().add(\"Propagation mode: \" + task.getPropagationMode());\n-            }\n-        } else {\n-            sce.getElements().add(\"Task type: \" + taskUtils);\n-        }\n-\n-        switch (status) {\n-            case SUCCESS:\n-            case FAILURE:\n-                break;\n-\n-            case CREATED:\n-            case SUBMITTED:\n-            case UNSUBMITTED:\n-                sce.getElements().add(\"Execution status to be set: \" + status);\n-                break;\n-\n-            default:\n-        }\n-\n-        if (!sce.isEmpty()) {\n-            throw sce;\n-        }\n-\n-        exec.setStatus(status.toString());\n-        exec.setMessage(message);\n-        return binder.getTaskExecTO(taskExecDAO.save(exec));\n-    }\n-\n     @PreAuthorize(\"hasRole('\" + Entitlement.TASK_DELETE + \"')\")\n     public <T extends AbstractTaskTO> T delete(final Long taskKey) {\n         Task task = taskDAO.find(taskKey);"},{"sha":"5147a392cf0b82811961066cfebf5ffbce792f03","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/init/ClassPathScanImplementationLookup.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -38,6 +38,7 @@\n import org.apache.syncope.core.persistence.api.dao.PasswordRule;\n import org.apache.syncope.core.persistence.api.dao.PasswordRuleConfClass;\n import org.apache.syncope.core.provisioning.api.LogicActions;\n+import org.apache.syncope.core.provisioning.api.data.MappingItemTransformer;\n import org.apache.syncope.core.provisioning.api.job.SchedTaskJobDelegate;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationActions;\n import org.apache.syncope.core.provisioning.api.sync.PushActions;\n@@ -90,6 +91,7 @@ public void load() {\n         scanner.addIncludeFilter(new AssignableTypeFilter(Reportlet.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(AccountRule.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(PasswordRule.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(MappingItemTransformer.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(SchedTaskJobDelegate.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(LogicActions.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(PropagationActions.class));\n@@ -131,6 +133,10 @@ public void load() {\n                     }\n                 }\n \n+                if (MappingItemTransformer.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n+                    classNames.get(Type.MAPPING_ITEM_TRANSFORMER).add(clazz.getName());\n+                }\n+\n                 if (SchedTaskJobDelegate.class.isAssignableFrom(clazz) && !isAbsractClazz\n                         && !SyncJobDelegate.class.isAssignableFrom(clazz)\n                         && !PushJobDelegate.class.isAssignableFrom(clazz)) {"},{"sha":"f78cc3163310c2d4b84146e36df2e877af4b2b56","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/ConnObjectUtils.java","status":"modified","additions":41,"deletions":191,"changes":232,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtils.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -21,11 +21,7 @@\n import org.apache.syncope.core.misc.policy.InvalidPasswordRuleConf;\n import org.apache.syncope.core.misc.security.SecureRandomUtils;\n import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.HashMap;\n import java.util.List;\n-import java.util.Map;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.patch.AnyPatch;\n@@ -37,17 +33,11 @@\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.AttrSchemaType;\n-import org.apache.syncope.common.lib.types.MappingPurpose;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.ParsingValidationException;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n-import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n-import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.misc.security.Encryptor;\n@@ -71,6 +61,8 @@ public class ConnObjectUtils {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ConnObjectUtils.class);\n \n+    private static final Encryptor ENCRYPTOR = Encryptor.getInstance();\n+\n     @Autowired\n     private TemplateUtils templateUtils;\n \n@@ -84,12 +76,44 @@ public class ConnObjectUtils {\n     private ExternalResourceDAO resourceDAO;\n \n     @Autowired\n-    private PlainSchemaDAO plainSchemaDAO;\n+    private PasswordGenerator passwordGenerator;\n \n     @Autowired\n-    private PasswordGenerator pwdGen;\n+    private MappingUtils mappingUtils;\n+\n+    /**\n+     * Extract password value from passed value (if instance of GuardedString or GuardedByteArray).\n+     *\n+     * @param pwd received from the underlying connector\n+     * @return password value\n+     */\n+    public static String getPassword(final Object pwd) {\n+        final StringBuilder result = new StringBuilder();\n+\n+        if (pwd instanceof GuardedString) {\n+            ((GuardedString) pwd).access(new GuardedString.Accessor() {\n+\n+                @Override\n+                public void access(final char[] clearChars) {\n+                    result.append(clearChars);\n+                }\n+            });\n+        } else if (pwd instanceof GuardedByteArray) {\n+            ((GuardedByteArray) pwd).access(new GuardedByteArray.Accessor() {\n+\n+                @Override\n+                public void access(final byte[] clearBytes) {\n+                    result.append(new String(clearBytes));\n+                }\n+            });\n+        } else if (pwd instanceof String) {\n+            result.append((String) pwd);\n+        } else {\n+            result.append(pwd.toString());\n+        }\n \n-    private final Encryptor encryptor = Encryptor.getInstance();\n+        return result.toString();\n+    }\n \n     /**\n      * Build a UserTO / GroupTO / AnyObjectTO out of connector object attributes and schema mapping.\n@@ -131,7 +155,7 @@ public <T extends AnyTO> T getAnyTO(\n \n             String password;\n             try {\n-                password = pwdGen.generate(ruleConfs);\n+                password = passwordGenerator.generate(ruleConfs);\n             } catch (InvalidPasswordRuleConf e) {\n                 LOG.error(\"Could not generate policy-compliant random password for {}\", userTO, e);\n \n@@ -167,7 +191,7 @@ public <T extends AnyPatch> T getAnyPatch(final Long key, final ConnectorObject\n             // update password if and only if password is really changed\n             User user = userDAO.authFind(key);\n             if (StringUtils.isBlank(((UserTO) updated).getPassword())\n-                    || encryptor.verify(((UserTO) updated).getPassword(),\n+                    || ENCRYPTOR.verify(((UserTO) updated).getPassword(),\n                             user.getCipherAlgorithm(), user.getPassword())) {\n \n                 ((UserTO) updated).setPassword(null);\n@@ -190,127 +214,8 @@ private <T extends AnyTO> T getAnyTOFromConnObject(final ConnectorObject obj,\n \n         // 1. fill with data from connector object\n         anyTO.setRealm(syncTask.getDestinatioRealm().getFullPath());\n-        for (MappingItem item : MappingUtils.getMappingItems(provision, MappingPurpose.SYNCHRONIZATION)) {\n-            Attribute attr = obj.getAttributeByName(item.getExtAttrName());\n-\n-            AttrTO attrTO;\n-            switch (item.getIntMappingType()) {\n-                case UserKey:\n-                case GroupKey:\n-                case AnyObjectKey:\n-                    break;\n-\n-                case Password:\n-                    if (anyTO instanceof UserTO && attr != null && attr.getValue() != null\n-                            && !attr.getValue().isEmpty()) {\n-\n-                        ((UserTO) anyTO).setPassword(getPassword(attr.getValue().get(0)));\n-                    }\n-                    break;\n-\n-                case Username:\n-                    if (anyTO instanceof UserTO) {\n-                        ((UserTO) anyTO).setUsername(attr == null || attr.getValue().isEmpty()\n-                                || attr.getValue().get(0) == null\n-                                        ? null\n-                                        : attr.getValue().get(0).toString());\n-                    }\n-                    break;\n-\n-                case GroupName:\n-                    if (anyTO instanceof GroupTO) {\n-                        ((GroupTO) anyTO).setName(attr == null || attr.getValue().isEmpty()\n-                                || attr.getValue().get(0) == null\n-                                        ? null\n-                                        : attr.getValue().get(0).toString());\n-                    }\n-                    break;\n-\n-                case GroupOwnerSchema:\n-                    if (anyTO instanceof GroupTO && attr != null) {\n-                        // using a special attribute (with schema \"\", that will be ignored) for carrying the\n-                        // GroupOwnerSchema value\n-                        attrTO = new AttrTO();\n-                        attrTO.setSchema(StringUtils.EMPTY);\n-                        if (attr.getValue().isEmpty() || attr.getValue().get(0) == null) {\n-                            attrTO.getValues().add(StringUtils.EMPTY);\n-                        } else {\n-                            attrTO.getValues().add(attr.getValue().get(0).toString());\n-                        }\n-\n-                        ((GroupTO) anyTO).getPlainAttrs().add(attrTO);\n-                    }\n-                    break;\n-\n-                case UserPlainSchema:\n-                case GroupPlainSchema:\n-                case AnyObjectPlainSchema:\n-                    attrTO = new AttrTO();\n-                    attrTO.setSchema(item.getIntAttrName());\n-\n-                    PlainSchema schema = plainSchemaDAO.find(item.getIntAttrName());\n-\n-                    for (Object value : attr == null || attr.getValue() == null\n-                            ? Collections.emptyList()\n-                            : attr.getValue()) {\n-\n-                        AttrSchemaType schemaType = schema == null ? AttrSchemaType.String : schema.getType();\n-                        if (value != null) {\n-                            final PlainAttrValue attrValue = anyUtils.newPlainAttrValue();\n-                            switch (schemaType) {\n-                                case String:\n-                                    attrValue.setStringValue(value.toString());\n-                                    break;\n-\n-                                case Binary:\n-                                    attrValue.setBinaryValue((byte[]) value);\n-                                    break;\n-\n-                                default:\n-                                    try {\n-                                        attrValue.parseValue(schema, value.toString());\n-                                    } catch (ParsingValidationException e) {\n-                                        LOG.error(\"While parsing provided value {}\", value, e);\n-                                        attrValue.setStringValue(value.toString());\n-                                        schemaType = AttrSchemaType.String;\n-                                    }\n-                                    break;\n-                            }\n-                            attrTO.getValues().add(attrValue.getValueAsString(schemaType));\n-                        }\n-                    }\n-\n-                    anyTO.getPlainAttrs().add(attrTO);\n-                    break;\n-\n-                case UserDerivedSchema:\n-                case GroupDerivedSchema:\n-                case AnyObjectDerivedSchema:\n-                    attrTO = new AttrTO();\n-                    attrTO.setSchema(item.getIntAttrName());\n-                    anyTO.getDerAttrs().add(attrTO);\n-                    break;\n-\n-                case UserVirtualSchema:\n-                case GroupVirtualSchema:\n-                case AnyObjectVirtualSchema:\n-                    attrTO = new AttrTO();\n-                    attrTO.setSchema(item.getIntAttrName());\n-\n-                    for (Object value : attr == null || attr.getValue() == null\n-                            ? Collections.emptyList()\n-                            : attr.getValue()) {\n-\n-                        if (value != null) {\n-                            attrTO.getValues().add(value.toString());\n-                        }\n-                    }\n-\n-                    anyTO.getVirAttrs().add(attrTO);\n-                    break;\n-\n-                default:\n-            }\n+        for (MappingItem item : MappingUtils.getSyncMappingItems(provision)) {\n+            mappingUtils.setIntValues(item, obj.getAttributeByName(item.getExtAttrName()), anyTO, anyUtils);\n         }\n \n         // 2. add data from defined template (if any)\n@@ -319,40 +224,6 @@ private <T extends AnyTO> T getAnyTOFromConnObject(final ConnectorObject obj,\n         return anyTO;\n     }\n \n-    /**\n-     * Extract password value from passed value (if instance of GuardedString or GuardedByteArray).\n-     *\n-     * @param pwd received from the underlying connector\n-     * @return password value\n-     */\n-    public String getPassword(final Object pwd) {\n-        final StringBuilder result = new StringBuilder();\n-\n-        if (pwd instanceof GuardedString) {\n-            ((GuardedString) pwd).access(new GuardedString.Accessor() {\n-\n-                @Override\n-                public void access(final char[] clearChars) {\n-                    result.append(clearChars);\n-                }\n-            });\n-        } else if (pwd instanceof GuardedByteArray) {\n-            ((GuardedByteArray) pwd).access(new GuardedByteArray.Accessor() {\n-\n-                @Override\n-                public void access(final byte[] clearBytes) {\n-                    result.append(new String(clearBytes));\n-                }\n-            });\n-        } else if (pwd instanceof String) {\n-            result.append((String) pwd);\n-        } else {\n-            result.append(pwd.toString());\n-        }\n-\n-        return result.toString();\n-    }\n-\n     /**\n      * Get connector object TO from a connector object.\n      *\n@@ -385,25 +256,4 @@ public ConnObjectTO getConnObjectTO(final ConnectorObject connObject) {\n \n         return connObjectTO;\n     }\n-\n-    /**\n-     * Transform a\n-     * <code>Collection</code> of {@link Attribute} instances into a {@link Map}. The key to each element in the map is\n-     * the <i>name</i> of an\n-     * <code>Attribute</code>. The value of each element in the map is the\n-     * <code>Attribute</code> instance with that name. <br/> Different from the original because: <ul> <li>map keys are\n-     * transformed toUpperCase()</li> <li>returned map is mutable</li> </ul>\n-     *\n-     * @param attributes set of attribute to transform to a map.\n-     * @return a map of string and attribute.\n-     *\n-     * @see org.identityconnectors.framework.common.objects.AttributeUtil#toMap(java.util.Collection)\n-     */\n-    public Map<String, Attribute> toMap(final Collection<? extends Attribute> attributes) {\n-        final Map<String, Attribute> map = new HashMap<>();\n-        for (Attribute attr : attributes) {\n-            map.put(attr.getName().toUpperCase(), attr);\n-        }\n-        return map;\n-    }\n }"},{"sha":"085f07d9549c2a9c11c00d8264a1e6718d72b8f8","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/MappingUtils.java","status":"modified","additions":352,"deletions":149,"changes":501,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FMappingUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FMappingUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FMappingUtils.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.misc;\n \n-import org.apache.syncope.core.misc.policy.InvalidPasswordRuleConf;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n@@ -27,16 +26,24 @@\n import java.util.Map;\n import java.util.Set;\n import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.ListUtils;\n import org.apache.commons.collections4.Predicate;\n import org.apache.commons.jexl2.JexlContext;\n import org.apache.commons.jexl2.MapContext;\n+import org.apache.commons.lang3.ClassUtils;\n+import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.patch.AttrPatch;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.common.lib.types.IntMappingType;\n import org.apache.syncope.common.lib.types.MappingPurpose;\n+import org.apache.syncope.core.misc.policy.InvalidPasswordRuleConf;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.VirSchemaDAO;\n import org.apache.syncope.core.persistence.api.entity.AnyUtils;\n@@ -53,17 +60,21 @@\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.cache.VirAttrCache;\n import org.apache.syncope.core.misc.security.Encryptor;\n-import org.apache.syncope.core.misc.spring.ApplicationContextProvider;\n import org.apache.syncope.core.misc.jexl.JexlUtils;\n import org.apache.syncope.core.misc.security.PasswordGenerator;\n+import org.apache.syncope.core.misc.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.persistence.api.attrvalue.validation.ParsingValidationException;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.Any;\n+import org.apache.syncope.core.persistence.api.entity.PlainAttrUniqueValue;\n+import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n import org.apache.syncope.core.persistence.api.entity.Schema;\n import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n import org.apache.syncope.core.persistence.api.entity.resource.Mapping;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n+import org.apache.syncope.core.provisioning.api.data.MappingItemTransformer;\n import org.identityconnectors.framework.common.FrameworkUtil;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n@@ -72,14 +83,45 @@\n import org.identityconnectors.framework.common.objects.OperationalAttributes;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.support.DefaultListableBeanFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.support.AbstractBeanDefinition;\n+import org.springframework.stereotype.Component;\n+import org.springframework.transaction.annotation.Transactional;\n \n-public final class MappingUtils {\n+@Component\n+public class MappingUtils {\n \n     private static final Logger LOG = LoggerFactory.getLogger(MappingUtils.class);\n \n     private static final Encryptor ENCRYPTOR = Encryptor.getInstance();\n \n+    @Autowired\n+    private UserDAO userDAO;\n+\n+    @Autowired\n+    private AnyTypeDAO anyTypeDAO;\n+\n+    @Autowired\n+    private PlainSchemaDAO plainSchemaDAO;\n+\n+    @Autowired\n+    private VirSchemaDAO virSchemaDAO;\n+\n+    @Autowired\n+    private VirAttrHandler virAttrHandler;\n+\n+    @Autowired\n+    private VirAttrCache virAttrCache;\n+\n+    @Autowired\n+    private PasswordGenerator passwordGenerator;\n+\n+    @Autowired\n+    private EntityFactory entityFactory;\n+\n+    @Autowired\n+    private AnyUtilsFactory anyUtilsFactory;\n+\n     public static <T extends MappingItem> Collection<T> getMatchingMappingItems(\n             final Collection<T> items, final IntMappingType type) {\n \n@@ -116,6 +158,144 @@ public boolean evaluate(final T item) {\n         });\n     }\n \n+    public static MappingItem getConnObjectKeyItem(final Provision provision) {\n+        Mapping mapping = null;\n+        if (provision != null) {\n+            mapping = provision.getMapping();\n+        }\n+\n+        return mapping == null\n+                ? null\n+                : mapping.getConnObjectKeyItem();\n+    }\n+\n+    private static List<MappingItem> getMappingItems(final Provision provision, final MappingPurpose purpose) {\n+        List<? extends MappingItem> items = Collections.<MappingItem>emptyList();\n+        if (provision != null) {\n+            items = provision.getMapping().getItems();\n+        }\n+\n+        List<MappingItem> result = new ArrayList<>();\n+\n+        switch (purpose) {\n+            case SYNCHRONIZATION:\n+                for (MappingItem item : items) {\n+                    if (MappingPurpose.PROPAGATION != item.getPurpose()\n+                            && MappingPurpose.NONE != item.getPurpose()) {\n+\n+                        result.add(item);\n+                    }\n+                }\n+                break;\n+\n+            case PROPAGATION:\n+                for (MappingItem item : items) {\n+                    if (MappingPurpose.SYNCHRONIZATION != item.getPurpose()\n+                            && MappingPurpose.NONE != item.getPurpose()) {\n+\n+                        result.add(item);\n+                    }\n+                }\n+                break;\n+\n+            case BOTH:\n+                for (MappingItem item : items) {\n+                    if (MappingPurpose.NONE != item.getPurpose()) {\n+                        result.add(item);\n+                    }\n+                }\n+                break;\n+\n+            case NONE:\n+                for (MappingItem item : items) {\n+                    if (MappingPurpose.NONE == item.getPurpose()) {\n+                        result.add(item);\n+                    }\n+                }\n+                break;\n+\n+            default:\n+        }\n+\n+        return result;\n+    }\n+\n+    public static List<MappingItem> getBothMappingItems(final Provision provision) {\n+        return getMappingItems(provision, MappingPurpose.BOTH);\n+    }\n+\n+    public static List<MappingItem> getPropagationMappingItems(final Provision provision) {\n+        return getMappingItems(provision, MappingPurpose.PROPAGATION);\n+    }\n+\n+    public static List<MappingItem> getSyncMappingItems(final Provision provision) {\n+        return getMappingItems(provision, MappingPurpose.SYNCHRONIZATION);\n+    }\n+\n+    /**\n+     * Build __NAME__ for propagation. First look if there ia a defined connObjectLink for the given resource (and in\n+     * this case evaluate as JEXL); otherwise, take given connObjectKey.\n+     *\n+     * @param any given any object\n+     * @param provision external resource\n+     * @param connObjectKey connector object key\n+     * @return the value to be propagated as __NAME__\n+     */\n+    public static Name evaluateNAME(final Any<?, ?, ?> any, final Provision provision, final String connObjectKey) {\n+        if (StringUtils.isBlank(connObjectKey)) {\n+            // LOG error but avoid to throw exception: leave it to the external resource\n+            LOG.error(\"Missing ConnObjectKey for '{}': \", provision.getResource());\n+        }\n+\n+        // Evaluate connObjectKey expression\n+        String connObjectLink = provision == null || provision.getMapping() == null\n+                ? null\n+                : provision.getMapping().getConnObjectLink();\n+        String evalConnObjectLink = null;\n+        if (StringUtils.isNotBlank(connObjectLink)) {\n+            JexlContext jexlContext = new MapContext();\n+            JexlUtils.addFieldsToContext(any, jexlContext);\n+            JexlUtils.addPlainAttrsToContext(any.getPlainAttrs(), jexlContext);\n+            JexlUtils.addDerAttrsToContext(any.getDerAttrs(), any.getPlainAttrs(), jexlContext);\n+            evalConnObjectLink = JexlUtils.evaluate(connObjectLink, jexlContext);\n+        }\n+\n+        // If connObjectLink evaluates to an empty string, just use the provided connObjectKey as Name(),\n+        // otherwise evaluated connObjectLink expression is taken as Name().\n+        Name name;\n+        if (StringUtils.isBlank(evalConnObjectLink)) {\n+            // add connObjectKey as __NAME__ attribute ...\n+            LOG.debug(\"Add connObjectKey [{}] as __NAME__\", connObjectKey);\n+            name = new Name(connObjectKey);\n+        } else {\n+            LOG.debug(\"Add connObjectLink [{}] as __NAME__\", evalConnObjectLink);\n+            name = new Name(evalConnObjectLink);\n+\n+            // connObjectKey not propagated: it will be used to set the value for __UID__ attribute\n+            LOG.debug(\"connObjectKey will be used just as __UID__ attribute\");\n+        }\n+\n+        return name;\n+    }\n+\n+    public static List<MappingItemTransformer> getMappingItemTransformers(final MappingItem mappingItem) {\n+        List<MappingItemTransformer> result = new ArrayList<>();\n+\n+        for (String className : mappingItem.getMappingItemTransformerClassNames()) {\n+            try {\n+                Class<?> transformerClass = ClassUtils.getClass(className);\n+\n+                result.add((MappingItemTransformer) ApplicationContextProvider.\n+                        getBeanFactory().\n+                        createBean(transformerClass, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false));\n+            } catch (Exception e) {\n+                LOG.error(\"Could not instantiate {}, ignoring...\", className, e);\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n     /**\n      * Prepare attributes for sending to a connector instance.\n      *\n@@ -127,7 +307,8 @@ public boolean evaluate(final T item) {\n      * @param provision provision information\n      * @return connObjectLink + prepared attributes\n      */\n-    public static Pair<String, Set<Attribute>> prepareAttrs(\n+    @Transactional(readOnly = true)\n+    public Pair<String, Set<Attribute>> prepareAttrs(\n             final Any<?, ?, ?> any,\n             final String password,\n             final boolean changePwd,\n@@ -138,10 +319,6 @@ public static Pair<String, Set<Attribute>> prepareAttrs(\n         LOG.debug(\"Preparing resource attributes for {} with provision {} for attributes {}\",\n                 any, provision, any.getPlainAttrs());\n \n-        DefaultListableBeanFactory beanFactory = ApplicationContextProvider.getBeanFactory();\n-        VirAttrCache virAttrCache = beanFactory.getBean(VirAttrCache.class);\n-        PasswordGenerator passwordGenerator = beanFactory.getBean(PasswordGenerator.class);\n-\n         Set<Attribute> attributes = new HashSet<>();\n         String connObjectKey = null;\n \n@@ -157,8 +334,7 @@ public static Pair<String, Set<Attribute>> prepareAttrs(\n                     virAttrCache.expire(any.getType().getKey(), any.getKey(), mapping.getIntAttrName());\n                 }\n \n-                Pair<String, Attribute> preparedAttr = prepareAttr(\n-                        provision, mapping, any, password, passwordGenerator, vAttrs);\n+                Pair<String, Attribute> preparedAttr = prepareAttr(provision, mapping, any, password, vAttrs);\n \n                 if (preparedAttr != null && preparedAttr.getKey() != null) {\n                     connObjectKey = preparedAttr.getKey();\n@@ -211,22 +387,16 @@ public static Pair<String, Set<Attribute>> prepareAttrs(\n      * @param mapItem mapping item for the given attribute\n      * @param any any object\n      * @param password clear-text password\n-     * @param passwordGenerator password generator\n      * @param vAttrs virtual attributes to be managed\n      * @return connObjectLink + prepared attribute\n      */\n-    @SuppressWarnings(\"unchecked\")\n-    private static Pair<String, Attribute> prepareAttr(\n+    private Pair<String, Attribute> prepareAttr(\n             final Provision provision, final MappingItem mapItem,\n-            final Any<?, ?, ?> any, final String password, final PasswordGenerator passwordGenerator,\n+            final Any<?, ?, ?> any, final String password,\n             final Map<String, AttrPatch> vAttrs) {\n \n         List<Any<?, ?, ?>> anys = new ArrayList<>();\n \n-        DefaultListableBeanFactory beanFactory = ApplicationContextProvider.getBeanFactory();\n-        AnyUtilsFactory anyUtilsFactory = beanFactory.getBean(AnyUtilsFactory.class);\n-        VirAttrHandler virAttrHandler = beanFactory.getBean(VirAttrHandler.class);\n-\n         switch (mapItem.getIntMappingType().getAnyTypeKind()) {\n             case USER:\n                 if (any instanceof User) {\n@@ -236,7 +406,6 @@ private static Pair<String, Attribute> prepareAttr(\n \n             case GROUP:\n                 if (any instanceof User) {\n-                    UserDAO userDAO = beanFactory.getBean(UserDAO.class);\n                     for (Group group : userDAO.findAllGroups((User) any)) {\n                         virAttrHandler.retrieveVirAttrValues(group);\n                         anys.add(group);\n@@ -266,15 +435,13 @@ private static Pair<String, Attribute> prepareAttr(\n             case UserPlainSchema:\n             case GroupPlainSchema:\n             case AnyObjectPlainSchema:\n-                PlainSchemaDAO plainSchemaDAO = beanFactory.getBean(PlainSchemaDAO.class);\n                 schema = plainSchemaDAO.find(mapItem.getIntAttrName());\n                 schemaType = schema == null ? AttrSchemaType.String : schema.getType();\n                 break;\n \n             case UserVirtualSchema:\n             case GroupVirtualSchema:\n             case AnyObjectVirtualSchema:\n-                VirSchemaDAO virSchemaDAO = beanFactory.getBean(VirSchemaDAO.class);\n                 schema = virSchemaDAO.find(mapItem.getIntAttrName());\n                 readOnlyVirSchema = (schema != null && schema.isReadonly());\n                 schemaType = AttrSchemaType.String;\n@@ -357,81 +524,32 @@ private static Pair<String, Attribute> prepareAttr(\n         return result;\n     }\n \n-    /**\n-     * Build __NAME__ for propagation. First look if there ia a defined connObjectLink for the given resource (and in\n-     * this case evaluate as JEXL); otherwise, take given connObjectKey.\n-     *\n-     * @param any given any object\n-     * @param provision external resource\n-     * @param connObjectKey connector object key\n-     * @return the value to be propagated as __NAME__\n-     */\n-    public static Name evaluateNAME(final Any<?, ?, ?> any, final Provision provision, final String connObjectKey) {\n-        if (StringUtils.isBlank(connObjectKey)) {\n-            // LOG error but avoid to throw exception: leave it to the external resource\n-            LOG.error(\"Missing ConnObjectKey for '{}': \", provision.getResource());\n-        }\n-\n-        // Evaluate connObjectKey expression\n-        String connObjectLink = provision == null || provision.getMapping() == null\n-                ? null\n-                : provision.getMapping().getConnObjectLink();\n-        String evalConnObjectLink = null;\n-        if (StringUtils.isNotBlank(connObjectLink)) {\n-            JexlContext jexlContext = new MapContext();\n-            JexlUtils.addFieldsToContext(any, jexlContext);\n-            JexlUtils.addPlainAttrsToContext(any.getPlainAttrs(), jexlContext);\n-            JexlUtils.addDerAttrsToContext(any.getDerAttrs(), any.getPlainAttrs(), jexlContext);\n-            evalConnObjectLink = JexlUtils.evaluate(connObjectLink, jexlContext);\n-        }\n-\n-        // If connObjectLink evaluates to an empty string, just use the provided connObjectKey as Name(),\n-        // otherwise evaluated connObjectLink expression is taken as Name().\n-        Name name;\n-        if (StringUtils.isBlank(evalConnObjectLink)) {\n-            // add connObjectKey as __NAME__ attribute ...\n-            LOG.debug(\"Add connObjectKey [{}] as __NAME__\", connObjectKey);\n-            name = new Name(connObjectKey);\n-        } else {\n-            LOG.debug(\"Add connObjectLink [{}] as __NAME__\", evalConnObjectLink);\n-            name = new Name(evalConnObjectLink);\n-\n-            // connObjectKey not propagated: it will be used to set the value for __UID__ attribute\n-            LOG.debug(\"connObjectKey will be used just as __UID__ attribute\");\n-        }\n-\n-        return name;\n-    }\n-\n-    private static String getGroupOwnerValue(final Provision provision, final Any<?, ?, ?> any) {\n-        Pair<String, Attribute> preparedAttr = prepareAttr(provision, getConnObjectKeyItem(provision),\n-                any, null, null, Collections.<String, AttrPatch>emptyMap());\n+    private String getGroupOwnerValue(final Provision provision, final Any<?, ?, ?> any) {\n+        Pair<String, Attribute> preparedAttr = prepareAttr(\n+                provision, getConnObjectKeyItem(provision), any, null, Collections.<String, AttrPatch>emptyMap());\n         String connObjectKey = preparedAttr.getKey();\n \n-        final Name groupOwnerName = evaluateNAME(any, provision, connObjectKey);\n-        return groupOwnerName.getNameValue();\n+        return evaluateNAME(any, provision, connObjectKey).getNameValue();\n     }\n \n     /**\n-     * Get attribute values.\n+     * Get attribute values for the given {@link MappingItem} and any objects.\n      *\n      * @param provision provision information\n      * @param mappingItem mapping item\n      * @param anys any objects\n      * @param vAttrs virtual attributes to be managed\n      * @return attribute values.\n      */\n-    public static List<PlainAttrValue> getIntValues(final Provision provision,\n+    @Transactional(readOnly = true)\n+    public List<PlainAttrValue> getIntValues(final Provision provision,\n             final MappingItem mappingItem, final List<Any<?, ?, ?>> anys, final Map<String, AttrPatch> vAttrs) {\n \n         LOG.debug(\"Get attributes for '{}' and mapping type '{}'\", anys, mappingItem.getIntMappingType());\n \n-        EntityFactory entityFactory =\n-                ApplicationContextProvider.getBeanFactory().getBean(EntityFactory.class);\n-        AnyUtilsFactory anyUtilsFactory =\n-                ApplicationContextProvider.getBeanFactory().getBean(AnyUtilsFactory.class);\n+        boolean transform = true;\n+\n         List<PlainAttrValue> values = new ArrayList<>();\n-        PlainAttrValue attrValue;\n         switch (mappingItem.getIntMappingType()) {\n             case UserPlainSchema:\n             case GroupPlainSchema:\n@@ -440,9 +558,15 @@ public static List<PlainAttrValue> getIntValues(final Provision provision,\n                     PlainAttr<?> attr = any.getPlainAttr(mappingItem.getIntAttrName());\n                     if (attr != null) {\n                         if (attr.getUniqueValue() != null) {\n-                            values.add(attr.getUniqueValue());\n+                            PlainAttrUniqueValue value = SerializationUtils.clone(attr.getUniqueValue());\n+                            value.setAttr(null);\n+                            values.add(value);\n                         } else if (attr.getValues() != null) {\n-                            values.addAll(attr.getValues());\n+                            for (PlainAttrValue value : attr.getValues()) {\n+                                PlainAttrValue shadow = SerializationUtils.clone(value);\n+                                shadow.setAttr(null);\n+                                values.add(shadow);\n+                            }\n                         }\n                     }\n \n@@ -458,26 +582,27 @@ public static List<PlainAttrValue> getIntValues(final Provision provision,\n             case UserVirtualSchema:\n             case GroupVirtualSchema:\n             case AnyObjectVirtualSchema:\n+                // virtual attributes don't get transformed\n+                transform = false;\n+\n                 for (Any<?, ?, ?> any : anys) {\n                     AnyUtils anyUtils = anyUtilsFactory.getInstance(any);\n-                    VirAttr<?> virAttr = any.getVirAttr(mappingItem.getIntAttrName());\n-                    if (virAttr != null) {\n+                    VirAttr<?> attr = any.getVirAttr(mappingItem.getIntAttrName());\n+                    if (attr != null) {\n                         if (vAttrs != null) {\n                             if (vAttrs.containsKey(mappingItem.getIntAttrName())) {\n-                                virAttr.getValues().clear();\n-                                virAttr.getValues().addAll(\n+                                attr.getValues().clear();\n+                                attr.getValues().addAll(\n                                         vAttrs.get(mappingItem.getIntAttrName()).getAttrTO().getValues());\n                             } else {\n                                 throw new IllegalArgumentException(\"Don't need to update virtual attribute '\"\n                                         + mappingItem.getIntAttrName() + \"'\");\n                             }\n                         }\n-                        if (virAttr.getValues() != null) {\n-                            for (String value : virAttr.getValues()) {\n-                                attrValue = anyUtils.newPlainAttrValue();\n-                                attrValue.setStringValue(value);\n-                                values.add(attrValue);\n-                            }\n+                        for (String value : attr.getValues()) {\n+                            PlainAttrValue attrValue = anyUtils.newPlainAttrValue();\n+                            attrValue.setStringValue(value);\n+                            values.add(attrValue);\n                         }\n                     }\n \n@@ -486,7 +611,7 @@ public static List<PlainAttrValue> getIntValues(final Provision provision,\n                             + \"\\n* IntMappingType {}\"\n                             + \"\\n* Attribute values {}\",\n                             any.getClass().getSimpleName(),\n-                            virAttr, mappingItem.getIntAttrName(), mappingItem.getIntMappingType(), values);\n+                            attr, mappingItem.getIntAttrName(), mappingItem.getIntMappingType(), values);\n                 }\n                 break;\n \n@@ -495,18 +620,18 @@ public static List<PlainAttrValue> getIntValues(final Provision provision,\n             case AnyObjectDerivedSchema:\n                 for (Any<?, ?, ?> any : anys) {\n                     AnyUtils anyUtils = anyUtilsFactory.getInstance(any);\n-                    DerAttr<?> derAttr = any.getDerAttr(mappingItem.getIntAttrName());\n-                    if (derAttr != null) {\n-                        attrValue = anyUtils.newPlainAttrValue();\n-                        attrValue.setStringValue(derAttr.getValue(any.getPlainAttrs()));\n+                    DerAttr<?> attr = any.getDerAttr(mappingItem.getIntAttrName());\n+                    if (attr != null) {\n+                        PlainAttrValue attrValue = anyUtils.newPlainAttrValue();\n+                        attrValue.setStringValue(attr.getValue(any.getPlainAttrs()));\n                         values.add(attrValue);\n                     }\n \n                     LOG.debug(\"Retrieved attribute {}\"\n                             + \"\\n* IntAttrName {}\"\n                             + \"\\n* IntMappingType {}\"\n                             + \"\\n* Attribute values {}\",\n-                            derAttr, mappingItem.getIntAttrName(), mappingItem.getIntMappingType(), values);\n+                            attr, mappingItem.getIntAttrName(), mappingItem.getIntMappingType(), values);\n                 }\n                 break;\n \n@@ -515,7 +640,7 @@ public static List<PlainAttrValue> getIntValues(final Provision provision,\n             case AnyObjectKey:\n                 for (Any<?, ?, ?> any : anys) {\n                     AnyUtils anyUtils = anyUtilsFactory.getInstance(any);\n-                    attrValue = anyUtils.newPlainAttrValue();\n+                    PlainAttrValue attrValue = anyUtils.newPlainAttrValue();\n                     attrValue.setStringValue(any.getKey().toString());\n                     values.add(attrValue);\n                 }\n@@ -524,7 +649,7 @@ public static List<PlainAttrValue> getIntValues(final Provision provision,\n             case Username:\n                 for (Any<?, ?, ?> any : anys) {\n                     if (any instanceof User) {\n-                        attrValue = entityFactory.newEntity(UPlainAttrValue.class);\n+                        UPlainAttrValue attrValue = entityFactory.newEntity(UPlainAttrValue.class);\n                         attrValue.setStringValue(((User) any).getUsername());\n                         values.add(attrValue);\n                     }\n@@ -534,15 +659,14 @@ public static List<PlainAttrValue> getIntValues(final Provision provision,\n             case GroupName:\n                 for (Any<?, ?, ?> any : anys) {\n                     if (any instanceof Group) {\n-                        attrValue = entityFactory.newEntity(GPlainAttrValue.class);\n+                        GPlainAttrValue attrValue = entityFactory.newEntity(GPlainAttrValue.class);\n                         attrValue.setStringValue(((Group) any).getName());\n                         values.add(attrValue);\n                     }\n                 }\n                 break;\n \n             case GroupOwnerSchema:\n-                AnyTypeDAO anyTypeDAO = ApplicationContextProvider.getBeanFactory().getBean(AnyTypeDAO.class);\n                 Mapping uMapping = provision.getAnyType().equals(anyTypeDAO.findUser())\n                         ? null\n                         : provision.getMapping();\n@@ -562,7 +686,7 @@ public static List<PlainAttrValue> getIntValues(final Provision provision,\n                         }\n \n                         if (StringUtils.isNotBlank(groupOwnerValue)) {\n-                            attrValue = entityFactory.newEntity(GPlainAttrValue.class);\n+                            GPlainAttrValue attrValue = entityFactory.newEntity(GPlainAttrValue.class);\n                             attrValue.setStringValue(groupOwnerValue);\n                             values.add(attrValue);\n                         }\n@@ -573,9 +697,19 @@ public static List<PlainAttrValue> getIntValues(final Provision provision,\n             default:\n         }\n \n-        LOG.debug(\"Retrieved values '{}'\", values);\n+        LOG.debug(\"Values for propagation: {}\", values);\n \n-        return values;\n+        List<PlainAttrValue> transformed = values;\n+        if (transform) {\n+            for (MappingItemTransformer transformer : getMappingItemTransformers(mappingItem)) {\n+                transformed = transformer.beforePropagation(transformed);\n+            }\n+            LOG.debug(\"Transformed values for propagation: {}\", values);\n+        } else {\n+            LOG.debug(\"No transformation occurred\");\n+        }\n+\n+        return transformed;\n     }\n \n     /**\n@@ -585,79 +719,148 @@ public static List<PlainAttrValue> getIntValues(final Provision provision,\n      * @param provision provision information\n      * @return connObjectKey internal value\n      */\n-    public static String getConnObjectKeyValue(final Any<?, ?, ?> any, final Provision provision) {\n+    @Transactional(readOnly = true)\n+    public String getConnObjectKeyValue(final Any<?, ?, ?> any, final Provision provision) {\n         List<PlainAttrValue> values = getIntValues(provision, provision.getMapping().getConnObjectKeyItem(),\n                 Collections.<Any<?, ?, ?>>singletonList(any), null);\n         return values == null || values.isEmpty()\n                 ? null\n                 : values.get(0).getValueAsString();\n     }\n \n-    public static MappingItem getConnObjectKeyItem(final Provision provision) {\n-        Mapping mapping = null;\n-        if (provision != null) {\n-            mapping = provision.getMapping();\n-        }\n-\n-        return mapping == null\n-                ? null\n-                : mapping.getConnObjectKeyItem();\n-    }\n-\n-    public static List<MappingItem> getMappingItems(final Provision provision, final MappingPurpose purpose) {\n-        List<? extends MappingItem> items = Collections.<MappingItem>emptyList();\n-        if (provision != null) {\n-            items = provision.getMapping().getItems();\n+    /**\n+     * Set attribute values, according to the given {@link MappingItem}, to any object from attribute received from\n+     * connector.\n+     *\n+     * @param <T> any object\n+     * @param mappingItem mapping item\n+     * @param attr attribute received from connector\n+     * @param anyTO any object\n+     * @param anyUtils any utils\n+     */\n+    @Transactional(readOnly = true)\n+    public <T extends AnyTO> void setIntValues(\n+            final MappingItem mappingItem, final Attribute attr, final T anyTO, final AnyUtils anyUtils) {\n+\n+        List<Object> values = null;\n+        if (attr != null) {\n+            values = attr.getValue();\n+            for (MappingItemTransformer transformer : getMappingItemTransformers(mappingItem)) {\n+                values = transformer.beforeSync(values);\n+            }\n         }\n+        values = ListUtils.emptyIfNull(values);\n \n-        List<MappingItem> result = new ArrayList<>();\n+        switch (mappingItem.getIntMappingType()) {\n+            case UserKey:\n+            case GroupKey:\n+            case AnyObjectKey:\n+                break;\n \n-        switch (purpose) {\n-            case SYNCHRONIZATION:\n-                for (MappingItem item : items) {\n-                    if (MappingPurpose.PROPAGATION != item.getPurpose()\n-                            && MappingPurpose.NONE != item.getPurpose()) {\n+            case Password:\n+                if (anyTO instanceof UserTO && !values.isEmpty()) {\n+                    ((UserTO) anyTO).setPassword(ConnObjectUtils.getPassword(values.get(0)));\n+                }\n+                break;\n \n-                        result.add(item);\n-                    }\n+            case Username:\n+                if (anyTO instanceof UserTO) {\n+                    ((UserTO) anyTO).setUsername(values.isEmpty() || values.get(0) == null\n+                            ? null\n+                            : values.get(0).toString());\n                 }\n                 break;\n \n-            case PROPAGATION:\n-                for (MappingItem item : items) {\n-                    if (MappingPurpose.SYNCHRONIZATION != item.getPurpose()\n-                            && MappingPurpose.NONE != item.getPurpose()) {\n+            case GroupName:\n+                if (anyTO instanceof GroupTO) {\n+                    ((GroupTO) anyTO).setName(values.isEmpty() || values.get(0) == null\n+                            ? null\n+                            : values.get(0).toString());\n+                }\n+                break;\n \n-                        result.add(item);\n+            case GroupOwnerSchema:\n+                if (anyTO instanceof GroupTO && attr != null) {\n+                    // using a special attribute (with schema \"\", that will be ignored) for carrying the\n+                    // GroupOwnerSchema value\n+                    AttrTO attrTO = new AttrTO();\n+                    attrTO.setSchema(StringUtils.EMPTY);\n+                    if (values.isEmpty() || values.get(0) == null) {\n+                        attrTO.getValues().add(StringUtils.EMPTY);\n+                    } else {\n+                        attrTO.getValues().add(values.get(0).toString());\n                     }\n+\n+                    ((GroupTO) anyTO).getPlainAttrs().add(attrTO);\n                 }\n                 break;\n \n-            case BOTH:\n-                for (MappingItem item : items) {\n-                    if (MappingPurpose.NONE != item.getPurpose()) {\n-                        result.add(item);\n+            case UserPlainSchema:\n+            case GroupPlainSchema:\n+            case AnyObjectPlainSchema:\n+                AttrTO attrTO = new AttrTO();\n+                attrTO.setSchema(mappingItem.getIntAttrName());\n+\n+                PlainSchema schema = plainSchemaDAO.find(mappingItem.getIntAttrName());\n+\n+                for (Object value : values) {\n+                    AttrSchemaType schemaType = schema == null ? AttrSchemaType.String : schema.getType();\n+                    if (value != null) {\n+                        PlainAttrValue attrValue = anyUtils.newPlainAttrValue();\n+                        switch (schemaType) {\n+                            case String:\n+                                attrValue.setStringValue(value.toString());\n+                                break;\n+\n+                            case Binary:\n+                                attrValue.setBinaryValue((byte[]) value);\n+                                break;\n+\n+                            default:\n+                                try {\n+                                    attrValue.parseValue(schema, value.toString());\n+                                } catch (ParsingValidationException e) {\n+                                    LOG.error(\"While parsing provided value {}\", value, e);\n+                                    attrValue.setStringValue(value.toString());\n+                                    schemaType = AttrSchemaType.String;\n+                                }\n+                                break;\n+                        }\n+                        attrTO.getValues().add(attrValue.getValueAsString(schemaType));\n                     }\n                 }\n+\n+                anyTO.getPlainAttrs().add(attrTO);\n                 break;\n \n-            case NONE:\n-                for (MappingItem item : items) {\n-                    if (MappingPurpose.NONE == item.getPurpose()) {\n-                        result.add(item);\n+            case UserDerivedSchema:\n+            case GroupDerivedSchema:\n+            case AnyObjectDerivedSchema:\n+                attrTO = new AttrTO();\n+                attrTO.setSchema(mappingItem.getIntAttrName());\n+                anyTO.getDerAttrs().add(attrTO);\n+                break;\n+\n+            case UserVirtualSchema:\n+            case GroupVirtualSchema:\n+            case AnyObjectVirtualSchema:\n+                attrTO = new AttrTO();\n+                attrTO.setSchema(mappingItem.getIntAttrName());\n+\n+                // virtual attributes don't get transformed, iterate over original attr.getValue()\n+                for (Object value : (attr == null || attr.getValue() == null)\n+                        ? Collections.emptyList() : attr.getValue()) {\n+\n+                    if (value != null) {\n+                        attrTO.getValues().add(value.toString());\n                     }\n                 }\n+\n+                anyTO.getVirAttrs().add(attrTO);\n                 break;\n \n             default:\n         }\n-\n-        return result;\n     }\n \n-    /**\n-     * Private default constructor, for static-only classes.\n-     */\n-    private MappingUtils() {\n-    }\n }"},{"sha":"10eb23576fb3d5b580b79ff3dc2e99d9a37ca1df","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/security/AuthDataAccessor.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FAuthDataAccessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FAuthDataAccessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FAuthDataAccessor.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -72,6 +72,8 @@ public class AuthDataAccessor {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(AuthDataAccessor.class);\n \n+    protected static final Encryptor ENCRYPTOR = Encryptor.getInstance();\n+\n     @Resource(name = \"adminUser\")\n     protected String adminUser;\n \n@@ -102,7 +104,8 @@ public class AuthDataAccessor {\n     @Autowired\n     protected AuditManager auditManager;\n \n-    protected final Encryptor encryptor = Encryptor.getInstance();\n+    @Autowired\n+    protected MappingUtils mappingUtils;\n \n     @Transactional(readOnly = true)\n     public Domain findDomain(final String key) {\n@@ -158,7 +161,7 @@ public Pair<Long, Boolean> authenticate(final Authentication authentication) {\n     }\n \n     protected boolean authenticate(final User user, final String password) {\n-        boolean authenticated = encryptor.verify(password, user.getCipherAlgorithm(), user.getPassword());\n+        boolean authenticated = ENCRYPTOR.verify(password, user.getCipherAlgorithm(), user.getPassword());\n         LOG.debug(\"{} authenticated on internal storage: {}\", user.getUsername(), authenticated);\n \n         for (Iterator<? extends ExternalResource> itor = getPassthroughResources(user).iterator();\n@@ -167,7 +170,7 @@ protected boolean authenticate(final User user, final String password) {\n             ExternalResource resource = itor.next();\n             String connObjectKey = null;\n             try {\n-                connObjectKey = MappingUtils.getConnObjectKeyValue(user, resource.getProvision(anyTypeDAO.findUser()));\n+                connObjectKey = mappingUtils.getConnObjectKeyValue(user, resource.getProvision(anyTypeDAO.findUser()));\n                 Uid uid = connFactory.getConnector(resource).authenticate(connObjectKey, password, null);\n                 if (uid != null) {\n                     authenticated = true;"},{"sha":"5c780f0167955f440b12df654d44df1dbdd5e3d0","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/serialization/GuardedStringSerializer.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FGuardedStringSerializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FGuardedStringSerializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fserialization%2FGuardedStringSerializer.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -60,14 +60,14 @@ public void serialize(final GuardedString source, final JsonGenerator jgen, fina\n         jgen.writeBooleanField(\"disposed\", disposed);\n \n         final StringBuilder cleartext = new StringBuilder();\n-        ((GuardedString) source).access(new GuardedString.Accessor() {\n+        source.access(new GuardedString.Accessor() {\n \n             @Override\n             public void access(final char[] clearChars) {\n                 cleartext.append(clearChars);\n             }\n         });\n-        final byte[] encryptedBytes =\n+        byte[] encryptedBytes =\n                 EncryptorFactory.getInstance().getDefaultEncryptor().encrypt(cleartext.toString().getBytes());\n         jgen.writeStringField(\"encryptedBytes\", Base64.encode(encryptedBytes));\n "},{"sha":"fd349a910fd805e405dafcc61c2775371e81e3a6","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/ImplementationLookup.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -33,6 +33,7 @@ public enum Type {\n         REPORTLET,\n         ACCOUNT_RULE,\n         PASSWORD_RULE,\n+        MAPPING_ITEM_TRANSFORMER,\n         TASKJOBDELEGATE,\n         LOGIC_ACTIONS,\n         PROPAGATION_ACTIONS,"},{"sha":"0c949a715dd2903b5929c130a18dd0d5ba9f5516","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/ReportDAO.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportDAO.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.core.persistence.api.dao;\n \n import java.util.List;\n-import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.entity.Report;\n \n public interface ReportDAO extends DAO<Report, Long> {\n@@ -28,10 +27,6 @@ public interface ReportDAO extends DAO<Report, Long> {\n \n     List<Report> findAll();\n \n-    List<Report> findAll(int page, int itemsPerPage, List<OrderByClause> orderByClauses);\n-\n-    int count();\n-\n     Report save(Report report);\n \n     void delete(Long key);"},{"sha":"999660ed0bfcbd06874f5df28a44642e8cefade5","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/TaskDAO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.core.persistence.api.dao;\n \n import java.util.List;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n@@ -32,14 +33,13 @@ public interface TaskDAO extends DAO<Task, Long> {\n \n     <T extends Task> List<T> findToExec(TaskType type);\n \n-    <T extends Task> List<T> findAll(ExternalResource resource, TaskType type);\n-\n     <T extends Task> List<T> findAll(TaskType type);\n \n     <T extends Task> List<T> findAll(\n-            int page, int itemsPerPage, List<OrderByClause> orderByClauses, TaskType type);\n+            TaskType type, ExternalResource resource, AnyTypeKind anyTypeKind, Long anyTypeKey,\n+            int page, int itemsPerPage, List<OrderByClause> orderByClauses);\n \n-    int count(TaskType type);\n+    int count(TaskType type, ExternalResource resource, AnyTypeKind anyTypeKind, Long anyTypeKey);\n \n     <T extends Task> T save(T task);\n "},{"sha":"26aa9a13c507fca0cc189d86df9f5b05811b54fd","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/resource/ExternalResource.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResource.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -21,7 +21,6 @@\n import java.util.List;\n import java.util.Set;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.TraceLevel;\n import org.apache.syncope.core.persistence.api.entity.policy.AccountPolicy;\n import org.apache.syncope.core.persistence.api.entity.AnnotatedEntity;\n@@ -73,10 +72,6 @@ public interface ExternalResource extends AnnotatedEntity<String> {\n \n     List<String> getPropagationActionsClassNames();\n \n-    PropagationMode getPropagationMode();\n-\n-    void setPropagationMode(PropagationMode propagationMode);\n-\n     Integer getPropagationPriority();\n \n     void setPropagationPriority(Integer priority);"},{"sha":"9f515edac1e055076894c30c7db44fa41cf808b7","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/resource/MappingItem.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FMappingItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FMappingItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FMappingItem.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.persistence.api.entity.resource;\n \n+import java.util.List;\n import org.apache.syncope.common.lib.types.IntMappingType;\n import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n@@ -56,4 +57,6 @@ public interface MappingItem extends Entity<Long> {\n \n     void setPassword(boolean password);\n \n+    List<String> getMappingItemTransformerClassNames();\n+\n }"},{"sha":"db9e5a3a1f1dd2fe5f1217a0b1aed49e6b73a54a","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/PropagationTask.java","status":"modified","additions":2,"deletions":7,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPropagationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPropagationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPropagationTask.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -20,7 +20,6 @@\n \n import java.util.Set;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.identityconnectors.framework.common.objects.Attribute;\n@@ -43,13 +42,9 @@ public interface PropagationTask extends Task {\n \n     void setObjectClassName(String objectClassName);\n \n-    PropagationMode getPropagationMode();\n+    ResourceOperation getOperation();\n \n-    void setPropagationMode(PropagationMode propagationMode);\n-\n-    ResourceOperation getPropagationOperation();\n-\n-    void setPropagationOperation(ResourceOperation operation);\n+    void setOperation(ResourceOperation operation);\n \n     Long getAnyKey();\n "},{"sha":"3dbf25d1f2afd33f39a7c7aa0305424c54300763","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractDAO.java","status":"modified","additions":0,"deletions":25,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractDAO.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -18,19 +18,15 @@\n  */\n package org.apache.syncope.core.persistence.jpa.dao;\n \n-import java.util.List;\n import javax.persistence.EntityManager;\n-import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.core.misc.security.AuthContextUtils;\n import org.apache.syncope.core.misc.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.dao.DAO;\n-import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Configurable;\n import org.springframework.orm.jpa.EntityManagerFactoryUtils;\n-import org.springframework.util.ReflectionUtils;\n \n @Configurable\n public abstract class AbstractDAO<E extends Entity<KEY>, KEY> implements DAO<E, KEY> {\n@@ -48,27 +44,6 @@ protected EntityManager entityManager() {\n         return entityManager;\n     }\n \n-    protected String toOrderByStatement(final Class<? extends Entity<KEY>> beanClass, final String prefix,\n-            final List<OrderByClause> orderByClauses) {\n-\n-        StringBuilder statement = new StringBuilder();\n-\n-        for (OrderByClause clause : orderByClauses) {\n-            String field = clause.getField().trim();\n-            if (ReflectionUtils.findField(beanClass, field) != null) {\n-                if (StringUtils.isNotBlank(prefix)) {\n-                    statement.append(prefix).append('.');\n-                }\n-                statement.append(field).append(' ').append(clause.getDirection().name());\n-            }\n-        }\n-\n-        if (statement.length() > 0) {\n-            statement.insert(0, \"ORDER BY \");\n-        }\n-        return statement.toString();\n-    }\n-\n     @Override\n     public void refresh(final E entity) {\n         entityManager().refresh(entity);"},{"sha":"c227152e3d2fc4f90e138b3deea11d7c7197faca","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAReportDAO.java","status":"modified","additions":2,"deletions":25,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAReportDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAReportDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAReportDAO.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -18,12 +18,9 @@\n  */\n package org.apache.syncope.core.persistence.jpa.dao;\n \n-import java.util.Collections;\n import java.util.List;\n-import javax.persistence.Query;\n import javax.persistence.TypedQuery;\n import org.apache.syncope.core.persistence.api.dao.ReportDAO;\n-import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.entity.Report;\n import org.apache.syncope.core.persistence.jpa.entity.JPAReport;\n import org.springframework.stereotype.Repository;\n@@ -41,32 +38,12 @@ public Report find(final Long key) {\n     @Transactional(readOnly = true)\n     @Override\n     public List<Report> findAll() {\n-        return findAll(-1, -1, Collections.<OrderByClause>emptyList());\n-    }\n-\n-    @Override\n-    public List<Report> findAll(final int page, final int itemsPerPage, final List<OrderByClause> orderByClauses) {\n-        final TypedQuery<Report> query = entityManager().createQuery(\n-                \"SELECT e FROM \" + JPAReport.class.getSimpleName() + \" e \"\n-                + toOrderByStatement(Report.class, \"e\", orderByClauses), Report.class);\n-\n-        query.setFirstResult(itemsPerPage * (page <= 0\n-                ? 0\n-                : page - 1));\n-\n-        if (itemsPerPage > 0) {\n-            query.setMaxResults(itemsPerPage);\n-        }\n+        TypedQuery<Report> query = entityManager().createQuery(\n+                \"SELECT e FROM \" + JPAReport.class.getSimpleName() + \" e\", Report.class);\n \n         return query.getResultList();\n     }\n \n-    @Override\n-    public int count() {\n-        Query countQuery = entityManager().createNativeQuery(\"SELECT COUNT(id) FROM \" + JPAReport.TABLE);\n-        return ((Number) countQuery.getSingleResult()).intValue();\n-    }\n-\n     @Override\n     @Transactional(rollbackFor = Throwable.class)\n     public Report save(final Report report) {"},{"sha":"21a32e6d2fdf1e6a559467a29dccd16207501efe","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPATaskDAO.java","status":"modified","additions":104,"deletions":36,"changes":140,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -23,6 +23,7 @@\n import javax.persistence.Query;\n import org.apache.commons.collections4.Closure;\n import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.dao.TaskDAO;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n@@ -36,6 +37,7 @@\n import org.apache.syncope.core.persistence.jpa.entity.task.AbstractTask;\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.util.ReflectionUtils;\n \n @Repository\n public class JPATaskDAO extends AbstractDAO<Task, Long> implements TaskDAO {\n@@ -78,59 +80,106 @@ public <T extends Task> T find(final Long key) {\n         return (T) entityManager().find(AbstractTask.class, key);\n     }\n \n-    private <T extends Task> StringBuilder buildfindAllQuery(final TaskType type) {\n-        return new StringBuilder(\"SELECT e FROM \").\n+    private <T extends Task> StringBuilder buildFindAllQuery(final TaskType type) {\n+        return new StringBuilder(\"SELECT t FROM \").\n                 append(getEntityReference(type).getSimpleName()).\n-                append(\" e WHERE e.type=:type \");\n+                append(\" t WHERE t.type=:type \");\n     }\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public <T extends Task> List<T> findToExec(final TaskType type) {\n-        StringBuilder queryString = buildfindAllQuery(type).append(\"AND \");\n+        StringBuilder queryString = buildFindAllQuery(type).append(\"AND \");\n \n         if (type == TaskType.NOTIFICATION) {\n-            queryString.append(\"e.executed = 0 \");\n+            queryString.append(\"t.executed = 0 \");\n         } else {\n-            queryString.append(\"e.executions IS EMPTY \");\n+            queryString.append(\"t.executions IS EMPTY \");\n         }\n-        queryString.append(\"ORDER BY e.id DESC\");\n+        queryString.append(\"ORDER BY t.id DESC\");\n \n         Query query = entityManager().createQuery(queryString.toString());\n         query.setParameter(\"type\", type);\n         return query.getResultList();\n     }\n \n+    @Transactional(readOnly = true)\n     @Override\n-    @SuppressWarnings(\"unchecked\")\n-    public <T extends Task> List<T> findAll(final ExternalResource resource, final TaskType type) {\n-        StringBuilder queryString = buildfindAllQuery(type).append(\"AND e.resource=:resource ORDER BY e.id DESC\");\n+    public <T extends Task> List<T> findAll(final TaskType type) {\n+        return findAll(type, null, null, null, -1, -1, Collections.<OrderByClause>emptyList());\n+    }\n \n-        final Query query = entityManager().createQuery(queryString.toString());\n-        query.setParameter(\"type\", type);\n-        query.setParameter(\"resource\", resource);\n+    private StringBuilder buildFindAllQuery(\n+            final TaskType type,\n+            final ExternalResource resource,\n+            final AnyTypeKind anyTypeKind,\n+            final Long anyTypeKey) {\n \n-        return query.getResultList();\n+        if (resource != null\n+                && type != TaskType.PROPAGATION && type != TaskType.PUSH && type != TaskType.SYNCHRONIZATION) {\n+\n+            throw new IllegalArgumentException(type + \" is not related to \" + ExternalResource.class.getSimpleName());\n+        }\n+\n+        if ((anyTypeKind != null || anyTypeKey != null) && type != TaskType.PROPAGATION) {\n+            throw new IllegalArgumentException(type + \" is not related to users, groups or any objects\");\n+        }\n+\n+        StringBuilder queryString = buildFindAllQuery(type);\n+\n+        if (resource != null) {\n+            queryString.append(\"AND t.resource=:resource \");\n+        }\n+        if (anyTypeKind != null && anyTypeKey != null) {\n+            queryString.append(\"AND t.anyTypeKind=:anyTypeKind AND t.anyTypeKey=:anyTypeKey \");\n+        }\n+\n+        return queryString;\n     }\n \n-    @Transactional(readOnly = true)\n-    @Override\n-    public <T extends Task> List<T> findAll(final TaskType type) {\n-        return findAll(-1, -1, Collections.<OrderByClause>emptyList(), type);\n+    private String toOrderByStatement(\n+            final Class<? extends Task> beanClass, final List<OrderByClause> orderByClauses) {\n+\n+        StringBuilder statement = new StringBuilder();\n+\n+        for (OrderByClause clause : orderByClauses) {\n+            String field = clause.getField().trim();\n+            if (ReflectionUtils.findField(beanClass, field) != null) {\n+                statement.append(\"t.\").append(field).append(' ').append(clause.getDirection().name());\n+            }\n+        }\n+\n+        if (statement.length() > 0) {\n+            statement.insert(0, \"ORDER BY \");\n+        }\n+        return statement.toString();\n     }\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public <T extends Task> List<T> findAll(final int page, final int itemsPerPage,\n-            final List<OrderByClause> orderByClauses, final TaskType type) {\n-\n-        StringBuilder queryString = buildfindAllQuery(type);\n-        queryString.append(orderByClauses.isEmpty()\n-                ? \"ORDER BY e.id DESC\"\n-                : toOrderByStatement(getEntityReference(type), \"e\", orderByClauses));\n+    public <T extends Task> List<T> findAll(\n+            final TaskType type,\n+            final ExternalResource resource,\n+            final AnyTypeKind anyTypeKind,\n+            final Long anyTypeKey,\n+            final int page,\n+            final int itemsPerPage,\n+            final List<OrderByClause> orderByClauses) {\n+\n+        StringBuilder queryString = buildFindAllQuery(type, resource, anyTypeKind, anyTypeKey).\n+                append(orderByClauses.isEmpty()\n+                                ? \"ORDER BY t.id DESC\"\n+                                : toOrderByStatement(getEntityReference(type), orderByClauses));\n \n         Query query = entityManager().createQuery(queryString.toString());\n         query.setParameter(\"type\", type);\n+        if (resource != null) {\n+            query.setParameter(\"resource\", resource);\n+        }\n+        if (anyTypeKind != null && anyTypeKey != null) {\n+            query.setParameter(\"anyTypeKind\", anyTypeKind);\n+            query.setParameter(\"anyTypeKey\", anyTypeKey);\n+        }\n \n         query.setFirstResult(itemsPerPage * (page <= 0\n                 ? 0\n@@ -144,10 +193,27 @@ public <T extends Task> List<T> findAll(final int page, final int itemsPerPage,\n     }\n \n     @Override\n-    public int count(final TaskType type) {\n-        Query countQuery = entityManager().createNativeQuery(\"SELECT COUNT(id) FROM Task WHERE TYPE=?1\");\n-        countQuery.setParameter(1, type.name());\n-        return ((Number) countQuery.getSingleResult()).intValue();\n+    public int count(\n+            final TaskType type,\n+            final ExternalResource resource,\n+            final AnyTypeKind anyTypeKind,\n+            final Long anyTypeKey) {\n+\n+        StringBuilder queryString = buildFindAllQuery(type, resource, anyTypeKind, anyTypeKey);\n+\n+        Query query = entityManager().createQuery(queryString.toString().replace(\n+                \"SELECT t\",\n+                \"SELECT COUNT(t)\"));\n+        query.setParameter(\"type\", type);\n+        if (resource != null) {\n+            query.setParameter(\"resource\", resource);\n+        }\n+        if (anyTypeKind != null && anyTypeKey != null) {\n+            query.setParameter(\"anyTypeKind\", anyTypeKind);\n+            query.setParameter(\"anyTypeKey\", anyTypeKey);\n+        }\n+\n+        return ((Number) query.getSingleResult()).intValue();\n     }\n \n     @Transactional(rollbackFor = { Throwable.class })\n@@ -173,12 +239,14 @@ public void delete(final Task task) {\n \n     @Override\n     public void deleteAll(final ExternalResource resource, final TaskType type) {\n-        CollectionUtils.forAllDo(findAll(resource, type), new Closure<Task>() {\n-\n-            @Override\n-            public void execute(final Task input) {\n-                delete(input.getKey());\n-            }\n-        });\n+        CollectionUtils.forAllDo(\n+                findAll(type, resource, null, null, -1, -1, Collections.<OrderByClause>emptyList()),\n+                new Closure<Task>() {\n+\n+                    @Override\n+                    public void execute(final Task input) {\n+                        delete(input.getKey());\n+                    }\n+                });\n     }\n }"},{"sha":"961fea0c363388cf6fbe550b8ea0fd588274ab3b","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPATaskExecDAO.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskExecDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskExecDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskExecDAO.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -67,9 +67,12 @@ public <T extends Task> TaskExec findLatestEnded(final T task) {\n \n     @Override\n     public List<TaskExec> findAll(final TaskType type) {\n-        StringBuilder queryString = new StringBuilder(\"SELECT e FROM \").append(JPATaskExec.class.getSimpleName()).\n-                append(\" e WHERE e.task IN (\").append(\"SELECT t FROM \").\n-                append(taskDAO.getEntityReference(type).getSimpleName()).append(\" t)\");\n+        StringBuilder queryString = new StringBuilder(\"SELECT e FROM \").\n+                append(JPATaskExec.class.getSimpleName()).\n+                append(\" e WHERE e.task IN (\").\n+                append(\"SELECT t FROM \").\n+                append(taskDAO.getEntityReference(type).getSimpleName()).\n+                append(\" t)\");\n \n         TypedQuery<TaskExec> query = entityManager().createQuery(queryString.toString(), TaskExec.class);\n         return query.getResultList();"},{"sha":"e9e59fd39040e98fbdb08599d4882def9759a984","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAExternalResource.java","status":"modified","additions":0,"deletions":16,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAExternalResource.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -44,7 +44,6 @@\n import org.apache.commons.collections4.Predicate;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.TraceLevel;\n import org.apache.syncope.core.persistence.api.entity.policy.AccountPolicy;\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n@@ -123,10 +122,6 @@ public class JPAExternalResource extends AbstractAnnotatedEntity<String> impleme\n     @Max(1)\n     private Integer randomPwdIfNotProvided;\n \n-    @Enumerated(EnumType.STRING)\n-    @Column(nullable = false)\n-    private PropagationMode propagationMode;\n-\n     @Enumerated(EnumType.STRING)\n     @Column(nullable = false)\n     private TraceLevel createTraceLevel;\n@@ -178,7 +173,6 @@ public JPAExternalResource() {\n         propagationPrimary = 0;\n         propagationPriority = 0;\n         randomPwdIfNotProvided = 0;\n-        propagationMode = PropagationMode.TWO_PHASES;\n \n         createTraceLevel = TraceLevel.FAILURES;\n         updateTraceLevel = TraceLevel.FAILURES;\n@@ -278,16 +272,6 @@ public void setRandomPwdIfNotProvided(final boolean randomPwdIfNotProvided) {\n         this.randomPwdIfNotProvided = getBooleanAsInteger(randomPwdIfNotProvided);\n     }\n \n-    @Override\n-    public PropagationMode getPropagationMode() {\n-        return propagationMode;\n-    }\n-\n-    @Override\n-    public void setPropagationMode(final PropagationMode propagationMode) {\n-        this.propagationMode = propagationMode;\n-    }\n-\n     @Override\n     public String getKey() {\n         return name;"},{"sha":"8dba286d32348d237c8e2344e1309a9dcf904a02","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAMappingItem.java","status":"modified","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMappingItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMappingItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMappingItem.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -18,13 +18,19 @@\n  */\n package org.apache.syncope.core.persistence.jpa.entity.resource;\n \n+import java.util.ArrayList;\n+import java.util.List;\n import javax.persistence.Basic;\n import javax.persistence.Cacheable;\n+import javax.persistence.CollectionTable;\n import javax.persistence.Column;\n+import javax.persistence.ElementCollection;\n import javax.persistence.Entity;\n import javax.persistence.EnumType;\n import javax.persistence.Enumerated;\n+import javax.persistence.FetchType;\n import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n import javax.persistence.ManyToOne;\n import javax.persistence.Table;\n import javax.validation.constraints.Max;\n@@ -91,6 +97,16 @@ public class JPAMappingItem extends AbstractEntity<Long> implements MappingItem\n     @Enumerated(EnumType.STRING)\n     private MappingPurpose purpose;\n \n+    /**\n+     * (Optional) classes for MappingItem transformation.\n+     */\n+    @ElementCollection(fetch = FetchType.EAGER)\n+    @Column(name = \"transformerClassName\")\n+    @CollectionTable(name = \"MappingItem_Transformer\",\n+            joinColumns =\n+            @JoinColumn(name = \"mappingItem_id\", referencedColumnName = \"id\"))\n+    private List<String> mappingItemTransformerClassNames = new ArrayList<>();\n+\n     public JPAMappingItem() {\n         super();\n \n@@ -214,4 +230,10 @@ public MappingPurpose getPurpose() {\n     public void setPurpose(final MappingPurpose purpose) {\n         this.purpose = purpose;\n     }\n+\n+    @Override\n+    public List<String> getMappingItemTransformerClassNames() {\n+        return mappingItemTransformerClassNames;\n+    }\n+\n }"},{"sha":"2bdd0f3648a2b5a16cd591859a99a5e2afa3952c","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPAPropagationTask.java","status":"modified","additions":5,"deletions":24,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPropagationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPropagationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPAPropagationTask.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -29,7 +29,6 @@\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n@@ -49,17 +48,11 @@ public class JPAPropagationTask extends AbstractTask implements PropagationTask\n \n     private static final long serialVersionUID = 7086054884614511210L;\n \n-    /**\n-     * @see PropagationMode\n-     */\n-    @Enumerated(EnumType.STRING)\n-    private PropagationMode propagationMode;\n-\n     /**\n      * @see ResourceOperation\n      */\n     @Enumerated(EnumType.STRING)\n-    private ResourceOperation propagationOperation;\n+    private ResourceOperation operation;\n \n     /**\n      * The connObjectKey on the external resource.\n@@ -132,26 +125,14 @@ public void setAttributes(final Set<Attribute> attributes) {\n \n     @Override\n \n-    public PropagationMode getPropagationMode() {\n-        return propagationMode;\n-    }\n-\n-    @Override\n-\n-    public void setPropagationMode(final PropagationMode propagationMode) {\n-        this.propagationMode = propagationMode;\n-    }\n-\n-    @Override\n-\n-    public ResourceOperation getPropagationOperation() {\n-        return propagationOperation;\n+    public ResourceOperation getOperation() {\n+        return operation;\n     }\n \n     @Override\n \n-    public void setPropagationOperation(final ResourceOperation propagationOperation) {\n-        this.propagationOperation = propagationOperation;\n+    public void setOperation(final ResourceOperation operation) {\n+        this.operation = operation;\n     }\n \n     @Override"},{"sha":"78796612ccf7b741594cbb088e1673f6bc8bbcbd","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/ExternalResourceValidator.java","status":"modified","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FExternalResourceValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FExternalResourceValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FExternalResourceValidator.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -30,6 +30,7 @@\n import org.apache.syncope.core.persistence.api.entity.resource.Mapping;\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n+import org.apache.syncope.core.provisioning.api.data.MappingItemTransformer;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationActions;\n \n public class ExternalResourceValidator extends AbstractValidator<ExternalResourceCheck, ExternalResource> {\n@@ -106,6 +107,27 @@ public boolean evaluate(final MappingItem item) {\n             isValid = false;\n         }\n \n+        for (MappingItem item : mapping.getItems()) {\n+            for (String className : item.getMappingItemTransformerClassNames()) {\n+                Class<?> actionsClass = null;\n+                boolean isAssignable = false;\n+                try {\n+                    actionsClass = Class.forName(className);\n+                    isAssignable = MappingItemTransformer.class.isAssignableFrom(actionsClass);\n+                } catch (Exception e) {\n+                    LOG.error(\"Invalid MappingItemTransformer specified: {}\", className, e);\n+                }\n+\n+                if (actionsClass == null || !isAssignable) {\n+                    context.buildConstraintViolationWithTemplate(\n+                            getTemplate(EntityViolationType.InvalidMapping,\n+                                    \"Invalid mapping item trasformer class name\")).\n+                            addPropertyNode(\"mappingItemTransformerClassName\").addConstraintViolation();\n+                    isValid = false;\n+                }\n+            }\n+        }\n+\n         return isValid;\n     }\n "},{"sha":"6c8a9495dbe2856a2d3612ed496b628d53953137","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/PropagationTaskValidator.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPropagationTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPropagationTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPropagationTaskValidator.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -35,8 +35,7 @@ public boolean isValid(final PropagationTask task, final ConstraintValidatorCont\n         if (task == null) {\n             isValid = true;\n         } else {\n-            isValid = task.getPropagationMode() != null\n-                    && task.getPropagationOperation() != null\n+            isValid = task.getOperation() != null\n                     && !task.getAttributes().isEmpty()\n                     && task.getResource() != null;\n "},{"sha":"8c419aacd2266ca4df620f4ec674799d8c9d2882","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/ReportTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FReportTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FReportTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FReportTest.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -55,7 +55,7 @@ public void findAll() {\n \n     @Test\n     public void save() {\n-        int beforeCount = reportDAO.count();\n+        int beforeCount = reportDAO.findAll().size();\n \n         Report report = entityFactory.newEntity(Report.class);\n         report.setName(\"new report\");\n@@ -66,7 +66,7 @@ public void save() {\n         assertNotNull(report);\n         assertNotNull(report.getKey());\n \n-        int afterCount = reportDAO.count();\n+        int afterCount = reportDAO.findAll().size();\n         assertEquals(afterCount, beforeCount + 1);\n     }\n "},{"sha":"7377475aba2c0dc04e5feee0121974bb2a321c02","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/TaskTest.java","status":"modified","additions":12,"deletions":7,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FTaskTest.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -29,7 +29,6 @@\n import java.util.List;\n import java.util.Set;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n@@ -68,25 +67,30 @@ public void findWithoutExecs() {\n \n     @Test\n     public void findPaginated() {\n-        List<Task> tasks = taskDAO.findAll(1, 2, Collections.<OrderByClause>emptyList(), TaskType.PROPAGATION);\n+        List<Task> tasks = taskDAO.findAll(\n+                TaskType.PROPAGATION, null, null, null, 1, 2, Collections.<OrderByClause>emptyList());\n         assertNotNull(tasks);\n         assertEquals(2, tasks.size());\n \n         for (Task task : tasks) {\n             assertNotNull(task);\n         }\n \n-        tasks = taskDAO.findAll(2, 2, Collections.<OrderByClause>emptyList(), TaskType.PROPAGATION);\n+        tasks = taskDAO.findAll(\n+                TaskType.PROPAGATION, null, null, null, 2, 2, Collections.<OrderByClause>emptyList());\n         assertNotNull(tasks);\n         assertEquals(2, tasks.size());\n \n         for (Task task : tasks) {\n             assertNotNull(task);\n         }\n \n-        tasks = taskDAO.findAll(1000, 2, Collections.<OrderByClause>emptyList(), TaskType.PROPAGATION);\n+        tasks = taskDAO.findAll(\n+                TaskType.PROPAGATION, null, null, null, 1000, 2, Collections.<OrderByClause>emptyList());\n         assertNotNull(tasks);\n         assertTrue(tasks.isEmpty());\n+\n+        assertEquals(5, taskDAO.count(TaskType.PROPAGATION, null, null, null));\n     }\n \n     @Test\n@@ -109,8 +113,7 @@ public void savePropagationTask() {\n         PropagationTask task = entityFactory.newEntity(PropagationTask.class);\n         task.setResource(resource);\n         task.setAnyTypeKind(AnyTypeKind.USER);\n-        task.setPropagationMode(PropagationMode.TWO_PHASES);\n-        task.setPropagationOperation(ResourceOperation.CREATE);\n+        task.setOperation(ResourceOperation.CREATE);\n         task.setConnObjectKey(\"one@two.com\");\n \n         Set<Attribute> attributes = new HashSet<>();\n@@ -139,6 +142,8 @@ public void delete() {\n \n         resource = resourceDAO.find(resource.getKey());\n         assertNotNull(resource);\n-        assertFalse(taskDAO.findAll(resource, TaskType.PROPAGATION).contains(task));\n+        assertFalse(taskDAO.findAll(\n+                TaskType.PROPAGATION, resource, null, null, -1, -1, Collections.<OrderByClause>emptyList()).\n+                contains(task));\n     }\n }"},{"sha":"5628c297ae34d0e4f9b0d6890fac7c0e192748e3","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/ResourceTest.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FResourceTest.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -25,6 +25,7 @@\n import static org.junit.Assert.assertTrue;\n \n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n@@ -37,6 +38,7 @@\n import org.apache.syncope.core.persistence.api.dao.PolicyDAO;\n import org.apache.syncope.core.persistence.api.dao.TaskDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n+import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n@@ -216,7 +218,8 @@ public void delete() {\n         // -------------------------------------\n \n         // Get tasks\n-        List<PropagationTask> propagationTasks = taskDAO.findAll(resource, TaskType.PROPAGATION);\n+        List<PropagationTask> propagationTasks = taskDAO.findAll(\n+                TaskType.PROPAGATION, resource, null, null, -1, -1, Collections.<OrderByClause>emptyList());\n         assertFalse(propagationTasks.isEmpty());\n \n         // delete resource"},{"sha":"2b3d6c7655b66198e4ce4bcf52706484ce93affd","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/TaskTest.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FTaskTest.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -24,13 +24,13 @@\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n \n+import java.util.Collections;\n import java.util.Date;\n import java.util.HashSet;\n import java.util.Set;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.MatchingRule;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.TaskType;\n@@ -40,12 +40,12 @@\n import org.apache.syncope.core.persistence.api.dao.TaskDAO;\n import org.apache.syncope.core.persistence.api.dao.TaskExecDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n+import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n-import org.apache.syncope.core.persistence.api.entity.AnyTemplate;\n import org.apache.syncope.core.persistence.api.entity.task.AnyTemplateSyncTask;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.persistence.jpa.AbstractTest;\n@@ -92,8 +92,7 @@ public void save() {\n         PropagationTask task = entityFactory.newEntity(PropagationTask.class);\n         task.setResource(resource);\n         task.setAnyTypeKind(AnyTypeKind.USER);\n-        task.setPropagationMode(PropagationMode.TWO_PHASES);\n-        task.setPropagationOperation(ResourceOperation.CREATE);\n+        task.setOperation(ResourceOperation.CREATE);\n         task.setConnObjectKey(\"one@two.com\");\n \n         Set<Attribute> attributes = new HashSet<>();\n@@ -110,7 +109,9 @@ public void save() {\n         taskDAO.flush();\n \n         resource = resourceDAO.find(\"ws-target-resource-1\");\n-        assertTrue(taskDAO.findAll(resource, TaskType.PROPAGATION).contains(task));\n+        assertTrue(taskDAO.findAll(\n+                TaskType.PROPAGATION, resource, null, null, -1, -1, Collections.<OrderByClause>emptyList()).\n+                contains(task));\n     }\n \n     @Test"},{"sha":"7ee800273a0908929f4f2bfa4bcea998c087bac1","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":47,"deletions":62,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -493,12 +493,9 @@ under the License.\n                 connectorName=\"net.tirasa.connid.bundles.soap.WebServiceConnector\"\n                 version=\"${connid.soap.version}\"\n                 jsonConf='[{\"schema\":{\"name\":\"endpoint\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"http://localhost:${cargo.servlet.port}/wssample/services/provisioning\"]},{\"schema\":{\"name\":\"servicename\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"net.tirasa.connid.bundles.soap.provisioning.interfaces.Provisioning\"]}]'/>\n-  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"ONE_PHASE_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"ONE_PHASE_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"ONE_PHASE_DELETE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"TWO_PHASES_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"TWO_PHASES_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"TWO_PHASES_DELETE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"CREATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"UPDATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"SEARCH\"/>\n \n   <ConnInstance id=\"101\" displayName=\"H2\"\n@@ -508,12 +505,9 @@ under the License.\n                 version=\"${connid.database.version}\"\n                 jsonConf='[{\"schema\":{\"name\":\"disabledStatusValue\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"user\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"keyColumn\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"id\"]},{\"schema\":{\"name\":\"retrievePassword\",\"displayName\":null,\"helpMessage\":null,\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"cipherAlgorithm\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"SHA1\"]},{\"schema\":{\"name\":\"enabledStatusValue\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"passwordColumn\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"password\"]},{\"schema\":{\"name\":\"jdbcDriver\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"org.h2.Driver\"]},{\"schema\":{\"name\":\"defaultStatusValue\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"table\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"test\"]},{\"schema\":{\"name\":\"password\",\"displayName\":null,\"helpMessage\":null,\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"statusColumn\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"status\"]},{\"schema\":{\"name\":\"jdbcUrlTemplate\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"${testdb.url}\"]}]'/>\n   <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"AUTHENTICATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"ONE_PHASE_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"ONE_PHASE_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"ONE_PHASE_DELETE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"TWO_PHASES_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"TWO_PHASES_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"TWO_PHASES_DELETE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"CREATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"UPDATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"SEARCH\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"101\" capability=\"SYNC\"/>\n \n@@ -524,12 +518,9 @@ under the License.\n                 version=\"${connid.soap.version}\"\n                 connRequestTimeout=\"10\"\n                 jsonConf='[{\"schema\":{\"name\":\"servicename\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"net.tirasa.connid.bundles.soap.provisioning.interfaces.Provisioning\"]},{\"schema\":{\"name\":\"endpoint\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":true,\"values\":[\"http://localhost:${cargo.servlet.port}/wssample/services/provisioning\"]}]'/>\n-  <ConnInstance_capabilities ConnInstance_id=\"102\" capability=\"ONE_PHASE_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"102\" capability=\"ONE_PHASE_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"102\" capability=\"ONE_PHASE_DELETE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"102\" capability=\"TWO_PHASES_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"102\" capability=\"TWO_PHASES_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"102\" capability=\"TWO_PHASES_DELETE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"102\" capability=\"CREATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"102\" capability=\"UPDATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"102\" capability=\"DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"102\" capability=\"SEARCH\"/>\n \n   <ConnInstance id=\"103\" displayName=\"ConnInstance103\"\n@@ -545,12 +536,9 @@ under the License.\n                 connectorName=\"net.tirasa.connid.bundles.csvdir.CSVDirConnector\"\n                 version=\"${connid.csvdir.version}\"\n                 jsonConf='[{\"schema\":{\"name\":\"fields\",\"displayName\":\"fields\",\"helpMessage\":\"Column names separated by comma\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"id\",\"name\",\"surname\",\"email\",\"password\",\"theirgroup\",\"membership\",\"status\",\"deleted\"]},{\"schema\":{\"name\":\"keyColumnNames\",\"displayName\":\"Key column name\",\"helpMessage\":\"Name of the column used to identify user uniquely\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"name\",\"surname\"]},{\"schema\":{\"name\":\"deleteColumnName\",\"displayName\":\"Delete column name\",\"helpMessage\":\"Name of the column used to specify users to be deleted\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"deleted\"]},{\"schema\":{\"name\":\"passwordColumnName\",\"displayName\":\"Password column name\",\"helpMessage\":\"Name of the column used to specify user password\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"password\"]},{\"schema\":{\"name\":\"keyseparator\",\"displayName\":\"Key separator\",\"helpMessage\":\"Character used to separate keys in a multi-key scenario\",\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\",\"]},{\"schema\":{\"name\":\"ignoreHeader\",\"displayName\":\"Ignore header\",\"helpMessage\":\"Specify it first line file must be ignored\",\"type\":\"java.lang.Boolean\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[false]},{\"schema\":{\"name\":\"fieldDelimiter\",\"displayName\":\"fieldDelimiter\",\"helpMessage\":\"fieldDelimiter\",\"type\":\"char\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\",\"]},{\"schema\":{\"name\":\"quotationRequired\",\"displayName\":\"Value quotation required\",\"helpMessage\":\"Specify if value quotation is required\",\"type\":\"java.lang.Boolean\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[false]},{\"schema\":{\"name\":\"statusColumn\",\"displayName\":\"statusColumn\",\"helpMessage\":\"Status column\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"status\"]},{\"schema\":{\"name\":\"sourcePath\",\"displayName\":\"Source path\",\"helpMessage\":\"Absolute path of a directory where are located CSV files to be processed\",\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"${test.csvdir.path}\"]},{\"schema\":{\"name\":\"fileMask\",\"displayName\":\"File mask\",\"helpMessage\":\"Regular expression describing files to be processed\",\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"test.csv\"]}]'/>\n-  <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"ONE_PHASE_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"ONE_PHASE_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"ONE_PHASE_DELETE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"TWO_PHASES_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"TWO_PHASES_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"TWO_PHASES_DELETE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"CREATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"UPDATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"SEARCH\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"104\" capability=\"SYNC\"/>\n     \n@@ -559,9 +547,9 @@ under the License.\n                 connectorName=\"net.tirasa.connid.bundles.ldap.LdapConnector\"\n                 version=\"${connid.ldap.version}\" \n                 jsonConf='[{\"schema\":{\"name\":\"synchronizePasswords\",\"displayName\":\"Enable Password Synchronization\",\"helpMessage\":\"If true, the connector will synchronize passwords. The Password Capture Plugin needs to be installed for password synchronization to work.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"maintainLdapGroupMembership\",\"displayName\":\"Maintain LDAP Group Membership\",\"helpMessage\":\"When enabled and a user is renamed or deleted, update any LDAP groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"host\",\"displayName\":\"Host\",\"helpMessage\":\"The name or IP address of the host where the LDAP server is running.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"localhost\"]},{\"schema\":{\"name\":\"passwordHashAlgorithm\",\"displayName\":\"Password Hash Algorithm\",\"helpMessage\":\"Indicates the algorithm that the Identity system should use to hash the password. Currently supported values are SSHA, SHA, SSHA1, and SHA1. A blank value indicates that the system will not hash passwords. This will cause cleartext passwords to be stored in LDAP unless the LDAP server performs the hash (Netscape Directory Server and iPlanet Directory Server do).\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"SHA\"]},{\"schema\":{\"name\":\"port\",\"displayName\":\"TCP Port\",\"helpMessage\":\"TCP/IP port number used to communicate with the LDAP server.\",\"type\":\"int\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[1389]},{\"schema\":{\"name\":\"vlvSortAttribute\",\"displayName\":\"VLV Sort Attribute\",\"helpMessage\":\"Specify the sort attribute to use for VLV indexes on the resource.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"statusManagementClass\",\"displayName\":\"Status management class \",\"helpMessage\":\"Class to be used to manage enabled/disabled status. If no class is specified then identity status management wont be possible.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"net.tirasa.connid.bundles.ldap.commons.AttributeStatusManagement\"]},{\"schema\":{\"name\":\"accountObjectClasses\",\"displayName\":\"Account Object Classes\",\"helpMessage\":\"The object class or classes that will be used when creating new user objects in the LDAP tree. When entering more than one object class, each entry should be on its own line; do not use commas or semi-colons to separate multiple object classes. Some object classes may require that you specify all object classes in the class hierarchy.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"inetOrgPerson\"]},{\"schema\":{\"name\":\"accountUserNameAttributes\",\"displayName\":\"Account User Name Attributes\",\"helpMessage\":\"Attribute or attributes which holds the account user name. They will be used when authenticating to find the LDAP entry for the user name to authenticate.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid\"]},{\"schema\":{\"name\":\"baseContextsToSynchronize\",\"displayName\":\"Base Contexts to Synchronize\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used to determine if a change should be synchronized. The base contexts attribute will be used to synchronize a change if this property is not set.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"]},{\"schema\":{\"name\":\"accountSynchronizationFilter\",\"displayName\":\"LDAP Filter for Accounts to Synchronize\",\"helpMessage\":\"An optional LDAP filter for the objects to synchronize. Because the change log is for all objects, this filter updates only objects that match the specified filter. If you specify a filter, an object will be synchronized only if it matches the filter and includes a synchronized object class.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"removeLogEntryObjectClassFromFilter\",\"displayName\":\"Remove Log Entry Object Class from Filter\",\"helpMessage\":\"If this property is set (the default), the filter used to fetch change log entries does not contain the \\\"changeLogEntry\\\" object class, expecting that there are no entries of other object types in the change log.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordDecryptionKey\",\"displayName\":\"Password Decryption Key\",\"helpMessage\":\"The key to decrypt passwords with when performing password synchronization.\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"readSchema\",\"displayName\":\"Read Schema\",\"helpMessage\":\"If true, the connector will read the schema from the server. If false, the connector will provide a default schema based on the object classes in the configuration. This property must be true in order to use extended object classes.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"ssl\",\"displayName\":\"SSL\",\"helpMessage\":\"Select the check box to connect to the LDAP server using SSL.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordAttributeToSynchronize\",\"displayName\":\"Password Attribute to Synchronize\",\"helpMessage\":\"The name of the password attribute to synchronize when performing password synchronization.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"accountSearchFilter\",\"displayName\":\"LDAP Filter for Retrieving Accounts\",\"helpMessage\":\"An optional LDAP filter to control which accounts are returned from the LDAP resource. If no filter is specified, only accounts that include all specified object classes are returned.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid=*\"]},{\"schema\":{\"name\":\"passwordDecryptionInitializationVector\",\"displayName\":\"Password Decryption Initialization Vector\",\"helpMessage\":\"The initialization vector to decrypt passwords with when performing password synchronization.\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"groupMemberAttribute\",\"displayName\":\"Group Member Attribute\",\"helpMessage\":\"The name of the group attribute that will be updated with the distinguished name of the user when the user is added to the group.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"failover\",\"displayName\":\"Failover Servers\",\"helpMessage\":\"List all servers that should be used for failover in case the preferred server fails. If the preferred server fails, JNDI will connect to the next available server in the list. List all servers in the form of \\\"ldap://ldap.example.com:389/\\\", which follows the standard LDAP v3 URLs described in RFC 2255. Only the host and port parts of the URL are relevant in this setting.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"modifiersNamesToFilterOut\",\"displayName\":\"Filter Out Changes By\",\"helpMessage\":\"The names (DNs) of directory administrators to filter from the changes. Changes with the attribute \\\"modifiersName\\\" that match entries in this list will be filtered out. The standard value is the administrator name used by this adapter, to prevent loops. Entries should be of the format \\\"cn=Directory Manager\\\".\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"groupNameAttributes\",\"displayName\":\"Group Name Attributes\",\"helpMessage\":\"Attribute or attributes which holds the group name.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"cn\"]},{\"schema\":{\"name\":\"uidAttribute\",\"displayName\":\"Uid Attribute\",\"helpMessage\":\"The name of the LDAP attribute which is mapped to the Uid attribute.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"cn\"]},{\"schema\":{\"name\":\"respectResourcePasswordPolicyChangeAfterReset\",\"displayName\":\"Respect Resource Password Policy Change-After-Reset\",\"helpMessage\":\"When this resource is specified in a Login Module (i.e., this resource is a pass-through authentication target) and the resource password policy is configured for change-after-reset, a user whose resource account password has been administratively reset will be required to change that password after successfully authenticating.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"filterWithOrInsteadOfAnd\",\"displayName\":\"Filter with Or Instead of And\",\"helpMessage\":\"Normally the the filter used to fetch change log entries is an and-based filter retrieving an interval of change entries. If this property is set, the filter will or together the required change numbers instead.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"principal\",\"displayName\":\"Principal\",\"helpMessage\":\"The distinguished name with which to authenticate to the LDAP server.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid=admin,ou=system\"]},{\"schema\":{\"name\":\"changeLogBlockSize\",\"displayName\":\"Change Log Block Size\",\"helpMessage\":\"The number of change log entries to fetch per query.\",\"type\":\"int\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[100]},{\"schema\":{\"name\":\"baseContexts\",\"displayName\":\"Base Contexts\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used when searching the tree. Searches are performed when discovering users from the LDAP server or when looking for the groups of which a user is a member.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"]},{\"schema\":{\"name\":\"passwordAttribute\",\"displayName\":\"Password Attribute\",\"helpMessage\":\"The name of the LDAP attribute which holds the password. When changing an user password, the new password is set to this attribute.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"userpassword\"]},{\"schema\":{\"name\":\"changeNumberAttribute\",\"displayName\":\"Change Number Attribute\",\"helpMessage\":\"The name of the change number attribute in the change log entry.\",\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"changeNumber\"]},{\"schema\":{\"name\":\"objectClassesToSynchronize\",\"displayName\":\"Object Classes to Synchronize\",\"helpMessage\":\"The object classes to synchronize. The change log is for all objects; this filters updates to just the listed object classes. You should not list the superclasses of an object class unless you intend to synchronize objects with any of the superclass values. For example, if only \\\"inetOrgPerson\\\" objects should be synchronized, but the superclasses of \\\"inetOrgPerson\\\" (\\\"person\\\", \\\"organizationalperson\\\" and \\\"top\\\") should be filtered out, then list only \\\"inetOrgPerson\\\" here. All objects in LDAP are subclassed from \\\"top\\\". For this reason, you should never list \\\"top\\\", otherwise no object would be filtered.\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"inetOrgPerson\",\"groupOfUniqueNames\"]},{\"schema\":{\"name\":\"credentials\",\"displayName\":\"Password\",\"helpMessage\":\"Password for the principal.\",\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"secret\"]},{\"schema\":{\"name\":\"attributesToSynchronize\",\"displayName\":\"Attributes to Synchronize\",\"helpMessage\":\"The names of the attributes to synchronize. This ignores updates from the change log if they do not update any of the named attributes. For example, if only \\\"department\\\" is listed, then only changes that affect \\\"department\\\" will be processed. All other updates are ignored. If blank (the default), then all changes are processed.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"maintainPosixGroupMembership\",\"displayName\":\"Maintain POSIX Group Membership\",\"helpMessage\":\"When enabled and a user is renamed or deleted, update any POSIX groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]}]'/>\n-  <ConnInstance_capabilities ConnInstance_id=\"105\" capability=\"ONE_PHASE_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"105\" capability=\"ONE_PHASE_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"105\" capability=\"ONE_PHASE_DELETE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"105\" capability=\"CREATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"105\" capability=\"UPDATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"105\" capability=\"DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"105\" capability=\"SEARCH\"/>\n   \n   <ConnInstance id=\"106\" displayName=\"H2-test2\"\n@@ -570,8 +558,8 @@ under the License.\n                 connectorName=\"net.tirasa.connid.bundles.db.table.DatabaseTableConnector\"\n                 version=\"${connid.database.version}\"\n                 jsonConf='[{\"schema\":{\"name\":\"disabledStatusValue\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"user\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"keyColumn\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"id\"]},{\"schema\":{\"name\":\"cipherAlgorithm\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"SHA1\"]},{\"schema\":{\"name\":\"enabledStatusValue\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"passwordColumn\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"password\"]},{\"schema\":{\"name\":\"jdbcDriver\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"org.h2.Driver\"]},{\"schema\":{\"name\":\"retrievePassword\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.Boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"defaultStatusValue\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"password\",\"displayName\":null,\"helpMessage\":null,\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"statusColumn\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"status\"]},{\"schema\":{\"name\":\"jdbcUrlTemplate\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"${testdb.url}\"]},{\"schema\":{\"name\":\"table\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"test2\"]}]'/>\n-  <ConnInstance_capabilities ConnInstance_id=\"106\" capability=\"ONE_PHASE_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"106\" capability=\"ONE_PHASE_UPDATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"106\" capability=\"CREATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"106\" capability=\"UPDATE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"106\" capability=\"SEARCH\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"106\" capability=\"SYNC\"/>\n   \n@@ -580,106 +568,103 @@ under the License.\n                 connectorName=\"net.tirasa.connid.bundles.db.table.DatabaseTableConnector\" \n                 displayName=\"H2-testsync\" version=\"${connid.database.version}\"\n                 jsonConf='[{\"schema\":{\"name\":\"changeLogColumn\",\"displayName\":\"Change Log Column (Sync)\",\"helpMessage\":\"=&lt;b&gt;Change Log Column&lt;/b&gt;&lt;br&gt;The change log column store the latest change time. Providing this value the Sync capabilities are activated.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":21,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"nativeTimestamps\",\"displayName\":\"Native Timestamps \",\"helpMessage\":\"&lt;b&gt;Native Timestamps&lt;/b&gt;&lt;br&gt;Select to retrieve Timestamp data type of the columns in java.sql.Timestamp format from the database table.\",\"type\":\"boolean\",\"required\":false,\"order\":18,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"cipherAlgorithm\",\"displayName\":\"Password cipher algorithm (defaults to CLEARTEXT)\",\"helpMessage\":\"Cipher algorithm used to encode password before to store it onto the database table.\\nSpecify one of the values among CLEARTEXT,AES, MD5, SHA1, SHA256 or a custom implementation identified by its class name.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":24,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"enabledStatusValue\",\"displayName\":\"Enabled Status Value\",\"helpMessage\":\"&lt;b&gt;Enabled Status Value&lt;/b&gt;&lt;br&gt;Enter the value for enabled status.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":12,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"retrievePassword\",\"displayName\":\"Retrieve password\",\"helpMessage\":\"Specify if password must be retrieved by default.\",\"type\":\"boolean\",\"required\":true,\"order\":27,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"datasource\",\"displayName\":\"Datasource Path\",\"helpMessage\":\"&lt;b&gt;JDBC Data Source Name/Path&lt;/b&gt;&lt;br&gt;Enter the JDBC Data Source Name/Path to connect to the Oracle server. If specified, connector will only try to connect using Datasource and ignore other resource parameters specified.&lt;br&gt;the example value is: &lt;CODE&gt;jdbc/SampleDataSourceName&lt;/CODE&gt;\",\"type\":\"java.lang.String\",\"required\":false,\"order\":22,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"allNative\",\"displayName\":\"All native\",\"helpMessage\":\"&lt;b&gt;All native&lt;/b&gt;&lt;br&gt;Select to retrieve all data type of the columns in a native format from the database table.\",\"type\":\"boolean\",\"required\":false,\"order\":19,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"user\",\"displayName\":\"User\",\"helpMessage\":\"&lt;b&gt;User&lt;/b&gt;&lt;br&gt;Enter the name of the mandatory Database user with permission to account table.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":4,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"pwdEncodeToLowerCase\",\"displayName\":\"Force password encoding to lower case\",\"helpMessage\":\"Force password encoding to lower case.\",\"type\":\"boolean\",\"required\":false,\"order\":26,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"jdbcUrlTemplate\",\"displayName\":\"JDBC Connection URL\",\"helpMessage\":\"&lt;b&gt;JDBC Connection URL&lt;/b&gt;&lt;br&gt;Specify the JDBC Driver Connection URL.&lt;br&gt; Oracle template is jdbc:oracle:thin:@[host]:[port(1521)]:[DB].&lt;br&gt;  MySQL template is jdbc:mysql://[host]:[port(3306)]/[db], for more info, read the JDBC driver documentation.&lt;br&gt;Could be empty if datasource is provided.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":15,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"${testdb.url}\"]},{\"schema\":{\"name\":\"keyColumn\",\"displayName\":\"Key Column\",\"helpMessage\":\"&lt;b&gt;Key Column&lt;/b&gt;&lt;br&gt;This mandatory column value will be used as the unique identifier for rows in the table.&lt;br&gt;\",\"type\":\"java.lang.String\",\"required\":true,\"order\":8,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"id\"]},{\"schema\":{\"name\":\"validConnectionQuery\",\"displayName\":\"Validate Connection Query\",\"helpMessage\":\"&lt;b&gt;Validate Connection Query&lt;/b&gt;&lt;br&gt;There can be specified the check connection alive query. If empty, default implementation will test it using the switch on/off the autocommit. Some select 1 from dummy table could be more efficient.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":20,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"rethrowAllSQLExceptions\",\"displayName\":\"Rethrow all SQLExceptions\",\"helpMessage\":\"If this is not checked, SQL statements which throw SQLExceptions with a 0 ErrorCode will be have the exception caught and suppressed. Check it to have exceptions with 0 ErrorCodes rethrown.\",\"type\":\"boolean\",\"required\":false,\"order\":17,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordColumn\",\"displayName\":\"Password Column\",\"helpMessage\":\"&lt;b&gt;Password Column&lt;/b&gt;&lt;br&gt;Enter the name of the column in the table that will hold the password values. If empty, no validation on resource and passwords are activated.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":9,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"jndiProperties\",\"displayName\":\"Initial JNDI Properties\",\"helpMessage\":\"&lt;b&gt;Initial JNDI Properties&lt;/b&gt;&lt;br&gt;Could be empty or enter the JDBC JNDI Initial context factory, context provider in a format: key = value.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":23,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"password\",\"displayName\":\"User Password\",\"helpMessage\":\"&lt;b&gt;User Password&lt;/b&gt;&lt;br&gt;Enter a user account that has permission to access accounts table.\",\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":5,\"confidential\":true,\"defaultValues\":null},\"overridable\":false,\"values\":[\"sa\"]},{\"schema\":{\"name\":\"host\",\"displayName\":\"Host\",\"helpMessage\":\"&lt;b&gt;Host&lt;/b&gt;&lt;br&gt;Enter the name of the host where the database is running.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":2,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"port\",\"displayName\":\"Port\",\"helpMessage\":\"&lt;b&gt;TCP Port&lt;/b&gt;&lt;br&gt;Enter the port number the database server is listening on.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":3,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"statusColumn\",\"displayName\":\"Status Column\",\"helpMessage\":\"&lt;b&gt;Status Column&lt;/b&gt;&lt;br&gt;Enter the name of the column in the table that will hold the status values. If empty enabled and disabled operation wont be performed.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":10,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"pwdEncodeToUpperCase\",\"displayName\":\"Force password encoding to upper case\",\"helpMessage\":\"Force password encoding to upper case.\",\"type\":\"boolean\",\"required\":false,\"order\":25,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"enableEmptyString\",\"displayName\":\"Enable writing empty string\",\"helpMessage\":\"&lt;b&gt;Enable writing empty string&lt;/b&gt;&lt;br&gt;Select to enable support for writing an empty strings, instead of a NULL value, in character based columns defined as not-null in the table schema. This option does not influence the way strings are written for Oracle based tables. By default empty strings are written as a NULL value.\",\"type\":\"boolean\",\"required\":false,\"order\":16,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"database\",\"displayName\":\"Database\",\"helpMessage\":\"&lt;b&gt;Database&lt;/b&gt;&lt;br&gt;Enter the name of the database on the database server that contains the table.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":6,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"defaultStatusValue\",\"displayName\":\"Default Status Value\",\"helpMessage\":\"&lt;b&gt;Default Status Value&lt;/b&gt;&lt;br&gt;Enter the value for status in case of status not specified.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":13,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"table\",\"displayName\":\"Table\",\"helpMessage\":\"&lt;b&gt;Table&lt;/b&gt;&lt;br&gt;Enter the name of the table in the database that contains the accounts.\",\"type\":\"java.lang.String\",\"required\":true,\"order\":7,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"testsync\"]},{\"schema\":{\"name\":\"disabledStatusValue\",\"displayName\":\"Disabled Status Value\",\"helpMessage\":\"&lt;b&gt;Disabled Status Value&lt;/b&gt;&lt;br&gt;Enter the value for disabled status.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":11,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"jdbcDriver\",\"displayName\":\"JDBC Driver\",\"helpMessage\":\"&lt;b&gt;JDBC Driver&lt;/b&gt;&lt;br&gt;Specify the JDBC Driver class name. Oracle is oracle.jdbc.driver.OracleDriver. MySQL is org.gjt.mm.mysql.Driver.&lt;br&gt;Could be empty if datasource is provided.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":14,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"org.h2.Driver\"]},{\"schema\":{\"name\":\"quoting\",\"displayName\":\"Name Quoting\",\"helpMessage\":\"&lt;b&gt;Name Quoting&lt;/b&gt;&lt;br&gt;Select whether database column names for this resource should be quoted, and the quoting characters. By default, database column names are not quoted (None). For other selections (Single, Double, Back, or Brackets), column names will appear between single quotes, double quotes, back quotes, or brackets in the SQL generated to access the database.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":1,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"cipherKey\",\"displayName\":\"Password cipher key\",\"helpMessage\":\"Specify key in case of reversible algorithm.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":25,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]}]'/>\n-  <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"ONE_PHASE_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"TWO_PHASES_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"ONE_PHASE_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"TWO_PHASES_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"ONE_PHASE_DELETE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"TWO_PHASES_DELETE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"CREATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"UPDATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"107\" capability=\"SEARCH\"/>\n   \n   <ConnInstance id=\"108\" bundleName=\"net.tirasa.connid.bundles.db.scriptedsql\" \n                 location=\"connid://${testconnectorserver.key}@localhost:${testconnectorserver.port}\"\n                 connectorName=\"net.tirasa.connid.bundles.db.scriptedsql.ScriptedSQLConnector\"\n                 displayName=\"Scripted SQL\" version=\"${connid.database.version}\"\n                 jsonConf='[{&quot;schema&quot;:{&quot;name&quot;:&quot;updateScriptFileName&quot;,&quot;displayName&quot;:&quot;updateScriptFileName&quot;,&quot;helpMessage&quot;:&quot;updateScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${conf.directory}/scriptedsql/UpdateScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;testScript&quot;,&quot;displayName&quot;:&quot;testScript&quot;,&quot;helpMessage&quot;:&quot;testScript&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;host&quot;,&quot;displayName&quot;:&quot;Host&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Host&lt;/b&gt;&lt;br/&gt;Enter the name of the host where the database is running.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:2,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;localhost&quot;]},&quot;overridable&quot;:false},{&quot;schema&quot;:{&quot;name&quot;:&quot;port&quot;,&quot;displayName&quot;:&quot;Port&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;TCP Port&lt;/b&gt;&lt;br/&gt;Enter the port number the database server is listening on.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:3,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;3306&quot;]},&quot;overridable&quot;:false},{&quot;schema&quot;:{&quot;name&quot;:&quot;database&quot;,&quot;displayName&quot;:&quot;Database&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Database&lt;/b&gt;&lt;br/&gt;Enter the name of the database on the database server that contains the table.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:6,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false},{&quot;schema&quot;:{&quot;name&quot;:&quot;createScript&quot;,&quot;displayName&quot;:&quot;createScript&quot;,&quot;helpMessage&quot;:&quot;createScript&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;jdbcUrlTemplate&quot;,&quot;displayName&quot;:&quot;JDBC Connection URL&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;JDBC Connection URL&lt;/b&gt;&lt;br/&gt;Specify the JDBC Driver Connection URL.&lt;br/&gt; Oracle template is jdbc:oracle:thin:@[host]:[port(1521)]:[DB].&lt;br/&gt;  MySQL template is jdbc:mysql://[host]:[port(3306)]/[db], for more info, read the JDBC driver documentation.&lt;br/&gt;Could be empty if datasource is provided.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:11,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;jdbc:mysql://%h:%p/%d&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${testdb.url}&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;jndiProperties&quot;,&quot;displayName&quot;:&quot;Initial JNDI Properties&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Initial JNDI Properties&lt;/b&gt;&lt;br/&gt;Could be empty or enter the JDBC JNDI Initial context factory, context provider in a format: key = value.&quot;,&quot;type&quot;:&quot;[Ljava.lang.String;&quot;,&quot;required&quot;:false,&quot;order&quot;:21,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;enableEmptyString&quot;,&quot;displayName&quot;:&quot;Enable writing empty string&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Enable writing empty string&lt;/b&gt;&lt;br/&gt;Select to enable support for writing an empty strings, instead of a NULL value, in character based columns defined as not-null in the table schema. This option does not influence the way strings are written for Oracle based tables. By default empty strings are written as a NULL value.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:12,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[false]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;false&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;allNative&quot;,&quot;displayName&quot;:&quot;All native&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;All native&lt;/b&gt;&lt;br/&gt;Select to retrieve all data type of the columns in a native format from the database table.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:16,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[false]},&quot;overridable&quot;:false,&quot;values&quot;:[false]},{&quot;schema&quot;:{&quot;name&quot;:&quot;password&quot;,&quot;displayName&quot;:&quot;User Password&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;User Password&lt;/b&gt;&lt;br/&gt;Enter a user account that has permission to access accounts table.&quot;,&quot;type&quot;:&quot;org.identityconnectors.common.security.GuardedString&quot;,&quot;required&quot;:false,&quot;order&quot;:5,&quot;confidential&quot;:true,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${testdb.password}&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;validConnectionQuery&quot;,&quot;displayName&quot;:&quot;Validate Connection Query&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Validate Connection Query&lt;/b&gt;&lt;br/&gt;There can be specified the check connection alive query. If empty, default implementation will test it using the switch on/off the autocommit. Some select 1 from dummy table could be more efficient.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:17,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;reloadScriptOnExecution&quot;,&quot;displayName&quot;:&quot;reloadScriptOnExecution&quot;,&quot;helpMessage&quot;:&quot;reloadScriptOnExecution&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[false]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;true&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;schemaScriptFileName&quot;,&quot;displayName&quot;:&quot;schemaScriptFileName&quot;,&quot;helpMessage&quot;:&quot;schemaScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:true,&quot;values&quot;:[&quot;${conf.directory}/scriptedsql/SchemaScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;jdbcDriver&quot;,&quot;displayName&quot;:&quot;JDBC Driver&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;JDBC Driver&lt;/b&gt;&lt;br/&gt;Specify the JDBC Driver class name. Oracle is oracle.jdbc.driver.OracleDriver. MySQL is org.gjt.mm.mysql.Driver.&lt;br/&gt;Could be empty if datasource is provided.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:10,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;com.mysql.jdbc.Driver&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${testdb.driver}&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;testScriptFileName&quot;,&quot;displayName&quot;:&quot;testScriptFileName&quot;,&quot;helpMessage&quot;:&quot;testScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:true,&quot;values&quot;:[&quot;${conf.directory}/scriptedsql/TestScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;quoting&quot;,&quot;displayName&quot;:&quot;Name Quoting&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Name Quoting&lt;/b&gt;&lt;br/&gt;Select whether database column names for this resource should be quoted, and the quoting characters. By default, database column names are not quoted (None). For other selections (Single, Double, Back, or Brackets), column names will appear between single quotes, double quotes, back quotes, or brackets in the SQL generated to access the database.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:-1,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;createScriptFileName&quot;,&quot;displayName&quot;:&quot;createScriptFileName&quot;,&quot;helpMessage&quot;:&quot;createScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${conf.directory}/scriptedsql/CreateScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;clearTextPasswordToScript&quot;,&quot;displayName&quot;:&quot;clearTextPasswordToScript&quot;,&quot;helpMessage&quot;:&quot;clearTextPasswordToScript&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[true]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;false&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;nativeTimestamps&quot;,&quot;displayName&quot;:&quot;Native Timestamps&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;Native Timestamps&lt;/b&gt;&lt;br/&gt;Select to retrieve Timestamp data type of the columns in java.sql.Timestamp format from the database table.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:15,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[false]},&quot;overridable&quot;:false,&quot;values&quot;:[false]},{&quot;schema&quot;:{&quot;name&quot;:&quot;syncScript&quot;,&quot;displayName&quot;:&quot;syncScript&quot;,&quot;helpMessage&quot;:&quot;syncScript&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;autoCommit&quot;,&quot;displayName&quot;:&quot;autoCommit&quot;,&quot;helpMessage&quot;:&quot;autoCommit&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[true]},&quot;overridable&quot;:false,&quot;values&quot;:[true]},{&quot;schema&quot;:{&quot;name&quot;:&quot;scriptingLanguage&quot;,&quot;displayName&quot;:&quot;scriptingLanguage&quot;,&quot;helpMessage&quot;:&quot;scriptingLanguage&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;GROOVY&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;GROOVY&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;datasource&quot;,&quot;displayName&quot;:&quot;Datasource Path&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;JDBC Data Source Name/Path&lt;/b&gt;&lt;br/&gt;Enter the JDBC Data Source Name/Path to connect to the Oracle server. If specified, connector will only try to connect using Datasource and ignore other resource parameters specified.&lt;br/&gt;the example value is: &lt;CODE&gt;jdbc/SampleDataSourceName&lt;/CODE&gt;&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:20,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;deleteScript&quot;,&quot;displayName&quot;:&quot;deleteScript&quot;,&quot;helpMessage&quot;:&quot;deleteScript&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;rethrowAllSQLExceptions&quot;,&quot;displayName&quot;:&quot;Rethrow all SQLExceptions&quot;,&quot;helpMessage&quot;:&quot;If this is not checked, SQL statements which throw SQLExceptions with a 0 ErrorCode will be have the exception caught and suppressed. Check it to have exceptions with 0 ErrorCodes rethrown.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;required&quot;:false,&quot;order&quot;:14,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[true]},&quot;overridable&quot;:false,&quot;values&quot;:[true]},{&quot;schema&quot;:{&quot;name&quot;:&quot;syncScriptFileName&quot;,&quot;displayName&quot;:&quot;syncScriptFileName&quot;,&quot;helpMessage&quot;:&quot;syncScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:true,&quot;values&quot;:[&quot;${conf.directory}/scriptedsql/SyncScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;updateScript&quot;,&quot;displayName&quot;:&quot;updateScript&quot;,&quot;helpMessage&quot;:&quot;updateScript&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]},{&quot;schema&quot;:{&quot;name&quot;:&quot;user&quot;,&quot;displayName&quot;:&quot;User&quot;,&quot;helpMessage&quot;:&quot;&lt;b&gt;User&lt;/b&gt;&lt;br/&gt;Enter the name of the mandatory Database user with permission to account table.&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:4,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${testdb.username}&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;deleteScriptFileName&quot;,&quot;displayName&quot;:&quot;deleteScriptFileName&quot;,&quot;helpMessage&quot;:&quot;deleteScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:false,&quot;values&quot;:[&quot;${conf.directory}/scriptedsql/DeleteScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;searchScriptFileName&quot;,&quot;displayName&quot;:&quot;searchScriptFileName&quot;,&quot;helpMessage&quot;:&quot;searchScriptFileName&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[]},&quot;overridable&quot;:true,&quot;values&quot;:[&quot;${conf.directory}/scriptedsql/SearchScript.groovy&quot;]},{&quot;schema&quot;:{&quot;name&quot;:&quot;searchScript&quot;,&quot;displayName&quot;:&quot;searchScript&quot;,&quot;helpMessage&quot;:&quot;searchScript&quot;,&quot;type&quot;:&quot;java.lang.String&quot;,&quot;required&quot;:false,&quot;order&quot;:0,&quot;confidential&quot;:false,&quot;defaultValues&quot;:[&quot;&quot;]},&quot;overridable&quot;:false,&quot;values&quot;:[]}]'/>\n-  <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"ONE_PHASE_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"ONE_PHASE_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"ONE_PHASE_DELETE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"CREATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"UPDATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"SEARCH\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"108\" capability=\"SYNC\"/>\n   \n   <ExternalResource name=\"ws-target-resource-1\" connector_id=\"100\"\n-                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\" propagationMode=\"TWO_PHASES\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\"\n                     propagationPriority=\"0\" propagationPrimary=\"1\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-2\" connector_id=\"100\"\n-                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"FAILURES\" deleteTraceLevel=\"NONE\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     syncPolicy_id=\"9\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-timeout\" connector_id=\"102\"\n-                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\"\n                     propagationPriority=\"0\" propagationPrimary=\"1\" createTraceLevel=\"FAILURES\" deleteTraceLevel=\"NONE\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     jsonConf='[{\"schema\":{\"name\":\"endpoint\",\"displayName\":null,\"helpMessage\":null,\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":true,\"values\":[\"http://localhost:${cargo.servlet.port}/syncope-fit-build-tools/services/provisioning\"]}]'\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-list-mappings-1\" connector_id=\"100\"\n-                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\" propagationMode=\"TWO_PHASES\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-list-mappings-2\" connector_id=\"100\"\n-                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-delete\" connector_id=\"102\"\n-                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\" propagationMode=\"TWO_PHASES\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\"\n                     propagationPriority=\"2\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"ws-target-resource-update\" connector_id=\"100\"\n-                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"resource-testdb\" connector_id=\"101\"\n-                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" propagationMode=\"ONE_PHASE\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"resource-testdb2\" connector_id=\"106\"\n-                    randomPwdIfNotProvided=\"1\" enforceMandatoryCondition=\"1\" propagationMode=\"ONE_PHASE\"\n+                    randomPwdIfNotProvided=\"1\" enforceMandatoryCondition=\"1\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"resource-csv\" connector_id=\"104\"\n-                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\" propagationMode=\"ONE_PHASE\" syncPolicy_id=\"3\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"0\" syncPolicy_id=\"3\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n-  <ExternalResource name=\"ws-target-resource-update-resetsynctoken\" connector_id=\"100\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n+  <ExternalResource name=\"ws-target-resource-update-resetsynctoken\" connector_id=\"100\" enforceMandatoryCondition=\"1\"\n                     randomPwdIfNotProvided=\"0\" propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource name=\"resource-ldap\" connector_id=\"105\"\n-                    randomPwdIfNotProvided=\"1\" enforceMandatoryCondition=\"1\" propagationMode=\"ONE_PHASE\"\n+                    randomPwdIfNotProvided=\"1\" enforceMandatoryCondition=\"1\"\n                     propagationPriority=\"0\" propagationPrimary=\"1\"\n                     createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   <ExternalResource_PropActions resource_name=\"resource-ldap\"\n                                 actionClassName=\"org.apache.syncope.core.provisioning.java.propagation.LDAPMembershipPropagationActions\"/>\n   <ExternalResource name=\"ws-target-resource-nopropagation\" connector_id=\"103\"\n-                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n+                    randomPwdIfNotProvided=\"0\" enforceMandatoryCondition=\"1\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" \n                     passwordPolicy_id=\"4\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n   \n   <!-- The following three resources has been added to verify the issue SYNCOPE-68 -->\n-  <ExternalResource name=\"ws-target-resource-nopropagation2\" connector_id=\"103\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n+  <ExternalResource name=\"ws-target-resource-nopropagation2\" connector_id=\"103\" enforceMandatoryCondition=\"1\"\n                     randomPwdIfNotProvided=\"0\" propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n-  <ExternalResource name=\"ws-target-resource-nopropagation3\" connector_id=\"103\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n+  <ExternalResource name=\"ws-target-resource-nopropagation3\" connector_id=\"103\" enforceMandatoryCondition=\"1\"\n                     randomPwdIfNotProvided=\"0\" propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n-  <ExternalResource name=\"ws-target-resource-nopropagation4\" connector_id=\"103\" enforceMandatoryCondition=\"1\" propagationMode=\"TWO_PHASES\"\n+  <ExternalResource name=\"ws-target-resource-nopropagation4\" connector_id=\"103\" enforceMandatoryCondition=\"1\"\n                     randomPwdIfNotProvided=\"0\" propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n@@ -688,22 +673,22 @@ under the License.\n   <ExternalResource name=\"resource-db-sync\" connector_id=\"107\"\n                     randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"\n                     enforceMandatoryCondition=\"0\" \n-                    propagationMode=\"TWO_PHASES\" propagationPrimary=\"0\" propagationPriority=\"0\"\n+                    propagationPrimary=\"0\" propagationPriority=\"0\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n                     \n   <!-- External resource for issue SYNCOPE-267 -->\n   <ExternalResource name=\"resource-db-virattr\" connector_id=\"107\"\n                     randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"\n                     enforceMandatoryCondition=\"0\" \n-                    propagationMode=\"TWO_PHASES\" propagationPrimary=\"0\" propagationPriority=\"0\"\n+                    propagationPrimary=\"0\" propagationPriority=\"0\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n \n   <ExternalResource name=\"resource-db-scripted\" connector_id=\"108\"\n                     randomPwdIfNotProvided=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" updateTraceLevel=\"ALL\"\n                     enforceMandatoryCondition=\"0\"\n-                    propagationMode=\"ONE_PHASE\" propagationPrimary=\"0\" propagationPriority=\"0\"\n+                    propagationPrimary=\"0\" propagationPriority=\"0\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n \n@@ -984,14 +969,14 @@ under the License.\n                intAttrName=\"location\" intMappingType=\"AnyObjectPlainSchema\"\n                mandatoryCondition=\"false\" connObjectKey=\"0\" password=\"0\" purpose=\"BOTH\"/>\n     \n-  <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"1\" propagationMode=\"TWO_PHASES\" propagationOperation=\"UPDATE\"\n+  <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"1\" operation=\"UPDATE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-2\" anyTypeKind=\"USER\" anyKey=\"1\"\n         xmlAttributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n   <TaskExec id=\"1\" task_id=\"1\" status=\"SUCCESS\"/>\n-  <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"2\" propagationMode=\"ONE_PHASE\" propagationOperation=\"CREATE\"\n+  <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"2\" operation=\"CREATE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-2\" anyTypeKind=\"USER\" anyKey=\"1\"\n         xmlAttributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n-  <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"3\" propagationMode=\"TWO_PHASES\" propagationOperation=\"DELETE\"\n+  <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"3\" operation=\"DELETE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-2\" anyTypeKind=\"USER\" anyKey=\"1\"\n         xmlAttributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n   <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"4\" name=\"CSV (update matching; assign unmatching)\" resource_name=\"resource-csv\"\n@@ -1003,7 +988,7 @@ under the License.\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"adynMembershipCond\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"propagationStatuses\":[],\"plainAttrs\":[]}'/>\n   <Task DTYPE=\"SchedTask\" type=\"SCHEDULED\" id=\"5\" name=\"SampleJob Task\" \n         jobDelegateClassName=\"org.apache.syncope.fit.core.reference.TestSampleJobDelegate\" cronExpression=\"0 0 0 1 * ?\"/>\n-  <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"6\" propagationMode=\"TWO_PHASES\" propagationOperation=\"UPDATE\"\n+  <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"6\" operation=\"UPDATE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-nopropagation\" anyTypeKind=\"USER\" anyKey=\"1\"\n         xmlAttributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n   <TaskExec id=\"6\" task_id=\"6\" status=\"SUCCESS\"/>\n@@ -1102,7 +1087,7 @@ under the License.\n   <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"26\" name=\"CSV (ignore matching; assign unmatching)\" resource_name=\"resource-csv\"\n         destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" fullReconciliation=\"0\"\n         unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\"/>\n-  <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"27\" propagationMode=\"ONE_PHASE\" propagationOperation=\"CREATE\"\n+  <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"27\" operation=\"CREATE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"resource-testdb\" anyTypeKind=\"USER\" anyKey=\"1\"\n         xmlAttributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n   <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"28\" name=\"Scripted SQL\" resource_name=\"resource-db-scripted\""},{"sha":"cce2ec862334aecb305924a3ea9edde52a5bea9a","filename":"core/persistence-jpa/src/test/resources/domains/TwoContent.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FTwoContent.xml?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -112,9 +112,9 @@ under the License.\n                 connectorName=\"net.tirasa.connid.bundles.ldap.LdapConnector\"\n                 version=\"${connid.ldap.version}\" \n                 jsonConf='[{\"schema\":{\"name\":\"synchronizePasswords\",\"displayName\":\"Enable Password Synchronization\",\"helpMessage\":\"If true, the connector will synchronize passwords. The Password Capture Plugin needs to be installed for password synchronization to work.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"maintainLdapGroupMembership\",\"displayName\":\"Maintain LDAP Group Membership\",\"helpMessage\":\"When enabled and a user is renamed or deleted, update any LDAP groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"true\"]},{\"schema\":{\"name\":\"host\",\"displayName\":\"Host\",\"helpMessage\":\"The name or IP address of the host where the LDAP server is running.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"localhost\"]},{\"schema\":{\"name\":\"passwordHashAlgorithm\",\"displayName\":\"Password Hash Algorithm\",\"helpMessage\":\"Indicates the algorithm that the Identity system should use to hash the password. Currently supported values are SSHA, SHA, SSHA1, and SHA1. A blank value indicates that the system will not hash passwords. This will cause cleartext passwords to be stored in LDAP unless the LDAP server performs the hash (Netscape Directory Server and iPlanet Directory Server do).\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"SHA\"]},{\"schema\":{\"name\":\"port\",\"displayName\":\"TCP Port\",\"helpMessage\":\"TCP/IP port number used to communicate with the LDAP server.\",\"type\":\"int\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[1389]},{\"schema\":{\"name\":\"vlvSortAttribute\",\"displayName\":\"VLV Sort Attribute\",\"helpMessage\":\"Specify the sort attribute to use for VLV indexes on the resource.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"statusManagementClass\",\"displayName\":\"Status management class \",\"helpMessage\":\"Class to be used to manage enabled/disabled status. If no class is specified then identity status management wont be possible.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"net.tirasa.connid.bundles.ldap.commons.AttributeStatusManagement\"]},{\"schema\":{\"name\":\"accountObjectClasses\",\"displayName\":\"Account Object Classes\",\"helpMessage\":\"The object class or classes that will be used when creating new user objects in the LDAP tree. When entering more than one object class, each entry should be on its own line; do not use commas or semi-colons to separate multiple object classes. Some object classes may require that you specify all object classes in the class hierarchy.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"inetOrgPerson\"]},{\"schema\":{\"name\":\"accountUserNameAttributes\",\"displayName\":\"Account User Name Attributes\",\"helpMessage\":\"Attribute or attributes which holds the account user name. They will be used when authenticating to find the LDAP entry for the user name to authenticate.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid\"]},{\"schema\":{\"name\":\"baseContextsToSynchronize\",\"displayName\":\"Base Contexts to Synchronize\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used to determine if a change should be synchronized. The base contexts attribute will be used to synchronize a change if this property is not set.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"]},{\"schema\":{\"name\":\"accountSynchronizationFilter\",\"displayName\":\"LDAP Filter for Accounts to Synchronize\",\"helpMessage\":\"An optional LDAP filter for the objects to synchronize. Because the change log is for all objects, this filter updates only objects that match the specified filter. If you specify a filter, an object will be synchronized only if it matches the filter and includes a synchronized object class.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"removeLogEntryObjectClassFromFilter\",\"displayName\":\"Remove Log Entry Object Class from Filter\",\"helpMessage\":\"If this property is set (the default), the filter used to fetch change log entries does not contain the \\\"changeLogEntry\\\" object class, expecting that there are no entries of other object types in the change log.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordDecryptionKey\",\"displayName\":\"Password Decryption Key\",\"helpMessage\":\"The key to decrypt passwords with when performing password synchronization.\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"readSchema\",\"displayName\":\"Read Schema\",\"helpMessage\":\"If true, the connector will read the schema from the server. If false, the connector will provide a default schema based on the object classes in the configuration. This property must be true in order to use extended object classes.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"ssl\",\"displayName\":\"SSL\",\"helpMessage\":\"Select the check box to connect to the LDAP server using SSL.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"passwordAttributeToSynchronize\",\"displayName\":\"Password Attribute to Synchronize\",\"helpMessage\":\"The name of the password attribute to synchronize when performing password synchronization.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"accountSearchFilter\",\"displayName\":\"LDAP Filter for Retrieving Accounts\",\"helpMessage\":\"An optional LDAP filter to control which accounts are returned from the LDAP resource. If no filter is specified, only accounts that include all specified object classes are returned.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid=*\"]},{\"schema\":{\"name\":\"passwordDecryptionInitializationVector\",\"displayName\":\"Password Decryption Initialization Vector\",\"helpMessage\":\"The initialization vector to decrypt passwords with when performing password synchronization.\",\"type\":\"org.identityconnectors.common.security.GuardedByteArray\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"groupMemberAttribute\",\"displayName\":\"Group Member Attribute\",\"helpMessage\":\"The name of the group attribute that will be updated with the distinguished name of the user when the user is added to the group.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"failover\",\"displayName\":\"Failover Servers\",\"helpMessage\":\"List all servers that should be used for failover in case the preferred server fails. If the preferred server fails, JNDI will connect to the next available server in the list. List all servers in the form of \\\"ldap://ldap.example.com:389/\\\", which follows the standard LDAP v3 URLs described in RFC 2255. Only the host and port parts of the URL are relevant in this setting.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"modifiersNamesToFilterOut\",\"displayName\":\"Filter Out Changes By\",\"helpMessage\":\"The names (DNs) of directory administrators to filter from the changes. Changes with the attribute \\\"modifiersName\\\" that match entries in this list will be filtered out. The standard value is the administrator name used by this adapter, to prevent loops. Entries should be of the format \\\"cn=Directory Manager\\\".\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"groupNameAttributes\",\"displayName\":\"Group Name Attributes\",\"helpMessage\":\"Attribute or attributes which holds the group name.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"cn\"]},{\"schema\":{\"name\":\"uidAttribute\",\"displayName\":\"Uid Attribute\",\"helpMessage\":\"The name of the LDAP attribute which is mapped to the Uid attribute.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"cn\"]},{\"schema\":{\"name\":\"respectResourcePasswordPolicyChangeAfterReset\",\"displayName\":\"Respect Resource Password Policy Change-After-Reset\",\"helpMessage\":\"When this resource is specified in a Login Module (i.e., this resource is a pass-through authentication target) and the resource password policy is configured for change-after-reset, a user whose resource account password has been administratively reset will be required to change that password after successfully authenticating.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"filterWithOrInsteadOfAnd\",\"displayName\":\"Filter with Or Instead of And\",\"helpMessage\":\"Normally the the filter used to fetch change log entries is an and-based filter retrieving an interval of change entries. If this property is set, the filter will or together the required change numbers instead.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"false\"]},{\"schema\":{\"name\":\"principal\",\"displayName\":\"Principal\",\"helpMessage\":\"The distinguished name with which to authenticate to the LDAP server.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"uid=admin,ou=system\"]},{\"schema\":{\"name\":\"changeLogBlockSize\",\"displayName\":\"Change Log Block Size\",\"helpMessage\":\"The number of change log entries to fetch per query.\",\"type\":\"int\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[100]},{\"schema\":{\"name\":\"baseContexts\",\"displayName\":\"Base Contexts\",\"helpMessage\":\"One or more starting points in the LDAP tree that will be used when searching the tree. Searches are performed when discovering users from the LDAP server or when looking for the groups of which a user is a member.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"ou=people,o=isp\",\"ou=groups,o=isp\"]},{\"schema\":{\"name\":\"passwordAttribute\",\"displayName\":\"Password Attribute\",\"helpMessage\":\"The name of the LDAP attribute which holds the password. When changing an user password, the new password is set to this attribute.\",\"type\":\"java.lang.String\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"userpassword\"]},{\"schema\":{\"name\":\"changeNumberAttribute\",\"displayName\":\"Change Number Attribute\",\"helpMessage\":\"The name of the change number attribute in the change log entry.\",\"type\":\"java.lang.String\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"changeNumber\"]},{\"schema\":{\"name\":\"objectClassesToSynchronize\",\"displayName\":\"Object Classes to Synchronize\",\"helpMessage\":\"The object classes to synchronize. The change log is for all objects; this filters updates to just the listed object classes. You should not list the superclasses of an object class unless you intend to synchronize objects with any of the superclass values. For example, if only \\\"inetOrgPerson\\\" objects should be synchronized, but the superclasses of \\\"inetOrgPerson\\\" (\\\"person\\\", \\\"organizationalperson\\\" and \\\"top\\\") should be filtered out, then list only \\\"inetOrgPerson\\\" here. All objects in LDAP are subclassed from \\\"top\\\". For this reason, you should never list \\\"top\\\", otherwise no object would be filtered.\",\"type\":\"[Ljava.lang.String;\",\"required\":true,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"inetOrgPerson\",\"groupOfUniqueNames\"]},{\"schema\":{\"name\":\"credentials\",\"displayName\":\"Password\",\"helpMessage\":\"Password for the principal.\",\"type\":\"org.identityconnectors.common.security.GuardedString\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"secret\"]},{\"schema\":{\"name\":\"attributesToSynchronize\",\"displayName\":\"Attributes to Synchronize\",\"helpMessage\":\"The names of the attributes to synchronize. This ignores updates from the change log if they do not update any of the named attributes. For example, if only \\\"department\\\" is listed, then only changes that affect \\\"department\\\" will be processed. All other updates are ignored. If blank (the default), then all changes are processed.\",\"type\":\"[Ljava.lang.String;\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[]},{\"schema\":{\"name\":\"maintainPosixGroupMembership\",\"displayName\":\"Maintain POSIX Group Membership\",\"helpMessage\":\"When enabled and a user is renamed or deleted, update any POSIX groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership.\",\"type\":\"boolean\",\"required\":false,\"order\":0,\"confidential\":false,\"defaultValues\":null},\"overridable\":false,\"values\":[\"truemaintainLdapGroupMembership\"]}]'/>\n-  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"ONE_PHASE_CREATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"ONE_PHASE_UPDATE\"/>\n-  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"ONE_PHASE_DELETE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"CREATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"UPDATE\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"100\" capability=\"SEARCH\"/>\n   \n </dataset>"},{"sha":"e42e36e1524827136c0e534332abd8dca9788731","filename":"core/pom.xml","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -36,7 +36,26 @@ under the License.\n   <properties>\n     <rootpom.basedir>${basedir}/..</rootpom.basedir>\n   </properties>\n+  \n+  <profiles>\n+    <profile>\n+      <id>doc</id>\n \n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.asciidoctor</groupId>\n+            <artifactId>asciidoctor-maven-plugin</artifactId>\n+            <inherited>false</inherited>\n+            <configuration>\n+              <skip>true</skip>\n+            </configuration>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+  </profiles>\n+  \n   <modules>\n     <module>persistence-api</module>\n     <module>persistence-jpa</module>"},{"sha":"1be141f3f41874e0e49766d65086e35d51b05f12","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/Connector.java","status":"modified","additions":8,"deletions":11,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -21,7 +21,6 @@\n import java.util.Collection;\n import java.util.List;\n import java.util.Set;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n@@ -54,42 +53,42 @@ public interface Connector {\n     /**\n      * Create user / group on a connector instance.\n      *\n-     * @param propagationMode propagation mode\n      * @param objectClass ConnId's object class\n      * @param attrs attributes for creation\n      * @param options ConnId's OperationOptions\n      * @param propagationAttempted if creation is actually performed (based on connector instance's capabilities)\n      * @return Uid for created object\n      */\n-    Uid create(PropagationMode propagationMode, ObjectClass objectClass,\n-            Set<Attribute> attrs, OperationOptions options,\n+    Uid create(ObjectClass objectClass,\n+            Set<Attribute> attrs,\n+            OperationOptions options,\n             Set<String> propagationAttempted);\n \n     /**\n      * Update user / group on a connector instance.\n      *\n-     * @param propagationMode propagation mode\n      * @param objectClass ConnId's object class\n      * @param uid user to be updated\n      * @param attrs attributes for update\n      * @param options ConnId's OperationOptions\n      * @param propagationAttempted if update is actually performed (based on connector instance's capabilities)\n      * @return Uid for updated object\n      */\n-    Uid update(PropagationMode propagationMode, ObjectClass objectClass,\n-            Uid uid, Set<Attribute> attrs, OperationOptions options,\n+    Uid update(ObjectClass objectClass,\n+            Uid uid,\n+            Set<Attribute> attrs,\n+            OperationOptions options,\n             Set<String> propagationAttempted);\n \n     /**\n      * Delete user / group on a connector instance.\n      *\n-     * @param propagationMode propagation mode\n      * @param objectClass ConnId's object class\n      * @param uid user to be deleted\n      * @param options ConnId's OperationOptions\n      * @param propagationAttempted if deletion is actually performed (based on connector instance's capabilities)\n      */\n-    void delete(PropagationMode propagationMode, ObjectClass objectClass,\n+    void delete(ObjectClass objectClass,\n             Uid uid, OperationOptions options, Set<String> propagationAttempted);\n \n     /**\n@@ -133,15 +132,13 @@ void delete(PropagationMode propagationMode, ObjectClass objectClass,\n      * Get remote object used by the propagation manager in order to choose for a create (object doesn't exist) or an\n      * update (object exists).\n      *\n-     * @param propagationMode propagation mode\n      * @param operationType resource operation type\n      * @param objectClass ConnId's object class\n      * @param uid ConnId's Uid\n      * @param options ConnId's OperationOptions\n      * @return ConnId's connector object for given uid\n      */\n     ConnectorObject getObject(\n-            PropagationMode propagationMode,\n             ResourceOperation operationType,\n             ObjectClass objectClass,\n             Uid uid,"},{"sha":"ae11199045ea497003bf047cfffe3153912c7827","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/MappingItemTransformer.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FMappingItemTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FMappingItemTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FMappingItemTransformer.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.api.data;\n+\n+import java.util.List;\n+import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n+\n+/**\n+ * Transforms values to be propagated to (or synchronizing from) external resources right before they leave (or enter)\n+ * the Syncope internal storage.\n+ *\n+ * These transformations are not applied to virtual attribute values.\n+ */\n+public interface MappingItemTransformer {\n+\n+    /**\n+     * Invoked while preparing attribute values to be sent out to external resource during propagation.\n+     *\n+     * @param values original values\n+     * @return transformed values\n+     */\n+    List<PlainAttrValue> beforePropagation(List<PlainAttrValue> values);\n+\n+    /**\n+     * Invoked while reading attribute values from external resource during synchronization.\n+     *\n+     * @param values original values\n+     * @return transformed values\n+     */\n+    List<Object> beforeSync(List<Object> values);\n+}"},{"sha":"0b4340e3fbcd83d1b24a9e8ae7b09af24133a5c1","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/AsyncConnectorFacade.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAsyncConnectorFacade.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAsyncConnectorFacade.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAsyncConnectorFacade.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -120,7 +120,7 @@ public Future<Attribute> getObjectAttribute(\n \n         Attribute attribute = null;\n \n-        final ConnectorObject object = connector.getObject(objectClass, uid, options);\n+        ConnectorObject object = connector.getObject(objectClass, uid, options);\n         if (object == null) {\n             LOG.debug(\"Object for '{}' not found\", uid.getUidValue());\n         } else {\n@@ -137,9 +137,9 @@ public Future<Set<Attribute>> getObjectAttributes(\n             final Uid uid,\n             final OperationOptions options) {\n \n-        final Set<Attribute> attributes = new HashSet<>();\n+        Set<Attribute> attributes = new HashSet<>();\n \n-        final ConnectorObject object = connector.getObject(objectClass, uid, options);\n+        ConnectorObject object = connector.getObject(objectClass, uid, options);\n \n         if (object == null) {\n             LOG.debug(\"Object for '{}' not found\", uid.getUidValue());\n@@ -154,10 +154,10 @@ public Future<Set<Attribute>> getObjectAttributes(\n \n     @Async\n     public Future<Set<String>> getSchemaNames(final ConnectorFacade connector, final boolean includeSpecial) {\n-        final Set<String> schemaNames = new HashSet<>();\n+        Set<String> schemaNames = new HashSet<>();\n \n         try {\n-            final Schema schema = connector.schema();\n+            Schema schema = connector.schema();\n             for (ObjectClassInfo info : schema.getObjectClassInfo()) {\n                 for (AttributeInfo attrInfo : info.getAttributeInfo()) {\n                     if (includeSpecial || !AttributeUtil.isSpecialName(attrInfo.getName())) {\n@@ -175,10 +175,10 @@ public Future<Set<String>> getSchemaNames(final ConnectorFacade connector, final\n \n     @Async\n     public Future<Set<ObjectClass>> getSupportedObjectClasses(final ConnectorFacade connector) {\n-        final Set<ObjectClass> objectClasses = new HashSet<>();\n+        Set<ObjectClass> objectClasses = new HashSet<>();\n \n         try {\n-            final Schema schema = connector.schema();\n+            Schema schema = connector.schema();\n             for (ObjectClassInfo info : schema.getObjectClassInfo()) {\n                 objectClasses.add(new ObjectClass(info.getType()));\n             }"},{"sha":"a28f44e6ba7ddc3f60f7998ba6f91153fe3ce7c4","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorFacadeProxy.java","status":"modified","additions":27,"deletions":28,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -31,7 +31,6 @@\n import org.apache.commons.collections4.Transformer;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.types.ConnectorCapability;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n import org.apache.syncope.core.provisioning.api.ConnIdBundleManager;\n@@ -165,15 +164,15 @@ public Uid authenticate(final String username, final String password, final Oper\n     }\n \n     @Override\n-    public Uid create(final PropagationMode propagationMode, final ObjectClass objectClass, final Set<Attribute> attrs,\n-            final OperationOptions options, final Set<String> propagationAttempted) {\n+    public Uid create(\n+            final ObjectClass objectClass,\n+            final Set<Attribute> attrs,\n+            final OperationOptions options,\n+            final Set<String> propagationAttempted) {\n \n         Uid result = null;\n \n-        if (propagationMode == PropagationMode.ONE_PHASE\n-                ? activeConnInstance.getCapabilities().contains(ConnectorCapability.ONE_PHASE_CREATE)\n-                : activeConnInstance.getCapabilities().contains(ConnectorCapability.TWO_PHASES_CREATE)) {\n-\n+        if (activeConnInstance.getCapabilities().contains(ConnectorCapability.CREATE)) {\n             propagationAttempted.add(\"create\");\n \n             Future<Uid> future = asyncFacade.create(connector, objectClass, attrs, options);\n@@ -199,15 +198,16 @@ public Uid create(final PropagationMode propagationMode, final ObjectClass objec\n     }\n \n     @Override\n-    public Uid update(final PropagationMode propagationMode, final ObjectClass objectClass, final Uid uid,\n-            final Set<Attribute> attrs, final OperationOptions options, final Set<String> propagationAttempted) {\n+    public Uid update(\n+            final ObjectClass objectClass,\n+            final Uid uid,\n+            final Set<Attribute> attrs,\n+            final OperationOptions options,\n+            final Set<String> propagationAttempted) {\n \n         Uid result = null;\n \n-        if (propagationMode == PropagationMode.ONE_PHASE\n-                ? activeConnInstance.getCapabilities().contains(ConnectorCapability.ONE_PHASE_UPDATE)\n-                : activeConnInstance.getCapabilities().contains(ConnectorCapability.TWO_PHASES_UPDATE)) {\n-\n+        if (activeConnInstance.getCapabilities().contains(ConnectorCapability.UPDATE)) {\n             propagationAttempted.add(\"update\");\n \n             Future<Uid> future = asyncFacade.update(connector, objectClass, uid, attrs, options);\n@@ -235,13 +235,13 @@ public Uid update(final PropagationMode propagationMode, final ObjectClass objec\n     }\n \n     @Override\n-    public void delete(final PropagationMode propagationMode, final ObjectClass objectClass, final Uid uid,\n-            final OperationOptions options, final Set<String> propagationAttempted) {\n-\n-        if (propagationMode == PropagationMode.ONE_PHASE\n-                ? activeConnInstance.getCapabilities().contains(ConnectorCapability.ONE_PHASE_DELETE)\n-                : activeConnInstance.getCapabilities().contains(ConnectorCapability.TWO_PHASES_DELETE)) {\n+    public void delete(\n+            final ObjectClass objectClass,\n+            final Uid uid,\n+            final OperationOptions options,\n+            final Set<String> propagationAttempted) {\n \n+        if (activeConnInstance.getCapabilities().contains(ConnectorCapability.DELETE)) {\n             propagationAttempted.add(\"delete\");\n \n             Future<Uid> future = asyncFacade.delete(connector, objectClass, uid, options);\n@@ -307,12 +307,15 @@ public SyncToken getLatestSyncToken(final ObjectClass objectClass) {\n \n     @Override\n     public ConnectorObject getObject(final ObjectClass objectClass, final Uid uid, final OperationOptions options) {\n-        return getObject(null, null, objectClass, uid, options);\n+        return getObject(null, objectClass, uid, options);\n     }\n \n     @Override\n-    public ConnectorObject getObject(final PropagationMode propagationMode, final ResourceOperation operationType,\n-            final ObjectClass objectClass, final Uid uid, final OperationOptions options) {\n+    public ConnectorObject getObject(\n+            final ResourceOperation operationType,\n+            final ObjectClass objectClass,\n+            final Uid uid,\n+            final OperationOptions options) {\n \n         boolean hasCapablities = false;\n \n@@ -322,15 +325,11 @@ public ConnectorObject getObject(final PropagationMode propagationMode, final Re\n             } else {\n                 switch (operationType) {\n                     case CREATE:\n-                        hasCapablities = propagationMode == null || (propagationMode == PropagationMode.ONE_PHASE\n-                                ? activeConnInstance.getCapabilities().contains(ConnectorCapability.ONE_PHASE_CREATE)\n-                                : activeConnInstance.getCapabilities().contains(ConnectorCapability.TWO_PHASES_CREATE));\n+                        hasCapablities = activeConnInstance.getCapabilities().contains(ConnectorCapability.CREATE);\n                         break;\n \n                     case UPDATE:\n-                        hasCapablities = propagationMode == null || (propagationMode == PropagationMode.ONE_PHASE\n-                                ? activeConnInstance.getCapabilities().contains(ConnectorCapability.ONE_PHASE_UPDATE)\n-                                : activeConnInstance.getCapabilities().contains(ConnectorCapability.TWO_PHASES_UPDATE));\n+                        hasCapablities = activeConnInstance.getCapabilities().contains(ConnectorCapability.UPDATE);\n                         break;\n \n                     default:"},{"sha":"3d600893aa5f3d63b15dc399ad93cff9487b9032","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/VirAttrHandlerImpl.java","status":"modified","additions":19,"deletions":25,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FVirAttrHandlerImpl.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -34,7 +34,6 @@\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.IntMappingType;\n-import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.common.lib.types.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.misc.MappingUtils;\n@@ -61,7 +60,6 @@\n import org.apache.syncope.core.provisioning.api.cache.VirAttrCacheValue;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n-import org.identityconnectors.framework.common.objects.OperationOptions;\n import org.identityconnectors.framework.common.objects.Uid;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -102,6 +100,9 @@ public class VirAttrHandlerImpl implements VirAttrHandler {\n     @Autowired\n     private VirAttrCache virAttrCache;\n \n+    @Autowired\n+    private MappingUtils mappingUtils;\n+\n     @Override\n     public VirSchema getVirSchema(final String virSchemaName) {\n         VirSchema virtualSchema = null;\n@@ -122,8 +123,8 @@ public void updateOnResourcesIfMappingMatches(final Any<?, ?, ?> any, final Stri\n             final PropagationByResource propByRes) {\n \n         for (ExternalResource resource : resources) {\n-            for (MappingItem mapItem : MappingUtils.getMappingItems(\n-                    resource.getProvision(any.getType()), MappingPurpose.PROPAGATION)) {\n+            for (MappingItem mapItem\n+                    : MappingUtils.getPropagationMappingItems(resource.getProvision(any.getType()))) {\n \n                 if (schemaKey.equals(mapItem.getIntAttrName()) && mapItem.getIntMappingType() == mappingType) {\n                     propByRes.add(ResourceOperation.UPDATE, resource.getKey());\n@@ -232,8 +233,8 @@ public PropagationByResource updateVirtual(final Any any, final Collection<AttrP\n                         }\n \n                         for (ExternalResource resource : externalResources) {\n-                            for (MappingItem mapItem : MappingUtils.getMappingItems(\n-                                    resource.getProvision(any.getType()), MappingPurpose.PROPAGATION)) {\n+                            for (MappingItem mapItem\n+                                    : MappingUtils.getPropagationMappingItems(resource.getProvision(any.getType()))) {\n \n                                 if (virSchema.getKey().equals(mapItem.getIntAttrName())\n                                         && mapItem.getIntMappingType() == anyUtils.virIntMappingType()) {\n@@ -314,7 +315,7 @@ private void retrieveVirAttrValue(\n                 LOG.debug(\"Search values into {},{}\", resource, provision);\n \n                 try {\n-                    List<MappingItem> mappings = MappingUtils.getMappingItems(provision, MappingPurpose.BOTH);\n+                    List<MappingItem> mapItems = MappingUtils.getBothMappingItems(provision);\n \n                     ConnectorObject connectorObject;\n                     if (externalResources.containsKey(resource.getKey())) {\n@@ -323,33 +324,26 @@ private void retrieveVirAttrValue(\n                         LOG.debug(\"Perform connection to {}\", resource.getKey());\n                         String connObjectKey = MappingUtils.getConnObjectKeyItem(provision) == null\n                                 ? null\n-                                : MappingUtils.getConnObjectKeyValue(any, provision);\n+                                : mappingUtils.getConnObjectKeyValue(any, provision);\n \n                         if (StringUtils.isBlank(connObjectKey)) {\n                             throw new IllegalArgumentException(\"No ConnObjectKey found for \" + resource.getKey());\n                         }\n \n                         Connector connector = connFactory.getConnector(resource);\n-\n-                        OperationOptions oo =\n-                                connector.getOperationOptions(MappingUtils.getMatchingMappingItems(mappings, type));\n-\n-                        connectorObject =\n-                                connector.getObject(provision.getObjectClass(), new Uid(connObjectKey), oo);\n+                        connectorObject = connector.getObject(\n+                                provision.getObjectClass(),\n+                                new Uid(connObjectKey),\n+                                connector.getOperationOptions(MappingUtils.getMatchingMappingItems(mapItems, type)));\n                         externalResources.put(resource.getKey(), connectorObject);\n                     }\n \n                     if (connectorObject != null) {\n-                        // ask for searched virtual attribute value\n-                        Collection<MappingItem> virAttrMappings =\n-                                MappingUtils.getMatchingMappingItems(mappings, schemaName, type);\n-\n-                        // the same virtual attribute could be mapped with one or more external attribute \n-                        for (MappingItem mapping : virAttrMappings) {\n-                            Attribute attribute = connectorObject.getAttributeByName(mapping.getExtAttrName());\n-\n-                            if (attribute != null && attribute.getValue() != null) {\n-                                for (Object obj : attribute.getValue()) {\n+                        // the same virtual attribute could be mapped with one or more external attributes\n+                        for (MappingItem mapItem : MappingUtils.getMatchingMappingItems(mapItems, schemaName, type)) {\n+                            Attribute attr = connectorObject.getAttributeByName(mapItem.getExtAttrName());\n+                            if (attr != null && attr.getValue() != null) {\n+                                for (Object obj : attr.getValue()) {\n                                     if (obj != null) {\n                                         virAttr.getValues().add(obj.toString());\n                                     }\n@@ -390,7 +384,7 @@ private Collection<ExternalResource> getTargetResources(\n             public boolean evaluate(final ExternalResource resource) {\n                 return resource.getProvision(anyType) != null\n                         && !MappingUtils.getMatchingMappingItems(\n-                                MappingUtils.getMappingItems(resource.getProvision(anyType), MappingPurpose.BOTH),\n+                                MappingUtils.getBothMappingItems(resource.getProvision(anyType)),\n                                 attr.getSchema().getKey(), type).isEmpty();\n             }\n         });"},{"sha":"4a203f9c94160edba9253437b29766c9c9af7100","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AbstractAnyDataBinder.java","status":"modified","additions":10,"deletions":9,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAnyDataBinder.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -156,6 +156,9 @@ abstract class AbstractAnyDataBinder {\n     @Autowired\n     protected ConnObjectUtils connObjectUtils;\n \n+    @Autowired\n+    protected MappingUtils mappingUtils;\n+\n     protected void setRealm(final Any<?, ?, ?> any, final AnyPatch anyPatch) {\n         if (anyPatch.getRealm() != null && StringUtils.isNotBlank(anyPatch.getRealm().getValue())) {\n             Realm newRealm = realmDAO.find(anyPatch.getRealm().getValue());\n@@ -231,11 +234,9 @@ private List<String> evaluateMandatoryCondition(final Provision provision, final\n                         && (item.getPurpose() == MappingPurpose.PROPAGATION\n                         || item.getPurpose() == MappingPurpose.BOTH)) {\n \n-                    List<PlainAttrValue> values = MappingUtils.getIntValues(\n+                    List<PlainAttrValue> values = mappingUtils.getIntValues(\n                             provision, item, Collections.<Any<?, ?, ?>>singletonList(any), null);\n-                    if ((values == null || values.isEmpty())\n-                            && JexlUtils.evaluateMandatoryCondition(item.getMandatoryCondition(), any)) {\n-\n+                    if (values.isEmpty() && JexlUtils.evaluateMandatoryCondition(item.getMandatoryCondition(), any)) {\n                         missingAttrNames.add(item.getIntAttrName());\n                     }\n                 }\n@@ -360,8 +361,8 @@ public Long transform(final PlainAttrValue input) {\n                 plainAttrDAO.delete(attr.getKey(), anyUtils.plainAttrClass());\n \n                 for (ExternalResource resource : resources) {\n-                    for (MappingItem mapItem : MappingUtils.getMappingItems(\n-                            resource.getProvision(any.getType()), MappingPurpose.PROPAGATION)) {\n+                    for (MappingItem mapItem\n+                            : MappingUtils.getPropagationMappingItems(resource.getProvision(any.getType()))) {\n \n                         if (schema.getKey().equals(mapItem.getIntAttrName())\n                                 && mapItem.getIntMappingType() == anyUtils.plainIntMappingType()) {\n@@ -410,8 +411,8 @@ private void processAttrPatch(final Any any, final AttrPatch patch, final DerSch\n                 derAttrDAO.delete(attr);\n \n                 for (ExternalResource resource : resources) {\n-                    for (MappingItem mapItem : MappingUtils.getMappingItems(\n-                            resource.getProvision(any.getType()), MappingPurpose.PROPAGATION)) {\n+                    for (MappingItem mapItem\n+                            : MappingUtils.getPropagationMappingItems(resource.getProvision(any.getType()))) {\n \n                         if (schema.getKey().equals(mapItem.getIntAttrName())\n                                 && mapItem.getIntMappingType() == anyUtils.derIntMappingType()) {\n@@ -704,7 +705,7 @@ protected Map<String, String> getConnObjectKeys(final Any<?, ?, ?> any) {\n                             + \" on resource '\" + resource.getKey() + \"'\");\n                 }\n \n-                connObjectKeys.put(resource.getKey(), MappingUtils.getConnObjectKeyValue(any, provision));\n+                connObjectKeys.put(resource.getKey(), mappingUtils.getConnObjectKeyValue(any, provision));\n             }\n         }\n "},{"sha":"3810a879fc479fd17666d4e99121c1628fd62428","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/DefaultMappingItemTransformer.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDefaultMappingItemTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDefaultMappingItemTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDefaultMappingItemTransformer.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java.data;\n+\n+import java.util.List;\n+import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n+import org.apache.syncope.core.provisioning.api.data.MappingItemTransformer;\n+\n+/**\n+ * Default (empty) implementation of {@link MappingItemTransformer}.\n+ */\n+public class DefaultMappingItemTransformer implements MappingItemTransformer {\n+\n+    @Override\n+    public List<PlainAttrValue> beforePropagation(final List<PlainAttrValue> values) {\n+        return values;\n+    }\n+\n+    @Override\n+    public List<Object> beforeSync(final List<Object> values) {\n+        return values;\n+    }\n+\n+}"},{"sha":"e5dfadfdcfc6de984fd81fedc63469feb2930bf0","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ResourceDataBinderImpl.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FResourceDataBinderImpl.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -108,8 +108,6 @@ public ExternalResource update(final ExternalResource resource, final ResourceTO\n \n         resource.setRandomPwdIfNotProvided(resourceTO.isRandomPwdIfNotProvided());\n \n-        resource.setPropagationMode(resourceTO.getPropagationMode());\n-\n         // 1. add or update all (valid) provisions from TO\n         for (ProvisionTO provisionTO : resourceTO.getProvisions()) {\n             AnyType anyType = anyTypeDAO.find(provisionTO.getAnyType());\n@@ -323,8 +321,6 @@ public ResourceTO getResourceTO(final ExternalResource resource) {\n \n         resourceTO.setRandomPwdIfNotProvided(resource.isRandomPwdIfNotProvided());\n \n-        resourceTO.setPropagationMode(resource.getPropagationMode());\n-\n         resourceTO.setCreateTraceLevel(resource.getCreateTraceLevel());\n         resourceTO.setUpdateTraceLevel(resource.getUpdateTraceLevel());\n         resourceTO.setDeleteTraceLevel(resource.getDeleteTraceLevel());"},{"sha":"69a2e9da325085689fefc27f5bb5be47810bfbb1","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":39,"deletions":25,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -22,14 +22,13 @@\n import java.util.Collection;\n import java.util.Collections;\n import java.util.Date;\n+import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.common.lib.types.AuditElements.Result;\n-import org.apache.syncope.common.lib.types.MappingPurpose;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.lib.types.TraceLevel;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n@@ -149,17 +148,38 @@ protected List<PropagationActions> getPropagationActions(final ExternalResource\n         return result;\n     }\n \n+    /**\n+     * Transform a\n+     * <code>Collection</code> of {@link Attribute} instances into a {@link Map}. The key to each element in the map is\n+     * the <i>name</i> of an\n+     * <code>Attribute</code>. The value of each element in the map is the\n+     * <code>Attribute</code> instance with that name. <br/> Different from the original because: <ul> <li>map keys are\n+     * transformed toUpperCase()</li> <li>returned map is mutable</li> </ul>\n+     *\n+     * @param attributes set of attribute to transform to a map.\n+     * @return a map of string and attribute.\n+     *\n+     * @see org.identityconnectors.framework.common.objects.AttributeUtil#toMap(java.util.Collection)\n+     */\n+    private Map<String, Attribute> toMap(final Collection<? extends Attribute> attributes) {\n+        Map<String, Attribute> map = new HashMap<>();\n+        for (Attribute attr : attributes) {\n+            map.put(attr.getName().toUpperCase(), attr);\n+        }\n+        return map;\n+    }\n+\n     protected void createOrUpdate(\n             final PropagationTask task,\n             final ConnectorObject beforeObj,\n             final Connector connector,\n             final Set<String> propagationAttempted) {\n \n         // set of attributes to be propagated\n-        final Set<Attribute> attributes = new HashSet<>(task.getAttributes());\n+        Set<Attribute> attributes = new HashSet<>(task.getAttributes());\n \n         // check if there is any missing or null / empty mandatory attribute\n-        List<Object> mandatoryAttrNames = new ArrayList<>();\n+        Set<Object> mandatoryAttrNames = new HashSet<>();\n         Attribute mandatoryMissing = AttributeUtil.find(MANDATORY_MISSING_ATTR_NAME, task.getAttributes());\n         if (mandatoryMissing != null) {\n             attributes.remove(mandatoryMissing);\n@@ -182,7 +202,6 @@ protected void createOrUpdate(\n         if (beforeObj == null) {\n             LOG.debug(\"Create {} on {}\", attributes, task.getResource().getKey());\n             connector.create(\n-                    task.getResource().getPropagationMode(),\n                     new ObjectClass(task.getObjectClassName()),\n                     attributes,\n                     null,\n@@ -202,8 +221,8 @@ protected void createOrUpdate(\n \n             // 2. check wether anything is actually needing to be propagated, i.e. if there is attribute\n             // difference between beforeObj - just read above from the connector - and the values to be propagated\n-            Map<String, Attribute> originalAttrMap = connObjectUtils.toMap(beforeObj.getAttributes());\n-            Map<String, Attribute> updateAttrMap = connObjectUtils.toMap(attributes);\n+            Map<String, Attribute> originalAttrMap = toMap(beforeObj.getAttributes());\n+            Map<String, Attribute> updateAttrMap = toMap(attributes);\n \n             // Only compare attribute from beforeObj that are also being updated\n             Set<String> skipAttrNames = originalAttrMap.keySet();\n@@ -229,8 +248,8 @@ protected void createOrUpdate(\n                 // 3. provision entry\n                 LOG.debug(\"Update {} on {}\", strictlyModified, task.getResource().getKey());\n \n-                connector.update(task.getResource().getPropagationMode(), beforeObj.getObjectClass(),\n-                        beforeObj.getUid(), strictlyModified, null, propagationAttempted);\n+                connector.update(\n+                        beforeObj.getObjectClass(), beforeObj.getUid(), strictlyModified, null, propagationAttempted);\n             }\n         }\n     }\n@@ -303,7 +322,6 @@ protected void delete(final PropagationTask task, final ConnectorObject beforeOb\n                 LOG.debug(\"Delete {} on {}\", beforeObj.getUid(), task.getResource().getKey());\n \n                 connector.delete(\n-                        task.getPropagationMode(),\n                         beforeObj.getObjectClass(),\n                         beforeObj.getUid(),\n                         null,\n@@ -346,7 +364,7 @@ public TaskExec execute(final PropagationTask task, final PropagationReporter re\n                 action.before(task, beforeObj);\n             }\n \n-            switch (task.getPropagationOperation()) {\n+            switch (task.getOperation()) {\n                 case CREATE:\n                 case UPDATE:\n                     createOrUpdate(task, beforeObj, connector, propagationAttempted);\n@@ -359,9 +377,7 @@ public TaskExec execute(final PropagationTask task, final PropagationReporter re\n                 default:\n             }\n \n-            execution.setStatus(task.getPropagationMode() == PropagationMode.ONE_PHASE\n-                    ? PropagationTaskExecStatus.SUCCESS.name()\n-                    : PropagationTaskExecStatus.SUBMITTED.name());\n+            execution.setStatus(PropagationTaskExecStatus.SUCCESS.name());\n \n             for (PropagationActions action : actions) {\n                 action.after(task, execution, afterObj);\n@@ -390,14 +406,12 @@ public TaskExec execute(final PropagationTask task, final PropagationReporter re\n             }\n \n             try {\n-                execution.setStatus(task.getPropagationMode() == PropagationMode.ONE_PHASE\n-                        ? PropagationTaskExecStatus.FAILURE.name()\n-                        : PropagationTaskExecStatus.UNSUBMITTED.name());\n+                execution.setStatus(PropagationTaskExecStatus.FAILURE.name());\n             } catch (Exception wft) {\n                 LOG.error(\"While executing KO action on {}\", execution, wft);\n             }\n \n-            propagationAttempted.add(task.getPropagationOperation().name().toLowerCase());\n+            propagationAttempted.add(task.getOperation().name().toLowerCase());\n \n             for (PropagationActions action : actions) {\n                 action.onError(task, execution, e);\n@@ -449,7 +463,7 @@ public TaskExec execute(final PropagationTask task, final PropagationReporter re\n                 AuditElements.EventCategoryType.PROPAGATION,\n                 task.getAnyTypeKind().name().toLowerCase(),\n                 task.getResource().getKey(),\n-                task.getPropagationOperation().name().toLowerCase(),\n+                task.getOperation().name().toLowerCase(),\n                 result,\n                 beforeObj, // searching for before object is too much expensive ... \n                 new Object[] { execution, afterObj },\n@@ -459,7 +473,7 @@ public TaskExec execute(final PropagationTask task, final PropagationReporter re\n                 AuditElements.EventCategoryType.PROPAGATION,\n                 task.getAnyTypeKind().name().toLowerCase(),\n                 task.getResource().getKey(),\n-                task.getPropagationOperation().name().toLowerCase(),\n+                task.getOperation().name().toLowerCase(),\n                 result,\n                 beforeObj, // searching for before object is too much expensive ... \n                 new Object[] { execution, afterObj },\n@@ -486,9 +500,9 @@ public void execute(final Collection<PropagationTask> tasks) {\n     protected boolean hasToBeregistered(final PropagationTask task, final TaskExec execution) {\n         boolean result;\n \n-        final boolean failed = !PropagationTaskExecStatus.valueOf(execution.getStatus()).isSuccessful();\n+        boolean failed = PropagationTaskExecStatus.valueOf(execution.getStatus()) != PropagationTaskExecStatus.SUCCESS;\n \n-        switch (task.getPropagationOperation()) {\n+        switch (task.getOperation()) {\n \n             case CREATE:\n                 result = (failed && task.getResource().getCreateTraceLevel().ordinal() >= TraceLevel.FAILURES.ordinal())\n@@ -530,11 +544,11 @@ protected ConnectorObject getRemoteObject(final PropagationTask task, final Conn\n \n         ConnectorObject obj = null;\n         try {\n-            obj = connector.getObject(task.getPropagationMode(),\n-                    task.getPropagationOperation(),\n+            obj = connector.getObject(\n+                    task.getOperation(),\n                     new ObjectClass(task.getObjectClassName()),\n                     new Uid(connObjectKey),\n-                    connector.getOperationOptions(MappingUtils.getMappingItems(provision, MappingPurpose.PROPAGATION)));\n+                    connector.getOperationOptions(MappingUtils.getPropagationMappingItems(provision)));\n         } catch (TimeoutException toe) {\n             LOG.debug(\"Request timeout\", toe);\n             throw toe;"},{"sha":"157fdc14ec59bc3adb99409f1794f9cc4f0142ef","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/DefaultPropagationActions.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationActions.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -24,7 +24,7 @@\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n \n /**\n- * Default (empty) implementation of PropagationActions.\n+ * Default (empty) implementation of {@link PropagationActions}.\n  */\n public abstract class DefaultPropagationActions implements PropagationActions {\n "},{"sha":"22feb44a3831053ea78f93fbdd00d70da944af58","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/DefaultPropagationReporter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationReporter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationReporter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationReporter.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -77,7 +77,7 @@ public void onPrimaryResourceFailure(final List<PropagationTask> tasks) {\n \n         for (PropagationTask propagationTask : tasks) {\n             if (!containsPropagationStatusTO(propagationTask.getResource().getKey())) {\n-                final PropagationStatus propagationStatusTO = new PropagationStatus();\n+                PropagationStatus propagationStatusTO = new PropagationStatus();\n                 propagationStatusTO.setResource(propagationTask.getResource().getKey());\n                 propagationStatusTO.setStatus(PropagationTaskExecStatus.FAILURE);\n                 propagationStatusTO.setFailureReason("},{"sha":"870be79e7efc7a372a4994cfa2b63b6f27bc0dc6","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/LDAPPasswordPropagationActions.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPPasswordPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPPasswordPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPPasswordPropagationActions.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -82,7 +82,7 @@ && cipherAlgorithmMatches(getCipherAlgorithm(connInstance), user.getCipherAlgori\n                     Attribute passwordAttribute = AttributeBuilder.buildPassword(\n                             new GuardedString(cipherPlusPassword.toCharArray()));\n \n-                    Set<Attribute> attributes = new HashSet<Attribute>(task.getAttributes());\n+                    Set<Attribute> attributes = new HashSet<>(task.getAttributes());\n                     attributes.add(passwordAttribute);\n                     attributes.remove(missing);\n "},{"sha":"a3c495157fe56e2bcfb325431357bdd915076931","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PriorityPropagationTaskExecutor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -64,7 +64,7 @@ public void execute(final Collection<PropagationTask> tasks, final PropagationRe\n                     LOG.error(\"Unexpected execution status found {}\", execution.getStatus());\n                     execStatus = PropagationTaskExecStatus.FAILURE;\n                 }\n-                if (task.getResource().isPropagationPrimary() && !execStatus.isSuccessful()) {\n+                if (task.getResource().isPropagationPrimary() && execStatus != PropagationTaskExecStatus.SUCCESS) {\n                     result = Result.FAILURE;\n                     throw new PropagationException(task.getResource().getKey(), execution.getMessage());\n                 }"},{"sha":"ebf9c99fbd5d7bb97f3f7fe8fb42802f81ef6d78","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PropagationManagerImpl.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -34,7 +34,6 @@\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.common.lib.types.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n@@ -106,6 +105,9 @@ public class PropagationManagerImpl implements PropagationManager {\n     @Autowired\n     protected VirAttrHandler virAttrHandler;\n \n+    @Autowired\n+    protected MappingUtils mappingUtils;\n+\n     protected Any<?, ?, ?> find(final AnyTypeKind kind, final Long key) {\n         AnyDAO<? extends Any<?, ?, ?>> dao;\n         switch (kind) {\n@@ -367,7 +369,7 @@ protected List<PropagationTask> createTasks(final Any<?, ?, ?> any,\n                 } else if (provision == null) {\n                     LOG.error(\"No provision specified on resource {} for type {}, ignoring...\",\n                             resource, any.getType());\n-                } else if (MappingUtils.getMappingItems(provision, MappingPurpose.PROPAGATION).isEmpty()) {\n+                } else if (MappingUtils.getPropagationMappingItems(provision).isEmpty()) {\n                     LOG.warn(\"Requesting propagation for {} but no propagation mapping provided for {}\",\n                             any.getType(), resource);\n                 } else {\n@@ -379,19 +381,18 @@ protected List<PropagationTask> createTasks(final Any<?, ?, ?> any,\n                     if (!deleteOnResource) {\n                         task.setAnyKey(any.getKey());\n                     }\n-                    task.setPropagationOperation(operation);\n-                    task.setPropagationMode(resource.getPropagationMode());\n+                    task.setOperation(operation);\n                     task.setOldConnObjectKey(propByRes.getOldConnObjectKey(resource.getKey()));\n \n-                    Pair<String, Set<Attribute>> preparedAttrs = MappingUtils.prepareAttrs(\n+                    Pair<String, Set<Attribute>> preparedAttrs = mappingUtils.prepareAttrs(\n                             any, password, changePwd, vAttrs, enable, provision);\n                     task.setConnObjectKey(preparedAttrs.getKey());\n \n                     // Check if any of mandatory attributes (in the mapping) is missing or not received any value: \n                     // if so, add special attributes that will be evaluated by PropagationTaskExecutor\n                     List<String> mandatoryMissing = new ArrayList<>();\n                     List<String> mandatoryNullOrEmpty = new ArrayList<>();\n-                    for (MappingItem item : MappingUtils.getMappingItems(provision, MappingPurpose.PROPAGATION)) {\n+                    for (MappingItem item : MappingUtils.getPropagationMappingItems(provision)) {\n                         if (!item.isConnObjectKey()\n                                 && JexlUtils.evaluateMandatoryCondition(item.getMandatoryCondition(), any)) {\n "},{"sha":"94936eb2a09a0cc48156aa136367907f3a318a27","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/AbstractPushResultHandler.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractPushResultHandler.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -58,12 +58,16 @@\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.identityconnectors.framework.common.objects.Uid;\n import org.quartz.JobExecutionException;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Propagation;\n import org.springframework.transaction.annotation.Transactional;\n \n public abstract class AbstractPushResultHandler extends AbstractSyncopeResultHandler<PushTask, PushActions>\n         implements SyncopePushResultHandler {\n \n+    @Autowired\n+    protected MappingUtils mappingUtils;\n+\n     protected abstract String getName(Any<?, ?, ?> any);\n \n     protected void deprovision(final Any<?, ?, ?> any) {\n@@ -195,7 +199,7 @@ protected final void doHandle(final Any<?, ?, ?> any) throws JobExecutionExcepti\n \n         // Try to read remote object BEFORE any actual operation\n         Provision provision = profile.getTask().getResource().getProvision(any.getType());\n-        String connObjecKey = MappingUtils.getConnObjectKeyValue(any, provision);\n+        String connObjecKey = mappingUtils.getConnObjectKeyValue(any, provision);\n \n         ConnectorObject beforeObj = getRemoteObject(connObjecKey, provision.getObjectClass());\n "},{"sha":"2ca7eaa66ce4ae741dabd18eabd784875abdfe58","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/AbstractSyncResultHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncResultHandler.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -201,7 +201,7 @@ protected List<ProvisioningResult> provision(\n             create(anyTO, actionedDelta, UnmatchingRule.toEventName(UnmatchingRule.PROVISION), result);\n         }\n \n-        return Collections.<ProvisioningResult>singletonList(result);\n+        return Collections.singletonList(result);\n     }\n \n     private void create("},{"sha":"1ed0d2c4804269e063c1d3875c184ae0a7415134","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/PlainAttrsSyncCorrelationRule.java","status":"modified","additions":23,"deletions":18,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FPlainAttrsSyncCorrelationRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FPlainAttrsSyncCorrelationRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FPlainAttrsSyncCorrelationRule.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -18,17 +18,19 @@\n  */\n package org.apache.syncope.core.provisioning.java.sync;\n \n+import static org.apache.syncope.core.misc.MappingUtils.getMappingItemTransformers;\n+\n import java.util.Arrays;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.core.misc.MappingUtils;\n import org.apache.syncope.core.persistence.api.dao.search.AnyCond;\n import org.apache.syncope.core.persistence.api.dao.search.AttributeCond;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n+import org.apache.syncope.core.provisioning.api.data.MappingItemTransformer;\n import org.apache.syncope.core.provisioning.api.sync.SyncCorrelationRule;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n@@ -46,41 +48,44 @@ public PlainAttrsSyncCorrelationRule(final String[] plainSchemaNames, final Prov\n \n     @Override\n     public SearchCond getSearchCond(final ConnectorObject connObj) {\n-        // search for external attribute's name/value of each specified name\n-        Map<String, Attribute> extValues = new HashMap<>();\n-\n-        for (MappingItem item : MappingUtils.getMappingItems(provision, MappingPurpose.SYNCHRONIZATION)) {\n-            extValues.put(item.getIntAttrName(), connObj.getAttributeByName(item.getExtAttrName()));\n+        Map<String, MappingItem> mappingItems = new HashMap<>();\n+        for (MappingItem item : MappingUtils.getSyncMappingItems(provision)) {\n+            mappingItems.put(item.getIntAttrName(), item);\n         }\n \n-        // search for user/group by attribute(s) specified in the policy\n+        // search for anys by attribute(s) specified in the policy\n         SearchCond searchCond = null;\n \n         for (String schema : plainSchemaNames) {\n-            Attribute value = extValues.get(schema);\n-\n-            if (value == null) {\n+            Attribute attr = mappingItems.get(schema) == null\n+                    ? null\n+                    : connObj.getAttributeByName(mappingItems.get(schema).getExtAttrName());\n+            if (attr == null) {\n                 throw new IllegalArgumentException(\n                         \"Connector object does not contains the attributes to perform the search: \" + schema);\n             }\n \n+            List<Object> values = attr.getValue();\n+            for (MappingItemTransformer transformer : getMappingItemTransformers(mappingItems.get(schema))) {\n+                values = transformer.beforeSync(values);\n+            }\n+\n             AttributeCond.Type type;\n             String expression = null;\n \n-            if (value.getValue() == null || value.getValue().isEmpty()\n-                    || (value.getValue().size() == 1 && value.getValue().get(0) == null)) {\n-\n+            if (values == null || values.isEmpty() || (values.size() == 1 && values.get(0) == null)) {\n                 type = AttributeCond.Type.ISNULL;\n             } else {\n                 type = AttributeCond.Type.EQ;\n-                expression = value.getValue().size() > 1\n-                        ? value.getValue().toString()\n-                        : value.getValue().get(0).toString();\n+                expression = values.size() > 1\n+                        ? values.toString()\n+                        : values.get(0).toString();\n             }\n \n             SearchCond nodeCond;\n-            // users: just id or username can be selected to be used\n-            // groups: just id or name can be selected to be used\n+            // users: just key or username can be selected\n+            // groups: just key or name can be selected\n+            // any objects: just key can be selected\n             if (\"key\".equalsIgnoreCase(schema)\n                     || \"username\".equalsIgnoreCase(schema) || \"name\".equalsIgnoreCase(schema)) {\n "},{"sha":"0c01254ae33844026ce3d6f7b733396eaad5075a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/SyncUtils.java","status":"modified","additions":23,"deletions":14,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncUtils.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -24,7 +24,6 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.common.lib.policy.SyncPolicySpec;\n import org.apache.syncope.core.misc.MappingUtils;\n import org.apache.syncope.core.misc.serialization.POJOHelper;\n@@ -49,6 +48,7 @@\n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.Connector;\n+import org.apache.syncope.core.provisioning.api.data.MappingItemTransformer;\n import org.apache.syncope.core.provisioning.api.sync.SyncCorrelationRule;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeUtil;\n@@ -128,7 +128,7 @@ public boolean handle(final ConnectorObject obj) {\n                         return found.add(obj);\n                     }\n                 },\n-                connector.getOperationOptions(MappingUtils.getMappingItems(provision, MappingPurpose.SYNCHRONIZATION)));\n+                connector.getOperationOptions(MappingUtils.getSyncMappingItems(provision)));\n \n         if (found.isEmpty()) {\n             LOG.debug(\"No {} found on {} with __NAME__ {}\", provision.getObjectClass(), resource, name);\n@@ -172,6 +172,15 @@ private List<Long> findByConnObjectKeyItem(\n         List<Long> result = new ArrayList<>();\n \n         MappingItem connObjectKeyItem = MappingUtils.getConnObjectKeyItem(provision);\n+\n+        String transfUid = uid;\n+        for (MappingItemTransformer transformer : MappingUtils.getMappingItemTransformers(connObjectKeyItem)) {\n+            List<Object> output = transformer.beforeSync(Collections.<Object>singletonList(transfUid));\n+            if (output != null && !output.isEmpty()) {\n+                transfUid = output.get(0).toString();\n+            }\n+        }\n+\n         switch (connObjectKeyItem.getIntMappingType()) {\n             case UserPlainSchema:\n             case GroupPlainSchema:\n@@ -180,13 +189,13 @@ private List<Long> findByConnObjectKeyItem(\n \n                 PlainSchema schema = plainSchemaDAO.find(connObjectKeyItem.getIntAttrName());\n                 if (schema == null) {\n-                    value.setStringValue(uid);\n+                    value.setStringValue(transfUid);\n                 } else {\n                     try {\n-                        value.parseValue(schema, uid);\n+                        value.parseValue(schema, transfUid);\n                     } catch (ParsingValidationException e) {\n-                        LOG.error(\"While parsing provided __UID__ {}\", uid, e);\n-                        value.setStringValue(uid);\n+                        LOG.error(\"While parsing provided __UID__ {}\", transfUid, e);\n+                        value.setStringValue(transfUid);\n                     }\n                 }\n \n@@ -200,7 +209,7 @@ private List<Long> findByConnObjectKeyItem(\n             case UserDerivedSchema:\n             case GroupDerivedSchema:\n             case AnyObjectDerivedSchema:\n-                anys = getAnyDAO(connObjectKeyItem).findByDerAttrValue(connObjectKeyItem.getIntAttrName(), uid);\n+                anys = getAnyDAO(connObjectKeyItem).findByDerAttrValue(connObjectKeyItem.getIntAttrName(), transfUid);\n                 for (Any<?, ?, ?> any : anys) {\n                     result.add(any.getKey());\n                 }\n@@ -209,21 +218,21 @@ private List<Long> findByConnObjectKeyItem(\n             case UserKey:\n             case GroupKey:\n             case AnyObjectKey:\n-                Any<?, ?, ?> any = getAnyDAO(connObjectKeyItem).find(Long.parseLong(uid));\n+                Any<?, ?, ?> any = getAnyDAO(connObjectKeyItem).find(Long.parseLong(transfUid));\n                 if (any != null) {\n                     result.add(any.getKey());\n                 }\n                 break;\n \n             case Username:\n-                User user = userDAO.find(uid);\n+                User user = userDAO.find(transfUid);\n                 if (user != null) {\n                     result.add(user.getKey());\n                 }\n                 break;\n \n             case GroupName:\n-                Group group = groupDAO.find(uid);\n+                Group group = groupDAO.find(transfUid);\n                 if (group != null) {\n                     result.add(group.getKey());\n                 }\n@@ -240,12 +249,12 @@ private List<Long> findByCorrelationRule(\n             final ConnectorObject connObj, final SyncCorrelationRule rule, final AnyTypeKind type) {\n \n         List<Long> result = new ArrayList<>();\n-\n-        List<Any<?, ?, ?>> anys = searchDAO.search(\n+        for (Any<?, ?, ?> any : searchDAO.search(\n                 SyncopeConstants.FULL_ADMIN_REALMS,\n                 rule.getSearchCond(connObj),\n-                Collections.<OrderByClause>emptyList(), type);\n-        for (Any<?, ?, ?> any : anys) {\n+                Collections.<OrderByClause>emptyList(),\n+                type)) {\n+\n             result.add(any.getKey());\n         }\n "},{"sha":"061b17a4a30ffbf7a5e3b8f955670e529fc819ae","filename":"core/provisioning-java/src/test/java/org/apache/syncope/core/provisioning/java/ResourceDataBinderTest.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FResourceDataBinderTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FResourceDataBinderTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FResourceDataBinderTest.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -30,7 +30,6 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.IntMappingType;\n import org.apache.syncope.common.lib.types.MappingPurpose;\n-import org.apache.syncope.common.lib.types.PropagationMode;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n@@ -78,7 +77,6 @@ public void issue42() {\n         ResourceTO resourceTO = new ResourceTO();\n         resourceTO.setKey(\"resource-issue42\");\n         resourceTO.setConnector(100L);\n-        resourceTO.setPropagationMode(PropagationMode.ONE_PHASE);\n         resourceTO.setEnforceMandatoryCondition(true);\n \n         ProvisionTO provisionTO = new ProvisionTO();"},{"sha":"642ffe04fa3764dc9ec62a5c7c8339040d451267","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ReportServiceImpl.java","status":"modified","additions":2,"deletions":11,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FReportServiceImpl.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -25,14 +25,12 @@\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.StreamingOutput;\n-import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.ReportExecTO;\n import org.apache.syncope.common.lib.to.ReportTO;\n import org.apache.syncope.common.lib.types.JobAction;\n import org.apache.syncope.common.lib.types.JobStatusType;\n import org.apache.syncope.common.lib.types.ReportExecExportFormat;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n-import org.apache.syncope.common.rest.api.beans.ListQuery;\n import org.apache.syncope.common.rest.api.service.ReportService;\n import org.apache.syncope.core.logic.ReportLogic;\n import org.apache.syncope.core.persistence.api.entity.ReportExec;\n@@ -60,15 +58,8 @@ public void update(final ReportTO reportTO) {\n     }\n \n     @Override\n-    public PagedResult<ReportTO> list(final ListQuery listQuery) {\n-        return buildPagedResult(\n-                logic.list(\n-                        listQuery.getPage(),\n-                        listQuery.getSize(),\n-                        getOrderByClauses(listQuery.getOrderBy())),\n-                listQuery.getPage(),\n-                listQuery.getSize(),\n-                logic.count());\n+    public List<ReportTO> list() {\n+        return logic.list();\n     }\n \n     @Override"},{"sha":"5da1042ebc3f8a8bca28c6d85c059e6a36eb3ae3","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/TaskServiceImpl.java","status":"modified","additions":16,"deletions":18,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FTaskServiceImpl.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -27,16 +27,14 @@\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.PushTaskTO;\n-import org.apache.syncope.common.lib.to.ReportExecTO;\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n import org.apache.syncope.common.lib.to.SyncTaskTO;\n import org.apache.syncope.common.lib.to.TaskExecTO;\n import org.apache.syncope.common.lib.types.JobAction;\n import org.apache.syncope.common.lib.types.JobStatusType;\n-import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n-import org.apache.syncope.common.rest.api.beans.ListQuery;\n+import org.apache.syncope.common.rest.api.beans.TaskQuery;\n import org.apache.syncope.common.rest.api.service.TaskService;\n import org.apache.syncope.core.logic.TaskLogic;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -80,16 +78,23 @@ public TaskExecTO execute(final Long key, final boolean dryRun) {\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public <T extends AbstractTaskTO> PagedResult<T> list(final TaskType taskType, final ListQuery listQuery) {\n+    public <T extends AbstractTaskTO> PagedResult<T> list(final TaskType type, final TaskQuery query) {\n         return (PagedResult<T>) buildPagedResult(\n                 logic.list(\n-                        taskType,\n-                        listQuery.getPage(),\n-                        listQuery.getSize(),\n-                        getOrderByClauses(listQuery.getOrderBy())),\n-                listQuery.getPage(),\n-                listQuery.getSize(),\n-                logic.count(taskType));\n+                        type,\n+                        query.getResource(),\n+                        query.getAnyTypeKind(),\n+                        query.getAnyTypeKey(),\n+                        query.getPage(),\n+                        query.getSize(),\n+                        getOrderByClauses(query.getOrderBy())),\n+                query.getPage(),\n+                query.getSize(),\n+                logic.count(\n+                        type,\n+                        query.getResource(),\n+                        query.getAnyTypeKind(),\n+                        query.getAnyTypeKey()));\n     }\n \n     @Override\n@@ -102,13 +107,6 @@ public TaskExecTO readExecution(final Long executionKey) {\n         return logic.readExecution(executionKey);\n     }\n \n-    @Override\n-    public void report(final Long executionKey, final ReportExecTO reportExec) {\n-        reportExec.setKey(executionKey);\n-        logic.report(\n-                executionKey, PropagationTaskExecStatus.fromString(reportExec.getStatus()), reportExec.getMessage());\n-    }\n-\n     @Override\n     public void update(final AbstractTaskTO taskTO) {\n         if (taskTO instanceof SyncTaskTO) {"},{"sha":"b855c416d5dbc4eddc9125908b01edb327ef3c80","filename":"deb/pom.xml","status":"modified","additions":22,"deletions":5,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/deb%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/deb%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/deb%2Fpom.xml?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -44,6 +44,11 @@ under the License.\n     <log.directory>/var/log/apache-syncope</log.directory>\n   </properties>\n \n+  <modules>\n+    <module>core</module>\n+    <module>console</module>\n+  </modules>\n+\n   <profiles>\n     <profile>\n       <id>apache-release</id>\n@@ -60,11 +65,23 @@ under the License.\n         </plugins>\n       </build>\n     </profile>\n-  </profiles>\n \n-  <modules>\n-    <module>core</module>\n-    <module>console</module>\n-  </modules>\n+    <profile>\n+      <id>doc</id>\n \n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.asciidoctor</groupId>\n+            <artifactId>asciidoctor-maven-plugin</artifactId>\n+            <inherited>false</inherited>\n+            <configuration>\n+              <skip>true</skip>\n+            </configuration>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+  </profiles>\n+  \n </project>"},{"sha":"d4423ced49bf75c0bcf3618830047edb8284f9ad","filename":"ext/pom.xml","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/ext%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/ext%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fpom.xml?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -37,6 +37,25 @@ under the License.\n     <rootpom.basedir>${basedir}/..</rootpom.basedir>\n   </properties>\n \n+  <profiles>\n+    <profile>\n+      <id>doc</id>\n+\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.asciidoctor</groupId>\n+            <artifactId>asciidoctor-maven-plugin</artifactId>\n+            <inherited>false</inherited>\n+            <configuration>\n+              <skip>true</skip>\n+            </configuration>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+  </profiles>\n+  \n   <modules>\n     <module>camel</module>\n   </modules>"},{"sha":"c620541b67369f18f3299b1ee53b6b29b73c1852","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/PrefixMappingItemTransformer.java","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPrefixMappingItemTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPrefixMappingItemTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPrefixMappingItemTransformer.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.core.reference;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n+import org.apache.syncope.core.provisioning.java.data.DefaultMappingItemTransformer;\n+\n+public class PrefixMappingItemTransformer extends DefaultMappingItemTransformer {\n+\n+    public static final String PREFIX = \"PREFIX_\";\n+\n+    @Override\n+    public List<PlainAttrValue> beforePropagation(final List<PlainAttrValue> values) {\n+        if (values == null || values.isEmpty() || values.get(0).getStringValue() == null) {\n+            return super.beforePropagation(values);\n+        } else {\n+            String value = values.get(0).getStringValue();\n+            values.get(0).setStringValue(PREFIX + value);\n+\n+            return values;\n+        }\n+    }\n+\n+    @Override\n+    public List<Object> beforeSync(final List<Object> values) {\n+        if (values == null || values.isEmpty() || values.get(0) == null) {\n+            return super.beforeSync(values);\n+        } else {\n+            List<Object> newValues = new ArrayList<>(values);\n+            newValues.set(0, StringUtils.substringAfter(values.get(0).toString(), PREFIX));\n+\n+            return newValues;\n+        }\n+    }\n+\n+}"},{"sha":"c118224747c3f602a2eef7f693ca773b1526f7bf","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/AbstractTaskITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FAbstractTaskITCase.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -166,7 +166,7 @@ protected Map<Long, TaskExecTO> execProvisioningTasks(final TaskService taskServ\n \n     protected NotificationTaskTO findNotificationTaskBySender(final String sender) {\n         PagedResult<NotificationTaskTO> tasks =\n-                taskService.list(TaskType.NOTIFICATION, SyncopeClient.getListQueryBuilder().build());\n+                taskService.list(TaskType.NOTIFICATION, SyncopeClient.getTaskQueryBuilder().build());\n         assertNotNull(tasks);\n         assertFalse(tasks.getResult().isEmpty());\n "},{"sha":"cc979367bd0d6726cb90bc22f4bff0fcbfaac12b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/ConnectorITCase.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FConnectorITCase.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -149,9 +149,8 @@ public void create() {\n         connectorTO.getConfiguration().addAll(conf);\n \n         // set connector capabilities\n-        connectorTO.getCapabilities().add(ConnectorCapability.TWO_PHASES_CREATE);\n-        connectorTO.getCapabilities().add(ConnectorCapability.ONE_PHASE_CREATE);\n-        connectorTO.getCapabilities().add(ConnectorCapability.TWO_PHASES_UPDATE);\n+        connectorTO.getCapabilities().add(ConnectorCapability.CREATE);\n+        connectorTO.getCapabilities().add(ConnectorCapability.UPDATE);\n \n         // set connector pool conf\n         ConnPoolConfTO cpc = new ConnPoolConfTO();\n@@ -180,7 +179,7 @@ public void create() {\n         Throwable t = null;\n \n         // check update\n-        actual.getCapabilities().remove(ConnectorCapability.TWO_PHASES_UPDATE);\n+        actual.getCapabilities().remove(ConnectorCapability.UPDATE);\n         actual.getPoolConf().setMaxObjects(null);\n \n         try {\n@@ -193,8 +192,7 @@ public void create() {\n \n         assertNull(t);\n         assertNotNull(actual);\n-        assertEquals(EnumSet.of(ConnectorCapability.ONE_PHASE_CREATE, ConnectorCapability.TWO_PHASES_CREATE),\n-                actual.getCapabilities());\n+        assertEquals(EnumSet.of(ConnectorCapability.CREATE), actual.getCapabilities());\n         assertEquals(10, actual.getPoolConf().getMaxObjects(), 0);\n \n         // check also for the deletion of the created object"},{"sha":"c1ce3b0e27d6d8dd69f55e1abc760398293cb0be","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/MultitenancyITCase.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FMultitenancyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FMultitenancyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FMultitenancyITCase.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -21,7 +21,6 @@\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n-import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n import java.security.AccessControlException;\n@@ -202,7 +201,7 @@ public void createResourceAndSync() {\n         // verify execution status\n         String status = execution.getStatus();\n         assertNotNull(status);\n-        assertTrue(PropagationTaskExecStatus.valueOf(status).isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(status));\n \n         // verify that synchronized user is found\n         PagedResult<UserTO> matchingUsers = adminClient.getService(UserService.class).search("},{"sha":"4115bfa33883bfb193830d84f74b1f5b464341e3","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/PropagationTaskITCase.java","status":"modified","additions":6,"deletions":38,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPropagationTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPropagationTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPropagationTaskITCase.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -25,17 +25,13 @@\n \n import java.util.ArrayList;\n import java.util.List;\n-import javax.ws.rs.core.Response;\n import org.apache.syncope.client.lib.SyncopeClient;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n import org.apache.syncope.common.lib.to.BulkAction;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n-import org.apache.syncope.common.lib.to.ReportExecTO;\n import org.apache.syncope.common.lib.to.TaskExecTO;\n import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n@@ -48,7 +44,7 @@ public class PropagationTaskITCase extends AbstractTaskITCase {\n     public void paginatedList() {\n         PagedResult<PropagationTaskTO> tasks = taskService.list(\n                 TaskType.PROPAGATION,\n-                SyncopeClient.getListQueryBuilder().page(1).size(2).build());\n+                SyncopeClient.getTaskQueryBuilder().page(1).size(2).build());\n         assertNotNull(tasks);\n         assertEquals(2, tasks.getResult().size());\n \n@@ -58,7 +54,7 @@ public void paginatedList() {\n \n         tasks = taskService.list(\n                 TaskType.PROPAGATION,\n-                SyncopeClient.getListQueryBuilder().page(2).size(2).build());\n+                SyncopeClient.getTaskQueryBuilder().page(2).size(2).build());\n         assertNotNull(tasks);\n         assertEquals(2, tasks.getPage());\n         assertEquals(2, tasks.getResult().size());\n@@ -69,7 +65,7 @@ public void paginatedList() {\n \n         tasks = taskService.list(\n                 TaskType.PROPAGATION,\n-                SyncopeClient.getListQueryBuilder().page(1000).size(2).build());\n+                SyncopeClient.getTaskQueryBuilder().page(1000).size(2).build());\n         assertNotNull(tasks);\n         assertTrue(tasks.getResult().isEmpty());\n     }\n@@ -88,34 +84,6 @@ public void readExecution() {\n         assertNotNull(taskTO);\n     }\n \n-    @Test\n-    public void deal() {\n-        // Currently test is not re-runnable.\n-        // To successfully run test second time it is necessary to restart cargo\n-        try {\n-            taskService.delete(0L);\n-        } catch (SyncopeClientException e) {\n-            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n-        }\n-        TaskExecTO exec = taskService.execute(1L, false);\n-        assertEquals(PropagationTaskExecStatus.SUBMITTED.name(), exec.getStatus());\n-\n-        ReportExecTO report = new ReportExecTO();\n-        report.setStatus(PropagationTaskExecStatus.SUCCESS.name());\n-        report.setMessage(\"OK\");\n-        taskService.report(exec.getKey(), report);\n-        exec = taskService.readExecution(exec.getKey());\n-        assertEquals(PropagationTaskExecStatus.SUCCESS.name(), exec.getStatus());\n-        assertEquals(\"OK\", exec.getMessage());\n-\n-        taskService.delete(1L);\n-        try {\n-            taskService.readExecution(exec.getKey());\n-        } catch (SyncopeClientException e) {\n-            assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n-        }\n-    }\n-\n     @Test\n     public void issue196() {\n         TaskExecTO exec = taskService.execute(6L, false);\n@@ -127,15 +95,15 @@ public void issue196() {\n     @Test\n     public void bulkAction() {\n         PagedResult<PropagationTaskTO> before = taskService.list(\n-                TaskType.PROPAGATION, SyncopeClient.getListQueryBuilder().build());\n+                TaskType.PROPAGATION, SyncopeClient.getTaskQueryBuilder().build());\n \n         // create user with testdb resource\n         UserTO userTO = UserITCase.getUniqueSampleTO(\"taskBulk@apache.org\");\n         userTO.getResources().add(RESOURCE_NAME_TESTDB);\n         createUser(userTO);\n \n         List<PropagationTaskTO> after = new ArrayList<>(\n-                taskService.<PropagationTaskTO>list(TaskType.PROPAGATION, SyncopeClient.getListQueryBuilder().build()).\n+                taskService.<PropagationTaskTO>list(TaskType.PROPAGATION, SyncopeClient.getTaskQueryBuilder().build()).\n                 getResult());\n         after.removeAll(before.getResult());\n         assertFalse(after.isEmpty());\n@@ -149,7 +117,7 @@ public void bulkAction() {\n \n         taskService.bulk(bulkAction);\n \n-        assertFalse(taskService.list(TaskType.PROPAGATION, SyncopeClient.getListQueryBuilder().build()).getResult().\n+        assertFalse(taskService.list(TaskType.PROPAGATION, SyncopeClient.getTaskQueryBuilder().build()).getResult().\n                 containsAll(after));\n     }\n }"},{"sha":"d980345ef78ce94f0a1b6c0af607fbf82df68935","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/PushTaskITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPushTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPushTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPushTaskITCase.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -81,7 +81,7 @@ public void read() {\n     @Test\n     public void list() {\n         PagedResult<PushTaskTO> tasks = taskService.list(\n-                TaskType.PUSH, SyncopeClient.getListQueryBuilder().build());\n+                TaskType.PUSH, SyncopeClient.getTaskQueryBuilder().build());\n         assertFalse(tasks.getResult().isEmpty());\n         for (AbstractTaskTO task : tasks.getResult()) {\n             if (!(task instanceof PushTaskTO)) {\n@@ -326,7 +326,7 @@ public void issueSYNCOPE598() {\n \n             // execute the new task\n             TaskExecTO pushExec = execProvisioningTask(taskService, push.getKey(), 50, false);\n-            assertTrue(PropagationTaskExecStatus.valueOf(pushExec.getStatus()).isSuccessful());\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(pushExec.getStatus()));\n         } finally {\n             groupService.delete(groupTO.getKey());\n             if (newResourceTO != null) {"},{"sha":"49c24e70bbd91a5fced0df15ea47993ac4de9865","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/ReportITCase.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FReportITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FReportITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FReportITCase.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -30,11 +30,9 @@\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.Response;\n import org.apache.commons.io.IOUtils;\n-import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.report.UserReportletConf;\n-import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.ReportExecTO;\n import org.apache.syncope.common.lib.to.ReportTO;\n import org.apache.syncope.common.lib.types.ReportExecExportFormat;\n@@ -62,10 +60,10 @@ public void getReportletClasses() {\n \n     @Test\n     public void list() {\n-        PagedResult<ReportTO> reports = reportService.list(SyncopeClient.getListQueryBuilder().build());\n+        List<ReportTO> reports = reportService.list();\n         assertNotNull(reports);\n-        assertFalse(reports.getResult().isEmpty());\n-        for (ReportTO report : reports.getResult()) {\n+        assertFalse(reports.isEmpty());\n+        for (ReportTO report : reports) {\n             assertNotNull(report);\n         }\n     }"},{"sha":"42493af4424d4ead7c6915c83fa39a2c7479e496","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/SchedTaskITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSchedTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSchedTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSchedTaskITCase.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -55,7 +55,7 @@ public void getJobClasses() {\n     @Test\n     public void list() {\n         PagedResult<SchedTaskTO> tasks =\n-                taskService.list(TaskType.SCHEDULED, SyncopeClient.getListQueryBuilder().build());\n+                taskService.list(TaskType.SCHEDULED, SyncopeClient.getTaskQueryBuilder().build());\n         assertFalse(tasks.getResult().isEmpty());\n         for (AbstractTaskTO task : tasks.getResult()) {\n             if (!(task instanceof SchedTaskTO) || task instanceof SyncTaskTO || task instanceof PushTaskTO) {"},{"sha":"75049da04384d681e8b53a3916863ecdfbf17477","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/SyncTaskITCase.java","status":"modified","additions":76,"deletions":51,"changes":127,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -32,6 +32,7 @@\n import javax.ws.rs.core.Response;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n@@ -49,6 +50,7 @@\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.policy.SyncPolicyTO;\n+import org.apache.syncope.common.lib.to.MappingItemTO;\n import org.apache.syncope.common.lib.to.SyncTaskTO;\n import org.apache.syncope.common.lib.to.TaskExecTO;\n import org.apache.syncope.common.lib.to.UserTO;\n@@ -90,7 +92,7 @@ public void getSyncActionsClasses() {\n     @Test\n     public void list() {\n         PagedResult<SyncTaskTO> tasks =\n-                taskService.list(TaskType.SYNCHRONIZATION, SyncopeClient.getListQueryBuilder().build());\n+                taskService.list(TaskType.SYNCHRONIZATION, SyncopeClient.getTaskQueryBuilder().build());\n         assertFalse(tasks.getResult().isEmpty());\n         for (AbstractTaskTO task : tasks.getResult()) {\n             if (!(task instanceof SyncTaskTO)) {\n@@ -253,7 +255,7 @@ public void reconcileFromDB() {\n         // update sync task\n         TaskExecTO execution = execProvisioningTask(taskService, 7L, 50, false);\n         assertNotNull(execution.getStatus());\n-        assertTrue(PropagationTaskExecStatus.valueOf(execution.getStatus()).isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n         UserTO userTO = readUser(\"testuser1\");\n         assertNotNull(userTO);\n@@ -267,7 +269,7 @@ public void reconcileFromDB() {\n         // re-execute the same SyncTask: now user must be active\n         execution = execProvisioningTask(taskService, 7L, 50, false);\n         assertNotNull(execution.getStatus());\n-        assertTrue(PropagationTaskExecStatus.valueOf(execution.getStatus()).isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n         userTO = readUser(\"testuser1\");\n         assertNotNull(userTO);\n@@ -317,9 +319,7 @@ public void reconcileFromLDAP() {\n         TaskExecTO execution = execProvisioningTask(taskService, 11L, 50, false);\n \n         // 1. verify execution status\n-        String status = execution.getStatus();\n-        assertNotNull(status);\n-        assertTrue(PropagationTaskExecStatus.valueOf(status).isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n         // 2. verify that synchronized group is found\n         PagedResult<GroupTO> matchingGroups = groupService.search(\n@@ -358,47 +358,78 @@ public void reconcileFromLDAP() {\n \n     @Test\n     public void reconcileFromScriptedSQL() {\n-        // 0. reset sync token\n+        // 0. reset sync token and set MappingItemTransformer\n         ResourceTO resource = resourceService.read(RESOURCE_NAME_DBSCRIPTED);\n+        ResourceTO originalResource = SerializationUtils.clone(resource);\n         ProvisionTO provision = resource.getProvision(\"PRINTER\");\n         assertNotNull(provision);\n \n-        provision.setSyncToken(null);\n-        resourceService.update(resource);\n-\n-        // 1. create printer on external resource\n-        AnyObjectTO anyObjectTO = AnyObjectITCase.getSampleTO(\"sync\");\n-        anyObjectTO = createAnyObject(anyObjectTO);\n-        assertNotNull(anyObjectTO);\n-\n-        // 2. unlink any existing printer and delete from Syncope (printer is now only on external resource)\n-        PagedResult<AnyObjectTO> matchingPrinters = anyObjectService.search(\n-                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n-                fiql(SyncopeClient.getAnyObjectSearchConditionBuilder().type(\"PRINTER\").and().\n-                        is(\"location\").equalTo(\"sync*\").query()).build());\n-        assertTrue(matchingPrinters.getSize() > 0);\n-        for (AnyObjectTO printer : matchingPrinters.getResult()) {\n-            DeassociationPatch deassociationPatch = new DeassociationPatch();\n-            deassociationPatch.setKey(printer.getKey());\n-            deassociationPatch.setAction(ResourceDeassociationAction.UNLINK);\n-            deassociationPatch.getResources().add(RESOURCE_NAME_DBSCRIPTED);\n-            anyObjectService.deassociate(deassociationPatch);\n-            anyObjectService.delete(printer.getKey());\n-        }\n+        try {\n+            provision.setSyncToken(null);\n+\n+            MappingItemTO mappingItem = CollectionUtils.find(\n+                    provision.getMapping().getItems(), new Predicate<MappingItemTO>() {\n+\n+                        @Override\n+                        public boolean evaluate(final MappingItemTO object) {\n+                            return \"location\".equals(object.getIntAttrName());\n+                        }\n+                    });\n+            assertNotNull(mappingItem);\n+            mappingItem.getMappingItemTransformerClassNames().clear();\n+            mappingItem.getMappingItemTransformerClassNames().add(PrefixMappingItemTransformer.class.getName());\n+\n+            resourceService.update(resource);\n+\n+            // 1. create printer on external resource\n+            AnyObjectTO anyObjectTO = AnyObjectITCase.getSampleTO(\"sync\");\n+            String originalLocation = anyObjectTO.getPlainAttrMap().get(\"location\").getValues().get(0);\n+            assertFalse(originalLocation.startsWith(PrefixMappingItemTransformer.PREFIX));\n+\n+            anyObjectTO = createAnyObject(anyObjectTO);\n+            assertNotNull(anyObjectTO);\n+\n+            // 2. verify that PrefixMappingItemTransformer was applied during propagation\n+            // (location starts with given prefix on external resource)\n+            ConnObjectTO connObjectTO = resourceService.\n+                    readConnObject(RESOURCE_NAME_DBSCRIPTED, anyObjectTO.getType(), anyObjectTO.getKey());\n+            assertFalse(anyObjectTO.getPlainAttrMap().get(\"location\").getValues().get(0).\n+                    startsWith(PrefixMappingItemTransformer.PREFIX));\n+            assertTrue(connObjectTO.getPlainAttrMap().get(\"location\").getValues().get(0).\n+                    startsWith(PrefixMappingItemTransformer.PREFIX));\n+\n+            // 3. unlink any existing printer and delete from Syncope (printer is now only on external resource)\n+            PagedResult<AnyObjectTO> matchingPrinters = anyObjectService.search(\n+                    SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                    fiql(SyncopeClient.getAnyObjectSearchConditionBuilder().type(\"PRINTER\").and().\n+                            is(\"location\").equalTo(\"sync*\").query()).build());\n+            assertTrue(matchingPrinters.getSize() > 0);\n+            for (AnyObjectTO printer : matchingPrinters.getResult()) {\n+                DeassociationPatch deassociationPatch = new DeassociationPatch();\n+                deassociationPatch.setKey(printer.getKey());\n+                deassociationPatch.setAction(ResourceDeassociationAction.UNLINK);\n+                deassociationPatch.getResources().add(RESOURCE_NAME_DBSCRIPTED);\n+                anyObjectService.deassociate(deassociationPatch);\n+                anyObjectService.delete(printer.getKey());\n+            }\n \n-        // 3. synchronize\n-        execProvisioningTask(taskService, 28L, 50, false);\n+            // 4. synchronize\n+            execProvisioningTask(taskService, 28L, 50, false);\n \n-        // 4. verify that printer was re-created in Syncope\n-        matchingPrinters = anyObjectService.search(\n-                SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n-                fiql(SyncopeClient.getAnyObjectSearchConditionBuilder().type(\"PRINTER\").and().\n-                        is(\"location\").equalTo(\"sync*\").query()).build());\n-        assertTrue(matchingPrinters.getSize() > 0);\n+            // 5. verify that printer was re-created in Syncope (implies that location does not start with given prefix,\n+            // hence PrefixMappingItemTransformer was applied during sync)\n+            matchingPrinters = anyObjectService.search(\n+                    SyncopeClient.getAnySearchQueryBuilder().realm(SyncopeConstants.ROOT_REALM).\n+                    fiql(SyncopeClient.getAnyObjectSearchConditionBuilder().type(\"PRINTER\").and().\n+                            is(\"location\").equalTo(\"sync*\").query()).build());\n+            assertTrue(matchingPrinters.getSize() > 0);\n \n-        // 5. verify that synctoken was updated\n-        assertNotNull(\n-                resourceService.read(RESOURCE_NAME_DBSCRIPTED).getProvision(anyObjectTO.getType()).getSyncToken());\n+            // 6. verify that synctoken was updated\n+            assertNotNull(\n+                    resourceService.read(RESOURCE_NAME_DBSCRIPTED).getProvision(anyObjectTO.getType()).getSyncToken());\n+        } finally {\n+            resourceService.update(originalResource);\n+        }\n     }\n \n     @Test\n@@ -455,9 +486,7 @@ public void issueSYNCOPE68() {\n             assertFalse(((UserTO) actual.getTemplates().get(AnyTypeKind.USER.name())).getMemberships().isEmpty());\n \n             TaskExecTO execution = execProvisioningTask(taskService, actual.getKey(), 50, false);\n-            final String status = execution.getStatus();\n-            assertNotNull(status);\n-            assertTrue(PropagationTaskExecStatus.valueOf(status).isSuccessful());\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n             userTO = readUser(\"testuser2\");\n             assertNotNull(userTO);\n@@ -560,12 +589,12 @@ public void issueSYNCOPE272() {\n         try {\n             assertNotNull(userTO);\n             assertEquals(1, userTO.getPropagationStatusTOs().size());\n-            assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n             TaskExecTO taskExecTO = execProvisioningTask(taskService, 24L, 50, false);\n \n             assertNotNull(taskExecTO.getStatus());\n-            assertTrue(PropagationTaskExecStatus.valueOf(taskExecTO.getStatus()).isSuccessful());\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(taskExecTO.getStatus()));\n \n             userTO = userService.read(userTO.getKey());\n             assertNotNull(userTO);\n@@ -669,9 +698,7 @@ public void issueSYNCOPE313DB() throws Exception {\n         assertEquals(actual.getJobDelegateClassName(), syncTask.getJobDelegateClassName());\n \n         TaskExecTO execution = execProvisioningTask(taskService, syncTask.getKey(), 50, false);\n-        final String status = execution.getStatus();\n-        assertNotNull(status);\n-        assertTrue(PropagationTaskExecStatus.valueOf(status).isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n         // 5. Test the sync'd user\n         UserTO updatedUser = userService.read(user.getKey());\n@@ -743,9 +770,7 @@ public void issueSYNCOPE313LDAP() throws Exception {\n         assertEquals(actual.getJobDelegateClassName(), syncTask.getJobDelegateClassName());\n \n         TaskExecTO execution = execProvisioningTask(taskService, syncTask.getKey(), 50, false);\n-        String status = execution.getStatus();\n-        assertNotNull(status);\n-        assertTrue(PropagationTaskExecStatus.valueOf(status).isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n         // 7. Test the sync'd user\n         String syncedPassword = Encryptor.getInstance().encode(\"security123\", CipherAlgorithm.SHA1);"},{"sha":"283f5326221a8d424380c29ad3acbe2cc2b35fb0","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/UserITCase.java","status":"modified","additions":26,"deletions":31,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FUserITCase.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -146,7 +146,7 @@ public void createUserWithNoPropagation() {\n         // get task list\n         PagedResult<PropagationTaskTO> tasks = taskService.list(\n                 TaskType.PROPAGATION,\n-                SyncopeClient.getListQueryBuilder().page(1).size(1).build());\n+                SyncopeClient.getTaskQueryBuilder().page(1).size(1).build());\n         assertNotNull(tasks);\n         assertFalse(tasks.getResult().isEmpty());\n \n@@ -163,7 +163,7 @@ public void createUserWithNoPropagation() {\n         // get the new task list\n         tasks = taskService.list(\n                 TaskType.PROPAGATION,\n-                SyncopeClient.getListQueryBuilder().page(1).size(1).build());\n+                SyncopeClient.getTaskQueryBuilder().page(1).size(1).build());\n         assertNotNull(tasks);\n         assertFalse(tasks.getResult().isEmpty());\n \n@@ -295,7 +295,7 @@ public void createUserWithDbPropagation() {\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertEquals(1, userTO.getPropagationStatusTOs().size());\n-        assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n     }\n \n     @Test(expected = SyncopeClientException.class)\n@@ -348,7 +348,7 @@ public void create() {\n         // get task list\n         PagedResult<PropagationTaskTO> tasks = taskService.list(\n                 TaskType.PROPAGATION,\n-                SyncopeClient.getListQueryBuilder().page(1).size(1).build());\n+                SyncopeClient.getTaskQueryBuilder().page(1).size(1).build());\n         assertNotNull(tasks);\n         assertFalse(tasks.getResult().isEmpty());\n \n@@ -399,7 +399,7 @@ public void create() {\n         // get the new task list\n         tasks = taskService.list(\n                 TaskType.PROPAGATION,\n-                SyncopeClient.getListQueryBuilder().page(1).size(1).build());\n+                SyncopeClient.getTaskQueryBuilder().page(1).size(1).build());\n         assertNotNull(tasks);\n         assertFalse(tasks.getResult().isEmpty());\n \n@@ -504,7 +504,7 @@ public void delete() {\n \n         // check for propagation result\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n-        assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         try {\n             userService.delete(userTO.getKey());\n@@ -532,7 +532,7 @@ public void deleteByUsername() {\n \n         // check for propagation result\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n-        assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         try {\n             userService.read(userTO.getKey());\n@@ -694,7 +694,7 @@ public void update() {\n     @Test\n     public void updatePasswordOnly() {\n         int beforeTasks = taskService.list(TaskType.PROPAGATION,\n-                SyncopeClient.getListQueryBuilder().page(1).size(1).build()).getTotalCount();\n+                SyncopeClient.getTaskQueryBuilder().page(1).size(1).build()).getTotalCount();\n         assertFalse(beforeTasks <= 0);\n \n         UserTO userTO = getUniqueSampleTO(\"pwdonly@t.com\");\n@@ -712,7 +712,7 @@ public void updatePasswordOnly() {\n         assertNotNull(userTO.getChangePwdDate());\n \n         int afterTasks = taskService.list(TaskType.PROPAGATION,\n-                SyncopeClient.getListQueryBuilder().page(1).size(1).build()).getTotalCount();\n+                SyncopeClient.getTaskQueryBuilder().page(1).size(1).build()).getTotalCount();\n         assertFalse(beforeTasks <= 0);\n \n         assertTrue(beforeTasks < afterTasks);\n@@ -724,7 +724,7 @@ public void verifyTaskRegistration() {\n         // get task list\n         PagedResult<PropagationTaskTO> tasks = taskService.list(\n                 TaskType.PROPAGATION,\n-                SyncopeClient.getListQueryBuilder().page(1).size(1).build());\n+                SyncopeClient.getTaskQueryBuilder().page(1).size(1).build());\n         assertNotNull(tasks);\n         assertFalse(tasks.getResult().isEmpty());\n \n@@ -745,7 +745,7 @@ public void verifyTaskRegistration() {\n         // get the new task list\n         tasks = taskService.list(\n                 TaskType.PROPAGATION,\n-                SyncopeClient.getListQueryBuilder().page(1).size(1).build());\n+                SyncopeClient.getTaskQueryBuilder().page(1).size(1).build());\n         assertNotNull(tasks);\n         assertFalse(tasks.getResult().isEmpty());\n \n@@ -771,7 +771,7 @@ public void verifyTaskRegistration() {\n         // get the new task list\n         tasks = taskService.list(\n                 TaskType.PROPAGATION,\n-                SyncopeClient.getListQueryBuilder().page(1).size(1).build());\n+                SyncopeClient.getTaskQueryBuilder().page(1).size(1).build());\n \n         maxKey = newMaxKey;\n         newMaxKey = tasks.getResult().iterator().next().getKey();\n@@ -793,7 +793,7 @@ public void verifyTaskRegistration() {\n         // get the new task list\n         tasks = taskService.list(\n                 TaskType.PROPAGATION,\n-                SyncopeClient.getListQueryBuilder().page(1).size(1).build());\n+                SyncopeClient.getTaskQueryBuilder().page(1).size(1).build());\n \n         maxKey = newMaxKey;\n         newMaxKey = tasks.getResult().iterator().next().getKey();\n@@ -1058,9 +1058,7 @@ public final void issue280() {\n         assertNotNull(propagations);\n         assertEquals(1, propagations.size());\n \n-        PropagationTaskExecStatus status = propagations.get(0).getStatus();\n-        assertNotNull(status);\n-        assertTrue(status.isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, propagations.get(0).getStatus());\n \n         String resource = propagations.get(0).getResource();\n         assertEquals(RESOURCE_NAME_TESTDB, resource);\n@@ -1077,17 +1075,14 @@ public void issue281() {\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n-        final List<PropagationStatus> propagations = userTO.getPropagationStatusTOs();\n-\n+        List<PropagationStatus> propagations = userTO.getPropagationStatusTOs();\n         assertNotNull(propagations);\n         assertEquals(1, propagations.size());\n \n-        final PropagationTaskExecStatus status = propagations.get(0).getStatus();\n-        final String resource = propagations.get(0).getResource();\n+        assertNotEquals(PropagationTaskExecStatus.SUCCESS, propagations.get(0).getStatus());\n \n-        assertNotNull(status);\n+        String resource = propagations.get(0).getResource();\n         assertEquals(RESOURCE_NAME_CSV, resource);\n-        assertFalse(status.isSuccessful());\n     }\n \n     @Test\n@@ -1365,7 +1360,7 @@ public void issueSYNCOPE267() {\n         assertNotNull(userTO);\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n         assertEquals(RESOURCE_NAME_DBVIRATTR, userTO.getPropagationStatusTOs().get(0).getResource());\n-        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         ConnObjectTO connObjectTO =\n                 resourceService.readConnObject(RESOURCE_NAME_DBVIRATTR, AnyTypeKind.USER.name(), userTO.getKey());\n@@ -1407,7 +1402,7 @@ public void issueSYNCOPE279() {\n         userTO = createUser(userTO);\n         assertEquals(RESOURCE_NAME_TIMEOUT, userTO.getPropagationStatusTOs().get(0).getResource());\n         assertNotNull(userTO.getPropagationStatusTOs().get(0).getFailureReason());\n-        assertEquals(PropagationTaskExecStatus.UNSUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n+        assertEquals(PropagationTaskExecStatus.FAILURE, userTO.getPropagationStatusTOs().get(0).getStatus());\n     }\n \n     @Test\n@@ -1510,7 +1505,7 @@ public void isseSYNCOPE136AES() {\n             PropagationStatus prop = props.iterator().next();\n             assertNotNull(prop);\n             assertEquals(RESOURCE_NAME_WS1, prop.getResource());\n-            assertEquals(PropagationTaskExecStatus.SUBMITTED, prop.getStatus());\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, prop.getStatus());\n         } finally {\n             // restore initial cipher algorithm\n             pwdCipherAlgo.getValues().set(0, origpwdCipherAlgo);\n@@ -1734,7 +1729,7 @@ public void issueSYNCOPE383() {\n                 operation(PatchOperation.ADD_REPLACE).value(RESOURCE_NAME_TESTDB).build());\n         userTO = updateUser(userPatch);\n         assertEquals(RESOURCE_NAME_TESTDB, userTO.getResources().iterator().next());\n-        assertFalse(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+        assertNotEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n         assertNotNull(userTO.getPropagationStatusTOs().get(0).getFailureReason());\n \n         // 3. request to change password only on testdb\n@@ -1745,7 +1740,7 @@ public void issueSYNCOPE383() {\n \n         userTO = updateUser(userPatch);\n         assertEquals(RESOURCE_NAME_TESTDB, userTO.getResources().iterator().next());\n-        assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n     }\n \n     @Test\n@@ -1789,7 +1784,7 @@ public void issueSYNCOPE402() {\n         assertNotNull(ws1PropagationStatus);\n         assertEquals(RESOURCE_NAME_WS1, ws1PropagationStatus.getResource());\n         assertNotNull(ws1PropagationStatus.getFailureReason());\n-        assertEquals(PropagationTaskExecStatus.UNSUBMITTED, ws1PropagationStatus.getStatus());\n+        assertEquals(PropagationTaskExecStatus.FAILURE, ws1PropagationStatus.getStatus());\n     }\n \n     @Test\n@@ -2103,7 +2098,7 @@ public void issueSYNCOPE435() {\n \n         userTO = userService.update(userPatch).readEntity(UserTO.class);\n         assertEquals(Collections.singleton(RESOURCE_NAME_WS1), userTO.getResources());\n-        assertFalse(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+        assertNotEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n         assertTrue(userTO.getPropagationStatusTOs().get(0).getFailureReason().\n                 startsWith(\"Not attempted because there are mandatory attributes without value(s): [__PASSWORD__]\"));\n     }\n@@ -2181,7 +2176,7 @@ public void issueSYNCOPE493() {\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n         assertEquals(1, userTO.getPropagationStatusTOs().size());\n-        assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         ConnObjectTO actual =\n                 resourceService.readConnObject(RESOURCE_NAME_WS1, AnyTypeKind.USER.name(), userTO.getKey());\n@@ -2221,7 +2216,7 @@ public void issueSYNCOPE493() {\n         userTO = updateUser(userPatch);\n         assertNotNull(userTO);\n         assertEquals(1, userTO.getPropagationStatusTOs().size());\n-        assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         ConnObjectTO newUser =\n                 resourceService.readConnObject(RESOURCE_NAME_WS1, AnyTypeKind.USER.name(), userTO.getKey());"},{"sha":"0ceceda40f2f6b475444dc78408263c0354cf886","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/VirAttrITCase.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FVirAttrITCase.java?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -101,7 +101,7 @@ public void issueSYNCOPE260() {\n         assertNotNull(userTO);\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n         assertEquals(RESOURCE_NAME_WS2, userTO.getPropagationStatusTOs().get(0).getResource());\n-        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         ConnObjectTO connObjectTO =\n                 resourceService.readConnObject(RESOURCE_NAME_WS2, AnyTypeKind.USER.name(), userTO.getKey());\n@@ -120,7 +120,7 @@ public void issueSYNCOPE260() {\n         assertNotNull(userTO);\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n         assertEquals(\"ws-target-resource-2\", userTO.getPropagationStatusTOs().get(0).getResource());\n-        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         connObjectTO = resourceService.readConnObject(RESOURCE_NAME_WS2, AnyTypeKind.USER.name(), userTO.getKey());\n         assertNotNull(connObjectTO);\n@@ -164,7 +164,7 @@ public void issueSYNCOPE260() {\n         assertNotNull(userTO);\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n         assertEquals(RESOURCE_NAME_WS2, userTO.getPropagationStatusTOs().get(0).getResource());\n-        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         connObjectTO = resourceService.readConnObject(RESOURCE_NAME_WS2, AnyTypeKind.USER.name(), userTO.getKey());\n         assertNotNull(connObjectTO);\n@@ -189,7 +189,7 @@ public void issueSYNCOPE260() {\n         assertTrue(userTO.getVirAttrs().isEmpty());\n         assertFalse(userTO.getPropagationStatusTOs().isEmpty());\n         assertEquals(RESOURCE_NAME_WS2, userTO.getPropagationStatusTOs().get(0).getResource());\n-        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationStatusTOs().get(0).getStatus());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n \n         connObjectTO = resourceService.readConnObject(RESOURCE_NAME_WS2, AnyTypeKind.USER.name(), userTO.getKey());\n         assertNotNull(connObjectTO);\n@@ -502,8 +502,8 @@ public void issueSYNCOPE453() {\n \n         userTO = createUser(userTO);\n         assertEquals(2, userTO.getPropagationStatusTOs().size());\n-        assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n-        assertTrue(userTO.getPropagationStatusTOs().get(1).getStatus().isSuccessful());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(0).getStatus());\n+        assertEquals(PropagationTaskExecStatus.SUCCESS, userTO.getPropagationStatusTOs().get(1).getStatus());\n \n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n "},{"sha":"203e41495b6cda5e9853ef145feb89fa40f3dad0","filename":"fit/pom.xml","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/fit%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fpom.xml?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -37,6 +37,25 @@ under the License.\n     <rootpom.basedir>${basedir}/..</rootpom.basedir>\n   </properties>\n \n+  <profiles>\n+    <profile>\n+      <id>doc</id>\n+\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.asciidoctor</groupId>\n+            <artifactId>asciidoctor-maven-plugin</artifactId>\n+            <inherited>false</inherited>\n+            <configuration>\n+              <skip>true</skip>\n+            </configuration>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+  </profiles>\n+  \n   <modules>\n     <module>build-tools</module>\n     <module>core-reference</module>"},{"sha":"7727574823b1e81b5775bac790ca91e666271759","filename":"installer/pom.xml","status":"modified","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/installer%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/installer%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fpom.xml?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -215,6 +215,23 @@ under the License.\n         </plugins>\n       </build>\n     </profile>\n+    \n+    <profile>\n+      <id>doc</id>\n+\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.asciidoctor</groupId>\n+            <artifactId>asciidoctor-maven-plugin</artifactId>\n+            <inherited>false</inherited>\n+            <configuration>\n+              <skip>true</skip>\n+            </configuration>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n   </profiles>\n \n </project>"},{"sha":"b9653a106779295674eaa059cab2a56df30773ec","filename":"pom.xml","status":"modified","additions":91,"deletions":6,"changes":97,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -345,12 +345,12 @@ under the License.\n \n     <cocoon.version>3.0.0-alpha-3</cocoon.version>\n \n-    <groovy.version>2.4.4</groovy.version>\n+    <groovy.version>2.4.5</groovy.version>\n \n     <activiti.version>5.18.0</activiti.version>\n \n     <slf4j.version>1.7.12</slf4j.version>\n-    <log4j.version>2.3</log4j.version>\n+    <log4j.version>2.4</log4j.version>\n     <disruptor.version>3.3.2</disruptor.version>\n \n     <commons-io.version>2.4</commons-io.version>\n@@ -363,7 +363,7 @@ under the License.\n     <h2.version>1.4.189</h2.version>\n \n     <junit.version>4.12</junit.version>\n-    <selenium.version>2.46.0</selenium.version>\n+    <selenium.version>2.47.2</selenium.version>\n \n     <conf.directory>${project.build.directory}/test-classes</conf.directory>\n     <bundles.directory>${project.build.directory}/bundles</bundles.directory>\n@@ -372,12 +372,11 @@ under the License.\n     <activiti-modeler.directory>${project.build.directory}/activiti-modeler</activiti-modeler.directory>\n     \n     <jquery.version>2.1.4</jquery.version>\n-    <!-- upgrade jquery-ui version after wicket bootstrap upgrading -->\n-    <jquery-ui.version>1.10.3</jquery-ui.version>\n+    <jquery-ui.version>1.11.4</jquery-ui.version>\n     <jquery-cookie.version>1.4.1-1</jquery-cookie.version>\n     <bootstrap.version>3.3.5</bootstrap.version>\n \n-    <wicket-bootstrap.version>0.10.3</wicket-bootstrap.version>\n+    <wicket-bootstrap.version>0.10.4-SNAPSHOT</wicket-bootstrap.version>\n \n     <font-awesome.version>4.4.0</font-awesome.version>\n     <ionicons.version>2.0.1</ionicons.version>\n@@ -1506,6 +1505,92 @@ under the License.\n       </build>\n     </profile>\n \n+    <profile>\n+      <id>doc</id>\n+      <build>\n+        <defaultGoal>clean generate-resources</defaultGoal>\n+        \n+        <plugins>\n+          <plugin>\n+            <groupId>org.asciidoctor</groupId>\n+            <artifactId>asciidoctor-maven-plugin</artifactId>\n+            <version>1.5.2.1</version>\n+            <dependencies>\n+              <dependency>\n+                <groupId>org.asciidoctor</groupId>\n+                <artifactId>asciidoctorj-pdf</artifactId>\n+                <version>1.5.0-alpha.9</version>\n+              </dependency>\n+            </dependencies>\n+            <configuration>\n+              <doctype>book</doctype>\n+              <relativeBaseDir>true</relativeBaseDir>\n+              <sourceHighlighter>coderay</sourceHighlighter>\n+              <attributes>\n+                <docVersion>${project.version}</docVersion>\n+                <numbered>true</numbered>\n+                <icons>font</icons>\n+                <pagenums/>\n+                <idprefix/>\n+                <idseparator>-</idseparator>\n+                <last-update-label>Copyright © 2010–2015 The Apache Software Foundation. All rights reserved. Last Updated:</last-update-label>\n+              </attributes>\n+            </configuration>\n+            <executions>\n+              <execution>\n+                <id>getting-started-html</id>\n+                <phase>generate-resources</phase>\n+                <goals>\n+                  <goal>process-asciidoc</goal>\n+                </goals>\n+                <configuration>\n+                  <sourceDirectory>${basedir}/src/main/asciidoc/getting-started</sourceDirectory>\n+                  <sourceDocumentName>getting-started.adoc</sourceDocumentName>\n+                  <backend>html</backend>\n+                </configuration>\n+              </execution>\n+              <execution>\n+                <id>getting-started-pdf</id>\n+                <phase>generate-resources</phase>\n+                <goals>\n+                  <goal>process-asciidoc</goal>\n+                </goals>\n+                <configuration>\n+                  <sourceDirectory>${basedir}/src/main/asciidoc/getting-started</sourceDirectory>\n+                  <sourceDocumentName>getting-started.adoc</sourceDocumentName>\n+                  <backend>pdf</backend>\n+                </configuration>\n+              </execution>\n+              <execution>\n+                <id>reference-guide-html</id>\n+                <phase>generate-resources</phase>\n+                <goals>\n+                  <goal>process-asciidoc</goal>\n+                </goals>\n+                <configuration>\n+                  <sourceDirectory>${basedir}/src/main/asciidoc/reference-guide</sourceDirectory>\n+                  <sourceDocumentName>reference-guide.adoc</sourceDocumentName>\n+                  <backend>html</backend>\n+                </configuration>\n+              </execution>\n+              <execution>\n+                <id>reference-guide-pdf</id>\n+                <phase>generate-resources</phase>\n+                <goals>\n+                  <goal>process-asciidoc</goal>\n+                </goals>\n+                <configuration>\n+                  <sourceDirectory>${basedir}/src/main/asciidoc/reference-guide</sourceDirectory>\n+                  <sourceDocumentName>reference-guide.adoc</sourceDocumentName>\n+                  <backend>pdf</backend>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n     <profile>\n       <id>site</id>\n       <build>"},{"sha":"964350162d73297ab29267f52fc118d14c57808c","filename":"src/main/asciidoc/getting-started/getting-started.adoc","status":"added","additions":64,"deletions":0,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fgetting-started.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fgetting-started.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Fgetting-started%2Fgetting-started.adoc?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -0,0 +1,64 @@\n+//\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+//\n+\n+// Quick reference: http://asciidoctor.org/docs/asciidoc-syntax-quick-reference/\n+// User manual: http://asciidoctor.org/docs/user-manual/\n+\n+= Apache Syncope - Getting Started\n+:revnumber: {docVersion}\n+:toc: right\n+:toclevels: 4\n+:homepage: http://syncope.apache.org\n+:description: Several ways to get started with Apache Syncope\n+:keywords: Apache Syncope, IdM, provisioning, identity management, getting started, tutorial\n+\n+:sectanchors:\n+:sectnums:\n+:sectlinks:\n+\n+[NOTE]\n+.This document is under active development and discussion!\n+If you find errors or omissions in this document, please don’t hesitate to \n+http://syncope.apache.org/issue-tracking.html[submit an issue] or \n+https://github.com/apache/syncope/pulls[open a pull request] with \n+a fix. We also encourage you to ask questions and discuss any aspects of the project on the \n+http://syncope.apache.org/mailing-lists.html[mailing lists or IRC]. \n+New contributors are always welcome!\n+\n+[discrete] \n+== Preface\n+This guide shows you how to get started with Apache Syncope services for identity management, provisioning, and \n+compliance.\n+\n+== Introduction\n+\n+== Which method?\n+\n+=== Standalone\n+\n+=== Debian packages\n+\n+=== GUI installer\n+\n+=== Maven project\n+\n+== Moving forward\n+\n+// Chapters will be placed in separate .adoc files in the same directory\n+//include::XXX.adoc[]\n\\ No newline at end of file"},{"sha":"48c2a80a2cdc54ab3141256d9ce26417cb2b066a","filename":"src/main/asciidoc/reference-guide/reference-guide.adoc","status":"added","additions":100,"deletions":0,"changes":100,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/src%2Fmain%2Fasciidoc%2Freference-guide%2Freference-guide.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/src%2Fmain%2Fasciidoc%2Freference-guide%2Freference-guide.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Freference-guide.adoc?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -0,0 +1,100 @@\n+//\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+//\n+\n+// Quick reference: http://asciidoctor.org/docs/asciidoc-syntax-quick-reference/\n+// User manual: http://asciidoctor.org/docs/user-manual/\n+\n+= Apache Syncope - Reference Guide\n+:revnumber: {docVersion}\n+:toc: right\n+:toclevels: 4\n+:homepage: http://syncope.apache.org\n+:description: Comprehensive guide about Apache Syncope\n+:keywords: Apache Syncope, IdM, provisioning, identity management, reference, guide\n+\n+:sectanchors:\n+:sectnums:\n+:sectlinks:\n+\n+[NOTE]\n+.This document is under active development and discussion!\n+If you find errors or omissions in this document, please don’t hesitate to \n+http://syncope.apache.org/issue-tracking.html[submit an issue] or \n+https://github.com/apache/syncope/pulls[open a pull request] with \n+a fix. We also encourage you to ask questions and discuss any aspects of the project on the \n+http://syncope.apache.org/mailing-lists.html[mailing lists or IRC]. \n+New contributors are always welcome!\n+\n+[discrete] \n+== Preface\n+This guide provides comprehensive reference to Apache Syncope services for identity management, provisioning, and \n+compliance.\n+\n+== Introduction\n+\n+=== A bit of history\n+\n+== Identity and Access Management\n+\n+=== Identity Stores\n+\n+=== Provisioning Engines\n+\n+=== Access Managers\n+\n+== Building blocks\n+\n+=== Data model\n+\n+==== Schema\n+\n+==== Attributes\n+\n+==== Mapping\n+\n+=== The external world\n+\n+==== Connectors, Resources\n+\n+==== Propagation & Synchronization\n+\n+=== Policies\n+\n+=== Workflow\n+\n+=== Reports\n+\n+== Working with Apache Syncope\n+\n+=== Architecture\n+\n+=== RESTful services\n+\n+==== Client library\n+\n+=== Extending\n+\n+==== Core\n+\n+==== Console\n+\n+== Examples\n+\n+// Chapters will be placed in separate .adoc files in the same directory\n+//include::XXX.adoc[]\n\\ No newline at end of file"},{"sha":"def2d207906e7f12deac1c19ce26d4ce27d02fd3","filename":"standalone/pom.xml","status":"modified","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b56c08eebf369416d4418b607c80691ca47b55e4/standalone%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b56c08eebf369416d4418b607c80691ca47b55e4/standalone%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/standalone%2Fpom.xml?ref=b56c08eebf369416d4418b607c80691ca47b55e4","patch":"@@ -282,6 +282,23 @@ under the License.\n         </plugins>\n       </build>\n     </profile>\n+\n+    <profile>\n+      <id>doc</id>\n+\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.asciidoctor</groupId>\n+            <artifactId>asciidoctor-maven-plugin</artifactId>\n+            <inherited>false</inherited>\n+            <configuration>\n+              <skip>true</skip>\n+            </configuration>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n   </profiles>\n \n </project>"}]}