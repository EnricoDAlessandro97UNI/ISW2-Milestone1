{"sha":"5474a66d029089dcff08ead64cb98bf21083c528","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjU0NzRhNjZkMDI5MDg5ZGNmZjA4ZWFkNjRjYjk4YmYyMTA4M2M1Mjg=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-02-21T15:15:34Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-02-21T15:15:34Z"},"message":"bug-fix paginated user search\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246800 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a36cb82f3f7072d6a2538a86ff5fcbd9acdd08f0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a36cb82f3f7072d6a2538a86ff5fcbd9acdd08f0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5474a66d029089dcff08ead64cb98bf21083c528","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5474a66d029089dcff08ead64cb98bf21083c528","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5474a66d029089dcff08ead64cb98bf21083c528","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5474a66d029089dcff08ead64cb98bf21083c528/comments","author":null,"committer":null,"parents":[{"sha":"415bf73318dc0a74a9ab57f52217389fdc2448ef","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/415bf73318dc0a74a9ab57f52217389fdc2448ef","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/415bf73318dc0a74a9ab57f52217389fdc2448ef"}],"stats":{"total":276,"additions":132,"deletions":144},"files":[{"sha":"24e4c98952c1a6ef37634ba61c2b4d55c07378db","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":102,"deletions":114,"changes":216,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5474a66d029089dcff08ead64cb98bf21083c528/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5474a66d029089dcff08ead64cb98bf21083c528/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=5474a66d029089dcff08ead64cb98bf21083c528","patch":"@@ -155,9 +155,11 @@ public class Users extends BasePage {\n \n     private PaginatedResult paginatedUsers;\n \n+    private Boolean firstLoad = Boolean.TRUE;\n+\n     private PaginatedResult paginatedSearchUsers;\n \n-    private ListView pageLinksView;\n+    private ListView navigation;\n \n     private ListView pageLinksSearchView;\n \n@@ -203,15 +205,25 @@ protected void populateItem(final ListItem item) {\n                 getWebRequestCycle().getWebRequest(),\n                 Constants.PREF_USERS_SEARCH_PAGINATOR_ROWS);\n \n+        LOG.debug(\"Users list first load with page '{}'\", currentViewPage);\n+\n         paginatedUsers = userRestClient.getPaginatedUser(\n                 currentViewPage, paginatorRows);\n \n         IModel usersModel = new LoadableDetachableModel() {\n \n             @Override\n             protected Object load() {\n-                paginatedUsers = userRestClient.getPaginatedUser(\n-                        currentViewPage, paginatorRows);\n+\n+                if (!firstLoad) {\n+                    LOG.debug(\"Users list load with page '{}'\",\n+                            currentViewPage);\n+\n+                    paginatedUsers = userRestClient.getPaginatedUser(\n+                            currentViewPage, paginatorRows);\n+                } else {\n+                    firstLoad = Boolean.FALSE;\n+                }\n \n                 //Refresh links just after the selecting page click\n                 if (incrementUserViewLink != null\n@@ -232,13 +244,9 @@ protected Object load() {\n \n                     if (currentViewPage == 1) {\n                         decrementUserViewLink.setEnabled(false);\n-                    } else {\n-                        decrementUserViewLink.setEnabled(true);\n-                    }\n-\n-                    if (totalPages == 1 || currentViewPage == 1) {\n                         firstPageLink.setEnabled(false);\n                     } else {\n+                        decrementUserViewLink.setEnabled(true);\n                         firstPageLink.setEnabled(true);\n                     }\n                 }\n@@ -326,7 +334,8 @@ public void onClick(final AjaxRequestTarget target) {\n                                     public Page createPage() {\n                                         UserModalPage window =\n                                                 new UserModalPage(\n-                                                Users.this, editUserWin, userTO,\n+                                                Users.this, editUserWin,\n+                                                userTO,\n                                                 false);\n                                         return window;\n                                     }\n@@ -354,8 +363,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.\n-                                getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n \n                             @Override\n                             public CharSequence preDecorateScript(\n@@ -382,8 +390,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                 //Update pageLinks on paginator\n                 List<Integer> pageIdList = getPaginatorIndexes();\n-                pageLinksView.setList(pageIdList);\n-                target.addChildren(pageLinksView, AjaxLink.class);\n+                navigation.setList(pageIdList);\n+                target.addChildren(navigation, AjaxLink.class);\n \n                 target.addComponent(usersTableContainer);\n             }\n@@ -400,8 +408,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                 //Update pageLinks on paginator\n                 List<Integer> pageIdList = getPaginatorIndexes();\n-                pageLinksView.setList(pageIdList);\n-                target.addChildren(pageLinksView, AjaxLink.class);\n+                navigation.setList(pageIdList);\n+                target.addChildren(navigation, AjaxLink.class);\n \n                 target.addComponent(usersTableContainer);\n             }\n@@ -418,8 +426,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                 //Update pageLinks on paginator\n                 List<Integer> pageIdList = getPaginatorIndexes();\n-                pageLinksView.setList(pageIdList);\n-                target.addChildren(pageLinksView, AjaxLink.class);\n+                navigation.setList(pageIdList);\n+                target.addChildren(navigation, AjaxLink.class);\n \n                 target.addComponent(usersTableContainer);\n             }\n@@ -433,29 +441,25 @@ public void onClick(final AjaxRequestTarget target) {\n \n                 //Update pageLinks on paginator\n                 List<Integer> pageIdList = getPaginatorIndexes();\n-                pageLinksView.setList(pageIdList);\n-                target.addChildren(pageLinksView, AjaxLink.class);\n+                navigation.setList(pageIdList);\n+                target.addChildren(navigation, AjaxLink.class);\n \n                 target.addComponent(usersTableContainer);\n             }\n         };\n \n-        if (currentViewPage == totalPages) {\n+        if (currentViewPage >= totalPages) {\n             incrementUserViewLink.setEnabled(false);\n             lastPageLink.setEnabled(false);\n         }\n \n-        if (currentViewPage == 1) {\n+        if (currentViewPage <= 1) {\n             decrementUserViewLink.setEnabled(false);\n-        }\n-\n-        if (totalPages == 1 || currentViewPage == 1) {\n             firstPageLink.setEnabled(false);\n         }\n \n         //Add to usersTableSearchContainer users' list navigation controls\n         usersTableContainer.add(incrementUserViewLink);\n-        //usersTableContainer.add(currentPageUserViewLabel);\n         usersTableContainer.add(firstPageLink);\n         usersTableContainer.add(lastPageLink);\n \n@@ -487,7 +491,7 @@ public void onClick(final AjaxRequestTarget target) {\n         //Build pages link for paginator\n         List<Integer> pageIdList = getPaginatorIndexes();\n \n-        pageLinksView = new ListView(\"pageLinksView\", pageIdList) {\n+        navigation = new ListView(\"navigation\", pageIdList) {\n \n             @Override\n             protected void populateItem(ListItem item) {\n@@ -508,15 +512,15 @@ public void onClick(final AjaxRequestTarget target) {\n                     }\n                 };\n \n-                pageLink.setEnabled(currentViewPage == pageId);\n-                pageLink.add(new Label(\"name\", new Model<String>(\n+                pageLink.setEnabled(currentViewPage != pageId);\n+                pageLink.add(new Label(\"pageNumber\", new Model<String>(\n                         String.valueOf(pageId))));\n \n                 item.add(pageLink);\n             }\n         };\n \n-        usersTableContainer.add(pageLinksView);\n+        usersTableContainer.add(navigation);\n         usersTableContainer.add(columnsView);\n \n         add(usersTableContainer);\n@@ -701,8 +705,7 @@ protected void populateItem(final ListItem item) {\n                 if (item.getIndex() == 0) {\n                     item.add(new Label(\"operationType\", \"\"));\n                 } else {\n-                    item.add(new Label(\"operationType\", searchCondition.\n-                            getOperationType().toString()));\n+                    item.add(new Label(\"operationType\", searchCondition.getOperationType().toString()));\n                 }\n \n                 item.add(new CheckBox(\"notOperator\",\n@@ -718,11 +721,11 @@ protected void populateItem(final ListItem item) {\n                 if (searchCondition.getFilterType() == null) {\n                     filterNameChooser.setChoices(Collections.emptyList());\n                 } else if (searchCondition.getFilterType()\n-                        == SearchConditionWrapper.FilterType.ATTRIBUTE) {\n-                    filterNameChooser.setChoices(schemaNames);\n-                } else {\n-                    filterNameChooser.setChoices(roleNames);\n-                }\n+                            == SearchConditionWrapper.FilterType.ATTRIBUTE) {\n+                        filterNameChooser.setChoices(schemaNames);\n+                    } else {\n+                        filterNameChooser.setChoices(roleNames);\n+                    }\n \n                 filterNameChooser.setRequired(true);\n \n@@ -850,16 +853,31 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n \n         form.add(usersTableSearchContainer);\n \n+        searchResultsContainer =\n+                new WebMarkupContainer(\"searchResultsContainer\");\n+\n+        //Display warning message if no search matches have been found\n+        final Label noResults = new Label(\"noResults\", new Model<String>(\"\"));\n+        noResults.setOutputMarkupId(true);\n+        searchResultsContainer.add(noResults);\n+\n         IModel resultsModel = new LoadableDetachableModel() {\n \n             @Override\n             protected Object load() {\n \n+                LOG.debug(\"Search with page '{}' and condition {}\",\n+                        currentSearchPage, nodeCond);\n+\n                 if (nodeCond != null) {\n \n                     paginatedSearchUsers = userRestClient.paginatedSearchUser(\n                             nodeCond, currentSearchPage, paginatorSearchRows);\n \n+                    //Update pageLinks on paginator\n+                    List<Integer> pageIdList = getPaginatorSearchIndexes();\n+                    pageLinksSearchView.setList(pageIdList);\n+\n                     //Refresh links just after the selecting page click\n                     if (incrementUserLinkSearch != null\n                             && decrementUserLinkSearch != null\n@@ -871,25 +889,28 @@ protected Object load() {\n                                 / new Double(\n                                 paginatedSearchUsers.getPageSize()));\n \n-                        if (currentSearchPage == totalPages) {\n+                        if (currentSearchPage >= totalPages) {\n                             incrementUserLinkSearch.setEnabled(false);\n                             lastPageLinkSearch.setEnabled(false);\n                         } else {\n                             incrementUserLinkSearch.setEnabled(true);\n                             lastPageLinkSearch.setEnabled(true);\n                         }\n \n-                        if (currentSearchPage > 1) {\n-                            decrementUserLinkSearch.setEnabled(true);\n-                        } else {\n+                        if (currentSearchPage <= 1) {\n                             decrementUserLinkSearch.setEnabled(false);\n-                        }\n-\n-                        if (totalPages == 1 || currentSearchPage == 1) {\n                             firstPageLinkSearch.setEnabled(false);\n                         } else {\n+                            decrementUserLinkSearch.setEnabled(true);\n                             firstPageLinkSearch.setEnabled(true);\n                         }\n+\n+                        if (paginatedSearchUsers.getRecords().isEmpty()) {\n+                            noResults.setDefaultModel(new Model<String>(\n+                                    getString(\"search_noResults\")));\n+                        } else {\n+                            noResults.setDefaultModel(new Model<String>(\"\"));\n+                        }\n                     }\n \n                     if (pageRecordFromSearch != null\n@@ -898,8 +919,7 @@ protected Object load() {\n \n                         //Records indexes for paginator's labels\n                         int firstPageRecord = 1;\n-                        int lastPageRecord = paginatedSearchUsers.\n-                                getRecordsInPage();\n+                        int lastPageRecord = paginatedSearchUsers.getRecordsInPage();\n \n                         if (paginatedSearchUsers.getPageNumber() > 1) {\n                             firstPageRecord = 1\n@@ -973,7 +993,9 @@ protected void onSubmit(final AjaxRequestTarget target,\n                                     @Override\n                                     public Page createPage() {\n                                         return new UserModalPage(\n-                                                Users.this, editUserWin, userTO,\n+                                                Users.this,\n+                                                editUserWin,\n+                                                userTO,\n                                                 false);\n                                     }\n                                 });\n@@ -1001,8 +1023,6 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         };\n \n-        searchResultsContainer =\n-                new WebMarkupContainer(\"searchResultsContainer\");\n         searchResultsContainer.setOutputMarkupId(true);\n         searchResultsContainer.add(resultsView);\n \n@@ -1025,9 +1045,9 @@ public void onClick(AjaxRequestTarget target) {\n         //Check if it is not null\n         int totalSearchPages = 0;\n         if (paginatedSearchUsers != null) {\n-            totalSearchPages = (int) Math.ceil(paginatedSearchUsers.\n-                    getTotalRecords() / new Double(paginatedSearchUsers.\n-                    getPageSize()));\n+            totalSearchPages = (int) Math.ceil(\n+                    paginatedSearchUsers.getTotalRecords()\n+                    / new Double(paginatedSearchUsers.getPageSize()));\n         }\n \n         firstPageLinkSearch = new AjaxLink(\"firstPageLink\") {\n@@ -1049,8 +1069,7 @@ public void onClick(AjaxRequestTarget target) {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n-                int totalPages = (int) Math.ceil(paginatedSearchUsers.\n-                        getTotalRecords() / new Double(\n+                int totalPages = (int) Math.ceil(paginatedSearchUsers.getTotalRecords() / new Double(\n                         paginatedSearchUsers.getPageSize()));\n                 currentSearchPage = totalPages;\n \n@@ -1078,26 +1097,27 @@ public void onClick(AjaxRequestTarget target) {\n             }\n         };\n \n-        if (currentSearchPage <= totalSearchPages) {\n+        if (currentSearchPage >= totalSearchPages) {\n             incrementUserLinkSearch.setEnabled(false);\n             lastPageLinkSearch.setEnabled(false);\n+        } else {\n+            incrementUserLinkSearch.setEnabled(true);\n+            lastPageLinkSearch.setEnabled(true);\n         }\n \n         if (currentSearchPage <= 1) {\n             decrementUserLinkSearch.setEnabled(false);\n-        }\n-\n-        if (totalPages == 1 || currentSearchPage == 1) {\n             firstPageLinkSearch.setEnabled(false);\n+        } else {\n+            decrementUserLinkSearch.setEnabled(true);\n+            firstPageLinkSearch.setEnabled(true);\n         }\n \n-        if (currentSearchPage <= 1 && paginatedSearchUsers == null) {\n+        if (paginatedSearchUsers == null) {\n             incrementUserLinkSearch.setEnabled(false);\n             lastPageLinkSearch.setEnabled(false);\n             firstPageLinkSearch.setEnabled(false);\n             decrementUserLinkSearch.setEnabled(false);\n-        } else if (currentSearchPage > 1 && currentSearchPage <= totalPages) {\n-            decrementUserLinkSearch.setEnabled(true);\n         }\n \n         searchResultsContainer.add(incrementUserLinkSearch);\n@@ -1135,8 +1155,7 @@ public void onClick(AjaxRequestTarget target) {\n         if (paginatedSearchUsers != null) {\n             searchResultsContainer.add(totalRecordsSearch = new Label(\n                     \"totalRecords\",\n-                    new Model<String>(String.valueOf(paginatedSearchUsers.\n-                    getTotalRecords()))));\n+                    new Model<String>(String.valueOf(paginatedSearchUsers.getTotalRecords()))));\n         } else {\n             searchResultsContainer.add(totalRecordsSearch = new Label(\n                     \"totalRecords\",\n@@ -1148,7 +1167,7 @@ public void onClick(AjaxRequestTarget target) {\n         //Build pages link for paginator\n         List<Integer> pageIdListSearch = getPaginatorSearchIndexes();\n \n-        pageLinksSearchView = new ListView(\"pageLinksView\", pageIdListSearch) {\n+        pageLinksSearchView = new ListView(\"navigation\", pageIdListSearch) {\n \n             @Override\n             protected void populateItem(final ListItem item) {\n@@ -1159,17 +1178,22 @@ protected void populateItem(final ListItem item) {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         currentSearchPage = pageId;\n+                        nodeCond = buildSearchExpression(searchConditionsList);\n+\n+                        LOG.debug(\"Node condition \" + nodeCond);\n+\n+                        if (nodeCond == null || !nodeCond.checkValidity()) {\n+                            error(getString(\"search_error\"));\n+                            return;\n+                        }\n+\n                         target.addComponent(searchResultsContainer);\n                     }\n                 };\n \n-                if (currentSearchPage == pageId) {\n-                    pageLink.setEnabled(false);\n-                } else {\n-                    pageLink.setEnabled(true);\n-                }\n+                pageLink.setEnabled(currentSearchPage != pageId);\n \n-                pageLink.add(new Label(\"name\", new Model<String>(\n+                pageLink.add(new Label(\"pageNumber\", new Model<String>(\n                         String.valueOf(pageId))));\n \n                 item.add(pageLink);\n@@ -1179,11 +1203,6 @@ public void onClick(final AjaxRequestTarget target) {\n         searchResultsContainer.add(pageLinksSearchView);\n \n         /** SEARCH PAGiNATOR END */\n-        //Display warning message if no search matches have been found\n-        final Label noResults = new Label(\"noResults\", new Model<String>(\"\"));\n-        noResults.setOutputMarkupId(true);\n-        searchResultsContainer.add(noResults);\n-\n         setWindowClosedCallback(editUserWin, searchResultsContainer);\n \n         form.add(new IndicatingAjaxButton(\"search\", new Model(\n@@ -1194,38 +1213,12 @@ protected void onSubmit(final AjaxRequestTarget target,\n                     final Form form) {\n \n                 nodeCond = buildSearchExpression(searchConditionsList);\n-                if (nodeCond != null) {\n-                    try {\n-                        paginatedSearchUsers = userRestClient.\n-                                paginatedSearchUser(\n-                                nodeCond, currentSearchPage = 1,\n-                                paginatorSearchRows);\n \n-                        /*reset nodeCond in order to avoid a new REST connection\n-                        due to Ajax's request*/\n-                        nodeCond = null;\n+                LOG.debug(\"Node condition \" + nodeCond);\n \n-                        //Clean the feedback panel if the operation succedes\n-                        target.addComponent(form.get(\"searchFeedback\"));\n-\n-                        //Update pageLinks on paginator\n-                        List<Integer> pageIdList = getPaginatorSearchIndexes();\n-                        pageLinksSearchView.setList(pageIdList);\n-                        target.addChildren(pageLinksSearchView, AjaxLink.class);\n-                    } catch (SyncopeClientCompositeErrorException e) {\n-                        LOG.error(\"While searching users\", e);\n-                        error(e.getMessage());\n-                        return;\n-                    }\n-                } else {\n+                if (nodeCond == null || !nodeCond.checkValidity()) {\n                     error(getString(\"search_error\"));\n-                }\n-\n-                if (paginatedSearchUsers.getRecords().isEmpty()) {\n-                    noResults.setDefaultModel(new Model<String>(\n-                            getString(\"search_noResults\")));\n-                } else {\n-                    noResults.setDefaultModel(new Model<String>(\"\"));\n+                    return;\n                 }\n \n                 target.addComponent(searchResultsContainer);\n@@ -1255,24 +1248,19 @@ protected void onError(final AjaxRequestTarget target,\n \n                     @Override\n                     protected void onUpdate(final AjaxRequestTarget target) {\n+\n                         prefMan.set(getWebRequestCycle().getWebRequest(),\n                                 getWebRequestCycle().getWebResponse(),\n                                 Constants.PREF_USERS_SEARCH_PAGINATOR_ROWS,\n                                 String.valueOf(paginatorSearchRows));\n+\n                         resultsView.setRowsPerPage(paginatorSearchRows);\n \n-                        //Re-execute the query\n-                        paginatedSearchUsers = userRestClient.\n-                                paginatedSearchUser(\n-                                nodeCond, currentSearchPage = 1,\n-                                paginatorSearchRows);\n+                        nodeCond = buildSearchExpression(searchConditionsList);\n \n-                        //Update pageLinks on paginator\n-                        List<Integer> pageIdList = getPaginatorSearchIndexes();\n-                        pageLinksSearchView.setList(pageIdList);\n-                        target.addChildren(pageLinksSearchView, AjaxLink.class);\n-\n-                        target.addComponent(searchResultsContainer);\n+                        if (nodeCond != null && nodeCond.checkValidity()) {\n+                            target.addComponent(searchResultsContainer);\n+                        }\n                     }\n                 });\n "},{"sha":"a2697e621ffcf4f20e496e9188f565dfb8d924b2","filename":"console/src/main/resources/org/syncope/console/pages/Users.html","status":"modified","additions":24,"deletions":24,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5474a66d029089dcff08ead64cb98bf21083c528/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5474a66d029089dcff08ead64cb98bf21083c528/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html?ref=5474a66d029089dcff08ead64cb98bf21083c528","patch":"@@ -62,25 +62,25 @@\n                         </span>\n \n                         <span style=\"float:right\">\n-                            <a wicket:id=\"firstPageLink\">\n-                                &lt;&lt;\n+                            <a wicket:id=\"firstPageLink\" style=\"text-decoration:none\">\n+                                <span style=\"text-decoration:underline\">&lt;&lt;</span>\n                             </a>\n-\n-                            <a wicket:id=\"decrementLink\">\n-                                &lt;\n+                            <a wicket:id=\"decrementLink\" style=\"text-decoration:none\">\n+                                <span style=\"text-decoration:underline\">&lt;</span>\n                             </a>\n \n-                            <span wicket:id=\"pageLinksView\">\n-                                <a wicket:id=\"pageLink\">\n-                                    <span wicket:id=\"name\"/>\n+                            <span wicket:id=\"navigation\">\n+                                <a wicket:id=\"pageLink\" style=\"text-decoration:none\">\n+                                    <span style=\"text-decoration:underline\"\n+                                          wicket:id=\"pageNumber\"/>\n                                 </a>\n                             </span>\n \n-                            <a wicket:id=\"incrementLink\">\n-                                &gt;\n+                            <a wicket:id=\"incrementLink\" style=\"text-decoration:none\">\n+                                <span style=\"text-decoration:underline\">&gt;</span>\n                             </a>\n-                            <a wicket:id=\"lastPageLink\">\n-                                &gt;&gt;\n+                            <a wicket:id=\"lastPageLink\" style=\"text-decoration:none\">\n+                                <span style=\"text-decoration:underline\">&gt;&gt;</span>\n                             </a>\n                         </span>\n                     </span>\n@@ -248,25 +248,25 @@ <h1 style=\"display:inline\"><wicket:message key=\"search_results_title\"/></h1>\n                             </span>\n \n                             <span style=\"float:right\">\n-                                <a wicket:id=\"firstPageLink\">\n-                                    &lt;&lt;\n+                                <a wicket:id=\"firstPageLink\" style=\"text-decoration:none\">\n+                                    <span style=\"text-decoration:underline\">&lt;&lt;</span>\n                                 </a>\n-\n-                                <a wicket:id=\"decrementLink\">\n-                                    &lt;\n+                                <a wicket:id=\"decrementLink\" style=\"text-decoration:none\">\n+                                    <span style=\"text-decoration:underline\">&lt;</span>\n                                 </a>\n \n-                                <span wicket:id=\"pageLinksView\">\n-                                    <a wicket:id=\"pageLink\">\n-                                        <span wicket:id=\"name\"/>\n+                                <span wicket:id=\"navigation\">\n+                                    <a wicket:id=\"pageLink\" style=\"text-decoration:none\">\n+                                        <span style=\"text-decoration:underline\"\n+                                              wicket:id=\"pageNumber\"/>\n                                     </a>\n                                 </span>\n \n-                                <a wicket:id=\"incrementLink\">\n-                                    &gt;\n+                                <a wicket:id=\"incrementLink\" style=\"text-decoration:none\">\n+                                    <span style=\"text-decoration:underline\">&gt;</span>\n                                 </a>\n-                                <a wicket:id=\"lastPageLink\">\n-                                    &gt;&gt;\n+                                <a wicket:id=\"lastPageLink\" style=\"text-decoration:none\">\n+                                    <span style=\"text-decoration:underline\">&gt;&gt;</span>\n                                 </a>\n                             </span>\n                         </div>"},{"sha":"759f288519c7ff236c4db6f63e44ed4d70254aad","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/UserSearchDAOImpl.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5474a66d029089dcff08ead64cb98bf21083c528/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5474a66d029089dcff08ead64cb98bf21083c528/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FUserSearchDAOImpl.java?ref=5474a66d029089dcff08ead64cb98bf21083c528","patch":"@@ -133,10 +133,10 @@ private List<SyncopeUser> doSearch(final NodeCond nodeCond,\n         StringBuilder queryString = getQuery(nodeCond, parameters);\n \n         Query query = entityManager.createNativeQuery(queryString.toString());\n+\n         // page starts from 1, while setFirtResult() starts from 0\n-        if (page >= 1) {\n-            query.setFirstResult(page - 1);\n-        }\n+        query.setFirstResult(itemsPerPage * (page <= 0 ? 0 : page - 1));\n+\n         if (itemsPerPage >= 0) {\n             query.setMaxResults(itemsPerPage);\n         }\n@@ -248,9 +248,9 @@ private String getQuery(final MembershipCond cond,\n             paramKey = setParameter(random, parameters, cond.getRoleId());\n             query.append(\"role_id=:param\").append(paramKey);\n         } else if (cond.getRoleName() != null) {\n-            paramKey = setParameter(random, parameters, cond.getRoleName());\n-            query.append(\"role_name=:param\").append(paramKey);\n-        }\n+                paramKey = setParameter(random, parameters, cond.getRoleName());\n+                query.append(\"role_name=:param\").append(paramKey);\n+            }\n \n         if (not) {\n             query.append(\")\");"}]}