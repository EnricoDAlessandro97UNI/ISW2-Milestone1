{"sha":"43bd643c7aad250963c1b35062617c9fcb91a559","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQzYmQ2NDNjN2FhZDI1MDk2M2MxYjM1MDYyNjE3YzlmY2I5MWE1NTk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-10-21T09:25:33Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-10-21T09:34:46Z"},"message":"[SYNCOPE-1594] Adding Batch delete support to User Requests","tree":{"sha":"5928b69256fbce36e786fd92ad627a05c5853709","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5928b69256fbce36e786fd92ad627a05c5853709"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/43bd643c7aad250963c1b35062617c9fcb91a559","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/43bd643c7aad250963c1b35062617c9fcb91a559","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/43bd643c7aad250963c1b35062617c9fcb91a559","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/43bd643c7aad250963c1b35062617c9fcb91a559/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"664333741a96ad4dc2325d05a4d704d416e5f2d2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/664333741a96ad4dc2325d05a4d704d416e5f2d2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/664333741a96ad4dc2325d05a4d704d416e5f2d2"}],"stats":{"total":314,"additions":238,"deletions":76},"files":[{"sha":"8b6c2a7f4c003d7d27276b337adf79eea840747f","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/batch/BatchContent.java","status":"modified","additions":72,"deletions":33,"changes":105,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43bd643c7aad250963c1b35062617c9fcb91a559/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchContent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43bd643c7aad250963c1b35062617c9fcb91a559/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchContent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchContent.java?ref=43bd643c7aad250963c1b35062617c9fcb91a559","patch":"@@ -64,6 +64,7 @@\n import org.apache.syncope.common.rest.api.service.ReportService;\n import org.apache.syncope.common.rest.api.service.TaskService;\n import org.apache.syncope.common.rest.api.service.UserService;\n+import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n@@ -79,7 +80,13 @@\n \n     private static final long serialVersionUID = 4114026480146090963L;\n \n-    protected static final Logger LOG = LoggerFactory.getLogger(BatchContent.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(BatchContent.class);\n+\n+    private WebMarkupContainer container;\n+\n+    private ActionsPanel<Serializable> actionPanel;\n+\n+    private SortableDataProvider<T, S> dataProvider;\n \n     public BatchContent(\n             final BaseModal<?> modal,\n@@ -103,38 +110,7 @@ public BatchContent(\n \n         super(id);\n \n-        WebMarkupContainer container = new WebMarkupContainer(\"container\");\n-        container.setOutputMarkupId(true);\n-        add(container);\n-\n-        SortableDataProvider<T, S> dataProvider = new SortableDataProvider<T, S>() {\n-\n-            private static final long serialVersionUID = 5291903859908641954L;\n-\n-            @Override\n-            public Iterator<? extends T> iterator(final long first, final long count) {\n-                return items.iterator();\n-            }\n-\n-            @Override\n-            public long size() {\n-                return items.size();\n-            }\n-\n-            @Override\n-            public IModel<T> model(final T object) {\n-                return new CompoundPropertyModel<>(object);\n-            }\n-        };\n-\n-        container.add(new AjaxFallbackDefaultDataTable<>(\n-                \"selectedObjects\",\n-                columns,\n-                dataProvider,\n-                Integer.MAX_VALUE).setMarkupId(\"selectedObjects\").setVisible(!CollectionUtils.isEmpty(items)));\n-\n-        ActionsPanel<Serializable> actionPanel = new ActionsPanel<>(\"actions\", null);\n-        container.add(actionPanel);\n+        setup(items, columns);\n \n         for (ActionLink.ActionType action : actions) {\n             actionPanel.add(new ActionLink<Serializable>() {\n@@ -389,4 +365,67 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n             }, action, null).hideLabel();\n         }\n     }\n+\n+    public BatchContent(\n+            final String id,\n+            final BaseModal<T> modal,\n+            final List<T> items,\n+            final List<IColumn<T, S>> columns,\n+            final Map<String, String> results,\n+            final String keyFieldName,\n+            final AjaxRequestTarget target,\n+            final PageReference pageRef) {\n+\n+        super(id);\n+\n+        List<IColumn<T, S>> newColumnList = new ArrayList<>(columns);\n+        newColumnList.add(newColumnList.size(), new BatchResponseColumn<>(results, keyFieldName));\n+        setup(items, newColumnList);\n+\n+        actionPanel.setEnabled(false);\n+        actionPanel.setVisible(false);\n+        target.add(container);\n+        target.add(actionPanel);\n+\n+        SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+    }\n+\n+    private void setup(\n+            final List<T> items,\n+            final List<IColumn<T, S>> columns) {\n+\n+        container = new WebMarkupContainer(\"container\");\n+        container.setOutputMarkupId(true);\n+        add(container);\n+\n+        dataProvider = new SortableDataProvider<T, S>() {\n+\n+            private static final long serialVersionUID = 5291903859908641954L;\n+\n+            @Override\n+            public Iterator<? extends T> iterator(final long first, final long count) {\n+                return items.iterator();\n+            }\n+\n+            @Override\n+            public long size() {\n+                return items.size();\n+            }\n+\n+            @Override\n+            public IModel<T> model(final T object) {\n+                return new CompoundPropertyModel<>(object);\n+            }\n+        };\n+\n+        container.add(new AjaxFallbackDefaultDataTable<>(\n+                \"selectedObjects\",\n+                columns,\n+                dataProvider,\n+                Integer.MAX_VALUE).setMarkupId(\"selectedObjects\").setVisible(!CollectionUtils.isEmpty(items)));\n+\n+        actionPanel = new ActionsPanel<>(\"actions\", null);\n+        container.add(actionPanel);\n+    }\n }"},{"sha":"706f44f0e8e41205f443b70d11c6b7f1ad258f0d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/batch/BatchModal.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43bd643c7aad250963c1b35062617c9fcb91a559/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43bd643c7aad250963c1b35062617c9fcb91a559/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbatch%2FBatchModal.java?ref=43bd643c7aad250963c1b35062617c9fcb91a559","patch":"@@ -21,11 +21,13 @@\n import java.io.Serializable;\n import java.util.Collection;\n import java.util.List;\n+import java.util.Map;\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n import org.apache.syncope.client.ui.commons.rest.RestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n \n public class BatchModal<T extends Serializable, S> extends AbstractModalPanel<T> {\n@@ -45,4 +47,18 @@ public BatchModal(\n         add(new BatchContent<>(\"content\", modal, items, columns, actions, batchExecutor, keyFieldName).\n                 setRenderBodyOnly(true));\n     }\n+\n+    public BatchModal(\n+            final BaseModal<T> modal,\n+            final PageReference pageRef,\n+            final List<T> items,\n+            final List<IColumn<T, S>> columns,\n+            final Map<String, String> results,\n+            final String keyFieldName,\n+            final AjaxRequestTarget target) {\n+\n+        super(modal, pageRef);\n+        add(new BatchContent<>(\"content\", modal, items, columns, results, keyFieldName, target, pageRef).\n+                setRenderBodyOnly(true));\n+    }\n }"},{"sha":"f820fe1b1ed89c777cb8ea3d5a057241f1d0162e","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java","status":"modified","additions":10,"deletions":9,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43bd643c7aad250963c1b35062617c9fcb91a559/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43bd643c7aad250963c1b35062617c9fcb91a559/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java?ref=43bd643c7aad250963c1b35062617c9fcb91a559","patch":"@@ -23,6 +23,7 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n+import java.util.Optional;\n import org.apache.syncope.client.console.rest.BaseRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.ui.commons.ajax.form.IndicatorAjaxFormChoiceComponentUpdatingBehavior;\n@@ -166,10 +167,12 @@ protected ActionLinksTogglePanel<T> getTogglePanel() {\n         }\n     }\n \n+    protected final BaseModal<T> batchModal;\n+\n     private AjaxDataTablePanel(final String id, final Builder<T, S> builder) {\n         super(id);\n \n-        BaseModal<T> batchModal = new BaseModal<>(\"batchModal\");\n+        batchModal = new BaseModal<>(\"batchModal\");\n         batchModal.size(Modal.Size.Large);\n         add(batchModal);\n \n@@ -186,18 +189,16 @@ public void onClose(final AjaxRequestTarget target) {\n                 data.setRows(builder.rowsPerPage);\n \n                 send(builder.pageRef.getPage(), Broadcast.BREADTH, data);\n-                BasePage page = (BasePage) findPage();\n-                if (page != null) {\n-                    page.getNotificationPanel().refresh(target);\n-                }\n+                Optional.ofNullable((BasePage) findPage()).\n+                        ifPresent(page -> page.getNotificationPanel().refresh(target));\n             }\n         });\n \n         Fragment fragment = new Fragment(\"tablePanel\", \"batchAvailable\", this);\n         add(fragment);\n \n-        Form<T> batchForm = new Form<>(\"groupForm\");\n-        fragment.add(batchForm);\n+        Form<T> groupForm = new Form<>(\"groupForm\");\n+        fragment.add(groupForm);\n \n         group = new CheckGroup<>(\"checkgroup\", model);\n         group.add(new IndicatorAjaxFormChoiceComponentUpdatingBehavior() {\n@@ -212,7 +213,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 });\n             }\n         });\n-        batchForm.add(group);\n+        groupForm.add(group);\n \n         if (builder.checkBoxEnabled) {\n             builder.columns.add(0, new CheckGroupColumn<>(group));\n@@ -239,7 +240,7 @@ protected ActionLinksTogglePanel<T> getTogglePanel() {\n \n         group.add(dataTable);\n \n-        fragment.add(new IndicatingAjaxButton(\"batchLink\", batchForm) {\n+        fragment.add(new IndicatingAjaxButton(\"batchLink\", groupForm) {\n \n             private static final long serialVersionUID = 382302811235019988L;\n "},{"sha":"b491fa67073516d1ce69d218397fe309f3fb3174","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ConfirmBehavior.java","status":"added","additions":69,"deletions":0,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43bd643c7aad250963c1b35062617c9fcb91a559/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FConfirmBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43bd643c7aad250963c1b35062617c9fcb91a559/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FConfirmBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FConfirmBehavior.java?ref=43bd643c7aad250963c1b35062617c9fcb91a559","patch":"@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import static de.agilecoders.wicket.jquery.JQuery.$;\n+\n+import de.agilecoders.wicket.jquery.function.JavaScriptInlineFunction;\n+import java.util.ArrayList;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.behavior.Behavior;\n+import org.apache.wicket.markup.head.IHeaderResponse;\n+import org.apache.wicket.markup.head.JavaScriptHeaderItem;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public class ConfirmBehavior extends Behavior {\n+\n+    private static final long serialVersionUID = 2210125898183667592L;\n+\n+    private final Component parent;\n+\n+    private final String msg;\n+\n+    public ConfirmBehavior(final Component parent, final String msg) {\n+        this.parent = parent;\n+        this.msg = msg;\n+    }\n+\n+    @Override\n+    public void renderHead(final Component component, final IHeaderResponse response) {\n+        super.renderHead(component, response);\n+\n+        response.render(JavaScriptHeaderItem.forScript(\"proceed = false;\", null));\n+        response.render($(parent).on(\"click\",\n+                new JavaScriptInlineFunction(\"\"\n+                        + \"var element = $(this);\"\n+                        + \"evt.preventDefault();\"\n+                        + \"if (proceed == false) {\"\n+                        + \"  evt.stopImmediatePropagation();\"\n+                        + \"  bootbox.confirm('\" + new ResourceModel(msg).getObject() + \"', function(result) {\"\n+                        + \"    if (result == true) {\"\n+                        + \"      proceed = true;\"\n+                        + \"      element.click();\"\n+                        + \"    } else {\"\n+                        + \"      proceed = false;\"\n+                        + \"    }\"\n+                        + \"  return true;\"\n+                        + \"  })\"\n+                        + \"} else {\"\n+                        + \"  proceed = false;\"\n+                        + \"};\", new ArrayList<>()\n+                )).asDomReadyScript());\n+    }\n+}"},{"sha":"d9377e99c4998488223ad9761a44dc32434a9824","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/IndicatingOnConfirmAjaxLink.java","status":"modified","additions":4,"deletions":29,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43bd643c7aad250963c1b35062617c9fcb91a559/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FIndicatingOnConfirmAjaxLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43bd643c7aad250963c1b35062617c9fcb91a559/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FIndicatingOnConfirmAjaxLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FIndicatingOnConfirmAjaxLink.java?ref=43bd643c7aad250963c1b35062617c9fcb91a559","patch":"@@ -18,21 +18,15 @@\n  */\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n-import static de.agilecoders.wicket.jquery.JQuery.$;\n-\n-import de.agilecoders.wicket.jquery.function.JavaScriptInlineFunction;\n-import java.util.ArrayList;\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.markup.head.IHeaderResponse;\n-import org.apache.wicket.markup.head.JavaScriptHeaderItem;\n-import org.apache.wicket.model.ResourceModel;\n \n public abstract class IndicatingOnConfirmAjaxLink<T> extends IndicatingAjaxLink<T> {\n \n     private static final long serialVersionUID = 2228670850922265663L;\n \n-    private final String msg;\n+    private final ConfirmBehavior confirmBehavior;\n \n     private final boolean enabled;\n \n@@ -42,7 +36,8 @@ public IndicatingOnConfirmAjaxLink(final String id, final boolean enabled) {\n \n     public IndicatingOnConfirmAjaxLink(final String id, final String msg, final boolean enabled) {\n         super(id);\n-        this.msg = msg;\n+\n+        this.confirmBehavior = new ConfirmBehavior(this, msg);\n         this.enabled = enabled;\n     }\n \n@@ -51,32 +46,12 @@ public void renderHead(final IHeaderResponse response) {\n         super.renderHead(response);\n \n         if (enabled) {\n-            response.render(JavaScriptHeaderItem.forScript(\"proceed = false;\", null));\n-            response.render($(this).on(\"click\",\n-                    new JavaScriptInlineFunction(\"\"\n-                            + \"var element = $(this);\"\n-                            + \"evt.preventDefault();\"\n-                            + \"if (proceed == false) {\"\n-                            + \"  evt.stopImmediatePropagation();\"\n-                            + \"  bootbox.confirm('\" + new ResourceModel(msg).getObject() + \"', function(result) {\"\n-                            + \"    if (result == true) {\"\n-                            + \"      proceed = true;\"\n-                            + \"      element.click();\"\n-                            + \"    } else {\"\n-                            + \"      proceed = false;\"\n-                            + \"    }\"\n-                            + \"  return true;\"\n-                            + \"  })\"\n-                            + \"} else {\"\n-                            + \"  proceed = false;\"\n-                            + \"};\", new ArrayList<>()\n-                    )).asDomReadyScript());\n+            confirmBehavior.renderHead(this, response);\n         }\n     }\n \n     @Override\n     public String getAjaxIndicatorMarkupId() {\n         return Constants.VEIL_INDICATOR_MARKUP_ID;\n     }\n-\n }"},{"sha":"ba70ebe5447bf885aea73690791a8dae1e78b7b6","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/AjaxDataTablePanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43bd643c7aad250963c1b35062617c9fcb91a559/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43bd643c7aad250963c1b35062617c9fcb91a559/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.html?ref=43bd643c7aad250963c1b35062617c9fcb91a559","patch":"@@ -30,7 +30,7 @@\n       <div class=\"batch\">\n         <div class=\"batchCell\">\n           <a href=\"#\" wicket:id=\"batchLink\">\n-            <i class=\"fas fa-cog\" alt=\"batch icon\"  title=\"Batch\"></i>\n+            <i class=\"fas fa-cog\" alt=\"batch icon\" title=\"Batch\"></i>\n           </a>\n         </div>\n       </div>"},{"sha":"7b76dfc4d1255f67359c747f8e42afac42c7f251","filename":"ext/flowable/client-console/src/main/java/org/apache/syncope/client/console/panels/UserRequestDirectoryPanel.java","status":"modified","additions":41,"deletions":4,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43bd643c7aad250963c1b35062617c9fcb91a559/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserRequestDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43bd643c7aad250963c1b35062617c9fcb91a559/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserRequestDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserRequestDirectoryPanel.java?ref=43bd643c7aad250963c1b35062617c9fcb91a559","patch":"@@ -18,31 +18,37 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.Map;\n+import org.apache.syncope.common.rest.api.service.UserRequestService;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.ui.commons.DirectoryDataProvider;\n+import org.apache.syncope.client.console.batch.BatchModal;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.UserRequestDirectoryPanel.UserRequestProvider;\n import org.apache.syncope.client.console.panels.UserRequestsPanel.UserRequestSearchEvent;\n import org.apache.syncope.client.console.rest.UserRequestRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ConfirmBehavior;\n+import org.apache.syncope.client.lib.batch.BatchRequest;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.UserRequest;\n import org.apache.syncope.common.lib.types.FlowableEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n@@ -58,14 +64,45 @@\n \n     public UserRequestDirectoryPanel(final String id, final PageReference pageRef) {\n         super(id, pageRef, true);\n-        disableCheckBoxes();\n         setFooterVisibility(false);\n-        modal.size(Modal.Size.Large);\n \n         restClient = new UserRequestRestClient();\n \n         initResultTable();\n \n+        IndicatingAjaxButton batchLink = new IndicatingAjaxButton(\"batchLink\", resultTable.group.getForm()) {\n+\n+            private static final long serialVersionUID = 382302811235019988L;\n+\n+            @Override\n+            public void onSubmit(final AjaxRequestTarget target) {\n+                Collection<UserRequest> items = resultTable.group.getModelObject();\n+                if (!items.isEmpty()) {\n+                    BatchRequest batch = SyncopeConsoleSession.get().batch();\n+                    UserRequestService service = batch.getService(UserRequestService.class);\n+                    items.forEach(item -> service.cancelRequest(item.getExecutionId(), null));\n+\n+                    Map<String, String> results = restClient.batch(batch);\n+\n+                    resultTable.batchModal.header(new ResourceModel(\"batch\"));\n+                    resultTable.batchModal.changeCloseButtonLabel(getString(\"cancel\", null, \"Cancel\"), target);\n+\n+                    target.add(resultTable.batchModal.setContent(new BatchModal<>(\n+                            resultTable.batchModal,\n+                            pageRef,\n+                            new ArrayList<>(items),\n+                            getColumns(),\n+                            results,\n+                            \"executionId\",\n+                            target)));\n+\n+                    resultTable.batchModal.show(true);\n+                }\n+            }\n+        };\n+        batchLink.add(new ConfirmBehavior(batchLink, \"confirmDelete\"));\n+        ((WebMarkupContainer) resultTable.get(\"tablePanel\")).addOrReplace(batchLink);\n+\n         MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, RENDER, FlowableEntitlement.USER_REQUEST_LIST);\n     }\n \n@@ -87,7 +124,7 @@ protected List<IColumn<UserRequest, String>> getColumns() {\n \n     @Override\n     public ActionsPanel<UserRequest> getActions(final IModel<UserRequest> model) {\n-        final ActionsPanel<UserRequest> panel = super.getActions(model);\n+        ActionsPanel<UserRequest> panel = super.getActions(model);\n \n         panel.add(new ActionLink<UserRequest>() {\n "},{"sha":"2fd76c1bc423bce1241b8126229fbb3aa9a1cc82","filename":"ext/flowable/client-console/src/main/java/org/apache/syncope/client/console/rest/UserRequestRestClient.java","status":"modified","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/43bd643c7aad250963c1b35062617c9fcb91a559/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRequestRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/43bd643c7aad250963c1b35062617c9fcb91a559/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRequestRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRequestRestClient.java?ref=43bd643c7aad250963c1b35062617c9fcb91a559","patch":"@@ -18,12 +18,20 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.LinkedHashMap;\n import java.util.List;\n+import java.util.Map;\n import java.util.Optional;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.lib.batch.BatchRequest;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.UserRequest;\n import org.apache.syncope.common.lib.to.UserRequestForm;\n+import org.apache.syncope.common.rest.api.batch.BatchRequestItem;\n+import org.apache.syncope.common.rest.api.batch.BatchResponseItem;\n import org.apache.syncope.common.rest.api.beans.UserRequestQuery;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n import org.apache.syncope.common.rest.api.service.UserRequestService;\n@@ -102,4 +110,21 @@ public static UserRequestForm unclaimForm(final String taskKey) {\n     public static void submitForm(final UserRequestForm form) {\n         getService(UserRequestService.class).submitForm(form);\n     }\n+\n+    public static Map<String, String> batch(final BatchRequest batchRequest) {\n+        List<BatchRequestItem> batchRequestItems = new ArrayList<>(batchRequest.getItems());\n+\n+        Map<String, String> result = new LinkedHashMap<>();\n+        try {\n+            List<BatchResponseItem> batchResponseItems = batchRequest.commit().getItems();\n+            for (int i = 0; i < batchResponseItems.size(); i++) {\n+                String status = getStatus(batchResponseItems.get(i).getStatus());\n+                result.put(StringUtils.substringAfterLast(batchRequestItems.get(i).getRequestURI(), \"/\"), status);\n+            }\n+        } catch (IOException e) {\n+            LOG.error(\"While processing Batch response\", e);\n+        }\n+\n+        return result;\n+    }\n }"}]}