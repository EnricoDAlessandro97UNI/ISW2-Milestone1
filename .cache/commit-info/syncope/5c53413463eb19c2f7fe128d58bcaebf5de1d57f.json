{"sha":"5c53413463eb19c2f7fe128d58bcaebf5de1d57f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjVjNTM0MTM0NjNlYjE5YzJmN2ZlMTI4ZDU4YmNhZWJmNWRlMWQ1N2Y=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-02-02T13:31:13Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-02-02T13:31:13Z"},"message":"[SYNCOPE-762] Now always setting last execution date if available, either from Quartz or manual executions","tree":{"sha":"7192a78b77f782ff6c2bb4cb7623c382275526ec","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/7192a78b77f782ff6c2bb4cb7623c382275526ec"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5c53413463eb19c2f7fe128d58bcaebf5de1d57f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5c53413463eb19c2f7fe128d58bcaebf5de1d57f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5c53413463eb19c2f7fe128d58bcaebf5de1d57f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5c53413463eb19c2f7fe128d58bcaebf5de1d57f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"78483975cbea586fe8f5af581a1c69e05709c8bb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/78483975cbea586fe8f5af581a1c69e05709c8bb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/78483975cbea586fe8f5af581a1c69e05709c8bb"}],"stats":{"total":64,"additions":33,"deletions":31},"files":[{"sha":"0207d4999ef281ff0c62272f4a2ffbc153020169","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/ReportDataBinderImpl.java","status":"modified","additions":15,"deletions":20,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5c53413463eb19c2f7fe128d58bcaebf5de1d57f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FReportDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5c53413463eb19c2f7fe128d58bcaebf5de1d57f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FReportDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FReportDataBinderImpl.java?ref=5c53413463eb19c2f7fe128d58bcaebf5de1d57f","patch":"@@ -93,35 +93,30 @@ public ReportTO getReportTO(final Report report) {\n         }\n \n         ReportExec latestExec = reportExecDAO.findLatestStarted(report);\n-        reportTO.setLatestExecStatus(latestExec == null\n-                ? StringUtils.EMPTY\n-                : latestExec.getStatus());\n-\n-        reportTO.setStart(latestExec == null\n-                ? null\n-                : latestExec.getStart());\n-\n-        reportTO.setEnd(latestExec == null\n-                ? null\n-                : latestExec.getEnd());\n+        if (latestExec == null) {\n+            reportTO.setLatestExecStatus(StringUtils.EMPTY);\n+        } else {\n+            reportTO.setLatestExecStatus(latestExec.getStatus());\n+            reportTO.setStart(latestExec.getStart());\n+            reportTO.setEnd(latestExec.getEnd());\n+\n+            reportTO.setLastExec(reportTO.getStart());\n+        }\n \n         for (ReportExec reportExec : report.getExecs()) {\n             reportTO.getExecutions().add(getReportExecTO(reportExec));\n         }\n \n         String triggerName = JobNamer.getTriggerName(JobNamer.getJobName(report));\n-\n-        Trigger trigger;\n         try {\n-            trigger = scheduler.getScheduler().getTrigger(new TriggerKey(triggerName, Scheduler.DEFAULT_GROUP));\n+            Trigger trigger = scheduler.getScheduler().getTrigger(new TriggerKey(triggerName, Scheduler.DEFAULT_GROUP));\n+\n+            if (trigger != null) {\n+                reportTO.setLastExec(trigger.getPreviousFireTime());\n+                reportTO.setNextExec(trigger.getNextFireTime());\n+            }\n         } catch (SchedulerException e) {\n             LOG.warn(\"While trying to get to \" + triggerName, e);\n-            trigger = null;\n-        }\n-\n-        if (trigger != null) {\n-            reportTO.setLastExec(trigger.getPreviousFireTime());\n-            reportTO.setNextExec(trigger.getNextFireTime());\n         }\n \n         return reportTO;"},{"sha":"965e1b6e6a656742457d6a08c53a596858269e1f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/TaskDataBinderImpl.java","status":"modified","additions":15,"deletions":11,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5c53413463eb19c2f7fe128d58bcaebf5de1d57f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5c53413463eb19c2f7fe128d58bcaebf5de1d57f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java?ref=5c53413463eb19c2f7fe128d58bcaebf5de1d57f","patch":"@@ -266,19 +266,19 @@ public TaskExecTO getTaskExecTO(final TaskExec execution) {\n     }\n \n     private void setExecTime(final SchedTaskTO taskTO, final Task task) {\n-        String triggerName = JobNamer.getTriggerName(JobNamer.getJobName(task));\n+        taskTO.setLastExec(taskTO.getStart());\n \n-        Trigger trigger = null;\n+        String triggerName = JobNamer.getTriggerName(JobNamer.getJobName(task));\n         try {\n-            trigger = scheduler.getScheduler().getTrigger(new TriggerKey(triggerName, Scheduler.DEFAULT_GROUP));\n+            Trigger trigger = scheduler.getScheduler().getTrigger(new TriggerKey(triggerName, Scheduler.DEFAULT_GROUP));\n+\n+            if (trigger != null) {\n+                taskTO.setLastExec(trigger.getPreviousFireTime());\n+                taskTO.setNextExec(trigger.getNextFireTime());\n+            }\n         } catch (SchedulerException e) {\n             LOG.warn(\"While trying to get to \" + triggerName, e);\n         }\n-\n-        if (trigger != null) {\n-            taskTO.setLastExec(trigger.getPreviousFireTime());\n-            taskTO.setNextExec(trigger.getNextFireTime());\n-        }\n     }\n \n     @Override\n@@ -287,9 +287,13 @@ public <T extends AbstractTaskTO> T getTaskTO(final Task task, final TaskUtils t\n         BeanUtils.copyProperties(task, taskTO, IGNORE_TASK_PROPERTIES);\n \n         TaskExec latestExec = taskExecDAO.findLatestStarted(task);\n-        taskTO.setLatestExecStatus(latestExec == null ? StringUtils.EMPTY : latestExec.getStatus());\n-        taskTO.setStart(latestExec == null ? null : latestExec.getStart());\n-        taskTO.setEnd(latestExec == null ? null : latestExec.getEnd());\n+        if (latestExec == null) {\n+            taskTO.setLatestExecStatus(StringUtils.EMPTY);\n+        } else {\n+            taskTO.setLatestExecStatus(latestExec.getStatus());\n+            taskTO.setStart(latestExec.getStart());\n+            taskTO.setEnd(latestExec.getEnd());\n+        }\n \n         if (details) {\n             for (TaskExec execution : task.getExecs()) {"},{"sha":"855ce9118b5c68b9edcabcf621cbfedc14d56342","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ReportITCase.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5c53413463eb19c2f7fe128d58bcaebf5de1d57f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5c53413463eb19c2f7fe128d58bcaebf5de1d57f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java?ref=5c53413463eb19c2f7fe128d58bcaebf5de1d57f","patch":"@@ -277,6 +277,9 @@ public void auditReport() throws IOException {\n \n             long execKey = execute(report.getKey());\n             checkExport(execKey, ReportExecExportFormat.XML);\n+\n+            report = reportService.read(report.getKey());\n+            assertNotNull(report.getLastExec());\n         } finally {\n             loggerService.delete(LoggerType.AUDIT, auditLoggerName.toLoggerName());\n         }"}]}