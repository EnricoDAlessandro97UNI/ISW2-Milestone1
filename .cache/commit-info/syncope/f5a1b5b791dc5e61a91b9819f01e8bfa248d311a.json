{"sha":"f5a1b5b791dc5e61a91b9819f01e8bfa248d311a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY1YTFiNWI3OTFkYzVlNjFhOTFiOTgxOWYwMWU4YmZhMjQ4ZDMxMWE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-10-12T13:16:25Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-10-12T13:16:35Z"},"message":"Getting some nice ConnId 1.5 features onboard","tree":{"sha":"42248ef60c425a59b07729efdfcdf6f8810f7e29","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/42248ef60c425a59b07729efdfcdf6f8810f7e29"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f5a1b5b791dc5e61a91b9819f01e8bfa248d311a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f5a1b5b791dc5e61a91b9819f01e8bfa248d311a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f5a1b5b791dc5e61a91b9819f01e8bfa248d311a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f5a1b5b791dc5e61a91b9819f01e8bfa248d311a/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"5ca5439383de631df351c035f4fcdfda5a2d43a7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5ca5439383de631df351c035f4fcdfda5a2d43a7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5ca5439383de631df351c035f4fcdfda5a2d43a7"}],"stats":{"total":43,"additions":30,"deletions":13},"files":[{"sha":"09de13cf892450ff781f6d2c4471cda745986df3","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/Connector.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5a1b5b791dc5e61a91b9819f01e8bfa248d311a/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5a1b5b791dc5e61a91b9819f01e8bfa248d311a/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java?ref=f5a1b5b791dc5e61a91b9819f01e8bfa248d311a","patch":"@@ -199,15 +199,20 @@ SearchResult search(\n     Set<ObjectClassInfo> getObjectClassInfo();\n \n     /**\n-     * Validate a connector instance.\n+     * Validate connector instance.\n      */\n     void validate();\n \n     /**\n-     * Check connection to resource.\n+     * Check connection.\n      */\n     void test();\n \n+    /**\n+     * Dispose of any resources associated with connector instance.\n+     */\n+    void dispose();\n+\n     /**\n      * Getter for active connector instance.\n      *"},{"sha":"44dddaa86b2062e25cb3bef6fc35630a082828b1","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorFacadeProxy.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5a1b5b791dc5e61a91b9819f01e8bfa248d311a/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5a1b5b791dc5e61a91b9819f01e8bfa248d311a/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java?ref=f5a1b5b791dc5e61a91b9819f01e8bfa248d311a","patch":"@@ -94,12 +94,15 @@ public class ConnectorFacadeProxy implements Connector {\n     public ConnectorFacadeProxy(final ConnInstance connInstance) {\n         this.connInstance = connInstance;\n \n-        ConnIdBundleManager connIdBundleManager = ApplicationContextProvider.getBeanFactory().getBean(\n-                ConnIdBundleManager.class);\n+        ConnIdBundleManager connIdBundleManager =\n+                ApplicationContextProvider.getBeanFactory().getBean(ConnIdBundleManager.class);\n         ConnectorInfo info = connIdBundleManager.getConnectorInfo(connInstance).getRight();\n \n         // create default configuration\n         APIConfiguration apiConfig = info.createDefaultAPIConfiguration();\n+        if (connInstance.getDisplayName() != null) {\n+            apiConfig.setInstanceName(connInstance.getDisplayName());\n+        }\n         // enable filtered results handler in validation mode\n         apiConfig.getResultsHandlerConfiguration().setFilteredResultsHandlerInValidationMode(true);\n \n@@ -497,6 +500,11 @@ public SearchResult search(\n         return search(objectClass, filter, handler, builder.build());\n     }\n \n+    @Override\n+    public void dispose() {\n+        connector.dispose();\n+    }\n+\n     @Override\n     public ConnInstance getConnInstance() {\n         return connInstance;"},{"sha":"0d4bcde56c6aa0254cc67d697e7249c5f194b1c8","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorManager.java","status":"modified","additions":13,"deletions":9,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f5a1b5b791dc5e61a91b9819f01e8bfa248d311a/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f5a1b5b791dc5e61a91b9819f01e8bfa248d311a/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorManager.java?ref=f5a1b5b791dc5e61a91b9819f01e8bfa248d311a","patch":"@@ -84,7 +84,7 @@ public Connector getConnector(final ExternalResource resource) {\n             registerConnector(resource);\n         }\n \n-        return (Connector) ApplicationContextProvider.getBeanFactory().getBean(getBeanName(resource));\n+        return ApplicationContextProvider.getBeanFactory().getBean(getBeanName(resource), Connector.class);\n     }\n \n     @Override\n@@ -113,21 +113,21 @@ public ConnInstance buildConnInstanceOverride(\n         Map<String, ConnConfProperty> overridable = new HashMap<>();\n         Set<ConnConfProperty> conf = new HashSet<>();\n \n-        for (ConnConfProperty prop : override.getConf()) {\n+        override.getConf().forEach(prop -> {\n             if (prop.isOverridable()) {\n                 overridable.put(prop.getSchema().getName(), prop);\n             } else {\n                 conf.add(prop);\n             }\n-        }\n+        });\n \n         // add override properties\n-        for (ConnConfProperty prop : confOverride) {\n-            if (overridable.containsKey(prop.getSchema().getName()) && !prop.getValues().isEmpty()) {\n-                conf.add(prop);\n-                overridable.remove(prop.getSchema().getName());\n-            }\n-        }\n+        confOverride.stream().\n+                filter(prop -> overridable.containsKey(prop.getSchema().getName()) && !prop.getValues().isEmpty()).\n+                forEach(prop -> {\n+                    conf.add(prop);\n+                    overridable.remove(prop.getSchema().getName());\n+                });\n \n         // add override properties not substituted\n         conf.addAll(overridable.values());\n@@ -190,6 +190,7 @@ public void load() {\n             LOG.info(\"Registering resource-connector pair {}-{}\", resource, resource.getConnector());\n             try {\n                 registerConnector(resource);\n+\n                 connectors++;\n             } catch (Exception e) {\n                 LOG.error(\"While registering resource-connector pair {}-{}\", resource, resource.getConnector(), e);\n@@ -207,7 +208,10 @@ public void unload() {\n             String beanName = getBeanName(resource);\n             if (ApplicationContextProvider.getBeanFactory().containsSingleton(beanName)) {\n                 LOG.info(\"Unegistering resource-connector pair {}-{}\", resource, resource.getConnector());\n+\n+                getConnector(resource).dispose();\n                 unregisterConnector(beanName);\n+\n                 connectors++;\n             }\n         }"}]}