{"sha":"a6b51b0d0c0252e8ced420920d5aaed8616a9ebd","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmE2YjUxYjBkMGMwMjUyZThjZWQ0MjA5MjBkNWFhZWQ4NjE2YTllYmQ=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-09-17T16:04:21Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-09-17T16:04:21Z"},"message":"[SYNCOPE-156] fix for open items into realm sidebar menu after CRUD operations","tree":{"sha":"21608bcaba684f82deca9fef6b7060632abba829","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/21608bcaba684f82deca9fef6b7060632abba829"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a6b51b0d0c0252e8ced420920d5aaed8616a9ebd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a6b51b0d0c0252e8ced420920d5aaed8616a9ebd","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a6b51b0d0c0252e8ced420920d5aaed8616a9ebd","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a6b51b0d0c0252e8ced420920d5aaed8616a9ebd/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"10299f2c4e12376d1ca9ae700990576a8e15cf08","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/10299f2c4e12376d1ca9ae700990576a8e15cf08","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/10299f2c4e12376d1ca9ae700990576a8e15cf08"}],"stats":{"total":87,"additions":63,"deletions":24},"files":[{"sha":"cb02ca5acc69a9af7023f326277aa371668cce82","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Realms.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a6b51b0d0c0252e8ced420920d5aaed8616a9ebd/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a6b51b0d0c0252e8ced420920d5aaed8616a9ebd/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java?ref=a6b51b0d0c0252e8ced420920d5aaed8616a9ebd","patch":"@@ -91,6 +91,10 @@ public void onClose(final AjaxRequestTarget target) {\n             }\n         });\n \n+        setupDeleteLink();\n+        setupCreateLink();\n+        setupEditLink();\n+\n         updateRealmContent(realmSidebarPanel.getCurrentRealm());\n     }\n \n@@ -106,12 +110,10 @@ public void onEvent(final IEvent<?> event) {\n         }\n     }\n \n-    private void updateRealmContent(final RealmTO realmTO) {\n+    private WebMarkupContainer updateRealmContent(final RealmTO realmTO) {\n         content.addOrReplace(new Label(\"header\", realmTO.getName()));\n         content.addOrReplace(new Realm(\"body\", realmTO, getPageReference()));\n-        setupDeleteLink();\n-        setupCreateLink();\n-        setupEditLink();\n+        return content;\n     }\n \n     private void setupDeleteLink() {\n@@ -132,6 +134,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     realmRestClient.delete(toBeDeleted.getFullPath());\n \n                     target.add(realmSidebarPanel.reloadRealmTree());\n+                    target.add(updateRealmContent(realmSidebarPanel.getCurrentRealm()));\n \n                     info(getString(Constants.OPERATION_SUCCEEDED));\n                     feedbackPanel.refresh(target);"},{"sha":"5d0d7b8d643e7a428aacb530ca0ba0b9b9722d3a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmSidebarPanel.java","status":"modified","additions":54,"deletions":18,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a6b51b0d0c0252e8ced420920d5aaed8616a9ebd/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a6b51b0d0c0252e8ced420920d5aaed8616a9ebd/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.java?ref=a6b51b0d0c0252e8ced420920d5aaed8616a9ebd","patch":"@@ -25,6 +25,8 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.panels.RealmSidebarPanel.ControlSidebarClick;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.wicket.MarkupContainer;\n@@ -53,10 +55,12 @@ public class RealmSidebarPanel extends Panel {\n \n     private final WebMarkupContainer menu;\n \n-    private RealmTO currentRealm;\n+    private List<RealmTO> currentPath;\n \n     private final PageReference pageRef;\n \n+    private Map<Long, Pair<RealmTO, List<RealmTO>>> tree;\n+\n     private boolean reload = false;\n \n     public RealmSidebarPanel(final String id, final PageReference pageRef) {\n@@ -67,12 +71,10 @@ public RealmSidebarPanel(final String id, final PageReference pageRef) {\n         Collections.sort(realms, new RealmNameComparator());\n \n         menu = new WebMarkupContainer(\"menu\");\n-\n         menu.setOutputMarkupId(true);\n         add(menu);\n \n         reloadRealmTree(reloadRealmParentMap(realms), 0L, menu);\n-        setCurrentRealm(realms.get(0));\n     }\n \n     public final RealmSidebarPanel reloadRealmTree() {\n@@ -81,12 +83,20 @@ public final RealmSidebarPanel reloadRealmTree() {\n     }\n \n     private MarkupContainer reloadRealmTree(\n-            final Map<Long, List<RealmTO>> parentMap, final Long key, final MarkupContainer container) {\n+            final Map<Long, Pair<RealmTO, List<RealmTO>>> parentMap, final Long key, final MarkupContainer container) {\n+\n+        // set the current active path base on the current parent map\n+        setCurrentRealm(getCurrentRealm());\n+\n         final RepeatingView listItems = new RepeatingView(\"list\");\n         listItems.setOutputMarkupId(true);\n         container.addOrReplace(listItems);\n \n-        for (final RealmTO realm : parentMap.get(key)) {\n+        if (!parentMap.containsKey(key)) {\n+            return container;\n+        }\n+\n+        for (final RealmTO realm : parentMap.get(key).getRight()) {\n             final Fragment fragment;\n \n             final AjaxLink<Void> link = new AjaxLink<Void>(\"link\") {\n@@ -109,7 +119,7 @@ protected void onComponentTag(final ComponentTag tag) {\n             link.setMarkupId(\"item-\" + realm.getKey());\n             link.addOrReplace(new Label(\"name\", new PropertyModel<String>(realm, \"name\")));\n \n-            if (parentMap.containsKey(realm.getKey()) && !parentMap.get(realm.getKey()).isEmpty()) {\n+            if (parentMap.containsKey(realm.getKey()) && !parentMap.get(realm.getKey()).getRight().isEmpty()) {\n                 fragment = new Fragment(String.valueOf(realm.getKey()), \"withChildren\", RealmSidebarPanel.this);\n \n                 final Link<Void> angle = new Link<Void>(\"angle\") {\n@@ -130,7 +140,12 @@ protected void onComponentTag(final ComponentTag tag) {\n                 angle.setMarkupId(\"angle-\" + realm.getKey());\n                 fragment.addOrReplace(angle);\n \n-                reloadRealmTree(parentMap, realm.getKey(), fragment);\n+                final WebMarkupContainer subtree = new WebMarkupContainer(\"subtree\");\n+                subtree.setOutputMarkupId(true);\n+                subtree.setMarkupId(\"subtree\");\n+                fragment.add(subtree);\n+\n+                reloadRealmTree(parentMap, realm.getKey(), subtree);\n             } else {\n                 fragment = new Fragment(String.valueOf(realm.getKey()), \"withoutChildren\", RealmSidebarPanel.this);\n             }\n@@ -143,24 +158,24 @@ protected void onComponentTag(final ComponentTag tag) {\n         return container;\n     }\n \n-    private Map<Long, List<RealmTO>> reloadRealmParentMap() {\n+    private Map<Long, Pair<RealmTO, List<RealmTO>>> reloadRealmParentMap() {\n         final List<RealmTO> realms = realmRestClient.list();\n         Collections.sort(realms, new RealmNameComparator());\n         return reloadRealmParentMap(realms);\n     }\n \n-    private Map<Long, List<RealmTO>> reloadRealmParentMap(final List<RealmTO> realms) {\n-        final Map<Long, List<RealmTO>> res = new HashMap<>();\n-        res.put(0L, new ArrayList<RealmTO>());\n+    private Map<Long, Pair<RealmTO, List<RealmTO>>> reloadRealmParentMap(final List<RealmTO> realms) {\n+        tree = new HashMap<>();\n+        tree.put(0L, Pair.<RealmTO, List<RealmTO>>of(realms.get(0), new ArrayList<RealmTO>()));\n \n         final Map<Long, List<RealmTO>> cache = new HashMap<>();\n \n         for (RealmTO realm : realms) {\n-            if (res.containsKey(realm.getParent())) {\n-                res.get(realm.getParent()).add(realm);\n+            if (tree.containsKey(realm.getParent())) {\n+                tree.get(realm.getParent()).getRight().add(realm);\n \n                 final List<RealmTO> children = new ArrayList<>();\n-                res.put(realm.getKey(), children);\n+                tree.put(realm.getKey(), Pair.<RealmTO, List<RealmTO>>of(realm, children));\n \n                 if (cache.containsKey(realm.getKey())) {\n                     children.addAll(cache.get(realm.getKey()));\n@@ -175,7 +190,7 @@ private Map<Long, List<RealmTO>> reloadRealmParentMap(final List<RealmTO> realms\n             }\n         }\n \n-        return res;\n+        return tree;\n     }\n \n     private static class RealmNameComparator implements Comparator<RealmTO>, Serializable {\n@@ -196,12 +211,29 @@ public int compare(final RealmTO r1, final RealmTO r2) {\n         }\n     }\n \n-    private void setCurrentRealm(final RealmTO realmTO) {\n-        this.currentRealm = realmTO;\n+    public final void setCurrentRealm(final RealmTO realmTO) {\n+        RealmTO realm;\n+\n+        if (tree.containsKey(realmTO.getKey())) {\n+            realm = realmTO;\n+        } else if (tree.containsKey(realmTO.getParent())) {\n+            realm = tree.get(realmTO.getParent()).getLeft();\n+        } else {\n+            realm = tree.get(0L).getLeft();\n+        }\n+\n+        this.currentPath = new ArrayList<>();\n+        this.currentPath.add(realm);\n+\n+        while (realm.getParent() != 0L) {\n+            realm = tree.get(realm.getParent()).getLeft();\n+            this.currentPath.add(realm);\n+        }\n     }\n \n     public RealmTO getCurrentRealm() {\n-        return this.currentRealm;\n+        return this.currentPath == null || this.currentPath.isEmpty()\n+                ? tree.get(0L).getLeft() : this.currentPath.get(0);\n     }\n \n     public static class ControlSidebarClick<T> {\n@@ -228,6 +260,10 @@ public AjaxRequestTarget getTarget() {\n     public void renderHead(final IHeaderResponse response) {\n         if (reload) {\n             response.render(OnLoadHeaderItem.forScript(\"$.AdminLTE.tree('.syncopeSidebar');\"));\n+\n+            for (RealmTO realm : this.currentPath.subList(1, this.currentPath.size())) {\n+                response.render(OnLoadHeaderItem.forScript(String.format(\"$('#angle-%d').click();\", realm.getKey())));\n+            }\n         } else {\n             reload = true;\n         }"},{"sha":"2faedc9447830c475b53e9c2cf87f465e8220d7d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmSidebarPanel.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a6b51b0d0c0252e8ced420920d5aaed8616a9ebd/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a6b51b0d0c0252e8ced420920d5aaed8616a9ebd/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.html?ref=a6b51b0d0c0252e8ced420920d5aaed8616a9ebd","patch":"@@ -26,7 +26,7 @@\n         </ul>\n       </section>\n     </aside>\n-    <div  id=\"control\" name=\"control\" class=\"control-sidebar-bg inner-control-sidebar\"></div>\n+    <div id=\"control\" name=\"control\" class=\"control-sidebar-bg inner-control-sidebar\"></div>\n \n     <wicket:fragment wicket:id=\"withChildren\">\n       <li id=\"treeview\" name=\"treeview\" class=\"treeview\">\n@@ -36,7 +36,7 @@\n         <a href=\"#\" class=\"angle\" wicket:id=\"angle\">\n           <i class=\"fa fa-angle-left pull-right\"></i>\n         </a>\n-        <ul id=\"subtree\" name=\"subtree\" class=\"treeview-menu\">\n+        <ul wicket:id=\"subtree\" name=\"subtree\" class=\"treeview-menu\">\n           <wicket:container wicket:id=\"list\"></wicket:container>\n         </ul>\n       </li>"}]}