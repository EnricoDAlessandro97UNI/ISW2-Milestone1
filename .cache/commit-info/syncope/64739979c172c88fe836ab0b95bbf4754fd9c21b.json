{"sha":"64739979c172c88fe836ab0b95bbf4754fd9c21b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjY0NzM5OTc5YzE3MmM4OGZlODM2YWIwYjk1YmJmNDc1NGZkOWMyMWI=","commit":{"author":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-30T16:48:32Z"},"committer":{"name":"Christian Schneider","email":"cschneider@apache.org","date":"2013-01-30T16:48:32Z"},"message":"SYNCOPE-231 Refactored AuthenticationTestITCase\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1440514 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"69b4bb140070b73f32b800e8cf949c7b13bfb7ed","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/69b4bb140070b73f32b800e8cf949c7b13bfb7ed"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/64739979c172c88fe836ab0b95bbf4754fd9c21b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/64739979c172c88fe836ab0b95bbf4754fd9c21b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/64739979c172c88fe836ab0b95bbf4754fd9c21b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/64739979c172c88fe836ab0b95bbf4754fd9c21b/comments","author":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"committer":{"login":"cschneider","id":484584,"node_id":"MDQ6VXNlcjQ4NDU4NA==","avatar_url":"https://avatars.githubusercontent.com/u/484584?v=4","gravatar_id":"","url":"https://api.github.com/users/cschneider","html_url":"https://github.com/cschneider","followers_url":"https://api.github.com/users/cschneider/followers","following_url":"https://api.github.com/users/cschneider/following{/other_user}","gists_url":"https://api.github.com/users/cschneider/gists{/gist_id}","starred_url":"https://api.github.com/users/cschneider/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cschneider/subscriptions","organizations_url":"https://api.github.com/users/cschneider/orgs","repos_url":"https://api.github.com/users/cschneider/repos","events_url":"https://api.github.com/users/cschneider/events{/privacy}","received_events_url":"https://api.github.com/users/cschneider/received_events","type":"User","site_admin":false},"parents":[{"sha":"97f33f4816c19870a2ccd83ac9b4e935d59c4447","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/97f33f4816c19870a2ccd83ac9b4e935d59c4447","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/97f33f4816c19870a2ccd83ac9b4e935d59c4447"}],"stats":{"total":138,"additions":32,"deletions":106},"files":[{"sha":"6cd26de160cb536b82b5990eb94ff3a54663321d","filename":"core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java","status":"modified","additions":32,"deletions":106,"changes":138,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/64739979c172c88fe836ab0b95bbf4754fd9c21b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/64739979c172c88fe836ab0b95bbf4754fd9c21b/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java?ref=64739979c172c88fe836ab0b95bbf4754fd9c21b","patch":"@@ -232,52 +232,22 @@ public void checkFailedLogins() {\n \n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n+        long userId = userTO.getId();\n \n         UserService userService2 = setupCredentials(userService, UserService.class, userTO.getUsername(), \"password123\");\n-\n-        UserTO readUserTO = userService2.read(userTO.getId());\n-\n-        assertNotNull(readUserTO);\n-        assertNotNull(readUserTO.getFailedLogins());\n-        assertEquals(Integer.valueOf(0), readUserTO.getFailedLogins());\n+        assertEquals(0, getFailedLogins(userService2, userId));\n \n         // authentications failed ...\n-\n         UserService userService3 = setupCredentials(userService, UserService.class, userTO.getUsername(), \"wrongpwd1\");\n-\n-        Throwable t = null;\n-\n-        try {\n-            userService3.read(userTO.getId());\n-            assertNotNull(readUserTO);\n-        } catch (Exception e) {\n-            t = e;\n-        }\n-\n-        assertNotNull(t);\n-        t = null;\n-\n-        try {\n-            userService3.read(userTO.getId());\n-            assertNotNull(readUserTO);\n-        } catch (Exception e) {\n-            t = e;\n-        }\n+        assertReadFails(userService3, userId);\n+        assertReadFails(userService3, userId);\n \n         // reset admin credentials for restTemplate\n         super.resetRestTemplate();\n-\n-        readUserTO = userService.read(userTO.getId());\n-        assertNotNull(readUserTO);\n-        assertNotNull(readUserTO.getFailedLogins());\n-        assertEquals(Integer.valueOf(2), readUserTO.getFailedLogins());\n+        assertEquals(2, getFailedLogins(userService, userId));\n \n         UserService userService4 = setupCredentials(userService, UserService.class, userTO.getUsername(), \"password123\");\n-\n-        readUserTO = userService4.read(userTO.getId());\n-        assertNotNull(readUserTO);\n-        assertNotNull(readUserTO.getFailedLogins());\n-        assertEquals(Integer.valueOf(0), readUserTO.getFailedLogins());\n+        assertEquals(0, getFailedLogins(userService4, userId));\n     }\n \n     @Test\n@@ -293,71 +263,26 @@ public void checkUserSuspension() {\n         userTO.addMembership(membershipTO);\n \n         userTO = createUser(userTO);\n+        long userId = userTO.getId();\n         assertNotNull(userTO);\n \n         UserService userService2 = setupCredentials(userService, UserService.class, userTO.getUsername(), \"password123\");\n-\n-        userTO = userService2.read(userTO.getId());\n-\n-        assertNotNull(userTO);\n-        assertNotNull(userTO.getFailedLogins());\n-        assertEquals(Integer.valueOf(0), userTO.getFailedLogins());\n+        assertEquals(0, getFailedLogins(userService2, userId));\n \n         // authentications failed ...\n-\n         UserService userService3 = setupCredentials(userService, UserService.class, userTO.getUsername(), \"wrongpwd1\");\n-\n-        Throwable t = null;\n-\n-        try {\n-            userService3.read(userTO.getId());\n-            fail();\n-        } catch (Exception e) {\n-            t = e;\n-        }\n-\n-        assertNotNull(t);\n-        t = null;\n-\n-        try {\n-            userService3.read(userTO.getId());\n-        } catch (Exception e) {\n-            t = e;\n-        }\n-\n-        assertNotNull(t);\n-        t = null;\n-\n-        try {\n-            userService3.read(userTO.getId());\n-        } catch (Exception e) {\n-            t = e;\n-        }\n-\n-        assertNotNull(t);\n-        t = null;\n+        assertReadFails(userService3, userId);\n+        assertReadFails(userService3, userId);\n+        assertReadFails(userService3, userId);\n \n         // reset admin credentials for restTemplate\n         super.resetRestTemplate();\n-\n-        userTO = userService.read(userTO.getId());\n-\n-        assertNotNull(userTO);\n-        assertNotNull(userTO.getFailedLogins());\n-        assertEquals(Integer.valueOf(3), userTO.getFailedLogins());\n+        assertEquals(3, getFailedLogins(userService, userId));\n \n         // last authentication before suspension\n         // TODO remove after CXF migration is complete\n         userService3 = setupCredentials(userService, UserService.class, userTO.getUsername(), \"wrongpwd1\");\n-\n-        try {\n-            userService3.read(userTO.getId());\n-        } catch (Exception e) {\n-            t = e;\n-        }\n-\n-        assertNotNull(t);\n-        t = null;\n+        assertReadFails(userService3, userId);\n \n         // reset admin credentials for restTemplate\n         super.resetRestTemplate();\n@@ -369,35 +294,20 @@ public void checkUserSuspension() {\n         assertEquals(Integer.valueOf(3), userTO.getFailedLogins());\n         assertEquals(\"suspended\", userTO.getStatus());\n \n-        // check for authentication\n+        // Access with correct credentials should fail as user is suspended\n         // TODO remove after CXF migration is complete\n         userService2 = setupCredentials(userService, UserService.class, userTO.getUsername(), \"password123\");\n-\n-        try {\n-            userService2.read(userTO.getId());\n-            assertNotNull(userTO);\n-        } catch (Exception e) {\n-            t = e;\n-        }\n-\n-        assertNotNull(t);\n-        t = null;\n+        assertReadFails(userService2, userId);\n \n         // reset admin credentials for restTemplate\n         super.resetRestTemplate();\n-\n         userTO = userService.reactivate(userTO.getId());\n-\n         assertNotNull(userTO);\n         assertEquals(\"active\", userTO.getStatus());\n \n         // TODO remove after CXF migration is complete\n         userService2 = setupCredentials(userService, UserService.class, userTO.getUsername(), \"password123\");\n-\n-        userTO = userService2.read(userTO.getId());\n-\n-        assertNotNull(userTO);\n-        assertEquals(Integer.valueOf(0), userTO.getFailedLogins());\n+        assertEquals(0, getFailedLogins(userService2, userId));\n     }\n \n     @Test\n@@ -445,4 +355,20 @@ public void issueSYNCOPE48() {\n         role1User = response.readEntity(UserTO.class);\n         assertNotNull(role1User);\n     }\n+    \n+    private int getFailedLogins(UserService testUserService, long userId) {\n+        UserTO readUserTO = testUserService.read(userId);\n+        assertNotNull(readUserTO);\n+        assertNotNull(readUserTO.getFailedLogins());\n+        return readUserTO.getFailedLogins();\n+    }\n+\n+    private void assertReadFails(UserService userService, long id) {\n+        try {\n+            userService.read(id);\n+            fail(\"access should not work\");\n+        } catch (Exception e) {\n+            assertNotNull(e);\n+        }\n+    }\n }"}]}