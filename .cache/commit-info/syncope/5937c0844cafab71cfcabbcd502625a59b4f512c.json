{"sha":"5937c0844cafab71cfcabbcd502625a59b4f512c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjU5MzdjMDg0NGNhZmFiNzFjZmNhYmJjZDUwMjYyNWE1OWI0ZjUxMmM=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2018-11-12T16:30:17Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2018-11-12T16:30:57Z"},"message":"Added Active Directory pull actions","tree":{"sha":"3066b6eb031c36ab1d1b6a71a7705db2a0cdb564","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3066b6eb031c36ab1d1b6a71a7705db2a0cdb564"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5937c0844cafab71cfcabbcd502625a59b4f512c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5937c0844cafab71cfcabbcd502625a59b4f512c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5937c0844cafab71cfcabbcd502625a59b4f512c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5937c0844cafab71cfcabbcd502625a59b4f512c/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"65756405fe897eb8c0a35db2e1473bd7fb0cecdf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/65756405fe897eb8c0a35db2e1473bd7fb0cecdf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/65756405fe897eb8c0a35db2e1473bd7fb0cecdf"}],"stats":{"total":51,"additions":51,"deletions":0},"files":[{"sha":"db1b6ac808757b691d12b780eee09c7f5e06dc9c","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/ADMembershipPullActions.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5937c0844cafab71cfcabbcd502625a59b4f512c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FADMembershipPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5937c0844cafab71cfcabbcd502625a59b4f512c/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FADMembershipPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FADMembershipPullActions.java?ref=5937c0844cafab71cfcabbcd502625a59b4f512c","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java.pushpull;\n+\n+import java.util.Optional;\n+import org.apache.syncope.common.lib.types.ConnConfProperty;\n+import org.apache.syncope.core.provisioning.api.Connector;\n+\n+/**\n+ * Simple action for pulling Active Directory groups memberships to Syncope group memberships, when the same resource is\n+ * configured for both users and groups.\n+ *\n+ * @see org.apache.syncope.core.provisioning.java.propagation.LDAPMembershipPropagationActions\n+ */\n+public class ADMembershipPullActions extends LDAPMembershipPullActions {\n+\n+    /**\n+     * Allows easy subclassing for the ConnId AD connector bundle.\n+     *\n+     * @param connector A Connector instance to query for the groupMemberAttribute property name\n+     * @return the name of the attribute used to keep track of group memberships\n+     */\n+    @Override\n+    protected String getGroupMembershipAttrName(final Connector connector) {\n+        Optional<ConnConfProperty> groupMembership = connector.getConnInstance().getConf().stream().\n+                filter(property -> \"groupMemberReferenceAttribute\".equals(property.getSchema().getName())\n+                && !property.getValues().isEmpty()).\n+                findFirst();\n+\n+        return groupMembership.isPresent()\n+                ? (String) groupMembership.get().getValues().get(0)\n+                : \"member\";\n+    }\n+\n+}"}]}