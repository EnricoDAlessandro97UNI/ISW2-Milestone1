{"sha":"62193429f899535bbd55490f1d38a41e4ffbb7ac","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjYyMTkzNDI5Zjg5OTUzNWJiZDU1NDkwZjFkMzhhNDFlNGZmYmI3YWM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-05-06T08:37:42Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-05-06T08:37:42Z"},"message":"[SYNCOPE-657] Checkstyle enabled in all profiles but skipTests","tree":{"sha":"9d5d96baea9943c96d06bf1efafefe3956b4beb2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/9d5d96baea9943c96d06bf1efafefe3956b4beb2"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/62193429f899535bbd55490f1d38a41e4ffbb7ac","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/62193429f899535bbd55490f1d38a41e4ffbb7ac","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/62193429f899535bbd55490f1d38a41e4ffbb7ac","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/62193429f899535bbd55490f1d38a41e4ffbb7ac/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"3fc2f962b2ef8c511dc4defa585e3614730ad69c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3fc2f962b2ef8c511dc4defa585e3614730ad69c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3fc2f962b2ef8c511dc4defa585e3614730ad69c"}],"stats":{"total":1534,"additions":661,"deletions":873},"files":[{"sha":"451ae8f736dac8f39e5d0133fda4d022ccb47c68","filename":"archetype/pom.xml","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/archetype%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/archetype%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -33,6 +33,10 @@ under the License.\n   <artifactId>syncope-archetype</artifactId>\n   <packaging>maven-archetype</packaging>\n \n+  <properties>\n+    <rootpom.basedir>${basedir}/..</rootpom.basedir>\n+  </properties>\n+\n   <build>\n     <extensions>\n       <extension>\n@@ -102,10 +106,9 @@ under the License.\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n-      </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n+        <configuration>\n+          <resourceIncludes>src/main/resources/**/*.properties</resourceIncludes>\n+        </configuration>\n       </plugin>\n     </plugins>\n "},{"sha":"36ee45236d03bc977b3aaac5acb6ccec44131c6d","filename":"client/cli/pom.xml","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fcli%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fcli%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -35,6 +35,10 @@ under the License.\n   <artifactId>syncope-client-cli</artifactId>\n   <packaging>jar</packaging>\n \n+  <properties>\n+    <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n+  </properties>\n+  \n   <dependencies>\n     <dependency>\n       <groupId>com.beust</groupId>\n@@ -145,10 +149,9 @@ under the License.\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n-      </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n+        <configuration>\n+          <resourceIncludes>src/main/resources/**/*.properties</resourceIncludes>\n+        </configuration>\n       </plugin>\n     </plugins>\n      "},{"sha":"c7e94ffa9c28e88bc6013e9a056ac62ac05f34f5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/SyncopeAdm.java","status":"modified","additions":31,"deletions":27,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -28,11 +28,11 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class SyncopeAdm {\n+public final class SyncopeAdm {\n \n     private static final Logger LOG = LoggerFactory.getLogger(SyncopeAdm.class);\n \n-    private static final String helpMessage = \"Usage: Main [options]\\n\"\n+    private static final String HELP_MESSAGE = \"Usage: Main [options]\\n\"\n             + \"  Options:\\n\"\n             + \"    logger --help \\n\"\n             + \"    config --help \\n\"\n@@ -41,17 +41,17 @@ public class SyncopeAdm {\n             + \"    policy --help \\n\"\n             + \"    entitlement --help \\n\";\n \n-    private static final JCommander jcommander = new JCommander();\n+    private static final JCommander JCOMMANDER = new JCommander();\n \n-    private static LoggerCommand loggerCommand;\n+    private static LoggerCommand LOGGER_COMMAND;\n \n-    private static ConfigurationCommand configurationCommand;\n+    private static ConfigurationCommand CONFIGURATION_COMMAND;\n \n-    private static NotificationCommand notificationCommand;\n+    private static NotificationCommand NOTIFICATION_COMMAND;\n \n-    private static ReportCommand reportCommand;\n+    private static ReportCommand REPORT_COMMAND;\n \n-    private static PolicyCommand policyCommand;\n+    private static PolicyCommand POLICY_COMMAND;\n \n     public static void main(final String[] args) {\n         LOG.debug(\"Starting with args \\n\");\n@@ -63,12 +63,12 @@ public static void main(final String[] args) {\n         instantiateCommands();\n \n         if (args.length == 0) {\n-            System.out.println(helpMessage);\n+            System.out.println(HELP_MESSAGE);\n         } else {\n             try {\n-                jcommander.parse(args);\n+                JCOMMANDER.parse(args);\n             } catch (final ParameterException ioe) {\n-                System.out.println(helpMessage);\n+                System.out.println(HELP_MESSAGE);\n                 LOG.error(\"Parameter exception\", ioe);\n             }\n             executeCommand();\n@@ -78,38 +78,42 @@ public static void main(final String[] args) {\n \n     private static void instantiateCommands() {\n         LOG.debug(\"Init JCommander\");\n-        loggerCommand = new LoggerCommand();\n-        jcommander.addCommand(loggerCommand);\n+        LOGGER_COMMAND = new LoggerCommand();\n+        JCOMMANDER.addCommand(LOGGER_COMMAND);\n         LOG.debug(\"Added LoggerCommand\");\n-        configurationCommand = new ConfigurationCommand();\n-        jcommander.addCommand(configurationCommand);\n+        CONFIGURATION_COMMAND = new ConfigurationCommand();\n+        JCOMMANDER.addCommand(CONFIGURATION_COMMAND);\n         LOG.debug(\"Added ConfigurationCommand\");\n-        notificationCommand = new NotificationCommand();\n-        jcommander.addCommand(notificationCommand);\n+        NOTIFICATION_COMMAND = new NotificationCommand();\n+        JCOMMANDER.addCommand(NOTIFICATION_COMMAND);\n         LOG.debug(\"Added NotificationCommand\");\n-        reportCommand = new ReportCommand();\n-        jcommander.addCommand(reportCommand);\n+        REPORT_COMMAND = new ReportCommand();\n+        JCOMMANDER.addCommand(REPORT_COMMAND);\n         LOG.debug(\"Added ReportCommand\");\n-        policyCommand = new PolicyCommand();\n-        jcommander.addCommand(policyCommand);\n+        POLICY_COMMAND = new PolicyCommand();\n+        JCOMMANDER.addCommand(POLICY_COMMAND);\n         LOG.debug(\"Added PolicyCommand\");\n     }\n \n     private static void executeCommand() {\n-        final String command = jcommander.getParsedCommand();\n+        final String command = JCOMMANDER.getParsedCommand();\n \n         LOG.debug(\"Called command {}\", command);\n \n         if (\"logger\".equalsIgnoreCase(command)) {\n-            loggerCommand.execute();\n+            LOGGER_COMMAND.execute();\n         } else if (\"config\".equalsIgnoreCase(command)) {\n-            configurationCommand.execute();\n+            CONFIGURATION_COMMAND.execute();\n         } else if (\"notification\".equalsIgnoreCase(command)) {\n-            notificationCommand.execute();\n+            NOTIFICATION_COMMAND.execute();\n         } else if (\"report\".equalsIgnoreCase(command)) {\n-            reportCommand.execute();\n+            REPORT_COMMAND.execute();\n         } else if (\"policy\".equalsIgnoreCase(command)) {\n-            policyCommand.execute();\n+            POLICY_COMMAND.execute();\n         }\n     }\n+\n+    private SyncopeAdm() {\n+        // private constructor for static utility class\n+    }\n }"},{"sha":"cde37b833a6836a7f5550c2de060bbba078fab7c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/SyncopeServices.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeServices.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeServices.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeServices.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -28,7 +28,7 @@ public final class SyncopeServices {\n \n     private static final Logger LOG = LoggerFactory.getLogger(SyncopeServices.class);\n \n-    private final static ResourceBundle SYNCOPE_PROPS = ResourceBundle.getBundle(\"syncope\");\n+    private static final ResourceBundle SYNCOPE_PROPS = ResourceBundle.getBundle(\"syncope\");\n \n     private static final SyncopeClient CLIENT = new SyncopeClientFactoryBean()\n             .setAddress(SYNCOPE_PROPS.getString(\"syncope.rest.services\"))"},{"sha":"54eea17364e8aee699e1f04d7d34a20190d90c6a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/ConfigurationCommand.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FConfigurationCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FConfigurationCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FConfigurationCommand.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -30,7 +30,7 @@\n import javax.xml.transform.TransformerException;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.client.cli.util.XmlUtils;\n+import org.apache.syncope.client.cli.util.XMLUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.ConfTO;\n@@ -69,25 +69,25 @@ public class ConfigurationCommand extends AbstractCommand {\n             + \"       Syntax: -e={WHERE-DIR} \\n\";\n \n     @Parameter(names = { \"-r\", \"--read\" })\n-    public String confNameToRead;\n+    private String confNameToRead;\n \n     @DynamicParameter(names = { \"-u\", \"--update\" })\n-    private final Map<String, String> updateConf = new HashMap<String, String>();\n+    private final Map<String, String> updateConf = new HashMap<>();\n \n     @DynamicParameter(names = { \"-c\", \"--create\" })\n-    private final Map<String, String> createConf = new HashMap<String, String>();\n+    private final Map<String, String> createConf = new HashMap<>();\n \n     @Parameter(names = { \"-d\", \"--delete\" })\n-    public String confNameToDelete;\n+    private String confNameToDelete;\n \n     @Parameter(names = { \"-v\", \"--validators\" })\n-    public boolean validators = false;\n+    private boolean validators = false;\n \n     @Parameter(names = { \"-mt\", \"--mail-templates\" })\n-    public boolean mailTemplates = false;\n+    private boolean mailTemplates = false;\n \n     @Parameter(names = { \"-e\", \"--export\" })\n-    public String export;\n+    private String export;\n \n     @Override\n     public void execute() {\n@@ -179,7 +179,7 @@ public void execute() {\n             LOG.debug(\"- configuration export command, directory where xml will be export: {}\", export);\n \n             try {\n-                XmlUtils.createXMLFile((SequenceInputStream) configurationService.export().getEntity(), export\n+                XMLUtils.createXMLFile((SequenceInputStream) configurationService.export().getEntity(), export\n                         + EXPORT_FILE_NAME);\n                 System.out.println(\" - \" + export + EXPORT_FILE_NAME + \" successfully created\");\n             } catch (final IOException ex) {"},{"sha":"bbb826ae843960f12920bd8ce49b48e1792a258e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/LoggerCommand.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FLoggerCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FLoggerCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FLoggerCommand.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -58,19 +58,19 @@ public class LoggerCommand extends AbstractCommand {\n             + \"       Syntax: -d={LOG-NAME}\";\n \n     @Parameter(names = { \"-r\", \"--read\" })\n-    public String logNameToRead;\n+    private String logNameToRead;\n \n     @DynamicParameter(names = { \"-u\", \"--update\" })\n     private final Map<String, String> updateLogs = new HashMap<String, String>();\n \n     @Parameter(names = { \"-ua\", \"--update-all\" })\n-    public String logLevel;\n+    private String logLevel;\n \n     @DynamicParameter(names = { \"-c\", \"--create\" })\n     private final Map<String, String> createLogs = new HashMap<String, String>();\n \n     @Parameter(names = { \"-d\", \"--delete\" })\n-    public String logNameToDelete;\n+    private String logNameToDelete;\n \n     @Override\n     public void execute() {"},{"sha":"473ebdc036402aa8996d93d26c7ad7c9ec76de78","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/NotificationCommand.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FNotificationCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FNotificationCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FNotificationCommand.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -46,10 +46,10 @@ public class NotificationCommand extends AbstractCommand {\n             + \"       Syntax: -d={NOTIFICATION-ID}\";\n \n     @Parameter(names = { \"-r\", \"--read\" })\n-    public Long notificationIdToRead = -1L;\n+    private Long notificationIdToRead = -1L;\n \n     @Parameter(names = { \"-d\", \"--delete\" })\n-    public Long notificationIdToDelete = -1L;\n+    private Long notificationIdToDelete = -1L;\n \n     @Override\n     public void execute() {"},{"sha":"6ea0d3328838772c1d709c67188904386230a289","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/PolicyCommand.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FPolicyCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FPolicyCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FPolicyCommand.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -50,13 +50,13 @@ public class PolicyCommand extends AbstractCommand {\n             + \"       Syntax: -d={POLICY-ID}\";\n \n     @Parameter(names = { \"-ll\", \"--list-policy\" })\n-    public String policyType;\n+    private String policyType;\n \n     @Parameter(names = { \"-r\", \"--read\" })\n-    public Long policyIdToRead = -1L;\n+    private Long policyIdToRead = -1L;\n \n     @Parameter(names = { \"-d\", \"--delete\" })\n-    public Long policyIdToDelete = -1L;\n+    private Long policyIdToDelete = -1L;\n \n     @Override\n     public void execute() {\n@@ -67,7 +67,7 @@ public void execute() {\n             LOG.debug(\"- policy help command\");\n             System.out.println(helpMessage);\n         } else if (list) {\n-\n+            // do nothing for the moment...\n         } else if (StringUtils.isNotBlank(policyType)) {\n             LOG.debug(\"- policy list command for type {}\", policyType);\n             try {"},{"sha":"2c4dba0c3d56021c2de6e25cd44aa5703e5793d3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/ReportCommand.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FReportCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FReportCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FReportCommand.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -27,7 +27,7 @@\n import javax.xml.transform.TransformerConfigurationException;\n import javax.xml.transform.TransformerException;\n import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.client.cli.util.XmlUtils;\n+import org.apache.syncope.client.cli.util.XMLUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ReportExecTO;\n@@ -67,25 +67,25 @@ public class ReportCommand extends AbstractCommand {\n             + \"    -rc, --reportlet-class\";\n \n     @Parameter(names = { \"-r\", \"--read\" })\n-    public Long reportIdToRead = -1L;\n+    private Long reportIdToRead = -1L;\n \n     @Parameter(names = { \"-d\", \"--delete\" })\n-    public Long reportIdToDelete = -1L;\n+    private Long reportIdToDelete = -1L;\n \n     @Parameter(names = { \"-e\", \"--execute\" })\n-    public Long reportIdToExecute = -1L;\n+    private Long reportIdToExecute = -1L;\n \n     @Parameter(names = { \"-re\", \"--read-execution\" })\n-    public Long executionIdToRead = -1L;\n+    private Long executionIdToRead = -1L;\n \n     @Parameter(names = { \"-de\", \"--delete-execution\" })\n-    public Long executionIdToDelete = -1L;\n+    private Long executionIdToDelete = -1L;\n \n     @Parameter(names = { \"-eer\", \"--export-execution-result\" })\n-    public Long exportId = -1L;\n+    private Long exportId = -1L;\n \n     @Parameter(names = { \"-rc\", \"--reportlet-class\" })\n-    public boolean reportletClass = false;\n+    private boolean reportletClass = false;\n \n     @Override\n     public void execute() {\n@@ -154,7 +154,7 @@ public void execute() {\n             LOG.debug(\"- report export command for report: {}\", exportId);\n \n             try {\n-                XmlUtils.createXMLFile((SequenceInputStream) reportService.exportExecutionResult(exportId,\n+                XMLUtils.createXMLFile((SequenceInputStream) reportService.exportExecutionResult(exportId,\n                         ReportExecExportFormat.XML).getEntity(), \"export_\" + exportId + \".xml\");\n                 System.out.println(\" - \" + \"export_\" + exportId + \" successfully created\");\n             } catch (final IOException ex) {"},{"sha":"eb4f67a53775646dba17b395bcd610aaf35dac78","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/util/XMLUtils.java","status":"renamed","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FXMLUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FXMLUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Futil%2FXMLUtils.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -24,7 +24,6 @@\n import java.io.StringReader;\n import javax.xml.parsers.DocumentBuilderFactory;\n import javax.xml.parsers.ParserConfigurationException;\n-import javax.xml.transform.TransformerConfigurationException;\n import javax.xml.transform.TransformerException;\n import javax.xml.transform.TransformerFactory;\n import javax.xml.transform.dom.DOMSource;\n@@ -33,15 +32,18 @@\n import org.xml.sax.InputSource;\n import org.xml.sax.SAXException;\n \n-public class XmlUtils {\n+public final class XMLUtils {\n \n     public static void createXMLFile(final SequenceInputStream sis, final String filePath)\n-            throws TransformerConfigurationException, TransformerException, SAXException, IOException,\n-            ParserConfigurationException {\n+            throws TransformerException, SAXException, IOException, ParserConfigurationException {\n \n         TransformerFactory.newInstance().newTransformer()\n                 .transform(new DOMSource(DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(\n                                         new InputSource(new StringReader(IOUtils.toString(sis))))),\n                         new StreamResult(new File(filePath)));\n     }\n+\n+    private XMLUtils() {\n+        // private constructor for static utility class\n+    }\n }","previous_filename":"client/cli/src/main/java/org/apache/syncope/client/cli/util/XmlUtils.java"},{"sha":"1ce85f8dc38901fc3d56f984d305c7e6b30b1a43","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/validators/DebugLevelValidator.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fvalidators%2FDebugLevelValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fvalidators%2FDebugLevelValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fvalidators%2FDebugLevelValidator.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -19,12 +19,11 @@\n package org.apache.syncope.client.cli.validators;\n \n import com.beust.jcommander.IParameterValidator;\n-import com.beust.jcommander.ParameterException;\n \n public class DebugLevelValidator implements IParameterValidator {\n \n     @Override\n-    public void validate(final String name, final String value) throws ParameterException {\n+    public void validate(final String name, final String value) {\n         if (!Levels.contains(value)) {\n             final StringBuilder exceptionMessage = new StringBuilder();\n             exceptionMessage.append(\"Parameter \")"},{"sha":"a558d309f0390823fb5851260aedc2138435a513","filename":"client/console/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -118,10 +118,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n     \n     <resources>"},{"sha":"d62996934a8a44ca3f0fd9e8983ad76a6726cd09","filename":"client/console/src/main/java/org/apache/syncope/client/console/annotations/BinaryPreview.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fannotations%2FBinaryPreview.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fannotations%2FBinaryPreview.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fannotations%2FBinaryPreview.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -29,6 +29,6 @@\n @Documented\n public @interface BinaryPreview {\n \n-    public String[] mimeTypes() default {};\n+    String[] mimeTypes() default {};\n \n }"},{"sha":"5546d6517efc6f4451bad8bbb206ad5d7b9548a3","filename":"client/console/src/main/java/org/apache/syncope/client/console/annotations/ExtensionPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fannotations%2FExtensionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fannotations%2FExtensionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fannotations%2FExtensionPanel.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -29,6 +29,6 @@\n @Documented\n public @interface ExtensionPanel {\n \n-    public String value();\n+    String value();\n \n }"},{"sha":"77fb55211d3b891d676ce8fdcbc913b9325ffa8e","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/SortableAttributableProviderComparator.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSortableAttributableProviderComparator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSortableAttributableProviderComparator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSortableAttributableProviderComparator.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -41,7 +41,7 @@ public SortableAttributableProviderComparator(final SortableDataProvider<Abstrac\n     }\n \n     @Override\n-    public int compare(final AbstractAttributableTO attributable1, AbstractAttributableTO attributable2) {\n+    public int compare(final AbstractAttributableTO attributable1, final AbstractAttributableTO attributable2) {\n         if (INLINE_PROPS.contains(provider.getSort().getProperty())) {\n             return super.compare(attributable1, attributable2);\n         }"},{"sha":"33bac2907d375806c23d3ea59cb2c323f52f76a5","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/StatusBean.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -82,7 +82,7 @@ public boolean isLinked() {\n         return linked;\n     }\n \n-    public void setLinked(boolean linked) {\n+    public void setLinked(final boolean linked) {\n         this.linked = linked;\n     }\n "},{"sha":"87fa6adb6da3c58b2577986899a708945221b702","filename":"client/console/src/main/java/org/apache/syncope/client/console/init/ConsoleInitializer.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FConsoleInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FConsoleInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FConsoleInitializer.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -26,7 +26,6 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.aop.support.AopUtils;\n-import org.springframework.beans.BeansException;\n import org.springframework.beans.factory.BeanFactory;\n import org.springframework.beans.factory.BeanFactoryAware;\n import org.springframework.beans.factory.InitializingBean;\n@@ -44,7 +43,7 @@ public class ConsoleInitializer implements InitializingBean, BeanFactoryAware {\n     private DefaultListableBeanFactory beanFactory;\n \n     @Override\n-    public void setBeanFactory(final BeanFactory beanFactory) throws BeansException {\n+    public void setBeanFactory(final BeanFactory beanFactory) {\n         this.beanFactory = (DefaultListableBeanFactory) beanFactory;\n     }\n "},{"sha":"b805a54c4380623ecc3b19be116eb7c2ddb70b58","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ImagePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImagePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImagePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FImagePanel.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -28,7 +28,7 @@ public class ImagePanel extends Panel {\n \n     private static final long serialVersionUID = 5564818820574092960L;\n \n-    final Image img;\n+    private final Image img;\n \n     public ImagePanel(final String id, final ContextRelativeResource img) {\n         super(id);"},{"sha":"f628a84800715481eb8ec5c73e06c0f47a15cbf1","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxDropDownChoicePanel.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -38,12 +38,14 @@ public AjaxDropDownChoicePanel(final String id, final String name, final IModel<\n         this(id, name, model, true);\n     }\n \n-    public AjaxDropDownChoicePanel(final String id, final String name, final IModel<T> model, boolean enableOnBlur) {\n+    public AjaxDropDownChoicePanel(\n+            final String id, final String name, final IModel<T> model, final boolean enableOnBlur) {\n+\n         super(id, model);\n \n-        field = new DropDownChoice<T>(\n+        field = new DropDownChoice<>(\n                 \"dropDownChoiceField\", model, Collections.<T>emptyList(), new ChoiceRenderer<T>());\n-        add(field.setLabel(new Model<String>(name)).setOutputMarkupId(true));\n+        add(field.setLabel(new Model<>(name)).setOutputMarkupId(true));\n \n         if (enableOnBlur) {\n             field.add(new AjaxFormComponentUpdatingBehavior(Constants.ON_BLUR) {"},{"sha":"ebbff5d986f6dc9e1845f4a3e9ecda80c9770490","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/FieldPanel.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -69,15 +69,13 @@ public FieldPanel<T> setStyleSheet(final String classes) {\n         return this;\n     }\n \n-    public FieldPanel<T> setRequired(boolean required) {\n+    public FieldPanel<T> setRequired(final boolean required) {\n         field.setRequired(required);\n-\n         return this;\n     }\n \n-    public FieldPanel<T> setReadOnly(boolean readOnly) {\n+    public FieldPanel<T> setReadOnly(final boolean readOnly) {\n         field.setEnabled(!readOnly);\n-\n         return this;\n     }\n "},{"sha":"f35321f9033636a979f666fcb63f6523d3ccf346","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/MultiFieldPanel.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -76,14 +76,14 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     });\n                 }\n \n-\t\tfieldPanel.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_BLUR) {\n-                    \n+                fieldPanel.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_BLUR) {\n+\n                     private static final long serialVersionUID = -1107858522700306810L;\n-  \n-                        @Override\n-                        protected void onUpdate(final AjaxRequestTarget target) {\n-                        }\n-                    });\n+\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                    }\n+                });\n \n                 fieldPanel.setNewModel(item);\n                 item.add(fieldPanel);\n@@ -98,7 +98,7 @@ public void onClick(final AjaxRequestTarget target) {\n                         model.getObject().remove(item.getModelObject());\n                         fieldPanel.getField().clearInput();\n                         target.add(container);\n-                        \n+\n                         if (eventTemplate) {\n                             send(getPage(), Broadcast.BREADTH, new MultiValueSelectorEvent(target));\n                         }\n@@ -159,7 +159,7 @@ public MultiFieldPanel<E> setModelObject(final List<E> object) {\n \n     public static class MultiValueSelectorEvent {\n \n-        final AjaxRequestTarget target;\n+        private final AjaxRequestTarget target;\n \n         public MultiValueSelectorEvent(final AjaxRequestTarget target) {\n             this.target = target;"},{"sha":"e696256253538b61b1dc4c454f87d717cfd59c12","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BaseModalPage.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBaseModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBaseModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBaseModalPage.properties?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -17,4 +17,4 @@\n submit=Save\n add=Add\n remove=Delete\n-cancel=Cancel\n\\ No newline at end of file\n+cancel=Cancel"},{"sha":"58e0aa09b12a1bd922cb8944990fdff539b62e55","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BaseModalPage_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBaseModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBaseModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBaseModalPage_it.properties?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -17,4 +17,4 @@\n submit=Salva\n add=Aggiungi\n remove=Elimina\n-cancel=Annulla\n\\ No newline at end of file\n+cancel=Annulla"},{"sha":"490fe3096af1dd4d7c8ac6f2c0416e49a25f8e9c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BaseModalPage_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBaseModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBaseModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBaseModalPage_pt_BR.properties?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -17,4 +17,4 @@\n submit=Salvar\n add=Adicionar\n remove=Remover\n-cancel=Cancelar\n\\ No newline at end of file\n+cancel=Cancelar"},{"sha":"e9cd1ec3c6e65ff00c5b3384a7cdb59ec77721ed","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/XMLEditorPopupPage_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FXMLEditorPopupPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FXMLEditorPopupPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FXMLEditorPopupPage_pt_BR.properties?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -16,4 +16,4 @@\n # under the License.\n submit=Salvar\n cancel=Fechar\n-title=Workflow XML Editor\n\\ No newline at end of file\n+title=Workflow XML Editor"},{"sha":"3de5d20f7018ec77783191a9f83e179ff85162d4","filename":"client/lib/pom.xml","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Flib%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Flib%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -82,10 +82,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n   </build>\n-</project>\n\\ No newline at end of file\n+</project>"},{"sha":"6233f6c9b46c14f28363dedc75b1f9c7d7e7f75c","filename":"client/lib/src/main/java/org/apache/syncope/client/lib/RestClientExceptionMapper.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FRestClientExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FRestClientExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Flib%2FRestClientExceptionMapper.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -52,22 +52,22 @@ public Exception fromResponse(final Response response) {\n         final int statusCode = response.getStatus();\n         Exception ex;\n \n-        // 1. Check for client (possibly composite) exception in HTTP header\n         SyncopeClientCompositeException scce = checkSyncopeClientCompositeException(response);\n         if (scce != null) {\n+            // 1. Check for client (possibly composite) exception in HTTP header\n             if (scce.getExceptions().size() == 1) {\n                 ex = scce.getExceptions().iterator().next();\n             } else {\n                 ex = scce;\n             }\n-        } // 2. Map SC_UNAUTHORIZED\n-        else if (statusCode == Response.Status.UNAUTHORIZED.getStatusCode()) {\n+        } else if (statusCode == Response.Status.UNAUTHORIZED.getStatusCode()) {\n+            // 2. Map SC_UNAUTHORIZED\n             ex = new AccessControlException(\"Remote unauthorized exception\");\n-        } // 3. Map SC_BAD_REQUEST\n-        else if (statusCode == Response.Status.BAD_REQUEST.getStatusCode()) {\n+        } else if (statusCode == Response.Status.BAD_REQUEST.getStatusCode()) {\n+            // 3. Map SC_BAD_REQUEST\n             ex = new BadRequestException();\n-        } // 4. All other codes are mapped to runtime exception with HTTP code information\n-        else {\n+        } else {\n+            // 4. All other codes are mapped to runtime exception with HTTP code information\n             ex = new WebServiceException(String.format(\"Remote exception with status code: %s\",\n                     Response.Status.fromStatusCode(statusCode).name()));\n         }"},{"sha":"ac9f17b43cb28d99332228a7bb6b1c205964a497","filename":"client/old_console/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fold_console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fold_console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -96,10 +96,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n     \n     <resources>"},{"sha":"ab8dcfbf88e6e34f1a99d1330d7191694d23d0d0","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/commons/JexlHelpUtils.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FJexlHelpUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FJexlHelpUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FJexlHelpUtils.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -49,8 +49,6 @@ public static AjaxLink<Void> getAjaxLink(final WebMarkupContainer wmc, final Str\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                // using bitwise inversion as suggested by \n-                // http://pmd.sourceforge.net/pmd-4.2.5/rules/controversial.html#BooleanInversion\n                 toogle ^= true;\n                 wmc.setVisible(toogle);\n                 target.add(wmc);"},{"sha":"a708ad6cad1139c9f854216fd5e3cf6bf39cbac0","filename":"client/pom.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/client%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -33,6 +33,10 @@ under the License.\n   <artifactId>syncope-client</artifactId>\n   <packaging>pom</packaging>\n \n+  <properties>\n+    <rootpom.basedir>${basedir}/..</rootpom.basedir>\n+  </properties>\n+\n   <modules>\n     <module>lib</module>\n     <module>console</module>"},{"sha":"eda26a46ad0c99eca0f09414f95f93dccaa187a5","filename":"common/lib/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/common%2Flib%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/common%2Flib%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -89,10 +89,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n   </build>\n </project>"},{"sha":"9202fba26a600dd8e09bf96769c8b56ab575fbc7","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractPolicyTO.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractPolicyTO.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -49,10 +49,12 @@ public abstract class AbstractPolicyTO extends AbstractBaseBean {\n     private final List<String> usedByRealms = new ArrayList<>();\n \n     private AbstractPolicyTO() {\n+        super();\n         throw new UnsupportedOperationException(\"No-arg constructor is just to keep JAXB from complaining\");\n     }\n \n     protected AbstractPolicyTO(final PolicyType type) {\n+        super();\n         this.type = type;\n     }\n "},{"sha":"a149d6cf797f74d8fb80e3520273305a45a6bd12","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/Entitlement.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FEntitlement.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -194,19 +194,20 @@ public final class Entitlement {\n \n     public static final String ROUTE_UPDATE = \"ROUTE_UPDATE\";\n \n-    private static Set<String> VALUES = new HashSet<>();\n+    private static final Set<String> ENTITLEMENTS;\n \n     static {\n+        Set<String> values = new HashSet<>();\n         for (Field field : Entitlement.class.getDeclaredFields()) {\n             if (Modifier.isStatic(field.getModifiers()) && String.class.equals(field.getType())) {\n-                VALUES.add(field.getName());\n+                values.add(field.getName());\n             }\n         }\n-        VALUES = Collections.unmodifiableSet(VALUES);\n+        ENTITLEMENTS = Collections.unmodifiableSet(values);\n     }\n \n     public static Set<String> values() {\n-        return VALUES;\n+        return ENTITLEMENTS;\n     }\n \n     private Entitlement() {"},{"sha":"16f93e378f087f5bc17ac6e7168cd655bc882ff1","filename":"common/rest-api/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/common%2Frest-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/common%2Frest-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -88,10 +88,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n   </build>\n </project>"},{"sha":"f57f2cf2627587384068958870706598de080d6c","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserSelfService.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserSelfService.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -35,7 +35,6 @@\n import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.lib.mod.UserMod;\n import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.rest.api.RESTHeaders;\n \n /**\n  * REST operations for user self-management.\n@@ -46,7 +45,8 @@ public interface UserSelfService extends JAXRSService {\n     /**\n      * Returns the user making the service call.\n      *\n-     * @return calling user data, including owned entitlements as header value {@link RESTHeaders#OWNED_ENTITLEMENTS}\n+     * @return calling user data, including owned entitlements as header value\n+     * {@link org.apache.syncope.common.rest.api.RESTHeaders#OWNED_ENTITLEMENTS}\n      */\n     @GET\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })"},{"sha":"60ba05fc3801d6f46e3ab6fdc0c0135a502fd6a1","filename":"core/logic/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -163,10 +163,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n   </build>\n </project>"},{"sha":"eac9fde679cd6577f73cf4b31fabb756e286e420","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ConnectorLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -306,7 +306,7 @@ protected ConnInstanceTO resolveReference(final Method method, final Object... a\n             }\n         }\n \n-        if ((id != null) && !id.equals(0l)) {\n+        if ((id != null) && !id.equals(0L)) {\n             try {\n                 return binder.getConnInstanceTO(connInstanceDAO.find(id));\n             } catch (Throwable ignore) {"},{"sha":"ec020bac6cb1f1443c202ef5bdf1207639d44cd6","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/GroupLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -342,7 +342,7 @@ protected GroupTO resolveReference(final Method method, final Object... args) th\n             }\n         }\n \n-        if ((key != null) && !key.equals(0l)) {\n+        if ((key != null) && !key.equals(0L)) {\n             try {\n                 return binder.getGroupTO(key);\n             } catch (Throwable ignore) {"},{"sha":"f3c9e5d90b8b934328d805d22eb9761975ad3d50","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/LoggerLogic.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLoggerLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLoggerLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLoggerLogic.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -179,11 +179,12 @@ public void enableAudit(final AuditLoggerName auditLoggerName) {\n         }\n     }\n \n-    private LoggerTO delete(final String name, final LoggerType expectedType) throws NotFoundException {\n+    private LoggerTO delete(final String name, final LoggerType expectedType) {\n         Logger syncopeLogger = loggerDAO.find(name);\n         if (syncopeLogger == null) {\n             throw new NotFoundException(\"Logger \" + name);\n-        } else if (expectedType != syncopeLogger.getType()) {\n+        }\n+        if (expectedType != syncopeLogger.getType()) {\n             throwInvalidLogger(expectedType);\n         }\n \n@@ -204,7 +205,7 @@ private LoggerTO delete(final String name, final LoggerType expectedType) throws\n     }\n \n     @PreAuthorize(\"hasRole('\" + Entitlement.LOG_DELETE + \"')\")\n-    public LoggerTO deleteLog(final String name) throws NotFoundException {\n+    public LoggerTO deleteLog(final String name) {\n         return delete(name, LoggerType.LOG);\n     }\n "},{"sha":"2c09d37490953f09292112d789f1b5568a7d007b","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ReportLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -390,7 +390,7 @@ protected ReportTO resolveReference(final Method method, final Object... args)\n             }\n         }\n \n-        if ((key != null) && !key.equals(0l)) {\n+        if ((key != null) && !key.equals(0L)) {\n             try {\n                 return binder.getReportTO(reportDAO.find(key));\n             } catch (Throwable ignore) {"},{"sha":"28ef9015069b49fda277f3f8dec852fc969483e1","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/WorkflowLogic.java","status":"modified","additions":6,"deletions":18,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FWorkflowLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FWorkflowLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FWorkflowLogic.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -27,7 +27,6 @@\n import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n import org.apache.syncope.core.workflow.api.WorkflowAdapter;\n import org.apache.syncope.core.workflow.api.WorkflowDefinitionFormat;\n-import org.apache.syncope.core.workflow.api.WorkflowException;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.stereotype.Component;\n@@ -43,8 +42,7 @@ public class WorkflowLogic extends AbstractTransactionalLogic<AbstractBaseBean>\n     private GroupWorkflowAdapter gwfAdapter;\n \n     private void exportDefinition(\n-            final WorkflowAdapter adapter, final WorkflowDefinitionFormat format, final OutputStream os)\n-            throws WorkflowException {\n+            final WorkflowAdapter adapter, final WorkflowDefinitionFormat format, final OutputStream os) {\n \n         adapter.exportDefinition(format, os);\n     }\n@@ -57,39 +55,29 @@ private WorkflowDefinitionFormat getFormat(final MediaType format) {\n \n     @PreAuthorize(\"hasRole('\" + Entitlement.WORKFLOW_DEF_READ + \"')\")\n     @Transactional(readOnly = true)\n-    public void exportUserDefinition(final MediaType format, final OutputStream os)\n-            throws WorkflowException {\n-\n+    public void exportUserDefinition(final MediaType format, final OutputStream os) {\n         exportDefinition(uwfAdapter, getFormat(format), os);\n     }\n \n     @PreAuthorize(\"hasRole('\" + Entitlement.WORKFLOW_DEF_READ + \"')\")\n     @Transactional(readOnly = true)\n-    public void exportGroupDefinition(final MediaType format, final OutputStream os)\n-            throws WorkflowException {\n-\n+    public void exportGroupDefinition(final MediaType format, final OutputStream os) {\n         exportDefinition(gwfAdapter, getFormat(format), os);\n     }\n \n-    private void exportDiagram(final WorkflowAdapter adapter, final OutputStream os)\n-            throws WorkflowException {\n-\n+    private void exportDiagram(final WorkflowAdapter adapter, final OutputStream os) {\n         adapter.exportDiagram(os);\n     }\n \n     @PreAuthorize(\"hasRole('\" + Entitlement.WORKFLOW_DEF_READ + \"')\")\n     @Transactional(readOnly = true)\n-    public void exportUserDiagram(final OutputStream os)\n-            throws WorkflowException {\n-\n+    public void exportUserDiagram(final OutputStream os) {\n         exportDiagram(uwfAdapter, os);\n     }\n \n     @PreAuthorize(\"hasRole('\" + Entitlement.WORKFLOW_DEF_READ + \"')\")\n     @Transactional(readOnly = true)\n-    public void exportGroupDiagram(final OutputStream os)\n-            throws WorkflowException {\n-\n+    public void exportGroupDiagram(final OutputStream os) {\n         exportDiagram(gwfAdapter, os);\n     }\n "},{"sha":"b35c42d89afddd3d7cafc9ed549b83309da1f506","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/audit/AuditConnectionFactory.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Faudit%2FAuditConnectionFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Faudit%2FAuditConnectionFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Faudit%2FAuditConnectionFactory.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -51,7 +51,7 @@\n  */\n public final class AuditConnectionFactory {\n \n-    private static DataSource datasource;\n+    private static DataSource DATASOURCE;\n \n     private static final String PERSISTENCE_CONTEXT = \"/persistenceContext.xml\";\n \n@@ -84,7 +84,7 @@ public final class AuditConnectionFactory {\n             Context ctx = new InitialContext();\n             Object obj = ctx.lookup(jndiName);\n \n-            datasource = (DataSource) PortableRemoteObject.narrow(obj, DataSource.class);\n+            DATASOURCE = (DataSource) PortableRemoteObject.narrow(obj, DataSource.class);\n         } catch (Exception e) {\n             // ignore\n         } finally {\n@@ -115,7 +115,7 @@ public final class AuditConnectionFactory {\n \n             initSQLScript = persistence.getProperty(\"audit.sql\");\n \n-            if (datasource == null) {\n+            if (DATASOURCE == null) {\n                 BasicDataSource bds = new BasicDataSource();\n                 bds.setDriverClassName(persistence.getProperty(\"jpa.driverClassName\"));\n                 bds.setUrl(persistence.getProperty(\"jpa.url\"));\n@@ -126,7 +126,7 @@ public final class AuditConnectionFactory {\n                 bds.setRemoveAbandonedOnBorrow(true);\n                 bds.setRemoveAbandonedOnMaintenance(true);\n \n-                datasource = bds;\n+                DATASOURCE = bds;\n             }\n         } catch (Exception e) {\n             throw new IllegalStateException(\"Audit datasource configuration failed\", e);\n@@ -137,17 +137,17 @@ public final class AuditConnectionFactory {\n         populator.setScripts(new Resource[] { new ClassPathResource(\"/audit/\" + initSQLScript) });\n         // forces no statement separation\n         populator.setSeparator(ScriptUtils.EOF_STATEMENT_SEPARATOR);\n-        Connection conn = DataSourceUtils.getConnection(datasource);\n+        Connection conn = DataSourceUtils.getConnection(DATASOURCE);\n         try {\n             populator.populate(conn);\n         } finally {\n-            DataSourceUtils.releaseConnection(conn, datasource);\n+            DataSourceUtils.releaseConnection(conn, DATASOURCE);\n         }\n     }\n \n     public static Connection getConnection() {\n-        if (datasource != null) {\n-            return DataSourceUtils.getConnection(datasource);\n+        if (DATASOURCE != null) {\n+            return DataSourceUtils.getConnection(DATASOURCE);\n         }\n \n         throw new IllegalStateException(\"Audit dataSource init failed: check logs\");"},{"sha":"b22a54da9da07b204baedd01ef991d1da8cb59f9","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/init/ImplementationClassNamesLoader.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FImplementationClassNamesLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FImplementationClassNamesLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FImplementationClassNamesLoader.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -87,7 +87,7 @@ public void load() {\n         scanner.addIncludeFilter(new AssignableTypeFilter(SyncActions.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(PushActions.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(SyncCorrelationRule.class));\n-        // TODO: SYNCOPE-631\n+        // Remove once SYNCOPE-631 is done\n         //scanner.addIncludeFilter(new AssignableTypeFilter(PushCorrelationRule.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(PropagationActions.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(Validator.class));\n@@ -121,7 +121,7 @@ public void load() {\n                     classNames.get(Type.SYNC_CORRELATION_RULE).add(bd.getBeanClassName());\n                 }\n \n-                // TODO: SYNCOPE-631\n+                // Uncomment when SYNCOPE-631 is done\n                 /* if (PushCorrelationRule.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n                  * classNames.get(Type.PUSH_CORRELATION_RULES).add(metadata.getClassName());\n                  * } */"},{"sha":"9ae6aa98a81b463d32939a54fb1a2c1d56e96ee1","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/init/LogicInitializer.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FLogicInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FLogicInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FLogicInitializer.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -27,7 +27,6 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.aop.support.AopUtils;\n-import org.springframework.beans.BeansException;\n import org.springframework.beans.factory.BeanFactory;\n import org.springframework.beans.factory.BeanFactoryAware;\n import org.springframework.beans.factory.InitializingBean;\n@@ -45,7 +44,7 @@ public class LogicInitializer implements InitializingBean, BeanFactoryAware {\n     private DefaultListableBeanFactory beanFactory;\n \n     @Override\n-    public void setBeanFactory(final BeanFactory beanFactory) throws BeansException {\n+    public void setBeanFactory(final BeanFactory beanFactory) {\n         this.beanFactory = (DefaultListableBeanFactory) beanFactory;\n     }\n "},{"sha":"8c1e272c57f4127e3549ebba22e48e2f4b71419f","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/AbstractReportlet.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FAbstractReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FAbstractReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FAbstractReportlet.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -28,9 +28,6 @@\n \n public abstract class AbstractReportlet<T extends AbstractReportletConf> implements Reportlet<T> {\n \n-    /**\n-     * Logger.\n-     */\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractReportlet.class);\n \n     protected T conf;\n@@ -44,12 +41,11 @@ public void setConf(final T conf) {\n         this.conf = conf;\n     }\n \n-    protected abstract void doExtract(ContentHandler handler) throws SAXException, ReportException;\n+    protected abstract void doExtract(ContentHandler handler) throws SAXException;\n \n     @Override\n     @Transactional(readOnly = true)\n-    public void extract(final ContentHandler handler) throws SAXException, ReportException {\n-\n+    public void extract(final ContentHandler handler) throws SAXException {\n         if (conf == null) {\n             throw new ReportException(new IllegalArgumentException(\"No configuration provided\"));\n         }"},{"sha":"4dfe2e97373f15e8af8c59df16b9b4090de1b117","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/GroupReportlet.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FGroupReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FGroupReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FGroupReportlet.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -183,9 +183,7 @@ private void doExtractAttributes(final ContentHandler handler, final AbstractAtt\n         }\n     }\n \n-    private void doExtract(final ContentHandler handler, final List<Group> groups)\n-            throws SAXException, ReportException {\n-\n+    private void doExtract(final ContentHandler handler, final List<Group> groups) throws SAXException {\n         AttributesImpl atts = new AttributesImpl();\n         for (Group group : groups) {\n             atts.clear();\n@@ -299,7 +297,7 @@ private void doExtractConf(final ContentHandler handler) throws SAXException {\n     }\n \n     @Override\n-    protected void doExtract(final ContentHandler handler) throws SAXException, ReportException {\n+    protected void doExtract(final ContentHandler handler) throws SAXException {\n         doExtractConf(handler);\n         for (int i = 1; i <= (count() / PAGE_SIZE) + 1; i++) {\n             doExtract(handler, getPagedGroups(i));"},{"sha":"65fab56c919bacc7c656950392e7e206cd40f3ef","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/Reportlet.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReportlet.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -41,7 +41,6 @@\n      *\n      * @param handler SAX content handler for streaming result\n      * @throws SAXException if there is any problem in SAX handling\n-     * @throws ReportException if anything goes wrong\n      */\n-    void extract(ContentHandler handler) throws SAXException, ReportException;\n+    void extract(ContentHandler handler) throws SAXException;\n }"},{"sha":"3e768e7768140056daf4a96b26ac36d1c8e52c86","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/StaticReportlet.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FStaticReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FStaticReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FStaticReportlet.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -67,8 +67,7 @@ private void doExtractConf(final ContentHandler handler) throws SAXException {\n     }\n \n     @Override\n-    public void doExtract(final ContentHandler handler) throws SAXException, ReportException {\n-\n+    public void doExtract(final ContentHandler handler) throws SAXException {\n         doExtractConf(handler);\n \n         if (StringUtils.hasText(conf.getStringField())) {"},{"sha":"f1f3a9ea59d4a403af6b52719fca420280507c22","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/TextSerializer.java","status":"modified","additions":0,"deletions":18,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FTextSerializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FTextSerializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FTextSerializer.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -73,24 +73,6 @@ public void endElement(final String uri, final String name, final String raw)\n         // nothing\n     }\n \n-    @Override\n-    public void endDocument() throws SAXException {\n-        super.endDocument();\n-    }\n-\n-    /**\n-     * @throws SAXException if text is encountered before root element.\n-     */\n-    @Override\n-    public void characters(final char buffer[], final int start, final int len) throws SAXException {\n-        super.characters(buffer, start, len);\n-    }\n-\n-    @Override\n-    public void recycle() {\n-        super.recycle();\n-    }\n-\n     public static TextSerializer createPlainSerializer() {\n         final TextSerializer serializer = new TextSerializer();\n         serializer.setContentType(\"text/plain; charset=\" + UTF_8);"},{"sha":"575947d35cafadd56a74ca137070e632f3a01847","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/UserReportlet.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FUserReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FUserReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FUserReportlet.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -189,9 +189,7 @@ private void doExtractAttributes(final ContentHandler handler, final AbstractAtt\n         }\n     }\n \n-    private void doExtract(final ContentHandler handler, final List<User> users)\n-            throws SAXException, ReportException {\n-\n+    private void doExtract(final ContentHandler handler, final List<User> users) throws SAXException {\n         AttributesImpl atts = new AttributesImpl();\n         for (User user : users) {\n             atts.clear();\n@@ -345,7 +343,7 @@ private void doExtractConf(final ContentHandler handler) throws SAXException {\n     }\n \n     @Override\n-    protected void doExtract(final ContentHandler handler) throws SAXException, ReportException {\n+    protected void doExtract(final ContentHandler handler) throws SAXException {\n         doExtractConf(handler);\n         for (int i = 1; i <= (count() / PAGE_SIZE) + 1; i++) {\n             doExtract(handler, getPagedUsers(i));"},{"sha":"d330ad6150493d049f56ac31b0370315e4cc22ce","filename":"core/misc/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fmisc%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fmisc%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -127,10 +127,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n   </build>\n </project>"},{"sha":"a8d8aac58a7dcb8ac8f25a90e6e55ea194858637","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/AuditManager.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FAuditManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FAuditManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FAuditManager.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -34,9 +34,6 @@\n @Component\n public class AuditManager {\n \n-    /**\n-     * Logger.\n-     */\n     private static final Logger LOG = LoggerFactory.getLogger(AuditManager.class);\n \n     @Autowired\n@@ -52,7 +49,7 @@ public void audit(\n             final Object output,\n             final Object... input) {\n \n-        final StringBuilder message = new StringBuilder(32);\n+        StringBuilder message = new StringBuilder(32);\n \n         message.append(\"BEFORE:\\n\").\n                 append('\\t').append(before == null ? \"unknown\" : before).append('\\n');"},{"sha":"8553a0a4433bebb46474fed298e3893c8edb09fc","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/ConnObjectUtils.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtils.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -47,7 +47,6 @@\n import org.apache.syncope.core.persistence.api.attrvalue.validation.ParsingValidationException;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n-import org.apache.syncope.core.persistence.api.dao.PolicyDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.Attributable;"},{"sha":"52b260ec8da4db448fcb27a6b3fada5ca6abe985","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/security/PasswordGenerator.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FPasswordGenerator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FPasswordGenerator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FPasswordGenerator.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -23,9 +23,7 @@\n \n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.types.PasswordPolicySpec;\n-import org.apache.syncope.core.persistence.api.dao.PolicyDAO;\n import org.apache.syncope.core.persistence.api.entity.ExternalResource;\n-import org.apache.syncope.core.persistence.api.entity.PasswordPolicy;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.misc.policy.InvalidPasswordPolicySpecException;\n import org.apache.syncope.core.misc.policy.PolicyPattern;\n@@ -37,16 +35,13 @@\n /**\n  * Generate random passwords according to given policies.\n  *\n- * @see PasswordPolicy\n+ * @see org.apache.syncope.core.persistence.api.entity.PasswordPolicy\n  */\n @Component\n public class PasswordGenerator {\n \n     private static final char[] SPECIAL_CHARS = { '!', '£', '%', '&', '(', ')', '?', '#', '$' };\n \n-    @Autowired\n-    private PolicyDAO policyDAO;\n-\n     @Autowired\n     private RealmDAO realmDAO;\n "},{"sha":"d91a60f538f0d510c88b7669cb8f9f304300ab19","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/spring/DefaultRolesPrefixPostProcessor.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fspring%2FDefaultRolesPrefixPostProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fspring%2FDefaultRolesPrefixPostProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fspring%2FDefaultRolesPrefixPostProcessor.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -20,7 +20,6 @@\n \n import javax.servlet.ServletException;\n import org.apache.commons.lang3.StringUtils;\n-import org.springframework.beans.BeansException;\n import org.springframework.beans.FatalBeanException;\n import org.springframework.beans.factory.config.BeanPostProcessor;\n import org.springframework.core.PriorityOrdered;\n@@ -34,7 +33,7 @@\n public class DefaultRolesPrefixPostProcessor implements BeanPostProcessor, PriorityOrdered {\n \n     @Override\n-    public Object postProcessAfterInitialization(final Object bean, final String beanName) throws BeansException {\n+    public Object postProcessAfterInitialization(final Object bean, final String beanName) {\n         if (bean instanceof DefaultMethodSecurityExpressionHandler) {\n             ((DefaultMethodSecurityExpressionHandler) bean).setDefaultRolePrefix(null);\n         }\n@@ -55,7 +54,7 @@ public Object postProcessAfterInitialization(final Object bean, final String bea\n     }\n \n     @Override\n-    public Object postProcessBeforeInitialization(final Object bean, final String beanName) throws BeansException {\n+    public Object postProcessBeforeInitialization(final Object bean, final String beanName) {\n         return bean;\n     }\n "},{"sha":"10745e7f6ed2140a63feeaad88023b42c35ba469","filename":"core/persistence-api/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -69,10 +69,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n   </build>\n </project>"},{"sha":"d48ef7745d29c72b413a3594d6e50301f2509ce4","filename":"core/persistence-jpa/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -172,10 +172,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n \n     <resources>"},{"sha":"af1c9b8ef9fd1c0719845ee474966284e81440ca","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/attrvalue/validation/AbstractValidator.java","status":"modified","additions":2,"deletions":9,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fattrvalue%2Fvalidation%2FAbstractValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fattrvalue%2Fvalidation%2FAbstractValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fattrvalue%2Fvalidation%2FAbstractValidator.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -19,8 +19,6 @@\n package org.apache.syncope.core.persistence.jpa.attrvalue.validation;\n \n import java.io.Serializable;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidPlainAttrValueException;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.ParsingValidationException;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.Validator;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.PlainSchema;\n@@ -31,9 +29,6 @@ public abstract class AbstractValidator implements Validator, Serializable {\n \n     private static final long serialVersionUID = -5439345166669502493L;\n \n-    /*\n-     * Logger\n-     */\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractValidator.class);\n \n     protected final PlainSchema schema;\n@@ -43,12 +38,10 @@ public AbstractValidator(final PlainSchema schema) {\n     }\n \n     @Override\n-    public void validate(String value, PlainAttrValue attrValue)\n-            throws ParsingValidationException, InvalidPlainAttrValueException {\n-\n+    public void validate(final String value, final PlainAttrValue attrValue) {\n         attrValue.parseValue(schema, value);\n         doValidate(attrValue);\n     }\n \n-    protected abstract void doValidate(PlainAttrValue attrValue) throws InvalidPlainAttrValueException;\n+    protected abstract void doValidate(PlainAttrValue attrValue);\n }"},{"sha":"1d93c5bcf5de7978fb811800a0a2842cc05f2ea0","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/attrvalue/validation/AlwaysTrueValidator.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fattrvalue%2Fvalidation%2FAlwaysTrueValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fattrvalue%2Fvalidation%2FAlwaysTrueValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fattrvalue%2Fvalidation%2FAlwaysTrueValidator.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -31,7 +31,7 @@ public AlwaysTrueValidator(final PlainSchema schema) {\n     }\n \n     @Override\n-    protected void doValidate(final PlainAttrValue attrValue) throws InvalidPlainAttrValueException {\n+    protected void doValidate(final PlainAttrValue attrValue) {\n         Boolean value = attrValue.getValue();\n         if (!value) {\n             throw new InvalidPlainAttrValueException(\"This attribute must be set to \\\"true\\\"\");"},{"sha":"4d99372ce31544a1336096dc382b1d2823d83415","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/attrvalue/validation/BasicValidator.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fattrvalue%2Fvalidation%2FBasicValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fattrvalue%2Fvalidation%2FBasicValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fattrvalue%2Fvalidation%2FBasicValidator.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -33,7 +33,7 @@ public BasicValidator(final PlainSchema schema) {\n     }\n \n     @Override\n-    protected void doValidate(final PlainAttrValue attrValue) throws InvalidPlainAttrValueException {\n+    protected void doValidate(final PlainAttrValue attrValue) {\n         if (AttrSchemaType.Enum == schema.getType()) {\n             final String[] enumeration = schema.getEnumerationValues().split(SyncopeConstants.ENUM_VALUES_SEPARATOR);\n             final String value = attrValue.getStringValue();"},{"sha":"b16c0b7e1b0b64012e20fa5f0c51bde2c5468afc","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/attrvalue/validation/EmailAddressValidator.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fattrvalue%2Fvalidation%2FEmailAddressValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fattrvalue%2Fvalidation%2FEmailAddressValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fattrvalue%2Fvalidation%2FEmailAddressValidator.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -33,7 +33,7 @@ public EmailAddressValidator(final PlainSchema schema) {\n     }\n \n     @Override\n-    protected void doValidate(final PlainAttrValue attrValue) throws InvalidPlainAttrValueException {\n+    protected void doValidate(final PlainAttrValue attrValue) {\n         Matcher matcher = SyncopeConstants.EMAIL_PATTERN.matcher(attrValue.<CharSequence>getValue());\n         if (!matcher.matches()) {\n             throw new InvalidPlainAttrValueException(\"\\\"\" + attrValue.getValue() + \"\\\" is not a valid email address\");"},{"sha":"ddeb0e237308f2fd143b0c8022be52808c442d71","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/ContentLoaderHandler.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FContentLoaderHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FContentLoaderHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FContentLoaderHandler.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -60,9 +60,7 @@ private Object[] getParameters(final String tableName, final Attributes attrs) {\n                 new ResultSetExtractor<Map<String, Integer>>() {\n \n                     @Override\n-                    public Map<String, Integer> extractData(final ResultSet rs)\n-                    throws SQLException, DataAccessException {\n-\n+                    public Map<String, Integer> extractData(final ResultSet rs) throws SQLException {\n                         Map<String, Integer> colTypes = new HashMap<>();\n                         for (int i = 1; i <= rs.getMetaData().getColumnCount(); i++) {\n                             colTypes.put("},{"sha":"46c6f53810c668b576a6a76b62e2f57b9f46ef55","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/MultiParentNodeOp.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FMultiParentNodeOp.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FMultiParentNodeOp.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FMultiParentNodeOp.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -21,7 +21,7 @@\n import java.util.Collection;\n import java.util.Set;\n \n-class MultiParentNodeOp {\n+final class MultiParentNodeOp {\n \n     private MultiParentNodeOp() {\n     }"},{"sha":"bc5f6e366ed77649518e8d3b4e04887790e1be01","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/XMLContentExporter.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FXMLContentExporter.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -77,7 +77,7 @@\n @Component\n public class XMLContentExporter extends AbstractContentDealer implements ContentExporter {\n \n-    protected final static Set<String> TABLE_PREFIXES_TO_BE_EXCLUDED =\n+    protected static final Set<String> TABLE_PREFIXES_TO_BE_EXCLUDED =\n             new HashSet<>(Arrays.asList(new String[] {\n                 \"QRTZ_\", \"LOGGING\", JPAReportExec.TABLE, JPATaskExec.TABLE,\n                 JPAUser.TABLE, JPAUPlainAttr.TABLE, JPAUPlainAttrValue.TABLE, JPAUPlainAttrUniqueValue.TABLE,\n@@ -86,7 +86,7 @@ public class XMLContentExporter extends AbstractContentDealer implements Content\n                 JPAMDerAttr.TABLE, JPAMVirAttr.TABLE\n             }));\n \n-    protected final static Set<String> TABLE_SUFFIXES_TO_BE_INCLUDED =\n+    protected static final Set<String> TABLE_SUFFIXES_TO_BE_INCLUDED =\n             new HashSet<>(Arrays.asList(new String[] { \"TEMPLATE\" }));\n \n     protected static final Map<String, String> TABLES_TO_BE_FILTERED =\n@@ -320,7 +320,7 @@ private void doExportTable(final TransformerHandler handler, final Connection co\n     }\n \n     @Override\n-    public void export(final OutputStream os, final String uwfPrefix, String rwfPrefix)\n+    public void export(final OutputStream os, final String uwfPrefix, final String rwfPrefix)\n             throws SAXException, TransformerConfigurationException {\n \n         if (StringUtils.isNotBlank(uwfPrefix)) {"},{"sha":"954651a16639486a1ca956dbe8eccf6c8f5f1a9d","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractSubjectDAO.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractSubjectDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractSubjectDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractSubjectDAO.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -108,8 +108,9 @@ private Set<String> getWhereClause(final String expression, final String value,\n         final List<String> literals = new ArrayList<>();\n \n         // Get schema names and literals\n-        Token token;\n-        while ((token = parser.getNextToken()) != null && StringUtils.isNotBlank(token.toString())) {\n+        for (Token token = parser.getNextToken(); token != null && StringUtils.isNotBlank(token.toString());\n+                token = parser.getNextToken()) {\n+\n             if (token.kind == ParserConstants.STRING_LITERAL) {\n                 literals.add(token.toString().substring(1, token.toString().length() - 1));\n             }"},{"sha":"b3b4b016b176a4c7df9f7f5ba84e7953d06951a0","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPANotificationDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPANotificationDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPANotificationDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPANotificationDAO.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -21,7 +21,6 @@\n import java.util.List;\n import javax.persistence.TypedQuery;\n import org.apache.syncope.core.persistence.api.dao.NotificationDAO;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.Notification;\n import org.apache.syncope.core.persistence.jpa.entity.JPANotification;\n import org.springframework.stereotype.Repository;\n@@ -42,7 +41,7 @@ public List<Notification> findAll() {\n     }\n \n     @Override\n-    public Notification save(final Notification notification) throws InvalidEntityException {\n+    public Notification save(final Notification notification) {\n         return entityManager.merge(notification);\n     }\n "},{"sha":"793411dfe35616728d9d6e51294c1efad7f16406","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAReportDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAReportDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAReportDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAReportDAO.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -24,7 +24,6 @@\n import javax.persistence.TypedQuery;\n import org.apache.syncope.core.persistence.api.dao.ReportDAO;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.Report;\n import org.apache.syncope.core.persistence.jpa.entity.JPAReport;\n import org.springframework.stereotype.Repository;\n@@ -69,7 +68,7 @@ public int count() {\n \n     @Override\n     @Transactional(rollbackFor = Throwable.class)\n-    public Report save(final Report report) throws InvalidEntityException {\n+    public Report save(final Report report) {\n         return entityManager.merge(report);\n     }\n "},{"sha":"95f57df6706758565f7f43694befd55250ddfbfb","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAReportExecDAO.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAReportExecDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAReportExecDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAReportExecDAO.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -21,7 +21,6 @@\n import java.util.List;\n import javax.persistence.TypedQuery;\n import org.apache.syncope.core.persistence.api.dao.ReportExecDAO;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.Report;\n import org.apache.syncope.core.persistence.api.entity.ReportExec;\n import org.apache.syncope.core.persistence.jpa.entity.JPAReportExec;\n@@ -72,11 +71,10 @@ public List<ReportExec> findAll() {\n      * @see org.apache.syncope.core.report.ReportJob\n      * @param execution to be merged\n      * @return merged execution\n-     * @throws InvalidEntityException if any validation error occurs\n      */\n     @Override\n     @Transactional(rollbackFor = Throwable.class)\n-    public ReportExec save(final ReportExec execution) throws InvalidEntityException {\n+    public ReportExec save(final ReportExec execution) {\n         return entityManager.merge(execution);\n     }\n "},{"sha":"5c242d6cbbb697047049aeeeacf4ed44bf5cf077","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPASecurityQuestionDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPASecurityQuestionDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPASecurityQuestionDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPASecurityQuestionDAO.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -20,7 +20,6 @@\n \n import java.util.List;\n import javax.persistence.TypedQuery;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.dao.SecurityQuestionDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.user.SecurityQuestion;\n@@ -48,7 +47,7 @@ public List<SecurityQuestion> findAll() {\n     }\n \n     @Override\n-    public SecurityQuestion save(final SecurityQuestion securityQuestion) throws InvalidEntityException {\n+    public SecurityQuestion save(final SecurityQuestion securityQuestion) {\n         return entityManager.merge(securityQuestion);\n     }\n "},{"sha":"5d840da686d1d41b50cb6d2c78dfb9aa86d3c21a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPATaskExecDAO.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskExecDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskExecDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskExecDAO.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -23,7 +23,6 @@\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.dao.TaskDAO;\n import org.apache.syncope.core.persistence.api.dao.TaskExecDAO;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.task.Task;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPATaskExec;\n@@ -83,15 +82,14 @@ public TaskExec save(final TaskExec execution) {\n \n     /**\n      * This method has an explicit Transactional annotation because it is called by\n-     * {@link org.apache.syncope.core.quartz.AbstractTaskJob#execute(org.quartz.JobExecutionContext) }.\n+     * {@link org.apache.syncope.core.provisioning.java.job.AbstractTaskJob#execute(org.quartz.JobExecutionContext)}.\n      *\n      * @param taskId task id\n      * @param execution task execution\n-     * @throws InvalidEntityException if any bean validation fails\n      */\n     @Override\n     @Transactional(rollbackFor = { Throwable.class })\n-    public void saveAndAdd(final Long taskId, final TaskExec execution) throws InvalidEntityException {\n+    public void saveAndAdd(final Long taskId, final TaskExec execution) {\n         Task task = taskDAO.find(taskId);\n         task.addExec(execution);\n         taskDAO.save(task);"},{"sha":"9e80ff7e2beab71ae48df9b47b85c774e1adc09e","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/SearchSupport.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FSearchSupport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FSearchSupport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FSearchSupport.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -47,16 +47,16 @@ public int hashCode() {\n         }\n     }\n \n-    private final SubjectType type;\n+    private final SubjectType subjectType;\n \n-    public SearchSupport(final SubjectType type) {\n-        this.type = type;\n+    public SearchSupport(final SubjectType subjectType) {\n+        this.subjectType = subjectType;\n     }\n \n-    public String fieldName(final AttrSchemaType type) {\n+    public String fieldName(final AttrSchemaType attrSchemaType) {\n         String result;\n \n-        switch (type) {\n+        switch (attrSchemaType) {\n             case Boolean:\n                 result = \"booleanvalue\";\n                 break;\n@@ -88,7 +88,7 @@ public String fieldName(final AttrSchemaType type) {\n     public SearchView field() {\n         String result = \"\";\n \n-        switch (type) {\n+        switch (subjectType) {\n             case USER:\n             default:\n                 result = \"user_search\";"},{"sha":"5c009d46d77359ca047b19158eeedb6b0e65d589","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractExec.java","status":"modified","additions":2,"deletions":10,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractExec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractExec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractExec.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -68,17 +68,9 @@ public String getMessage() {\n         return message;\n     }\n \n-    /**\n-     * Set a message for this execution, taking care of replacing every null character with newline.\n-     *\n-     * @param message the message to set for this execution\n-     */\n     @Override\n-    public void setMessage(String message) {\n-        if (message != null) {\n-            message = message.replace('\\0', '\\n');\n-        }\n-        this.message = message;\n+    public void setMessage(final String message) {\n+        this.message = message == null ? null : message.replace('\\0', '\\n');\n     }\n \n     @Override"},{"sha":"ff1efeeca632b0a73ebf7e4cbaaf79e77d9e26fe","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractPlainAttr.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttr.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -21,11 +21,9 @@\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n-\n import javax.persistence.MappedSuperclass;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Transformer;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidPlainAttrValueException;\n import org.apache.syncope.core.persistence.api.entity.AttributableUtils;\n import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrUniqueValue;\n@@ -41,9 +39,7 @@ public abstract class AbstractPlainAttr extends AbstractEntity<Long> implements\n     protected abstract boolean addValue(PlainAttrValue attrValue);\n \n     @Override\n-    public void addValue(final String value, final AttributableUtils attributableUtil)\n-            throws InvalidPlainAttrValueException {\n-\n+    public void addValue(final String value, final AttributableUtils attributableUtil) {\n         PlainAttrValue attrValue;\n         if (getSchema().isUniqueConstraint()) {\n             attrValue = attributableUtil.newPlainAttrUniqueValue();"},{"sha":"424e6a26116c0d8559ad388a1b3f36214fcbee63","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractPlainAttrValue.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttrValue.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -140,7 +140,7 @@ public void setBinaryValue(final byte[] binaryValue) {\n     }\n \n     @Override\n-    public void parseValue(final PlainSchema schema, final String value) throws ParsingValidationException {\n+    public void parseValue(final PlainSchema schema, final String value) {\n         Exception exception = null;\n \n         switch (schema.getType()) {"},{"sha":"2fa54c3366d99e1d119a5466ac29de29e1b823a8","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAExternalResource.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAExternalResource.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -209,7 +209,7 @@ public boolean isEnforceMandatoryCondition() {\n     }\n \n     @Override\n-    public void setEnforceMandatoryCondition(boolean enforceMandatoryCondition) {\n+    public void setEnforceMandatoryCondition(final boolean enforceMandatoryCondition) {\n         this.enforceMandatoryCondition = getBooleanAsInteger(enforceMandatoryCondition);\n     }\n "},{"sha":"821bbe44aced089d4ed620a1f62c263e32fe2572","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/AbstractProvisioningTask.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractProvisioningTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractProvisioningTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractProvisioningTask.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -132,7 +132,7 @@ public boolean isPerformDelete() {\n     }\n \n     @Override\n-    public void setPerformDelete(boolean performDelete) {\n+    public void setPerformDelete(final boolean performDelete) {\n         this.performDelete = getBooleanAsInteger(performDelete);\n     }\n "},{"sha":"3170c145c315fdc4276ccc58d94531e3470107dc","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/user/JPAUser.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fuser%2FJPAUser.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -310,7 +310,6 @@ public void removeClearPassword() {\n \n     @Override\n     public void setEncodedPassword(final String password, final CipherAlgorithm cipherAlgoritm) {\n-        // clear password\n         this.clearPassword = null;\n \n         this.password = password;\n@@ -319,7 +318,6 @@ public void setEncodedPassword(final String password, final CipherAlgorithm ciph\n \n     @Override\n     public void setPassword(final String password, final CipherAlgorithm cipherAlgoritm) {\n-        // clear password\n         this.clearPassword = password;\n \n         try {"},{"sha":"d5d546b1e0263c854bf3370ea2c38a297b550c5a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/PlainAttrCheck.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPlainAttrCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPlainAttrCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPlainAttrCheck.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -27,7 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = PlainAttrValidator.class)\n @Documented"},{"sha":"2d9fec67cdb1cba1e7ac89d0f0c0c85668a029d2","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/UserCheck.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FUserCheck.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FUserCheck.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FUserCheck.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -27,8 +27,7 @@\n import javax.validation.Constraint;\n import javax.validation.Payload;\n \n-\n-@Target( { ElementType.TYPE })\n+@Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = UserValidator.class)\n @Documented"},{"sha":"929ded233527278c68906d41b9fe668f676de65e","filename":"core/persistence-jpa/src/test/resources/simplelogger.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fsimplelogger.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fsimplelogger.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fsimplelogger.properties?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -18,4 +18,5 @@\n # See http://www.slf4j.org/api/org/slf4j/impl/SimpleLogger.html\n # Possible values: \"trace\", \"debug\", \"info\", \"warn\", or \"error\"\n org.slf4j.simpleLogger.defaultLogLevel=debug\n-org.slf4j.simpleLogger.log.org.springframework.jdbc.core.JdbcTemplate=error\n\\ No newline at end of file\n+org.slf4j.simpleLogger.log.org.springframework.jdbc.core.JdbcTemplate=error\n+"},{"sha":"8bc9432b9fdce6ec21a29f2ae5972685560c2fd6","filename":"core/provisioning-api/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -56,10 +56,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n   </build>\n </project>"},{"sha":"200ae0a990899a31e10c6cfc5da4fa171d354cc1","filename":"core/provisioning-java/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -130,10 +130,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n     \n     <resources>"},{"sha":"62643793cd6f432f7b68229c13beefd9e9e7c710","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AbstractAttributableDataBinder.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAbstractAttributableDataBinder.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -253,12 +253,13 @@ private boolean evaluateMandatoryCondition(final AttributableUtils attrUtils,\n         boolean result = false;\n \n         if (attributable instanceof Subject) {\n-            for (Iterator<? extends ExternalResource> itor = ((Subject<?, ?, ?>) attributable).getResources().iterator();\n-                    itor.hasNext() && !result;) {\n+            for (Iterator<? extends ExternalResource> itor =\n+                    ((Subject<?, ?, ?>) attributable).getResources().iterator(); itor.hasNext() && !result;) {\n \n                 final ExternalResource resource = itor.next();\n                 if (resource.isEnforceMandatoryCondition()) {\n-                    result |= evaluateMandatoryCondition(attrUtils, resource, attributable, intAttrName, intMappingType);\n+                    result |= evaluateMandatoryCondition(\n+                            attrUtils, resource, attributable, intAttrName, intMappingType);\n                 }\n             }\n         }"},{"sha":"3fe382cd8cc3bbd44359fc7aa7f2c4dfbeb28a0b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/PolicyDataBinderImpl.java","status":"modified","additions":17,"deletions":16,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -106,44 +106,45 @@ private ExternalResource getResource(final String resourceName) {\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public <T extends Policy> T getPolicy(T policy, final AbstractPolicyTO policyTO) {\n+    public <T extends Policy> T getPolicy(final T policy, final AbstractPolicyTO policyTO) {\n         if (policy != null && policy.getType() != policyTO.getType()) {\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidPolicy);\n             sce.getElements().add(String.format(\"Cannot update %s from %s\", policy.getType(), policyTO.getType()));\n             throw sce;\n         }\n \n+        T result = policy;\n         switch (policyTO.getType()) {\n             case PASSWORD:\n                 if (!(policyTO instanceof PasswordPolicyTO)) {\n                     throw new ClassCastException(\"Expected \" + PasswordPolicyTO.class.getName()\n                             + \", found \" + policyTO.getClass().getName());\n                 }\n-                if (policy == null) {\n-                    policy = (T) entityFactory.newEntity(PasswordPolicy.class);\n+                if (result == null) {\n+                    result = (T) entityFactory.newEntity(PasswordPolicy.class);\n                 }\n-                policy.setSpecification(((PasswordPolicyTO) policyTO).getSpecification());\n+                result.setSpecification(((PasswordPolicyTO) policyTO).getSpecification());\n                 break;\n \n             case ACCOUNT:\n                 if (!(policyTO instanceof AccountPolicyTO)) {\n                     throw new ClassCastException(\"Expected \" + AccountPolicyTO.class.getName()\n                             + \", found \" + policyTO.getClass().getName());\n                 }\n-                if (policy == null) {\n-                    policy = (T) entityFactory.newEntity(AccountPolicy.class);\n+                if (result == null) {\n+                    result = (T) entityFactory.newEntity(AccountPolicy.class);\n                 }\n-                policy.setSpecification(((AccountPolicyTO) policyTO).getSpecification());\n+                result.setSpecification(((AccountPolicyTO) policyTO).getSpecification());\n \n-                if (((AccountPolicy) policy).getResources() != null\n-                        && !((AccountPolicy) policy).getResources().isEmpty()) {\n-                    ((AccountPolicy) policy).getResources().clear();\n+                if (((AccountPolicy) result).getResources() != null\n+                        && !((AccountPolicy) result).getResources().isEmpty()) {\n+                    ((AccountPolicy) result).getResources().clear();\n                 }\n                 for (String resourceName : ((AccountPolicyTO) policyTO).getResources()) {\n                     ExternalResource resource = getResource(resourceName);\n \n                     if (resource != null) {\n-                        ((AccountPolicy) policy).addResource(resource);\n+                        ((AccountPolicy) result).addResource(resource);\n                     }\n                 }\n                 break;\n@@ -154,14 +155,14 @@ public <T extends Policy> T getPolicy(T policy, final AbstractPolicyTO policyTO)\n                     throw new ClassCastException(\"Expected \" + SyncPolicyTO.class.getName()\n                             + \", found \" + policyTO.getClass().getName());\n                 }\n-                if (policy == null) {\n-                    policy = (T) entityFactory.newEntity(SyncPolicy.class);\n+                if (result == null) {\n+                    result = (T) entityFactory.newEntity(SyncPolicy.class);\n                 }\n-                policy.setSpecification(((SyncPolicyTO) policyTO).getSpecification());\n+                result.setSpecification(((SyncPolicyTO) policyTO).getSpecification());\n         }\n \n-        policy.setDescription(policyTO.getDescription());\n+        result.setDescription(policyTO.getDescription());\n \n-        return policy;\n+        return result;\n     }\n }"},{"sha":"1b1508da17489411e602f8877a4251d8f0518d5b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -438,7 +438,8 @@ public UserTO getUserTO(final User user) {\n             membershipTO.setGroupName(membership.getGroup().getName());\n \n             // SYNCOPE-458 retrieve also membership virtual attributes\n-            connObjectUtils.retrieveVirAttrValues(membership, attrUtilsFactory.getInstance(AttributableType.MEMBERSHIP));\n+            connObjectUtils.retrieveVirAttrValues(\n+                    membership, attrUtilsFactory.getInstance(AttributableType.MEMBERSHIP));\n             fillTO(membershipTO, null,\n                     membership.getPlainAttrs(), membership.getDerAttrs(), membership.getVirAttrs(),\n                     Collections.<ExternalResource>emptyList());"},{"sha":"6659d7df6094f89b943bfbf6b26b8a0f6b285eb2","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/AbstractTaskJob.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractTaskJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractTaskJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractTaskJob.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -48,8 +48,6 @@\n @DisallowConcurrentExecution\n public abstract class AbstractTaskJob implements TaskJob {\n \n-    public static final String DRY_RUN_JOBDETAIL_KEY = \"dryRun\";\n-\n     /**\n      * Task execution status.\n      */"},{"sha":"c05297105e1c2393418cbc83771cb4df0941a4d1","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/notification/NotificationManagerImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FNotificationManagerImpl.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -250,7 +250,7 @@ private String mergeTemplateIntoString(final String templateLocation, final Map<\n      * @param model Velocity model\n      * @return Velocity context\n      */\n-    protected Context createVelocityContext(Map<String, Object> model) {\n+    protected Context createVelocityContext(final Map<String, Object> model) {\n         Context toolContext = velocityToolManager.createContext();\n         return new VelocityContext(model, toolContext);\n     }"},{"sha":"feafc34cb9f268396ebe77dfe9d8a8a50e342a02","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/notification/SpringVelocityResourceLoader.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FSpringVelocityResourceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FSpringVelocityResourceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FSpringVelocityResourceLoader.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -47,7 +47,7 @@ public class SpringVelocityResourceLoader extends ResourceLoader {\n     private org.springframework.core.io.ResourceLoader resourceLoader;\n \n     @Override\n-    public void init(ExtendedProperties configuration) {\n+    public void init(final ExtendedProperties configuration) {\n         this.resourceLoader =\n                 (org.springframework.core.io.ResourceLoader) this.rsvc.getApplicationAttribute(SPRING_RESOURCE_LOADER);\n         if (this.resourceLoader == null) {\n@@ -59,7 +59,7 @@ public void init(ExtendedProperties configuration) {\n     }\n \n     @Override\n-    public InputStream getResourceStream(final String source) throws ResourceNotFoundException {\n+    public InputStream getResourceStream(final String source) {\n         LOG.debug(\"Looking for Velocity resource with name [{}]\", source);\n \n         org.springframework.core.io.Resource resource = this.resourceLoader.getResource(source);"},{"sha":"6e2b9d305baecd74009a0b2f1bfc8608cb29febb","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/notification/VelocityEngineFactoryBean.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FVelocityEngineFactoryBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FVelocityEngineFactoryBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fnotification%2FVelocityEngineFactoryBean.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -21,7 +21,6 @@\n import java.io.IOException;\n \n import org.apache.velocity.app.VelocityEngine;\n-import org.apache.velocity.exception.VelocityException;\n import org.apache.velocity.runtime.RuntimeConstants;\n import org.apache.velocity.runtime.log.CommonsLogLogChute;\n import org.springframework.beans.factory.FactoryBean;\n@@ -62,7 +61,7 @@ public void setOverrideLogging(final boolean overrideLogging) {\n         this.overrideLogging = overrideLogging;\n     }\n \n-    private void createVelocityEngine() throws IOException, VelocityException {\n+    private void createVelocityEngine() throws IOException {\n         velocityEngine = new VelocityEngine();\n \n         velocityEngine.setProperty(\n@@ -83,7 +82,7 @@ private void createVelocityEngine() throws IOException, VelocityException {\n     }\n \n     @Override\n-    public void afterPropertiesSet() throws IOException, VelocityException {\n+    public void afterPropertiesSet() throws IOException {\n         createVelocityEngine();\n     }\n "},{"sha":"35358af251e46de6c7a94c708a121bff214bd27d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/LDAPPasswordPropagationActions.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPPasswordPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPPasswordPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPPasswordPropagationActions.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -108,7 +108,7 @@ public boolean evaluate(final ConnConfProperty property) {\n                 : (String) cipherAlgorithm.getValues().get(0);\n     }\n \n-    private boolean cipherAlgorithmMatches(String connectorAlgorithm, CipherAlgorithm userAlgorithm) {\n+    private boolean cipherAlgorithmMatches(final String connectorAlgorithm, final CipherAlgorithm userAlgorithm) {\n         if (userAlgorithm == null) {\n             return false;\n         }"},{"sha":"d7c59a4c1cb00bed2140883678c0b8a813c54d1a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PropagationManagerImpl.java","status":"modified","additions":13,"deletions":34,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -39,7 +39,6 @@\n import org.apache.syncope.common.lib.types.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n-import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.AttributableUtils;\n@@ -57,7 +56,6 @@\n import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n import org.apache.syncope.core.provisioning.java.VirAttrHandler;\n-import org.apache.syncope.core.misc.security.UnauthorizedException;\n import org.apache.syncope.core.misc.ConnObjectUtils;\n import org.apache.syncope.core.misc.MappingUtils;\n import org.apache.syncope.core.misc.jexl.JexlUtils;\n@@ -121,8 +119,7 @@ public List<PropagationTask> getUserCreateTasks(\n             final String password,\n             final Collection<AttrTO> vAttrs,\n             final Collection<MembershipTO> membershipTOs,\n-            final Collection<String> noPropResourceNames)\n-            throws NotFoundException, UnauthorizedException {\n+            final Collection<String> noPropResourceNames) {\n \n         User user = userDAO.authFetch(key);\n         if (vAttrs != null && !vAttrs.isEmpty()) {\n@@ -153,15 +150,12 @@ public boolean evaluate(final MembershipTO membershipTO) {\n      * @param vAttrs virtual attributes to be set\n      * @param noPropResourceNames external resources performing not to be considered for propagation\n      * @return list of propagation tasks\n-     * @throws NotFoundException if group is not found\n-     * @throws UnauthorizedException if caller doesn't own enough entitlements to administer the given group\n      */\n     @Override\n     public List<PropagationTask> getGroupCreateTasks(\n             final WorkflowResult<Long> wfResult,\n             final Collection<AttrTO> vAttrs,\n-            final Collection<String> noPropResourceNames)\n-            throws NotFoundException, UnauthorizedException {\n+            final Collection<String> noPropResourceNames) {\n \n         return getGroupCreateTasks(wfResult.getResult(), vAttrs, wfResult.getPropByRes(), noPropResourceNames);\n     }\n@@ -174,16 +168,13 @@ public List<PropagationTask> getGroupCreateTasks(\n      * @param propByRes operation to be performed per resource\n      * @param noPropResourceNames external resources performing not to be considered for propagation\n      * @return list of propagation tasks\n-     * @throws NotFoundException if group is not found\n-     * @throws UnauthorizedException if caller doesn't own enough entitlements to administer the given group\n      */\n     @Override\n     public List<PropagationTask> getGroupCreateTasks(\n             final Long key,\n             final Collection<AttrTO> vAttrs,\n             final PropagationByResource propByRes,\n-            final Collection<String> noPropResourceNames)\n-            throws NotFoundException, UnauthorizedException {\n+            final Collection<String> noPropResourceNames) {\n \n         Group group = groupDAO.authFetch(key);\n         if (vAttrs != null && !vAttrs.isEmpty()) {\n@@ -216,11 +207,10 @@ protected List<PropagationTask> getCreateTaskIds(final Subject<?, ?, ?> subject,\n      * @param enable whether user must be enabled or not\n      * @param noPropResourceNames external resource names not to be considered for propagation\n      * @return list of propagation tasks\n-     * @throws NotFoundException if user is not found\n      */\n     @Override\n     public List<PropagationTask> getUserUpdateTasks(final User user, final Boolean enable,\n-            final Collection<String> noPropResourceNames) throws NotFoundException {\n+            final Collection<String> noPropResourceNames) {\n \n         return getUpdateTasks(\n                 user, // user to be updated on external resources\n@@ -241,13 +231,10 @@ public List<PropagationTask> getUserUpdateTasks(final User user, final Boolean e\n      * @param changePwd whether password should be included for propagation attributes or not\n      * @param noPropResourceNames external resources not to be considered for propagation\n      * @return list of propagation tasks\n-     * @throws NotFoundException if user is not found\n-     * @throws UnauthorizedException if caller doesn't own enough entitlements to administer the given user\n      */\n     @Override\n     public List<PropagationTask> getUserUpdateTasks(final WorkflowResult<Pair<UserMod, Boolean>> wfResult,\n-            final boolean changePwd, final Collection<String> noPropResourceNames)\n-            throws NotFoundException, UnauthorizedException {\n+            final boolean changePwd, final Collection<String> noPropResourceNames) {\n \n         User user = userDAO.authFetch(wfResult.getResult().getKey().getKey());\n         return getUpdateTasks(user,\n@@ -303,8 +290,7 @@ public List<PropagationTask> getUserUpdateTasks(final WorkflowResult<Pair<UserMo\n     @Override\n     public List<PropagationTask> getGroupUpdateTasks(final WorkflowResult<Long> wfResult,\n             final Set<String> vAttrsToBeRemoved, final Set<AttrMod> vAttrsToBeUpdated,\n-            final Set<String> noPropResourceNames)\n-            throws NotFoundException, UnauthorizedException {\n+            final Set<String> noPropResourceNames) {\n \n         Group group = groupDAO.authFetch(wfResult.getResult());\n         return getUpdateTasks(group, null, false, null,\n@@ -317,8 +303,7 @@ public List<PropagationTask> getUpdateTasks(final Subject<?, ?, ?> subject,\n             final String password, final boolean changePwd, final Boolean enable,\n             final Set<String> vAttrsToBeRemoved, final Set<AttrMod> vAttrsToBeUpdated,\n             final PropagationByResource propByRes, final Collection<String> noPropResourceNames,\n-            final Set<MembershipMod> membershipsToAdd)\n-            throws NotFoundException {\n+            final Set<MembershipMod> membershipsToAdd) {\n \n         PropagationByResource localPropByRes = virAttrHandler.fillVirtual(subject, vAttrsToBeRemoved == null\n                 ? Collections.<String>emptySet()\n@@ -389,17 +374,15 @@ public boolean evaluate(final MembershipMod membershipMod) {\n     }\n \n     @Override\n-    public List<PropagationTask> getUserDeleteTasks(final Long userKey, final Collection<String> noPropResourceNames)\n-            throws NotFoundException, UnauthorizedException {\n+    public List<PropagationTask> getUserDeleteTasks(final Long userKey, final Collection<String> noPropResourceNames) {\n \n         User user = userDAO.authFetch(userKey);\n         return getDeleteTaskIds(user, user.getResourceNames(), noPropResourceNames);\n     }\n \n     @Override\n     public List<PropagationTask> getUserDeleteTasks(\n-            final Long userKey, final Set<String> resourceNames, final Collection<String> noPropResourceNames)\n-            throws NotFoundException, UnauthorizedException {\n+            final Long userKey, final Set<String> resourceNames, final Collection<String> noPropResourceNames) {\n \n         User user = userDAO.authFetch(userKey);\n         return getDeleteTaskIds(user, resourceNames, noPropResourceNames);\n@@ -412,32 +395,28 @@ public List<PropagationTask> getUserDeleteTasks(final WorkflowResult<Long> wfRes\n     }\n \n     @Override\n-    public List<PropagationTask> getGroupDeleteTasks(final Long groupKey)\n-            throws NotFoundException, UnauthorizedException {\n+    public List<PropagationTask> getGroupDeleteTasks(final Long groupKey) {\n \n         return getGroupDeleteTasks(groupKey, Collections.<String>emptySet());\n     }\n \n     @Override\n-    public List<PropagationTask> getGroupDeleteTasks(final Long groupKey, final String noPropResourceName)\n-            throws NotFoundException, UnauthorizedException {\n+    public List<PropagationTask> getGroupDeleteTasks(final Long groupKey, final String noPropResourceName) {\n \n         return getGroupDeleteTasks(groupKey, Collections.<String>singleton(noPropResourceName));\n     }\n \n     @Override\n     public List<PropagationTask> getGroupDeleteTasks(\n-            final Long groupKey, final Collection<String> noPropResourceNames)\n-            throws NotFoundException, UnauthorizedException {\n+            final Long groupKey, final Collection<String> noPropResourceNames) {\n \n         Group group = groupDAO.authFetch(groupKey);\n         return getDeleteTaskIds(group, group.getResourceNames(), noPropResourceNames);\n     }\n \n     @Override\n     public List<PropagationTask> getGroupDeleteTasks(\n-            final Long groupKey, final Set<String> resourceNames, final Collection<String> noPropResourceNames)\n-            throws NotFoundException, UnauthorizedException {\n+            final Long groupKey, final Set<String> resourceNames, final Collection<String> noPropResourceNames) {\n \n         Group group = groupDAO.authFetch(groupKey);\n         return getDeleteTaskIds(group, resourceNames, noPropResourceNames);"},{"sha":"9373249ed0b61475d79489368d08c4a05d8bdf59","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/AbstractProvisioningJob.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractProvisioningJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractProvisioningJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractProvisioningJob.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -32,8 +32,6 @@\n import org.apache.syncope.core.persistence.api.dao.PolicyDAO;\n import org.apache.syncope.core.persistence.api.entity.group.GMapping;\n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n-import org.apache.syncope.core.persistence.api.entity.task.PushTask;\n-import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.persistence.api.entity.user.UMapping;\n import org.apache.syncope.core.provisioning.api.Connector;\n@@ -53,8 +51,8 @@\n  * Job for executing synchronization tasks.\n  *\n  * @see AbstractTaskJob\n- * @see SyncTask\n- * @see PushTask\n+ * @see org.apache.syncope.core.persistence.api.entity.task.SyncTask\n+ * @see org.apache.syncope.core.persistence.api.entity.task.PushTask\n  */\n public abstract class AbstractProvisioningJob<T extends ProvisioningTask, A extends ProvisioningActions>\n         extends AbstractTaskJob {"},{"sha":"226cedfc4014773e4288973264d41084f38909d5","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/AbstractPushResultHandler.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractPushResultHandler.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -25,7 +25,6 @@\n import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.syncope.common.lib.mod.AttrMod;\n import org.apache.syncope.common.lib.mod.MembershipMod;\n-import org.apache.syncope.common.lib.to.AbstractSubjectTO;\n import org.apache.syncope.common.lib.types.AuditElements;\n import org.apache.syncope.common.lib.types.AuditElements.Result;\n import org.apache.syncope.common.lib.types.IntMappingType;"},{"sha":"d57f9acd67fc82d5844fbc7906e7346ef8ee8f9b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/AbstractSyncResultHandler.java","status":"modified","additions":29,"deletions":26,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FAbstractSyncResultHandler.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -58,7 +58,7 @@ public abstract class AbstractSyncResultHandler extends AbstractSyncopeResultHan\n     protected abstract AbstractSubjectMod getSubjectMod(AbstractSubjectTO subjectTO, SyncDelta delta);\n \n     protected abstract AbstractSubjectTO doCreate(\n-            AbstractSubjectTO subjectTO, SyncDelta _delta, ProvisioningResult result);\n+            AbstractSubjectTO subjectTO, SyncDelta delta, ProvisioningResult result);\n \n     protected abstract AbstractSubjectTO doLink(AbstractSubjectTO before, ProvisioningResult result, boolean unlink);\n \n@@ -118,12 +118,12 @@ protected List<ProvisioningResult> assign(final SyncDelta delta, final Attributa\n         if (profile.isDryRun()) {\n             result.setKey(0L);\n         } else {\n-            SyncDelta _delta = delta;\n+            SyncDelta actionedDelta = delta;\n             for (SyncActions action : profile.getActions()) {\n-                _delta = action.beforeAssign(this.getProfile(), _delta, transformed);\n+                actionedDelta = action.beforeAssign(this.getProfile(), actionedDelta, transformed);\n             }\n \n-            create(transformed, _delta, attrUtils, UnmatchingRule.toEventName(UnmatchingRule.ASSIGN), result);\n+            create(transformed, actionedDelta, attrUtils, UnmatchingRule.toEventName(UnmatchingRule.ASSIGN), result);\n         }\n \n         return Collections.singletonList(result);\n@@ -154,12 +154,12 @@ protected List<ProvisioningResult> provision(final SyncDelta delta, final Attrib\n         if (profile.isDryRun()) {\n             result.setKey(0L);\n         } else {\n-            SyncDelta _delta = delta;\n+            SyncDelta actionedDelta = delta;\n             for (SyncActions action : profile.getActions()) {\n-                _delta = action.beforeProvision(this.getProfile(), _delta, transformed);\n+                actionedDelta = action.beforeProvision(this.getProfile(), actionedDelta, transformed);\n             }\n \n-            create(transformed, _delta, attrUtils, UnmatchingRule.toEventName(UnmatchingRule.PROVISION), result);\n+            create(transformed, actionedDelta, attrUtils, UnmatchingRule.toEventName(UnmatchingRule.PROVISION), result);\n         }\n \n         return Collections.<ProvisioningResult>singletonList(result);\n@@ -204,9 +204,8 @@ private void create(\n         audit(operation, resultStatus, null, output, delta);\n     }\n \n-    protected List<ProvisioningResult> update(SyncDelta delta, final List<Long> subjects,\n-            final AttributableUtils attrUtils)\n-            throws JobExecutionException {\n+    protected List<ProvisioningResult> update(final SyncDelta delta, final List<Long> subjects,\n+            final AttributableUtils attrUtils) throws JobExecutionException {\n \n         if (!profile.getTask().isPerformUpdate()) {\n             LOG.debug(\"SyncTask not configured for update\");\n@@ -217,6 +216,7 @@ protected List<ProvisioningResult> update(SyncDelta delta, final List<Long> subj\n \n         List<ProvisioningResult> results = new ArrayList<>();\n \n+        SyncDelta workingDelta = delta;\n         for (Long key : subjects) {\n             LOG.debug(\"About to update {}\", key);\n \n@@ -242,20 +242,20 @@ protected List<ProvisioningResult> update(SyncDelta delta, final List<Long> subj\n                     output = null;\n                 } else {\n                     try {\n-                        final AbstractSubjectMod attributableMod = getSubjectMod(before, delta);\n+                        AbstractSubjectMod subjectMod = getSubjectMod(before, workingDelta);\n \n                         // Attribute value transformation (if configured)\n-                        final AbstractSubjectMod actual = attrTransformer.transform(attributableMod);\n+                        AbstractSubjectMod actual = attrTransformer.transform(subjectMod);\n                         LOG.debug(\"Transformed: {}\", actual);\n \n                         for (SyncActions action : profile.getActions()) {\n-                            delta = action.beforeUpdate(this.getProfile(), delta, before, attributableMod);\n+                            workingDelta = action.beforeUpdate(this.getProfile(), workingDelta, before, subjectMod);\n                         }\n \n-                        final AbstractSubjectTO updated = doUpdate(before, attributableMod, delta, result);\n+                        final AbstractSubjectTO updated = doUpdate(before, subjectMod, workingDelta, result);\n \n                         for (SyncActions action : profile.getActions()) {\n-                            action.after(this.getProfile(), delta, updated, result);\n+                            action.after(this.getProfile(), workingDelta, updated, result);\n                         }\n \n                         output = updated;\n@@ -265,28 +265,30 @@ protected List<ProvisioningResult> update(SyncDelta delta, final List<Long> subj\n                     } catch (PropagationException e) {\n                         // A propagation failure doesn't imply a synchronization failure.\n                         // The propagation exception status will be reported into the propagation task execution.\n-                        LOG.error(\"Could not propagate {} {}\", attrUtils.getType(), delta.getUid().getUidValue(), e);\n+                        LOG.error(\"Could not propagate {} {}\", \n+                                attrUtils.getType(), workingDelta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n                     } catch (IgnoreProvisionException e) {\n                         throw e;\n                     } catch (Exception e) {\n                         result.setStatus(ProvisioningResult.Status.FAILURE);\n                         result.setMessage(ExceptionUtils.getRootCauseMessage(e));\n-                        LOG.error(\"Could not update {} {}\", attrUtils.getType(), delta.getUid().getUidValue(), e);\n+                        LOG.error(\"Could not update {} {}\", \n+                                attrUtils.getType(), workingDelta.getUid().getUidValue(), e);\n                         output = e;\n                         resultStatus = Result.FAILURE;\n                     }\n                 }\n-                audit(MatchingRule.toEventName(MatchingRule.UPDATE), resultStatus, before, output, delta);\n+                audit(MatchingRule.toEventName(MatchingRule.UPDATE), resultStatus, before, output, workingDelta);\n             }\n             results.add(result);\n         }\n         return results;\n     }\n \n     protected List<ProvisioningResult> deprovision(\n-            SyncDelta delta,\n+            final SyncDelta delta,\n             final List<Long> subjects,\n             final AttributableUtils attrUtils,\n             final boolean unlink)\n@@ -374,7 +376,7 @@ protected List<ProvisioningResult> deprovision(\n     }\n \n     protected List<ProvisioningResult> link(\n-            SyncDelta delta,\n+            final SyncDelta delta,\n             final List<Long> subjects,\n             final AttributableUtils attrUtils,\n             final boolean unlink)\n@@ -460,7 +462,7 @@ protected List<ProvisioningResult> link(\n     }\n \n     protected List<ProvisioningResult> delete(\n-            SyncDelta delta, final List<Long> subjects, final AttributableUtils attrUtils)\n+            final SyncDelta delta, final List<Long> subjects, final AttributableUtils attrUtils)\n             throws JobExecutionException {\n \n         if (!profile.getTask().isPerformDelete()) {\n@@ -472,6 +474,7 @@ protected List<ProvisioningResult> delete(\n \n         List<ProvisioningResult> delResults = new ArrayList<>();\n \n+        SyncDelta workingDelta = delta;\n         for (Long id : subjects) {\n             Object output;\n             Result resultStatus = Result.FAILURE;\n@@ -490,7 +493,7 @@ protected List<ProvisioningResult> delete(\n \n                 if (!profile.isDryRun()) {\n                     for (SyncActions action : profile.getActions()) {\n-                        delta = action.beforeDelete(this.getProfile(), delta, before);\n+                        workingDelta = action.beforeDelete(this.getProfile(), workingDelta, before);\n                     }\n \n                     try {\n@@ -507,10 +510,10 @@ protected List<ProvisioningResult> delete(\n                     }\n \n                     for (SyncActions action : profile.getActions()) {\n-                        action.after(this.getProfile(), delta, before, result);\n+                        action.after(this.getProfile(), workingDelta, before, result);\n                     }\n \n-                    audit(ResourceOperation.DELETE.name().toLowerCase(), resultStatus, before, output, delta);\n+                    audit(ResourceOperation.DELETE.name().toLowerCase(), resultStatus, before, output, workingDelta);\n                 }\n \n                 delResults.add(result);\n@@ -527,8 +530,8 @@ protected List<ProvisioningResult> delete(\n         return delResults;\n     }\n \n-    private List<ProvisioningResult> ignore(SyncDelta delta, final AttributableUtils attrUtils, final boolean matching)\n-            throws JobExecutionException {\n+    private List<ProvisioningResult> ignore(final SyncDelta delta, final AttributableUtils attrUtils,\n+            final boolean matching) throws JobExecutionException {\n \n         LOG.debug(\"Subject to ignore {}\", delta.getObject().getUid().getUidValue());\n "},{"sha":"1ce0357e1ed0485711e5b5dd7637b3b2a83770e2","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/GroupSyncResultHandlerImpl.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FGroupSyncResultHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FGroupSyncResultHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FGroupSyncResultHandlerImpl.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -65,9 +65,7 @@ protected AbstractSubjectTO getSubjectTO(final long key) {\n     }\n \n     @Override\n-    protected AbstractSubjectMod getSubjectMod(\n-            final AbstractSubjectTO subjectTO, final SyncDelta delta) {\n-\n+    protected AbstractSubjectMod getSubjectMod(final AbstractSubjectTO subjectTO, final SyncDelta delta) {\n         return connObjectUtils.getAttributableMod(\n                 subjectTO.getKey(),\n                 delta.getObject(),\n@@ -78,7 +76,7 @@ protected AbstractSubjectMod getSubjectMod(\n \n     @Override\n     protected AbstractSubjectTO doCreate(\n-            final AbstractSubjectTO subjectTO, final SyncDelta _delta, final ProvisioningResult result) {\n+            final AbstractSubjectTO subjectTO, final SyncDelta delta, final ProvisioningResult result) {\n \n         GroupTO groupTO = GroupTO.class.cast(subjectTO);\n "},{"sha":"7acc2aeea24ccd7c874d8fca3fd6eea25f104834","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/PushJobImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FPushJobImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FPushJobImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FPushJobImpl.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -53,6 +53,8 @@\n  */\n public class PushJobImpl extends AbstractProvisioningJob<PushTask, PushActions> implements PushJob {\n \n+    private static final int PAGE_SIZE = 1000;\n+\n     /**\n      * User DAO.\n      */\n@@ -71,8 +73,6 @@ public class PushJobImpl extends AbstractProvisioningJob<PushTask, PushActions>\n     @Autowired\n     private GroupDAO groupDAO;\n \n-    private final int PAGE_SIZE = 1000;\n-\n     @Override\n     protected String executeWithSecurityContext(\n             final PushTask pushTask,"},{"sha":"54e511521ac89140f9eb6c9cd760bb1fd86e7342","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/SyncJobImpl.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncJobImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncJobImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncJobImpl.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -23,7 +23,6 @@\n import org.apache.syncope.common.lib.mod.ReferenceMod;\n import org.apache.syncope.common.lib.mod.GroupMod;\n import org.apache.syncope.common.lib.types.SyncPolicySpec;\n-import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.entity.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.group.GMapping;\n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n@@ -32,7 +31,6 @@\n import org.apache.syncope.core.provisioning.api.Connector;\n import org.apache.syncope.core.provisioning.api.sync.ProvisioningProfile;\n import org.apache.syncope.core.provisioning.api.sync.SyncActions;\n-import org.apache.syncope.core.misc.security.UnauthorizedException;\n import org.apache.syncope.core.misc.spring.ApplicationContextProvider;\n import org.apache.syncope.core.provisioning.api.job.SyncJob;\n import org.apache.syncope.core.provisioning.api.sync.GroupSyncResultHandler;\n@@ -61,9 +59,7 @@ public class SyncJobImpl extends AbstractProvisioningJob<SyncTask, SyncActions>\n     @Autowired\n     protected SyncUtils syncUtilities;\n \n-    protected void setGroupOwners(final GroupSyncResultHandler rhandler)\n-            throws UnauthorizedException, NotFoundException {\n-\n+    protected void setGroupOwners(final GroupSyncResultHandler rhandler) {\n         for (Map.Entry<Long, String> entry : rhandler.getGroupOwnerMap().entrySet()) {\n             GroupMod groupMod = new GroupMod();\n             groupMod.setKey(entry.getKey());"},{"sha":"1651193b19ed319478fa249b26f68a49b77b54b2","filename":"core/rest-cxf/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Frest-cxf%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Frest-cxf%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -141,10 +141,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n     \n     <resources>"},{"sha":"f031c922a88d185c3ade5bc79048beb9610fec6b","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/RestServiceExceptionMapper.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2FRestServiceExceptionMapper.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -328,8 +328,7 @@ private String getJPAMessage(final Throwable ex) {\n         Throwable throwable = ExceptionUtils.getRootCause(ex);\n         String message = null;\n         if (throwable instanceof SQLException) {\n-            String SQLState = ((SQLException) throwable).getSQLState();\n-            String messageKey = EXCEPTION_CODE_MAP.get(SQLState);\n+            String messageKey = EXCEPTION_CODE_MAP.get(((SQLException) throwable).getSQLState());\n             if (messageKey != null) {\n                 message = env.getProperty(\"errMessage.\" + messageKey);\n             }"},{"sha":"c65a4096c1f347e3bea06b18dcf5fb2c586c56e0","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AbstractServiceImpl.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractServiceImpl.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.rest.cxf.service;\n \n-import java.net.URI;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;"},{"sha":"07395efdf06780729ae11d1c4f57cd7bff366a2f","filename":"core/workflow-activiti/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fworkflow-activiti%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fworkflow-activiti%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-activiti%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -79,10 +79,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n   </build>\n </project>"},{"sha":"a356ad87dd1c19bab6ac280d5597e2d90f5ad1f4","filename":"core/workflow-activiti/src/main/java/org/apache/syncope/core/workflow/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":21,"deletions":42,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -69,7 +69,6 @@\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.WorkflowFormPropertyType;\n import org.apache.syncope.core.misc.security.AuthContextUtils;\n-import org.apache.syncope.core.misc.security.UnauthorizedException;\n import org.apache.syncope.core.misc.spring.BeanUtils;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.ParsingValidationException;\n@@ -85,7 +84,9 @@\n import org.springframework.transaction.annotation.Transactional;\n \n /**\n- * Activiti (http://www.activiti.org/) based implementation.\n+ * Activiti {\n+ *\n+ * @see http://www.activiti.org/} based implementation.\n  */\n public class ActivitiUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n \n@@ -243,21 +244,19 @@ private void saveForFormSubmit(final User user, final String password,\n \n     @Override\n     public WorkflowResult<Pair<Long, Boolean>> create(final UserTO userTO, final boolean disablePwdPolicyCheck,\n-            final boolean storePassword) throws WorkflowException {\n+            final boolean storePassword) {\n \n         return create(userTO, disablePwdPolicyCheck, null, storePassword);\n     }\n \n     @Override\n-    public WorkflowResult<Pair<Long, Boolean>> create(UserTO userTO, boolean storePassword) throws\n-            UnauthorizedException, WorkflowException {\n-\n+    public WorkflowResult<Pair<Long, Boolean>> create(final UserTO userTO, final boolean storePassword) {\n         return create(userTO, false, storePassword);\n     }\n \n     @Override\n     public WorkflowResult<Pair<Long, Boolean>> create(final UserTO userTO, final boolean disablePwdPolicyCheck,\n-            final Boolean enabled, final boolean storePassword) throws WorkflowException {\n+            final Boolean enabled, final boolean storePassword) {\n \n         final Map<String, Object> variables = new HashMap<>();\n         variables.put(WF_EXECUTOR, AuthContextUtils.getAuthenticatedUsername());\n@@ -304,9 +303,7 @@ public WorkflowResult<Pair<Long, Boolean>> create(final UserTO userTO, final boo\n                 new ImmutablePair<>(user.getKey(), propagateEnable), propByRes, getPerformedTasks(user));\n     }\n \n-    private Set<String> doExecuteTask(final User user, final String task,\n-            final Map<String, Object> moreVariables) throws WorkflowException {\n-\n+    private Set<String> doExecuteTask(final User user, final String task, final Map<String, Object> moreVariables) {\n         Set<String> preTasks = getPerformedTasks(user);\n \n         final Map<String, Object> variables = new HashMap<>();\n@@ -344,9 +341,7 @@ private Set<String> doExecuteTask(final User user, final String task,\n     }\n \n     @Override\n-    protected WorkflowResult<Long> doActivate(final User user, final String token)\n-            throws WorkflowException {\n-\n+    protected WorkflowResult<Long> doActivate(final User user, final String token) {\n         Set<String> tasks = doExecuteTask(user, \"activate\", Collections.singletonMap(TOKEN, (Object) token));\n \n         updateStatus(user);\n@@ -356,9 +351,7 @@ protected WorkflowResult<Long> doActivate(final User user, final String token)\n     }\n \n     @Override\n-    protected WorkflowResult<Pair<UserMod, Boolean>> doUpdate(final User user, final UserMod userMod)\n-            throws WorkflowException {\n-\n+    protected WorkflowResult<Pair<UserMod, Boolean>> doUpdate(final User user, final UserMod userMod) {\n         Set<String> tasks = doExecuteTask(user, \"update\", Collections.singletonMap(USER_MOD, (Object) userMod));\n \n         updateStatus(user);\n@@ -377,7 +370,7 @@ protected WorkflowResult<Pair<UserMod, Boolean>> doUpdate(final User user, final\n \n     @Override\n     @Transactional(rollbackFor = { Throwable.class })\n-    protected WorkflowResult<Long> doSuspend(final User user) throws WorkflowException {\n+    protected WorkflowResult<Long> doSuspend(final User user) {\n         Set<String> performedTasks = doExecuteTask(user, \"suspend\", null);\n         updateStatus(user);\n         User updated = userDAO.save(user);\n@@ -386,7 +379,7 @@ protected WorkflowResult<Long> doSuspend(final User user) throws WorkflowExcepti\n     }\n \n     @Override\n-    protected WorkflowResult<Long> doReactivate(final User user) throws WorkflowException {\n+    protected WorkflowResult<Long> doReactivate(final User user) {\n         Set<String> performedTasks = doExecuteTask(user, \"reactivate\", null);\n         updateStatus(user);\n \n@@ -396,7 +389,7 @@ protected WorkflowResult<Long> doReactivate(final User user) throws WorkflowExce\n     }\n \n     @Override\n-    protected void doRequestPasswordReset(final User user) throws WorkflowException {\n+    protected void doRequestPasswordReset(final User user) {\n         Map<String, Object> variables = new HashMap<>(2);\n         variables.put(USER_TO, userDataBinder.getUserTO(user));\n         variables.put(EVENT, \"requestPasswordReset\");\n@@ -406,9 +399,7 @@ protected void doRequestPasswordReset(final User user) throws WorkflowException\n     }\n \n     @Override\n-    protected void doConfirmPasswordReset(final User user, final String token, final String password)\n-            throws WorkflowException {\n-\n+    protected void doConfirmPasswordReset(final User user, final String token, final String password) {\n         Map<String, Object> variables = new HashMap<>(4);\n         variables.put(TOKEN, token);\n         variables.put(PASSWORD, password);\n@@ -420,7 +411,7 @@ protected void doConfirmPasswordReset(final User user, final String token, final\n     }\n \n     @Override\n-    protected void doDelete(final User user) throws WorkflowException {\n+    protected void doDelete(final User user) {\n         doExecuteTask(user, \"delete\", null);\n \n         PropagationByResource propByRes = new PropagationByResource();\n@@ -445,9 +436,7 @@ protected void doDelete(final User user) throws WorkflowException {\n     }\n \n     @Override\n-    public WorkflowResult<Long> execute(final UserTO userTO, final String taskId)\n-            throws UnauthorizedException, WorkflowException {\n-\n+    public WorkflowResult<Long> execute(final UserTO userTO, final String taskId) {\n         User user = userDAO.authFetch(userTO.getKey());\n \n         final Map<String, Object> variables = new HashMap<>();\n@@ -512,9 +501,7 @@ protected void exportProcessModel(final OutputStream os) {\n     }\n \n     @Override\n-    public void exportDefinition(final WorkflowDefinitionFormat format, final OutputStream os)\n-            throws WorkflowException {\n-\n+    public void exportDefinition(final WorkflowDefinitionFormat format, final OutputStream os) {\n         switch (format) {\n             case JSON:\n                 exportProcessModel(os);\n@@ -527,14 +514,12 @@ public void exportDefinition(final WorkflowDefinitionFormat format, final Output\n     }\n \n     @Override\n-    public void exportDiagram(final OutputStream os) throws WorkflowException {\n+    public void exportDiagram(final OutputStream os) {\n         exportProcessResource(WF_DGRM_RESOURCE, os);\n     }\n \n     @Override\n-    public void importDefinition(final WorkflowDefinitionFormat format, final String definition)\n-            throws WorkflowException {\n-\n+    public void importDefinition(final WorkflowDefinitionFormat format, final String definition) {\n         Model model = getModel(getProcessDefinition());\n         switch (format) {\n             case JSON:\n@@ -757,9 +742,7 @@ public List<WorkflowFormTO> getForms(final String workflowId, final String name)\n     }\n \n     @Override\n-    public WorkflowFormTO getForm(final String workflowId)\n-            throws NotFoundException, WorkflowException {\n-\n+    public WorkflowFormTO getForm(final String workflowId) {\n         Task task;\n         try {\n             task = taskService.createTaskQuery().processInstanceId(workflowId).singleResult();\n@@ -810,9 +793,7 @@ private Pair<Task, TaskFormData> checkTask(final String taskId, final String aut\n \n     @Transactional\n     @Override\n-    public WorkflowFormTO claimForm(final String taskId)\n-            throws WorkflowException {\n-\n+    public WorkflowFormTO claimForm(final String taskId) {\n         final String authUser = AuthContextUtils.getAuthenticatedUsername();\n         Pair<Task, TaskFormData> checked = checkTask(taskId, authUser);\n \n@@ -837,9 +818,7 @@ public WorkflowFormTO claimForm(final String taskId)\n \n     @Transactional\n     @Override\n-    public WorkflowResult<UserMod> submitForm(final WorkflowFormTO form)\n-            throws WorkflowException {\n-\n+    public WorkflowResult<UserMod> submitForm(final WorkflowFormTO form) {\n         final String authUser = AuthContextUtils.getAuthenticatedUsername();\n         Pair<Task, TaskFormData> checked = checkTask(form.getTaskId(), authUser);\n "},{"sha":"20059ce93f5baee624c76c53bbe27a591fda1553","filename":"core/workflow-activiti/src/main/java/org/apache/syncope/core/workflow/activiti/SyncopeGroupQueryImpl.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FSyncopeGroupQueryImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FSyncopeGroupQueryImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FSyncopeGroupQueryImpl.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -48,6 +48,7 @@ public GroupQuery groupId(final String groupId) {\n         try {\n             this.groupId = Long.valueOf(groupId);\n         } catch (NumberFormatException e) {\n+            // ignore\n         }\n \n         return this;"},{"sha":"55d8d5dbe76700c9db25eb3214f4c39933b3e053","filename":"core/workflow-activiti/src/main/java/org/apache/syncope/core/workflow/activiti/SyncopeUserQueryImpl.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FSyncopeUserQueryImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FSyncopeUserQueryImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FSyncopeUserQueryImpl.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -96,6 +96,7 @@ public UserQuery memberOfGroup(final String groupId) {\n         try {\n             memberOf = Long.valueOf(groupId);\n         } catch (NumberFormatException e) {\n+            // ignore\n         }\n         return this;\n     }"},{"sha":"3692c443dff2cf553585bdb52118c9ce26251517","filename":"core/workflow-api/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fworkflow-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fworkflow-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-api%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -51,10 +51,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n   </build>\n </project>"},{"sha":"42ae77c517ac435363243a94519c9a415e5aac05","filename":"core/workflow-java/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fworkflow-java%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fworkflow-java%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -60,10 +60,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n   </build>\n </project>"},{"sha":"30bfae66be5890768e09e792d256fea99fac10f4","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/AbstractGroupWorkflowAdapter.java","status":"modified","additions":4,"deletions":9,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractGroupWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractGroupWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractGroupWorkflowAdapter.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -19,14 +19,12 @@\n package org.apache.syncope.core.workflow.java;\n \n import org.apache.syncope.common.lib.mod.GroupMod;\n-import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.data.GroupDataBinder;\n import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n-import org.apache.syncope.core.workflow.api.WorkflowException;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n \n@@ -47,20 +45,17 @@ public String getPrefix() {\n         return null;\n     }\n \n-    protected abstract WorkflowResult<Long> doUpdate(Group group, GroupMod groupMod)\n-            throws WorkflowException;\n+    protected abstract WorkflowResult<Long> doUpdate(Group group, GroupMod groupMod);\n \n     @Override\n-    public WorkflowResult<Long> update(final GroupMod groupMod)\n-            throws NotFoundException, WorkflowException {\n-\n+    public WorkflowResult<Long> update(final GroupMod groupMod) {\n         return doUpdate(groupDAO.authFetch(groupMod.getKey()), groupMod);\n     }\n \n-    protected abstract void doDelete(Group group) throws WorkflowException;\n+    protected abstract void doDelete(Group group);\n \n     @Override\n-    public void delete(final Long groupKey) throws NotFoundException, WorkflowException {\n+    public void delete(final Long groupKey) {\n         doDelete(groupDAO.authFetch(groupKey));\n     }\n }"},{"sha":"b1c3b4a906bd26bdbaefc7176de52a314fe38ade","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/AbstractUserWorkflowAdapter.java","status":"modified","additions":15,"deletions":26,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractUserWorkflowAdapter.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -26,7 +26,6 @@\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.data.UserDataBinder;\n import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n-import org.apache.syncope.core.workflow.api.WorkflowException;\n import org.identityconnectors.common.Base64;\n import org.identityconnectors.common.security.EncryptorFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -59,46 +58,39 @@ public String getPrefix() {\n         return null;\n     }\n \n-    protected abstract WorkflowResult<Long> doActivate(User user, String token) throws WorkflowException;\n+    protected abstract WorkflowResult<Long> doActivate(User user, String token);\n \n     @Override\n-    public WorkflowResult<Long> activate(final Long userKey, final String token)\n-            throws WorkflowException {\n-\n+    public WorkflowResult<Long> activate(final Long userKey, final String token) {\n         return doActivate(userDAO.authFetch(userKey), token);\n     }\n \n-    protected abstract WorkflowResult<Pair<UserMod, Boolean>> doUpdate(User user, UserMod userMod)\n-            throws WorkflowException;\n+    protected abstract WorkflowResult<Pair<UserMod, Boolean>> doUpdate(User user, UserMod userMod);\n \n     @Override\n-    public WorkflowResult<Pair<UserMod, Boolean>> update(final UserMod userMod)\n-            throws WorkflowException {\n-\n+    public WorkflowResult<Pair<UserMod, Boolean>> update(final UserMod userMod) {\n         return doUpdate(userDAO.authFetch(userMod.getKey()), userMod);\n     }\n \n-    protected abstract WorkflowResult<Long> doSuspend(User user) throws WorkflowException;\n+    protected abstract WorkflowResult<Long> doSuspend(User user);\n \n     @Override\n-    public WorkflowResult<Long> suspend(final Long userKey)\n-            throws WorkflowException {\n-\n+    public WorkflowResult<Long> suspend(final Long userKey) {\n         return suspend(userDAO.authFetch(userKey));\n     }\n \n     @Override\n-    public WorkflowResult<Long> suspend(final User user) throws WorkflowException {\n+    public WorkflowResult<Long> suspend(final User user) {\n         // set suspended flag\n         user.setSuspended(Boolean.TRUE);\n \n         return doSuspend(user);\n     }\n \n-    protected abstract WorkflowResult<Long> doReactivate(User user) throws WorkflowException;\n+    protected abstract WorkflowResult<Long> doReactivate(User user);\n \n     @Override\n-    public WorkflowResult<Long> reactivate(final Long userKey) throws WorkflowException {\n+    public WorkflowResult<Long> reactivate(final Long userKey) {\n         final User user = userDAO.authFetch(userKey);\n \n         // reset failed logins\n@@ -110,27 +102,24 @@ public WorkflowResult<Long> reactivate(final Long userKey) throws WorkflowExcept\n         return doReactivate(user);\n     }\n \n-    protected abstract void doRequestPasswordReset(User user) throws WorkflowException;\n+    protected abstract void doRequestPasswordReset(User user);\n \n     @Override\n-    public void requestPasswordReset(final Long userKey) throws WorkflowException {\n+    public void requestPasswordReset(final Long userKey) {\n         doRequestPasswordReset(userDAO.authFetch(userKey));\n     }\n \n-    protected abstract void doConfirmPasswordReset(User user, String token, String password)\n-            throws WorkflowException;\n+    protected abstract void doConfirmPasswordReset(User user, String token, String password);\n \n     @Override\n-    public void confirmPasswordReset(final Long userKey, final String token, final String password)\n-            throws WorkflowException {\n-\n+    public void confirmPasswordReset(final Long userKey, final String token, final String password) {\n         doConfirmPasswordReset(userDAO.authFetch(userKey), token, password);\n     }\n \n-    protected abstract void doDelete(User user) throws WorkflowException;\n+    protected abstract void doDelete(User user);\n \n     @Override\n-    public void delete(final Long userKey) throws WorkflowException {\n+    public void delete(final Long userKey) {\n         doDelete(userDAO.authFetch(userKey));\n     }\n }"},{"sha":"041234fe8506bb742c62c1e3a604c0e9c9740031","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultGroupWorkflowAdapter.java","status":"modified","additions":10,"deletions":27,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -26,7 +26,6 @@\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n import org.apache.syncope.common.lib.types.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n-import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.workflow.api.WorkflowDefinitionFormat;\n@@ -40,7 +39,7 @@\n public class DefaultGroupWorkflowAdapter extends AbstractGroupWorkflowAdapter {\n \n     @Override\n-    public WorkflowResult<Long> create(final GroupTO groupTO) throws WorkflowException {\n+    public WorkflowResult<Long> create(final GroupTO groupTO) {\n         Group group = entityFactory.newEntity(Group.class);\n         dataBinder.create(group, groupTO);\n         group = groupDAO.save(group);\n@@ -52,9 +51,7 @@ public WorkflowResult<Long> create(final GroupTO groupTO) throws WorkflowExcepti\n     }\n \n     @Override\n-    protected WorkflowResult<Long> doUpdate(final Group group, final GroupMod groupMod)\n-            throws WorkflowException {\n-\n+    protected WorkflowResult<Long> doUpdate(final Group group, final GroupMod groupMod) {\n         PropagationByResource propByRes = dataBinder.update(group, groupMod);\n \n         Group updated = groupDAO.save(group);\n@@ -63,35 +60,27 @@ protected WorkflowResult<Long> doUpdate(final Group group, final GroupMod groupM\n     }\n \n     @Override\n-    protected void doDelete(final Group group)\n-            throws WorkflowException {\n-\n+    protected void doDelete(final Group group) {\n         groupDAO.delete(group);\n     }\n \n     @Override\n-    public WorkflowResult<Long> execute(final GroupTO group, final String taskId)\n-            throws NotFoundException, WorkflowException {\n-\n+    public WorkflowResult<Long> execute(final GroupTO group, final String taskId) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public void exportDefinition(final WorkflowDefinitionFormat format, final OutputStream os)\n-            throws WorkflowException {\n-\n+    public void exportDefinition(final WorkflowDefinitionFormat format, final OutputStream os) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public void exportDiagram(final OutputStream os) throws WorkflowException {\n+    public void exportDiagram(final OutputStream os) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public void importDefinition(final WorkflowDefinitionFormat format, final String definition)\n-            throws NotFoundException, WorkflowException {\n-\n+    public void importDefinition(final WorkflowDefinitionFormat format, final String definition) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n@@ -106,23 +95,17 @@ public List<WorkflowFormTO> getForms(final String workflowId, final String name)\n     }\n \n     @Override\n-    public WorkflowFormTO getForm(final String workflowId)\n-            throws NotFoundException, WorkflowException {\n-\n+    public WorkflowFormTO getForm(final String workflowId) {\n         return null;\n     }\n \n     @Override\n-    public WorkflowFormTO claimForm(final String taskId)\n-            throws NotFoundException, WorkflowException {\n-\n+    public WorkflowFormTO claimForm(final String taskId) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public WorkflowResult<GroupMod> submitForm(final WorkflowFormTO form)\n-            throws NotFoundException, WorkflowException {\n-\n+    public WorkflowResult<GroupMod> submitForm(final WorkflowFormTO form) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n "},{"sha":"6691541fac93e5852a0acdfdc796075422b8eb39","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultUserWorkflowAdapter.java","status":"modified","additions":17,"deletions":38,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -30,7 +30,6 @@\n import org.apache.syncope.common.lib.types.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n-import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.workflow.api.WorkflowDefinitionFormat;\n@@ -48,22 +47,20 @@ public class DefaultUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n     private ConfDAO confDAO;\n \n     @Override\n-    public WorkflowResult<Pair<Long, Boolean>> create(UserTO userTO, boolean storePassword)\n-            throws WorkflowException {\n-\n+    public WorkflowResult<Pair<Long, Boolean>> create(final UserTO userTO, final boolean storePassword) {\n         return create(userTO, false, true);\n     }\n \n     @Override\n     public WorkflowResult<Pair<Long, Boolean>> create(final UserTO userTO, final boolean disablePwdPolicyCheck,\n-            final boolean storePassword) throws WorkflowException {\n+            final boolean storePassword) {\n \n         return create(userTO, disablePwdPolicyCheck, null, storePassword);\n     }\n \n     @Override\n     public WorkflowResult<Pair<Long, Boolean>> create(final UserTO userTO, final boolean disablePwdPolicyCheck,\n-            final Boolean enabled, final boolean storePassword) throws WorkflowException {\n+            final Boolean enabled, final boolean storePassword) {\n \n         User user = entityFactory.newEntity(User.class);\n         dataBinder.create(user, userTO, storePassword);\n@@ -97,9 +94,7 @@ public WorkflowResult<Pair<Long, Boolean>> create(final UserTO userTO, final boo\n     }\n \n     @Override\n-    protected WorkflowResult<Long> doActivate(final User user, final String token)\n-            throws WorkflowException {\n-\n+    protected WorkflowResult<Long> doActivate(final User user, final String token) {\n         if (!user.checkToken(token)) {\n             throw new WorkflowException(new IllegalArgumentException(\"Wrong token: \" + token + \" for \" + user));\n         }\n@@ -112,9 +107,7 @@ protected WorkflowResult<Long> doActivate(final User user, final String token)\n     }\n \n     @Override\n-    protected WorkflowResult<Pair<UserMod, Boolean>> doUpdate(final User user, final UserMod userMod)\n-            throws WorkflowException {\n-\n+    protected WorkflowResult<Pair<UserMod, Boolean>> doUpdate(final User user, final UserMod userMod) {\n         // update password internally only if required\n         UserMod actualMod = SerializationUtils.clone(userMod);\n         if (actualMod.getPwdPropRequest() != null && !actualMod.getPwdPropRequest().isOnSyncope()) {\n@@ -131,33 +124,31 @@ protected WorkflowResult<Pair<UserMod, Boolean>> doUpdate(final User user, final\n     }\n \n     @Override\n-    protected WorkflowResult<Long> doSuspend(final User user) throws WorkflowException {\n+    protected WorkflowResult<Long> doSuspend(final User user) {\n         user.setStatus(\"suspended\");\n         User updated = userDAO.save(user);\n \n         return new WorkflowResult<>(updated.getKey(), null, \"suspend\");\n     }\n \n     @Override\n-    protected WorkflowResult<Long> doReactivate(final User user) throws WorkflowException {\n+    protected WorkflowResult<Long> doReactivate(final User user) {\n         user.setStatus(\"active\");\n         User updated = userDAO.save(user);\n \n         return new WorkflowResult<>(updated.getKey(), null, \"reactivate\");\n     }\n \n     @Override\n-    protected void doRequestPasswordReset(final User user) throws WorkflowException {\n+    protected void doRequestPasswordReset(final User user) {\n         user.generateToken(\n                 confDAO.find(\"token.length\", \"256\").getValues().get(0).getLongValue().intValue(),\n                 confDAO.find(\"token.expireTime\", \"60\").getValues().get(0).getLongValue().intValue());\n         userDAO.save(user);\n     }\n \n     @Override\n-    protected void doConfirmPasswordReset(final User user, final String token, final String password)\n-            throws WorkflowException {\n-\n+    protected void doConfirmPasswordReset(final User user, final String token, final String password) {\n         if (!user.checkToken(token)) {\n             throw new WorkflowException(new IllegalArgumentException(\"Wrong token: \" + token + \" for \" + user));\n         }\n@@ -168,33 +159,27 @@ protected void doConfirmPasswordReset(final User user, final String token, final\n     }\n \n     @Override\n-    protected void doDelete(final User user) throws WorkflowException {\n+    protected void doDelete(final User user) {\n         userDAO.delete(user);\n     }\n \n     @Override\n-    public WorkflowResult<Long> execute(final UserTO userTO, final String taskId)\n-            throws NotFoundException, WorkflowException {\n-\n+    public WorkflowResult<Long> execute(final UserTO userTO, final String taskId) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public void exportDefinition(final WorkflowDefinitionFormat format, final OutputStream os)\n-            throws WorkflowException {\n-\n+    public void exportDefinition(final WorkflowDefinitionFormat format, final OutputStream os) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public void exportDiagram(final OutputStream os) throws WorkflowException {\n+    public void exportDiagram(final OutputStream os) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public void importDefinition(final WorkflowDefinitionFormat format, final String definition)\n-            throws NotFoundException, WorkflowException {\n-\n+    public void importDefinition(final WorkflowDefinitionFormat format, final String definition) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n@@ -209,23 +194,17 @@ public List<WorkflowFormTO> getForms(final String workflowId, final String name)\n     }\n \n     @Override\n-    public WorkflowFormTO getForm(final String workflowId)\n-            throws NotFoundException, WorkflowException {\n-\n+    public WorkflowFormTO getForm(final String workflowId) {\n         return null;\n     }\n \n     @Override\n-    public WorkflowFormTO claimForm(final String taskId)\n-            throws NotFoundException, WorkflowException {\n-\n+    public WorkflowFormTO claimForm(final String taskId) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public WorkflowResult<UserMod> submitForm(final WorkflowFormTO form)\n-            throws NotFoundException, WorkflowException {\n-\n+    public WorkflowResult<UserMod> submitForm(final WorkflowFormTO form) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n "},{"sha":"c000457736298f08de32f8403a0ac9fac955e10d","filename":"deb/console/pom.xml","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/deb%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/deb%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/deb%2Fconsole%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -33,6 +33,10 @@ under the License.\n   <artifactId>syncope-deb-console</artifactId>\n   <packaging>war</packaging>\n \n+  <properties>\n+    <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n+  </properties>\n+  \n   <dependencies>\n     <dependency>\n       <groupId>org.apache.syncope.ext.camel</groupId>\n@@ -239,6 +243,17 @@ under the License.\n           </execution>\n         </executions>\n       </plugin>\n+      \n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+        <executions>\n+          <execution>\n+            <id>checkstyle-check</id>\n+            <phase>none</phase>\n+          </execution>\n+        </executions>\n+      </plugin>\n     </plugins>\n   </build>\n "},{"sha":"767b6b5dff70dc96bc52ffe57e234e520f2f517e","filename":"deb/core/pom.xml","status":"modified","additions":16,"deletions":1,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/deb%2Fcore%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/deb%2Fcore%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/deb%2Fcore%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -33,6 +33,10 @@ under the License.\n   <artifactId>syncope-deb-core</artifactId>\n   <packaging>war</packaging>\n \n+  <properties>\n+    <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n+  </properties>\n+  \n   <dependencies>\n     <dependency>\n       <groupId>org.apache.syncope.core</groupId>\n@@ -349,7 +353,18 @@ under the License.\n             </configuration>\n           </execution>\n         </executions>\n-      </plugin>       \n+      </plugin> \n+      \n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+        <executions>\n+          <execution>\n+            <id>checkstyle-check</id>\n+            <phase>none</phase>\n+          </execution>\n+        </executions>\n+      </plugin>      \n     </plugins>\n   </build>\n "},{"sha":"7e2cd115e0627e42e78e1f7f7fad5f966b70fd69","filename":"deb/pom.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/deb%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/deb%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/deb%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -34,6 +34,8 @@ under the License.\n   <packaging>pom</packaging>\n \n   <properties>\n+    <rootpom.basedir>${basedir}/..</rootpom.basedir>\n+\n     <debian.dependencies>tomcat8</debian.dependencies>\n \n     <conf.directory>/etc/apache-syncope</conf.directory>"},{"sha":"c163e377a9d4646d38add674027696dfda96d7d4","filename":"ext/camel/client-console/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fclient-console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fclient-console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -61,10 +61,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n     \n     <resources>"},{"sha":"301c310ff2ea90f78892d577aeb1e065a357bd58","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/pages/CamelRouteModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRouteModalPage.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -64,7 +64,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     restClient.update(routeTO.getKey(), ((CamelRouteTO) form.getModelObject()).getContent());\n                     info(getString(Constants.OPERATION_SUCCEEDED));\n \n-                    // TODO: SYNCOPE-120\n+                    // Uncomment with something similar once SYNCOPE-156 is completed\n                     // Configuration callerPage = (Configuration) pageRef.getPage();\n                     // callerPage.setModalResult(true);\n                     window.close(target);"},{"sha":"eb3effe7cb5ebb1778c68c9923707f6de421de9e","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/panels/CamelRoutePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutePanel.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -84,7 +84,7 @@ public String getCssClass() {\n             public void populateItem(final Item<ICellPopulator<CamelRouteTO>> cellItem, final String componentId,\n                     final IModel<CamelRouteTO> model) {\n \n-                // TODO: SYNCOPE-120\n+                // Uncomment with something similar once SYNCOPE-156 is completed\n                 /*final ActionLinksPanel panel = new ActionLinksPanel(componentId, model, pageref);\n \n                 panel.add(new ActionLink() {"},{"sha":"dea04c726da6e722e807519ff7ecf624d9f86c1f","filename":"ext/camel/common-lib/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fcommon-lib%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fcommon-lib%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fcommon-lib%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -51,10 +51,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n   </build>\n </project>"},{"sha":"bc8182a956e6d1a61193813505e1ece706d4761c","filename":"ext/camel/logic/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Flogic%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Flogic%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Flogic%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -56,10 +56,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n   </build>\n </project>"},{"sha":"19437ab404dc18290e29c0d9f95d2374f8c60021","filename":"ext/camel/logic/src/main/java/org/apache/syncope/core/logic/CamelRouteLogic.java","status":"modified","additions":25,"deletions":1,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FCamelRouteLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FCamelRouteLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FCamelRouteLogic.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -21,6 +21,7 @@\n import java.lang.reflect.Method;\n import java.util.ArrayList;\n import java.util.List;\n+import org.apache.commons.lang3.ArrayUtils;\n import org.apache.syncope.common.lib.to.CamelRouteTO;\n import org.apache.syncope.common.lib.types.Entitlement;\n import org.apache.syncope.common.lib.types.SubjectType;\n@@ -87,7 +88,30 @@ public void restartContext() {\n     }\n \n     @Override\n-    protected CamelRouteTO resolveReference(Method method, Object... args) throws UnresolvedReferenceException {\n+    protected CamelRouteTO resolveReference(final Method method, final Object... args)\n+            throws UnresolvedReferenceException {\n+\n+        String key = null;\n+\n+        if (ArrayUtils.isNotEmpty(args)) {\n+            for (int i = 0; key == null && i < args.length; i++) {\n+                if (args[i] instanceof String) {\n+                    key = (String) args[i];\n+                } else if (args[i] instanceof CamelRouteTO) {\n+                    key = ((CamelRouteTO) args[i]).getKey();\n+                }\n+            }\n+        }\n+\n+        if (key != null) {\n+            try {\n+                return binder.getRouteTO(routeDAO.find(key));\n+            } catch (Throwable ignore) {\n+                LOG.debug(\"Unresolved reference\", ignore);\n+                throw new UnresolvedReferenceException(ignore);\n+            }\n+        }\n+\n         throw new UnresolvedReferenceException();\n     }\n "},{"sha":"6220f085326f2e671060312014fd182dd6fa196a","filename":"ext/camel/persistence-api/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fpersistence-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fpersistence-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fpersistence-api%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -51,10 +51,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n   </build>\n </project>"},{"sha":"cbafcb484b90a23a865881a51fea9d1b3e407a2b","filename":"ext/camel/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/CamelRouteDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FCamelRouteDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FCamelRouteDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FCamelRouteDAO.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -20,7 +20,6 @@\n \n import java.util.List;\n import org.apache.syncope.common.lib.types.SubjectType;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.entity.CamelRoute;\n \n public interface CamelRouteDAO extends DAO<CamelRoute, String> {\n@@ -31,7 +30,7 @@ public interface CamelRouteDAO extends DAO<CamelRoute, String> {\n \n     List<CamelRoute> findAll();\n \n-    CamelRoute save(CamelRoute route) throws InvalidEntityException;\n+    CamelRoute save(CamelRoute route);\n \n     void delete(String key);\n }"},{"sha":"4dfece336cb2799a1972a646cc79cf7c9b4466ef","filename":"ext/camel/persistence-jpa/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fpersistence-jpa%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fpersistence-jpa%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fpersistence-jpa%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -89,10 +89,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n \n     <testResources>"},{"sha":"6137015ff767eeb079a856a76adc155f1d145e98","filename":"ext/camel/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPACamelRouteDAO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPACamelRouteDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPACamelRouteDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPACamelRouteDAO.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -21,7 +21,6 @@\n import java.util.List;\n import javax.persistence.TypedQuery;\n import org.apache.syncope.common.lib.types.SubjectType;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.dao.CamelRouteDAO;\n import org.apache.syncope.core.persistence.api.entity.CamelRoute;\n import org.apache.syncope.core.persistence.jpa.entity.JPACamelRoute;\n@@ -56,7 +55,7 @@ public List<CamelRoute> findAll() {\n     }\n \n     @Override\n-    public CamelRoute save(final CamelRoute route) throws InvalidEntityException {\n+    public CamelRoute save(final CamelRoute route) {\n         return entityManager.merge(route);\n     }\n "},{"sha":"638a19dc1de1e810748338fab1915f1e636d7dad","filename":"ext/camel/pom.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -33,6 +33,10 @@ under the License.\n   <artifactId>syncope-ext-camel</artifactId>\n   <packaging>pom</packaging>\n   \n+  <properties>\n+    <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n+  </properties>\n+  \n   <modules>\n     <module>persistence-api</module>\n     <module>persistence-jpa</module>"},{"sha":"308ed4ec362c934721f2b4e1d7518c4010de0e11","filename":"ext/camel/provisioning-api/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fprovisioning-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fprovisioning-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-api%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -62,10 +62,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n   </build>\n </project>"},{"sha":"3e7f41d7a279be4363afdff796fb8e188beacf80","filename":"ext/camel/provisioning-camel/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fprovisioning-camel%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fprovisioning-camel%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -69,10 +69,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n   </build>\n </project>"},{"sha":"516e798d0ef5de157c7f4b77725d3ec88c3a0601","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/AbstractCamelProvisioningManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FAbstractCamelProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FAbstractCamelProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FAbstractCamelProvisioningManager.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -83,7 +83,7 @@ protected void sendMessage(final String uri, final Object obj, final Map<String,\n         template.send(uri, exchange);\n     }\n \n-    protected PollingConsumer getConsumer(String uri) {\n+    protected PollingConsumer getConsumer(final String uri) {\n         if (!knownURIs.contains(uri)) {\n             knownURIs.add(uri);\n             Endpoint endpoint = getContext().getEndpoint(uri);"},{"sha":"7c132a107e8e99ae6ec280efc0a7b39095a46301","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/CamelGroupProvisioningManager.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelGroupProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelGroupProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelGroupProvisioningManager.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -31,7 +31,6 @@\n import org.apache.syncope.common.lib.to.PropagationStatus;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.core.provisioning.api.GroupProvisioningManager;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationException;\n \n public class CamelGroupProvisioningManager\n         extends AbstractCamelProvisioningManager implements GroupProvisioningManager {\n@@ -63,7 +62,7 @@ public Pair<Long, List<PropagationStatus>> create(final GroupTO groupTO, final S\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public Pair<Long, List<PropagationStatus>> create(final GroupTO groupTO, final Map<Long, String> groupOwnerMap,\n-            final Set<String> excludedResources) throws PropagationException {\n+            final Set<String> excludedResources) {\n \n         PollingConsumer pollingConsumer = getConsumer(\"direct:createGroupInSyncPort\");\n \n@@ -156,7 +155,7 @@ public Long link(final GroupMod groupMod) {\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public List<PropagationStatus> deprovision(final Long groupKey, Collection<String> resources) {\n+    public List<PropagationStatus> deprovision(final Long groupKey, final Collection<String> resources) {\n         PollingConsumer pollingConsumer = getConsumer(\"direct:deprovisionGroupPort\");\n \n         Map<String, Object> props = new HashMap<>();"},{"sha":"4c04147297aec16daca03d57a2ebb4e3b3dcd9c2","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/CamelUserProvisioningManager.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -51,14 +51,14 @@ public Pair<Long, List<PropagationStatus>> create(final UserTO userTO) {\n     }\n \n     @Override\n-    public Pair<Long, List<PropagationStatus>> create(final UserTO userTO, boolean storePassword) {\n+    public Pair<Long, List<PropagationStatus>> create(final UserTO userTO, final boolean storePassword) {\n         return create(userTO, storePassword, false, null, Collections.<String>emptySet());\n     }\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public Pair<Long, List<PropagationStatus>> create(final UserTO userTO, final boolean storePassword,\n-            boolean disablePwdPolicyCheck, Boolean enabled, Set<String> excludedResources) {\n+            final boolean disablePwdPolicyCheck, final Boolean enabled, final Set<String> excludedResources) {\n \n         PollingConsumer pollingConsumer = getConsumer(\"direct:createPort\");\n \n@@ -86,7 +86,7 @@ public Pair<Long, List<PropagationStatus>> update(final UserMod userMod) {\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public Pair<Long, List<PropagationStatus>> update(UserMod userMod, boolean removeMemberships) {\n+    public Pair<Long, List<PropagationStatus>> update(final UserMod userMod, final boolean removeMemberships) {\n         PollingConsumer pollingConsumer = getConsumer(\"direct:updatePort\");\n \n         Map<String, Object> props = new HashMap<>();\n@@ -275,12 +275,12 @@ public Pair<Long, List<PropagationStatus>> update(\n \n         Exchange exchange = pollingConsumer.receive();\n \n-        Exception e;\n-        if ((e = (Exception) exchange.getProperty(Exchange.EXCEPTION_CAUGHT)) != null) {\n-            LOG.error(\"Update of user {} failed, trying to sync its status anyway (if configured)\", key, e);\n+        Exception ex = (Exception) exchange.getProperty(Exchange.EXCEPTION_CAUGHT);\n+        if (ex != null) {\n+            LOG.error(\"Update of user {} failed, trying to sync its status anyway (if configured)\", key, ex);\n \n             result.setStatus(ProvisioningResult.Status.FAILURE);\n-            result.setMessage(\"Update failed, trying to sync status anyway (if configured)\\n\" + e.getMessage());\n+            result.setMessage(\"Update failed, trying to sync status anyway (if configured)\\n\" + ex.getMessage());\n \n             WorkflowResult<Pair<UserMod, Boolean>> updated = new WorkflowResult<Pair<UserMod, Boolean>>(\n                     new ImmutablePair<>(userMod, false), new PropagationByResource(),"},{"sha":"d1d72fb30dc6b221aad46c6260d7691a4ba612a6","filename":"ext/camel/rest-api/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Frest-api%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Frest-api%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Frest-api%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -56,10 +56,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n   </build>\n </project>"},{"sha":"bf17bb6bb9d331817bf5d2a9d609cadf5c3db6d8","filename":"ext/camel/rest-cxf/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Frest-cxf%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fcamel%2Frest-cxf%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Frest-cxf%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -61,10 +61,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n     </plugins>\n   </build>\n </project>"},{"sha":"7579cc8bd8ff11b776aad9e0013f7410adcf32cb","filename":"ext/pom.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/ext%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -33,6 +33,10 @@ under the License.\n   <artifactId>syncope-ext</artifactId>\n   <packaging>pom</packaging>\n \n+  <properties>\n+    <rootpom.basedir>${basedir}/..</rootpom.basedir>\n+  </properties>\n+\n   <modules>\n     <module>camel</module>\n   </modules>"},{"sha":"bfae2f41be66546a17fc6bc482ed24967c35b881","filename":"fit/build-tools/pom.xml","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/fit%2Fbuild-tools%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/fit%2Fbuild-tools%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -122,10 +122,6 @@ under the License.\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>\n                 \n       <plugin>\n         <groupId>org.codehaus.mojo</groupId>"},{"sha":"37adbd37aff09f5673fdeaedde11f40a3d69d2b4","filename":"fit/build-tools/src/main/java/org/apache/syncope/fit/buildtools/ConnIdStartStopListener.java","status":"modified","additions":10,"deletions":13,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FConnIdStartStopListener.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FConnIdStartStopListener.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fbuild-tools%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fbuildtools%2FConnIdStartStopListener.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -35,9 +35,6 @@\n \n public class ConnIdStartStopListener implements ServletContextListener {\n \n-    /**\n-     * Logger.\n-     */\n     private static final Logger LOG = LoggerFactory.getLogger(ConnIdStartStopListener.class);\n \n     private static final String SERVER = \"ConnIdConnectorServer\";\n@@ -75,30 +72,30 @@ private List<URL> getBundleURLs(final ServletContext ctx) {\n \n     @Override\n     public void contextInitialized(final ServletContextEvent sce) {\n-        ConnectorServer _server = ConnectorServer.newInstance();\n+        ConnectorServer server = ConnectorServer.newInstance();\n         WebApplicationContext ctx = WebApplicationContextUtils.getWebApplicationContext(sce.getServletContext());\n         try {\n-            _server.setPort(Integer.parseInt(ctx.getBean(\"testconnectorserver.port\", String.class)));\n+            server.setPort(Integer.parseInt(ctx.getBean(\"testconnectorserver.port\", String.class)));\n \n-            _server.setBundleURLs(getBundleURLs(sce.getServletContext()));\n+            server.setBundleURLs(getBundleURLs(sce.getServletContext()));\n \n-            _server.setKeyHash(SecurityUtil.computeBase64SHA1Hash(\n+            server.setKeyHash(SecurityUtil.computeBase64SHA1Hash(\n                     ctx.getBean(\"testconnectorserver.key\", String.class).toCharArray()));\n \n-            _server.start();\n-            LOG.info(\"ConnId connector server listening on port \" + _server.getPort());\n+            server.start();\n+            LOG.info(\"ConnId connector server listening on port \" + server.getPort());\n         } catch (Exception e) {\n             LOG.error(\"Could not start ConnId connector server\", e);\n         }\n \n-        sce.getServletContext().setAttribute(SERVER, _server);\n+        sce.getServletContext().setAttribute(SERVER, server);\n     }\n \n     @Override\n     public void contextDestroyed(final ServletContextEvent sce) {\n-        final ConnectorServer _server = (ConnectorServer) sce.getServletContext().getAttribute(SERVER);\n-        if (_server != null && _server.isStarted()) {\n-            _server.stop();\n+        final ConnectorServer server = (ConnectorServer) sce.getServletContext().getAttribute(SERVER);\n+        if (server != null && server.isStarted()) {\n+            server.stop();\n         }\n         ThreadClassLoaderManager.clearInstance();\n     }"},{"sha":"c2785ace1e16b0c678483eec5c2b967b6219524a","filename":"fit/console-reference/pom.xml","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/fit%2Fconsole-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/fit%2Fconsole-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -277,10 +277,9 @@ ORYX.Editor.createByUrl = function(modelUrl){\"/>\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n-      </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n+        <configuration>\n+          <resourceIncludes>src/main/resources/**/*.properties</resourceIncludes>\n+        </configuration>\n       </plugin>\n       \n       <plugin>"},{"sha":"d9716ec2dbc5ed7a77f531e7326e88b2ed73fec3","filename":"fit/core-reference/pom.xml","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/fit%2Fcore-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/fit%2Fcore-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -290,11 +290,10 @@ under the License.\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n+        <configuration>\n+          <resourceIncludes>src/main/resources/**/*.properties</resourceIncludes>\n+        </configuration>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-      </plugin>      \n                           \n       <plugin>\n         <groupId>org.codehaus.mojo</groupId>"},{"sha":"bc4d407d8bd7eb67dfb187e1e5359ac1ecb1e730","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/TestSyncActions.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestSyncActions.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -44,9 +44,9 @@ public <T extends AbstractSubjectTO> SyncDelta beforeProvision(\n \n         AttrTO attrTO = null;\n         for (int i = 0; i < subject.getPlainAttrs().size(); i++) {\n-            AttrTO _attrTO = CollectionUtils.get(subject.getPlainAttrs(), i);\n-            if (\"fullname\".equals(_attrTO.getSchema())) {\n-                attrTO = _attrTO;\n+            AttrTO plainAttr = CollectionUtils.get(subject.getPlainAttrs(), i);\n+            if (\"fullname\".equals(plainAttr.getSchema())) {\n+                attrTO = plainAttr;\n             }\n         }\n         if (attrTO == null) {"},{"sha":"f070c29e5a1f2c7fab18c8961b2056356785f5bd","filename":"fit/pom.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/fit%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/fit%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -33,6 +33,10 @@ under the License.\n   <artifactId>syncope-fit</artifactId>\n   <packaging>pom</packaging>\n \n+  <properties>\n+    <rootpom.basedir>${basedir}/..</rootpom.basedir>\n+  </properties>\n+\n   <modules>\n     <module>build-tools</module>\n     <module>core-reference</module>"},{"sha":"0012bc55a52500d1011fedfdf90014e80c4b9acb","filename":"installer/pom.xml","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -35,6 +35,8 @@ under the License.\n   <packaging>jar</packaging>\n   \n   <properties>\n+    <rootpom.basedir>${basedir}/..</rootpom.basedir>\n+\n     <staging.dir>${project.build.directory}/staging</staging.dir>\n   </properties>\n \n@@ -165,10 +167,9 @@ under the License.\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n-      </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n+        <configuration>\n+          <includeResources>false</includeResources>\n+        </configuration>\n       </plugin>\n     </plugins>\n "},{"sha":"af8af5f65dd0242dcb560a367a34f3724b9b622d","filename":"installer/src/main/java/org/apache/syncope/installer/containers/Tomcat.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2FTomcat.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2FTomcat.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2FTomcat.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -74,7 +74,9 @@ private String pathEncoded(final String what) {\n         try {\n             path = URLEncoder.encode(what, \"UTF-8\");\n         } catch (UnsupportedEncodingException uee) {\n+            // ignore\n         }\n+\n         return path;\n     }\n "},{"sha":"24b193ebe8313347a87e6ed0634f04414c6d08c0","filename":"installer/src/main/java/org/apache/syncope/installer/containers/jboss/JBoss.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2Fjboss%2FJBoss.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2Fjboss%2FJBoss.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2Fjboss%2FJBoss.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -44,12 +44,14 @@ public class JBoss extends AbstractContainer {\n     public JBoss(final boolean jbossSsl, final String jbossHost, final String jbossManagementPort,\n             final String jbossAdminUsername, final String jbossAdminPassword,\n             final String installPath, final String artifactId, final AbstractUIProcessHandler handler) {\n+\n         this.jbossSsl = jbossSsl;\n         this.jbossHost = jbossHost;\n         this.jbossManagementPort = jbossManagementPort;\n         this.installPath = installPath;\n         this.artifactId = artifactId;\n-        httpUtils = new HttpUtils(jbossSsl, jbossHost, jbossManagementPort, jbossAdminUsername, jbossAdminPassword, handler);\n+        this.httpUtils = new HttpUtils(\n+                jbossSsl, jbossHost, jbossManagementPort, jbossAdminUsername, jbossAdminPassword, handler);\n \n     }\n \n@@ -69,7 +71,7 @@ public boolean deploy(final String whatDeploy, final String warName) {\n         final JBossAddResponse jBossAddResponse = JsonUtils.jBossAddResponse(responseBodyAsString);\n \n         final JBossDeployRequestContent jBossDeployRequestContent = new JBossDeployRequestContent(\n-                jBossAddResponse.getResult().getBYTES_VALUE(), warName);\n+                jBossAddResponse.getResult().getBytesValue(), warName);\n \n         int status = httpUtils.\n                 postWithStringEntity(String.format(enableUrl, jbossHost, jbossManagementPort),"},{"sha":"fd1056d0085d85363c44ff4e257c93b20c95a7c6","filename":"installer/src/main/java/org/apache/syncope/installer/containers/jboss/JBossAddResponse.java","status":"modified","additions":14,"deletions":12,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2Fjboss%2FJBossAddResponse.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2Fjboss%2FJBossAddResponse.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2Fjboss%2FJBossAddResponse.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -22,42 +22,44 @@ public class JBossAddResponse {\n \n     public class JBossBytesValue {\n \n-        public String BYTES_VALUE;\n+        private String bytesValue;\n \n         public JBossBytesValue() {\n+            // default\n         }\n \n-        public JBossBytesValue(String BYTES_VALUE) {\n-            this.BYTES_VALUE = BYTES_VALUE;\n+        public JBossBytesValue(final String bytesValue) {\n+            this.bytesValue = bytesValue;\n         }\n \n-        public String getBYTES_VALUE() {\n-            return BYTES_VALUE;\n+        public String getBytesValue() {\n+            return bytesValue;\n         }\n \n-        public void setBYTES_VALUE(String BYTES_VALUE) {\n-            this.BYTES_VALUE = BYTES_VALUE;\n+        public void setBytesValue(final String bytesValue) {\n+            this.bytesValue = bytesValue;\n         }\n \n     }\n \n-    public String outcome;\n+    private String outcome;\n \n-    public JBossBytesValue result;\n+    private JBossBytesValue result;\n \n     public JBossAddResponse() {\n+        // default\n     }\n \n-    public JBossAddResponse(String outcome, JBossBytesValue result) {\n+    public JBossAddResponse(final String outcome, final JBossBytesValue result) {\n         this.outcome = outcome;\n         this.result = result;\n     }\n \n-    public void setOutcome(String outcome) {\n+    public void setOutcome(final String outcome) {\n         this.outcome = outcome;\n     }\n \n-    public void setResult(JBossBytesValue result) {\n+    public void setResult(final JBossBytesValue result) {\n         this.result = result;\n     }\n "},{"sha":"89d15e07e9b01720c22b3bf34644bd97d23147e1","filename":"installer/src/main/java/org/apache/syncope/installer/containers/jboss/JBossDeployRequestContent.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2Fjboss%2FJBossDeployRequestContent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2Fjboss%2FJBossDeployRequestContent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fcontainers%2Fjboss%2FJBossDeployRequestContent.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -20,13 +20,13 @@\n \n public class JBossDeployRequestContent {\n \n-    public final JBossDeployRequest[] content = new JBossDeployRequest[1];\n+    private final JBossDeployRequest[] content = new JBossDeployRequest[1];\n \n-    public final JBossDeployment[] address = new JBossDeployment[1];\n+    private final JBossDeployment[] address = new JBossDeployment[1];\n \n-    public final String operation = \"add\";\n+    private final String operation = \"add\";\n \n-    public final String enabled = \"true\";\n+    private final String enabled = \"true\";\n \n     public JBossDeployRequestContent(final String hash, final String address) {\n         this.content[0] = new JBossDeployRequest(hash);\n@@ -35,7 +35,7 @@ public JBossDeployRequestContent(final String hash, final String address) {\n \n     public class JBossDeployRequest {\n \n-        public JBossBytesValue hash;\n+        private JBossBytesValue hash;\n \n         public JBossBytesValue getHash() {\n             return hash;\n@@ -48,18 +48,18 @@ public JBossDeployRequest(final String hash) {\n \n     public class JBossBytesValue {\n \n-        public String BYTES_VALUE;\n+        private String bytesValue;\n \n-        public JBossBytesValue(final String BYTES_VALUE) {\n-            this.BYTES_VALUE = BYTES_VALUE;\n+        public JBossBytesValue(final String bytesValue) {\n+            this.bytesValue = bytesValue;\n         }\n     }\n \n     public class JBossDeployment {\n \n-        public String deployment;\n+        private String deployment;\n \n-        public JBossDeployment(String deployment) {\n+        public JBossDeployment(final String deployment) {\n             this.deployment = deployment;\n         }\n "},{"sha":"529890882c5eee561ee431195b0eec3864f46cb9","filename":"installer/src/main/java/org/apache/syncope/installer/files/ConsoleProperties.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FConsoleProperties.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FConsoleProperties.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FConsoleProperties.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.installer.files;\n \n-public class ConsoleProperties {\n+public final class ConsoleProperties {\n \n     public static final String PLACEHOLDER = \"scheme=http\\n\"\n             + \"host=localhost\\n\"\n@@ -28,4 +28,7 @@ public class ConsoleProperties {\n             + \"host=%s\\n\"\n             + \"port=%s\";\n \n+    private ConsoleProperties() {\n+            // private constructor for static utility class\n+    }\n }"},{"sha":"f9a99df0a704aa0bf2bdd12c1b0b557f11a70924","filename":"installer/src/main/java/org/apache/syncope/installer/files/GlassfishCoreWebXml.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FGlassfishCoreWebXml.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FGlassfishCoreWebXml.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FGlassfishCoreWebXml.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.installer.files;\n \n-public class GlassfishCoreWebXml {\n+public final class GlassfishCoreWebXml {\n \n     public static final String PLACEHOLDER = \"  <!--<resource-ref>\\n\"\n             + \"    <res-ref-name>jdbc/syncopeDataSource</res-ref-name>\\n\"\n@@ -27,7 +27,10 @@ public class GlassfishCoreWebXml {\n \n     public static final String DATA_SOURCE = \"  <resource-ref>\\n\"\n             + \"    <res-ref-name>jdbc/syncopeDataSource</res-ref-name>\\n\"\n-            + \"    <jndi-name>jdbc/syncopeDataSource</jndi-name>\\n\" \n+            + \"    <jndi-name>jdbc/syncopeDataSource</jndi-name>\\n\"\n             + \"  </resource-ref>\";\n \n+    private GlassfishCoreWebXml() {\n+        // private constructor for static utility class\n+    }\n }"},{"sha":"9e3da5f9a8dd2dd71774f6583d6d6d702590652a","filename":"installer/src/main/java/org/apache/syncope/installer/files/JBossDeploymentStructureXml.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FJBossDeploymentStructureXml.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FJBossDeploymentStructureXml.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FJBossDeploymentStructureXml.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -18,11 +18,14 @@\n  */\n package org.apache.syncope.installer.files;\n \n-public class JBossDeploymentStructureXml {\n-    \n+public final class JBossDeploymentStructureXml {\n+\n     public static final String PLACEHOLDER = \"<module name=\\\"org.apache.xalan\\\"/>\";\n \n     public static final String JBOSSMODULE = \"<module name=\\\"org.apache.xalan\\\"/>\\n\"\n             + \"<module name=\\\"%s\\\"/>\";\n \n+    private JBossDeploymentStructureXml() {\n+        // private constructor for static utility class\n+    }\n }"},{"sha":"46532247f837f4f3cc06a1a8098f727378aabccd","filename":"installer/src/main/java/org/apache/syncope/installer/files/ParentPom.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FParentPom.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FParentPom.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FParentPom.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -18,8 +18,8 @@\n  */\n package org.apache.syncope.installer.files;\n \n-public class ParentPom {\n-    \n+public final class ParentPom {\n+\n     public static final String PLACEHOLDER = \"</project>\";\n \n     public static final String REPOSITORY =\n@@ -34,4 +34,7 @@ public class ParentPom {\n             + \"</repositories>\\n\"\n             + \"</project>\\n\";\n \n+    private ParentPom() {\n+        // private constructor for static utility class\n+    }\n }"},{"sha":"876f0db36f2e2843a5d239704c5b230d885fa5f1","filename":"installer/src/main/java/org/apache/syncope/installer/files/PersistenceContextEMFactoryXml.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FPersistenceContextEMFactoryXml.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FPersistenceContextEMFactoryXml.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FPersistenceContextEMFactoryXml.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.installer.files;\n \n-public class PersistenceContextEMFactoryXml {\n+public final class PersistenceContextEMFactoryXml {\n \n     public static final String PLACEHOLDER = \"<entry key=\\\"openjpa.MetaDataFactory\\\"\\n\"\n             + \"               value=\\\"jpa(URLs=vfs:${project.build.directory}/cargo/configurations/wildfly8x/\"\n@@ -28,4 +28,7 @@ public class PersistenceContextEMFactoryXml {\n             \"<entry key=\\\"openjpa.MetaDataFactory\\\" value=\\\"jpa(URLs=vfs:/content/${project.build.finalName}.war/\"\n             + \"WEB-INF/classes/, Resources=META-INF/orm.xml)\\\"/>\";\n \n+    private PersistenceContextEMFactoryXml() {\n+        // private constructor for static utility class\n+    }\n }"},{"sha":"769722f6f33523f92d1749c82b2492fcef327a83","filename":"installer/src/main/java/org/apache/syncope/installer/files/PersistenceProperties.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FPersistenceProperties.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FPersistenceProperties.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FPersistenceProperties.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.installer.files;\n \n-public class PersistenceProperties {\n+public final class PersistenceProperties {\n \n     public static final String HEADER = \"# Licensed to the Apache Software Foundation (ASF) under one\\n\"\n             + \"# or more contributor license agreements.  See the NOTICE file\\n\"\n@@ -70,7 +70,7 @@ public class PersistenceProperties {\n             + \"quartz.sql=tables_mariadb.sql\\n\"\n             + \"audit.sql=audit.sql\\n\"\n             + \"database.schema=\\n\";\n-    \n+\n     public static final String ORACLE = \"\"\n             + \"jpa.driverClassName=oracle.jdbc.OracleDriver\\n\"\n             + \"jpa.url=%s\\n\"\n@@ -90,18 +90,21 @@ public class PersistenceProperties {\n             + \"jpa.url=%s\\n\"\n             + \"jpa.username=%s\\n\"\n             + \"jpa.password=%s\\n\"\n-            + \"jpa.dialect=org.apache.openjpa.jdbc.sql.SQLServerDictionary\\n\" \n+            + \"jpa.dialect=org.apache.openjpa.jdbc.sql.SQLServerDictionary\\n\"\n             + \"jpa.pool.validationQuery=SELECT 1\\n\"\n             + \"jpa.orm=META-INF/spring-orm-sqlserver.xml\\n\"\n             + \"#note: other connection pool settings can also be configured here, see persistenceContext.xml\\n\"\n-            + \"quartz.jobstore=org.quartz.impl.jdbcjobstore.MSSQLDelegate\\n\" \n+            + \"quartz.jobstore=org.quartz.impl.jdbcjobstore.MSSQLDelegate\\n\"\n             + \"quartz.scheduler.idleWaitTime=5000\\n\"\n-            + \"quartz.sql=tables_sqlServer.sql\\n\" \n-            + \"audit.sql=audit_sqlserver.sql\\n\" \n+            + \"quartz.sql=tables_sqlServer.sql\\n\"\n+            + \"audit.sql=audit_sqlserver.sql\\n\"\n             + \"database.schema=\";\n \n     public static final String MYSQL_QUARTZ_INNO_DB = \"quartz.sql=tables_mysql_innodb.sql\";\n \n     public static final String MYSQL_QUARTZ = \"quartz.sql=tables_mysql.sql\";\n \n+    private PersistenceProperties() {\n+        // private constructor for static utility class\n+    }\n }"},{"sha":"7176dd6a4286cb79c440cffa30e52bfba1fce12d","filename":"installer/src/main/java/org/apache/syncope/installer/processes/ArchetypeProcess.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FArchetypeProcess.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FArchetypeProcess.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FArchetypeProcess.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -101,7 +101,7 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n \n         if (syncopeVersion.contains(\"SNAPSHOT\")) {\n             final File pomFile =\n-                    new File(syncopeInstallDir + properties.getProperty(\"pomFile\"));\n+                    new File(syncopeInstallDir + PROPERTIES.getProperty(\"pomFile\"));\n             String contentPomFile = fileSystemUtils.readFile(pomFile);\n             fileSystemUtils.writeToFile(pomFile, contentPomFile.replace(ParentPom.PLACEHOLDER, ParentPom.REPOSITORY));\n         }\n@@ -111,19 +111,19 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n         fileSystemUtils.createDirectory(bundlesDirectory);\n         fileSystemUtils.createDirectory(modelerDirectory);\n \n-        fileSystemUtils.copyFileFromResources(\"/\" + properties.getProperty(\"modelerPomFile\"),\n-                modelerDirectory + \"/\" + properties.getProperty(\"pomFile\"), handler);\n+        fileSystemUtils.copyFileFromResources(\"/\" + PROPERTIES.getProperty(\"modelerPomFile\"),\n+                modelerDirectory + \"/\" + PROPERTIES.getProperty(\"pomFile\"), handler);\n \n         fileSystemUtils.copyFile(\n                 syncopeInstallDir\n-                + properties.getProperty(\"consoleResDirectory\")\n-                + \"/\" + properties.getProperty(\"urlConfig\"),\n-                modelerDirectory + \"/\" + properties.getProperty(\"urlConfig\"));\n+                + PROPERTIES.getProperty(\"consoleResDirectory\")\n+                + \"/\" + PROPERTIES.getProperty(\"urlConfig\"),\n+                modelerDirectory + \"/\" + PROPERTIES.getProperty(\"urlConfig\"));\n         fileSystemUtils.copyFile(\n                 syncopeInstallDir\n-                + properties.getProperty(\"consoleResDirectory\")\n-                + \"/\" + properties.getProperty(\"saveModel\"),\n-                modelerDirectory + \"/\" + properties.getProperty(\"saveModel\"));\n+                + PROPERTIES.getProperty(\"consoleResDirectory\")\n+                + \"/\" + PROPERTIES.getProperty(\"saveModel\"),\n+                modelerDirectory + \"/\" + PROPERTIES.getProperty(\"saveModel\"));\n \n         final Properties modelerProperties = new Properties();\n         modelerProperties.setProperty(\"modeler.directory\", modelerDirectory);"},{"sha":"01dd3c71767247fbfaa3b7c6f27a02dd25cdca7a","filename":"installer/src/main/java/org/apache/syncope/installer/processes/BaseProcess.java","status":"modified","additions":17,"deletions":14,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FBaseProcess.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FBaseProcess.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FBaseProcess.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.installer.processes;\n \n-import static org.apache.syncope.installer.processes.ArchetypeProcess.properties;\n+import static org.apache.syncope.installer.processes.ArchetypeProcess.PROPERTIES;\n \n import java.io.IOException;\n import java.io.InputStream;\n@@ -27,28 +27,31 @@\n \n public class BaseProcess {\n \n-    protected final static Properties properties = new Properties();\n+    protected static final Properties PROPERTIES = new Properties();\n \n     protected String syncopeInstallDir;\n \n-    private static InputStream is = null;\n-\n     static {\n+        InputStream input = null;\n         try {\n-            is = BaseProcess.class.getResourceAsStream(\"/installer.properties\");\n-            properties.load(is);\n-        } catch (final IOException e) {\n+            input = BaseProcess.class.getResourceAsStream(\"/installer.properties\");\n+            PROPERTIES.load(input);\n+        } catch (IOException e) {\n+            // ignore\n         } finally {\n-            IOUtils.closeQuietly(is);\n+            IOUtils.closeQuietly(input);\n         }\n     }\n \n     protected void setSyncopeInstallDir(final String installPath, final String artifactId) {\n-        final StringBuilder path = new StringBuilder();\n-        path.append(installPath);\n-        path.append(\"/\");\n-        path.append(artifactId);\n-        path.append(\"/\");\n-        syncopeInstallDir = path.toString();\n+        syncopeInstallDir = new StringBuilder().\n+                append(installPath).\n+                append(\"/\").\n+                append(artifactId).\n+                append(\"/\").toString();\n+    }\n+\n+    protected BaseProcess() {\n+        // protected constructor for static utility class\n     }\n }"},{"sha":"77391c3884f927fbfadeab80514eab369aefcb8c","filename":"installer/src/main/java/org/apache/syncope/installer/processes/ContainerProcess.java","status":"modified","additions":19,"deletions":10,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FContainerProcess.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FContainerProcess.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FContainerProcess.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -36,15 +36,15 @@\n import org.apache.syncope.installer.utilities.MavenUtils;\n import org.xml.sax.SAXException;\n \n-public class ContainerProcess extends BaseProcess {\n+public final class ContainerProcess extends BaseProcess {\n \n-    private final static String HTTP = \"http\";\n+    private static final String HTTP = \"http\";\n \n-    private final static String HTTPS = \"https\";\n+    private static final String HTTPS = \"https\";\n \n-    private final static String DEFAULT_HOST = \"localhost\";\n+    private static final String DEFAULT_HOST = \"localhost\";\n \n-    private final static String DEFAULT_PORT = \"8080\";\n+    private static final String DEFAULT_PORT = \"8080\";\n \n     private String installPath;\n \n@@ -148,7 +148,7 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n             switch (selectedContainer) {\n                 case GLASSFISH:\n                     final File glassfishCoreWebXmlFile =\n-                            new File(syncopeInstallDir + properties.getProperty(\"glassfishCoreWebXmlFile\"));\n+                            new File(syncopeInstallDir + PROPERTIES.getProperty(\"glassfishCoreWebXmlFile\"));\n                     final String contentGlassfishWebXmlFile = fileSystemUtils.readFile(glassfishCoreWebXmlFile);\n                     fileSystemUtils.writeToFile(glassfishCoreWebXmlFile,\n                             contentGlassfishWebXmlFile.replace(GlassfishCoreWebXml.PLACEHOLDER,\n@@ -160,8 +160,8 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n         }\n \n         final File consolePropertiesFile = new File(syncopeInstallDir\n-                + properties.getProperty(\"consoleResDirectory\")\n-                + File.separator + properties.getProperty(\"consolePropertiesFile\"));\n+                + PROPERTIES.getProperty(\"consoleResDirectory\")\n+                + File.separator + PROPERTIES.getProperty(\"consolePropertiesFile\"));\n         final String contentConsolePropertiesFile = fileSystemUtils.readFile(consolePropertiesFile);\n \n         final String scheme;\n@@ -267,6 +267,7 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n                     InstallLog.getInstance().error(messageError);\n                 }\n                 break;\n+\n             case JBOSS:\n                 final JBoss jBoss = new JBoss(\n                         jbossSsl, jbossHost, jbossManagementPort, jbossAdminUsername,\n@@ -292,6 +293,7 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n                     InstallLog.getInstance().error(messageError);\n                 }\n                 break;\n+\n             case GLASSFISH:\n                 final String createJavaOptCommand = \"sh \" + glassfishDir + Glassfish.CREATE_JAVA_OPT_COMMAND;\n                 fileSystemUtils.exec(createJavaOptCommand, null);\n@@ -303,20 +305,27 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n                 fileSystemUtils.exec(\"sh \" + glassfishDir\n                         + Glassfish.DEPLOY_COMMAND + glassfish.deployConsole(), null);\n                 break;\n+\n+            default:\n         }\n     }\n \n     private void persistenceContextEMFactory(\n             final FileSystemUtils fileSystemUtils, final AbstractUIProcessHandler handler) {\n         fileSystemUtils.copyFileFromResources(\"/jboss/persistenceContextEMFactory.xml\",\n                 syncopeInstallDir\n-                + properties.getProperty(\"persistenceContextEMFactoryFile\"), handler);\n+                + PROPERTIES.getProperty(\"persistenceContextEMFactoryFile\"), handler);\n         final File persistenceContextEMFactoryFile = new File(\n-                syncopeInstallDir + properties.getProperty(\"persistenceContextEMFactoryFile\"));\n+                syncopeInstallDir + PROPERTIES.getProperty(\"persistenceContextEMFactoryFile\"));\n         final String contentPersistenceContextEMFactory = fileSystemUtils.readFile(persistenceContextEMFactoryFile);\n         fileSystemUtils.writeToFile(\n                 persistenceContextEMFactoryFile,\n                 contentPersistenceContextEMFactory.replace(PersistenceContextEMFactoryXml.PLACEHOLDER,\n                         PersistenceContextEMFactoryXml.JBOSS));\n     }\n+\n+    private ContainerProcess() {\n+        super();\n+        // private constructor for static utility class\n+    }\n }"},{"sha":"af5adbf0c4484c73b55d7f1c0a8066e1ef2b2315","filename":"installer/src/main/java/org/apache/syncope/installer/processes/PersistenceProcess.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FPersistenceProcess.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FPersistenceProcess.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fprocesses%2FPersistenceProcess.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -66,6 +66,7 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n                 persistenceProperties.append(String.format(\n                         PersistenceProperties.POSTGRES, persistenceUrl, persistenceUser, persistencePassword));\n                 break;\n+\n             case MYSQL:\n                 persistenceProperties.append(String.format(\n                         PersistenceProperties.MYSQL, persistenceUrl, persistenceUser, persistencePassword));\n@@ -75,23 +76,28 @@ public void run(final AbstractUIProcessHandler handler, final String[] args) {\n                     persistenceProperties.append(PersistenceProperties.MYSQL_QUARTZ);\n                 }\n                 break;\n+\n             case MARIADB:\n                 persistenceProperties.append(String.format(\n                         PersistenceProperties.MARIADB, persistenceUrl, persistenceUser, persistencePassword));\n                 break;\n+\n             case ORACLE:\n                 persistenceProperties.append(String.format(\n                         PersistenceProperties.ORACLE, persistenceUrl, persistenceUser, persistencePassword,\n                         oracleTableSpace));\n                 break;\n+\n             case SQLSERVER:\n                 persistenceProperties.append(String.format(\n                         PersistenceProperties.SQLSERVER, persistenceUrl, persistenceUser, persistencePassword));\n                 break;\n+\n+            default:\n         }\n \n         fileSystemUtils.writeToFile(new File(\n-                syncopeInstallDir + properties.getProperty(\"persistencePropertiesFile\")),\n+                syncopeInstallDir + PROPERTIES.getProperty(\"persistencePropertiesFile\")),\n                 persistenceProperties.toString());\n     }\n }"},{"sha":"8564c4185fbf45c79dbe096fc8e3fbaa8651d2e2","filename":"installer/src/main/java/org/apache/syncope/installer/utilities/DriverLoader.java","status":"modified","additions":10,"deletions":11,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FDriverLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FDriverLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FDriverLoader.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.installer.utilities;\n \n import java.net.Authenticator;\n-import java.net.MalformedURLException;\n import java.net.PasswordAuthentication;\n import org.apache.syncope.installer.enums.DBs;\n import java.net.URL;\n@@ -28,13 +27,13 @@\n \n public final class DriverLoader extends URLClassLoader {\n \n-    private final static String POSTGRES_JAR =\n+    private static final String POSTGRES_JAR =\n             \"http://repo1.maven.org/maven2/postgresql/postgresql/9.1-901.jdbc4/postgresql-9.1-901.jdbc4.jar\";\n \n-    private final static String MYSQL_JAR =\n+    private static final String MYSQL_JAR =\n             \"http://central.maven.org/maven2/mysql/mysql-connector-java/5.1.34/mysql-connector-java-5.1.34.jar\";\n \n-    private final static String MARIADB_JAR =\n+    private static final String MARIADB_JAR =\n             \"http://repo1.maven.org/maven2/org/mariadb/jdbc/mariadb-java-client/1.1.8/mariadb-java-client-1.1.8.jar\";\n \n     private static final String POSTGRES_CLASS_DRIVER = \"org.postgresql.Driver\";\n@@ -48,10 +47,11 @@ private DriverLoader(final URL[] urls) {\n         addURL(urls[0]);\n     }\n \n-    private static DriverLoader driverLoader;\n+    private static DriverLoader DRIVER_LOADER;\n \n     public static Driver load(final DBs selectedDB, final boolean isProxyEnabled, final String proxyHost,\n             final String proxyPort, final String proxyUser, final String proxyPwd) {\n+\n         Driver driver = null;\n         switch (selectedDB) {\n             case POSTGRES:\n@@ -79,6 +79,7 @@ public static Driver load(final DBs selectedDB, final boolean isProxyEnabled, fi\n     private static Driver downloadDriver(final String driverUrl, final String driverClassName,\n             final boolean isProxyEnabled, final String proxyHost, final String proxyPort, final String proxyUser,\n             final String proxyPwd) {\n+\n         Driver driver = null;\n         try {\n             if (isProxyEnabled) {\n@@ -97,12 +98,10 @@ public PasswordAuthentication getPasswordAuthentication() {\n                 }\n             }\n             final URL[] url = { new URL(driverUrl) };\n-            driverLoader = new DriverLoader(url);\n-            driver = (Driver) driverLoader.loadClass(driverClassName).newInstance();\n-        } catch (ClassNotFoundException e) {\n-        } catch (InstantiationException ex) {\n-        } catch (IllegalAccessException ex) {\n-        } catch (MalformedURLException ex) {\n+            DRIVER_LOADER = new DriverLoader(url);\n+            driver = (Driver) DRIVER_LOADER.loadClass(driverClassName).newInstance();\n+        } catch (Exception e) {\n+            // ignore\n         }\n \n         return driver;"},{"sha":"023ce7a170659805f22b2c2d246e350d58aaa526","filename":"installer/src/main/java/org/apache/syncope/installer/utilities/HttpUtils.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FHttpUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FHttpUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FHttpUtils.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -21,9 +21,6 @@\n import com.izforge.izpack.panels.process.AbstractUIProcessHandler;\n import java.io.File;\n import java.io.IOException;\n-import java.security.KeyManagementException;\n-import java.security.KeyStoreException;\n-import java.security.NoSuchAlgorithmException;\n import org.apache.commons.io.IOUtils;\n import org.apache.http.HttpEntity;\n import org.apache.http.HttpHost;\n@@ -190,6 +187,7 @@ public static int ping(final boolean isSsl, final String host, final String port\n                         new HttpGet(String.format(HTTP_URL_TEMPLATE, host, port))).getStatusLine().getStatusCode();\n             }\n         } catch (IOException ex) {\n+            // ignore\n         }\n \n         return status;\n@@ -203,10 +201,10 @@ private static CloseableHttpClient createHttpsClient() {\n             chc = HttpClients.custom().setSSLSocketFactory(\n                     new SSLConnectionSocketFactory(builder.build(),\n                             SSLConnectionSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER)).build();\n-        } catch (KeyManagementException ex) {\n-        } catch (NoSuchAlgorithmException ex) {\n-        } catch (KeyStoreException ex) {\n+        } catch (Exception ex) {\n+            // ignore\n         }\n+\n         return chc;\n     }\n }"},{"sha":"2893e825d4c14a530f91c695c8807bffff275b93","filename":"installer/src/main/java/org/apache/syncope/installer/utilities/InstallLog.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FInstallLog.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FInstallLog.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FInstallLog.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -22,9 +22,9 @@\n import java.io.File;\n import java.util.Date;\n \n-public class InstallLog {\n+public final class InstallLog {\n \n-    private static InstallLog installLog = null;\n+    private static InstallLog INSTANCE = null;\n \n     private final File log;\n \n@@ -40,15 +40,15 @@ private InstallLog(final String installPath, final AbstractUIProcessHandler hand\n \n     public static InstallLog initialize(final String installPath, final AbstractUIProcessHandler handler) {\n         synchronized (InstallLog.class) {\n-            if (installLog == null) {\n-                installLog = new InstallLog(installPath, handler);\n+            if (INSTANCE == null) {\n+                INSTANCE = new InstallLog(installPath, handler);\n             }\n         }\n-        return installLog;\n+        return INSTANCE;\n     }\n \n     public static InstallLog getInstance() {\n-        return installLog;\n+        return INSTANCE;\n     }\n \n     public void error(final String msg) {"},{"sha":"c41ff9f1c67585dae183d99aa03bc09324ad2717","filename":"installer/src/main/java/org/apache/syncope/installer/utilities/JsonUtils.java","status":"modified","additions":12,"deletions":4,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FJsonUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FJsonUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FJsonUtils.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -24,25 +24,33 @@\n import org.apache.syncope.installer.containers.jboss.JBossAddResponse;\n import org.apache.syncope.installer.containers.jboss.JBossDeployRequestContent;\n \n-public class JsonUtils {\n+public final class JsonUtils {\n \n-    private final static ObjectMapper objectMapper = new ObjectMapper();\n+    private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n \n     public static JBossAddResponse jBossAddResponse(final String responseBodyAsString) {\n         JBossAddResponse jBossAddResponse = null;\n         try {\n-            jBossAddResponse = objectMapper.readValue(responseBodyAsString, JBossAddResponse.class);\n+            jBossAddResponse = OBJECT_MAPPER.readValue(responseBodyAsString, JBossAddResponse.class);\n         } catch (IOException ioe) {\n+            // ignore\n         }\n+\n         return jBossAddResponse;\n     }\n \n     public static String jBossDeployRequestContent(final JBossDeployRequestContent jBossDeployRequestContent) {\n         String jBossDeployRequestContentString = \"\";\n         try {\n-            jBossDeployRequestContentString = objectMapper.writeValueAsString(jBossDeployRequestContent);\n+            jBossDeployRequestContentString = OBJECT_MAPPER.writeValueAsString(jBossDeployRequestContent);\n         } catch (JsonProcessingException ioe) {\n+            // ignore\n         }\n+\n         return jBossDeployRequestContentString;\n     }\n+\n+    private JsonUtils() {\n+        // private constructor for static utility class\n+    }\n }"},{"sha":"24f85dc071ee54fcce44d0075d2ce8625b343eac","filename":"installer/src/main/java/org/apache/syncope/installer/utilities/MavenUtils.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FMavenUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FMavenUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FMavenUtils.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -82,7 +82,8 @@ private Properties archetypeProperties(final String archetypeVersion, final Stri\n         properties.setProperty(\"archetypeGroupId\", \"org.apache.syncope\");\n         properties.setProperty(\"archetypeArtifactId\", \"syncope-archetype\");\n         if (archetypeVersion.contains(\"SNAPSHOT\")) {\n-            properties.setProperty(\"archetypeRepository\", \"http://repository.apache.org/content/repositories/snapshots\");\n+            properties.setProperty(\"archetypeRepository\",\n+                    \"http://repository.apache.org/content/repositories/snapshots\");\n         } else {\n             properties.setProperty(\"archetypeRepository\", \"http://repo1.maven.org/maven2\");\n         }\n@@ -94,7 +95,9 @@ private Properties archetypeProperties(final String archetypeVersion, final Stri\n         return properties;\n     }\n \n-    public void mvnCleanPackageWithProperties(final String path, final Properties properties, final File customSettingsFile) {\n+    public void mvnCleanPackageWithProperties(\n+            final String path, final Properties properties, final File customSettingsFile) {\n+\n         final InvocationRequest request = new DefaultInvocationRequest();\n         request.setProperties(properties);\n         if (customSettingsFile != null && FileUtils.sizeOf(customSettingsFile) > 0) {"},{"sha":"79173a4a52b730aaa153e9b65fa5f3e5c0d6eb6b","filename":"installer/src/main/java/org/apache/syncope/installer/utilities/PasswordGenerator.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FPasswordGenerator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FPasswordGenerator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Futilities%2FPasswordGenerator.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -24,7 +24,7 @@\n import java.util.logging.Logger;\n import org.apache.commons.codec.binary.Hex;\n \n-public class PasswordGenerator {\n+public final class PasswordGenerator {\n \n     public static String password(final String password, final String digest) {\n         String pwd = \"\";\n@@ -38,4 +38,7 @@ public static String password(final String password, final String digest) {\n         return pwd;\n     }\n \n+    private PasswordGenerator() {\n+        // private constructor for static utility class\n+    }\n }"},{"sha":"064a9cc3a2a4044a7a06db6c33ef10f2131f43c0","filename":"installer/src/main/java/org/apache/syncope/installer/validators/ArchetypeValidator.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FArchetypeValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FArchetypeValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Fvalidators%2FArchetypeValidator.java?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -27,7 +27,6 @@ public class ArchetypeValidator extends AbstractValidator {\n \n     @Override\n     public Status validateData(final InstallData installData) {\n-\n         final String mavenDir = installData.getVariable(\"mvn.directory\");\n         final String mavenGroupId = installData.getVariable(\"mvn.groupid\");\n         final String mavenArtifactId = installData.getVariable(\"mvn.artifactid\");\n@@ -41,7 +40,7 @@ public Status validateData(final InstallData installData) {\n         if (isEmpty(mavenDir)) {\n             error.append(\"Maven home directory\\n\");\n             verified = false;\n-        } else if (!new File(mavenDir + \"/bin/mvn\").exists()){\n+        } else if (!new File(mavenDir + \"/bin/mvn\").exists()) {\n             error.append(\"Maven home directory not valid, check it please...\\n\");\n             verified = false;\n         }"},{"sha":"47a8aa6dc95c337c9ce3fc2677b56adeb8b65e80","filename":"installer/src/main/resources/installer.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fresources%2Finstaller.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/installer%2Fsrc%2Fmain%2Fresources%2Finstaller.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fresources%2Finstaller.properties?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -24,4 +24,5 @@ persistenceContextEMFactoryFile=core/src/main/resources/persistenceContextEMFact\n coreMetaInfDirectory=core/src/main/resources/META-INF\n persistencePropertiesFile=core/src/main/resources/persistence.properties\n consolePropertiesFile=console.properties\n-modelerPomFile=modelerPom.xml\n\\ No newline at end of file\n+modelerPomFile=modelerPom.xml\n+"},{"sha":"fa2e49a94b23b7b3325d816b71157e33a32e1cbf","filename":"pom.xml","status":"modified","additions":38,"deletions":29,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -326,7 +326,7 @@ under the License.\n     <connid.ldap.version>1.4.0</connid.ldap.version>\n     <connid.ad.version>1.2.3</connid.ad.version>\n \n-    <cxf.version>3.1.0-SNAPSHOT</cxf.version>\n+    <cxf.version>3.1.0</cxf.version>\n \n     <camel.version>2.15.2</camel.version>\t\n \n@@ -1213,18 +1213,6 @@ under the License.\n             <targetJdk>${targetJdk}</targetJdk>\n           </configuration>\n         </plugin>\n-        <plugin>\n-          <groupId>org.apache.maven.plugins</groupId>\n-          <artifactId>maven-pmd-plugin</artifactId>\n-          <version>3.4</version>\n-          <configuration>\n-            <rulesets>\n-              <rulesets>${rootpom.basedir}/src/main/resources/org/apache/syncope/pmd.xml</rulesets>\n-            </rulesets>\n-            <linkXRef>false</linkXRef>\n-            <targetJdk>${targetJdk}</targetJdk>\n-          </configuration>\n-        </plugin>\n         \n         <plugin>\n           <groupId>org.vafer</groupId>\n@@ -1265,7 +1253,7 @@ under the License.\n         </configuration>\n         <executions>\n           <execution>\n-            <id>modernizer</id>\n+            <id>modernizer-check</id>\n             <phase>verify</phase>\n             <goals>\n               <goal>modernizer</goal>\n@@ -1274,7 +1262,6 @@ under the License.\n         </executions>\n       </plugin>\n \n-      <!-- Enable with SYNCOPE-657\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-checkstyle-plugin</artifactId>\n@@ -1288,20 +1275,6 @@ under the License.\n           </execution>\n         </executions>\n       </plugin>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-pmd-plugin</artifactId>\n-        <executions>\n-          <execution>\n-            <id>pmd-check</id>\n-            <phase>verify</phase>\n-            <goals>\n-              <goal>check</goal>\n-              <goal>cpd-check</goal>\n-            </goals>\n-          </execution>\n-        </executions>\n-      </plugin>-->\n \n       <plugin>\n         <groupId>org.codehaus.gmaven</groupId>\n@@ -1359,6 +1332,7 @@ under the License.\n         </configuration>\n         <executions>\n           <execution>\n+            <id>rat-check</id>\n             <phase>verify</phase>\n             <goals>\n               <goal>check</goal>\n@@ -1559,6 +1533,41 @@ under the License.\n \n       <build>\n         <defaultGoal>clean install</defaultGoal>\n+        \n+        <plugins>\n+          <plugin>\n+            <groupId>org.gaul</groupId>\n+            <artifactId>modernizer-maven-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>modernizer-check</id>\n+                <phase>none</phase>\n+              </execution>\n+            </executions>\n+          </plugin>\n+\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-checkstyle-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>checkstyle-check</id>\n+                <phase>none</phase>\n+              </execution>\n+            </executions>\n+          </plugin>\n+      \n+          <plugin>\n+            <groupId>org.apache.rat</groupId>\n+            <artifactId>apache-rat-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>rat-check</id>\n+                <phase>none</phase>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n       </build>\n     </profile>\n "},{"sha":"52518905c85a068ac8908356f78835ed80195d87","filename":"src/main/resources/org/apache/syncope/checkstyle.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/src%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fcheckstyle.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/src%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fcheckstyle.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fcheckstyle.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -191,6 +191,7 @@ under the License.\n     <module name=\"HiddenField\">\n       <property name=\"ignoreSetter\" value=\"true\"/>\n       <property name=\"ignoreConstructorParameter\" value=\"true\"/>\n+      <property name=\"tokens\" value=\"VARIABLE_DEF\"/>\n     </module>\n     <module name=\"IllegalInstantiation\"/>\n     <module name=\"InnerAssignment\"/>"},{"sha":"5190d403ac8bac50daab5221767625811fcf3e02","filename":"src/main/resources/org/apache/syncope/pmd.xml","status":"removed","additions":0,"deletions":80,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3fc2f962b2ef8c511dc4defa585e3614730ad69c/src%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fpmd.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3fc2f962b2ef8c511dc4defa585e3614730ad69c/src%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fpmd.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fpmd.xml?ref=3fc2f962b2ef8c511dc4defa585e3614730ad69c","patch":"@@ -1,80 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<ruleset name=\"Syncope\"\n-         xmlns=\"http://pmd.sf.net/ruleset/1.0.0\"\n-         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-         xsi:schemaLocation=\"http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd\"\n-         xsi:noNamespaceSchemaLocation=\"http://pmd.sf.net/ruleset_xml_schema.xsd\">\n-        \n-  <rule ref=\"rulesets/java/basic.xml\"/>\n-  <rule ref=\"rulesets/java/naming.xml\">\n-    <exclude name=\"ShortVariable\"/>\n-    <exclude name=\"LongVariable\"/>\n-    <exclude name=\"ShortMethodName\"/>\n-    <exclude name=\"ShortClassName\"/>\n-    <exclude name=\"GenericsNaming\"/>\n-  </rule>\n-  <rule ref=\"rulesets/java/unusedcode.xml\"/>\n-  <rule ref=\"rulesets/java/design.xml\">\n-    <exclude name=\"GodClass\"/>\n-    <exclude name=\"UseLocaleWithCaseConversions\"/>\n-    <exclude name=\"ConfusingTernary\"/>\n-    <exclude name=\"NonStaticInitializer\"/>\n-    <exclude name=\"AvoidConstantsInterface\"/>\n-    <exclude name=\"AvoidDeeplyNestedIfStmts\"/>\n-  </rule>\n-  <rule ref=\"rulesets/java/imports.xml\"/>\n-  <rule ref=\"rulesets/java/strings.xml\">\n-    <exclude name=\"AvoidDuplicateLiterals\"/>\n-    <exclude name=\"AvoidStringBufferField\"/>\n-  </rule>\n-  <rule ref=\"rulesets/java/codesize.xml\">\n-    <exclude name=\"TooManyFields\"/>\n-    <exclude name=\"TooManyMethods\"/>\n-    <exclude name=\"ExcessivePublicCount\"/>\n-    <exclude name=\"CyclomaticComplexity\"/>\n-    <exclude name=\"StdCyclomaticComplexity\"/>\n-    <exclude name=\"ModifiedCyclomaticComplexity\"/>\n-    <exclude name=\"NPathComplexity\"/>\n-    <exclude name=\"ExcessiveMethodLength\"/>\n-  </rule>\n-  <rule ref=\"rulesets/java/javabeans.xml\">\n-    <exclude name=\"BeanMembersShouldSerialize\"/>\n-  </rule>\n-  <rule ref=\"rulesets/java/coupling.xml\">\n-    <exclude name=\"LoosePackageCoupling\"/>\n-    <exclude name=\"LawOfDemeter\"/>\n-    <exclude name=\"ExcessiveImports\"/>\n-  </rule>\n-  <rule ref=\"rulesets/java/controversial.xml\">\n-    <exclude name=\"NullAssignment\"/>\n-    <exclude name=\"DataflowAnomalyAnalysis\"/>\n-    <exclude name=\"AtLeastOneConstructor\"/>\n-    <exclude name=\"OnlyOneReturn\"/>\n-    <exclude name=\"UseConcurrentHashMap\"/>\n-    <exclude name=\"AvoidLiteralsInIfCondition\"/>\n-    <exclude name=\"UseObjectForClearerAPI\"/>\n-  </rule>\n-  <rule ref=\"rulesets/java/strictexception.xml\">\n-    <exclude name=\"AvoidCatchingGenericException\"/>\n-  </rule>\n-  <rule ref=\"rulesets/java/typeresolution.xml\"/>\n-    \n-</ruleset>"},{"sha":"89764673a0dcbd41173f01a39b517003be1f22e6","filename":"standalone/pom.xml","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/62193429f899535bbd55490f1d38a41e4ffbb7ac/standalone%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/62193429f899535bbd55490f1d38a41e4ffbb7ac/standalone%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/standalone%2Fpom.xml?ref=62193429f899535bbd55490f1d38a41e4ffbb7ac","patch":"@@ -34,6 +34,8 @@ under the License.\n   <packaging>jar</packaging>\n   \n   <properties>\n+    <rootpom.basedir>${basedir}/..</rootpom.basedir>\n+\n     <connid.location>connid://${testconnectorserver.key}@localhost:${testconnectorserver.port}</connid.location>\n     <log.directory>./logs</log.directory>\n     <test.csvdir.path>./test-csvdir</test.csvdir.path>\n@@ -200,6 +202,14 @@ under the License.\n           </execution>\n         </executions>\n       </plugin>\n+      \n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-checkstyle-plugin</artifactId>\n+        <configuration>\n+          <resourceIncludes>src/main/resources/**/*.properties</resourceIncludes>\n+        </configuration>\n+      </plugin>\n     </plugins>\n \n     <resources>"}]}