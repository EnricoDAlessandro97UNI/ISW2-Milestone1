{"sha":"442a7360c76dca1c6d741fe5979b0be42018c4d0","node_id":"C_kwDOJfYA1toAKDQ0MmE3MzYwYzc2ZGNhMWM2ZDc0MWZlNTk3OWIwYmU0MjAxOGM0ZDA","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2022-07-29T12:52:33Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-07-29T12:52:33Z"},"message":"Upgrading Spring Boot to 2.7 and CAS to 6.6 (#362)","tree":{"sha":"7012bba31df418d1fd3002b87a890ffbddc17ea1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/7012bba31df418d1fd3002b87a890ffbddc17ea1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/442a7360c76dca1c6d741fe5979b0be42018c4d0","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi49gRCRBK7hj4Ov3rIwAA7oQIAC1FZqd9euQt2vIvtDVA1kiM\nMiU19fsPq6cbM1ZznU/WLD4ZK/q+5Vwxqkjmh5UY5fivjplNcBOK299gu37tWQeL\nzs5tKUgEugJH+GbwTjrpLKWlvcflamXmyqvfqFgtGuw5CqmlBJ+x2CONm5NvJ0ml\n08MOAO0bSiwawDKDwPiwjWrqa0UCfmPTjaZdKih3sOiOxmj8nlEhwp8oZrNP1ZxE\nLawr4ZIqMZePkOWqEWMKG2f0uEG9u+mTtPSDU7h97M1GtPgE2fYP1PPPE9gwInJr\n0OMdu/kDRTxHPbU/nfZ6ixz/e00MuurqMo5pE8YwUm4tG/ProYIzZWcFpbpD0Ls=\n=A5Y3\n-----END PGP SIGNATURE-----\n","payload":"tree 7012bba31df418d1fd3002b87a890ffbddc17ea1\nparent 99abd29aed81754fa28a35ca72fcfd851e7910b4\nauthor Francesco Chicchiriccò <ilgrosso@users.noreply.github.com> 1659099153 +0200\ncommitter GitHub <noreply@github.com> 1659099153 +0200\n\nUpgrading Spring Boot to 2.7 and CAS to 6.6 (#362)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/442a7360c76dca1c6d741fe5979b0be42018c4d0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/442a7360c76dca1c6d741fe5979b0be42018c4d0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/442a7360c76dca1c6d741fe5979b0be42018c4d0/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"99abd29aed81754fa28a35ca72fcfd851e7910b4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/99abd29aed81754fa28a35ca72fcfd851e7910b4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/99abd29aed81754fa28a35ca72fcfd851e7910b4"}],"stats":{"total":935,"additions":360,"deletions":575},"files":[{"sha":"30bfb102733ec9f13a36eeccaeb8b43c6207c0e2","filename":"archetype/src/main/resources/archetype-resources/wa/pom.xml","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fwa%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fwa%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fwa%2Fpom.xml?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -32,6 +32,18 @@ under the License.\n   <artifactId>${artifactId}</artifactId>\n   <packaging>war</packaging>\n \n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.apereo.cas</groupId>\n+        <artifactId>cas-server-support-bom</artifactId>\n+        <version>${cas.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n+\n   <dependencies>\n     <dependency>\n       <groupId>${groupId}</groupId>"},{"sha":"57c4e68ff27b6cba6ba3c34d3c500e248974a01f","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/rest/OIDCJWKSRestClient.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FOIDCJWKSRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FOIDCJWKSRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FOIDCJWKSRestClient.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -21,7 +21,6 @@\n import java.util.concurrent.atomic.AtomicReference;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.OIDCJWKSTO;\n-import org.apache.syncope.common.lib.types.JWSAlgorithm;\n import org.apache.syncope.common.rest.api.service.OIDCJWKSService;\n \n public class OIDCJWKSRestClient extends BaseRestClient {\n@@ -39,7 +38,7 @@ public static AtomicReference<OIDCJWKSTO> get() {\n     }\n \n     public static OIDCJWKSTO generate() {\n-        Response response = getService(OIDCJWKSService.class).generate(2048, JWSAlgorithm.RS256);\n+        Response response = getService(OIDCJWKSService.class).generate(\"syncope\", \"RSA\", 2048);\n         return response.readEntity(OIDCJWKSTO.class);\n     }\n "},{"sha":"f33629d73201f8aafb7e990fda240397625a6a2d","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/SecurityConfig.java","status":"modified","additions":20,"deletions":21,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSecurityConfig.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSecurityConfig.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSecurityConfig.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -22,35 +22,34 @@\n import org.springframework.boot.actuate.autoconfigure.security.servlet.EndpointRequest;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n-import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\n import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n-import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n+import org.springframework.security.core.userdetails.User;\n+import org.springframework.security.core.userdetails.UserDetails;\n+import org.springframework.security.provisioning.InMemoryUserDetailsManager;\n+import org.springframework.security.web.SecurityFilterChain;\n \n @EnableWebSecurity\n @Configuration(proxyBeanMethods = false)\n public class SecurityConfig {\n \n     @Bean\n-    public WebSecurityConfigurerAdapter consoleSecurityConfigAdapter(final ConsoleProperties props) {\n-        return new WebSecurityConfigurerAdapter() {\n-            @Override\n-            protected void configure(final AuthenticationManagerBuilder auth) throws Exception {\n-                auth.inMemoryAuthentication().\n-                    withUser(props.getAnonymousUser()).\n-                    password(\"{noop}\" + props.getAnonymousKey()).\n-                    roles(IdRepoEntitlement.ANONYMOUS);\n-            }\n+    public SecurityFilterChain filterChain(final HttpSecurity http) throws Exception {\n+        http.csrf().disable().\n+                authorizeRequests().\n+                requestMatchers(EndpointRequest.toAnyEndpoint()).\n+                authenticated().\n+                and().\n+                httpBasic();\n+        return http.build();\n+    }\n \n-            @Override\n-            protected void configure(final HttpSecurity http) throws Exception {\n-                http.csrf().disable().\n-                    authorizeRequests().\n-                    requestMatchers(EndpointRequest.toAnyEndpoint()).\n-                    authenticated().\n-                    and().\n-                    httpBasic();\n-            }\n-        };\n+    @Bean\n+    public InMemoryUserDetailsManager userDetailsService(final ConsoleProperties props) {\n+        UserDetails user = User.withUsername(props.getAnonymousUser()).\n+                password(\"{noop}\" + props.getAnonymousKey()).\n+                roles(IdRepoEntitlement.ANONYMOUS).\n+                build();\n+        return new InMemoryUserDetailsManager(user);\n     }\n }"},{"sha":"3218618cdf3f004be1ab4fb58eafc65809743ed5","filename":"client/idrepo/enduser/src/main/java/org/apache/syncope/client/enduser/SecurityConfig.java","status":"modified","additions":20,"deletions":21,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSecurityConfig.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSecurityConfig.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSecurityConfig.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -22,35 +22,34 @@\n import org.springframework.boot.actuate.autoconfigure.security.servlet.EndpointRequest;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n-import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\n import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n-import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n+import org.springframework.security.core.userdetails.User;\n+import org.springframework.security.core.userdetails.UserDetails;\n+import org.springframework.security.provisioning.InMemoryUserDetailsManager;\n+import org.springframework.security.web.SecurityFilterChain;\n \n @EnableWebSecurity\n @Configuration(proxyBeanMethods = false)\n public class SecurityConfig {\n \n     @Bean\n-    public WebSecurityConfigurerAdapter enduserSecurityAdapter(final EnduserProperties props) {\n-        return new WebSecurityConfigurerAdapter() {\n-            @Override\n-            protected void configure(final AuthenticationManagerBuilder auth) throws Exception {\n-                auth.inMemoryAuthentication().\n-                    withUser(props.getAnonymousUser()).\n-                    password(\"{noop}\" + props.getAnonymousKey()).\n-                    roles(IdRepoEntitlement.ANONYMOUS);\n-            }\n+    public SecurityFilterChain filterChain(final HttpSecurity http) throws Exception {\n+        http.csrf().disable().\n+                authorizeRequests().\n+                requestMatchers(EndpointRequest.toAnyEndpoint()).\n+                authenticated().\n+                and().\n+                httpBasic();\n+        return http.build();\n+    }\n \n-            @Override\n-            protected void configure(final HttpSecurity http) throws Exception {\n-                http.csrf().disable().\n-                    authorizeRequests().\n-                    requestMatchers(EndpointRequest.toAnyEndpoint()).\n-                    authenticated().\n-                    and().\n-                    httpBasic();\n-            }\n-        };\n+    @Bean\n+    public InMemoryUserDetailsManager userDetailsService(final EnduserProperties props) {\n+        UserDetails user = User.withUsername(props.getAnonymousUser()).\n+                password(\"{noop}\" + props.getAnonymousKey()).\n+                roles(IdRepoEntitlement.ANONYMOUS).\n+                build();\n+        return new InMemoryUserDetailsManager(user);\n     }\n }"},{"sha":"3d4c66feedfaeef3b911723ba2b8d600bfb25878","filename":"client/idrepo/enduser/src/main/resources/org/apache/syncope/client/enduser/pages/SelfResult_fr_CA.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelfResult_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelfResult_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fenduser%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSelfResult_fr_CA.properties?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -14,4 +14,4 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-login=Back to Home\n+login=Retour \\u00e0 la page d'accueil"},{"sha":"97f83f86d952540bdca28ec4c037804a38247063","filename":"common/am/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/OIDCJWKSService.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FOIDCJWKSService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FOIDCJWKSService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FOIDCJWKSService.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -38,7 +38,6 @@\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.OIDCJWKSTO;\n-import org.apache.syncope.common.lib.types.JWSAlgorithm;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n \n @Tag(name = \"OpenID Connect 1.0\")\n@@ -53,7 +52,7 @@ public interface OIDCJWKSService extends JAXRSService {\n     OIDCJWKSTO get();\n \n     @ApiResponses(\n-        @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n+            @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n     @POST\n     @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n@@ -72,8 +71,9 @@ public interface OIDCJWKSService extends JAXRSService {\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     @Path(\"new\")\n     Response generate(\n-            @NotNull @QueryParam(\"size\") @DefaultValue(\"2048\") int size,\n-            @NotNull @QueryParam(\"algorithm\") @DefaultValue(\"RS256\") JWSAlgorithm algorithm);\n+            @NotNull @QueryParam(\"jwksKeyId\") @DefaultValue(\"syncope\") String jwksKeyId,\n+            @NotNull @QueryParam(\"jwksType\") @DefaultValue(\"RSA\") String jwksType,\n+            @NotNull @QueryParam(\"jwksKeySize\") @DefaultValue(\"2048\") int jwksKeySize);\n \n     @DELETE\n     @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })"},{"sha":"e088d7bbd36bd1330a52b1210e4defac2cb5268e","filename":"core/am/logic/src/main/java/org/apache/syncope/core/logic/OIDCJWKSLogic.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCJWKSLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCJWKSLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCJWKSLogic.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -23,7 +23,6 @@\n import org.apache.syncope.common.lib.to.OIDCJWKSTO;\n import org.apache.syncope.common.lib.types.AMEntitlement;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n-import org.apache.syncope.common.lib.types.JWSAlgorithm;\n import org.apache.syncope.core.persistence.api.dao.DuplicateException;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.OIDCJWKSDAO;\n@@ -54,10 +53,10 @@ public OIDCJWKSTO get() {\n \n     @PreAuthorize(\"hasRole('\" + AMEntitlement.OIDC_JWKS_GENERATE + \"') \"\n             + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n-    public OIDCJWKSTO generate(final int size, final JWSAlgorithm algorithm) {\n+    public OIDCJWKSTO generate(final String jwksKeyId, final String jwksType, final int jwksKeySize) {\n         OIDCJWKS jwks = dao.get();\n         if (jwks == null) {\n-            return binder.getOIDCJWKSTO(dao.save(binder.create(size, algorithm)));\n+            return binder.getOIDCJWKSTO(dao.save(binder.create(jwksKeyId, jwksType, jwksKeySize)));\n         }\n         throw new DuplicateException(\"OIDC JWKS already set\");\n     }\n@@ -78,7 +77,7 @@ protected OIDCJWKSTO resolveReference(final Method method, final Object... args)\n     }\n \n     @PreAuthorize(\"hasRole('\" + AMEntitlement.OIDC_JWKS_SET + \"') \"\n-        + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public OIDCJWKSTO set(final OIDCJWKSTO entityTO) {\n         OIDCJWKS jwks = dao.get();\n         jwks.setJson(entityTO.getJson());"},{"sha":"dd58b477046c4ae9b01fceaa2dc786d274065b3d","filename":"core/am/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/OIDCJWKSServiceImpl.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FOIDCJWKSServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FOIDCJWKSServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FOIDCJWKSServiceImpl.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -21,7 +21,6 @@\n import java.net.URI;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.OIDCJWKSTO;\n-import org.apache.syncope.common.lib.types.JWSAlgorithm;\n import org.apache.syncope.common.rest.api.service.OIDCJWKSService;\n import org.apache.syncope.core.logic.OIDCJWKSLogic;\n import org.springframework.stereotype.Service;\n@@ -46,8 +45,8 @@ public void set(final OIDCJWKSTO entityTO) {\n     }\n \n     @Override\n-    public Response generate(final int size, final JWSAlgorithm algorithm) {\n-        OIDCJWKSTO jwks = logic.generate(size, algorithm);\n+    public Response generate(final String jwksKeyId, final String jwksType, final int jwksKeySize) {\n+        OIDCJWKSTO jwks = logic.generate(jwksKeyId, jwksType, jwksKeySize);\n         URI location = uriInfo.getAbsolutePathBuilder().build();\n         return Response.created(location).entity(jwks).build();\n     }"},{"sha":"8baf5da9e06175adb3f3e11c36c0700826e71795","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/OIDCJWKSDataBinder.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FOIDCJWKSDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FOIDCJWKSDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FOIDCJWKSDataBinder.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -19,12 +19,11 @@\n package org.apache.syncope.core.provisioning.api.data;\n \n import org.apache.syncope.common.lib.to.OIDCJWKSTO;\n-import org.apache.syncope.common.lib.types.JWSAlgorithm;\n import org.apache.syncope.core.persistence.api.entity.am.OIDCJWKS;\n \n public interface OIDCJWKSDataBinder {\n \n     OIDCJWKSTO getOIDCJWKSTO(OIDCJWKS jwks);\n \n-    OIDCJWKS create(int size, JWSAlgorithm algorithm);\n+    OIDCJWKS create(String jwksKeyId, String jwksType, int jwksKeySize);\n }"},{"sha":"c8296be68ccf533c65c403087ae1bd07ea618ebb","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/OIDCJWKSDataBinderImpl.java","status":"modified","additions":63,"deletions":12,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FOIDCJWKSDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FOIDCJWKSDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FOIDCJWKSDataBinderImpl.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -19,15 +19,22 @@\n package org.apache.syncope.core.provisioning.java.data;\n \n import com.nimbusds.jose.JOSEException;\n+import com.nimbusds.jose.jwk.Curve;\n+import com.nimbusds.jose.jwk.ECKey;\n+import com.nimbusds.jose.jwk.JWK;\n import com.nimbusds.jose.jwk.JWKSet;\n import com.nimbusds.jose.jwk.KeyUse;\n-import com.nimbusds.jose.jwk.RSAKey;\n import com.nimbusds.jose.jwk.gen.RSAKeyGenerator;\n import com.nimbusds.jose.util.JSONObjectUtils;\n+import java.security.InvalidAlgorithmParameterException;\n+import java.security.KeyPair;\n+import java.security.KeyPairGenerator;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.interfaces.ECPrivateKey;\n+import java.security.interfaces.ECPublicKey;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.OIDCJWKSTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n-import org.apache.syncope.common.lib.types.JWSAlgorithm;\n import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n import org.apache.syncope.core.persistence.api.entity.am.OIDCJWKS;\n import org.apache.syncope.core.provisioning.api.data.OIDCJWKSDataBinder;\n@@ -51,22 +58,66 @@ public OIDCJWKSTO getOIDCJWKSTO(final OIDCJWKS jwks) {\n     }\n \n     @Override\n-    public OIDCJWKS create(final int size, final JWSAlgorithm algorithm) {\n+    public OIDCJWKS create(final String jwksKeyId, final String jwksType, final int jwksKeySize) {\n+        JWK jwk;\n         try {\n-            OIDCJWKS jwks = entityFactory.newEntity(OIDCJWKS.class);\n-            RSAKey jwk = new RSAKeyGenerator(size).\n-                    keyUse(KeyUse.SIGNATURE).\n-                    keyID(SecureRandomUtils.generateRandomUUID().toString()).\n-                    algorithm(new com.nimbusds.jose.JWSAlgorithm(algorithm.name())).\n-                    generate();\n-            jwks.setJson(JSONObjectUtils.toJSONString(new JWKSet(jwk).toJSONObject(false)));\n-            return jwks;\n-        } catch (JOSEException e) {\n+            switch (jwksType.trim().toLowerCase()) {\n+                case \"ec\":\n+                    KeyPairGenerator gen = KeyPairGenerator.getInstance(\"EC\");\n+                    KeyPair keyPair;\n+                    switch (jwksKeySize) {\n+                        case 384:\n+                            gen.initialize(Curve.P_384.toECParameterSpec());\n+                            keyPair = gen.generateKeyPair();\n+                            jwk = new ECKey.Builder(Curve.P_384, (ECPublicKey) keyPair.getPublic()).\n+                                    privateKey((ECPrivateKey) keyPair.getPrivate()).\n+                                    keyUse(KeyUse.SIGNATURE).\n+                                    keyID(jwksKeyId.concat(\"-\").\n+                                            concat(SecureRandomUtils.generateRandomUUID().toString().substring(0, 8))).\n+                                    build();\n+                            break;\n+\n+                        case 512:\n+                            gen.initialize(Curve.P_521.toECParameterSpec());\n+                            keyPair = gen.generateKeyPair();\n+                            jwk = new ECKey.Builder(Curve.P_521, (ECPublicKey) keyPair.getPublic()).\n+                                    privateKey((ECPrivateKey) keyPair.getPrivate()).\n+                                    keyUse(KeyUse.SIGNATURE).\n+                                    keyID(jwksKeyId.concat(\"-\").\n+                                            concat(SecureRandomUtils.generateRandomUUID().toString().substring(0, 8))).\n+                                    build();\n+                            break;\n+\n+                        default:\n+                            gen.initialize(Curve.P_256.toECParameterSpec());\n+                            keyPair = gen.generateKeyPair();\n+                            jwk = new ECKey.Builder(Curve.P_256, (ECPublicKey) keyPair.getPublic()).\n+                                    privateKey((ECPrivateKey) keyPair.getPrivate()).\n+                                    keyUse(KeyUse.SIGNATURE).\n+                                    keyID(jwksKeyId.concat(\"-\").\n+                                            concat(SecureRandomUtils.generateRandomUUID().toString().substring(0, 8))).\n+                                    build();\n+                    }\n+                    break;\n+\n+                case \"rsa\":\n+                default:\n+                    jwk = new RSAKeyGenerator(jwksKeySize).\n+                            keyUse(KeyUse.SIGNATURE).\n+                            keyID(jwksKeyId.concat(\"-\").\n+                                    concat(SecureRandomUtils.generateRandomUUID().toString().substring(0, 8))).\n+                            generate();\n+            }\n+        } catch (JOSEException | InvalidAlgorithmParameterException | NoSuchAlgorithmException e) {\n             LOG.error(\"Could not create OIDC JWKS\", e);\n \n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n             sce.getElements().add(e.getMessage());\n             throw sce;\n         }\n+\n+        OIDCJWKS jwks = entityFactory.newEntity(OIDCJWKS.class);\n+        jwks.setJson(JSONObjectUtils.toJSONString(new JWKSet(jwk).toJSONObject(false)));\n+        return jwks;\n     }\n }"},{"sha":"92c6b8b1914277c4cc23fdab3b72175b20e915ff","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/MustChangePasswordFilter.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FMustChangePasswordFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FMustChangePasswordFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FMustChangePasswordFilter.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -28,7 +28,7 @@\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.springframework.security.access.AccessDeniedException;\n import org.springframework.security.core.context.SecurityContextHolder;\n-import org.springframework.security.web.firewall.FirewalledRequest;\n+import org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper;\n \n public class MustChangePasswordFilter implements Filter {\n \n@@ -46,12 +46,13 @@ public void destroy() {\n     public void doFilter(final ServletRequest request, final ServletResponse response, final FilterChain chain)\n             throws IOException, ServletException {\n \n-        if (request instanceof FirewalledRequest) {\n+        if (request instanceof SecurityContextHolderAwareRequestWrapper) {\n             boolean isMustChangePassword =\n                     SecurityContextHolder.getContext().getAuthentication().getAuthorities().stream().anyMatch(\n                             authority -> IdRepoEntitlement.MUST_CHANGE_PASSWORD.equals(authority.getAuthority()));\n \n-            FirewalledRequest wrappedRequest = FirewalledRequest.class.cast(request);\n+            SecurityContextHolderAwareRequestWrapper wrappedRequest =\n+                    SecurityContextHolderAwareRequestWrapper.class.cast(request);\n             if (isMustChangePassword && !\"POST\".equalsIgnoreCase(wrappedRequest.getMethod())\n                     && !\"/users/self/changePassword\".equals(wrappedRequest.getPathInfo())) {\n "},{"sha":"e9ffb1b855a990121aec000cf1d229cb90db7ff6","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/WebSecurityContext.java","status":"modified","additions":61,"deletions":61,"changes":122,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FWebSecurityContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FWebSecurityContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FWebSecurityContext.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -38,15 +38,16 @@\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n import org.springframework.security.authentication.AnonymousAuthenticationProvider;\n+import org.springframework.security.authentication.AuthenticationManager;\n import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\n import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\n import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n-import org.springframework.security.config.annotation.web.builders.WebSecurity;\n import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n-import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n+import org.springframework.security.config.annotation.web.configuration.WebSecurityCustomizer;\n import org.springframework.security.config.http.SessionCreationPolicy;\n import org.springframework.security.core.authority.AuthorityUtils;\n import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.security.web.SecurityFilterChain;\n import org.springframework.security.web.access.AccessDeniedHandler;\n import org.springframework.security.web.access.intercept.FilterSecurityInterceptor;\n import org.springframework.security.web.authentication.AnonymousAuthenticationFilter;\n@@ -74,66 +75,65 @@ public HttpFirewall allowUrlEncodedSlashHttpFirewall() {\n     }\n \n     @Bean\n-    public WebSecurityConfigurerAdapter webSecurityConfigurerAdapter(\n-            final ApplicationContext ctx,\n+    public WebSecurityCustomizer webSecurityCustomizer(final HttpFirewall allowUrlEncodedSlashHttpFirewall) {\n+        return web -> web.httpFirewall(allowUrlEncodedSlashHttpFirewall);\n+    }\n+\n+    @Bean\n+    public SecurityFilterChain filterChain(\n+            final HttpSecurity http,\n+            final UsernamePasswordAuthenticationProvider usernamePasswordAuthenticationProvider,\n+            final JWTAuthenticationProvider jwtAuthenticationProvider,\n             final SecurityProperties securityProperties,\n-            final HttpFirewall allowUrlEncodedSlashHttpFirewall) {\n-\n-        return new WebSecurityConfigurerAdapter(true) {\n-\n-            @Override\n-            public void configure(final WebSecurity web) {\n-                web.httpFirewall(allowUrlEncodedSlashHttpFirewall);\n-            }\n-\n-            @Override\n-            protected void configure(final HttpSecurity http) throws Exception {\n-                SyncopeAuthenticationDetailsSource authenticationDetailsSource =\n-                        new SyncopeAuthenticationDetailsSource();\n-\n-                AnonymousAuthenticationProvider anonymousAuthenticationProvider =\n-                        new AnonymousAuthenticationProvider(ANONYMOUS_BEAN_KEY);\n-                AnonymousAuthenticationFilter anonymousAuthenticationFilter =\n-                        new AnonymousAuthenticationFilter(\n-                                ANONYMOUS_BEAN_KEY,\n-                                securityProperties.getAnonymousUser(),\n-                                AuthorityUtils.createAuthorityList(\"ROLE_ANONYMOUS\"));\n-                anonymousAuthenticationFilter.setAuthenticationDetailsSource(authenticationDetailsSource);\n-\n-                SyncopeBasicAuthenticationEntryPoint basicAuthenticationEntryPoint =\n-                        new SyncopeBasicAuthenticationEntryPoint();\n-                basicAuthenticationEntryPoint.setRealmName(\"Apache Syncope authentication\");\n-\n-                JWTAuthenticationFilter jwtAuthenticationFilter = new JWTAuthenticationFilter(\n-                        authenticationManager(),\n-                        basicAuthenticationEntryPoint,\n-                        authenticationDetailsSource,\n-                        ctx.getBean(AuthDataAccessor.class),\n-                        ctx.getBean(DefaultCredentialChecker.class));\n-\n-                http.authorizeRequests().\n-                        antMatchers(\"/**\").permitAll().and().\n-                        sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS).and().\n-                        securityContext().securityContextRepository(new NullSecurityContextRepository()).and().\n-                        anonymous().\n-                        authenticationProvider(anonymousAuthenticationProvider).\n-                        authenticationFilter(anonymousAuthenticationFilter).and().\n-                        httpBasic().authenticationEntryPoint(basicAuthenticationEntryPoint).\n-                        authenticationDetailsSource(authenticationDetailsSource).and().\n-                        exceptionHandling().accessDeniedHandler(accessDeniedHandler()).and().\n-                        addFilterBefore(jwtAuthenticationFilter, BasicAuthenticationFilter.class).\n-                        addFilterBefore(new MustChangePasswordFilter(), FilterSecurityInterceptor.class).\n-                        headers().disable().\n-                        csrf().disable();\n-            }\n-\n-            @Override\n-            protected void configure(final AuthenticationManagerBuilder builder) throws Exception {\n-                builder.\n-                        authenticationProvider(ctx.getBean(UsernamePasswordAuthenticationProvider.class)).\n-                        authenticationProvider(ctx.getBean(JWTAuthenticationProvider.class));\n-            }\n-        };\n+            final ApplicationContext ctx) throws Exception {\n+\n+        AuthenticationManager authenticationManager = http.getSharedObject(AuthenticationManagerBuilder.class).\n+                authenticationProvider(usernamePasswordAuthenticationProvider).\n+                authenticationProvider(jwtAuthenticationProvider).\n+                build();\n+\n+        SyncopeAuthenticationDetailsSource authenticationDetailsSource =\n+                new SyncopeAuthenticationDetailsSource();\n+\n+        AnonymousAuthenticationProvider anonymousAuthenticationProvider =\n+                new AnonymousAuthenticationProvider(ANONYMOUS_BEAN_KEY);\n+        AnonymousAuthenticationFilter anonymousAuthenticationFilter =\n+                new AnonymousAuthenticationFilter(\n+                        ANONYMOUS_BEAN_KEY,\n+                        securityProperties.getAnonymousUser(),\n+                        AuthorityUtils.createAuthorityList(\"ROLE_ANONYMOUS\"));\n+        anonymousAuthenticationFilter.setAuthenticationDetailsSource(authenticationDetailsSource);\n+\n+        SyncopeBasicAuthenticationEntryPoint basicAuthenticationEntryPoint =\n+                new SyncopeBasicAuthenticationEntryPoint();\n+        basicAuthenticationEntryPoint.setRealmName(\"Apache Syncope authentication\");\n+\n+        JWTAuthenticationFilter jwtAuthenticationFilter = new JWTAuthenticationFilter(\n+                authenticationManager,\n+                basicAuthenticationEntryPoint,\n+                authenticationDetailsSource,\n+                ctx.getBean(AuthDataAccessor.class),\n+                ctx.getBean(DefaultCredentialChecker.class));\n+\n+        MustChangePasswordFilter mustChangePasswordFilter = new MustChangePasswordFilter();\n+\n+        http.authenticationManager(authenticationManager).\n+                authorizeRequests().\n+                antMatchers(\"/**\").permitAll().and().\n+                sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS).and().\n+                securityContext().securityContextRepository(new NullSecurityContextRepository()).and().\n+                anonymous().\n+                authenticationProvider(anonymousAuthenticationProvider).\n+                authenticationFilter(anonymousAuthenticationFilter).and().\n+                httpBasic().authenticationEntryPoint(basicAuthenticationEntryPoint).\n+                authenticationDetailsSource(authenticationDetailsSource).and().\n+                exceptionHandling().accessDeniedHandler(accessDeniedHandler()).and().\n+                addFilterBefore(jwtAuthenticationFilter, BasicAuthenticationFilter.class).\n+                addFilterBefore(mustChangePasswordFilter, FilterSecurityInterceptor.class).\n+                headers().disable().\n+                csrf().disable();\n+\n+        return http.build();\n     }\n \n     @ConditionalOnMissingBean"},{"sha":"39af643cccdca0566817bef51c135912e10c1b2d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/OIDCJWKSITCase.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FOIDCJWKSITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FOIDCJWKSITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FOIDCJWKSITCase.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -28,7 +28,6 @@\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n-import org.apache.syncope.common.lib.types.JWSAlgorithm;\n import org.apache.syncope.common.rest.api.service.OIDCJWKSService;\n import org.apache.syncope.fit.AbstractITCase;\n import org.junit.jupiter.api.BeforeAll;\n@@ -59,10 +58,10 @@ public void deleteGetSet() {\n             assertEquals(ClientExceptionType.NotFound, e.getType());\n         }\n \n-        Response response = WA_OIDC_JWKS_SERVICE.generate(2048, JWSAlgorithm.RS256);\n+        Response response = WA_OIDC_JWKS_SERVICE.generate(\"syncope\", \"RSA\", 2048);\n         assertEquals(HttpStatus.CREATED.value(), response.getStatus());\n         try {\n-            WA_OIDC_JWKS_SERVICE.generate(2048, JWSAlgorithm.RS512);\n+            WA_OIDC_JWKS_SERVICE.generate(\"syncope\", \"RSA\", 2048);\n             fail(\"Should not recreate an OIDC JWKS\");\n         } catch (SyncopeClientException e) {\n             assertEquals(ClientExceptionType.EntityExists, e.getType());"},{"sha":"efbf265ab9bba3fe7a0a6887bfe1fb171e889e65","filename":"fit/wa-reference/pom.xml","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/fit%2Fwa-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/fit%2Fwa-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fpom.xml?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -39,6 +39,18 @@ under the License.\n     <rootpom.basedir>${basedir}/../..</rootpom.basedir>\n   </properties>\n \n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.apereo.cas</groupId>\n+        <artifactId>cas-server-support-bom</artifactId>\n+        <version>${cas.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n+\n   <dependencies>\n     <dependency>\n       <groupId>org.apache.syncope.wa</groupId>"},{"sha":"6c49eeff0d2beec92332696d1bb9f9abb33a568a","filename":"pom.xml","status":"modified","additions":7,"deletions":355,"changes":362,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -411,7 +411,7 @@ under the License.\n \n     <jackson.version>2.13.3</jackson.version>\n \n-    <spring-boot.version>2.6.10</spring-boot.version>\n+    <spring-boot.version>2.7.2</spring-boot.version>\n     <spring-cloud-gateway.version>3.1.3</spring-cloud-gateway.version>\n \n     <openjpa.version>3.2.2</openjpa.version>\n@@ -430,7 +430,7 @@ under the License.\n \n     <slf4j.version>1.7.36</slf4j.version>\n \n-    <elasticsearch.version>8.3.2</elasticsearch.version>\n+    <elasticsearch.version>8.3.3</elasticsearch.version>\n \n     <apacheds.version>2.0.0.AM26</apacheds.version>\n     <apachedirapi.version>2.0.0</apachedirapi.version>\n@@ -446,9 +446,9 @@ under the License.\n \n     <modernizer-maven.version>2.4.0</modernizer-maven.version>\n \n-    <pac4j.version>5.3.1</pac4j.version>\n+    <pac4j.version>5.4.3</pac4j.version>\n \n-    <cas.version>6.5.6</cas.version>\n+    <cas.version>6.6.0-RC5</cas.version>\n     <cas-client.version>3.6.4</cas-client.version>\n \n     <h2.version>2.1.214</h2.version>\n@@ -510,11 +510,11 @@ under the License.\n     <docker.mysql.version>8.0</docker.mysql.version>\n     <docker.mariadb.version>10</docker.mariadb.version>\n \n-    <jdbc.postgresql.version>42.3.6</jdbc.postgresql.version>\n+    <jdbc.postgresql.version>42.4.0</jdbc.postgresql.version>\n     <jdbc.mysql.version>8.0.28</jdbc.mysql.version>\n     <jdbc.mariadb.version>3.0.5</jdbc.mariadb.version>\n     <jdbc.mssql.version>10.2.1.jre</jdbc.mssql.version>\n-    <jdbc.oracle.version>21.5.0.0</jdbc.oracle.version>\n+    <jdbc.oracle.version>21.6.0.0.1</jdbc.oracle.version>\n \n     <conf.directory>${project.build.directory}/test-classes</conf.directory>\n     <bundles.directory>${project.build.directory}/bundles</bundles.directory>\n@@ -1272,354 +1272,6 @@ under the License.\n       <!-- PAC4J -->\n \n       <!-- CAS -->\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-audit</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-events-api</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-authentication</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-configuration-api</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-util-api</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-configuration</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-cookie</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-logout</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-logging</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-services</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-authentication-api</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-services-registry</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-services-api</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-tickets</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-util</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-validation</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-web</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-webflow</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-events-configuration</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-thymeleaf</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-actions</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-jpa-util</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-ldap</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-reports</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-syncope-authentication</artifactId>\n-        <version>${cas.version}</version>\n-        <exclusions>\n-          <exclusion>\n-            <groupId>com.github.mmoayyed.cxf</groupId>\n-            <artifactId>cxf-rt-rs-extension-search</artifactId>\n-          </exclusion>\n-        </exclusions>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-saml</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-person-directory</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-person-directory-core</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-themes</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-audit-api</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-saml-idp</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-saml-idp-core</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-oidc</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-oidc-core-api</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-oidc-core</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-oauth-services</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-validation</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-pm-webflow</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-pac4j-webflow</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-pac4j-core-clients</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-consent-webflow</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-aup-webflow</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-u2f</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-u2f-core</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-webauthn</artifactId>\n-        <version>${cas.version}</version>\n-        <exclusions>\n-          <exclusion>\n-            <groupId>javax.ws.rs</groupId>\n-            <artifactId>javax.ws.rs-api</artifactId>\n-          </exclusion>\n-          <exclusion>\n-            <groupId>org.eclipse.jetty</groupId>\n-            <artifactId>jetty-servlet</artifactId>\n-          </exclusion>\n-          <exclusion>\n-            <groupId>org.glassfish.jersey.containers</groupId>\n-            <artifactId>jersey-container-servlet-core</artifactId>\n-          </exclusion>\n-        </exclusions>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-webauthn-core</artifactId>\n-        <version>${cas.version}</version>\n-        <exclusions>\n-          <exclusion>\n-            <groupId>javax.ws.rs</groupId>\n-            <artifactId>javax.ws.rs-api</artifactId>\n-          </exclusion>\n-          <exclusion>\n-            <groupId>org.eclipse.jetty</groupId>\n-            <artifactId>jetty-servlet</artifactId>\n-          </exclusion>\n-          <exclusion>\n-            <groupId>org.glassfish.jersey.containers</groupId>\n-            <artifactId>jersey-container-servlet-core</artifactId>\n-          </exclusion>\n-          <exclusion>\n-            <groupId>com.google.code.findbugs</groupId>\n-            <artifactId>jsr305</artifactId>\n-          </exclusion>\n-        </exclusions>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-simple-mfa</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-simple-mfa-core</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-gauth</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-ldap-core</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-gauth-ldap</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-duo</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-gauth-core-mfa</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-otp-mfa-core</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-oidc-services</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-swagger</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-authentication-attributes</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-core-services-authentication</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-webapp-config</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-surrogate-webflow</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>org.apereo.cas</groupId>\n-        <artifactId>cas-server-support-surrogate-api</artifactId>\n-        <version>${cas.version}</version>\n-      </dependency>\n       <dependency>\n         <groupId>org.jasig.cas.client</groupId>\n         <artifactId>cas-client-core</artifactId>\n@@ -2009,7 +1661,7 @@ under the License.\n         <plugin>\n           <groupId>org.apache.maven.plugins</groupId>\n           <artifactId>maven-resources-plugin</artifactId>\n-          <version>3.1.0</version>\n+          <version>3.3.0</version>\n           <configuration>\n             <useDefaultDelimiters>false</useDefaultDelimiters>\n             <delimiters>"},{"sha":"5fe2a70b71989b9821e726c643ff3dd0e65becf8","filename":"wa/bootstrap/pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fbootstrap%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fbootstrap%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fbootstrap%2Fpom.xml?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -48,6 +48,7 @@ under the License.\n       <artifactId>syncope-common-keymaster-client-api</artifactId>\n       <version>${project.version}</version>\n     </dependency>\n+\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n       <artifactId>cas-server-core-configuration-api</artifactId>"},{"sha":"b14c7fe1370fc7a3c14d2764829cc5a1f080ab11","filename":"wa/bootstrap/src/main/java/org/apache/syncope/wa/bootstrap/AuthModulePropertySourceMapper.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FAuthModulePropertySourceMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FAuthModulePropertySourceMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fbootstrap%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fbootstrap%2FAuthModulePropertySourceMapper.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -248,13 +248,15 @@ public Map<String, Object> map(final AuthModuleTO authModuleTO, final SimpleMfaA\n         CasSimpleMultifactorAuthenticationProperties props = new CasSimpleMultifactorAuthenticationProperties();\n         props.setName(authModuleTO.getKey());\n         props.setOrder(authModuleTO.getOrder());\n-        props.setTokenLength(conf.getTokenLength());\n-        props.setTimeToKillInSeconds(conf.getTimeToKillInSeconds());\n+\n         props.getMail().setAttributeName(conf.getEmailAttribute());\n         props.getMail().setFrom(conf.getEmailFrom());\n         props.getMail().setSubject(conf.getEmailSubject());\n         props.getMail().setText(conf.getEmailText());\n \n+        props.getToken().getCore().setTokenLength(conf.getTokenLength());\n+        props.getToken().getCore().setTimeToKillInSeconds(conf.getTimeToKillInSeconds());\n+\n         if (StringUtils.isNotBlank(conf.getBypassGroovyScript())) {\n             try {\n                 props.getBypass().getGroovy().setLocation(ResourceUtils.getResourceFrom(conf.getBypassGroovyScript()));"},{"sha":"49f3b7c56fcc6c34b6d4c02ea2647472f9fe1500","filename":"wa/pom.xml","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fpom.xml?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -36,6 +36,18 @@ under the License.\n     <rootpom.basedir>${basedir}/..</rootpom.basedir>\n   </properties>\n \n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.apereo.cas</groupId>\n+        <artifactId>cas-server-support-bom</artifactId>\n+        <version>${cas.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n+\n   <profiles>\n     <profile>\n       <id>site</id>"},{"sha":"0c9e1608ecede85fdd2aaaaea59cefd823d907be","filename":"wa/starter/pom.xml","status":"modified","additions":60,"deletions":22,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fpom.xml?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -64,19 +64,15 @@ under the License.\n     </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n-      <artifactId>cas-server-core-authentication</artifactId>\n-    </dependency>\n-    <dependency>\n-      <groupId>org.apereo.cas</groupId>\n-      <artifactId>cas-server-core-configuration</artifactId>\n+      <artifactId>cas-server-core-events-api</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n-      <artifactId>cas-server-core-audit-api</artifactId>\n+      <artifactId>cas-server-core-authentication</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n-      <artifactId>cas-server-core-events-api</artifactId>\n+      <artifactId>cas-server-core-configuration</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n@@ -94,6 +90,10 @@ under the License.\n       <groupId>org.apereo.cas</groupId>\n       <artifactId>cas-server-core-services</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apereo.cas</groupId>\n+      <artifactId>cas-server-core-authentication-api</artifactId>\n+    </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n       <artifactId>cas-server-core-services-registry</artifactId>\n@@ -118,10 +118,6 @@ under the License.\n       <groupId>org.apereo.cas</groupId>\n       <artifactId>cas-server-core-web</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>org.apereo.cas</groupId>\n-      <artifactId>cas-server-core-authentication-api</artifactId>\n-    </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n       <artifactId>cas-server-core-webflow</artifactId>\n@@ -153,6 +149,12 @@ under the License.\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n       <artifactId>cas-server-support-syncope-authentication</artifactId>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>com.github.mmoayyed.cxf</groupId>\n+          <artifactId>cxf-rt-rs-extension-search</artifactId>\n+        </exclusion>\n+      </exclusions>\n     </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n@@ -170,6 +172,10 @@ under the License.\n       <groupId>org.apereo.cas</groupId>\n       <artifactId>cas-server-support-themes</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apereo.cas</groupId>\n+      <artifactId>cas-server-core-audit-api</artifactId>\n+    </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n       <artifactId>cas-server-support-saml-idp</artifactId>\n@@ -218,22 +224,53 @@ under the License.\n       <groupId>org.apereo.cas</groupId>\n       <artifactId>cas-server-support-aup-webflow</artifactId>\n     </dependency>\n-\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n-      <artifactId>cas-server-support-webauthn</artifactId>\n+      <artifactId>cas-server-support-u2f</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n-      <artifactId>cas-server-support-webauthn-core</artifactId>\n+      <artifactId>cas-server-support-u2f-core</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n-      <artifactId>cas-server-support-u2f</artifactId>\n+      <artifactId>cas-server-support-webauthn</artifactId>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>javax.ws.rs</groupId>\n+          <artifactId>javax.ws.rs-api</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>org.eclipse.jetty</groupId>\n+          <artifactId>jetty-servlet</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>org.glassfish.jersey.containers</groupId>\n+          <artifactId>jersey-container-servlet-core</artifactId>\n+        </exclusion>\n+      </exclusions>\n     </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n-      <artifactId>cas-server-support-u2f-core</artifactId>\n+      <artifactId>cas-server-support-webauthn-core</artifactId>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>javax.ws.rs</groupId>\n+          <artifactId>javax.ws.rs-api</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>org.eclipse.jetty</groupId>\n+          <artifactId>jetty-servlet</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>org.glassfish.jersey.containers</groupId>\n+          <artifactId>jersey-container-servlet-core</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>com.google.code.findbugs</groupId>\n+          <artifactId>jsr305</artifactId>\n+        </exclusion>\n+      </exclusions>\n     </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n@@ -249,11 +286,11 @@ under the License.\n     </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n-      <artifactId>cas-server-support-gauth-ldap</artifactId>\n+      <artifactId>cas-server-support-ldap-core</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n-      <artifactId>cas-server-support-ldap-core</artifactId>\n+      <artifactId>cas-server-support-gauth-ldap</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n@@ -269,12 +306,12 @@ under the License.\n     </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n-      <artifactId>cas-server-webapp-config</artifactId>\n+      <artifactId>cas-server-support-oidc-services</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n-      <artifactId>cas-server-support-oidc-services</artifactId>\n-    </dependency>   \n+      <artifactId>cas-server-support-swagger</artifactId>\n+    </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n       <artifactId>cas-server-core-authentication-attributes</artifactId>\n@@ -285,7 +322,7 @@ under the License.\n     </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n-      <artifactId>cas-server-support-swagger</artifactId>\n+      <artifactId>cas-server-webapp-config</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>org.apereo.cas</groupId>\n@@ -295,6 +332,7 @@ under the License.\n       <groupId>org.apereo.cas</groupId>\n       <artifactId>cas-server-support-surrogate-api</artifactId>\n     </dependency>\n+\n     <dependency>\n       <groupId>org.springframework.boot</groupId>\n       <artifactId>spring-boot-starter-web</artifactId>"},{"sha":"cda6bd0976d9f4009868020e6c89a2ad964ce41c","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/SyncopeWAApplication.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FSyncopeWAApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FSyncopeWAApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FSyncopeWAApplication.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -27,6 +27,7 @@\n import org.apereo.cas.config.GoogleAuthenticatorLdapConfiguration;\n import org.apereo.cas.configuration.CasConfigurationProperties;\n import org.apereo.cas.configuration.CasConfigurationPropertiesValidator;\n+import org.apereo.cas.oidc.config.OidcJwksJpaConfiguration;\n import org.quartz.JobBuilder;\n import org.quartz.JobDetail;\n import org.quartz.JobKey;\n@@ -61,10 +62,12 @@\n \n @SpringBootApplication(exclude = {\n     /*\n-     * List of CAS-specific classes that we want to exclude from auto-configuration. This is required when there is a\n-     * competing option/implementation available in Syncope that needs to be conditionally activated.\n+     * List of CAS-specific classes that we want to exclude from auto-configuration.\n+     * This is required when there is a competing option/implementation available in Syncope that needs to be\n+     * conditionally activated.\n      */\n     GoogleAuthenticatorLdapConfiguration.class,\n+    OidcJwksJpaConfiguration.class,\n     /*\n      * List of Spring Boot classes that we want to disable and remove from auto-configuration.\n      */"},{"sha":"f4119a8065deb6d0c280796a669d9a76ed5445e3","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/audit/WAAuditTrailManager.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Faudit%2FWAAuditTrailManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Faudit%2FWAAuditTrailManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Faudit%2FWAAuditTrailManager.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.wa.starter.audit;\n \n import com.fasterxml.jackson.core.JsonProcessingException;\n-import java.time.LocalDate;\n import java.time.OffsetDateTime;\n import java.util.Map;\n import java.util.Set;\n@@ -79,7 +78,7 @@ protected void saveAuditRecord(final AuditActionContext audit) {\n     }\n \n     @Override\n-    public Set<? extends AuditActionContext> getAuditRecordsSince(final LocalDate sinceDate) {\n+    public Set<? extends AuditActionContext> getAuditRecords(final Map<WhereClauseFields, Object> map) {\n         throw new UnsupportedOperationException(\"Fetching audit events from WA is not supported\");\n     }\n "},{"sha":"9a91ba0260609bb6b7419064995ba0742b6dd9c1","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/config/WAContext.java","status":"modified","additions":16,"deletions":12,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fconfig%2FWAContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fconfig%2FWAContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fconfig%2FWAContext.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -35,7 +35,6 @@\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n import org.apache.syncope.common.keymaster.client.api.startstop.KeymasterStart;\n import org.apache.syncope.common.keymaster.client.api.startstop.KeymasterStop;\n-import org.apache.syncope.common.lib.types.JWSAlgorithm;\n import org.apache.syncope.wa.bootstrap.WAProperties;\n import org.apache.syncope.wa.bootstrap.WARestClient;\n import org.apache.syncope.wa.starter.actuate.SyncopeCoreHealthIndicator;\n@@ -77,12 +76,11 @@\n import org.apereo.cas.gauth.credential.LdapGoogleAuthenticatorTokenCredentialRepository;\n import org.apereo.cas.oidc.jwks.generator.OidcJsonWebKeystoreGeneratorService;\n import org.apereo.cas.otp.repository.credentials.OneTimeTokenCredentialRepository;\n-import org.apereo.cas.otp.repository.token.OneTimeTokenRepository;\n import org.apereo.cas.services.ServiceRegistryExecutionPlanConfigurer;\n import org.apereo.cas.services.ServiceRegistryListener;\n import org.apereo.cas.support.events.CasEventRepository;\n import org.apereo.cas.support.events.CasEventRepositoryFilter;\n-import org.apereo.cas.support.pac4j.authentication.DelegatedClientFactoryCustomizer;\n+import org.apereo.cas.support.pac4j.authentication.clients.DelegatedClientFactoryCustomizer;\n import org.apereo.cas.support.pac4j.authentication.handler.support.DelegatedClientAuthenticationHandler;\n import org.apereo.cas.support.saml.idp.metadata.generator.SamlIdPMetadataGenerator;\n import org.apereo.cas.support.saml.idp.metadata.generator.SamlIdPMetadataGeneratorConfigurationContext;\n@@ -276,7 +274,7 @@ public DelegatedClientFactoryCustomizer<Client> delegatedClientCustomizer(final\n     }\n \n     @Bean\n-    public OneTimeTokenRepository oneTimeTokenAuthenticatorTokenRepository(\n+    public WAGoogleMfaAuthTokenRepository oneTimeTokenAuthenticatorTokenRepository(\n             final CasConfigurationProperties casProperties,\n             final WARestClient restClient) {\n \n@@ -290,7 +288,9 @@ public OneTimeTokenRepository oneTimeTokenAuthenticatorTokenRepository(\n     public OneTimeTokenCredentialRepository googleAuthenticatorAccountRegistry(\n             final CasConfigurationProperties casProperties,\n             @Qualifier(\"googleAuthenticatorAccountCipherExecutor\")\n-            final CipherExecutor<String, String> cipherExecutor,\n+            final CipherExecutor<String, String> googleAuthenticatorAccountCipherExecutor,\n+            @Qualifier(\"googleAuthenticatorScratchCodesCipherExecutor\")\n+            final CipherExecutor<Number, Number> googleAuthenticatorScratchCodesCipherExecutor,\n             final IGoogleAuthenticator googleAuthenticatorInstance,\n             final WARestClient restClient) {\n \n@@ -308,21 +308,25 @@ public OneTimeTokenCredentialRepository googleAuthenticatorAccountRegistry(\n \n             ConnectionFactory connectionFactory = LdapUtils.newLdaptiveConnectionFactory(ldap);\n             return new LdapGoogleAuthenticatorTokenCredentialRepository(\n-                    cipherExecutor, googleAuthenticatorInstance, connectionFactory, ldap);\n+                    googleAuthenticatorAccountCipherExecutor,\n+                    googleAuthenticatorScratchCodesCipherExecutor,\n+                    googleAuthenticatorInstance,\n+                    connectionFactory,\n+                    ldap);\n         }\n         return new WAGoogleMfaAuthCredentialRepository(restClient, googleAuthenticatorInstance);\n     }\n \n     @Bean\n     public OidcJsonWebKeystoreGeneratorService oidcJsonWebKeystoreGeneratorService(\n-            final ConfigurableApplicationContext ctx,\n+            final CasConfigurationProperties casProperties,\n             final WARestClient restClient) {\n \n-        int size = ctx.getEnvironment().\n-                getProperty(\"cas.authn.oidc.jwks.size\", int.class, 2048);\n-        JWSAlgorithm algorithm = ctx.getEnvironment().\n-                getProperty(\"cas.authn.oidc.jwks.algorithm\", JWSAlgorithm.class, JWSAlgorithm.RS256);\n-        return new WAOIDCJWKSGeneratorService(restClient, size, algorithm);\n+        return new WAOIDCJWKSGeneratorService(\n+                restClient,\n+                casProperties.getAuthn().getOidc().getJwks().getCore().getJwksKeyId(),\n+                casProperties.getAuthn().getOidc().getJwks().getCore().getJwksType(),\n+                casProperties.getAuthn().getOidc().getJwks().getCore().getJwksKeySize());\n     }\n \n     @Bean"},{"sha":"e785ea29dd4bb4427305d798821dba5a84dfdb08","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/gauth/WAGoogleMfaAuthCredentialRepository.java","status":"modified","additions":19,"deletions":19,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fgauth%2FWAGoogleMfaAuthCredentialRepository.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fgauth%2FWAGoogleMfaAuthCredentialRepository.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fgauth%2FWAGoogleMfaAuthCredentialRepository.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -44,27 +44,27 @@ public class WAGoogleMfaAuthCredentialRepository extends BaseGoogleAuthenticator\n     public WAGoogleMfaAuthCredentialRepository(\n             final WARestClient waRestClient, final IGoogleAuthenticator googleAuthenticator) {\n \n-        super(CipherExecutor.noOpOfStringToString(), googleAuthenticator);\n+        super(CipherExecutor.noOpOfStringToString(), CipherExecutor.noOpOfNumberToNumber(), googleAuthenticator);\n         this.waRestClient = waRestClient;\n     }\n \n-    protected GoogleMfaAuthAccount mapGoogleMfaAuthAccount(final OneTimeTokenAccount account) {\n+    protected GoogleMfaAuthAccount mapGoogleMfaAuthAccount(final OneTimeTokenAccount otta) {\n         return new GoogleMfaAuthAccount.Builder().\n                 registrationDate(OffsetDateTime.now()).\n-                scratchCodes(account.getScratchCodes()).\n-                validationCode(account.getValidationCode()).\n-                secretKey(account.getSecretKey()).\n-                id(account.getId()).\n+                scratchCodes(otta.getScratchCodes().stream().map(Number::intValue).collect(Collectors.toList())).\n+                validationCode(otta.getValidationCode()).\n+                secretKey(otta.getSecretKey()).\n+                id(otta.getId()).\n                 build();\n     }\n \n-    protected GoogleAuthenticatorAccount mapGoogleMfaAuthAccount(final GoogleMfaAuthAccount account) {\n+    protected GoogleAuthenticatorAccount mapGoogleMfaAuthAccount(final GoogleMfaAuthAccount gmfaa) {\n         return GoogleAuthenticatorAccount.builder().\n-                secretKey(account.getSecretKey()).\n-                validationCode(account.getValidationCode()).\n-                scratchCodes(account.getScratchCodes()).\n-                name(account.getName()).\n-                id(account.getId()).\n+                secretKey(gmfaa.getSecretKey()).\n+                validationCode(gmfaa.getValidationCode()).\n+                scratchCodes(gmfaa.getScratchCodes().stream().map(Number::intValue).collect(Collectors.toList())).\n+                name(gmfaa.getName()).\n+                id(gmfaa.getId()).\n                 build();\n     }\n \n@@ -134,17 +134,17 @@ public Collection<? extends OneTimeTokenAccount> load() {\n     }\n \n     @Override\n-    public OneTimeTokenAccount save(final OneTimeTokenAccount tokenAccount) {\n+    public OneTimeTokenAccount save(final OneTimeTokenAccount otta) {\n         GoogleMfaAuthAccount account = new GoogleMfaAuthAccount.Builder().\n                 registrationDate(OffsetDateTime.now()).\n-                scratchCodes(tokenAccount.getScratchCodes()).\n-                validationCode(tokenAccount.getValidationCode()).\n-                secretKey(tokenAccount.getSecretKey()).\n-                name(tokenAccount.getName()).\n-                id(tokenAccount.getId()).\n+                scratchCodes(otta.getScratchCodes().stream().map(Number::intValue).collect(Collectors.toList())).\n+                validationCode(otta.getValidationCode()).\n+                secretKey(otta.getSecretKey()).\n+                name(otta.getName()).\n+                id(otta.getId()).\n                 build();\n         waRestClient.getSyncopeClient().\n-                getService(GoogleMfaAuthAccountService.class).create(tokenAccount.getUsername(), account);\n+                getService(GoogleMfaAuthAccountService.class).create(otta.getUsername(), account);\n         return mapGoogleMfaAuthAccount(account);\n     }\n "},{"sha":"74d33363b913a84229f83153182a4586bd0c0c54","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/gauth/WAGoogleMfaAuthTokenRepository.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fgauth%2FWAGoogleMfaAuthTokenRepository.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fgauth%2FWAGoogleMfaAuthTokenRepository.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fgauth%2FWAGoogleMfaAuthTokenRepository.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -22,13 +22,12 @@\n import org.apache.syncope.common.lib.wa.GoogleMfaAuthToken;\n import org.apache.syncope.common.rest.api.service.wa.GoogleMfaAuthTokenService;\n import org.apache.syncope.wa.bootstrap.WARestClient;\n-import org.apereo.cas.authentication.OneTimeToken;\n import org.apereo.cas.gauth.token.GoogleAuthenticatorToken;\n import org.apereo.cas.otp.repository.token.BaseOneTimeTokenRepository;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class WAGoogleMfaAuthTokenRepository extends BaseOneTimeTokenRepository {\n+public class WAGoogleMfaAuthTokenRepository extends BaseOneTimeTokenRepository<GoogleAuthenticatorToken> {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(WAGoogleMfaAuthTokenRepository.class);\n \n@@ -51,7 +50,7 @@ protected void cleanInternal() {\n     }\n \n     @Override\n-    public void store(final OneTimeToken token) {\n+    public void store(final GoogleAuthenticatorToken token) {\n         GoogleMfaAuthToken tokenTO = new GoogleMfaAuthToken.Builder().\n                 token(token.getToken()).\n                 issueDate(token.getIssuedDateTime()).\n@@ -60,7 +59,7 @@ public void store(final OneTimeToken token) {\n     }\n \n     @Override\n-    public OneTimeToken get(final String username, final Integer otp) {\n+    public GoogleAuthenticatorToken get(final String username, final Integer otp) {\n         try {\n             GoogleMfaAuthToken tokenTO = service().read(username, otp);\n             GoogleAuthenticatorToken token = new GoogleAuthenticatorToken(tokenTO.getOtp(), username);"},{"sha":"f9a9685c1674a287c6d799d22234e0c0c024ffe7","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/AbstractClientAppMapper.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FAbstractClientAppMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FAbstractClientAppMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FAbstractClientAppMapper.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -22,8 +22,8 @@\n import java.util.stream.Collectors;\n import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.to.ClientAppTO;\n+import org.apereo.cas.services.BaseWebBasedRegisteredService;\n import org.apereo.cas.services.DefaultRegisteredServiceProperty;\n-import org.apereo.cas.services.RegexRegisteredService;\n import org.apereo.cas.services.RegisteredServiceAccessStrategy;\n import org.apereo.cas.services.RegisteredServiceAttributeReleasePolicy;\n import org.apereo.cas.services.RegisteredServiceAuthenticationPolicy;\n@@ -32,7 +32,7 @@\n \n abstract class AbstractClientAppMapper implements ClientAppMapper {\n \n-    protected void setCommon(final RegexRegisteredService service, final ClientAppTO clientApp) {\n+    protected void setCommon(final BaseWebBasedRegisteredService service, final ClientAppTO clientApp) {\n         service.setId(clientApp.getClientAppId());\n         service.setName(clientApp.getName());\n         service.setDescription(clientApp.getDescription());\n@@ -48,7 +48,7 @@ protected void setCommon(final RegexRegisteredService service, final ClientAppTO\n     }\n \n     protected void setPolicies(\n-            final RegexRegisteredService service,\n+            final BaseWebBasedRegisteredService service,\n             final RegisteredServiceAuthenticationPolicy authPolicy,\n             final RegisteredServiceMultifactorPolicy mfaPolicy,\n             final RegisteredServiceAccessStrategy accessStrategy,\n@@ -58,7 +58,7 @@ protected void setPolicies(\n             service.setAuthenticationPolicy(authPolicy);\n         }\n         if (mfaPolicy != null) {\n-            service.setMultifactorPolicy(mfaPolicy);\n+            service.setMultifactorAuthenticationPolicy(mfaPolicy);\n         }\n         if (accessStrategy != null) {\n             service.setAccessStrategy(accessStrategy);"},{"sha":"5d007d2a05920b09f3e380b979bf71279e1df7cd","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/CASSPClientAppTOMapper.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FCASSPClientAppTOMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FCASSPClientAppTOMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FCASSPClientAppTOMapper.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -20,7 +20,7 @@\n \n import org.apache.syncope.common.lib.to.CASSPClientAppTO;\n import org.apache.syncope.common.lib.wa.WAClientApp;\n-import org.apereo.cas.services.RegexRegisteredService;\n+import org.apereo.cas.services.CasRegisteredService;\n import org.apereo.cas.services.RegisteredService;\n import org.apereo.cas.services.RegisteredServiceAccessStrategy;\n import org.apereo.cas.services.RegisteredServiceAttributeReleasePolicy;\n@@ -42,7 +42,7 @@ public RegisteredService map(\n \n         CASSPClientAppTO cas = CASSPClientAppTO.class.cast(clientApp.getClientAppTO());\n \n-        RegexRegisteredService service = new RegexRegisteredService();\n+        CasRegisteredService service = new CasRegisteredService();\n         service.setServiceId(cas.getServiceId());\n         setCommon(service, cas);\n "},{"sha":"f7eb0b3e57de826ce7c2c762c3ea3b6b751f6060","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/DefaultAttrReleaseMapper.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FDefaultAttrReleaseMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FDefaultAttrReleaseMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FDefaultAttrReleaseMapper.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -46,7 +46,8 @@ public RegisteredServiceAttributeReleasePolicy build(\n \n         ReturnMappedAttributeReleasePolicy returnMapped = null;\n         if (!releaseAttrs.isEmpty()) {\n-            returnMapped = new ReturnMappedAttributeReleasePolicy(releaseAttrs);\n+            returnMapped = new ReturnMappedAttributeReleasePolicy();\n+            returnMapped.setAllowedAttributes(releaseAttrs);\n         }\n \n         ReturnAllowedAttributeReleasePolicy returnAllowed = null;"},{"sha":"ac7e576c6953c1beb45320fcae13d81f971e941c","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/mapping/SAML2SPClientAppTOMapper.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FSAML2SPClientAppTOMapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FSAML2SPClientAppTOMapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fmapping%2FSAML2SPClientAppTOMapper.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -52,7 +52,7 @@ public RegisteredService map(\n         service.setMetadataLocation(sp.getMetadataLocation());\n         service.setMetadataSignatureLocation(sp.getMetadataSignatureLocation());\n         service.setSignAssertions(TriStateBoolean.fromBoolean(sp.isSignAssertions()));\n-        service.setSignResponses(sp.isSignResponses());\n+        service.setSignResponses(TriStateBoolean.fromBoolean(sp.isSignResponses()));\n         service.setEncryptionOptional(sp.isEncryptionOptional());\n         service.setEncryptAssertions(sp.isEncryptAssertions());\n         service.setRequiredAuthenticationContextClass(sp.getRequiredAuthenticationContextClass());"},{"sha":"bac970623d26845d63b3f5600e80f185d4d63dfc","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/oidc/WAOIDCJWKSGeneratorService.java","status":"modified","additions":14,"deletions":9,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Foidc%2FWAOIDCJWKSGeneratorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Foidc%2FWAOIDCJWKSGeneratorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Foidc%2FWAOIDCJWKSGeneratorService.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -24,7 +24,6 @@\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.OIDCJWKSTO;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n-import org.apache.syncope.common.lib.types.JWSAlgorithm;\n import org.apache.syncope.common.rest.api.service.OIDCJWKSService;\n import org.apache.syncope.wa.bootstrap.WARestClient;\n import org.apereo.cas.oidc.jwks.generator.OidcJsonWebKeystoreGeneratorService;\n@@ -37,20 +36,26 @@\n \n public class WAOIDCJWKSGeneratorService implements OidcJsonWebKeystoreGeneratorService {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(WAOIDCJWKSGeneratorService.class);\n+    protected static final Logger LOG = LoggerFactory.getLogger(WAOIDCJWKSGeneratorService.class);\n \n-    private final WARestClient waRestClient;\n+    protected final WARestClient waRestClient;\n \n-    private final int size;\n+    protected final String jwksKeyId;\n \n-    private final JWSAlgorithm algorithm;\n+    protected final String jwksType;\n+\n+    protected final int jwksKeySize;\n \n     public WAOIDCJWKSGeneratorService(\n-            final WARestClient restClient, final int size, final JWSAlgorithm algorithm) {\n+            final WARestClient restClient,\n+            final String jwksKeyId,\n+            final String jwksType,\n+            final int jwksKeySize) {\n \n         this.waRestClient = restClient;\n-        this.size = size;\n-        this.algorithm = algorithm;\n+        this.jwksKeyId = jwksKeyId;\n+        this.jwksType = jwksType;\n+        this.jwksKeySize = jwksKeySize;\n     }\n \n     @Override\n@@ -83,7 +88,7 @@ public Resource generate() {\n         } catch (SyncopeClientException e) {\n             if (e.getType() == ClientExceptionType.NotFound) {\n                 try {\n-                    Response response = service.generate(size, algorithm);\n+                    Response response = service.generate(jwksKeyId, jwksType, jwksKeySize);\n                     jwksTO = response.readEntity(OIDCJWKSTO.class);\n                 } catch (Exception ge) {\n                     LOG.error(\"While generating new OIDC JWKS\", ge);"},{"sha":"20afed79cf73b9f49f3d36b3f3fdfd38399d64cc","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/pac4j/saml/WASAML2ClientCustomizer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fpac4j%2Fsaml%2FWASAML2ClientCustomizer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fpac4j%2Fsaml%2FWASAML2ClientCustomizer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fpac4j%2Fsaml%2FWASAML2ClientCustomizer.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.wa.starter.pac4j.saml;\n \n import org.apache.syncope.wa.bootstrap.WARestClient;\n-import org.apereo.cas.support.pac4j.authentication.DelegatedClientFactoryCustomizer;\n+import org.apereo.cas.support.pac4j.authentication.clients.DelegatedClientFactoryCustomizer;\n import org.pac4j.core.client.Client;\n import org.pac4j.saml.client.SAML2Client;\n import org.pac4j.saml.config.SAML2Configuration;"},{"sha":"0c37f9e86edc0eb5445faa4e19152a1a30e47c75","filename":"wa/starter/src/test/java/org/apache/syncope/wa/starter/AbstractTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2FAbstractTest.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -21,7 +21,7 @@\n import java.util.UUID;\n import org.springframework.boot.test.context.SpringBootTest;\n import org.springframework.boot.test.context.TestConfiguration;\n-import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.boot.test.web.server.LocalServerPort;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.ComponentScan;\n import org.springframework.test.context.ContextConfiguration;"},{"sha":"b3089233daa9daea35344e2b3644306869e1086b","filename":"wa/starter/src/test/java/org/apache/syncope/wa/starter/gauth/token/WAGoogleMfaAuthTokenRepositoryTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fgauth%2Ftoken%2FWAGoogleMfaAuthTokenRepositoryTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/442a7360c76dca1c6d741fe5979b0be42018c4d0/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fgauth%2Ftoken%2FWAGoogleMfaAuthTokenRepositoryTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fgauth%2Ftoken%2FWAGoogleMfaAuthTokenRepositoryTest.java?ref=442a7360c76dca1c6d741fe5979b0be42018c4d0","patch":"@@ -29,7 +29,7 @@\n public class WAGoogleMfaAuthTokenRepositoryTest extends AbstractTest {\n \n     @Autowired\n-    private OneTimeTokenRepository tokenRepository;\n+    private OneTimeTokenRepository<GoogleAuthenticatorToken> tokenRepository;\n \n     @Test\n     public void verifyOps() {"}]}