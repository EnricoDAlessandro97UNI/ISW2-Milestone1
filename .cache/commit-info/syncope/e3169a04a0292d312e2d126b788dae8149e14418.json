{"sha":"e3169a04a0292d312e2d126b788dae8149e14418","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmUzMTY5YTA0YTAyOTJkMzEyZTJkMTI2Yjc4OGRhZTgxNDllMTQ0MTg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-07-01T12:00:33Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-07-01T12:00:33Z"},"message":"[SYNCOPE-519] Merge from 1_1_X\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1607059 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"743a1cef3aa7802a24ac88c4d523f149c18d79a3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/743a1cef3aa7802a24ac88c4d523f149c18d79a3"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/e3169a04a0292d312e2d126b788dae8149e14418","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e3169a04a0292d312e2d126b788dae8149e14418","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e3169a04a0292d312e2d126b788dae8149e14418","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e3169a04a0292d312e2d126b788dae8149e14418/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"55a2996c921faf3e7fbc42b486b761109c0cc8fa","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/55a2996c921faf3e7fbc42b486b761109c0cc8fa","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/55a2996c921faf3e7fbc42b486b761109c0cc8fa"},{"sha":"20510d1baa03f4c219432a6aa5eeee743f92e042","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/20510d1baa03f4c219432a6aa5eeee743f92e042","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/20510d1baa03f4c219432a6aa5eeee743f92e042"}],"stats":{"total":190,"additions":110,"deletions":80},"files":[{"sha":"dc8d68b4966529e687d5dfab73cbdb2dc24772b7","filename":"common/src/main/java/org/apache/syncope/common/types/ConnConfPropSchema.java","status":"modified","additions":14,"deletions":1,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3169a04a0292d312e2d126b788dae8149e14418/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnConfPropSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3169a04a0292d312e2d126b788dae8149e14418/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnConfPropSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnConfPropSchema.java?ref=e3169a04a0292d312e2d126b788dae8149e14418","patch":"@@ -18,9 +18,13 @@\n  */\r\n package org.apache.syncope.common.types;\r\n \r\n+import com.fasterxml.jackson.annotation.JsonProperty;\r\n+import java.util.ArrayList;\r\n+import java.util.List;\r\n+import javax.xml.bind.annotation.XmlElement;\r\n+import javax.xml.bind.annotation.XmlElementWrapper;\r\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlType;\r\n-\r\n import org.apache.syncope.common.AbstractBaseBean;\r\n \r\n @XmlRootElement\r\n@@ -43,6 +47,8 @@ public class ConnConfPropSchema extends AbstractBaseBean implements Comparable<C\n \r\n     private boolean confidential;\r\n \r\n+    private final List<Object> defaultValues = new ArrayList<Object>();\r\n+\r\n     public String getName() {\r\n         return name;\r\n     }\r\n@@ -99,6 +105,13 @@ public void setConfidential(final boolean confidential) {\n         this.confidential = confidential;\r\n     }\r\n \r\n+    @XmlElementWrapper(name = \"defaultValues\")\r\n+    @XmlElement(name = \"defaultValue\")\r\n+    @JsonProperty(\"defaultValues\")\r\n+    public List<Object> getDefaultValues() {\r\n+        return defaultValues;\r\n+    }\r\n+\r\n     @Override\r\n     public int compareTo(final ConnConfPropSchema connConfPropSchema) {\r\n         if (this.getOrder() > connConfPropSchema.getOrder()) {\r"},{"sha":"4f0083e5f1279cde06e0f06fe9250b47ef3641fc","filename":"common/src/main/java/org/apache/syncope/common/types/ConnConfProperty.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3169a04a0292d312e2d126b788dae8149e14418/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnConfProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3169a04a0292d312e2d126b788dae8149e14418/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnConfProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnConfProperty.java?ref=e3169a04a0292d312e2d126b788dae8149e14418","patch":"@@ -21,12 +21,10 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\r\n import java.util.ArrayList;\r\n import java.util.List;\r\n-\r\n import javax.xml.bind.annotation.XmlElement;\r\n import javax.xml.bind.annotation.XmlElementWrapper;\r\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlType;\r\n-\r\n import org.apache.syncope.common.AbstractBaseBean;\r\n \r\n @XmlRootElement\r"},{"sha":"f20518e95efcc333c36de02590fe2d48a2a5ee17","filename":"console/src/main/java/org/apache/syncope/console/pages/ConnectorModalPage.java","status":"modified","additions":14,"deletions":8,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3169a04a0292d312e2d126b788dae8149e14418/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3169a04a0292d312e2d126b788dae8149e14418/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java?ref=e3169a04a0292d312e2d126b788dae8149e14418","patch":"@@ -301,7 +301,6 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n                                 StringUtils.isBlank(property.getSchema().getDisplayName())\n                                 ? property.getSchema().getName()\n                                 : property.getSchema().getDisplayName());\n-\n                         item.add(label);\n \n                         final FieldPanel field;\n@@ -346,7 +345,7 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n                                 required = property.getSchema().isRequired();\n                             }\n \n-                            if (String[].class.equals(propertySchemaClass)) {\n+                            if (propertySchemaClass.isArray()) {\n                                 isArray = true;\n                             }\n                         }\n@@ -513,18 +512,25 @@ private List<ConnConfProperty> fillProperties(final ConnBundleTO bundleTO, final\n \n         if (bundleTO != null) {\n             for (ConnConfPropSchema key : bundleTO.getProperties()) {\n-                final ConnConfProperty propertyTO = new ConnConfProperty();\n-                propertyTO.setSchema(key);\n+                final ConnConfProperty property = new ConnConfProperty();\n+                property.setSchema(key);\n                 if (connInstanceTO.getId() != 0\n                         && connInstanceTO.getConfigurationMap().containsKey(key.getName())\n                         && connInstanceTO.getConfigurationMap().get(key.getName()).getValues() != null) {\n-                    propertyTO.getValues().addAll(connInstanceTO.getConfigurationMap().get(key.getName()).getValues());\n-                    propertyTO.setOverridable(connInstanceTO.getConfigurationMap().get(key.getName()).isOverridable());\n+\n+                    property.getValues().addAll(connInstanceTO.getConfigurationMap().get(key.getName()).getValues());\n+                    property.setOverridable(connInstanceTO.getConfigurationMap().get(key.getName()).isOverridable());\n+                }\n+\n+                if (property.getValues().isEmpty() && !key.getDefaultValues().isEmpty()) {\n+                    property.getValues().addAll(key.getDefaultValues());\n                 }\n-                props.add(propertyTO);\n+\n+                props.add(property);\n             }\n         }\n-        // re-order properties\n+\n+        // re-order properties (implements Comparable)\n         Collections.sort(props);\n         return props;\n     }"},{"sha":"e0728c6cc591d756fe318f36173c6700d97f9d13","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ConnectorController.java","status":"modified","additions":1,"deletions":16,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3169a04a0292d312e2d126b788dae8149e14418/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnectorController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3169a04a0292d312e2d126b788dae8149e14418/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnectorController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnectorController.java?ref=e3169a04a0292d312e2d126b788dae8149e14418","patch":"@@ -30,7 +30,6 @@\n import org.apache.syncope.common.reqres.BulkActionResult;\n import org.apache.syncope.common.to.ConnBundleTO;\n import org.apache.syncope.common.to.ConnInstanceTO;\n-import org.apache.syncope.common.types.ConnConfPropSchema;\n import org.apache.syncope.common.types.ConnConfProperty;\n import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.SyncopeClientException;\n@@ -49,7 +48,6 @@\n import org.identityconnectors.framework.api.ConnectorInfo;\n import org.identityconnectors.framework.api.ConnectorKey;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n-import org.identityconnectors.framework.impl.api.ConfigurationPropertyImpl;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.stereotype.Component;\n@@ -183,20 +181,7 @@ public List<ConnBundleTO> getBundles(final String lang) {\n                 ConfigurationProperties properties = ConnIdBundleManager.getConfigurationProperties(bundle);\n \n                 for (String propName : properties.getPropertyNames()) {\n-                    ConnConfPropSchema connConfPropSchema = new ConnConfPropSchema();\n-\n-                    ConfigurationPropertyImpl configurationProperty = (ConfigurationPropertyImpl) properties.\n-                            getProperty(propName);\n-\n-                    connConfPropSchema.setName(configurationProperty.getName());\n-                    connConfPropSchema.setDisplayName(configurationProperty.getDisplayName(propName));\n-                    connConfPropSchema.setHelpMessage(configurationProperty.getHelpMessage(propName));\n-                    connConfPropSchema.setRequired(configurationProperty.isRequired());\n-                    connConfPropSchema.setType(configurationProperty.getType().getName());\n-                    connConfPropSchema.setOrder(configurationProperty.getOrder());\n-                    connConfPropSchema.setConfidential(configurationProperty.isConfidential());\n-\n-                    connBundleTO.getProperties().add(connConfPropSchema);\n+                    connBundleTO.getProperties().add(binder.buildConnConfPropSchema(properties.getProperty(propName)));\n                 }\n \n                 LOG.debug(\"Connector bundle: {}\", connBundleTO);"},{"sha":"c4df65d3553e3138f5037ab0fc57bfa485e46303","filename":"core/src/main/java/org/apache/syncope/core/rest/data/ConnInstanceDataBinder.java","status":"modified","additions":35,"deletions":17,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3169a04a0292d312e2d126b788dae8149e14418/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3169a04a0292d312e2d126b788dae8149e14418/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java?ref=e3169a04a0292d312e2d126b788dae8149e14418","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.core.rest.data;\n \n+import java.util.Arrays;\n+import java.util.Collection;\n import java.util.HashSet;\n import java.util.Map;\n import java.util.Set;\n@@ -33,6 +35,7 @@\n import org.apache.syncope.core.persistence.dao.ConnInstanceDAO;\n import org.apache.syncope.core.util.ConnIdBundleManager;\n import org.identityconnectors.framework.api.ConfigurationProperties;\n+import org.identityconnectors.framework.api.ConfigurationProperty;\n import org.identityconnectors.framework.impl.api.ConfigurationPropertyImpl;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n@@ -106,7 +109,7 @@ public ConnInstance getConnInstance(final ConnInstanceTO connInstanceTO) {\n \n         BeanUtils.copyProperties(connInstanceTO, connInstance, IGNORE_PROPERTIES);\n         if (connInstanceTO.getLocation() != null) {\n-            connInstance.setLocation(connInstanceTO.getLocation().toString());\n+            connInstance.setLocation(connInstanceTO.getLocation());\n         }\n         if (connInstanceTO.getPoolConf() != null) {\n             connInstance.setPoolConf(ConnPoolConfUtil.getConnPoolConf(connInstanceTO.getPoolConf()));\n@@ -131,7 +134,7 @@ public ConnInstance updateConnInstance(final long connInstanceId, final ConnInst\n         connInstance.setCapabilities(connInstanceTO.getCapabilities());\n \n         if (connInstanceTO.getLocation() != null) {\n-            connInstance.setLocation(connInstanceTO.getLocation().toString());\n+            connInstance.setLocation(connInstanceTO.getLocation());\n         }\n \n         if (connInstanceTO.getBundleName() != null) {\n@@ -171,6 +174,30 @@ public ConnInstance updateConnInstance(final long connInstanceId, final ConnInst\n         return connInstance;\n     }\n \n+    public ConnConfPropSchema buildConnConfPropSchema(final ConfigurationProperty property) {\n+        ConnConfPropSchema connConfPropSchema = new ConnConfPropSchema();\n+\n+        connConfPropSchema.setName(property.getName());\n+        connConfPropSchema.setDisplayName(property.getDisplayName(property.getName()));\n+        connConfPropSchema.setHelpMessage(property.getHelpMessage(property.getName()));\n+        connConfPropSchema.setRequired(property.isRequired());\n+        connConfPropSchema.setType(property.getType().getName());\n+        connConfPropSchema.setOrder(((ConfigurationPropertyImpl) property).getOrder());\n+        connConfPropSchema.setConfidential(property.isConfidential());\n+\n+        if (property.getValue() != null) {\n+            if (property.getValue().getClass().isArray()) {\n+                connConfPropSchema.getDefaultValues().addAll(Arrays.asList((Object[]) property.getValue()));\n+            } else if (property.getValue() instanceof Collection<?>) {\n+                connConfPropSchema.getDefaultValues().addAll((Collection<?>) property.getValue());\n+            } else {\n+                connConfPropSchema.getDefaultValues().add(property.getValue());\n+            }\n+        }\n+\n+        return connConfPropSchema;\n+    }\n+\n     public ConnInstanceTO getConnInstanceTO(final ConnInstance connInstance) {\n         ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n         connInstanceTO.setId(connInstance.getId() == null ? 0L : connInstance.getId().longValue());\n@@ -185,26 +212,17 @@ public ConnInstanceTO getConnInstanceTO(final ConnInstance connInstance) {\n         final Map<String, ConnConfProperty> connInstanceToConfMap = connInstanceTO.getConfigurationMap();\n \n         for (String propName : properties.getPropertyNames()) {\n-            ConfigurationPropertyImpl configurationProperty =\n-                    (ConfigurationPropertyImpl) properties.getProperty(propName);\n+            ConnConfPropSchema schema = buildConnConfPropSchema(properties.getProperty(propName));\n \n+            ConnConfProperty property;\n             if (connInstanceToConfMap.containsKey(propName)) {\n-                connInstanceToConfMap.get(propName).getSchema().setDisplayName(\n-                        configurationProperty.getDisplayName(propName));\n+                property = connInstanceToConfMap.get(propName);\n             } else {\n-                ConnConfPropSchema connConfPropSchema = new ConnConfPropSchema();\n-                connConfPropSchema.setName(configurationProperty.getName());\n-                connConfPropSchema.setDisplayName(configurationProperty.getDisplayName(propName));\n-                connConfPropSchema.setHelpMessage(configurationProperty.getHelpMessage(propName));\n-                connConfPropSchema.setRequired(configurationProperty.isRequired());\n-                connConfPropSchema.setType(configurationProperty.getType().getName());\n-                connConfPropSchema.setConfidential(configurationProperty.isConfidential());\n-                connConfPropSchema.setOrder(configurationProperty.getOrder());\n-\n-                ConnConfProperty property = new ConnConfProperty();\n-                property.setSchema(connConfPropSchema);\n+                property = new ConnConfProperty();\n                 connInstanceTO.getConfiguration().add(property);\n             }\n+\n+            property.setSchema(schema);\n         }\n \n         if (connInstance.getPoolConf() != null) {"},{"sha":"412d9c4861ca85dde8e7c3ae83d8f082f8d3ebab","filename":"core/src/test/java/org/apache/syncope/core/persistence/relationships/ConnInstanceTest.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3169a04a0292d312e2d126b788dae8149e14418/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FConnInstanceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3169a04a0292d312e2d126b788dae8149e14418/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FConnInstanceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FConnInstanceTest.java?ref=e3169a04a0292d312e2d126b788dae8149e14418","patch":"@@ -18,7 +18,11 @@\n  */\n package org.apache.syncope.core.persistence.relationships;\n \n-import static org.junit.Assert.*;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n \n import java.util.List;\n import org.apache.syncope.common.types.ConnectorCapability;"},{"sha":"a1f814e4ff70b64ab252b80765b20f247680f131","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3169a04a0292d312e2d126b788dae8149e14418/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3169a04a0292d312e2d126b788dae8149e14418/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=e3169a04a0292d312e2d126b788dae8149e14418","patch":"@@ -133,7 +133,7 @@ public abstract class AbstractTest {\n     protected static final String RESOURCE_NAME_DELETE = \"ws-target-resource-delete\";\n \n     protected static final String RESOURCE_NAME_UPDATE = \"ws-target-resource-update\";\n-    \n+\n     protected static final String RESOURCE_NAME_CREATE_NONE = \"ws-target-resource-create-none\";\n \n     protected static String ANONYMOUS_UNAME;"},{"sha":"1c80d38e9cc157dc5b4b3a0c87ec29f33b61e519","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3169a04a0292d312e2d126b788dae8149e14418/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3169a04a0292d312e2d126b788dae8149e14418/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=e3169a04a0292d312e2d126b788dae8149e14418","patch":"@@ -29,6 +29,7 @@\n import java.util.List;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.SyncopeClient;\n+import org.apache.syncope.common.SyncopeClientException;\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.services.NotificationService;\n import org.apache.syncope.common.services.TaskService;\n@@ -48,14 +49,13 @@\n import org.apache.syncope.common.to.TaskExecTO;\n import org.apache.syncope.common.to.AbstractTaskTO;\n import org.apache.syncope.common.reqres.PagedResult;\n+import org.apache.syncope.common.to.PushTaskTO;\n import org.apache.syncope.common.to.UserTO;\n import org.apache.syncope.common.types.IntMappingType;\n+import org.apache.syncope.common.types.MatchingRule;\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.types.TaskType;\n import org.apache.syncope.common.types.TraceLevel;\n-import org.apache.syncope.common.SyncopeClientException;\n-import org.apache.syncope.common.to.PushTaskTO;\n-import org.apache.syncope.common.types.MatchingRule;\n import org.apache.syncope.common.types.UnmatchingRule;\n import org.apache.syncope.common.wrap.PushActionClass;\n import org.apache.syncope.core.sync.TestSyncActions;"},{"sha":"7a014774c349c95d56ad5f7b2918aeba060ef1a6","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":26,"deletions":18,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3169a04a0292d312e2d126b788dae8149e14418/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3169a04a0292d312e2d126b788dae8149e14418/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=e3169a04a0292d312e2d126b788dae8149e14418","patch":"@@ -82,8 +82,6 @@\n import org.apache.syncope.common.util.AttributableOperations;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.common.wrap.ResourceName;\n-import org.apache.syncope.core.persistence.beans.ExternalResource;\n-import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.propagation.impl.DBPasswordPropagationActions;\n import org.apache.syncope.core.propagation.impl.LDAPPasswordPropagationActions;\n@@ -924,8 +922,7 @@ public void suspendReactivateOnResource() {\n         assertNotNull(userTO);\n         assertEquals(\"suspended\", userTO.getStatus());\n \n-        ConnObjectTO connObjectTO =\n-                resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, SubjectType.USER, userId);\n+        ConnObjectTO connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_TESTDB, SubjectType.USER, userId);\n         assertFalse(getBooleanAttribute(connObjectTO, OperationalAttributes.ENABLE_NAME));\n \n         connObjectTO = resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.USER, userId);\n@@ -1590,15 +1587,13 @@ public void isseSYNCOPE136Random() {\n         // 1. create user with no resources\n         UserTO userTO = getUniqueSampleTO(\"syncope136_Random@apache.org\");\n         userTO.getResources().clear();\n-\n         userTO = createUser(userTO);\n         assertNotNull(userTO);\n \n         // 2. update user, assign a propagation primary resource but don't provide any password\n         UserMod userMod = new UserMod();\n         userMod.setId(userTO.getId());\n         userMod.getResourcesToAdd().add(RESOURCE_NAME_LDAP);\n-\n         userTO = updateUser(userMod);\n         assertNotNull(userTO);\n \n@@ -2301,7 +2296,7 @@ public void issueSYNCOPE493() {\n \n         resourceService.update(RESOURCE_NAME_WS1, newWs1);\n     }\n-    \n+\n     @Test\n     public void issueSYNCOPE505DB() throws Exception {\n         // 1. create user\n@@ -2310,13 +2305,13 @@ public void issueSYNCOPE505DB() throws Exception {\n         user = createUser(user);\n         assertNotNull(user);\n         assertTrue(user.getResources().isEmpty());\n-        \n+\n         // 2. Add DBPasswordPropagationActions\n         ResourceTO resourceTO = resourceService.read(RESOURCE_NAME_TESTDB);\n         assertNotNull(resourceTO);\n         resourceTO.getPropagationActionsClassNames().add(DBPasswordPropagationActions.class.getName());\n         resourceService.update(RESOURCE_NAME_TESTDB, resourceTO);\n-        \n+\n         // 3. Add a db resource to the User\n         UserMod userMod = new UserMod();\n         userMod.setId(user.getId());\n@@ -2330,8 +2325,14 @@ public void issueSYNCOPE505DB() throws Exception {\n         String value = jdbcTemplate.queryForObject(\n                 \"SELECT PASSWORD FROM test WHERE ID=?\", String.class, user.getUsername());\n         assertEquals(Encryptor.getInstance().encode(\"security\", CipherAlgorithm.SHA1), value.toUpperCase());\n+\n+        // 5. Remove DBPasswordPropagationActions\n+        resourceTO = resourceService.read(RESOURCE_NAME_TESTDB);\n+        assertNotNull(resourceTO);\n+        resourceTO.getPropagationActionsClassNames().remove(DBPasswordPropagationActions.class.getName());\n+        resourceService.update(RESOURCE_NAME_TESTDB, resourceTO);\n     }\n-    \n+\n     @Test\n     public void issueSYNCOPE505LDAP() throws Exception {\n         // 1. create user\n@@ -2340,14 +2341,14 @@ public void issueSYNCOPE505LDAP() throws Exception {\n         user = createUser(user);\n         assertNotNull(user);\n         assertTrue(user.getResources().isEmpty());\n-        \n+\n         // 2. Add LDAPPasswordPropagationActions\n         ResourceTO resourceTO = resourceService.read(RESOURCE_NAME_LDAP);\n         assertNotNull(resourceTO);\n         resourceTO.getPropagationActionsClassNames().add(LDAPPasswordPropagationActions.class.getName());\n         resourceTO.setRandomPwdIfNotProvided(false);\n         resourceService.update(RESOURCE_NAME_LDAP, resourceTO);\n-        \n+\n         // 3. Add a resource to the User\n         UserMod userMod = new UserMod();\n         userMod.setId(user.getId());\n@@ -2357,12 +2358,19 @@ public void issueSYNCOPE505LDAP() throws Exception {\n         assertEquals(1, user.getResources().size());\n \n         // 4. Check that the LDAP resource has the correct password\n-        ConnObjectTO connObject =\n-            resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.USER, user.getId());\n-        \n+        ConnObjectTO connObject = \n+                resourceService.getConnectorObject(RESOURCE_NAME_LDAP, SubjectType.USER, user.getId());\n+\n         assertNotNull(getLdapRemoteObject(\n-            connObject.getAttrMap().get(Name.NAME).getValues().get(0),\n-            \"security\",\n-            connObject.getAttrMap().get(Name.NAME).getValues().get(0)));\n+                connObject.getAttrMap().get(Name.NAME).getValues().get(0),\n+                \"security\",\n+                connObject.getAttrMap().get(Name.NAME).getValues().get(0)));\n+\n+        // 5. Remove LDAPPasswordPropagationActions\n+        resourceTO = resourceService.read(RESOURCE_NAME_LDAP);\n+        assertNotNull(resourceTO);\n+        resourceTO.getPropagationActionsClassNames().remove(LDAPPasswordPropagationActions.class.getName());\n+        resourceTO.setRandomPwdIfNotProvided(true);\n+        resourceService.update(RESOURCE_NAME_LDAP, resourceTO);\n     }\n }"},{"sha":"1da89740856cab99aa1574275d044acb16d12005","filename":"core/src/test/java/org/apache/syncope/core/rest/VirAttrTestITCase.java","status":"modified","additions":11,"deletions":13,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/e3169a04a0292d312e2d126b788dae8149e14418/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/e3169a04a0292d312e2d126b788dae8149e14418/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FVirAttrTestITCase.java?ref=e3169a04a0292d312e2d126b788dae8149e14418","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.rest;\n \n-import static org.apache.syncope.core.rest.UserTestITCase.getUniqueSampleTO;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n@@ -57,7 +56,7 @@ public class VirAttrTestITCase extends AbstractTest {\n \n     @Test\n     public void issueSYNCOPE16() {\n-        UserTO userTO = getUniqueSampleTO(\"issue16@apache.org\");\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"issue16@apache.org\");\n \n         MembershipTO membershipTO = new MembershipTO();\n         membershipTO.setRoleId(8L);\n@@ -92,7 +91,7 @@ public void issueSYNCOPE260() {\n         // ----------------------------------\n         // create user and check virtual attribute value propagation\n         // ----------------------------------\n-        UserTO userTO = getUniqueSampleTO(\"260@a.com\");\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"260@a.com\");\n         userTO.getResources().add(RESOURCE_NAME_WS2);\n \n         userTO = createUser(userTO);\n@@ -208,7 +207,7 @@ public void issueSYNCOPE260() {\n \n     @Test\n     public void virAttrCache() {\n-        UserTO userTO = getUniqueSampleTO(\"virattrcache@apache.org\");\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"virattrcache@apache.org\");\n         userTO.getVirAttrs().clear();\n \n         AttributeTO virAttrTO = new AttributeTO();\n@@ -295,7 +294,7 @@ public void issueSYNCOPE397() {\n         assertTrue(found);\n \n         // create a new user\n-        UserTO userTO = getUniqueSampleTO(\"syncope397@syncope.apache.org\");\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"syncope397@syncope.apache.org\");\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n         userTO.getDerAttrs().clear();\n@@ -340,7 +339,7 @@ public void issueSYNCOPE397() {\n \n     @Test\n     public void issueSYNCOPE442() {\n-        UserTO userTO = getUniqueSampleTO(\"syncope442@apache.org\");\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"syncope442@apache.org\");\n         userTO.getVirAttrs().clear();\n \n         AttributeTO virAttrTO = new AttributeTO();\n@@ -427,7 +426,7 @@ public void issueSYNCOPE442() {\n \n     @Test\n     public void issueSYNCOPE436() {\n-        UserTO userTO = getUniqueSampleTO(\"syncope436@syncope.apache.org\");\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"syncope436@syncope.apache.org\");\n         userTO.getMemberships().clear();\n         userTO.getResources().clear();\n         userTO.getResources().add(RESOURCE_NAME_LDAP);\n@@ -495,7 +494,7 @@ public void issueSYNCOPE453() {\n         // -------------------------------------------\n         // Create new user\n         // -------------------------------------------\n-        UserTO userTO = getUniqueSampleTO(\"syncope453@syncope.apache.org\");\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"syncope453@syncope.apache.org\");\n         userTO.getAttrs().add(attributeTO(\"aLong\", \"123\"));\n         userTO.getResources().clear();\n         userTO.getResources().add(resourceName);\n@@ -533,7 +532,7 @@ public void issueSYNCOPE453() {\n \n     @Test\n     public void issueSYNCOPE459() {\n-        UserTO userTO = getUniqueSampleTO(\"syncope459@apache.org\");\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"syncope459@apache.org\");\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n         userTO.getVirAttrs().clear();\n@@ -596,7 +595,7 @@ public void issueSYNCOPE458() {\n         // -------------------------------------------\n         // Create new user\n         // -------------------------------------------\n-        UserTO userTO = getUniqueSampleTO(\"syncope458@syncope.apache.org\");\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"syncope458@syncope.apache.org\");\n         userTO.getResources().clear();\n         userTO.getResources().add(RESOURCE_NAME_DBVIRATTR);\n         userTO.getVirAttrs().clear();\n@@ -729,7 +728,7 @@ public void issueSYNCOPE501() {\n         // PHASE 1: update only user virtual attributes\n \n         // 1. create user and propagate him on resource-db-virattr\n-        UserTO userTO = getUniqueSampleTO(\"syncope501@apache.org\");\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"syncope501@apache.org\");\n         userTO.getResources().clear();\n         userTO.getMemberships().clear();\n         userTO.getVirAttrs().clear();\n@@ -767,8 +766,7 @@ public void issueSYNCOPE501() {\n \n         // 3. check that user virtual attribute has really been updated \n         assertFalse(userTO.getVirAttrMap().get(\"virtualdata\").getValues().isEmpty());\n-        assertEquals(\"syncope501_updated@apache.org\", userTO.getVirAttrMap().get(\"virtualdata\").getValues().\n-                get(0));\n+        assertEquals(\"syncope501_updated@apache.org\", userTO.getVirAttrMap().get(\"virtualdata\").getValues().get(0));\n \n         // ----------------------------------------------------------\n         // PHASE 2: update only membership virtual attributes"}]}