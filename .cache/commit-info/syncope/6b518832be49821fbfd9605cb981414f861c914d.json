{"sha":"6b518832be49821fbfd9605cb981414f861c914d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZiNTE4ODMyYmU0OTgyMWZiZmQ5NjA1Y2I5ODE0MTRmODYxYzkxNGQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2021-04-14T13:31:03Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2021-04-14T13:31:03Z"},"message":"[SYNCOPE-1545] WA > Profiles (#261)","tree":{"sha":"5b828ec7f5218a433ff2bafa725d7a57d01518c1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5b828ec7f5218a433ff2bafa725d7a57d01518c1"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6b518832be49821fbfd9605cb981414f861c914d","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgdu6XCRBK7hj4Ov3rIwAAdHIIACQ0aDn4eKbbXhDbwx4/sEI7\nzGeB11L6Y+268ISPU4E4JmMjjOvrEPESHEQ17ekeKUr5S3ot8mRq/41vnfhZ2Qaj\n/xJwvmudOJsEYs2uDNpe5fSGuM6YfbXnaC/FiMRBYPZo3t8vd7yKz6ek+p7YyVuQ\nHPMJzfl0dnKZnL3Krlvfxpxo/7mt6yP4twG/Gxa2iaOyVk1usltFII+AG2cpt+r/\n4AkzH3sbVZxRVpta94jZ+3eOnwa6yPvXGaQTMtyEssoeb9skIp7aG/ZALGtaHnh4\np6Sxx6UwTo8GQcA/mfs+r/WbdGxH3gHFy5yPJcqTV9x+sJDc/Ul55+++h+FsmDE=\n=DHx5\n-----END PGP SIGNATURE-----\n","payload":"tree 5b828ec7f5218a433ff2bafa725d7a57d01518c1\nparent 04c8bd32425107209267c66b57774f91e5354723\nauthor Francesco Chicchiriccò <ilgrosso@users.noreply.github.com> 1618407063 +0200\ncommitter GitHub <noreply@github.com> 1618407063 +0200\n\n[SYNCOPE-1545] WA > Profiles (#261)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6b518832be49821fbfd9605cb981414f861c914d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6b518832be49821fbfd9605cb981414f861c914d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6b518832be49821fbfd9605cb981414f861c914d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"04c8bd32425107209267c66b57774f91e5354723","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/04c8bd32425107209267c66b57774f91e5354723","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/04c8bd32425107209267c66b57774f91e5354723"}],"stats":{"total":2288,"additions":1748,"deletions":540},"files":[{"sha":"438441305a5b479c265258646e61abe6b78d4dd1","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/authprofiles/AuthProfileDirectoryPanel.java","status":"added","additions":476,"deletions":0,"changes":476,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -0,0 +1,476 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.authprofiles;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.authprofiles.AuthProfileDirectoryPanel.AuthProfileProvider;\n+import org.apache.syncope.client.console.commons.AMConstants;\n+import org.apache.syncope.client.console.panels.DirectoryPanel;\n+import org.apache.syncope.client.console.panels.ModalDirectoryPanel;\n+import org.apache.syncope.client.console.rest.AuthProfileRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanConditionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.DirectoryDataProvider;\n+import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n+import org.apache.syncope.common.lib.to.AuthProfileTO;\n+import org.apache.syncope.common.lib.types.AMEntitlement;\n+import org.apache.syncope.common.lib.wa.GoogleMfaAuthAccount;\n+import org.apache.syncope.common.lib.wa.GoogleMfaAuthToken;\n+import org.apache.syncope.common.lib.wa.ImpersonationAccount;\n+import org.apache.syncope.common.lib.wa.U2FDevice;\n+import org.apache.syncope.common.lib.wa.WebAuthnDeviceCredential;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n+\n+public class AuthProfileDirectoryPanel\n+        extends DirectoryPanel<AuthProfileTO, AuthProfileTO, AuthProfileProvider, AuthProfileRestClient> {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private final BaseModal<AuthProfileTO> authProfileModal;\n+\n+    public AuthProfileDirectoryPanel(final String id, final PageReference pageRef) {\n+        super(id, pageRef);\n+\n+        authProfileModal = new BaseModal<>(Constants.OUTER) {\n+\n+            private static final long serialVersionUID = 389935548143327858L;\n+\n+            @Override\n+            protected void onConfigure() {\n+                super.onConfigure();\n+                setFooterVisible(false);\n+            }\n+        };\n+        authProfileModal.size(Modal.Size.Large);\n+        authProfileModal.setWindowClosedCallback(target -> {\n+            updateResultTable(target);\n+            authProfileModal.show(false);\n+        });\n+        addOuterObject(authProfileModal);\n+\n+        addNewItemPanelBuilder(new CreateAuthProfileWizardBuilder(pageRef), true);\n+        MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, RENDER, AMEntitlement.AUTH_PROFILE_CREATE);\n+\n+        disableCheckBoxes();\n+        initResultTable();\n+    }\n+\n+    @Override\n+    protected AuthProfileProvider dataProvider() {\n+        return new AuthProfileProvider(rows);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return AMConstants.PREF_AUTHPROFILE_PAGINATOR_ROWS;\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBatches() {\n+        return List.of();\n+    }\n+\n+    @Override\n+    protected List<IColumn<AuthProfileTO, String>> getColumns() {\n+        List<IColumn<AuthProfileTO, String>> columns = new ArrayList<>();\n+\n+        columns.add(new KeyPropertyColumn<>(\n+                new StringResourceModel(Constants.KEY_FIELD_NAME, this), Constants.KEY_FIELD_NAME));\n+\n+        columns.add(new PropertyColumn<>(new ResourceModel(\"owner\"), \"owner\", \"owner\"));\n+\n+        columns.add(new BooleanConditionColumn<AuthProfileTO>(new StringResourceModel(\"impersonationAccounts\")) {\n+\n+            @Override\n+            protected boolean isCondition(final IModel<AuthProfileTO> rowModel) {\n+                return !rowModel.getObject().getImpersonationAccounts().isEmpty();\n+            }\n+        });\n+        columns.add(new BooleanConditionColumn<AuthProfileTO>(new StringResourceModel(\"googleMfaAuthTokens\")) {\n+\n+            @Override\n+            protected boolean isCondition(final IModel<AuthProfileTO> rowModel) {\n+                return !rowModel.getObject().getGoogleMfaAuthTokens().isEmpty();\n+            }\n+        });\n+        columns.add(new BooleanConditionColumn<AuthProfileTO>(new StringResourceModel(\"googleMfaAuthAccounts\")) {\n+\n+            @Override\n+            protected boolean isCondition(final IModel<AuthProfileTO> rowModel) {\n+                return !rowModel.getObject().getGoogleMfaAuthAccounts().isEmpty();\n+            }\n+        });\n+        columns.add(new BooleanConditionColumn<AuthProfileTO>(new StringResourceModel(\"u2fRegisteredDevices\")) {\n+\n+            @Override\n+            protected boolean isCondition(final IModel<AuthProfileTO> rowModel) {\n+                return !rowModel.getObject().getU2FRegisteredDevices().isEmpty();\n+            }\n+        });\n+        columns.add(new BooleanConditionColumn<AuthProfileTO>(new StringResourceModel(\"webAuthnAccount\")) {\n+\n+            @Override\n+            protected boolean isCondition(final IModel<AuthProfileTO> rowModel) {\n+                return !rowModel.getObject().getWebAuthnDeviceCredentials().isEmpty();\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    @Override\n+    public ActionsPanel<AuthProfileTO> getActions(final IModel<AuthProfileTO> model) {\n+        ActionsPanel<AuthProfileTO> panel = super.getActions(model);\n+\n+        panel.add(new ActionLink<AuthProfileTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final AuthProfileTO ignore) {\n+                model.setObject(AuthProfileRestClient.read(model.getObject().getKey()));\n+                target.add(authProfileModal.setContent(new ModalDirectoryPanel<>(\n+                        authProfileModal,\n+                        new AuthProfileItemDirectoryPanel<ImpersonationAccount>(\n+                                \"panel\", authProfileModal, model.getObject(), pageRef) {\n+\n+                    @Override\n+                    protected List<ImpersonationAccount> getItems() {\n+                        return model.getObject().getImpersonationAccounts();\n+                    }\n+\n+                    @Override\n+                    protected ImpersonationAccount defaultItem() {\n+                        return new ImpersonationAccount();\n+                    }\n+\n+                    @Override\n+                    protected String sortProperty() {\n+                        return \"impersonated\";\n+                    }\n+\n+                    @Override\n+                    protected String paginatorRowsKey() {\n+                        return AMConstants.PREF_AUTHPROFILE_IMPERSONATED_PAGINATOR_ROWS;\n+                    }\n+\n+                    @Override\n+                    protected List<IColumn<ImpersonationAccount, String>> getColumns() {\n+                        List<IColumn<ImpersonationAccount, String>> columns = new ArrayList<>();\n+                        columns.add(new PropertyColumn<>(new ResourceModel(\"impersonated\"),\n+                                \"impersonated\", \"impersonated\"));\n+                        return columns;\n+                    }\n+                }, pageRef)));\n+                authProfileModal.header(new Model<>(getString(\"impersonationAccounts\", model)));\n+                authProfileModal.show(true);\n+            }\n+        }, ActionLink.ActionType.TYPE_EXTENSIONS, AMEntitlement.AUTH_PROFILE_UPDATE);\n+\n+        panel.add(new ActionLink<AuthProfileTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final AuthProfileTO ignore) {\n+                model.setObject(AuthProfileRestClient.read(model.getObject().getKey()));\n+                target.add(authProfileModal.setContent(new ModalDirectoryPanel<>(\n+                        authProfileModal,\n+                        new AuthProfileItemDirectoryPanel<GoogleMfaAuthToken>(\n+                                \"panel\", authProfileModal, model.getObject(), pageRef) {\n+\n+                    @Override\n+                    protected List<GoogleMfaAuthToken> getItems() {\n+                        return model.getObject().getGoogleMfaAuthTokens();\n+                    }\n+\n+                    @Override\n+                    protected GoogleMfaAuthToken defaultItem() {\n+                        return new GoogleMfaAuthToken();\n+                    }\n+\n+                    @Override\n+                    protected String sortProperty() {\n+                        return \"issueDate\";\n+                    }\n+\n+                    @Override\n+                    protected String paginatorRowsKey() {\n+                        return AMConstants.PREF_AUTHPROFILE_GOOGLEMFAAUTHTOKENS_PAGINATOR_ROWS;\n+                    }\n+\n+                    @Override\n+                    protected List<IColumn<GoogleMfaAuthToken, String>> getColumns() {\n+                        List<IColumn<GoogleMfaAuthToken, String>> columns = new ArrayList<>();\n+                        columns.add(new DatePropertyColumn<>(new ResourceModel(\"issueDate\"), \"issueDate\", \"issueDate\"));\n+                        columns.add(new PropertyColumn<>(new ResourceModel(\"otp\"), \"otp\", \"otp\"));\n+                        return columns;\n+                    }\n+                }, pageRef)));\n+                authProfileModal.header(new Model<>(getString(\"googleMfaAuthTokens\", model)));\n+                authProfileModal.show(true);\n+            }\n+        }, ActionLink.ActionType.EDIT_APPROVAL, AMEntitlement.AUTH_PROFILE_UPDATE);\n+\n+        panel.add(new ActionLink<AuthProfileTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final AuthProfileTO ignore) {\n+                model.setObject(AuthProfileRestClient.read(model.getObject().getKey()));\n+                target.add(authProfileModal.setContent(new ModalDirectoryPanel<>(\n+                        authProfileModal,\n+                        new AuthProfileItemDirectoryPanel<GoogleMfaAuthAccount>(\n+                                \"panel\", authProfileModal, model.getObject(), pageRef) {\n+\n+                    @Override\n+                    protected List<GoogleMfaAuthAccount> getItems() {\n+                        return model.getObject().getGoogleMfaAuthAccounts();\n+                    }\n+\n+                    @Override\n+                    protected GoogleMfaAuthAccount defaultItem() {\n+                        return new GoogleMfaAuthAccount();\n+                    }\n+\n+                    @Override\n+                    protected String sortProperty() {\n+                        return \"id\";\n+                    }\n+\n+                    @Override\n+                    protected String paginatorRowsKey() {\n+                        return AMConstants.PREF_AUTHPROFILE_GOOGLEMFAAUTHACCOUNTS_PAGINATOR_ROWS;\n+                    }\n+\n+                    @Override\n+                    protected List<IColumn<GoogleMfaAuthAccount, String>> getColumns() {\n+                        List<IColumn<GoogleMfaAuthAccount, String>> columns = new ArrayList<>();\n+                        columns.add(new PropertyColumn<>(new ResourceModel(\"id\"), \"id\", \"id\"));\n+                        columns.add(new DatePropertyColumn<>(\n+                                new ResourceModel(\"registrationDate\"), \"registrationDate\", \"registrationDate\"));\n+                        columns.add(new PropertyColumn<>(new ResourceModel(\"name\"), \"name\", \"name\"));\n+                        return columns;\n+                    }\n+                }, pageRef)));\n+                authProfileModal.header(new Model<>(getString(\"googleMfaAuthAccounts\", model)));\n+                authProfileModal.show(true);\n+            }\n+        }, ActionLink.ActionType.EXECUTE, AMEntitlement.AUTH_PROFILE_UPDATE);\n+\n+        panel.add(new ActionLink<AuthProfileTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final AuthProfileTO ignore) {\n+                model.setObject(AuthProfileRestClient.read(model.getObject().getKey()));\n+                target.add(authProfileModal.setContent(new ModalDirectoryPanel<>(\n+                        authProfileModal,\n+                        new AuthProfileItemDirectoryPanel<U2FDevice>(\n+                                \"panel\", authProfileModal, model.getObject(), pageRef) {\n+\n+                    @Override\n+                    protected List<U2FDevice> getItems() {\n+                        return model.getObject().getU2FRegisteredDevices();\n+                    }\n+\n+                    @Override\n+                    protected U2FDevice defaultItem() {\n+                        return new U2FDevice();\n+                    }\n+\n+                    @Override\n+                    protected String sortProperty() {\n+                        return \"id\";\n+                    }\n+\n+                    @Override\n+                    protected String paginatorRowsKey() {\n+                        return AMConstants.PREF_AUTHPROFILE_U2FDEVICES_PAGINATOR_ROWS;\n+                    }\n+\n+                    @Override\n+                    protected List<IColumn<U2FDevice, String>> getColumns() {\n+                        List<IColumn<U2FDevice, String>> columns = new ArrayList<>();\n+                        columns.add(new PropertyColumn<>(new ResourceModel(\"id\"), \"id\", \"id\"));\n+                        columns.add(new DatePropertyColumn<>(\n+                                new ResourceModel(\"issueDate\"), \"issueDate\", \"issueDate\"));\n+                        columns.add(new PropertyColumn<>(new ResourceModel(\"record\"), \"record\", \"record\"));\n+                        return columns;\n+                    }\n+                }, pageRef)));\n+                authProfileModal.header(new Model<>(getString(\"u2fRegisteredDevices\", model)));\n+                authProfileModal.show(true);\n+            }\n+        }, ActionLink.ActionType.FO_EDIT, AMEntitlement.AUTH_PROFILE_UPDATE);\n+\n+        panel.add(new ActionLink<AuthProfileTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final AuthProfileTO ignore) {\n+                model.setObject(AuthProfileRestClient.read(model.getObject().getKey()));\n+                target.add(authProfileModal.setContent(new ModalDirectoryPanel<>(\n+                        authProfileModal,\n+                        new AuthProfileItemDirectoryPanel<WebAuthnDeviceCredential>(\n+                                \"panel\", authProfileModal, model.getObject(), pageRef) {\n+\n+                    @Override\n+                    protected List<WebAuthnDeviceCredential> getItems() {\n+                        return model.getObject().getWebAuthnDeviceCredentials();\n+                    }\n+\n+                    @Override\n+                    protected WebAuthnDeviceCredential defaultItem() {\n+                        return new WebAuthnDeviceCredential();\n+                    }\n+\n+                    @Override\n+                    protected String sortProperty() {\n+                        return \"identifier\";\n+                    }\n+\n+                    @Override\n+                    protected String paginatorRowsKey() {\n+                        return AMConstants.PREF_AUTHPROFILE_WEBAUTHNDEVICECREDENTIALS_PAGINATOR_ROWS;\n+                    }\n+\n+                    @Override\n+                    protected List<IColumn<WebAuthnDeviceCredential, String>> getColumns() {\n+                        List<IColumn<WebAuthnDeviceCredential, String>> columns = new ArrayList<>();\n+                        columns.add(new PropertyColumn<>(new ResourceModel(\"identifier\"), \"identifier\", \"identifier\"));\n+                        columns.add(new PropertyColumn<>(new ResourceModel(\"json\"), \"json\", \"json\"));\n+                        return columns;\n+                    }\n+                }, pageRef)));\n+                authProfileModal.header(new Model<>(getString(\"webAuthnDeviceCredentials\", model)));\n+                authProfileModal.show(true);\n+            }\n+        }, ActionLink.ActionType.HTML, AMEntitlement.AUTH_PROFILE_UPDATE);\n+\n+        panel.add(new ActionLink<AuthProfileTO>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final AuthProfileTO ignore) {\n+                try {\n+                    AuthProfileRestClient.delete(model.getObject().getKey());\n+\n+                    SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (Exception e) {\n+                    LOG.error(\"While deleting {}\", model.getObject().getKey(), e);\n+                    SyncopeConsoleSession.get().onException(e);\n+                }\n+                ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionLink.ActionType.DELETE, AMEntitlement.AUTH_PROFILE_DELETE, true);\n+\n+        return panel;\n+    }\n+\n+    protected static final class AuthProfileProvider extends DirectoryDataProvider<AuthProfileTO> {\n+\n+        private static final long serialVersionUID = -185944053385660794L;\n+\n+        private AuthProfileProvider(final int paginatorRows) {\n+            super(paginatorRows);\n+            setSort(\"owner\", SortOrder.ASCENDING);\n+        }\n+\n+        @Override\n+        public Iterator<AuthProfileTO> iterator(final long first, final long count) {\n+            int page = ((int) first / paginatorRows);\n+            return AuthProfileRestClient.list((page < 0 ? 0 : page) + 1, paginatorRows).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return AuthProfileRestClient.count();\n+        }\n+\n+        @Override\n+        public IModel<AuthProfileTO> model(final AuthProfileTO object) {\n+            return new CompoundPropertyModel<>(object);\n+        }\n+    }\n+\n+    private class CreateAuthProfileWizardBuilder extends AuthProfileWizardBuilder<AuthProfileTO> {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        private class NewAuthProfileStep extends AuthProfileWizardBuilder<AuthProfileTO>.Step {\n+\n+            private static final long serialVersionUID = 1L;\n+\n+            NewAuthProfileStep(final AuthProfileTO modelObject) {\n+                super(modelObject);\n+\n+                AjaxTextFieldPanel owner = new AjaxTextFieldPanel(\n+                        \"bean\", \"owner\", new PropertyModel<>(modelObject, \"owner\"));\n+                owner.addRequiredLabel();\n+                addOrReplace(owner);\n+            }\n+        }\n+\n+        CreateAuthProfileWizardBuilder(final PageReference pageRef) {\n+            super(new AuthProfileTO(), new StepModel<>(), pageRef);\n+        }\n+\n+        @Override\n+        protected WizardModel buildModelSteps(final AuthProfileTO modelObject, final WizardModel wizardModel) {\n+            wizardModel.add(new NewAuthProfileStep(modelObject));\n+            return wizardModel;\n+        }\n+\n+        @Override\n+        protected Serializable onApplyInternal(final AuthProfileTO modelObject) {\n+            AuthProfileRestClient.create(modelObject);\n+            return modelObject;\n+        }\n+    }\n+}"},{"sha":"87d3951691c2a37e7209fee4d1358b88bcb07cd5","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/authprofiles/AuthProfileItemDirectoryPanel.java","status":"added","additions":220,"deletions":0,"changes":220,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -0,0 +1,220 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.authprofiles;\n+\n+import java.io.Serializable;\n+import java.util.Collection;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.panels.DirectoryPanel;\n+import org.apache.syncope.client.console.rest.AuthProfileRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.DirectoryDataProvider;\n+import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n+import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n+import org.apache.syncope.common.lib.BaseBean;\n+import org.apache.syncope.common.lib.to.AuthProfileTO;\n+import org.apache.syncope.common.lib.types.AMEntitlement;\n+import org.apache.syncope.common.lib.wa.GoogleMfaAuthAccount;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.springframework.beans.BeanWrapper;\n+import org.springframework.beans.PropertyAccessorFactory;\n+\n+public abstract class AuthProfileItemDirectoryPanel<I extends BaseBean>\n+        extends DirectoryPanel<I, I, AuthProfileItemDirectoryPanel<I>.AuthProfileItemProvider, AuthProfileRestClient> {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private final BaseModal<AuthProfileTO> authProfileModal;\n+\n+    private final AuthProfileTO authProfile;\n+\n+    public AuthProfileItemDirectoryPanel(\n+            final String id,\n+            final BaseModal<AuthProfileTO> authProfileModal,\n+            final AuthProfileTO authProfile,\n+            final PageReference pageRef) {\n+\n+        super(id, pageRef, false);\n+\n+        this.authProfileModal = authProfileModal;\n+        this.authProfile = authProfile;\n+\n+        setOutputMarkupId(true);\n+\n+        enableUtilityButton();\n+        setFooterVisibility(false);\n+\n+        addNewItemPanelBuilder(new AuthProfileItemWizardBuilder(pageRef), true);\n+\n+        disableCheckBoxes();\n+        initResultTable();\n+    }\n+\n+    protected abstract List<I> getItems();\n+\n+    protected abstract I defaultItem();\n+\n+    protected abstract String sortProperty();\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof ExitEvent) {\n+            AjaxRequestTarget target = ExitEvent.class.cast(event.getPayload()).getTarget();\n+            authProfileModal.close(target);\n+        } else if (event.getPayload() instanceof AjaxWizard.EditItemActionEvent) {\n+            @SuppressWarnings(\"unchecked\")\n+            AjaxWizard.EditItemActionEvent<?> payload = (AjaxWizard.EditItemActionEvent<?>) event.getPayload();\n+            payload.getTarget().ifPresent(actionTogglePanel::close);\n+        }\n+        super.onEvent(event);\n+    }\n+\n+    @Override\n+    protected AuthProfileItemProvider dataProvider() {\n+        return new AuthProfileItemProvider(sortProperty(), rows);\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBatches() {\n+        return List.of();\n+    }\n+\n+    @Override\n+    public ActionsPanel<I> getActions(final IModel<I> model) {\n+        ActionsPanel<I> panel = super.getActions(model);\n+\n+        panel.add(new ActionLink<I>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final I ignore) {\n+                send(AuthProfileItemDirectoryPanel.this, Broadcast.EXACT,\n+                        new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n+            }\n+        }, ActionLink.ActionType.EDIT, AMEntitlement.AUTH_PROFILE_UPDATE);\n+\n+        panel.add(new ActionLink<I>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final I ignore) {\n+                try {\n+                    getItems().remove(model.getObject());\n+                    AuthProfileRestClient.update(authProfile);\n+\n+                    SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n+                    target.add(container);\n+                } catch (Exception e) {\n+                    LOG.error(\"While deleting {} from {}\", model.getObject(), authProfile.getKey(), e);\n+                    SyncopeConsoleSession.get().onException(e);\n+                }\n+                ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        }, ActionLink.ActionType.DELETE, AMEntitlement.AUTH_PROFILE_UPDATE, true);\n+\n+        return panel;\n+    }\n+\n+    protected class AuthProfileItemProvider extends DirectoryDataProvider<I> {\n+\n+        private static final long serialVersionUID = 4725679400450513556L;\n+\n+        private final SortableDataProviderComparator<I> comparator;\n+\n+        AuthProfileItemProvider(final String sort, final int paginatorRows) {\n+            super(paginatorRows);\n+\n+            setSort(sort, SortOrder.ASCENDING);\n+            comparator = new SortableDataProviderComparator<>(this);\n+        }\n+\n+        @Override\n+        public Iterator<I> iterator(final long first, final long count) {\n+            List<I> list = getItems();\n+            list.sort(comparator);\n+            return list.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return getItems().size();\n+        }\n+\n+        @Override\n+        public IModel<I> model(final I object) {\n+            return new CompoundPropertyModel<>(object);\n+        }\n+    }\n+\n+    private class AuthProfileItemWizardBuilder extends AuthProfileWizardBuilder<I> {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        AuthProfileItemWizardBuilder(final PageReference pageRef) {\n+            super(defaultItem(), new StepModel<>(), pageRef);\n+        }\n+\n+        @Override\n+        protected Serializable onApplyInternal(final I modelObject) {\n+            if (modelObject instanceof GoogleMfaAuthAccount) {\n+                BeanWrapper wrapper = PropertyAccessorFactory.forBeanPropertyAccess(modelObject);\n+                @SuppressWarnings(\"unchecked\")\n+                List<Serializable> values = (List<Serializable>) wrapper.getPropertyValue(\"scratchCodes\");\n+                if (values != null) {\n+                    List<Integer> converted = values.stream().map(value -> {\n+                        if (value instanceof Integer) {\n+                            return Integer.class.cast(value);\n+                        }\n+                        if (value instanceof String) {\n+                            try {\n+                                return Integer.valueOf((String) value);\n+                            } catch (NumberFormatException e) {\n+                                LOG.error(\"Could not convert to Integer: {}\", value, e);\n+                            }\n+                        }\n+                        return null;\n+                    }).filter(Objects::nonNull).collect(Collectors.toList());\n+                    wrapper.setPropertyValue(\"scratchCodes\", converted);\n+                }\n+            }\n+\n+            getItems().remove(model.getInitialModelObject());\n+            getItems().add(modelObject);\n+            AuthProfileRestClient.update(authProfile);\n+\n+            return modelObject;\n+        }\n+    }\n+}"},{"sha":"ae9bf98a3bad830228dd937ea1ee7bd7a28bde6e","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/authprofiles/AuthProfileWizardBuilder.java","status":"added","additions":72,"deletions":0,"changes":72,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileWizardBuilder.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.authprofiles;\n+\n+import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.syncope.client.console.panels.BeanPanel;\n+import org.apache.syncope.client.console.wizards.BaseAjaxWizardBuilder;\n+import org.apache.syncope.common.lib.BaseBean;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+import org.apache.wicket.model.Model;\n+\n+public abstract class AuthProfileWizardBuilder<T extends BaseBean> extends BaseAjaxWizardBuilder<T> {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    protected final StepModel<T> model;\n+\n+    public AuthProfileWizardBuilder(final T defaultItem, final StepModel<T> model, final PageReference pageRef) {\n+        super(defaultItem, pageRef);\n+        this.model = model;\n+    }\n+\n+    @Override\n+    protected WizardModel buildModelSteps(final T modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new Step(modelObject));\n+        return wizardModel;\n+    }\n+\n+    protected static class StepModel<T extends BaseBean> extends Model<T> {\n+\n+        private static final long serialVersionUID = 1L;\n+\n+        private T initialModelObject;\n+\n+        public void setInitialModelObject(final T initialModelObject) {\n+            this.initialModelObject = SerializationUtils.clone(initialModelObject);\n+        }\n+\n+        public T getInitialModelObject() {\n+            return initialModelObject;\n+        }\n+    }\n+\n+    protected class Step extends WizardStep {\n+\n+        private static final long serialVersionUID = -785981096328637758L;\n+\n+        Step(final T modelObject) {\n+            model.setObject(modelObject);\n+            model.setInitialModelObject(modelObject);\n+            add(new BeanPanel<>(\"bean\", model).setRenderBodyOnly(true));\n+        }\n+    }\n+}"},{"sha":"d3742ee6baa064499dcea48b1d626f668e106ef9","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/clientapps/ClientAppDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppDirectoryPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -114,7 +114,7 @@ protected void addCustomColumnFields(final List<IColumn<T, String>> columns) {\n \n     @Override\n     public ActionsPanel<T> getActions(final IModel<T> model) {\n-        final ActionsPanel<T> panel = super.getActions(model);\n+        ActionsPanel<T> panel = super.getActions(model);\n \n         panel.add(new ActionLink<T>() {\n "},{"sha":"f6f522a5d8d329abd491059f4c403bc2455476e4","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/clientapps/ClientAppModalPanelBuilder.java","status":"modified","additions":4,"deletions":9,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppModalPanelBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppModalPanelBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FClientAppModalPanelBuilder.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -242,17 +242,12 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     entityId.addValidator(new UrlValidator());\n                     fields.add(entityId.setRequired(true));\n \n-                    AjaxTextFieldPanel metadataLocation = new AjaxTextFieldPanel(\n-                            \"field\", \"metadataLocation\",\n-                            new PropertyModel<>(clientAppTO, \"metadataLocation\"), false);\n-                    metadataLocation.addValidator(new UrlValidator());\n-                    fields.add(metadataLocation.setRequired(true));\n+                    fields.add(new AjaxTextFieldPanel(\"field\", \"metadataLocation\",\n+                            new PropertyModel<>(clientAppTO, \"metadataLocation\"), false).setRequired(true));\n \n-                    AjaxTextFieldPanel metadataSignatureLocation = new AjaxTextFieldPanel(\n+                    fields.add(new AjaxTextFieldPanel(\n                             \"field\", \"metadataSignatureLocation\",\n-                            new PropertyModel<>(clientAppTO, \"metadataSignatureLocation\"), false);\n-                    metadataSignatureLocation.addValidator(new UrlValidator());\n-                    fields.add(metadataSignatureLocation);\n+                            new PropertyModel<>(clientAppTO, \"metadataSignatureLocation\"), false));\n \n                     fields.add(new AjaxCheckBoxPanel(\n                             \"field\", \"signAssertions\", new PropertyModel<>(clientAppTO, \"signAssertions\")));"},{"sha":"09bb878bfa50f5ea24d52a1fa25f9e3929dcbca2","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/clientapps/OIDCRPDirectoryPanel.java","status":"modified","additions":4,"deletions":16,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FOIDCRPDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FOIDCRPDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fclientapps%2FOIDCRPDirectoryPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -20,18 +20,14 @@\n \n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanConditionColumn;\n import org.apache.syncope.common.lib.to.OIDCRPClientAppTO;\n import org.apache.syncope.common.lib.types.AMEntitlement;\n import org.apache.syncope.common.lib.types.ClientAppType;\n-import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.StringResourceModel;\n \n@@ -56,19 +52,11 @@ protected void addCustomColumnFields(final List<IColumn<OIDCRPClientAppTO, Strin\n         columns.add(new PropertyColumn<>(new StringResourceModel(\"clientId\", this), \"clientId\", \"clientId\"));\n         columns.add(new PropertyColumn<>(\n                 new StringResourceModel(\"redirectUris\", this), \"redirectUris\", \"redirectUris\"));\n-        columns.add(new AbstractColumn<OIDCRPClientAppTO, String>(new StringResourceModel(\"logout\")) {\n+        columns.add(new BooleanConditionColumn<OIDCRPClientAppTO>(new StringResourceModel(\"logout\")) {\n \n             @Override\n-            public void populateItem(\n-                    final Item<ICellPopulator<OIDCRPClientAppTO>> item,\n-                    final String componentId,\n-                    final IModel<OIDCRPClientAppTO> rowModel) {\n-\n-                item.add(new Label(componentId, StringUtils.EMPTY));\n-                if (StringUtils.isNotBlank(rowModel.getObject().getLogoutUri())) {\n-                    item.add(new AttributeModifier(\"class\", \"fa fa-check\"));\n-                    item.add(new AttributeModifier(\"style\", \"display: table-cell; text-align: center;\"));\n-                }\n+            protected boolean isCondition(final IModel<OIDCRPClientAppTO> rowModel) {\n+                return StringUtils.isNotBlank(rowModel.getObject().getLogoutUri());\n             }\n         });\n     }"},{"sha":"564227c15d81b4b8ed28a4c7823a3edf5ba77885","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/commons/AMConstants.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FAMConstants.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -34,8 +34,24 @@ public final class AMConstants {\n             \"accesspolicy.conf.requiredattrs.paginator.rows\";\n \n     public static final String PREF_SAML2_IDP_ENTITY_PAGINATOR_ROWS = \"saml2idpentity.properties.paginator.rows\";\n+\n     public static final String PREF_SAML2_SP_ENTITY_PAGINATOR_ROWS = \"saml2spentity.properties.paginator.rows\";\n \n+    public static final String PREF_AUTHPROFILE_PAGINATOR_ROWS = \"authprofile.paginator.rows\";\n+\n+    public static final String PREF_AUTHPROFILE_IMPERSONATED_PAGINATOR_ROWS = \"authprofile.impersonated.paginator.rows\";\n+\n+    public static final String PREF_AUTHPROFILE_GOOGLEMFAAUTHTOKENS_PAGINATOR_ROWS =\n+            \"authprofile.googlemfaauthtokens.paginator.rows\";\n+\n+    public static final String PREF_AUTHPROFILE_GOOGLEMFAAUTHACCOUNTS_PAGINATOR_ROWS =\n+            \"authprofile.googlemfaauthaccounts.paginator.rows\";\n+\n+    public static final String PREF_AUTHPROFILE_U2FDEVICES_PAGINATOR_ROWS = \"authprofile.u2fdevices.paginator.rows\";\n+\n+    public static final String PREF_AUTHPROFILE_WEBAUTHNDEVICECREDENTIALS_PAGINATOR_ROWS =\n+            \"authprofile.webAuthnDeviceCredentials.paginator.rows\";\n+\n     private AMConstants() {\n         // private constructor for static utility class\n     }"},{"sha":"30312b454b65970fa3f7b773462b6187ddbb9e9e","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/pages/WA.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -32,6 +32,7 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.annotations.AMPage;\n+import org.apache.syncope.client.console.authprofiles.AuthProfileDirectoryPanel;\n import org.apache.syncope.client.console.panels.AuthModuleDirectoryPanel;\n import org.apache.syncope.client.console.clientapps.ClientApps;\n import org.apache.syncope.client.console.panels.OIDC;\n@@ -197,7 +198,7 @@ public Panel getPanel(final String panelId) {\n \n                 @Override\n                 public Panel getPanel(final String panelId) {\n-                    return new AjaxTextFieldPanel(panelId, panelId, Model.of(\"\"));\n+                    return new AuthProfileDirectoryPanel(panelId, getPageReference());\n                 }\n             });\n         }"},{"sha":"5cb21fee5b35aff283a66e1031320c94126d4818","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/AuthModuleDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAuthModuleDirectoryPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -88,7 +88,7 @@ protected Collection<ActionLink.ActionType> getBatches() {\n \n     @Override\n     protected List<IColumn<AuthModuleTO, String>> getColumns() {\n-        final List<IColumn<AuthModuleTO, String>> columns = new ArrayList<>();\n+        List<IColumn<AuthModuleTO, String>> columns = new ArrayList<>();\n         columns.add(new PropertyColumn<>(\n                 new StringResourceModel(Constants.KEY_FIELD_NAME, this),\n                 Constants.KEY_FIELD_NAME, Constants.KEY_FIELD_NAME));"},{"sha":"d526783030ca337fe288e17e8b0b59aeb24e3b1d","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/rest/AuthProfileRestClient.java","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAuthProfileRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAuthProfileRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAuthProfileRestClient.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.List;\n+import org.apache.syncope.common.lib.to.AuthProfileTO;\n+import org.apache.syncope.common.rest.api.service.AuthProfileService;\n+\n+public class AuthProfileRestClient extends BaseRestClient {\n+\n+    private static final long serialVersionUID = -7379778542101161274L;\n+\n+    public static int count() {\n+        return getService(AuthProfileService.class).list(1, 1).getTotalCount();\n+    }\n+\n+    public static List<AuthProfileTO> list(final int page, final int size) {\n+        return getService(AuthProfileService.class).list(page, size).getResult();\n+    }\n+\n+    public static AuthProfileTO read(final String key) {\n+        return getService(AuthProfileService.class).read(key);\n+    }\n+\n+    public static void create(final AuthProfileTO authProfile) {\n+        getService(AuthProfileService.class).create(authProfile);\n+    }\n+\n+    public static void update(final AuthProfileTO authProfile) {\n+        getService(AuthProfileService.class).update(authProfile);\n+    }\n+\n+    public static void delete(final String key) {\n+        getService(AuthProfileService.class).delete(key);\n+    }\n+}"},{"sha":"8aeb24518f0f62c775bafc7e29261310c51b47b8","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/wizards/AuthModuleWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FAuthModuleWizardBuilder.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -130,7 +130,7 @@ protected void onEvent(final AjaxRequestTarget target) {\n         }\n     }\n \n-    public static class Configuration extends WizardStep {\n+    private static class Configuration extends WizardStep {\n \n         private static final long serialVersionUID = -785981096328637758L;\n "},{"sha":"58c63a57b36c66ed4f285f78e4c55f4f47a7fe32","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/wizards/mapping/AuthModuleMappingPanel.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FAuthModuleMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FAuthModuleMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fmapping%2FAuthModuleMappingPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -28,6 +28,8 @@\n \n public class AuthModuleMappingPanel extends AbstractMappingPanel {\n \n+    private static final long serialVersionUID = 1L;\n+\n     public AuthModuleMappingPanel(final String id, final AuthModuleTO authModule) {\n         super(id,\n                 null,"},{"sha":"e095d91b2bad089a5ce70793bc25fb82f56e49bd","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/authprofiles/AuthProfileDirectoryPanel.properties","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel.properties?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -0,0 +1,46 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Edit Parameter ${key}\n+any.new=New Auth Proile\n+any.edit=Edit Auth Profile\n+owner=Owner\n+impersonationAccounts=Impersonations\n+googleMfaAuthTokens=Google MFA Tokens\n+googleMfaAuthAccounts=Google MFA Accounts\n+u2fRegisteredDevices=U2F Devices\n+webAuthnAccount=WebAuthn\n+type_extensions.title=impersonations\n+type_extensions.class=fas fa-user-friends\n+otp=One Time Password\n+issueDate=Issue Date\n+edit_approval.class=fas fa-passport\n+edit_approval.title=google mfa tokens\n+id=Id\n+registrationDate=Registration Date\n+execute.class=fas fa-user-circle\n+execute.title=google mfa accounts\n+secretKey=Secret Key\n+validationCode=Validation Code\n+scratchCodes=Scratch Codes\n+record=Record\n+fo_edit.class=fab fa-usb\n+fo_edit.title=u2f Devices\n+identifier=Identifier\n+json=JSON\n+html.class=fas fa-at\n+html.title=webauthn\n+webAuthnDeviceCredentials=WebAuthn Device Credentials"},{"sha":"8a42e53c73a71b73de6368913f0dace620531aa1","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/authprofiles/AuthProfileDirectoryPanel_fr_CA.properties","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel_fr_CA.properties?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -0,0 +1,46 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Modifier param\\u00e8tre ${key}\n+any.new=New Auth Proile\n+any.edit=Edit Auth Profile\n+owner=Owner\n+impersonationAccounts=Impersonations\n+googleMfaAuthTokens=Google MFA Tokens\n+googleMfaAuthAccounts=Google MFA Accounts\n+u2fRegisteredDevices=U2F Devices\n+webAuthnAccount=WebAuthn\n+type_extensions.title=impersonations\n+type_extensions.class=fas fa-user-friends\n+otp=One Time Password\n+issueDate=Issue Date\n+edit_approval.class=fas fa-passport\n+edit_approval.title=token google mfa\n+id=Id\n+registrationDate=Registration Date\n+execute.class=fas fa-user-circle\n+execute.title=google mfa accounts\n+secretKey=Secret Key\n+validationCode=Validation Code\n+scratchCodes=Scratch Codes\n+record=Record\n+fo_edit.class=fab fa-usb\n+fo_edit.title=u2f Devices\n+identifier=Identifier\n+json=JSON\n+html.class=fas fa-at\n+html.title=webauthn\n+webAuthnDeviceCredentials=WebAuthn Device Credentials"},{"sha":"0fd02d5f98f9d444c9136f5503461627745baa1c","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/authprofiles/AuthProfileDirectoryPanel_it.properties","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel_it.properties?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -0,0 +1,46 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Modifica parametro ${key}\n+any.new=Nuovo Profilo Autenticazione\n+any.edit=Modifica Profilo Autenticazione\n+owner=Proprietario\n+impersonationAccounts=Impersonificazioni\n+googleMfaAuthTokens=Token Google MFA\n+googleMfaAuthAccounts=Account Google MFA\n+u2fRegisteredDevices=Dispositivi U2F\n+webAuthnAccount=WebAuthn\n+type_extensions.title=impersonificazioni\n+type_extensions.class=fas fa-user-friends\n+otp=One Time Password\n+issueDate=Emissione\n+edit_approval.class=fas fa-passport\n+edit_approval.title=token google mfa\n+id=Id\n+registrationDate=Data Registrazione\n+execute.class=fas fa-user-circle\n+execute.title=account google mfa\n+secretKey=Chiave Segreta\n+validationCode=Codice Validazione\n+scratchCodes=Codici Scratch\n+record=Record\n+fo_edit.class=fab fa-usb\n+fo_edit.title=dispositivi u2f\n+identifier=Identificativo\n+json=JSON\n+html.class=fas fa-at\n+html.title=webauthn\n+webAuthnDeviceCredentials=Dispositivi Credenziali WebAuthn"},{"sha":"d2fc5697f7e93376f2dcdb41ab486c065752808d","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/authprofiles/AuthProfileDirectoryPanel_ja.properties","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel_ja.properties?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -0,0 +1,46 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=\\u30d1\\u30e9\\u30e1\\u30fc\\u30bf\\u30fc ${key} \\u3092\\u7de8\\u96c6\n+any.new=New Auth Proile\n+any.edit=Edit Auth Profile\n+owner=Owner\n+impersonationAccounts=Impersonations\n+googleMfaAuthTokens=Google MFA Tokens\n+googleMfaAuthAccounts=Google MFA Accounts\n+u2fRegisteredDevices=U2F Devices\n+webAuthnAccount=WebAuthn\n+type_extensions.title=impersonations\n+type_extensions.class=fas fa-user-friends\n+otp=One Time Password\n+issueDate=Issue Date\n+edit_approval.class=fas fa-passport\n+edit_approval.title=token google mfa\n+id=Id\n+registrationDate=Registration Date\n+execute.class=fas fa-user-circle\n+execute.title=google mfa accounts\n+secretKey=Secret Key\n+validationCode=Validation Code\n+scratchCodes=Scratch Codes\n+record=Record\n+fo_edit.class=fab fa-usb\n+fo_edit.title=u2f Devices\n+identifier=Identifier\n+json=JSON\n+html.class=fas fa-at\n+html.title=webauthn\n+webAuthnDeviceCredentials=WebAuthn Device Credentials"},{"sha":"8d919ed952b0a52eebc0dd9860be925c82b21b6c","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/authprofiles/AuthProfileDirectoryPanel_pt_BR.properties","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel_pt_BR.properties?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -0,0 +1,46 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Editar par\\u00e2metro\n+any.new=New Auth Proile\n+any.edit=Edit Auth Profile\n+owner=Owner\n+impersonationAccounts=Impersonations\n+googleMfaAuthTokens=Google MFA Tokens\n+googleMfaAuthAccounts=Google MFA Accounts\n+u2fRegisteredDevices=U2F Devices\n+webAuthnAccount=WebAuthn\n+type_extensions.title=impersonations\n+type_extensions.class=fas fa-user-friends\n+otp=One Time Password\n+issueDate=Issue Date\n+edit_approval.class=fas fa-passport\n+edit_approval.title=token google mfa\n+id=Id\n+registrationDate=Registration Date\n+execute.class=fas fa-user-circle\n+execute.title=google mfa accounts\n+secretKey=Secret Key\n+validationCode=Validation Code\n+scratchCodes=Scratch Codes\n+record=Record\n+fo_edit.class=fab fa-usb\n+fo_edit.title=u2f Devices\n+identifier=Identifier\n+json=JSON\n+html.class=fas fa-at\n+html.title=webauthn\n+webAuthnDeviceCredentials=WebAuthn Device Credentials"},{"sha":"b638d451d517154232056b18a4103549503ed917","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/authprofiles/AuthProfileDirectoryPanel_ru.properties","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileDirectoryPanel_ru.properties?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -0,0 +1,47 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+any.edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c \\u043f\\u0430\\u0440\\u0430\\u043c\\u0435\\u0442\\u0440 ${key}\n+any.new=New Auth Proile\n+any.edit=Edit Auth Profile\n+owner=Owner\n+impersonationAccounts=Impersonations\n+googleMfaAuthTokens=Google MFA Tokens\n+googleMfaAuthAccounts=Google MFA Accounts\n+u2fRegisteredDevices=U2F Devices\n+webAuthnAccount=WebAuthn\n+type_extensions.title=impersonations\n+type_extensions.class=fas fa-user-friends\n+otp=One Time Password\n+issueDate=Issue Date\n+edit_approval.class=fas fa-passport\n+edit_approval.title=token google mfa\n+id=Id\n+registrationDate=Registration Date\n+execute.class=fas fa-user-circle\n+execute.title=google mfa accounts\n+secretKey=Secret Key\n+validationCode=Validation Code\n+scratchCodes=Scratch Codes\n+record=Record\n+fo_edit.class=fab fa-usb\n+fo_edit.title=u2f Devices\n+identifier=Identifier\n+json=JSON\n+html.class=fas fa-at\n+html.title=webauthn\n+webAuthnDeviceCredentials=WebAuthn Device Credentials"},{"sha":"01365082967f837f698998904b7845111eada74e","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/authprofiles/AuthProfileItemDirectoryPanel.properties","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel.properties?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Edit Parameter ${key}\n+any.new=New Impersonation\n+any.edit=Edit Impersonation\n+impersonated=Impersonated"},{"sha":"f100e8e6eba04fcbd6fffbb5029f95c0fc3d3cda","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/authprofiles/AuthProfileItemDirectoryPanel_fr_CA.properties","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel_fr_CA.properties?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Modifier param\\u00e8tre ${key}\n+any.new=New Impersonation\n+any.edit=Edit Impersonation\n+impersonated=Impersonated"},{"sha":"8bd6cc76298cfeb1c50a932bbbcfd8c823e51259","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/authprofiles/AuthProfileItemDirectoryPanel_it.properties","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel_it.properties?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Modifica parametro ${key}\n+any.new=Nuova Impersonificazione\n+any.edit=Modifica Impersonificazione\n+impersonated=Impersonato"},{"sha":"0a3db3fd4be4238a91a58ba7907abc5ae965634d","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/authprofiles/AuthProfileItemDirectoryPanel_ja.properties","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel_ja.properties?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=\\u30d1\\u30e9\\u30e1\\u30fc\\u30bf\\u30fc ${key} \\u3092\\u7de8\\u96c6\n+any.new=New Impersonation\n+any.edit=Edit Impersonation\n+impersonated=Impersonated"},{"sha":"e4ba52c395a8f254e0ff24c2c899b6aaac5d9597","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/authprofiles/AuthProfileItemDirectoryPanel_pt_BR.properties","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel_pt_BR.properties?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -0,0 +1,20 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+any.edit=Editar par\\u00e2metro\n+any.new=New Impersonation\n+any.edit=Edit Impersonation\n+impersonated=Impersonated"},{"sha":"c44ebf94a4bec8a2985dd772ae59e03335c40907","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/authprofiles/AuthProfileItemDirectoryPanel_ru.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileItemDirectoryPanel_ru.properties?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+any.edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c \\u043f\\u0430\\u0440\\u0430\\u043c\\u0435\\u0442\\u0440 ${key}\n+any.new=New Impersonation\n+any.edit=Edit Impersonation\n+impersonated=Impersonated"},{"sha":"7772c93b7b0f9ede0879d65b1ee4014cc4497248","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/authprofiles/AuthProfileWizardBuilder$Step.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileWizardBuilder%24Step.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileWizardBuilder%24Step.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fauthprofiles%2FAuthProfileWizardBuilder%24Step.html?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -0,0 +1,23 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <span wicket:id=\"bean\"/>\n+  </wicket:panel>\n+</html>"},{"sha":"c184cffa30d3d8eedf2198680fcad0088be1d41e","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/LinkedAccountModalPanel.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLinkedAccountModalPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -83,8 +83,6 @@ public class LinkedAccountModalPanel extends Panel implements ModalPanel {\n \n     private UserRestClient userRestClient = new UserRestClient();\n \n-    private AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n-\n     private final List<LinkedAccountTO> linkedAccountTOs;\n \n     @SuppressWarnings(\"unchecked\")\n@@ -93,7 +91,7 @@ public LinkedAccountModalPanel(\n             final PageReference pageRef,\n             final boolean recounciliationOnly) {\n \n-        super(BaseModal.getContentId(), model);\n+        super(BaseModal.CONTENT_ID, model);\n \n         final MultilevelPanel mlp = new MultilevelPanel(\"mlpContainer\");\n         mlp.setOutputMarkupId(true);\n@@ -104,7 +102,7 @@ public LinkedAccountModalPanel(\n         add(actionTogglePanel);\n \n         AnyLayout anyLayout = AnyLayoutUtils.fetch(\n-                anyTypeRestClient.listAnyTypes().stream().map(EntityTO::getKey).collect(Collectors.toList()));\n+                AnyTypeRestClient.listAnyTypes().stream().map(EntityTO::getKey).collect(Collectors.toList()));\n         LinkedAccountFormLayoutInfo linkedAccountFormLayoutInfo =\n                 anyLayout.getUser() instanceof IdMUserFormLayoutInfo\n                 ? IdMUserFormLayoutInfo.class.cast(anyLayout.getUser()).getLinkedAccountFormLayoutInfo()"},{"sha":"a368a9546d89ae0004378b9004250f73aea72aed","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/topology/Topology.java","status":"modified","additions":1,"deletions":10,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -46,7 +46,6 @@\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.WebMarkupContainerNoVeil;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal.WindowClosedCallback;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n@@ -151,15 +150,7 @@ protected enum SupportedOperation {\n     public Topology() {\n         modal = new BaseModal<>(\"resource-modal\");\n         body.add(modal.size(Modal.Size.Large));\n-        modal.setWindowClosedCallback(new WindowClosedCallback() {\n-\n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                modal.show(false);\n-            }\n-        });\n+        modal.setWindowClosedCallback(target -> modal.show(false));\n \n         TopologyWebSocketBehavior websocket = new TopologyWebSocketBehavior();\n         body.add(websocket);"},{"sha":"fec019e156537db32d3daf75970a27631abeb895","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/topology/TopologyTogglePanel.java","status":"modified","additions":10,"deletions":18,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -27,7 +27,6 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.audit.AuditHistoryModal;\n import org.apache.syncope.client.ui.commons.Constants;\n-import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.ConnObjects;\n import org.apache.syncope.client.console.wizards.resources.ConnectorWizardBuilder;\n import org.apache.syncope.client.console.wizards.resources.ResourceWizardBuilder;\n@@ -40,12 +39,12 @@\n import org.apache.syncope.client.console.tasks.SchedTasks;\n import org.apache.syncope.client.console.tasks.PullTasks;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal.WindowClosedCallback;\n import org.apache.syncope.client.console.wicket.markup.html.form.IndicatingOnConfirmAjaxLink;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.resources.AbstractResourceWizardBuilder;\n import org.apache.syncope.client.console.wizards.resources.ResourceProvision;\n import org.apache.syncope.client.console.wizards.resources.ResourceProvisionPanel;\n+import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.ItemTO;\n@@ -127,15 +126,9 @@ protected void onConfigure() {\n     public void toggleWithContent(final AjaxRequestTarget target, final TopologyNode node) {\n         setHeader(target, node.getDisplayName());\n \n-        modal.setWindowClosedCallback(new WindowClosedCallback() {\n-\n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                modal.show(false);\n-                send(pageRef.getPage(), Broadcast.DEPTH, new UpdateEvent(node.getKey(), target));\n-            }\n+        modal.setWindowClosedCallback(t -> {\n+            modal.show(false);\n+            send(pageRef.getPage(), Broadcast.DEPTH, new UpdateEvent(node.getKey(), t));\n         });\n \n         switch (node.getKind()) {\n@@ -194,7 +187,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     LOG.error(\"While reloading all connectors\", e);\n                     SyncopeConsoleSession.get().onException(e);\n                 }\n-                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n         };\n         fragment.add(reload);\n@@ -273,7 +266,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     LOG.error(\"While deleting resource {}\", node.getKey(), e);\n                     SyncopeConsoleSession.get().onException(e);\n                 }\n-                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n         };\n         MetaDataRoleAuthorizationStrategy.authorize(delete, RENDER, IdMEntitlement.CONNECTOR_DELETE);\n@@ -369,7 +362,7 @@ protected void restore(final String json, final AjaxRequestTarget target) {\n                             LOG.error(\"While restoring connector {}\", node.getKey(), e);\n                             SyncopeConsoleSession.get().onException(e);\n                         }\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                        ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n                     }\n                 }));\n \n@@ -409,7 +402,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     LOG.error(\"While deleting resource {}\", node.getKey(), e);\n                     SyncopeConsoleSession.get().onException(e);\n                 }\n-                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n         };\n         MetaDataRoleAuthorizationStrategy.authorize(delete, RENDER, IdMEntitlement.RESOURCE_DELETE);\n@@ -442,7 +435,6 @@ public void onClick(final AjaxRequestTarget target) {\n             public String getAjaxIndicatorMarkupId() {\n                 return Constants.VEIL_INDICATOR_MARKUP_ID;\n             }\n-\n         };\n         MetaDataRoleAuthorizationStrategy.authorize(edit, RENDER, IdMEntitlement.RESOURCE_READ);\n         fragment.add(edit);\n@@ -615,7 +607,7 @@ protected void restore(final String json, final AjaxRequestTarget target) {\n                             LOG.error(\"While restoring resource {}\", node.getKey(), e);\n                             SyncopeConsoleSession.get().onException(e);\n                         }\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                        ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n                     }\n                 }));\n \n@@ -677,7 +669,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     LOG.error(\"While cloning resource {}\", node.getKey(), e);\n                     SyncopeConsoleSession.get().onException(e);\n                 }\n-                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n \n         };"},{"sha":"34305fc16a786d8a578a520bee74b3d2c4550b36","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -26,7 +26,6 @@\n import java.util.stream.Collectors;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.ui.commons.Constants;\n-import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n import org.apache.syncope.client.console.panels.ListViewPanel;\n import org.apache.syncope.client.console.panels.ListViewPanel.ListViewReload;\n@@ -37,6 +36,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksTogglePanel;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.ItemTO;\n@@ -84,7 +84,7 @@ public ResourceProvisionPanel(\n \n         wizard = new ProvisionWizardBuilder(resourceTO, adminRealm, pageRef);\n \n-        final ListViewPanel.Builder<ResourceProvision> builder = new ListViewPanel.Builder<ResourceProvision>(\n+        ListViewPanel.Builder<ResourceProvision> builder = new ListViewPanel.Builder<ResourceProvision>(\n                 ResourceProvision.class, pageRef) {\n \n             private static final long serialVersionUID = 4907732721283972943L;\n@@ -94,12 +94,12 @@ protected ResourceProvision getActualItem(\n                     final ResourceProvision item, final List<ResourceProvision> list) {\n \n                 return Optional.ofNullable(item)\n-                    .map(resourceProvision -> list.stream()\n+                        .map(resourceProvision -> list.stream()\n                         .filter(in -> ((resourceProvision.getKey() == null && in.getKey() == null)\n-                    || (in.getKey() != null && in.getKey().equals(resourceProvision.getKey())))\n-                    && ((resourceProvision.getAnyType() == null && in.getAnyType() == null)\n-                    || (in.getAnyType() != null && in.getAnyType().equals(resourceProvision.getAnyType())))).\n-                    findAny().orElse(null)).orElse(null);\n+                        || (in.getKey() != null && in.getKey().equals(resourceProvision.getKey())))\n+                        && ((resourceProvision.getAnyType() == null && in.getAnyType() == null)\n+                        || (in.getAnyType() != null && in.getAnyType().equals(resourceProvision.getAnyType())))).\n+                        findAny().orElse(null)).orElse(null);\n             }\n \n             @Override\n@@ -158,7 +158,7 @@ public void onClick(final AjaxRequestTarget target, final ResourceProvision prov\n                 } catch (SyncopeClientException e) {\n                     LOG.error(\"While contacting resource\", e);\n                     SyncopeConsoleSession.get().onException(e);\n-                    ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                    ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n                 }\n             }\n         }, ActionLink.ActionType.MAPPING, IdMEntitlement.RESOURCE_READ).\n@@ -176,7 +176,7 @@ public void onClick(final AjaxRequestTarget target, final ResourceProvision prov\n                                     resourceTO.getKey(), provision.getAnyType(), e);\n                             SyncopeConsoleSession.get().onException(e);\n                         }\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                        ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n                     }\n                 }, ActionLink.ActionType.SET_LATEST_SYNC_TOKEN, IdMEntitlement.RESOURCE_UPDATE).\n                 addAction(new ActionLink<ResourceProvision>() {\n@@ -193,7 +193,7 @@ public void onClick(final AjaxRequestTarget target, final ResourceProvision prov\n                                     resourceTO.getKey(), provision.getAnyType(), e);\n                             SyncopeConsoleSession.get().onException(e);\n                         }\n-                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                        ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n                     }\n                 }, ActionLink.ActionType.REMOVE_SYNC_TOKEN, IdMEntitlement.RESOURCE_UPDATE).\n                 addAction(new ActionLink<ResourceProvision>() {\n@@ -291,7 +291,7 @@ public void onSubmit(final AjaxRequestTarget target) {\n             LOG.error(\"While creating or updating {}\", resourceTO, e);\n             SyncopeConsoleSession.get().onException(e);\n         }\n-        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+        ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n     }\n \n     private void sortProvisions() {"},{"sha":"5e45a5600c0fec2e2cc63763c1217510bb4ca7f0","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/markup/html/form/AbstractMultiPanel.java","status":"modified","additions":12,"deletions":15,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAbstractMultiPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAbstractMultiPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fmarkup%2Fhtml%2Fform%2FAbstractMultiPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -32,6 +32,7 @@\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n+import org.springframework.util.CollectionUtils;\n \n public abstract class AbstractMultiPanel<INNER> extends AbstractFieldPanel<List<INNER>> {\n \n@@ -64,8 +65,8 @@ public AbstractMultiPanel(\n \n         view = new InnerView(\"view\", name, model);\n \n-        final List<INNER> obj = model.getObject();\n-        if (obj == null || obj.isEmpty()) {\n+        List<INNER> obj = model.getObject();\n+        if (CollectionUtils.isEmpty(obj)) {\n             form.addOrReplace(getNoDataFragment(model, name));\n         } else {\n             form.addOrReplace(getDataFragment());\n@@ -79,20 +80,20 @@ public AbstractMultiPanel<INNER> setFormAsMultipart(final boolean multipart) {\n     }\n \n     private Fragment getNoDataFragment(final IModel<List<INNER>> model, final String label) {\n-        final Fragment fragment = new Fragment(\"content\", \"noDataFragment\", AbstractMultiPanel.this);\n+        Fragment fragment = new Fragment(\"content\", \"noDataFragment\", AbstractMultiPanel.this);\n         fragment.add(new Label(\"field-label\", new ResourceModel(label, label)));\n         fragment.add(getPlusFragment(model));\n         return fragment;\n     }\n \n     private Fragment getDataFragment() {\n-        final Fragment contentFragment = new Fragment(\"content\", \"dataFragment\", AbstractMultiPanel.this);\n+        Fragment contentFragment = new Fragment(\"content\", \"dataFragment\", AbstractMultiPanel.this);\n         contentFragment.add(view.setOutputMarkupId(true));\n         return contentFragment;\n     }\n \n     private Fragment getPlusFragment(final IModel<List<INNER>> model) {\n-        final IndicatorAjaxSubmitLink plus = new IndicatorAjaxSubmitLink(\"add\") {\n+        IndicatorAjaxSubmitLink plus = new IndicatorAjaxSubmitLink(\"add\") {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -117,7 +118,7 @@ protected void onError(final AjaxRequestTarget target) {\n \n         };\n \n-        final Fragment fragment = new Fragment(\"panelPlus\", \"fragmentPlus\", AbstractMultiPanel.this);\n+        Fragment fragment = new Fragment(\"panelPlus\", \"fragmentPlus\", AbstractMultiPanel.this);\n         fragment.addOrReplace(plus);\n         fragment.setRenderBodyOnly(true);\n \n@@ -154,12 +155,11 @@ private InnerView(final String id, final String label, final IModel<List<INNER>>\n \n         @Override\n         protected void populateItem(final ListItem<INNER> item) {\n-\n-            final Panel panel = getItemPanel(item);\n+            Panel panel = getItemPanel(item);\n \n             item.add(panel.setRenderBodyOnly(true));\n \n-            final IndicatorAjaxSubmitLink minus = new IndicatorAjaxSubmitLink(\"drop\") {\n+            IndicatorAjaxSubmitLink minus = new IndicatorAjaxSubmitLink(\"drop\") {\n \n                 private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -184,12 +184,9 @@ protected void onError(final AjaxRequestTarget target) {\n \n             item.add(minus);\n \n-            final Fragment fragment;\n-            if (item.getIndex() == model.getObject().size() - 1) {\n-                fragment = getPlusFragment(model);\n-            } else {\n-                fragment = new Fragment(\"panelPlus\", \"emptyFragment\", AbstractMultiPanel.this);\n-            }\n+            Fragment fragment = item.getIndex() == model.getObject().size() - 1\n+                    ? getPlusFragment(model)\n+                    : new Fragment(\"panelPlus\", \"emptyFragment\", AbstractMultiPanel.this);\n \n             item.add(fragment.setRenderBodyOnly(true));\n         }"},{"sha":"3aa1d53ea8abdf13cb2ccc4c379659a6c5dee42d","filename":"client/idrepo/common-ui/src/main/resources/META-INF/resources/ui-commons/css/syncopeUI.scss","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2FsyncopeUI.scss","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2FsyncopeUI.scss","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fui-commons%2Fcss%2FsyncopeUI.scss?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -1039,7 +1039,7 @@ fieldset.input-group {\n \n .modal-content div.toggle-menu {\n   position: fixed;\n-  right: 20%;\n+  right: 200px;\n }\n \n .modal-body .box-body div.background-footer {\n@@ -1243,4 +1243,4 @@ pre {\n   border: none;\n   float: right;\n   margin-right:12px;\n-}\n\\ No newline at end of file\n+}"},{"sha":"84a2910bcadde19c139e0242bc6d4074a0572b41","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/Realms.java","status":"modified","additions":7,"deletions":20,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -30,7 +30,6 @@\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.any.ResultPage;\n import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal.WindowClosedCallback;\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n import org.apache.syncope.client.ui.commons.panels.WizardModalPanel;\n@@ -110,27 +109,15 @@ protected void onConfigure() {\n         templateModal.size(Modal.Size.Large);\n         content.add(templateModal);\n \n-        modal.setWindowClosedCallback(new WindowClosedCallback() {\n-\n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                target.add(realmChoicePanel.reloadRealmTree(target));\n-                target.add(content);\n-                modal.show(false);\n-            }\n+        modal.setWindowClosedCallback(target -> {\n+            target.add(realmChoicePanel.reloadRealmTree(target));\n+            target.add(content);\n+            modal.show(false);\n         });\n \n-        templateModal.setWindowClosedCallback(new WindowClosedCallback() {\n-\n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                target.add(content);\n-                templateModal.show(false);\n-            }\n+        templateModal.setWindowClosedCallback(target -> {\n+            target.add(content);\n+            templateModal.show(false);\n         });\n \n         updateRealmContent(realmChoicePanel.getCurrentRealm(), parameters.get(\"selectedIndex\").toInt(0));"},{"sha":"7e0402829719556ea2bda46db987cacf533c5e7b","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AbstractModalPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractModalPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -47,7 +47,7 @@\n     protected final PageReference pageRef;\n \n     public AbstractModalPanel(final BaseModal<T> modal, final PageReference pageRef) {\n-        this(BaseModal.getContentId(), modal, pageRef);\n+        this(BaseModal.CONTENT_ID, modal, pageRef);\n     }\n \n     public AbstractModalPanel(final String id, final BaseModal<T> modal, final PageReference pageRef) {"},{"sha":"55184d87a992b907ecd9a30d5a09b1f376a77964","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/AjaxDataTablePanel.java","status":"modified","additions":8,"deletions":15,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAjaxDataTablePanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -35,7 +35,6 @@\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CheckGroupColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AjaxFallbackDataTable;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal.WindowClosedCallback;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksTogglePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.wicket.AttributeModifier;\n@@ -176,22 +175,16 @@ private AjaxDataTablePanel(final String id, final Builder<T, S> builder) {\n         batchModal.size(Modal.Size.Default);\n         add(batchModal);\n \n-        batchModal.setWindowClosedCallback(new WindowClosedCallback() {\n+        batchModal.setWindowClosedCallback(target -> {\n+            batchModal.show(false);\n \n-            private static final long serialVersionUID = 8804221891699487149L;\n+            EventDataWrapper data = new EventDataWrapper();\n+            data.setTarget(target);\n+            data.setRows(builder.rowsPerPage);\n \n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                batchModal.show(false);\n-\n-                EventDataWrapper data = new EventDataWrapper();\n-                data.setTarget(target);\n-                data.setRows(builder.rowsPerPage);\n-\n-                send(builder.pageRef.getPage(), Broadcast.BREADTH, data);\n-                Optional.ofNullable((BasePage) findPage()).\n-                        ifPresent(page -> page.getNotificationPanel().refresh(target));\n-            }\n+            send(builder.pageRef.getPage(), Broadcast.BREADTH, data);\n+            Optional.ofNullable((BasePage) findPage()).\n+                    ifPresent(page -> page.getNotificationPanel().refresh(target));\n         });\n \n         Fragment fragment = new Fragment(\"tablePanel\", \"batchAvailable\", this);"},{"sha":"508f965c1f43296d53bf4800818612df5b136f9a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/BeanPanel.java","status":"modified","additions":12,"deletions":17,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBeanPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -26,7 +26,6 @@\n import java.util.List;\n import java.util.Map;\n import java.util.stream.Collectors;\n-import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.panels.search.AnyObjectSearchPanel;\n@@ -87,6 +86,7 @@ public BeanPanel(\n             final IModel<T> bean,\n             final Map<String, Pair<AbstractFiqlSearchConditionBuilder<?, ?, ?>, List<SearchClause>>> sCondWrapper,\n             final String... excluded) {\n+\n         super(id, bean);\n         setOutputMarkupId(true);\n \n@@ -118,48 +118,44 @@ protected List<String> load() {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n-            @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n+            @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n             @Override\n             protected void populateItem(final ListItem<String> item) {\n-                final String fieldName = item.getModelObject();\n+                String fieldName = item.getModelObject();\n \n                 item.add(new Label(\"fieldName\", new ResourceModel(fieldName, fieldName)));\n \n                 Field field = ReflectionUtils.findField(bean.getObject().getClass(), fieldName);\n-\n                 if (field == null) {\n                     return;\n                 }\n \n-                final SearchCondition scondAnnot = field.getAnnotation(SearchCondition.class);\n-                final Schema schemaAnnot = field.getAnnotation(Schema.class);\n+                SearchCondition scondAnnot = field.getAnnotation(SearchCondition.class);\n+                Schema schemaAnnot = field.getAnnotation(Schema.class);\n \n                 BeanWrapper wrapper = PropertyAccessorFactory.forBeanPropertyAccess(bean.getObject());\n \n                 Panel panel;\n \n                 if (scondAnnot != null) {\n-                    final String fiql = (String) wrapper.getPropertyValue(fieldName);\n+                    String fiql = (String) wrapper.getPropertyValue(fieldName);\n \n-                    final List<SearchClause> clauses;\n-                    if (StringUtils.isEmpty(fiql)) {\n-                        clauses = new ArrayList<>();\n-                    } else {\n-                        clauses = SearchUtils.getSearchClauses(fiql);\n-                    }\n+                    List<SearchClause> clauses = SearchUtils.getSearchClauses(fiql);\n \n-                    final AbstractFiqlSearchConditionBuilder<?, ?, ?> builder;\n+                    AbstractFiqlSearchConditionBuilder<?, ?, ?> builder;\n                     switch (scondAnnot.type()) {\n                         case \"USER\":\n                             panel = new UserSearchPanel.Builder(\n                                     new ListModel<>(clauses)).required(false).build(\"value\");\n                             builder = SyncopeClient.getUserSearchConditionBuilder();\n                             break;\n+\n                         case \"GROUP\":\n                             panel = new GroupSearchPanel.Builder(\n                                     new ListModel<>(clauses)).required(false).build(\"value\");\n                             builder = SyncopeClient.getGroupSearchConditionBuilder();\n                             break;\n+\n                         default:\n                             panel = new AnyObjectSearchPanel.Builder(\n                                     scondAnnot.type(),\n@@ -216,7 +212,7 @@ protected void populateItem(final ListItem<String> item) {\n                                 new PropertyModel<>(bean.getObject(), fieldName)).build(\n                                 \"value\",\n                                 fieldName,\n-                                buildSinglePanel(bean.getObject(), field.getType(), fieldName, \"panel\")).hideLabel();\n+                                buildSinglePanel(bean.getObject(), listItemType, fieldName, \"panel\")).hideLabel();\n                     }\n                 } else if (Map.class.equals(field.getType())) {\n                     panel = new AjaxGridFieldPanel(\n@@ -227,11 +223,10 @@ protected void populateItem(final ListItem<String> item) {\n \n                 item.add(panel.setRenderBodyOnly(true));\n             }\n-\n         }.setReuseItems(true).setOutputMarkupId(true));\n     }\n \n-    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     private static FieldPanel buildSinglePanel(\n             final Serializable bean, final Class<?> type, final String fieldName, final String id) {\n "},{"sha":"86a14142cd20ae055b2d21725484b16dc3f50009","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/NetworkServiceDirectoryPanel.java","status":"modified","additions":3,"deletions":11,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNetworkServiceDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNetworkServiceDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNetworkServiceDirectoryPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -27,13 +27,11 @@\n import org.apache.syncope.client.console.commons.IdRepoConstants;\n import org.apache.syncope.client.console.panels.NetworkServiceDirectoryPanel.NetworkServiceProvider;\n import org.apache.syncope.client.console.rest.SyncopeRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal.WindowClosedCallback;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n@@ -62,15 +60,9 @@ public NetworkServiceDirectoryPanel(final String id, final NetworkService.Type t\n \n         modal.size(Modal.Size.Large);\n         modal.addSubmitButton();\n-        modal.setWindowClosedCallback(new WindowClosedCallback() {\n-\n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                updateResultTable(target);\n-                modal.show(false);\n-            }\n+        modal.setWindowClosedCallback(target -> {\n+            updateResultTable(target);\n+            modal.show(false);\n         });\n         setFooterVisibility(true);\n "},{"sha":"fc5110a104b27aabfa59c269db0ee0b2ce47c8aa","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/UserDirectoryPanel.java","status":"modified","additions":3,"deletions":10,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -33,7 +33,6 @@\n import org.apache.syncope.client.console.rest.UserRestClient;\n import org.apache.syncope.client.console.status.ChangePasswordModal;\n import org.apache.syncope.client.console.tasks.AnyPropagationTasks;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal.WindowClosedCallback;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n@@ -71,15 +70,9 @@ protected UserDirectoryPanel(final String id, final Builder builder) {\n     protected UserDirectoryPanel(final String id, final Builder builder, final boolean wizardInModal) {\n         super(id, builder, wizardInModal);\n \n-        altDefaultModal.setWindowClosedCallback(new WindowClosedCallback() {\n-\n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                updateResultTable(target);\n-                modal.show(false);\n-            }\n+        altDefaultModal.setWindowClosedCallback(target -> {\n+            updateResultTable(target);\n+            modal.show(false);\n         });\n     }\n "},{"sha":"ea227089348851642d47dce2ed7c442e5eee7306","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/search/MapOfListModel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FMapOfListModel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FMapOfListModel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FMapOfListModel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -46,9 +46,9 @@ public List<T> getObject() {\n             throw new IllegalArgumentException(\"Property expressions cannot start with a '.' character\");\n         }\n \n-        final Map<String, List<T>> map = (Map<String, List<T>>) PropertyResolver.getValue(expression, target);\n+        Map<String, List<T>> map = (Map<String, List<T>>) PropertyResolver.getValue(expression, target);\n \n-        final List<T> res;\n+        List<T> res;\n         if (map.containsKey(key)) {\n             res = map.get(key);\n         } else {"},{"sha":"a965f2afefe7730f4d430a91d2515cac4b51e8a7","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchClausePanel.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -906,6 +906,7 @@ private void renderSearchValueField(\n                 ((AjaxTextFieldPanel) value).setChoices(Arrays.asList(\"true\", \"false\"));\n \n                 break;\n+\n             case Date:\n                 SimpleDateFormat df = DATE_FORMAT.get();\n                 df.applyPattern(SyncopeConstants.DEFAULT_DATE_PATTERN);\n@@ -972,6 +973,7 @@ public String getObject(\n                     });\n                 }\n                 break;\n+\n             case Long:\n                 value = new AjaxSpinnerFieldPanel.Builder<Long>().enableOnChange().build(\n                         \"value\","},{"sha":"1b7f00893f1d71d8386a97f68b36e481a05b5680","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/reports/ReportletDirectoryPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -30,14 +30,14 @@\n import org.apache.syncope.client.ui.commons.DirectoryDataProvider;\n import org.apache.syncope.client.console.commons.IdRepoConstants;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n-import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.DirectoryPanel;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.rest.ReportRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n+import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizard;\n import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n@@ -161,7 +161,7 @@ public void onClick(final AjaxRequestTarget target, final ReportletWrapper ignor\n                     LOG.error(\"While deleting {}\", reportlet.getName(), e);\n                     SyncopeConsoleSession.get().onException(e);\n                 }\n-                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n         }, ActionLink.ActionType.DELETE, IdRepoEntitlement.REPORT_UPDATE);\n \n@@ -261,7 +261,7 @@ public IModel<ReportletWrapper> model(final ReportletWrapper object) {\n     public void onEvent(final IEvent<?> event) {\n         super.onEvent(event);\n         if (event.getPayload() instanceof ExitEvent) {\n-            final AjaxRequestTarget target = ExitEvent.class.cast(event.getPayload()).getTarget();\n+            AjaxRequestTarget target = ExitEvent.class.cast(event.getPayload()).getTarget();\n             baseModal.show(false);\n             baseModal.close(target);\n         }"},{"sha":"bb79625f4356fe8f84018c929cd98384fe208242","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/BooleanConditionColumn.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FBooleanConditionColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FBooleanConditionColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FBooleanConditionColumn.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+\n+public abstract class BooleanConditionColumn<T> extends AbstractColumn<T, String> {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    public BooleanConditionColumn(final IModel<String> displayModel) {\n+        super(displayModel);\n+    }\n+\n+    protected abstract boolean isCondition(IModel<T> rowModel);\n+\n+    @Override\n+    public void populateItem(final Item<ICellPopulator<T>> item, final String componentId, final IModel<T> rowModel) {\n+        item.add(new Label(componentId, StringUtils.EMPTY));\n+        if (isCondition(rowModel)) {\n+            item.add(new AttributeModifier(\"class\", \"fa fa-check\"));\n+            item.add(new AttributeModifier(\"style\", \"display: table-cell; text-align: center;\"));\n+        }\n+    }\n+}"},{"sha":"da6d44ae9369170fcf1f21e394905976b2584a88","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/BooleanPropertyColumn.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FBooleanPropertyColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FBooleanPropertyColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FBooleanPropertyColumn.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -37,7 +37,9 @@\n \n     private static final long serialVersionUID = 3527840552172947705L;\n \n-    public BooleanPropertyColumn(final IModel<String> displayModel, final String sortProperty,\n+    public BooleanPropertyColumn(\n+            final IModel<String> displayModel,\n+            final String sortProperty,\n             final String propertyExpression) {\n \n         super(displayModel, sortProperty, propertyExpression);"},{"sha":"8d93623cfe22939044a242a9c00479177df4f59a","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/DatePropertyColumn.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FDatePropertyColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FDatePropertyColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FDatePropertyColumn.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -33,7 +33,9 @@\n \n     private static final long serialVersionUID = 3527840552172947705L;\n \n-    public DatePropertyColumn(final IModel<String> displayModel, final String sortProperty,\n+    public DatePropertyColumn(\n+            final IModel<String> displayModel,\n+            final String sortProperty,\n             final String propertyExpression) {\n \n         super(displayModel, sortProperty, propertyExpression);"},{"sha":"c6bcf9e276cda6973cda33654ff33bd3c35dd613","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/bootstrap/dialog/BaseModal.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fbootstrap%2Fdialog%2FBaseModal.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -168,9 +168,9 @@ public BaseModal<T> changeCloseButtonLabel(final String label, final AjaxRequest\n     }\n \n     private BaseModal<T> setInternalContent(final Panel component) {\n-        if (!component.getId().equals(getContentId())) {\n+        if (!component.getId().equals(CONTENT_ID)) {\n             throw new WicketRuntimeException(\"Modal content id is wrong. \"\n-                    + \"Component ID: \" + component.getId() + \"; content ID: \" + getContentId());\n+                    + \"Component ID: \" + component.getId() + \"; content ID: \" + CONTENT_ID);\n         }\n \n         content.replaceWith(component);\n@@ -179,10 +179,6 @@ private BaseModal<T> setInternalContent(final Panel component) {\n         return this;\n     }\n \n-    public static String getContentId() {\n-        return CONTENT_ID;\n-    }\n-\n     public BaseModal<T> setWindowClosedCallback(final WindowClosedCallback callback) {\n         windowClosedCallback = callback;\n         return this;"},{"sha":"75df2b639c7d3baec01971944da3a65687c506e2","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksTogglePanel.java","status":"modified","additions":1,"deletions":10,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksTogglePanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -47,7 +47,6 @@\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.syncope.client.console.panels.ToggleableTarget;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal.WindowClosedCallback;\n import org.apache.syncope.common.keymaster.client.api.model.Domain;\n import org.apache.syncope.common.lib.to.NamedEntityTO;\n \n@@ -130,15 +129,7 @@ public void toggleWithContent(\n \n         updateHeader(target, modelObject);\n \n-        modal.setWindowClosedCallback(new WindowClosedCallback() {\n-\n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                modal.show(false);\n-            }\n-        });\n+        modal.setWindowClosedCallback(t -> modal.show(false));\n \n         Fragment frag = new Fragment(\"actions\", \"actionsFragment\", this);\n         frag.setOutputMarkupId(true);"},{"sha":"73cce5b486e6ce84c04685ed15f76bdd856d4716","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/MultiFieldPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiFieldPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -86,7 +86,7 @@ protected E newModelObject() {\n \n                 @Override\n                 protected FieldPanel<? extends Serializable> getItemPanel(final ListItem<E> item) {\n-                    final FieldPanel<? extends Serializable> fieldPanel = panelTemplate.clone();\n+                    FieldPanel<? extends Serializable> fieldPanel = panelTemplate.clone();\n                     fieldPanel.setIndex(item.getIndex());\n                     fieldPanel.setNewModel(item);\n                     fieldPanel.settingsDependingComponents();"},{"sha":"d888ab8823330d69f6af0e19fa56a5175eac6a57","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -27,7 +27,6 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.ui.commons.Constants;\n-import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wizards.any.ResultPage;\n import org.apache.wicket.Component;\n@@ -47,6 +46,7 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.StringResourceModel;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksTogglePanel;\n+import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n import org.apache.syncope.client.ui.commons.panels.NotificationPanel;\n import org.apache.syncope.client.ui.commons.panels.WizardModalPanel;\n import org.apache.syncope.client.ui.commons.wizards.AbstractWizardMgtPanel;\n@@ -170,15 +170,15 @@ public String getActualId() {\n     @SuppressWarnings(\"unchecked\")\n     public void onEvent(final IEvent<?> event) {\n         if (event.getPayload() instanceof ExitEvent) {\n-            final AjaxRequestTarget target = ExitEvent.class.cast(event.getPayload()).getTarget();\n+            AjaxRequestTarget target = ExitEvent.class.cast(event.getPayload()).getTarget();\n             // default behaviour: change it catching the event if needed\n             modal.close(target);\n         } else if (event.getPayload() instanceof AjaxWizard.NewItemEvent) {\n-            final AjaxWizard.NewItemEvent<T> newItemEvent = AjaxWizard.NewItemEvent.class.cast(event.getPayload());\n-            final Optional<AjaxRequestTarget> target = newItemEvent.getTarget();\n-            final T item = newItemEvent.getItem();\n+            AjaxWizard.NewItemEvent<T> newItemEvent = AjaxWizard.NewItemEvent.class.cast(event.getPayload());\n+            Optional<AjaxRequestTarget> target = newItemEvent.getTarget();\n+            T item = newItemEvent.getItem();\n \n-            final boolean modalPanelAvailable = newItemEvent.getModalPanel() != null || newItemPanelBuilder != null;\n+            boolean modalPanelAvailable = newItemEvent.getModalPanel() != null || newItemPanelBuilder != null;\n \n             if (event.getPayload() instanceof AjaxWizard.NewItemActionEvent && modalPanelAvailable) {\n                 WizardModalPanel<?> modalPanel;\n@@ -198,7 +198,7 @@ public void onEvent(final IEvent<?> event) {\n                 }\n \n                 if (wizardInModal) {\n-                    final IModel<T> model = new CompoundPropertyModel<>(item);\n+                    IModel<T> model = new CompoundPropertyModel<>(item);\n                     modal.setFormModel(model);\n \n                     target.ifPresent(t -> t.add(modal.setContent(modalPanel)));\n@@ -209,7 +209,7 @@ public void onEvent(final IEvent<?> event) {\n                             new Model<>(modalPanel.getItem())));\n                     modal.show(true);\n                 } else {\n-                    final Fragment fragment = new Fragment(\"content\", \"wizard\", WizardMgtPanel.this);\n+                    Fragment fragment = new Fragment(\"content\", \"wizard\", WizardMgtPanel.this);\n \n                     fragment.add(new Label(\"title\", newItemEvent.getResourceModel() == null\n                             ? Model.of(StringUtils.EMPTY) : newItemEvent.getResourceModel()));\n@@ -234,7 +234,7 @@ public void onEvent(final IEvent<?> event) {\n             } else if (event.getPayload() instanceof AjaxWizard.NewItemFinishEvent) {\n                 SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n                 if (target.isPresent()) {\n-                    ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target.get());\n+                    ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target.get());\n                 }\n \n                 if (wizardInModal && showResultPage) {"},{"sha":"422a8c7fe7afc83018f2d9f93a663b67a8c69aa8","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/to/AuthProfileTO.java","status":"modified","additions":31,"deletions":12,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAuthProfileTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAuthProfileTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAuthProfileTO.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -28,8 +28,9 @@\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.wa.GoogleMfaAuthAccount;\n import org.apache.syncope.common.lib.wa.GoogleMfaAuthToken;\n+import org.apache.syncope.common.lib.wa.ImpersonationAccount;\n import org.apache.syncope.common.lib.wa.U2FDevice;\n-import org.apache.syncope.common.lib.wa.WebAuthnAccount;\n+import org.apache.syncope.common.lib.wa.WebAuthnDeviceCredential;\n \n public class AuthProfileTO implements EntityTO {\n \n@@ -94,8 +95,18 @@ public AuthProfileTO.Builder u2fRegisteredDevices(final Collection<U2FDevice> de\n             return this;\n         }\n \n-        public AuthProfileTO.Builder webAuthnAccount(final WebAuthnAccount webAuthnAccount) {\n-            instance.setWebAuthnAccount(webAuthnAccount);\n+        public AuthProfileTO.Builder credential(final WebAuthnDeviceCredential credential) {\n+            instance.getWebAuthnDeviceCredentials().add(credential);\n+            return this;\n+        }\n+\n+        public AuthProfileTO.Builder credentials(final WebAuthnDeviceCredential... credentials) {\n+            instance.getWebAuthnDeviceCredentials().addAll(List.of(credentials));\n+            return this;\n+        }\n+\n+        public AuthProfileTO.Builder credentials(final Collection<WebAuthnDeviceCredential> credentials) {\n+            instance.getWebAuthnDeviceCredentials().addAll(credentials);\n             return this;\n         }\n \n@@ -108,13 +119,15 @@ public AuthProfileTO build() {\n \n     private String owner;\n \n+    private final List<ImpersonationAccount> impersonationAccounts = new ArrayList<>();\n+\n     private final List<GoogleMfaAuthToken> googleMfaAuthTokens = new ArrayList<>();\n \n     private final List<GoogleMfaAuthAccount> googleMfaAuthAccounts = new ArrayList<>();\n \n     private final List<U2FDevice> u2fRegisteredDevices = new ArrayList<>();\n \n-    private WebAuthnAccount webAuthnAccount;\n+    private final List<WebAuthnDeviceCredential> webAuthnDeviceCredentials = new ArrayList<>();\n \n     @Override\n     public String getKey() {\n@@ -135,6 +148,12 @@ public void setOwner(final String owner) {\n         this.owner = owner;\n     }\n \n+    @JacksonXmlElementWrapper(localName = \"impersonationAccounts\")\n+    @JacksonXmlProperty(localName = \"impersonationAccount\")\n+    public List<ImpersonationAccount> getImpersonationAccounts() {\n+        return impersonationAccounts;\n+    }\n+\n     @JacksonXmlElementWrapper(localName = \"googleMfaAuthTokens\")\n     @JacksonXmlProperty(localName = \"googleMfaAuthToken\")\n     public List<GoogleMfaAuthToken> getGoogleMfaAuthTokens() {\n@@ -153,23 +172,22 @@ public List<U2FDevice> getU2FRegisteredDevices() {\n         return u2fRegisteredDevices;\n     }\n \n-    public WebAuthnAccount getWebAuthnAccount() {\n-        return webAuthnAccount;\n-    }\n-\n-    public void setWebAuthnAccount(final WebAuthnAccount webAuthnAccount) {\n-        this.webAuthnAccount = webAuthnAccount;\n+    @JacksonXmlElementWrapper(localName = \"credentials\")\n+    @JacksonXmlProperty(localName = \"credential\")\n+    public List<WebAuthnDeviceCredential> getWebAuthnDeviceCredentials() {\n+        return webAuthnDeviceCredentials;\n     }\n \n     @Override\n     public int hashCode() {\n         return new HashCodeBuilder().\n                 append(key).\n                 append(owner).\n+                append(impersonationAccounts).\n                 append(googleMfaAuthTokens).\n                 append(googleMfaAuthAccounts).\n                 append(u2fRegisteredDevices).\n-                append(webAuthnAccount).\n+                append(webAuthnDeviceCredentials).\n                 build();\n     }\n \n@@ -188,10 +206,11 @@ public boolean equals(final Object obj) {\n         return new EqualsBuilder().\n                 append(key, other.key).\n                 append(owner, other.owner).\n+                append(impersonationAccounts, other.impersonationAccounts).\n                 append(googleMfaAuthTokens, other.googleMfaAuthTokens).\n                 append(googleMfaAuthAccounts, other.googleMfaAuthAccounts).\n                 append(u2fRegisteredDevices, other.u2fRegisteredDevices).\n-                append(webAuthnAccount, other.webAuthnAccount).\n+                append(webAuthnDeviceCredentials, other.webAuthnDeviceCredentials).\n                 build();\n     }\n }"},{"sha":"7de374e998d24f83cf3470c803f52417cb396b7e","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/types/AMEntitlement.java","status":"modified","additions":3,"deletions":41,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAMEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAMEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAMEntitlement.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -70,44 +70,22 @@ public final class AMEntitlement {\n \n     public static final String SAML2_SP_ENTITY_GET = \"SAML2_SP_ENTITY_GET\";\n \n-    public static final String GOOGLE_MFA_DELETE_TOKEN = \"GOOGLE_MFA_DELETE_TOKEN\";\n-\n-    public static final String GOOGLE_MFA_STORE_TOKEN = \"GOOGLE_MFA_STORE_TOKEN\";\n-\n-    public static final String GOOGLE_MFA_READ_TOKEN = \"GOOGLE_MFA_READ_TOKEN\";\n+    public static final String AUTH_PROFILE_DELETE = \"AUTH_PROFILE_DELETE\";\n \n-    public static final String GOOGLE_MFA_LIST_TOKENS = \"GOOGLE_MFA_LIST_TOKENS\";\n+    public static final String AUTH_PROFILE_CREATE = \"AUTH_PROFILE_CREATE\";\n \n-    public static final String AUTH_PROFILE_DELETE = \"AUTH_PROFILE_DELETE\";\n+    public static final String AUTH_PROFILE_UPDATE = \"AUTH_PROFILE_UPDATE\";\n \n     public static final String AUTH_PROFILE_READ = \"AUTH_PROFILE_READ\";\n \n     public static final String AUTH_PROFILE_LIST = \"AUTH_PROFILE_LIST\";\n \n-    public static final String GOOGLE_MFA_DELETE_ACCOUNT = \"GOOGLE_MFA_DELETE_ACCOUNT\";\n-\n-    public static final String GOOGLE_MFA_CREATE_ACCOUNT = \"GOOGLE_MFA_CREATE_ACCOUNT\";\n-\n-    public static final String GOOGLE_MFA_UPDATE_ACCOUNT = \"GOOGLE_MFA_UPDATE_ACCOUNT\";\n-\n-    public static final String GOOGLE_MFA_READ_ACCOUNT = \"GOOGLE_MFA_READ_ACCOUNT\";\n-\n-    public static final String GOOGLE_MFA_LIST_ACCOUNTS = \"GOOGLE_MFA_LIST_ACCOUNTS\";\n-\n     public static final String OIDC_JWKS_GENERATE = \"OIDC_JWKS_GENERATE\";\n \n     public static final String OIDC_JWKS_READ = \"OIDC_JWKS_READ\";\n \n     public static final String OIDC_JWKS_DELETE = \"OIDC_JWKS_DELETE\";\n \n-    public static final String U2F_DELETE_DEVICE = \"U2F_DELETE_DEVICE\";\n-\n-    public static final String U2F_CREATE_DEVICE = \"U2F_CREATE_DEVICE\";\n-\n-    public static final String U2F_READ_DEVICE = \"U2F_READ_DEVICE\";\n-\n-    public static final String U2F_SEARCH_DEVICES = \"U2F_SEARCH_DEVICES\";\n-\n     public static final String WA_CONFIG_LIST = \"WA_CONFIG_LIST\";\n \n     public static final String WA_CONFIG_SET = \"WA_CONFIG_SET\";\n@@ -118,22 +96,6 @@ public final class AMEntitlement {\n \n     public static final String WA_CONFIG_PUSH = \"WA_CONFIG_PUSH\";\n \n-    public static final String WEBAUTHN_DELETE_DEVICE = \"WEBAUTHN_DELETE_DEVICE\";\n-\n-    public static final String WEBAUTHN_READ_DEVICE = \"WEBAUTHN_READ_DEVICE\";\n-\n-    public static final String WEBAUTHN_UPDATE_DEVICE = \"WEBAUTHN_UPDATE_DEVICE\";\n-\n-    public static final String WEBAUTHN_CREATE_DEVICE = \"WEBAUTHN_CREATE_DEVICE\";\n-\n-    public static final String WEBAUTHN_LIST_DEVICE = \"WEBAUTHN_LIST_DEVICE\";\n-\n-    public static final String IMPERSONATION_CREATE_ACCOUNT = \"IMPERSONATION_CREATE_ACCOUNT\";\n-\n-    public static final String IMPERSONATION_DELETE_ACCOUNT = \"IMPERSONATION_DELETE_ACCOUNT\";\n-\n-    public static final String IMPERSONATION_READ_ACCOUNT = \"IMPERSONATION_READ_ACCOUNT\";\n-\n     private static final Set<String> VALUES;\n \n     static {"},{"sha":"8a185bcf19da6339a799828b288854d33a846400","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/wa/GoogleMfaAuthAccount.java","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FGoogleMfaAuthAccount.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FGoogleMfaAuthAccount.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FGoogleMfaAuthAccount.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -135,7 +135,6 @@ public void setRegistrationDate(final Date registrationDate) {\n     @Override\n     public int hashCode() {\n         return new HashCodeBuilder()\n-                .appendSuper(super.hashCode())\n                 .append(secretKey)\n                 .append(name)\n                 .append(id)\n@@ -156,15 +155,14 @@ public boolean equals(final Object obj) {\n         if (obj.getClass() != getClass()) {\n             return false;\n         }\n-        GoogleMfaAuthAccount rhs = (GoogleMfaAuthAccount) obj;\n+        GoogleMfaAuthAccount other = (GoogleMfaAuthAccount) obj;\n         return new EqualsBuilder()\n-                .appendSuper(super.equals(obj))\n-                .append(this.secretKey, rhs.secretKey)\n-                .append(this.name, rhs.name)\n-                .append(this.id, rhs.id)\n-                .append(this.scratchCodes, rhs.scratchCodes)\n-                .append(this.registrationDate, rhs.registrationDate)\n-                .append(this.validationCode, rhs.validationCode)\n+                .append(this.secretKey, other.secretKey)\n+                .append(this.name, other.name)\n+                .append(this.id, other.id)\n+                .append(this.scratchCodes, other.scratchCodes)\n+                .append(this.registrationDate, other.registrationDate)\n+                .append(this.validationCode, other.validationCode)\n                 .isEquals();\n     }\n "},{"sha":"a19d6eca138c098f55266cbc39fa1af06a143aab","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/wa/GoogleMfaAuthToken.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FGoogleMfaAuthToken.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FGoogleMfaAuthToken.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FGoogleMfaAuthToken.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -73,7 +73,6 @@ public void setIssueDate(final Date issueDate) {\n     @Override\n     public int hashCode() {\n         return new HashCodeBuilder()\n-                .appendSuper(super.hashCode())\n                 .append(otp)\n                 .append(issueDate)\n                 .toHashCode();\n@@ -90,11 +89,10 @@ public boolean equals(final Object obj) {\n         if (obj.getClass() != getClass()) {\n             return false;\n         }\n-        GoogleMfaAuthToken rhs = (GoogleMfaAuthToken) obj;\n+        GoogleMfaAuthToken other = (GoogleMfaAuthToken) obj;\n         return new EqualsBuilder()\n-                .appendSuper(super.equals(obj))\n-                .append(this.otp, rhs.otp)\n-                .append(this.issueDate, rhs.issueDate)\n+                .append(this.otp, other.otp)\n+                .append(this.issueDate, other.issueDate)\n                 .isEquals();\n     }\n "},{"sha":"6936b6363ac4a7c8dc3a326185dda6fbef103e24","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/wa/ImpersonationAccount.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FImpersonationAccount.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FImpersonationAccount.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FImpersonationAccount.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -69,16 +69,16 @@ public boolean equals(final Object obj) {\n         if (obj.getClass() != getClass()) {\n             return false;\n         }\n-        ImpersonationAccount rhs = (ImpersonationAccount) obj;\n+        ImpersonationAccount other = (ImpersonationAccount) obj;\n         return new EqualsBuilder()\n-                .append(this.impersonated, rhs.impersonated)\n+                .append(this.impersonated, other.impersonated)\n                 .isEquals();\n     }\n \n     @Override\n     public String toString() {\n         return new ToStringBuilder(this)\n-                .append(\"key\", impersonated)\n+                .append(\"impersonated\", impersonated)\n                 .toString();\n     }\n }"},{"sha":"106b9b6fd1484682d79dd506adb921a29212927f","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/wa/U2FDevice.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FU2FDevice.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FU2FDevice.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FU2FDevice.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -88,7 +88,6 @@ public void setIssueDate(final Date issueDate) {\n     @Override\n     public int hashCode() {\n         return new HashCodeBuilder()\n-                .appendSuper(super.hashCode())\n                 .append(record)\n                 .append(id)\n                 .append(issueDate)\n@@ -106,12 +105,11 @@ public boolean equals(final Object obj) {\n         if (obj.getClass() != getClass()) {\n             return false;\n         }\n-        U2FDevice rhs = (U2FDevice) obj;\n+        U2FDevice other = (U2FDevice) obj;\n         return new EqualsBuilder()\n-                .appendSuper(super.equals(obj))\n-                .append(this.record, rhs.record)\n-                .append(this.id, rhs.id)\n-                .append(this.issueDate, rhs.issueDate)\n+                .append(this.record, other.record)\n+                .append(this.id, other.id)\n+                .append(this.issueDate, other.issueDate)\n                 .isEquals();\n     }\n "},{"sha":"40db6cfe540d914cae7510019a15e4e6b2f0f73d","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/wa/WebAuthnDeviceCredential.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FWebAuthnDeviceCredential.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FWebAuthnDeviceCredential.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fwa%2FWebAuthnDeviceCredential.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -69,7 +69,6 @@ public void setJson(final String json) {\n     @Override\n     public int hashCode() {\n         return new HashCodeBuilder()\n-                .appendSuper(super.hashCode())\n                 .append(json)\n                 .append(identifier)\n                 .toHashCode();\n@@ -86,11 +85,10 @@ public boolean equals(final Object obj) {\n         if (obj.getClass() != getClass()) {\n             return false;\n         }\n-        WebAuthnDeviceCredential rhs = (WebAuthnDeviceCredential) obj;\n+        WebAuthnDeviceCredential other = (WebAuthnDeviceCredential) obj;\n         return new EqualsBuilder()\n-                .appendSuper(super.equals(obj))\n-                .append(this.json, rhs.json)\n-                .append(this.identifier, rhs.identifier)\n+                .append(this.json, other.json)\n+                .append(this.identifier, other.identifier)\n                 .isEquals();\n     }\n "},{"sha":"ad75ce0d06532999010bd3c05a11d1209c000f4d","filename":"common/am/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AuthProfileService.java","status":"modified","additions":62,"deletions":9,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAuthProfileService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAuthProfileService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAuthProfileService.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -18,6 +18,13 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import static org.apache.syncope.common.rest.api.service.JAXRSService.PARAM_PAGE;\n+import static org.apache.syncope.common.rest.api.service.JAXRSService.PARAM_SIZE;\n+\n+import io.swagger.v3.oas.annotations.headers.Header;\n+import io.swagger.v3.oas.annotations.media.Schema;\n+import io.swagger.v3.oas.annotations.responses.ApiResponse;\n+import io.swagger.v3.oas.annotations.responses.ApiResponses;\n import javax.validation.constraints.NotNull;\n import javax.ws.rs.Consumes;\n import javax.ws.rs.DELETE;\n@@ -26,11 +33,18 @@\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n-import java.util.List;\n import io.swagger.v3.oas.annotations.security.SecurityRequirement;\n import io.swagger.v3.oas.annotations.security.SecurityRequirements;\n import io.swagger.v3.oas.annotations.tags.Tag;\n+import javax.validation.constraints.Min;\n+import javax.ws.rs.DefaultValue;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.PUT;\n+import javax.ws.rs.QueryParam;\n+import javax.ws.rs.core.HttpHeaders;\n+import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.AuthProfileTO;\n+import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n \n /**\n@@ -43,31 +57,70 @@\n @Path(\"authProfiles\")\n public interface AuthProfileService extends JAXRSService {\n \n+    /**\n+     * Returns the paginated list of existing auth profiles.\n+     *\n+     * @param page search page\n+     * @param size search page size\n+     * @return the paginated list of existing auth profiles\n+     */\n     @GET\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    List<AuthProfileTO> list();\n+    PagedResult<AuthProfileTO> list(\n+            @Min(1) @QueryParam(PARAM_PAGE) @DefaultValue(\"1\") int page,\n+            @Min(1) @QueryParam(PARAM_SIZE) @DefaultValue(\"25\") int size);\n \n+    /**\n+     * Returns the auth profile matching the provided if key, if found.\n+     *\n+     * @param key auth profile key\n+     * @return auth profile matching the provided if key, if found\n+     */\n     @GET\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     AuthProfileTO read(@NotNull @PathParam(\"key\") String key);\n \n-    @GET\n-    @Path(\"owners/{owner}\")\n+    /**\n+     * Create a new auth profile.\n+     *\n+     * @param authProfileTO auth profile to create\n+     * @return Response object featuring Location header of created client app\n+     */\n+    @ApiResponses(\n+            @ApiResponse(responseCode = \"201\",\n+                    description = \"AuthProfile successfully created\", headers = {\n+                @Header(name = RESTHeaders.RESOURCE_KEY, schema =\n+                        @Schema(type = \"string\"),\n+                        description = \"UUID generated for the entity created\"),\n+                @Header(name = HttpHeaders.LOCATION, schema =\n+                        @Schema(type = \"string\"),\n+                        description = \"URL of the entity created\") }))\n+    @POST\n     @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    AuthProfileTO readByOwner(@NotNull @PathParam(\"owner\") String owner);\n+    Response create(@NotNull AuthProfileTO authProfileTO);\n \n-    @DELETE\n+    /**\n+     * Updates the auth profile matching the provided if key, if found.\n+     *\n+     * @param authProfileTO auth profile\n+     */\n+    @PUT\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    void delete(@NotNull @PathParam(\"key\") String key);\n+    void update(@NotNull AuthProfileTO authProfileTO);\n \n+    /**\n+     * Deletes the auth profile matching the provided if key, if found.\n+     *\n+     * @param key auth profile key\n+     */\n     @DELETE\n-    @Path(\"owners/{owner}\")\n+    @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    void deleteByOwner(@NotNull @PathParam(\"owner\") String owner);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n }"},{"sha":"160a5089d8d8de14e4508e998208c205151a08ac","filename":"core/am/logic/src/main/java/org/apache/syncope/core/logic/AuthProfileLogic.java","status":"modified","additions":22,"deletions":18,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAuthProfileLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAuthProfileLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAuthProfileLogic.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -19,7 +19,9 @@\n package org.apache.syncope.core.logic;\n \n import java.util.List;\n+import java.util.Optional;\n import java.util.stream.Collectors;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.to.AuthProfileTO;\n import org.apache.syncope.common.lib.types.AMEntitlement;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n@@ -36,35 +38,37 @@ public void delete(final String key) {\n         authProfileDAO.delete(key);\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.AUTH_PROFILE_DELETE + \"') \")\n-    public void deleteByOwner(final String owner) {\n-        authProfileDAO.findByOwner(owner).ifPresent(authProfileDAO::delete);\n-    }\n-\n     @PreAuthorize(\"hasRole('\" + AMEntitlement.AUTH_PROFILE_READ + \"') \")\n     @Transactional(readOnly = true)\n-    public AuthProfileTO readByOwner(final String owner) {\n-        return authProfileDAO.findByOwner(owner).\n+    public AuthProfileTO read(final String key) {\n+        return Optional.ofNullable(authProfileDAO.find(key)).\n                 map(binder::getAuthProfileTO).\n-                orElseThrow(() -> new NotFoundException(owner + \" not found\"));\n+                orElseThrow(() -> new NotFoundException(key + \" not found\"));\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.AUTH_PROFILE_READ + \"') \")\n-    @Transactional(readOnly = true)\n-    public AuthProfileTO read(final String key) {\n-        AuthProfile authProfile = authProfileDAO.find(key);\n-        if (authProfile == null) {\n-            throw new NotFoundException(key + \" not found\");\n-        }\n-        return binder.getAuthProfileTO(authProfile);\n+    @PreAuthorize(\"hasRole('\" + AMEntitlement.AUTH_PROFILE_CREATE + \"') \")\n+    public AuthProfileTO create(final AuthProfileTO authProfileTO) {\n+        return binder.getAuthProfileTO(authProfileDAO.save(binder.create(authProfileTO)));\n+    }\n+\n+    @PreAuthorize(\"hasRole('\" + AMEntitlement.AUTH_PROFILE_UPDATE + \"') \")\n+    public void update(final AuthProfileTO authProfileTO) {\n+        AuthProfile authProfile = Optional.ofNullable(authProfileDAO.find(authProfileTO.getKey())).\n+                orElseThrow(() -> new NotFoundException(authProfileTO.getKey() + \" not found\"));\n+        binder.update(authProfile, authProfileTO);\n+        authProfileDAO.save(authProfile);\n     }\n \n     @PreAuthorize(\"hasRole('\" + AMEntitlement.AUTH_PROFILE_LIST + \"')\")\n     @Transactional(readOnly = true)\n-    public List<AuthProfileTO> list() {\n-        return authProfileDAO.findAll().\n+    public Pair<Integer, List<AuthProfileTO>> list(final int page, final int size) {\n+        int count = authProfileDAO.count();\n+\n+        List<AuthProfileTO> result = authProfileDAO.findAll(page, size).\n                 stream().\n                 map(binder::getAuthProfileTO).\n                 collect(Collectors.toList());\n+\n+        return Pair.of(count, result);\n     }\n }"},{"sha":"6630b0d90896997b15baf8a250ca851d8d2a56e4","filename":"core/am/logic/src/main/java/org/apache/syncope/core/logic/wa/GoogleMfaAuthAccountLogic.java","status":"modified","additions":10,"deletions":18,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FGoogleMfaAuthAccountLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FGoogleMfaAuthAccountLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FGoogleMfaAuthAccountLogic.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -21,7 +21,6 @@\n import java.util.List;\n import java.util.Objects;\n import java.util.stream.Collectors;\n-import org.apache.syncope.common.lib.types.AMEntitlement;\n import org.apache.syncope.common.lib.wa.GoogleMfaAuthAccount;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.core.logic.AbstractAuthProfileLogic;\n@@ -39,38 +38,34 @@ public class GoogleMfaAuthAccountLogic extends AbstractAuthProfileLogic {\n     @Autowired\n     private EntityFactory entityFactory;\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_LIST_ACCOUNTS + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     @Transactional(readOnly = true)\n     public List<GoogleMfaAuthAccount> list() {\n-        return authProfileDAO.findAll().\n+        return authProfileDAO.findAll(-1, -1).\n                 stream().\n                 map(AuthProfile::getGoogleMfaAuthAccounts).\n                 filter(Objects::nonNull).\n                 flatMap(List::stream).\n                 collect(Collectors.toList());\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_DELETE_ACCOUNT + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void deleteFor(final String owner) {\n         authProfileDAO.findByOwner(owner).ifPresent(profile -> {\n             profile.setGoogleMfaAuthAccounts(List.of());\n             authProfileDAO.save(profile);\n         });\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_DELETE_ACCOUNT + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void deleteAll() {\n-        authProfileDAO.findAll().forEach(profile -> {\n+        authProfileDAO.findAll(-1, -1).forEach(profile -> {\n             profile.setGoogleMfaAuthAccounts(List.of());\n             authProfileDAO.save(profile);\n         });\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_CREATE_ACCOUNT + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void create(final String owner, final GoogleMfaAuthAccount account) {\n         AuthProfile profile = authProfileDAO.findByOwner(owner).orElseGet(() -> {\n             AuthProfile authProfile = entityFactory.newEntity(AuthProfile.class);\n@@ -84,8 +79,7 @@ public void create(final String owner, final GoogleMfaAuthAccount account) {\n         authProfileDAO.save(profile);\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_UPDATE_ACCOUNT + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void update(final String owner, final GoogleMfaAuthAccount account) {\n         AuthProfile authProfile = authProfileDAO.findByOwner(owner).\n                 orElseThrow(() -> new NotFoundException(\"Could not find account for Owner \" + owner));\n@@ -97,8 +91,7 @@ public void update(final String owner, final GoogleMfaAuthAccount account) {\n         }\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_READ_ACCOUNT + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public List<GoogleMfaAuthAccount> read(final String owner) {\n         return authProfileDAO.findByOwner(owner).\n                 stream().\n@@ -109,11 +102,10 @@ public List<GoogleMfaAuthAccount> read(final String owner) {\n                 orElseThrow(() -> new NotFoundException(\"Could not find account for Owner \" + owner));\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_READ_ACCOUNT + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     @Transactional(readOnly = true)\n     public GoogleMfaAuthAccount read(final long id) {\n-        return authProfileDAO.findAll().\n+        return authProfileDAO.findAll(-1, -1).\n                 stream().\n                 map(AuthProfile::getGoogleMfaAuthAccounts).\n                 filter(Objects::nonNull)."},{"sha":"b5d445bd89fd4d467e226c33dd1d1ed421bf725a","filename":"core/am/logic/src/main/java/org/apache/syncope/core/logic/wa/GoogleMfaAuthTokenLogic.java","status":"modified","additions":13,"deletions":23,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FGoogleMfaAuthTokenLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FGoogleMfaAuthTokenLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FGoogleMfaAuthTokenLogic.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -22,7 +22,6 @@\n import java.util.List;\n import java.util.function.Predicate;\n import java.util.stream.Collectors;\n-import org.apache.syncope.common.lib.types.AMEntitlement;\n import org.apache.syncope.common.lib.wa.GoogleMfaAuthToken;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.core.logic.AbstractAuthProfileLogic;\n@@ -40,47 +39,41 @@ public class GoogleMfaAuthTokenLogic extends AbstractAuthProfileLogic {\n     @Autowired\n     private EntityFactory entityFactory;\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_DELETE_TOKEN + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void delete(final Date expirationDate) {\n-        authProfileDAO.findAll().forEach(profile -> removeTokenAndSave(\n+        authProfileDAO.findAll(-1, -1).forEach(profile -> removeTokenAndSave(\n                 profile, token -> token.getIssueDate().compareTo(expirationDate) >= 0));\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_DELETE_TOKEN + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void delete(final String owner, final int otp) {\n         authProfileDAO.findByOwner(owner).ifPresent(profile -> removeTokenAndSave(\n                 profile, token -> token.getOtp() == otp));\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_DELETE_TOKEN + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void delete(final String owner) {\n         authProfileDAO.findByOwner(owner).ifPresent(profile -> {\n             profile.setGoogleMfaAuthTokens(List.of());\n             authProfileDAO.save(profile);\n         });\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_DELETE_TOKEN + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void delete(final int otp) {\n-        authProfileDAO.findAll().forEach(profile -> removeTokenAndSave(\n+        authProfileDAO.findAll(-1, -1).forEach(profile -> removeTokenAndSave(\n                 profile, token -> token.getOtp() == otp));\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_DELETE_TOKEN + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void deleteAll() {\n-        authProfileDAO.findAll().forEach(profile -> {\n+        authProfileDAO.findAll(-1, -1).forEach(profile -> {\n             profile.setGoogleMfaAuthTokens(List.of());\n             authProfileDAO.save(profile);\n         });\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_STORE_TOKEN + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void store(final String owner, final GoogleMfaAuthToken token) {\n         AuthProfile profile = authProfileDAO.findByOwner(owner).orElseGet(() -> {\n             AuthProfile authProfile = entityFactory.newEntity(AuthProfile.class);\n@@ -94,8 +87,7 @@ public void store(final String owner, final GoogleMfaAuthToken token) {\n         authProfileDAO.save(profile);\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_READ_TOKEN + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     @Transactional(readOnly = true)\n     public GoogleMfaAuthToken read(final String owner, final int otp) {\n         return authProfileDAO.findByOwner(owner).\n@@ -107,18 +99,16 @@ public GoogleMfaAuthToken read(final String owner, final int otp) {\n                 orElseThrow(() -> new NotFoundException(\"Could not find token for Owner \" + owner + \" and otp \" + otp));\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_LIST_TOKENS + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     @Transactional(readOnly = true)\n     public List<GoogleMfaAuthToken> list() {\n-        return authProfileDAO.findAll().stream().\n+        return authProfileDAO.findAll(-1, -1).stream().\n                 map(AuthProfile::getGoogleMfaAuthTokens).\n                 flatMap(List::stream).\n                 collect(Collectors.toList());\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.GOOGLE_MFA_READ_TOKEN + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     @Transactional(readOnly = true)\n     public List<GoogleMfaAuthToken> read(final String owner) {\n         return authProfileDAO.findByOwner(owner)."},{"sha":"f1fd730dc44eff034d89ae0b2835e7c1af2b3d3d","filename":"core/am/logic/src/main/java/org/apache/syncope/core/logic/wa/ImpersonationLogic.java","status":"modified","additions":3,"deletions":7,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FImpersonationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FImpersonationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FImpersonationLogic.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -20,7 +20,6 @@\n \n import java.util.ArrayList;\n import java.util.List;\n-import org.apache.syncope.common.lib.types.AMEntitlement;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.common.lib.wa.ImpersonationAccount;\n import org.apache.syncope.core.logic.AbstractAuthProfileLogic;\n@@ -37,15 +36,13 @@ public class ImpersonationLogic extends AbstractAuthProfileLogic {\n     @Autowired\n     private EntityFactory entityFactory;\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.IMPERSONATION_READ_ACCOUNT + \"')\"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     @Transactional(readOnly = true)\n     public List<ImpersonationAccount> read(final String owner) {\n         return authProfileDAO.findByOwner(owner).map(AuthProfile::getImpersonationAccounts).orElse(List.of());\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.IMPERSONATION_CREATE_ACCOUNT + \"')\"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void create(final String owner, final ImpersonationAccount account) {\n         AuthProfile profile = authProfileDAO.findByOwner(owner).orElseGet(() -> {\n             AuthProfile authProfile = entityFactory.newEntity(AuthProfile.class);\n@@ -64,8 +61,7 @@ public void create(final String owner, final ImpersonationAccount account) {\n         authProfileDAO.save(profile);\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.IMPERSONATION_DELETE_ACCOUNT + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void delete(final String owner, final String impersonated) {\n         authProfileDAO.findByOwner(owner).ifPresent(profile -> {\n             List<ImpersonationAccount> accounts = profile.getImpersonationAccounts();"},{"sha":"e850e741e92190d8fc1b5002a8c89faf7c908a6a","filename":"core/am/logic/src/main/java/org/apache/syncope/core/logic/wa/U2FRegistrationLogic.java","status":"modified","additions":5,"deletions":9,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FU2FRegistrationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FU2FRegistrationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FU2FRegistrationLogic.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -26,7 +26,6 @@\n import org.apache.commons.lang3.builder.CompareToBuilder;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.common.lib.types.AMEntitlement;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.common.lib.wa.U2FDevice;\n import org.apache.syncope.core.logic.AbstractAuthProfileLogic;\n@@ -43,8 +42,7 @@ public class U2FRegistrationLogic extends AbstractAuthProfileLogic {\n     @Autowired\n     private EntityFactory entityFactory;\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.U2F_CREATE_DEVICE + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void create(final String owner, final U2FDevice device) {\n         AuthProfile profile = authProfileDAO.findByOwner(owner).orElseGet(() -> {\n             AuthProfile authProfile = entityFactory.newEntity(AuthProfile.class);\n@@ -58,10 +56,9 @@ public void create(final String owner, final U2FDevice device) {\n         authProfileDAO.save(profile);\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.U2F_DELETE_DEVICE + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void delete(final Long id, final Date expirationDate) {\n-        List<AuthProfile> profiles = authProfileDAO.findAll();\n+        List<AuthProfile> profiles = authProfileDAO.findAll(-1, -1);\n         profiles.forEach(profile -> {\n             List<U2FDevice> devices = profile.getU2FRegisteredDevices();\n             if (devices != null) {\n@@ -78,8 +75,7 @@ public void delete(final Long id, final Date expirationDate) {\n         });\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.U2F_SEARCH_DEVICES + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public Pair<Integer, List<U2FDevice>> search(\n             final Integer page,\n             final Integer itemsPerPage, final Long id,\n@@ -113,7 +109,7 @@ public Pair<Integer, List<U2FDevice>> search(\n                 filter(Objects::nonNull).\n                 collect(Collectors.toList());\n \n-        List<U2FDevice> devices = authProfileDAO.findAll().\n+        List<U2FDevice> devices = authProfileDAO.findAll(-1, -1).\n                 stream().\n                 map(AuthProfile::getU2FRegisteredDevices).\n                 filter(Objects::nonNull)."},{"sha":"27b6aa042388cbf289a84f0223b0516db0865e2b","filename":"core/am/logic/src/main/java/org/apache/syncope/core/logic/wa/WebAuthnRegistrationLogic.java","status":"modified","additions":19,"deletions":28,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FWebAuthnRegistrationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FWebAuthnRegistrationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fwa%2FWebAuthnRegistrationLogic.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -20,7 +20,6 @@\n \n import java.util.List;\n import java.util.stream.Collectors;\n-import org.apache.syncope.common.lib.types.AMEntitlement;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n import org.apache.syncope.common.lib.wa.WebAuthnAccount;\n import org.apache.syncope.common.lib.wa.WebAuthnDeviceCredential;\n@@ -39,68 +38,60 @@ public class WebAuthnRegistrationLogic extends AbstractAuthProfileLogic {\n     @Autowired\n     private EntityFactory entityFactory;\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.WEBAUTHN_LIST_DEVICE + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     @Transactional(readOnly = true)\n     public List<WebAuthnAccount> list() {\n-        return authProfileDAO.findAll().stream().\n-                map(AuthProfile::getWebAuthnAccount).\n+        return authProfileDAO.findAll(-1, -1).stream().\n+                map(profile -> new WebAuthnAccount.Builder().\n+                credentials(profile.getWebAuthnDeviceCredentials()).build()).\n                 collect(Collectors.toList());\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.WEBAUTHN_READ_DEVICE + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     @Transactional(readOnly = true)\n     public WebAuthnAccount read(final String owner) {\n-        return authProfileDAO.findByOwner(owner).\n-                stream().\n-                map(AuthProfile::getWebAuthnAccount).\n+        return authProfileDAO.findByOwner(owner).stream().\n                 findFirst().\n+                map(profile -> new WebAuthnAccount.Builder().\n+                credentials(profile.getWebAuthnDeviceCredentials()).build()).\n                 orElseThrow(() -> new NotFoundException(\"Could not find account for Owner \" + owner));\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.WEBAUTHN_DELETE_DEVICE + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void delete(final String owner) {\n         authProfileDAO.findByOwner(owner).ifPresent(profile -> {\n-            profile.setWebAuthnAccount(null);\n+            profile.setWebAuthnDeviceCredentials(List.of());\n             authProfileDAO.save(profile);\n         });\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.WEBAUTHN_DELETE_DEVICE + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void delete(final String owner, final String credentialId) {\n-        authProfileDAO.findByOwner(owner).\n-                stream().\n-                findFirst().\n+        authProfileDAO.findByOwner(owner).stream().findFirst().\n                 ifPresent(profile -> {\n-                    WebAuthnAccount webAuthnAccount = profile.getWebAuthnAccount();\n-                    List<WebAuthnDeviceCredential> accounts = webAuthnAccount.getCredentials();\n-                    if (accounts.removeIf(acct -> acct.getIdentifier().equals(credentialId))) {\n-                        profile.setWebAuthnAccount(webAuthnAccount);\n+                    List<WebAuthnDeviceCredential> credentials = profile.getWebAuthnDeviceCredentials();\n+                    if (credentials.removeIf(acct -> acct.getIdentifier().equals(credentialId))) {\n+                        profile.setWebAuthnDeviceCredentials(credentials);\n                         authProfileDAO.save(profile);\n                     }\n                 });\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.WEBAUTHN_CREATE_DEVICE + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void create(final String owner, final WebAuthnAccount account) {\n         AuthProfile profile = authProfileDAO.findByOwner(owner).orElseGet(() -> {\n             AuthProfile authProfile = entityFactory.newEntity(AuthProfile.class);\n             authProfile.setOwner(owner);\n             return authProfile;\n         });\n-        profile.setWebAuthnAccount(account);\n+        profile.setWebAuthnDeviceCredentials(account.getCredentials());\n         authProfileDAO.save(profile);\n     }\n \n-    @PreAuthorize(\"hasRole('\" + AMEntitlement.WEBAUTHN_UPDATE_DEVICE + \"') \"\n-            + \"or hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.ANONYMOUS + \"')\")\n     public void update(final String owner, final WebAuthnAccount account) {\n         authProfileDAO.findByOwner(owner).ifPresent(profile -> {\n-            profile.setWebAuthnAccount(account);\n+            profile.setWebAuthnDeviceCredentials(account.getCredentials());\n             authProfileDAO.save(profile);\n         });\n     }"},{"sha":"3ee15a9fec73157bc4a9250ab3f828f1d734a6dc","filename":"core/am/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AuthProfileServiceImpl.java","status":"modified","additions":18,"deletions":8,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAuthProfileServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAuthProfileServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAuthProfileServiceImpl.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -18,13 +18,18 @@\n  */\n package org.apache.syncope.core.rest.cxf.service;\n \n+import java.net.URI;\n import org.apache.syncope.common.lib.to.AuthProfileTO;\n import org.apache.syncope.common.rest.api.service.AuthProfileService;\n import org.apache.syncope.core.logic.AuthProfileLogic;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n \n import java.util.List;\n+import javax.ws.rs.core.Response;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.lib.to.PagedResult;\n+import org.apache.syncope.common.rest.api.RESTHeaders;\n \n @Service\n public class AuthProfileServiceImpl extends AbstractServiceImpl implements AuthProfileService {\n@@ -38,22 +43,27 @@ public void delete(final String key) {\n     }\n \n     @Override\n-    public void deleteByOwner(final String owner) {\n-        logic.deleteByOwner(owner);\n+    public AuthProfileTO read(final String key) {\n+        return logic.read(key);\n     }\n \n     @Override\n-    public AuthProfileTO readByOwner(final String owner) {\n-        return logic.readByOwner(owner);\n+    public Response create(final AuthProfileTO authProfileTO) {\n+        AuthProfileTO created = logic.create(authProfileTO);\n+        URI location = uriInfo.getAbsolutePathBuilder().path(created.getKey()).build();\n+        return Response.created(location).\n+                header(RESTHeaders.RESOURCE_KEY, created.getKey()).\n+                build();\n     }\n \n     @Override\n-    public AuthProfileTO read(final String key) {\n-        return logic.read(key);\n+    public void update(final AuthProfileTO authProfileTO) {\n+        logic.update(authProfileTO);\n     }\n \n     @Override\n-    public List<AuthProfileTO> list() {\n-        return logic.list();\n+    public PagedResult<AuthProfileTO> list(final int page, final int size) {\n+        Pair<Integer, List<AuthProfileTO>> result = logic.list(page, size);\n+        return buildPagedResult(result.getRight(), page, size, result.getLeft());\n     }\n }"},{"sha":"5a2c4626d414e2c9e992a288451747b60715502f","filename":"core/am/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ClientAppServiceImpl.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FClientAppServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FClientAppServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FClientAppServiceImpl.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -37,10 +37,10 @@ public class ClientAppServiceImpl extends AbstractServiceImpl implements ClientA\n \n     @Override\n     public Response create(final ClientAppType type, final ClientAppTO clientAppTO) {\n-        ClientAppTO appTO = logic.create(type, clientAppTO);\n-        URI location = uriInfo.getAbsolutePathBuilder().path(appTO.getKey()).build();\n+        ClientAppTO created = logic.create(type, clientAppTO);\n+        URI location = uriInfo.getAbsolutePathBuilder().path(created.getKey()).build();\n         return Response.created(location).\n-                header(RESTHeaders.RESOURCE_KEY, appTO.getKey()).\n+                header(RESTHeaders.RESOURCE_KEY, created.getKey()).\n                 build();\n     }\n "},{"sha":"7d2fe21a9e329d37ba5596543aef323a55a386fc","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/auth/AuthProfileDAO.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fauth%2FAuthProfileDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fauth%2FAuthProfileDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fauth%2FAuthProfileDAO.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -27,7 +27,9 @@ public interface AuthProfileDAO extends DAO<AuthProfile> {\n \n     AuthProfile find(String key);\n \n-    List<AuthProfile> findAll();\n+    int count();\n+\n+    List<AuthProfile> findAll(int page, int itemsPerPage);\n \n     Optional<AuthProfile> findByOwner(String owner);\n "},{"sha":"51a5a61fe06253d674c041a0a6f994c8e9f68486","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/auth/AuthProfile.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fauth%2FAuthProfile.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fauth%2FAuthProfile.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fauth%2FAuthProfile.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -23,7 +23,7 @@\n import org.apache.syncope.common.lib.wa.GoogleMfaAuthToken;\n import org.apache.syncope.common.lib.wa.ImpersonationAccount;\n import org.apache.syncope.common.lib.wa.U2FDevice;\n-import org.apache.syncope.common.lib.wa.WebAuthnAccount;\n+import org.apache.syncope.common.lib.wa.WebAuthnDeviceCredential;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n \n public interface AuthProfile extends Entity {\n@@ -44,9 +44,9 @@ public interface AuthProfile extends Entity {\n \n     void setGoogleMfaAuthAccounts(List<GoogleMfaAuthAccount> accounts);\n \n-    WebAuthnAccount getWebAuthnAccount();\n+    List<WebAuthnDeviceCredential> getWebAuthnDeviceCredentials();\n \n-    void setWebAuthnAccount(WebAuthnAccount accounts);\n+    void setWebAuthnDeviceCredentials(List<WebAuthnDeviceCredential> credentials);\n \n     List<ImpersonationAccount> getImpersonationAccounts();\n "},{"sha":"1d576ed2d06f3c34bc326e1673dfdf6bb8978947","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/auth/JPAAuthProfileDAO.java","status":"modified","additions":18,"deletions":2,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2Fauth%2FJPAAuthProfileDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2Fauth%2FJPAAuthProfileDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2Fauth%2FJPAAuthProfileDAO.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -20,6 +20,7 @@\n \n import java.util.List;\n import java.util.Optional;\n+import javax.persistence.Query;\n import javax.persistence.TypedQuery;\n import org.apache.syncope.core.persistence.api.dao.auth.AuthProfileDAO;\n import org.apache.syncope.core.persistence.api.entity.auth.AuthProfile;\n@@ -36,10 +37,25 @@ public AuthProfile find(final String key) {\n     }\n \n     @Override\n-    public List<AuthProfile> findAll() {\n+    public int count() {\n+        Query query = entityManager().createQuery(\n+                \"SELECT COUNT(e) FROM  \" + JPAAuthProfile.class.getSimpleName() + \" e\");\n+        return ((Number) query.getSingleResult()).intValue();\n+    }\n+\n+    @Override\n+    public List<AuthProfile> findAll(final int page, final int itemsPerPage) {\n         TypedQuery<AuthProfile> query = entityManager().createQuery(\n-                \"SELECT e FROM \" + JPAAuthProfile.class.getSimpleName() + \" e \",\n+                \"SELECT e FROM \" + JPAAuthProfile.class.getSimpleName() + \" e ORDER BY e.owner ASC\",\n                 AuthProfile.class);\n+\n+        // page starts from 1, while setFirtResult() starts from 0\n+        query.setFirstResult(itemsPerPage * (page <= 0 ? 0 : page - 1));\n+\n+        if (itemsPerPage >= 0) {\n+            query.setMaxResults(itemsPerPage);\n+        }\n+\n         return query.getResultList();\n     }\n "},{"sha":"2ea123ef268775caf427da970ff8c97453850d40","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/auth/JPAAuthProfile.java","status":"modified","additions":18,"deletions":17,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FJPAAuthProfile.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FJPAAuthProfile.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fauth%2FJPAAuthProfile.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -30,7 +30,7 @@\n import org.apache.syncope.common.lib.wa.GoogleMfaAuthToken;\n import org.apache.syncope.common.lib.wa.ImpersonationAccount;\n import org.apache.syncope.common.lib.wa.U2FDevice;\n-import org.apache.syncope.common.lib.wa.WebAuthnAccount;\n+import org.apache.syncope.common.lib.wa.WebAuthnDeviceCredential;\n import org.apache.syncope.core.persistence.api.entity.auth.AuthProfile;\n import org.apache.syncope.core.persistence.jpa.entity.AbstractGeneratedKeyEntity;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n@@ -44,23 +44,23 @@ public class JPAAuthProfile extends AbstractGeneratedKeyEntity implements AuthPr\n \n     private static final long serialVersionUID = 57352617217394093L;\n \n-    @Lob\n-    private String u2fRegisteredDevices;\n+    @Column(nullable = false)\n+    private String owner;\n \n     @Lob\n-    private String googleMfaAuthAccounts;\n+    private String impersonatedAccounts;\n \n     @Lob\n-    private String impersonatedAccounts;\n+    private String googleMfaAuthAccounts;\n \n     @Lob\n     private String googleMfaAuthTokens;\n \n     @Lob\n-    private String webAuthnAccount;\n+    private String u2fRegisteredDevices;\n \n-    @Column(nullable = false)\n-    private String owner;\n+    @Lob\n+    private String webAuthnDeviceCredentials;\n \n     @Override\n     public String getOwner() {\n@@ -114,9 +114,9 @@ public void setU2FRegisteredDevices(final List<U2FDevice> records) {\n     @Override\n     public List<ImpersonationAccount> getImpersonationAccounts() {\n         return impersonatedAccounts == null\n-            ? new ArrayList<>(0)\n-            : POJOHelper.deserialize(impersonatedAccounts, new TypeReference<List<ImpersonationAccount>>() {\n-        });\n+                ? new ArrayList<>(0)\n+                : POJOHelper.deserialize(impersonatedAccounts, new TypeReference<List<ImpersonationAccount>>() {\n+                });\n     }\n \n     @Override\n@@ -125,15 +125,16 @@ public void setImpersonationAccounts(final List<ImpersonationAccount> accounts)\n     }\n \n     @Override\n-    public WebAuthnAccount getWebAuthnAccount() {\n-        return webAuthnAccount == null\n-                ? null\n-                : POJOHelper.deserialize(webAuthnAccount, new TypeReference<WebAuthnAccount>() {\n+    public List<WebAuthnDeviceCredential> getWebAuthnDeviceCredentials() {\n+        return webAuthnDeviceCredentials == null\n+                ? new ArrayList<>(0)\n+                : POJOHelper.deserialize(webAuthnDeviceCredentials,\n+                        new TypeReference<List<WebAuthnDeviceCredential>>() {\n                 });\n     }\n \n     @Override\n-    public void setWebAuthnAccount(final WebAuthnAccount accounts) {\n-        this.webAuthnAccount = POJOHelper.serialize(accounts);\n+    public void setWebAuthnDeviceCredentials(final List<WebAuthnDeviceCredential> credentials) {\n+        this.webAuthnDeviceCredentials = POJOHelper.serialize(credentials);\n     }\n }"},{"sha":"7d27b925eb950aebac79013480d5f57da1ff6c9b","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/AuthProfileTest.java","status":"modified","additions":6,"deletions":8,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAuthProfileTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAuthProfileTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAuthProfileTest.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -31,7 +31,6 @@\n import org.apache.syncope.common.lib.wa.GoogleMfaAuthToken;\n import org.apache.syncope.common.lib.wa.ImpersonationAccount;\n import org.apache.syncope.common.lib.wa.U2FDevice;\n-import org.apache.syncope.common.lib.wa.WebAuthnAccount;\n import org.apache.syncope.common.lib.wa.WebAuthnDeviceCredential;\n import org.apache.syncope.core.persistence.api.dao.auth.AuthProfileDAO;\n import org.apache.syncope.core.persistence.api.entity.auth.AuthProfile;\n@@ -63,7 +62,7 @@ public void googleMfaToken() {\n         Optional<AuthProfile> result = authProfileDAO.findByOwner(id);\n         assertTrue(result.isPresent());\n \n-        assertFalse(authProfileDAO.findAll().isEmpty());\n+        assertFalse(authProfileDAO.findAll(-1, -1).isEmpty());\n \n         AuthProfile authProfile = result.get();\n         result = Optional.ofNullable(authProfileDAO.find(authProfile.getKey()));\n@@ -84,7 +83,7 @@ public void u2fRegisteredDevice() {\n         Optional<AuthProfile> result = authProfileDAO.findByOwner(id);\n         assertTrue(result.isPresent());\n \n-        assertFalse(authProfileDAO.findAll().isEmpty());\n+        assertFalse(authProfileDAO.findAll(-1, -1).isEmpty());\n \n         AuthProfile authProfile = result.get();\n         result = Optional.ofNullable(authProfileDAO.find(authProfile.getKey()));\n@@ -121,14 +120,14 @@ public void webAuthnRegisteredDevice() {\n         Optional<AuthProfile> result = authProfileDAO.findByOwner(id);\n         assertTrue(result.isPresent());\n \n-        assertFalse(authProfileDAO.findAll().isEmpty());\n+        assertFalse(authProfileDAO.findAll(-1, -1).isEmpty());\n \n         AuthProfile authProfile = result.get();\n         result = Optional.ofNullable(authProfileDAO.find(authProfile.getKey()));\n         assertTrue(result.isPresent());\n \n         authProfile.setOwner(\"SyncopeCreate-NewU2F\");\n-        authProfile.setWebAuthnAccount(null);\n+        authProfile.setWebAuthnDeviceCredentials(List.of());\n         authProfileDAO.save(authProfile);\n \n         assertFalse(authProfileDAO.findByOwner(id).isPresent());\n@@ -143,7 +142,7 @@ public void googleMfaAccount() {\n         Optional<AuthProfile> result = authProfileDAO.findByOwner(id);\n         assertTrue(result.isPresent());\n \n-        assertFalse(authProfileDAO.findAll().isEmpty());\n+        assertFalse(authProfileDAO.findAll(-1, -1).isEmpty());\n \n         AuthProfile authProfile = result.get();\n         result = Optional.ofNullable(authProfileDAO.find(authProfile.getKey()));\n@@ -206,8 +205,7 @@ private AuthProfile createAuthProfileWithWebAuthnDevice(\n \n         AuthProfile profile = entityFactory.newEntity(AuthProfile.class);\n         profile.setOwner(owner);\n-        WebAuthnAccount account = new WebAuthnAccount.Builder().credentials(credentials).build();\n-        profile.setWebAuthnAccount(account);\n+        profile.setWebAuthnDeviceCredentials(credentials);\n         return authProfileDAO.save(profile);\n     }\n "},{"sha":"de3ed260b7bbd2d5901f732fa8f795846466b59f","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/AuthProfileDataBinder.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FAuthProfileDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FAuthProfileDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FAuthProfileDataBinder.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -26,4 +26,6 @@ public interface AuthProfileDataBinder {\n     AuthProfileTO getAuthProfileTO(AuthProfile authProfile);\n \n     AuthProfile create(AuthProfileTO authProfileTO);\n+\n+    AuthProfile update(AuthProfile authProfile, AuthProfileTO authProfileTO);\n }"},{"sha":"dcf73bab84d59940cfaea53a6302265552357ac4","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AuthProfileDataBinderImpl.java","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAuthProfileDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAuthProfileDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAuthProfileDataBinderImpl.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -36,21 +36,28 @@ public AuthProfileTO getAuthProfileTO(final AuthProfile authProfile) {\n         AuthProfileTO authProfileTO = new AuthProfileTO();\n         authProfileTO.setKey(authProfile.getKey());\n         authProfileTO.setOwner(authProfile.getOwner());\n+        authProfileTO.getImpersonationAccounts().addAll(authProfile.getImpersonationAccounts());\n         authProfileTO.getGoogleMfaAuthTokens().addAll(authProfile.getGoogleMfaAuthTokens());\n         authProfileTO.getGoogleMfaAuthAccounts().addAll(authProfile.getGoogleMfaAuthAccounts());\n         authProfileTO.getU2FRegisteredDevices().addAll(authProfile.getU2FRegisteredDevices());\n-        authProfileTO.setWebAuthnAccount(authProfile.getWebAuthnAccount());\n+        authProfileTO.getWebAuthnDeviceCredentials().addAll(authProfile.getWebAuthnDeviceCredentials());\n         return authProfileTO;\n     }\n \n     @Override\n     public AuthProfile create(final AuthProfileTO authProfileTO) {\n         AuthProfile authProfile = entityFactory.newEntity(AuthProfile.class);\n         authProfile.setOwner(authProfileTO.getOwner());\n+        return update(authProfile, authProfileTO);\n+    }\n+\n+    @Override\n+    public AuthProfile update(final AuthProfile authProfile, final AuthProfileTO authProfileTO) {\n+        authProfile.setImpersonationAccounts(authProfileTO.getImpersonationAccounts());\n         authProfile.setGoogleMfaAuthTokens(authProfileTO.getGoogleMfaAuthTokens());\n         authProfile.setGoogleMfaAuthAccounts(authProfileTO.getGoogleMfaAuthAccounts());\n         authProfile.setU2FRegisteredDevices(authProfileTO.getU2FRegisteredDevices());\n-        authProfile.setWebAuthnAccount(authProfileTO.getWebAuthnAccount());\n+        authProfile.setWebAuthnDeviceCredentials(authProfileTO.getWebAuthnDeviceCredentials());\n         return authProfile;\n     }\n }"},{"sha":"79639cb16bf547f26dd61859c239b48ff9bb4666","filename":"ext/flowable/client-console/src/main/java/org/apache/syncope/client/console/panels/BpmnProcessDirectoryPanel.java","status":"modified","additions":4,"deletions":13,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBpmnProcessDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBpmnProcessDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FBpmnProcessDirectoryPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -40,7 +40,6 @@\n import org.apache.syncope.client.console.panels.BpmnProcessDirectoryPanel.BpmProcessDataProvider;\n import org.apache.syncope.client.console.rest.BpmnProcessRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal.WindowClosedCallback;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.ImageModalPanel;\n@@ -88,9 +87,7 @@ protected BpmnProcessDirectoryPanel(final String id, final Builder builder) {\n             private static final long serialVersionUID = 1633859795677053912L;\n \n             @Override\n-            protected WizardModel buildModelSteps(\n-                    final BpmnProcess modelObject, final WizardModel wizardModel) {\n-\n+            protected WizardModel buildModelSteps(final BpmnProcess modelObject, final WizardModel wizardModel) {\n                 return wizardModel;\n             }\n \n@@ -137,15 +134,9 @@ public void onClick(final AjaxRequestTarget target) {\n         utility.size(Modal.Size.Large);\n         AjaxSubmitLink xmlEditorSubmit = utility.addSubmitButton();\n         MetaDataRoleAuthorizationStrategy.authorize(xmlEditorSubmit, RENDER, FlowableEntitlement.BPMN_PROCESS_SET);\n-        utility.setWindowClosedCallback(new WindowClosedCallback() {\n-\n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                utility.show(false);\n-                utility.close(target);\n-            }\n+        utility.setWindowClosedCallback(target -> {\n+            utility.show(false);\n+            utility.close(target);\n         });\n         initResultTable();\n     }"},{"sha":"8078a9d9bc55b257f7b49979c23c764fca571aac","filename":"ext/flowable/client-console/src/main/java/org/apache/syncope/client/console/panels/UserRequestFormDirectoryPanel.java","status":"modified","additions":7,"deletions":14,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserRequestFormDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserRequestFormDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserRequestFormDirectoryPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -36,7 +36,6 @@\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal.WindowClosedCallback;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksTogglePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n@@ -90,21 +89,15 @@ public UserRequestFormDirectoryPanel(final String id, final PageReference pageRe\n \n         addOuterObject(manageFormModal);\n \n-        manageFormModal.setWindowClosedCallback(new WindowClosedCallback() {\n+        manageFormModal.setWindowClosedCallback(target -> {\n+            updateResultTable(target);\n \n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                updateResultTable(target);\n-\n-                Serializable widget = SyncopeConsoleSession.get().getAttribute(UserRequestFormsWidget.class.getName());\n-                if (widget instanceof UserRequestFormsWidget) {\n-                    ((UserRequestFormsWidget) widget).refreshLatestAlerts(target);\n-                }\n-\n-                manageFormModal.show(false);\n+            Serializable widget = SyncopeConsoleSession.get().getAttribute(UserRequestFormsWidget.class.getName());\n+            if (widget instanceof UserRequestFormsWidget) {\n+                ((UserRequestFormsWidget) widget).refreshLatestAlerts(target);\n             }\n+\n+            manageFormModal.show(false);\n         });\n \n         restClient = new UserRequestRestClient();"},{"sha":"f65bb0e8b3deca29b17399eb58d622442c958228","filename":"ext/oidcc4ui/client-console/src/main/java/org/apache/syncope/client/console/panels/OIDCProvidersDirectoryPanel.java","status":"modified","additions":1,"deletions":11,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcc4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FOIDCProvidersDirectoryPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -36,7 +36,6 @@\n import org.apache.syncope.client.console.rest.OIDCProviderRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal.WindowClosedCallback;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksTogglePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n@@ -102,20 +101,11 @@ protected void onConfigure() {\n                 setFooterVisible(false);\n             }\n         };\n-        templateModal.setWindowClosedCallback(new WindowClosedCallback() {\n-\n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                templateModal.show(false);\n-            }\n-        });\n+        templateModal.setWindowClosedCallback(target -> templateModal.show(false));\n         templateModal.size(Modal.Size.Large);\n         addOuterObject(templateModal);\n \n         initResultTable();\n-\n     }\n \n     @Override"},{"sha":"7ca6cd4355128ccd39b0cb9fe30a17903a97c8ca","filename":"ext/saml2sp4ui/client-common-ui/src/main/java/org/apache/syncope/client/ui/commons/panels/AbstractSAMLSSOLoginFormPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/ext%2Fsaml2sp4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FAbstractSAMLSSOLoginFormPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/ext%2Fsaml2sp4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FAbstractSAMLSSOLoginFormPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-common-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fpanels%2FAbstractSAMLSSOLoginFormPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -49,7 +49,7 @@ public AbstractSAMLSSOLoginFormPanel(final String id, final BaseSession session)\n \n         List<SAML2SP4UIIdPTO> available = session.getAnonymousService(SAML2SP4UIIdPService.class).list();\n \n-        final Model<SAML2SP4UIIdPTO> model = new Model<>();\n+        Model<SAML2SP4UIIdPTO> model = new Model<>();\n         AjaxDropDownChoicePanel<SAML2SP4UIIdPTO> idps =\n                 new AjaxDropDownChoicePanel<>(\"idps\", \"SAML 2.0\", model, false);\n         idps.setChoices(available);"},{"sha":"2cb375bd4cbe6dae2c0cce401fe7dffa69b322a6","filename":"ext/saml2sp4ui/client-console/src/main/java/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel.java","status":"modified","additions":6,"deletions":21,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp4ui%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -39,7 +39,6 @@\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal.WindowClosedCallback;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksTogglePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n@@ -54,6 +53,7 @@\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SAML2SP4UIEntitlement;\n+import org.apache.wicket.MarkupContainer;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n@@ -62,7 +62,6 @@\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n@@ -95,15 +94,9 @@ protected WizardMgtPanel<SAML2SP4UIIdPTO> newInstance(final String id, final boo\n \n         modal.addSubmitButton();\n         modal.size(Modal.Size.Large);\n-        modal.setWindowClosedCallback(new WindowClosedCallback() {\n-\n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                updateResultTable(target);\n-                modal.show(false);\n-            }\n+        modal.setWindowClosedCallback(target -> {\n+            updateResultTable(target);\n+            modal.show(false);\n         });\n \n         addOuterObject(metadataModal);\n@@ -120,15 +113,7 @@ protected void onConfigure() {\n                 setFooterVisible(false);\n             }\n         };\n-        templateModal.setWindowClosedCallback(new WindowClosedCallback() {\n-\n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                templateModal.show(false);\n-            }\n-        });\n+        templateModal.setWindowClosedCallback(target -> templateModal.show(false));\n         templateModal.size(Modal.Size.Large);\n         addOuterObject(templateModal);\n \n@@ -145,7 +130,7 @@ public void onClick(final AjaxRequestTarget target) {\n                 importMetadata.toggle(target, true);\n             }\n         };\n-        ((WebMarkupContainer) get(\"container:content\")).addOrReplace(importMetadataLink);\n+        ((MarkupContainer) get(\"container:content\")).addOrReplace(importMetadataLink);\n     }\n \n     @Override"},{"sha":"da72e8439d03d7364a266c618a641096c2d5db9e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":17,"deletions":11,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -50,6 +50,7 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.cxf.jaxrs.client.WebClient;\n+import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n import org.apache.syncope.common.keymaster.client.api.ConfParamOps;\n@@ -249,6 +250,8 @@ public abstract class AbstractITCase {\n \n     protected static SyncopeClient adminClient;\n \n+    protected static SyncopeClient anonymusClient;\n+\n     protected static SyncopeService syncopeService;\n \n     protected static ApplicationService applicationService;\n@@ -325,10 +328,6 @@ public abstract class AbstractITCase {\n \n     protected static ClientAppService clientAppService;\n \n-    protected static GoogleMfaAuthTokenService googleMfaAuthTokenService;\n-\n-    protected static GoogleMfaAuthAccountService googleMfaAuthAccountService;\n-\n     protected static AuthProfileService authProfileService;\n \n     protected static SAML2SPEntityService saml2SPEntityService;\n@@ -337,10 +336,14 @@ public abstract class AbstractITCase {\n \n     protected static OIDCJWKSService oidcJWKSService;\n \n-    protected static U2FRegistrationService u2FRegistrationService;\n-\n     protected static WAConfigService waConfigService;\n \n+    protected static GoogleMfaAuthTokenService googleMfaAuthTokenService;\n+\n+    protected static GoogleMfaAuthAccountService googleMfaAuthAccountService;\n+\n+    protected static U2FRegistrationService u2fRegistrationService;\n+\n     protected static WebAuthnRegistrationService webAuthnRegistrationService;\n \n     protected static ImpersonationService impersonationService;\n@@ -418,14 +421,17 @@ public static void restSetup() {\n         authModuleService = adminClient.getService(AuthModuleService.class);\n         saml2SPEntityService = adminClient.getService(SAML2SPEntityService.class);\n         saml2IdPEntityService = adminClient.getService(SAML2IdPEntityService.class);\n-        googleMfaAuthTokenService = adminClient.getService(GoogleMfaAuthTokenService.class);\n-        googleMfaAuthAccountService = adminClient.getService(GoogleMfaAuthAccountService.class);\n         authProfileService = adminClient.getService(AuthProfileService.class);\n         oidcJWKSService = adminClient.getService(OIDCJWKSService.class);\n-        u2FRegistrationService = adminClient.getService(U2FRegistrationService.class);\n         waConfigService = adminClient.getService(WAConfigService.class);\n-        webAuthnRegistrationService = adminClient.getService(WebAuthnRegistrationService.class);\n-        impersonationService = adminClient.getService(ImpersonationService.class);\n+\n+        anonymusClient = clientFactory.create(new AnonymousAuthenticationHandler(ANONYMOUS_UNAME, ANONYMOUS_KEY));\n+\n+        googleMfaAuthTokenService = anonymusClient.getService(GoogleMfaAuthTokenService.class);\n+        googleMfaAuthAccountService = anonymusClient.getService(GoogleMfaAuthAccountService.class);\n+        u2fRegistrationService = anonymusClient.getService(U2FRegistrationService.class);\n+        webAuthnRegistrationService = anonymusClient.getService(WebAuthnRegistrationService.class);\n+        impersonationService = anonymusClient.getService(ImpersonationService.class);\n     }\n \n     @Autowired"},{"sha":"0270dc8ba4c7132f7edb18e460b494d588ae1a48","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/VirSchemaITCase.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirSchemaITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirSchemaITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirSchemaITCase.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -28,7 +28,6 @@\n import java.util.List;\n import java.util.Locale;\n import javax.ws.rs.core.Response;\n-import org.apache.syncope.client.lib.AnonymousAuthenticationHandler;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.to.VirSchemaTO;\n@@ -108,9 +107,7 @@ public void anonymous() {\n             assertNotNull(e);\n         }\n \n-        SchemaService anonymous = clientFactory.create(\n-                new AnonymousAuthenticationHandler(ANONYMOUS_UNAME, ANONYMOUS_KEY)).\n-                getService(SchemaService.class);\n+        SchemaService anonymous = anonymusClient.getService(SchemaService.class);\n         assertFalse(anonymous.search(new SchemaQuery.Builder().type(SchemaType.VIRTUAL).build()).isEmpty());\n     }\n "},{"sha":"8e20909e8851ceb4268b4842ffcd1db72e086836","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/wa/GoogleMfaAuthTokenITCase.java","status":"modified","additions":8,"deletions":9,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Fwa%2FGoogleMfaAuthTokenITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Fwa%2FGoogleMfaAuthTokenITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Fwa%2FGoogleMfaAuthTokenITCase.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -20,7 +20,6 @@\n \n import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n import static org.junit.jupiter.api.Assertions.assertThrows;\n@@ -29,10 +28,10 @@\n import java.time.LocalDateTime;\n import java.time.ZoneId;\n import java.util.Date;\n-import java.util.List;\n import java.util.UUID;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AuthProfileTO;\n+import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.wa.GoogleMfaAuthToken;\n import org.apache.syncope.fit.AbstractITCase;\n import org.junit.jupiter.api.BeforeEach;\n@@ -72,13 +71,13 @@ public void verifyProfile() {\n         String owner = UUID.randomUUID().toString();\n         GoogleMfaAuthToken token = createGoogleMfaAuthToken();\n         googleMfaAuthTokenService.store(owner, token);\n-        List<AuthProfileTO> results = authProfileService.list();\n-        assertFalse(results.isEmpty());\n-        AuthProfileTO profileTO = results.get(0);\n-        assertNotNull(authProfileService.read(profileTO.getKey()));\n-        assertNotNull(authProfileService.readByOwner(profileTO.getOwner()));\n-        authProfileService.deleteByOwner(owner);\n-        assertThrows(SyncopeClientException.class, () -> authProfileService.readByOwner(owner));\n+        PagedResult<AuthProfileTO> results = authProfileService.list(1, 100);\n+        assertFalse(results.getResult().isEmpty());\n+        AuthProfileTO profileTO = results.getResult().stream().\n+                filter(p -> owner.equals(p.getOwner())).findFirst().get();\n+        assertEquals(profileTO, authProfileService.read(profileTO.getKey()));\n+        authProfileService.delete(profileTO.getKey());\n+        assertThrows(SyncopeClientException.class, () -> authProfileService.read(profileTO.getKey()));\n     }\n \n     @Test"},{"sha":"5612216beb6d181c6ae9edf0826672a31444c81a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/wa/U2FRegistrationITCase.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Fwa%2FU2FRegistrationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Fwa%2FU2FRegistrationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Fwa%2FU2FRegistrationITCase.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -49,49 +49,49 @@ private static U2FDevice createDeviceRegistration() {\n \n     @BeforeEach\n     public void setup() {\n-        u2FRegistrationService.delete(new U2FDeviceQuery.Builder().build());\n+        u2fRegistrationService.delete(new U2FDeviceQuery.Builder().build());\n     }\n \n     @Test\n     public void create() {\n-        assertDoesNotThrow(() -> u2FRegistrationService.create(\n+        assertDoesNotThrow(() -> u2fRegistrationService.create(\n                 UUID.randomUUID().toString(), createDeviceRegistration()));\n     }\n \n     @Test\n     public void count() {\n         String owner = UUID.randomUUID().toString();\n         U2FDevice device = createDeviceRegistration();\n-        u2FRegistrationService.create(owner, device);\n+        u2fRegistrationService.create(owner, device);\n \n-        List<U2FDevice> devices = u2FRegistrationService.search(\n+        List<U2FDevice> devices = u2fRegistrationService.search(\n                 new U2FDeviceQuery.Builder().owner(owner).expirationDate(\n                         Date.from(LocalDate.now().minusDays(1).atStartOfDay(ZoneId.systemDefault()).toInstant())).\n                         build()).getResult();\n         assertEquals(1, devices.size());\n \n-        u2FRegistrationService.delete(new U2FDeviceQuery.Builder().id(device.getId()).build());\n+        u2fRegistrationService.delete(new U2FDeviceQuery.Builder().id(device.getId()).build());\n \n-        devices = u2FRegistrationService.search(new U2FDeviceQuery.Builder().build()).getResult();\n+        devices = u2fRegistrationService.search(new U2FDeviceQuery.Builder().build()).getResult();\n         assertTrue(devices.isEmpty());\n     }\n \n     @Test\n     public void delete() {\n         U2FDevice device = createDeviceRegistration();\n         String owner = UUID.randomUUID().toString();\n-        u2FRegistrationService.create(owner, device);\n+        u2fRegistrationService.create(owner, device);\n \n-        u2FRegistrationService.delete(new U2FDeviceQuery.Builder().owner(owner).build());\n-        assertTrue(u2FRegistrationService.search(\n+        u2fRegistrationService.delete(new U2FDeviceQuery.Builder().owner(owner).build());\n+        assertTrue(u2fRegistrationService.search(\n                 new U2FDeviceQuery.Builder().owner(owner).build()).getResult().isEmpty());\n \n         Date date = Date.from(LocalDate.now().plusDays(1)\n                 .atStartOfDay(ZoneId.systemDefault()).toInstant());\n \n-        u2FRegistrationService.delete(new U2FDeviceQuery.Builder().expirationDate(date).build());\n+        u2fRegistrationService.delete(new U2FDeviceQuery.Builder().expirationDate(date).build());\n \n-        assertTrue(u2FRegistrationService.search(\n+        assertTrue(u2fRegistrationService.search(\n                 new U2FDeviceQuery.Builder().expirationDate(date).build()).getResult().isEmpty());\n     }\n }"},{"sha":"3026b21267f27c3c49869a37716f991f5fb4f626","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/wa/WebAuthnAccountITCase.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Fwa%2FWebAuthnAccountITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Fwa%2FWebAuthnAccountITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Fwa%2FWebAuthnAccountITCase.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -21,11 +21,9 @@\n import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n-import static org.junit.jupiter.api.Assertions.assertThrows;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n import java.util.UUID;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.wa.WebAuthnAccount;\n import org.apache.syncope.common.lib.wa.WebAuthnDeviceCredential;\n import org.apache.syncope.core.spring.security.SecureRandomUtils;\n@@ -68,7 +66,7 @@ public void deleteByOwner() {\n         WebAuthnAccount acct = createWebAuthnRegisteredAccount();\n         webAuthnRegistrationService.create(owner, acct);\n         webAuthnRegistrationService.delete(owner);\n-        assertThrows(SyncopeClientException.class, () -> webAuthnRegistrationService.read(owner));\n+        assertTrue(webAuthnRegistrationService.read(owner).getCredentials().isEmpty());\n     }\n \n     @Test"},{"sha":"22aad9ac655d1bae77d168f460de20b10a03ced5","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/sra/AbstractSRAITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FAbstractSRAITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FAbstractSRAITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FAbstractSRAITCase.java?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -178,7 +178,7 @@ protected static void doStartSRA(final String activeProfile)\n \n         SRA = processBuilder.start();\n \n-        await().atMost(30, TimeUnit.SECONDS).pollInterval(3, TimeUnit.SECONDS).until(() -> {\n+        await().atMost(120, TimeUnit.SECONDS).pollInterval(3, TimeUnit.SECONDS).until(() -> {\n             boolean connected = false;\n             try (Socket socket = new Socket()) {\n                 socket.connect(new InetSocketAddress(\"0.0.0.0\", PORT));"},{"sha":"48309f09a6d44bdc1fb9d598f9b4e88a21a9fed3","filename":"pom.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -62,7 +62,7 @@ under the License.\n \n   <ciManagement>\n     <system>Jenkins</system>\n-    <url>https://builds.apache.org/view/S-Z/view/Syncope/</url>\n+    <url>https://ci-builds.apache.org./job/Syncope/</url>\n   </ciManagement>\n \n   <distributionManagement>\n@@ -411,7 +411,7 @@ under the License.\n     <jackson.version>2.12.3</jackson.version>\n \n     <spring.version>5.3.5</spring.version>\n-    <spring-security.version>5.4.5</spring-security.version>\n+    <spring-security.version>5.4.6</spring-security.version>\n     <spring-boot.version>2.4.4</spring-boot.version>\n     <spring-cloud-gateway.version>3.0.2</spring-cloud-gateway.version>\n \n@@ -439,7 +439,7 @@ under the License.\n     <apachedirapi.version>2.0.0</apachedirapi.version>\n \n     <log4j.version>2.14.1</log4j.version>\n-    <disruptor.version>3.4.2</disruptor.version>\n+    <disruptor.version>3.4.3</disruptor.version>\n     \n     <commons-jexl.version>3.1</commons-jexl.version>\n     <commons-lang.version>3.12.0</commons-lang.version>"},{"sha":"d86a62b51c74a33c23737d787815fb6b174c9010","filename":"src/site/xdoc/integration.xml","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/src%2Fsite%2Fxdoc%2Fintegration.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/src%2Fsite%2Fxdoc%2Fintegration.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fsite%2Fxdoc%2Fintegration.xml?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -28,7 +28,7 @@ under the License.\n   <body>    \n     <section name=\"Jenkins\">\n       <p>\n-        <source><a href=\"https://builds.apache.org/view/S-Z/view/Syncope/\">https://builds.apache.org/view/S-Z/view/Syncope/</a></source>\n+        <source><a href=\"https://ci-builds.apache.org./job/Syncope/\">https://ci-builds.apache.org./job/Syncope/</a></source>\n       </p>\n     </section>\n \n@@ -58,9 +58,6 @@ under the License.\n       <p>\n         <source><a href=\"https://ci.apache.org/builders/syncope-2_1_X-docs\">https://ci.apache.org/builders/syncope-2_1_X-docs</a></source>\n       </p>\n-      <p>\n-        <source><a href=\"https://ci.apache.org/builders/syncope-2_0_X-docs\">https://ci.apache.org/builders/syncope-2_0_X-docs</a></source>\n-      </p>\n     </section>\n   </body>\n </document>"},{"sha":"f13a710251a3dbad6e6c9885905893f09e95157b","filename":"src/site/xdoc/release-process.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b518832be49821fbfd9605cb981414f861c914d/src%2Fsite%2Fxdoc%2Frelease-process.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b518832be49821fbfd9605cb981414f861c914d/src%2Fsite%2Fxdoc%2Frelease-process.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fsite%2Fxdoc%2Frelease-process.xml?ref=6b518832be49821fbfd9605cb981414f861c914d","patch":"@@ -586,7 +586,7 @@ svn commit -m \"Promoting the staging site\"]]></source>\n           </li>\n           <li>\n             Deploy the updated Docker images to <a href=\"https://hub.docker.com/\">DockerHub</a> by adjusting the GIT tag\n-            name then running the <a href=\"https://builds.apache.org/job/Syncope-Release-Docker\">dedicated Jenkins job</a>.\n+            name then running the <a href=\"https://ci-builds.apache.org./job/Syncope/job/Syncope-Release-Docker/\">dedicated Jenkins job</a>.\n           </li>\n         </ol>\n       </subsection>"}]}