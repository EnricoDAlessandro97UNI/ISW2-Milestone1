{"sha":"4a293350217a4c065781be22d8f8067729ab4df9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjRhMjkzMzUwMjE3YTRjMDY1NzgxYmUyMmQ4ZjgwNjc3MjlhYjRkZjk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-12-21T07:51:10Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-12-21T07:51:10Z"},"message":"[SYNCOPE-1419] Adding integration test, also verified with Elasticsearch","tree":{"sha":"fc13d53f04814b1aef80fdd57dfe2aa8d2989eab","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fc13d53f04814b1aef80fdd57dfe2aa8d2989eab"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4a293350217a4c065781be22d8f8067729ab4df9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4a293350217a4c065781be22d8f8067729ab4df9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4a293350217a4c065781be22d8f8067729ab4df9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4a293350217a4c065781be22d8f8067729ab4df9/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"deb442998b579a3855940b26c16a5aedcdc6ab05","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/deb442998b579a3855940b26c16a5aedcdc6ab05","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/deb442998b579a3855940b26c16a5aedcdc6ab05"}],"stats":{"total":47,"additions":34,"deletions":13},"files":[{"sha":"dd3426942f77ef6f2239716909eec7ac0bce506e","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/PGJPAJSONAnySearchDAO.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a293350217a4c065781be22d8f8067729ab4df9/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a293350217a4c065781be22d8f8067729ab4df9/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FPGJPAJSONAnySearchDAO.java?ref=4a293350217a4c065781be22d8f8067729ab4df9","patch":"@@ -158,10 +158,10 @@ private void fillAttrQuery(\n             final SearchSupport svs) {\n \n         // This first branch is required for handling with not conditions given on multivalue fields (SYNCOPE-1419)\n-        if (not && !(cond instanceof AnyCond)\n-                && schema.isMultivalue()\n-                && cond.getType() != AttributeCond.Type.ISNULL\n-                && cond.getType() != AttributeCond.Type.ISNOTNULL) {\n+        if (not && schema.isMultivalue()\n+                && !(cond instanceof AnyCond)\n+                && cond.getType() != AttributeCond.Type.ISNULL && cond.getType() != AttributeCond.Type.ISNOTNULL) {\n+\n             query.append(\"id NOT IN (SELECT DISTINCT any_id FROM \");\n             query.append(svs.field().name).append(\" WHERE \");\n             fillAttrQuery(anyUtils, query, attrValue, schema, cond, false, parameters, svs);\n@@ -280,7 +280,7 @@ protected String getQuery(\n             }\n         }\n \n-        StringBuilder query = \n+        StringBuilder query =\n                 new StringBuilder(\"SELECT DISTINCT any_id FROM \").append(svs.field().name).append(\" WHERE \");\n         switch (cond.getType()) {\n             case ISNOTNULL:"},{"sha":"def529c1daab42fd210ea6c067cb64807a8a4798","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnySearchDAO.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a293350217a4c065781be22d8f8067729ab4df9/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a293350217a4c065781be22d8f8067729ab4df9/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java?ref=4a293350217a4c065781be22d8f8067729ab4df9","patch":"@@ -834,11 +834,12 @@ private void fillAttrQuery(\n             final boolean not,\n             final List<Object> parameters,\n             final SearchSupport svs) {\n+\n         // This first branch is required for handling with not conditions given on multivalue fields (SYNCOPE-1419)\n-        if (not && !(cond instanceof AnyCond)\n-                && schema.isMultivalue()\n-                && cond.getType() != AttributeCond.Type.ISNULL\n-                && cond.getType() != AttributeCond.Type.ISNOTNULL) {\n+        if (not && schema.isMultivalue()\n+                && !(cond instanceof AnyCond)\n+                && cond.getType() != AttributeCond.Type.ISNULL && cond.getType() != AttributeCond.Type.ISNOTNULL) {\n+\n             query.append(\"any_id NOT IN (SELECT DISTINCT any_id FROM \");\n             if (schema.isUniqueConstraint()) {\n                 query.append(svs.asSearchViewSupport().uniqueAttr().name);"},{"sha":"1dae5c1401c5dcee02254974a2da9f21c97d114c","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/AnySearchTest.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a293350217a4c065781be22d8f8067729ab4df9/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a293350217a4c065781be22d8f8067729ab4df9/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FAnySearchTest.java?ref=4a293350217a4c065781be22d8f8067729ab4df9","patch":"@@ -747,15 +747,15 @@ public void issueSYNCOPE983() {\n                 AnyTypeKind.USER);\n         assertFalse(users.isEmpty());\n     }\n-    \n+\n     @Test\n     public void issueSYNCOPE1416() {\n         AttributeCond idLeftCond = new AttributeCond(AttributeCond.Type.ISNOTNULL);\n         idLeftCond.setSchema(\"surname\");\n-        \n+\n         AttributeCond idRightCond = new AttributeCond(AttributeCond.Type.ISNOTNULL);\n         idRightCond.setSchema(\"firstname\");\n-        \n+\n         SearchCond searchCondition = SearchCond.getAndCond(\n                 SearchCond.getLeafCond(idLeftCond), SearchCond.getLeafCond(idRightCond));\n "},{"sha":"fa7c5ac262f8c061182d93772e04d17f18e5e3bb","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SearchITCase.java","status":"modified","additions":21,"deletions":1,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4a293350217a4c065781be22d8f8067729ab4df9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4a293350217a4c065781be22d8f8067729ab4df9/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSearchITCase.java?ref=4a293350217a4c065781be22d8f8067729ab4df9","patch":"@@ -290,7 +290,7 @@ public void searchByDate() {\n                         and(\"username\").equalTo(\"bellini\").query()).\n                 build());\n         assertEquals(users, issueSYNCOPE1321);\n-        \n+\n         // SYNCOPE-1416 (check the search for attributes of type different from stringvalue)\n         PagedResult<UserTO> issueSYNCOPE1416 = userService.search(new AnyQuery.Builder().\n                 realm(SyncopeConstants.ROOT_REALM).\n@@ -570,4 +570,24 @@ public void issueSYNCOPE1417() {\n             assertEquals(ClientExceptionType.InvalidSearchExpression, e.getType());\n         }\n     }\n+\n+    @Test\n+    public void issueSYNCOPE1419() {\n+        PagedResult<UserTO> total = userService.search(\n+                new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).page(1).size(1).build());\n+\n+        PagedResult<UserTO> matching = userService.search(\n+                new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n+                        fiql(SyncopeClient.getUserSearchConditionBuilder().\n+                                is(\"loginDate\").equalTo(\"2009-05-26\").query()).page(1).size(1).build());\n+        assertTrue(matching.getSize() > 0);\n+\n+        PagedResult<UserTO> unmatching = userService.search(\n+                new AnyQuery.Builder().realm(SyncopeConstants.ROOT_REALM).\n+                        fiql(SyncopeClient.getUserSearchConditionBuilder().\n+                                is(\"loginDate\").notEqualTo(\"2009-05-26\").query()).page(1).size(1).build());\n+        assertTrue(unmatching.getSize() > 0);\n+\n+        assertEquals(total.getTotalCount(), matching.getTotalCount() + unmatching.getTotalCount());;\n+    }\n }"}]}