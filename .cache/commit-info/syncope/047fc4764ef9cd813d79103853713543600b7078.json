{"sha":"047fc4764ef9cd813d79103853713543600b7078","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA0N2ZjNDc2NGVmOWNkODEzZDc5MTAzODUzNzEzNTQzNjAwYjcwNzg=","commit":{"author":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2012-03-16T15:10:26Z"},"committer":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2012-03-16T15:10:26Z"},"message":"More minor spelling/checkstyle updates\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1301589 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"621a3eec5f85c2c542402daf7005256cdf366a96","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/621a3eec5f85c2c542402daf7005256cdf366a96"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/047fc4764ef9cd813d79103853713543600b7078","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/047fc4764ef9cd813d79103853713543600b7078","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/047fc4764ef9cd813d79103853713543600b7078","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/047fc4764ef9cd813d79103853713543600b7078/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"606e32ec4f8c3e184dc58702862516705a71a0ad","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/606e32ec4f8c3e184dc58702862516705a71a0ad","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/606e32ec4f8c3e184dc58702862516705a71a0ad"}],"stats":{"total":34,"additions":17,"deletions":17},"files":[{"sha":"97d3de55c9cd37a6f163d01fcb5f8774216a3fb7","filename":"client/src/main/java/org/syncope/client/to/AttributeTO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047fc4764ef9cd813d79103853713543600b7078/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAttributeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047fc4764ef9cd813d79103853713543600b7078/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAttributeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FAttributeTO.java?ref=047fc4764ef9cd813d79103853713543600b7078","patch":"@@ -37,7 +37,7 @@ public class AttributeTO extends AbstractBaseBean {\n     private List<String> values;\n \n     /**\n-     * Wether this attribute is read-only or not.\n+     * Whether this attribute is read-only or not.\n      */\n     private boolean readonly;\n \n@@ -67,7 +67,7 @@ public void setSchema(final String schema) {\n \n     /**\n      * @param value an attribute value to be added\n-     * @return wether the operation succeeded or not\n+     * @return whether the operation succeeded or not\n      */\n     public boolean addValue(final String value) {\n         return value == null || isReadonly()\n@@ -77,7 +77,7 @@ public boolean addValue(final String value) {\n \n     /**\n      * @param value an attribute value to be removed\n-     * @return wether the operation succeeded or not\n+     * @return whether the operation succeeded or not\n      */\n     public boolean removeValue(final String value) {\n         return value == null || isReadonly()"},{"sha":"cc71f6355c56351e2354a586a612bab151012671","filename":"client/src/main/java/org/syncope/client/to/PropagationTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047fc4764ef9cd813d79103853713543600b7078/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FPropagationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047fc4764ef9cd813d79103853713543600b7078/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FPropagationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FPropagationTO.java?ref=047fc4764ef9cd813d79103853713543600b7078","patch":"@@ -47,7 +47,7 @@ public class PropagationTO extends AbstractBaseBean {\n     private String resourceName;\n \n     /**\n-     * Propagation task excution status.\n+     * Propagation task execution status.\n      */\n     private PropagationTaskExecStatus status;\n "},{"sha":"f9a05625976799c066cf2b42b5fe460fe5532a55","filename":"client/src/main/java/org/syncope/client/util/AttributableOperations.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047fc4764ef9cd813d79103853713543600b7078/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047fc4764ef9cd813d79103853713543600b7078/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java?ref=047fc4764ef9cd813d79103853713543600b7078","patch":"@@ -301,7 +301,7 @@ private static List<AttributeTO> getUpdateValues(final Map<String, AttributeTO>\n             }\n         }\n \n-        return new ArrayList(attrs.values());\n+        return new ArrayList<AttributeTO>(attrs.values());\n     }\n \n     private static <T extends AbstractAttributableTO, K extends AbstractAttributableMod> void apply(final T to,\n@@ -327,7 +327,7 @@ private static <T extends AbstractAttributableTO, K extends AbstractAttributable\n \n             attrs.put(attrName, attrTO);\n         }\n-        result.setDerivedAttributes(new ArrayList(attrs.values()));\n+        result.setDerivedAttributes(new ArrayList<AttributeTO>(attrs.values()));\n \n         // 4. virtual attributes\n         result.setVirtualAttributes(getUpdateValues(to.getVirtualAttributeMap(), mod.getVirtualAttributesToBeRemoved(),"},{"sha":"bba2bc8516b1ee893c9036ee861ddd0bafc7c899","filename":"client/src/main/java/org/syncope/types/IntMappingType.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047fc4764ef9cd813d79103853713543600b7078/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FIntMappingType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047fc4764ef9cd813d79103853713543600b7078/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FIntMappingType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FIntMappingType.java?ref=047fc4764ef9cd813d79103853713543600b7078","patch":"@@ -64,7 +64,7 @@ public AttributableType getAttributableType() {\n      * @param attributableType attributable type\n      * @return set of attribute types.\n      */\n-    public static EnumSet getAttributeTypes(final AttributableType attributableType) {\n+    public static EnumSet<?> getAttributeTypes(final AttributableType attributableType) {\n         switch (attributableType) {\n             case ROLE:\n                 return EnumSet.allOf(RoleMappingType.class);\n@@ -79,7 +79,7 @@ public static EnumSet getAttributeTypes(final AttributableType attributableType)\n      * Check if attribute type belongs to the specified attributable type set.\n      *\n      * @param attributableType attributable type.\n-     * @param type attrybute type.\n+     * @param type attribute type.\n      * @return true if attribute type belongs to the specified attributable type set.\n      */\n     public static boolean contains(final AttributableType attributableType, final String type) {"},{"sha":"b7e5fcf54083d6f315f7d1ddc4aa89163a5fbfca","filename":"client/src/main/java/org/syncope/types/PasswordPolicySpec.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047fc4764ef9cd813d79103853713543600b7078/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FPasswordPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047fc4764ef9cd813d79103853713543600b7078/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FPasswordPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FPasswordPolicySpec.java?ref=047fc4764ef9cd813d79103853713543600b7078","patch":"@@ -98,42 +98,42 @@ public class PasswordPolicySpec extends AbstractPolicySpec {\n     private boolean mustntEndWithDigit;\n \n     /**\n-     * Specify if must start with a non alphanumeric caracther.\n+     * Specify if must start with a non alphanumeric character.\n      */\n     private boolean mustStartWithNonAlpha;\n \n     /**\n-     * Specify if must start with a alphanumeric caracther.\n+     * Specify if must start with a alphanumeric character.\n      */\n     private boolean mustStartWithAlpha;\n \n     /**\n-     * Specify if mustn't start with a non alphanumeric caracther.\n+     * Specify if mustn't start with a non alphanumeric character.\n      */\n     private boolean mustntStartWithNonAlpha;\n \n     /**\n-     * Specify if mustn't start with a alphanumeric caracther.\n+     * Specify if mustn't start with a alphanumeric character.\n      */\n     private boolean mustntStartWithAlpha;\n \n     /**\n-     * Specify if must end with a non alphanumeric caracther.\n+     * Specify if must end with a non alphanumeric character.\n      */\n     private boolean mustEndWithNonAlpha;\n \n     /**\n-     * Specify if must end with a alphanumeric caracther.\n+     * Specify if must end with a alphanumeric character.\n      */\n     private boolean mustEndWithAlpha;\n \n     /**\n-     * Specify if mustn't end with a non alphanumeric caracther.\n+     * Specify if mustn't end with a non alphanumeric character.\n      */\n     private boolean mustntEndWithNonAlpha;\n \n     /**\n-     * Specify if mustn't end with a alphanumeric caracther.\n+     * Specify if mustn't end with a alphanumeric character.\n      */\n     private boolean mustntEndWithAlpha;\n "},{"sha":"56d8c3e5328491bbb336c065e5ad1b061c92412d","filename":"client/src/main/java/org/syncope/types/SyncPolicySpec.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/047fc4764ef9cd813d79103853713543600b7078/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/047fc4764ef9cd813d79103853713543600b7078/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FSyncPolicySpec.java?ref=047fc4764ef9cd813d79103853713543600b7078","patch":"@@ -39,7 +39,7 @@ public class SyncPolicySpec extends AbstractPolicySpec {\n \n     public ConflictResolutionAction getConflictResolutionAction() {\n         if (conflictResolutionAction == null) {\n-            return conflictResolutionAction.IGNORE;\n+            return ConflictResolutionAction.IGNORE;\n         } else {\n             return conflictResolutionAction;\n         }"}]}