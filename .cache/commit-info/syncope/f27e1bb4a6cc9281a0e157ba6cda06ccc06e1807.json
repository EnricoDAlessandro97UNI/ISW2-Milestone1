{"sha":"f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmYyN2UxYmI0YTZjYzkyODFhMGUxNTdiYTZjZGEwNmNjYzA2ZTE4MDc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-28T13:44:52Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-28T15:42:05Z"},"message":"[SYNCOPE-1054] Now migrated to Flowable 6.1","tree":{"sha":"fe3c979b9ca534753cff8563e925302066a820d0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fe3c979b9ca534753cff8563e925302066a820d0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"7098ca9f6a46273d5ed1ed0214fd5e1b48eb1a6a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7098ca9f6a46273d5ed1ed0214fd5e1b48eb1a6a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7098ca9f6a46273d5ed1ed0214fd5e1b48eb1a6a"}],"stats":{"total":2747,"additions":2021,"deletions":726},"files":[{"sha":"de901be81f0157d27abd22257870d42d6d2f1bc9","filename":"archetype/src/main/resources/archetype-resources/console/pom.xml","status":"modified","additions":12,"deletions":21,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -142,7 +142,7 @@ under the License.\n         \n         <dependency>\n           <groupId>org.flowable</groupId>\n-          <artifactId>flowable-webapp-explorer2</artifactId>            \n+          <artifactId>flowable-ui-modeler-app</artifactId>            \n           <type>war</type>\n           <scope>test</scope>\n         </dependency>\n@@ -160,34 +160,25 @@ under the License.\n                 <phase>process-resources</phase>\n                 <configuration>\n                   <target>\n-                    <unzip src=\"${settings.localRepository}/org/flowable/flowable-webapp-explorer2/${flowable.version}/flowable-webapp-explorer2-${flowable.version}.war\" \n-                           dest=\"${project.build.directory}/flowable-webapp-explorer2\"/>\n+                    <unzip src=\"${settings.localRepository}/org/flowable/flowable-ui-modeler-app/${flowable.version}/flowable-ui-modeler-app-${flowable.version}.war\" \n+                           dest=\"${flowable-modeler.directory}\"/>\n                 \n-                    <mkdir dir=\"${flowable-modeler.directory}\"/>\n-                    <copy file=\"${project.build.directory}/flowable-webapp-explorer2/modeler.html\" \n-                          todir=\"${flowable-modeler.directory}\"/>\n-                    <replace file=\"${flowable-modeler.directory}/modeler.html\"\n+                    <replace file=\"${flowable-modeler.directory}/index.html\"\n                              token=\"&lt;/head&gt;\"\n                              value=\"&lt;script type=&quot;text/javascript&quot;&gt;window.onunload = refreshParent; function refreshParent() { window.opener.location.reload(); }&lt;/script&gt;&lt;/head&gt;\"/>\n-                    <copy file=\"${project.build.directory}/flowable-webapp-explorer2/WEB-INF/classes/stencilset.json\" \n-                          todir=\"${flowable-modeler.directory}\"/>\n-\n-                    <mkdir dir=\"${flowable-modeler.directory}/editor-app\"/>\n-                    <copy todir=\"${flowable-modeler.directory}/editor-app\">\n-                      <fileset dir=\"${project.build.directory}/flowable-webapp-explorer2/editor-app\"/>                  \n-                    </copy>\n-                    <replace file=\"${flowable-modeler.directory}/editor-app/editor/oryx.debug.js\"\n-                             token=\"return this.changeDifference !== 0 || (this.facade.getModelMetaData()['new'] &amp;&amp; this.facade.getCanvas().getChildShapes().size() &gt; 0);\"\n-                             value=\"return this.changeDifference !== 0 \n-              || (typeof this.facade.getModelMetaData() != 'undefined' \n-              &amp;&amp; this.facade.getModelMetaData()['new'] &amp;&amp; this.facade.getCanvas().getChildShapes().size() &gt; 0);\"/>\n                     <replace file=\"${flowable-modeler.directory}/editor-app/configuration/toolbar-default-actions.js\"\n-                             token=\"window.location.href = &quot;./&quot;;\"\n+                             token=\"$location.path('/processes');\"\n                              value=\"window.close();\"/>\n-                                               \n+\n+                    <copy file=\"${basedir}/src/main/resources/app-cfg.js\" \n+                          todir=\"${flowable-modeler.directory}/scripts\"\n+                          overwrite=\"true\"/>\n                     <copy file=\"${basedir}/src/main/resources/url-config.js\" \n                           todir=\"${flowable-modeler.directory}/editor-app/configuration\"\n                           overwrite=\"true\"/>\n+                    <copy file=\"${basedir}/src/main/resources/stencilset.json\" \n+                          todir=\"${flowable-modeler.directory}\"\n+                          overwrite=\"true\"/>\n                     <copy file=\"${basedir}/src/main/resources/save-model.html\" \n                           todir=\"${flowable-modeler.directory}/editor-app/popups\"\n                           overwrite=\"true\"/>"},{"sha":"42a599c7f888174d3edcb8b5aed3727a43cd9296","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ModelerPopupPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FModelerPopupPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FModelerPopupPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FModelerPopupPage.java?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -38,7 +38,7 @@ public ModelerPopupPage(final PageParameters parameters) {\n         // properly parameterize ?modelId=5 with SYNCOPE-1020\n         refresh.add(new AttributeModifier(\n                 \"content\", \"0; url=../../\" + parameters.get(Constants.MODELER_CONTEXT)\n-                + \"/modeler.html?modelId=\" + modelId.toString()));\n+                + \"/index.html#/editor/\" + modelId.toString()));\n         add(refresh);\n     }\n "},{"sha":"9ed57607c733547d1184181c8cb9c9c60840b333","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/FlowableDefinitionLoader.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableDefinitionLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableDefinitionLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableDefinitionLoader.java?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -24,13 +24,13 @@\n import java.util.List;\n import java.util.Map;\n import javax.annotation.Resource;\n-import org.activiti.engine.ProcessEngine;\n-import org.activiti.engine.repository.ProcessDefinition;\n-import org.activiti.spring.SpringProcessEngineConfiguration;\n import org.apache.commons.io.IOUtils;\n import org.apache.syncope.core.spring.ResourceWithFallbackLoader;\n import org.apache.syncope.core.persistence.api.SyncopeLoader;\n import org.apache.syncope.core.workflow.flowable.spring.DomainProcessEngine;\n+import org.flowable.engine.ProcessEngine;\n+import org.flowable.engine.repository.ProcessDefinition;\n+import org.flowable.spring.SpringProcessEngineConfiguration;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;"},{"sha":"eafc0501756f0ece483cfa3c94a1e7b917454f1c","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/FlowableDeployUtils.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableDeployUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableDeployUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableDeployUtils.java?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -26,17 +26,17 @@\n import javax.xml.stream.XMLInputFactory;\n import javax.xml.stream.XMLStreamException;\n import javax.xml.stream.XMLStreamReader;\n-import org.activiti.bpmn.converter.BpmnXMLConverter;\n-import org.activiti.bpmn.model.BpmnModel;\n-import org.activiti.editor.constants.ModelDataJsonConstants;\n-import org.activiti.editor.language.json.converter.BpmnJsonConverter;\n-import org.activiti.engine.ActivitiException;\n-import org.activiti.engine.ProcessEngine;\n-import org.activiti.engine.repository.Deployment;\n-import org.activiti.engine.repository.Model;\n-import org.activiti.engine.repository.ProcessDefinition;\n import org.apache.commons.io.IOUtils;\n import org.apache.syncope.core.workflow.api.WorkflowException;\n+import org.flowable.bpmn.converter.BpmnXMLConverter;\n+import org.flowable.bpmn.model.BpmnModel;\n+import org.flowable.editor.constants.ModelDataJsonConstants;\n+import org.flowable.editor.language.json.converter.BpmnJsonConverter;\n+import org.flowable.engine.ProcessEngine;\n+import org.flowable.engine.common.api.FlowableException;\n+import org.flowable.engine.repository.Deployment;\n+import org.flowable.engine.repository.Model;\n+import org.flowable.engine.repository.ProcessDefinition;\n \n public final class FlowableDeployUtils {\n \n@@ -48,7 +48,7 @@ public static Deployment deployDefinition(\n         try {\n             return engine.getRepositoryService().createDeployment().\n                     addInputStream(resourceName, new ByteArrayInputStream(definition)).deploy();\n-        } catch (ActivitiException e) {\n+        } catch (FlowableException e) {\n             throw new WorkflowException(\"While importing \" + resourceName, e);\n         }\n     }"},{"sha":"0b32990e547fb227294fa9abbe6d2c3fe9327218","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/FlowableUserWorkflowAdapter.java","status":"modified","additions":33,"deletions":33,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FFlowableUserWorkflowAdapter.java?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -33,23 +33,6 @@\n import java.util.Set;\n import java.util.stream.Collectors;\n import javax.annotation.Resource;\n-import org.activiti.bpmn.converter.BpmnXMLConverter;\n-import org.activiti.bpmn.model.BpmnModel;\n-import org.activiti.editor.constants.ModelDataJsonConstants;\n-import org.activiti.editor.language.json.converter.BpmnJsonConverter;\n-import org.activiti.engine.ActivitiException;\n-import org.activiti.engine.form.FormProperty;\n-import org.activiti.engine.form.FormType;\n-import org.activiti.engine.form.TaskFormData;\n-import org.activiti.engine.history.HistoricActivityInstance;\n-import org.activiti.engine.history.HistoricTaskInstance;\n-import org.activiti.engine.impl.persistence.entity.HistoricFormPropertyEntity;\n-import org.activiti.engine.query.Query;\n-import org.activiti.engine.repository.Deployment;\n-import org.activiti.engine.repository.Model;\n-import org.activiti.engine.repository.ProcessDefinition;\n-import org.activiti.engine.runtime.ProcessInstance;\n-import org.activiti.engine.task.Task;\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.ImmutablePair;\n@@ -75,6 +58,23 @@\n import org.apache.syncope.core.workflow.api.WorkflowDefinitionFormat;\n import org.apache.syncope.core.workflow.api.WorkflowException;\n import org.apache.syncope.core.workflow.java.AbstractUserWorkflowAdapter;\n+import org.flowable.bpmn.converter.BpmnXMLConverter;\n+import org.flowable.bpmn.model.BpmnModel;\n+import org.flowable.editor.constants.ModelDataJsonConstants;\n+import org.flowable.editor.language.json.converter.BpmnJsonConverter;\n+import org.flowable.engine.common.api.FlowableException;\n+import org.flowable.engine.common.api.query.Query;\n+import org.flowable.engine.form.FormProperty;\n+import org.flowable.engine.form.FormType;\n+import org.flowable.engine.form.TaskFormData;\n+import org.flowable.engine.history.HistoricActivityInstance;\n+import org.flowable.engine.history.HistoricTaskInstance;\n+import org.flowable.engine.impl.persistence.entity.HistoricFormPropertyEntity;\n+import org.flowable.engine.repository.Deployment;\n+import org.flowable.engine.repository.Model;\n+import org.flowable.engine.repository.ProcessDefinition;\n+import org.flowable.engine.runtime.ProcessInstance;\n+import org.flowable.engine.task.Task;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n \n@@ -134,7 +134,7 @@ public String getPrefix() {\n         return \"ACT_\";\n     }\n \n-    protected void throwException(final ActivitiException e, final String defaultMessage) {\n+    protected void throwException(final FlowableException e, final String defaultMessage) {\n         if (e.getCause() != null) {\n             if (e.getCause().getCause() instanceof SyncopeClientException) {\n                 throw (SyncopeClientException) e.getCause().getCause();\n@@ -169,7 +169,7 @@ protected String getFormTask(final User user) {\n                 if (formData != null && !formData.getFormProperties().isEmpty()) {\n                     result = tasks.get(0).getId();\n                 }\n-            } catch (ActivitiException e) {\n+            } catch (FlowableException e) {\n                 LOG.warn(\"Could not get task form data\", e);\n             }\n         }\n@@ -227,7 +227,7 @@ protected WorkflowResult<Pair<String, Boolean>> doCreate(\n         ProcessInstance processInstance = null;\n         try {\n             processInstance = engine.getRuntimeService().startProcessInstanceByKey(WF_PROCESS_ID, variables);\n-        } catch (ActivitiException e) {\n+        } catch (FlowableException e) {\n             throwException(e, \"While starting \" + WF_PROCESS_ID + \" instance\");\n         }\n \n@@ -288,7 +288,7 @@ protected Set<String> doExecuteTask(final User user, final String task, final Ma\n         if (tasks.size() == 1) {\n             try {\n                 engine.getTaskService().complete(tasks.get(0).getId(), variables);\n-            } catch (ActivitiException e) {\n+            } catch (FlowableException e) {\n                 throwException(e, \"While completing task '\" + tasks.get(0).getName() + \"' for \" + user);\n             }\n         } else {\n@@ -617,10 +617,10 @@ public List<WorkflowFormTO> getForms() {\n                 } else if (obj instanceof Task) {\n                     forms.add(getFormTO((Task) obj));\n                 } else {\n-                    throw new ActivitiException(\n+                    throw new FlowableException(\n                             \"Failure retrieving form\", new IllegalArgumentException(\"Invalid task type\"));\n                 }\n-            } catch (ActivitiException e) {\n+            } catch (FlowableException e) {\n                 LOG.debug(\"No form found for task {}\", obj, e);\n             }\n         });\n@@ -633,14 +633,14 @@ public WorkflowFormTO getForm(final String workflowId) {\n         Task task;\n         try {\n             task = engine.getTaskService().createTaskQuery().processInstanceId(workflowId).singleResult();\n-        } catch (ActivitiException e) {\n+        } catch (FlowableException e) {\n             throw new WorkflowException(\"While reading form for workflow instance \" + workflowId, e);\n         }\n \n         TaskFormData formData;\n         try {\n             formData = engine.getFormService().getTaskFormData(task.getId());\n-        } catch (ActivitiException e) {\n+        } catch (FlowableException e) {\n             LOG.debug(\"No form found for task {}\", task.getId(), e);\n             formData = null;\n         }\n@@ -658,16 +658,16 @@ protected Pair<Task, TaskFormData> checkTask(final String taskId, final String a\n         try {\n             task = engine.getTaskService().createTaskQuery().taskId(taskId).singleResult();\n             if (task == null) {\n-                throw new ActivitiException(\"NULL result\");\n+                throw new FlowableException(\"NULL result\");\n             }\n-        } catch (ActivitiException e) {\n+        } catch (FlowableException e) {\n             throw new NotFoundException(\"Flowable Task \" + taskId, e);\n         }\n \n         TaskFormData formData;\n         try {\n             formData = engine.getFormService().getTaskFormData(task.getId());\n-        } catch (ActivitiException e) {\n+        } catch (FlowableException e) {\n             throw new NotFoundException(\"Form for Flowable Task \" + taskId, e);\n         }\n \n@@ -699,7 +699,7 @@ public WorkflowFormTO claimForm(final String taskId) {\n         try {\n             engine.getTaskService().setOwner(taskId, authUser);\n             task = engine.getTaskService().createTaskQuery().taskId(taskId).singleResult();\n-        } catch (ActivitiException e) {\n+        } catch (FlowableException e) {\n             throw new WorkflowException(\"While reading task \" + taskId, e);\n         }\n \n@@ -736,7 +736,7 @@ public WorkflowResult<UserPatch> submitForm(final WorkflowFormTO form) {\n         try {\n             engine.getFormService().submitTaskFormData(form.getTaskId(), getPropertiesForSubmit(form));\n             engine.getRuntimeService().setVariable(user.getWorkflowId(), FORM_SUBMITTER, authUser);\n-        } catch (ActivitiException e) {\n+        } catch (FlowableException e) {\n             throwException(e, \"While submitting form for task \" + form.getTaskId());\n         }\n \n@@ -807,7 +807,7 @@ public List<WorkflowDefinitionTO> getDefinitions() {\n \n                         return defTO;\n                     }).collect(Collectors.toList());\n-        } catch (ActivitiException e) {\n+        } catch (FlowableException e) {\n             throw new WorkflowException(\"While listing available process definitions\", e);\n         }\n     }\n@@ -816,7 +816,7 @@ protected ProcessDefinition getProcessDefinitionByKey(final String key) {\n         try {\n             return engine.getRepositoryService().createProcessDefinitionQuery().\n                     processDefinitionKey(key).latestVersion().singleResult();\n-        } catch (ActivitiException e) {\n+        } catch (FlowableException e) {\n             throw new WorkflowException(\"While accessing process \" + key, e);\n         }\n \n@@ -826,7 +826,7 @@ protected ProcessDefinition getProcessDefinitionByDeploymentId(final String depl\n         try {\n             return engine.getRepositoryService().createProcessDefinitionQuery().\n                     deploymentId(deploymentId).latestVersion().singleResult();\n-        } catch (ActivitiException e) {\n+        } catch (FlowableException e) {\n             throw new WorkflowException(\"While accessing deployment \" + deploymentId, e);\n         }\n "},{"sha":"7fd0faac182cdaa0c35b2a176e689b78377d3ebe","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/SyncopeEntitiesVariableType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeEntitiesVariableType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeEntitiesVariableType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeEntitiesVariableType.java?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -18,8 +18,8 @@\n  */\n package org.apache.syncope.core.workflow.flowable;\n \n-import org.activiti.engine.impl.variable.SerializableType;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n+import org.flowable.engine.impl.variable.SerializableType;\n \n /**\n  * Flowable variable type for handling Syncope entities as Flowable variables."},{"sha":"f73e45d9426467b4fb3e3efe3aa365c5697b5b00","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/SyncopeGroupManager.java","status":"removed","additions":0,"deletions":122,"changes":122,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7098ca9f6a46273d5ed1ed0214fd5e1b48eb1a6a/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeGroupManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7098ca9f6a46273d5ed1ed0214fd5e1b48eb1a6a/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeGroupManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeGroupManager.java?ref=7098ca9f6a46273d5ed1ed0214fd5e1b48eb1a6a","patch":"@@ -1,122 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.workflow.flowable;\n-\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.Map;\n-import org.activiti.engine.identity.Group;\n-import org.activiti.engine.identity.GroupQuery;\n-import org.activiti.engine.impl.GroupQueryImpl;\n-import org.activiti.engine.impl.Page;\n-import org.activiti.engine.impl.persistence.entity.GroupEntity;\n-import org.activiti.engine.impl.persistence.entity.GroupIdentityManager;\n-import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n-import org.apache.syncope.core.persistence.api.dao.UserDAO;\n-import org.apache.syncope.core.persistence.api.entity.user.User;\n-import org.springframework.beans.factory.annotation.Autowired;\n-\n-public class SyncopeGroupManager implements GroupIdentityManager, SyncopeSession {\n-\n-    @Autowired\n-    private UserDAO userDAO;\n-\n-    @Autowired\n-    private GroupDAO groupDAO;\n-\n-    @Override\n-    public Class<?> getType() {\n-        return GroupIdentityManager.class;\n-    }\n-\n-    @Override\n-    public Group createNewGroup(final String groupId) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public GroupQuery createNewGroupQuery() {\n-        return new SyncopeGroupQueryImpl(groupDAO);\n-    }\n-\n-    @Override\n-    public void deleteGroup(final String groupId) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public List<Group> findGroupsByUser(final String userId) {\n-        List<Group> result = Collections.emptyList();\n-        User user = userDAO.findByUsername(userId);\n-        if (user != null) {\n-            result = new ArrayList<>();\n-            for (String groupName : userDAO.findAllGroupNames(user)) {\n-                result.add(new GroupEntity(groupName));\n-            }\n-        }\n-\n-        return result;\n-    }\n-\n-    @Override\n-    public List<Group> findGroupByQueryCriteria(final GroupQueryImpl query, final Page page) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public long findGroupCountByQueryCriteria(final GroupQueryImpl query) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public List<Group> findGroupsByNativeQuery(final Map<String, Object> parameterMap, final int firstResult,\n-            final int maxResults) {\n-\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public long findGroupCountByNativeQuery(final Map<String, Object> parameterMap) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public void insertGroup(final Group group) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public void updateGroup(final Group updatedGroup) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public boolean isNewGroup(final Group group) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public void flush() {\n-    }\n-\n-    @Override\n-    public void close() {\n-    }\n-}"},{"sha":"b2387e560b5900c422c9984bd9ed0488ae76a698","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/SyncopeGroupQueryImpl.java","status":"modified","additions":33,"deletions":103,"changes":136,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeGroupQueryImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeGroupQueryImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeGroupQueryImpl.java?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -18,142 +18,72 @@\n  */\n package org.apache.syncope.core.workflow.flowable;\n \n-import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n import java.util.stream.Collectors;\n-import org.activiti.engine.ActivitiException;\n-import org.activiti.engine.identity.Group;\n-import org.activiti.engine.identity.GroupQuery;\n-import org.activiti.engine.impl.persistence.entity.GroupEntity;\n-import org.apache.syncope.core.persistence.api.dao.AnyDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n+import org.apache.syncope.core.persistence.api.dao.UserDAO;\n+import org.flowable.idm.api.Group;\n+import org.flowable.idm.engine.impl.GroupQueryImpl;\n+import org.flowable.idm.engine.impl.persistence.entity.GroupEntity;\n+import org.flowable.idm.engine.impl.persistence.entity.GroupEntityImpl;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.transaction.annotation.Transactional;\n \n-public class SyncopeGroupQueryImpl implements GroupQuery {\n+public class SyncopeGroupQueryImpl extends GroupQueryImpl {\n \n-    private final GroupDAO groupDAO;\n+    private static final long serialVersionUID = -2595069675443343682L;\n \n-    private String groupId;\n+    @Autowired\n+    private UserDAO userDAO;\n \n-    private List<Group> result;\n-\n-    public SyncopeGroupQueryImpl(final GroupDAO groupDAO) {\n-        this.groupDAO = groupDAO;\n-    }\n-\n-    @Override\n-    public GroupQuery groupId(final String groupId) {\n-        try {\n-            this.groupId = groupId;\n-        } catch (NumberFormatException e) {\n-            // ignore\n-        }\n-\n-        return this;\n-    }\n-\n-    @Override\n-    public GroupQuery groupName(final String groupName) {\n-        return this;\n-    }\n-\n-    @Override\n-    public GroupQuery groupNameLike(final String groupNameLike) {\n-        return this;\n-    }\n-\n-    @Override\n-    public GroupQuery groupType(final String groupType) {\n-        return this;\n-    }\n-\n-    @Override\n-    public GroupQuery groupMember(final String groupMemberUserId) {\n-        return this;\n-    }\n-\n-    @Override\n-    public GroupQuery orderByGroupId() {\n-        return this;\n-    }\n-\n-    @Override\n-    public GroupQuery orderByGroupName() {\n-        return this;\n-    }\n-\n-    @Override\n-    public GroupQuery orderByGroupType() {\n-        return this;\n-    }\n+    @Autowired\n+    private GroupDAO groupDAO;\n \n-    @Override\n-    public GroupQuery asc() {\n-        return this;\n-    }\n-\n-    @Override\n-    public GroupQuery desc() {\n-        return this;\n-    }\n+    private List<Group> result;\n \n-    private Group fromSyncopeGroup(final org.apache.syncope.core.persistence.api.entity.group.Group group) {\n-        return new GroupEntity(group.getKey());\n+    private Group fromSyncopeGroup(final String name) {\n+        GroupEntity group = new GroupEntityImpl();\n+        group.setId(name);\n+        return group;\n     }\n \n     private void execute() {\n-        if (groupId != null) {\n-            org.apache.syncope.core.persistence.api.entity.group.Group syncopeGroup = groupDAO.findByName(groupId);\n+        if (id != null) {\n+            org.apache.syncope.core.persistence.api.entity.group.Group syncopeGroup = groupDAO.findByName(id);\n             if (syncopeGroup == null) {\n                 result = Collections.emptyList();\n             } else {\n-                result = Collections.singletonList(fromSyncopeGroup(syncopeGroup));\n-            }\n-        }\n-        if (result == null) {\n-            result = new ArrayList<>();\n-            for (int page = 1; page <= (groupDAO.count() / AnyDAO.DEFAULT_PAGE_SIZE) + 1; page++) {\n-                result.addAll(groupDAO.findAll(page, AnyDAO.DEFAULT_PAGE_SIZE).stream().\n-                        map(group -> fromSyncopeGroup(group)).collect(Collectors.toList()));\n+                result = Collections.singletonList(fromSyncopeGroup(syncopeGroup.getName()));\n             }\n+        } else if (userId != null) {\n+            result = userDAO.findAllGroupNames(userDAO.findByUsername(userId)).stream().\n+                    map(groupName -> fromSyncopeGroup(groupName)).\n+                    collect(Collectors.toList());\n         }\n     }\n \n+    @Transactional(readOnly = true)\n     @Override\n     public long count() {\n-        if (result == null) {\n-            execute();\n-        }\n-        return result.size();\n-    }\n+        checkQueryOk();\n \n-    @Override\n-    public Group singleResult() {\n+        this.resultType = ResultType.COUNT;\n         if (result == null) {\n             execute();\n         }\n-        if (result.isEmpty()) {\n-            throw new ActivitiException(\"Empty result\");\n-        }\n-\n-        return result.get(0);\n+        return result.size();\n     }\n \n+    @Transactional(readOnly = true)\n     @Override\n     public List<Group> list() {\n+        checkQueryOk();\n+\n+        this.resultType = ResultType.LIST;\n         if (result == null) {\n             execute();\n         }\n         return result;\n     }\n-\n-    @Override\n-    public List<Group> listPage(final int firstResult, final int maxResults) {\n-        return list();\n-    }\n-\n-    @Override\n-    public GroupQuery potentialStarter(final String procDefId) {\n-        throw new UnsupportedOperationException();\n-    }\n }"},{"sha":"7e0dff9c51dd3f997cb3a23972e96cda75fa3bda","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/SyncopeIdmIdentityService.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeIdmIdentityService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeIdmIdentityService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeIdmIdentityService.java?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.workflow.flowable;\n+\n+import org.flowable.idm.api.GroupQuery;\n+import org.flowable.idm.api.UserQuery;\n+import org.flowable.idm.engine.impl.IdmIdentityServiceImpl;\n+import org.springframework.beans.BeansException;\n+import org.springframework.beans.factory.support.AbstractBeanDefinition;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.ApplicationContextAware;\n+import org.springframework.context.ConfigurableApplicationContext;\n+\n+public class SyncopeIdmIdentityService extends IdmIdentityServiceImpl implements ApplicationContextAware {\n+\n+    private ConfigurableApplicationContext ctx;\n+\n+    @Override\n+    public void setApplicationContext(final ApplicationContext ctx) throws BeansException {\n+        this.ctx = (ConfigurableApplicationContext) ctx;\n+    }\n+\n+    @Override\n+    public UserQuery createUserQuery() {\n+        return (UserQuery) ctx.getBeanFactory().\n+                createBean(SyncopeUserQueryImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n+    }\n+\n+    @Override\n+    public GroupQuery createGroupQuery() {\n+        return (GroupQuery) ctx.getBeanFactory().\n+                createBean(SyncopeGroupQueryImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n+    }\n+\n+}"},{"sha":"709a61dd38af3a71043e634e8988bb4c52333bcf","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/SyncopeSession.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeSession.java?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.core.workflow.flowable;\n \n-import org.activiti.engine.impl.interceptor.Session;\n+import org.flowable.engine.common.impl.interceptor.Session;\n \n public interface SyncopeSession extends Session {\n "},{"sha":"a0420c37c236e4f428bc7afa18e25bebe8ca4a23","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/SyncopeSessionFactory.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeSessionFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeSessionFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeSessionFactory.java?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -18,8 +18,9 @@\n  */\n package org.apache.syncope.core.workflow.flowable;\n \n-import org.activiti.engine.impl.interceptor.Session;\n-import org.activiti.engine.impl.interceptor.SessionFactory;\n+import org.flowable.engine.common.impl.interceptor.CommandContext;\n+import org.flowable.engine.common.impl.interceptor.Session;\n+import org.flowable.engine.common.impl.interceptor.SessionFactory;\n \n public class SyncopeSessionFactory implements SessionFactory {\n \n@@ -31,7 +32,7 @@ public Class<?> getSessionType() {\n     }\n \n     @Override\n-    public Session openSession() {\n+    public Session openSession(final CommandContext cc) {\n         return syncopeSession;\n     }\n "},{"sha":"a6cc2013d4015d58c52ab6f3f21f5344b4c0fbcd","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/SyncopeUserManager.java","status":"removed","additions":0,"deletions":166,"changes":166,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7098ca9f6a46273d5ed1ed0214fd5e1b48eb1a6a/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeUserManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7098ca9f6a46273d5ed1ed0214fd5e1b48eb1a6a/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeUserManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeUserManager.java?ref=7098ca9f6a46273d5ed1ed0214fd5e1b48eb1a6a","patch":"@@ -1,166 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.workflow.flowable;\n-\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.Map;\n-import org.activiti.engine.identity.Group;\n-import org.activiti.engine.identity.Picture;\n-import org.activiti.engine.identity.User;\n-import org.activiti.engine.identity.UserQuery;\n-import org.activiti.engine.impl.Page;\n-import org.activiti.engine.impl.UserQueryImpl;\n-import org.activiti.engine.impl.persistence.entity.GroupEntity;\n-import org.activiti.engine.impl.persistence.entity.IdentityInfoEntity;\n-import org.activiti.engine.impl.persistence.entity.UserEntity;\n-import org.activiti.engine.impl.persistence.entity.UserIdentityManager;\n-import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n-import org.apache.syncope.core.persistence.api.dao.UserDAO;\n-import org.springframework.beans.factory.annotation.Autowired;\n-\n-public class SyncopeUserManager implements UserIdentityManager, SyncopeSession {\n-\n-    @Autowired\n-    private UserDAO userDAO;\n-\n-    @Autowired\n-    private GroupDAO groupDAO;\n-\n-    @Override\n-    public Class<?> getType() {\n-        return UserIdentityManager.class;\n-    }\n-\n-    @Override\n-    public Boolean checkPassword(final String userKey, final String password) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public User createNewUser(final String userKey) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public UserQuery createNewUserQuery() {\n-        return new SyncopeUserQueryImpl(userDAO, groupDAO);\n-    }\n-\n-    @Override\n-    public void deleteUser(final String userKey) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public List<Group> findGroupsByUser(final String username) {\n-        List<Group> result = Collections.emptyList();\n-        org.apache.syncope.core.persistence.api.entity.user.User user = userDAO.findByUsername(username);\n-        if (user != null) {\n-            result = new ArrayList<>();\n-            for (String groupName : userDAO.findAllGroupNames(user)) {\n-                result.add(new GroupEntity(groupName));\n-            }\n-        }\n-\n-        return result;\n-    }\n-\n-    @Override\n-    public UserEntity findUserById(final String username) {\n-        UserEntity result = null;\n-        org.apache.syncope.core.persistence.api.entity.user.User user = userDAO.findByUsername(username);\n-        if (user != null) {\n-            result = new UserEntity(username);\n-        }\n-\n-        return result;\n-    }\n-\n-    @Override\n-    public void flush() {\n-    }\n-\n-    @Override\n-    public void close() {\n-    }\n-\n-    @Override\n-    public void insertUser(final User user) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public boolean isNewUser(final User user) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public void updateUser(final User updatedUser) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public Picture getUserPicture(final String string) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public void setUserPicture(final String string, final Picture pctr) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public List<User> findUserByQueryCriteria(final UserQueryImpl query, final Page page) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public long findUserCountByQueryCriteria(final UserQueryImpl query) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public IdentityInfoEntity findUserInfoByUserIdAndKey(final String userKey, final String key) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public List<String> findUserInfoKeysByUserIdAndType(final String userKey, final String type) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public List<User> findPotentialStarterUsers(final String proceDefId) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public List<User> findUsersByNativeQuery(final Map<String, Object> parameterMap,\n-            final int firstResult, final int maxResults) {\n-\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public long findUserCountByNativeQuery(final Map<String, Object> parameterMap) {\n-        throw new UnsupportedOperationException();\n-    }\n-}"},{"sha":"6e8f0c7c76b4dcf7184b79abf83a2b2c809f20d3","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/SyncopeUserQueryImpl.java","status":"modified","additions":31,"deletions":136,"changes":167,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeUserQueryImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeUserQueryImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2FSyncopeUserQueryImpl.java?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -21,186 +21,81 @@\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n-import java.util.stream.Collectors;\n-import org.activiti.engine.ActivitiException;\n-import org.activiti.engine.identity.User;\n-import org.activiti.engine.identity.UserQuery;\n-import org.activiti.engine.impl.persistence.entity.UserEntity;\n-import org.apache.syncope.core.persistence.api.dao.AnyDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.user.UMembership;\n+import org.flowable.idm.api.User;\n+import org.flowable.idm.engine.impl.UserQueryImpl;\n+import org.flowable.idm.engine.impl.persistence.entity.UserEntity;\n+import org.flowable.idm.engine.impl.persistence.entity.UserEntityImpl;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.transaction.annotation.Transactional;\n \n-public class SyncopeUserQueryImpl implements UserQuery {\n+public class SyncopeUserQueryImpl extends UserQueryImpl {\n \n-    private final UserDAO userDAO;\n+    private static final long serialVersionUID = 4403344392227706318L;\n \n-    private final GroupDAO groupDAO;\n+    @Autowired\n+    private UserDAO userDAO;\n \n-    private String username;\n-\n-    private String memberOf;\n+    @Autowired\n+    private GroupDAO groupDAO;\n \n     private List<User> result;\n \n-    public SyncopeUserQueryImpl(final UserDAO userDAO, final GroupDAO groupDAO) {\n-        this.userDAO = userDAO;\n-        this.groupDAO = groupDAO;\n-    }\n-\n-    @Override\n-    public UserQuery userId(final String id) {\n-        this.username = id;\n-        return this;\n-    }\n-\n-    @Override\n-    public UserQuery userFirstName(final String firstName) {\n-        return this;\n-    }\n-\n-    @Override\n-    public UserQuery userFirstNameLike(final String firstNameLike) {\n-        return this;\n-    }\n-\n-    @Override\n-    public UserQuery userLastName(final String lastName) {\n-        return this;\n-    }\n-\n-    @Override\n-    public UserQuery userLastNameLike(final String lastNameLike) {\n-        return this;\n-    }\n-\n-    @Override\n-    public UserQuery userFullNameLike(final String fullNameLike) {\n-        return this;\n-    }\n-\n-    @Override\n-    public UserQuery userEmail(final String email) {\n-        return this;\n-    }\n-\n-    @Override\n-    public UserQuery userEmailLike(final String emailLike) {\n-        return this;\n-    }\n-\n-    @Override\n-    public UserQuery memberOfGroup(final String groupId) {\n-        memberOf = groupId;\n-        return this;\n-    }\n-\n-    @Override\n-    public UserQuery orderByUserId() {\n-        return this;\n-    }\n-\n-    @Override\n-    public UserQuery orderByUserFirstName() {\n-        return this;\n-    }\n-\n-    @Override\n-    public UserQuery orderByUserLastName() {\n-        return this;\n-    }\n-\n-    @Override\n-    public UserQuery orderByUserEmail() {\n-        return this;\n-    }\n-\n-    @Override\n-    public UserQuery asc() {\n-        return this;\n-    }\n-\n-    @Override\n-    public UserQuery desc() {\n-        return this;\n-    }\n-\n-    private User fromSyncopeUser(final org.apache.syncope.core.persistence.api.entity.user.User user) {\n-        return new UserEntity(user.getUsername());\n+    private User fromSyncopeUser(final org.apache.syncope.core.persistence.api.entity.user.User syncopeUser) {\n+        UserEntity user = new UserEntityImpl();\n+        user.setId(syncopeUser.getUsername());\n+        return user;\n     }\n \n     private void execute() {\n-        if (username != null) {\n-            org.apache.syncope.core.persistence.api.entity.user.User user = userDAO.findByUsername(username);\n+        if (id != null) {\n+            org.apache.syncope.core.persistence.api.entity.user.User user = userDAO.findByUsername(id);\n             if (user == null) {\n                 result = Collections.<User>emptyList();\n-            } else if (memberOf == null || userDAO.findAllGroupNames(user).contains(memberOf)) {\n+            } else if (groupId == null || userDAO.findAllGroupNames(user).contains(groupId)) {\n                 result = Collections.singletonList(fromSyncopeUser(user));\n             }\n-        }\n-        if (memberOf != null) {\n-            Group group = groupDAO.findByName(memberOf);\n+        } else if (groupId != null) {\n+            Group group = groupDAO.findByName(groupId);\n             if (group == null) {\n                 result = Collections.<User>emptyList();\n             } else {\n                 result = new ArrayList<>();\n                 List<UMembership> memberships = groupDAO.findUMemberships(group);\n                 memberships.stream().map(membership -> fromSyncopeUser(membership.getLeftEnd())).\n-                        filter((user) -> (!result.contains(user))).\n-                        forEachOrdered((user) -> {\n+                        filter(user -> (!result.contains(user))).\n+                        forEachOrdered(user -> {\n                             result.add(user);\n                         });\n             }\n         }\n-        // THIS CAN BE *VERY* DANGEROUS\n-        if (result == null) {\n-            result = new ArrayList<>();\n-            for (int page = 1; page <= (userDAO.count() / AnyDAO.DEFAULT_PAGE_SIZE) + 1; page++) {\n-                result.addAll(userDAO.findAll(page, AnyDAO.DEFAULT_PAGE_SIZE).stream().\n-                        map(user -> fromSyncopeUser(user)).collect(Collectors.toList()));\n-            }\n-        }\n     }\n \n+    @Transactional(readOnly = true)\n     @Override\n     public long count() {\n-        if (result == null) {\n-            execute();\n-        }\n-        return result.size();\n-    }\n+        checkQueryOk();\n \n-    @Override\n-    public User singleResult() {\n+        this.resultType = ResultType.COUNT;\n         if (result == null) {\n             execute();\n         }\n-        if (result.isEmpty()) {\n-            throw new ActivitiException(\"Empty result\");\n-        }\n-\n-        return result.get(0);\n+        return result.size();\n     }\n \n+    @Transactional(readOnly = true)\n     @Override\n     public List<User> list() {\n-        if (result == null) {\n-            execute();\n-        }\n-        return result;\n-    }\n+        checkQueryOk();\n \n-    @Override\n-    public List<User> listPage(final int firstResult, final int maxResults) {\n+        this.resultType = ResultType.LIST;\n         if (result == null) {\n             execute();\n         }\n-        return result.subList(firstResult, firstResult + maxResults - 1);\n+        return result;\n     }\n \n-    @Override\n-    public UserQuery potentialStarter(final String string) {\n-        throw new UnsupportedOperationException();\n-    }\n }"},{"sha":"92e9aff624fe2c1d50434a9f1c8a7cc6a5bf2e70","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/spring/DomainProcessEngine.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2Fspring%2FDomainProcessEngine.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2Fspring%2FDomainProcessEngine.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2Fspring%2FDomainProcessEngine.java?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -21,18 +21,18 @@\n import java.util.Collections;\n import java.util.Map;\n import javax.sql.DataSource;\n-import org.activiti.engine.DynamicBpmnService;\n-import org.activiti.engine.FormService;\n-import org.activiti.engine.HistoryService;\n-import org.activiti.engine.IdentityService;\n-import org.activiti.engine.ManagementService;\n-import org.activiti.engine.ProcessEngine;\n-import org.activiti.engine.ProcessEngineConfiguration;\n-import org.activiti.engine.RepositoryService;\n-import org.activiti.engine.RuntimeService;\n-import org.activiti.engine.TaskService;\n-import org.activiti.engine.impl.ProcessEngineImpl;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n+import org.flowable.engine.DynamicBpmnService;\n+import org.flowable.engine.FormService;\n+import org.flowable.engine.HistoryService;\n+import org.flowable.engine.IdentityService;\n+import org.flowable.engine.ManagementService;\n+import org.flowable.engine.ProcessEngine;\n+import org.flowable.engine.ProcessEngineConfiguration;\n+import org.flowable.engine.RepositoryService;\n+import org.flowable.engine.RuntimeService;\n+import org.flowable.engine.TaskService;\n+import org.flowable.engine.impl.ProcessEngineImpl;\n \n /**\n  * {@link ProcessEngine} delegating actual method invocation to the inner map of {@link ProcessEngine} instances,\n@@ -57,9 +57,9 @@ public String getName() {\n \n     @Override\n     public void close() {\n-        for (ProcessEngine engine : engines.values()) {\n+        engines.values().forEach(engine -> {\n             engine.close();\n-        }\n+        });\n     }\n \n     @Override"},{"sha":"fbd0f220f5241e9720299460489c3bcea69ac215","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/spring/DomainProcessEngineFactoryBean.java","status":"modified","additions":33,"deletions":25,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2Fspring%2FDomainProcessEngineFactoryBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2Fspring%2FDomainProcessEngineFactoryBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2Fspring%2FDomainProcessEngineFactoryBean.java?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -21,11 +21,14 @@\n import java.util.HashMap;\n import java.util.Map;\n import javax.sql.DataSource;\n-import org.activiti.engine.ProcessEngine;\n-import org.activiti.engine.impl.cfg.SpringBeanFactoryProxyMap;\n-import org.activiti.spring.SpringExpressionManager;\n-import org.activiti.spring.SpringProcessEngineConfiguration;\n import org.apache.commons.lang3.StringUtils;\n+import org.flowable.engine.ProcessEngine;\n+import org.flowable.engine.common.impl.cfg.SpringBeanFactoryProxyMap;\n+import org.flowable.engine.common.impl.interceptor.EngineConfigurationConstants;\n+import org.flowable.engine.impl.util.EngineServiceUtil;\n+import org.flowable.idm.spring.SpringIdmEngineConfiguration;\n+import org.flowable.spring.SpringExpressionManager;\n+import org.flowable.spring.SpringProcessEngineConfiguration;\n import org.springframework.beans.BeansException;\n import org.springframework.beans.factory.DisposableBean;\n import org.springframework.beans.factory.FactoryBean;\n@@ -54,29 +57,34 @@ public DomainProcessEngine getObject() throws Exception {\n         if (engine == null) {\n             Map<String, ProcessEngine> engines = new HashMap<>();\n \n-            for (Map.Entry<String, DataSource> entry : ctx.getBeansOfType(DataSource.class).entrySet()) {\n-                if (!entry.getKey().startsWith(\"local\")) {\n-                    String domain = StringUtils.substringBefore(entry.getKey(), DataSource.class.getSimpleName());\n-                    DataSource dataSource = entry.getValue();\n-                    PlatformTransactionManager transactionManager = ctx.getBean(\n-                            domain + \"TransactionManager\", PlatformTransactionManager.class);\n-                    Object entityManagerFactory = ctx.getBean(domain + \"EntityManagerFactory\");\n+            ctx.getBeansOfType(DataSource.class).entrySet().stream().\n+                    filter(entry -> (!entry.getKey().startsWith(\"local\"))).\n+                    forEachOrdered(entry -> {\n+                        String domain = StringUtils.substringBefore(entry.getKey(), DataSource.class.getSimpleName());\n+                        DataSource dataSource = entry.getValue();\n+                        PlatformTransactionManager transactionManager = ctx.getBean(\n+                                domain + \"TransactionManager\", PlatformTransactionManager.class);\n+                        Object entityManagerFactory = ctx.getBean(domain + \"EntityManagerFactory\");\n \n-                    SpringProcessEngineConfiguration conf = ctx.getBean(SpringProcessEngineConfiguration.class);\n-                    conf.setDataSource(dataSource);\n-                    conf.setTransactionManager(transactionManager);\n-                    conf.setTransactionsExternallyManaged(true);\n-                    conf.setJpaEntityManagerFactory(entityManagerFactory);\n-                    if (conf.getBeans() == null) {\n-                        conf.setBeans(new SpringBeanFactoryProxyMap(ctx));\n-                    }\n-                    if (conf.getExpressionManager() == null) {\n-                        conf.setExpressionManager(new SpringExpressionManager(ctx, conf.getBeans()));\n-                    }\n+                        SpringProcessEngineConfiguration conf = ctx.getBean(SpringProcessEngineConfiguration.class);\n+                        conf.setDataSource(dataSource);\n+                        conf.setTransactionManager(transactionManager);\n+                        conf.setTransactionsExternallyManaged(true);\n+                        conf.setJpaEntityManagerFactory(entityManagerFactory);\n+                        if (conf.getBeans() == null) {\n+                            conf.setBeans(new SpringBeanFactoryProxyMap(ctx));\n+                        }\n+                        if (conf.getExpressionManager() == null) {\n+                            conf.setExpressionManager(new SpringExpressionManager(ctx, conf.getBeans()));\n+                        }\n+                        if (EngineServiceUtil.getIdmEngineConfiguration(conf) == null) {\n+                            conf.addEngineConfiguration(\n+                                    EngineConfigurationConstants.KEY_IDM_ENGINE_CONFIG,\n+                                    ctx.getBean(SpringIdmEngineConfiguration.class));\n+                        }\n \n-                    engines.put(domain, conf.buildProcessEngine());\n-                }\n-            }\n+                        engines.put(domain, conf.buildProcessEngine());\n+                    });\n \n             engine = new DomainProcessEngine(engines);\n         }"},{"sha":"b9f87cae282864962eef3ad1c59ee23237152ac9","filename":"core/workflow-flowable/src/main/java/org/apache/syncope/core/workflow/flowable/task/AbstractFlowableServiceTask.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2Ftask%2FAbstractFlowableServiceTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2Ftask%2FAbstractFlowableServiceTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fflowable%2Ftask%2FAbstractFlowableServiceTask.java?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.core.workflow.flowable.task;\n \n-import org.activiti.engine.ProcessEngine;\n+import org.flowable.engine.ProcessEngine;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;"},{"sha":"36af01c0f9390559d0783c74aba2f0d879169f27","filename":"core/workflow-flowable/src/main/resources/workflow.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fresources%2Fworkflow.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fresources%2Fworkflow.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fresources%2Fworkflow.properties?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -16,7 +16,6 @@\n # under the License.\n wf.directory=${conf.directory}\n historyLevel=activity\n-jobExecutorActivate=true\n uwfAdapter=org.apache.syncope.core.workflow.flowable.FlowableUserWorkflowAdapter\n gwfAdapter=org.apache.syncope.core.workflow.java.DefaultGroupWorkflowAdapter\n awfAdapter=org.apache.syncope.core.workflow.java.DefaultAnyObjectWorkflowAdapter"},{"sha":"aed5e2e50a7c98ff6ce98e22ccefa93c043947d7","filename":"core/workflow-flowable/src/main/resources/workflowFlowableContext.xml","status":"modified","additions":10,"deletions":16,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fresources%2FworkflowFlowableContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fresources%2FworkflowFlowableContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-flowable%2Fsrc%2Fmain%2Fresources%2FworkflowFlowableContext.xml?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -32,29 +32,23 @@ under the License.\n \n   <bean id=\"flowableUtils\" class=\"org.apache.syncope.core.workflow.flowable.FlowableUtils\"/>\n \n-  <bean id=\"syncopeFlowableUserManager\" class=\"org.apache.syncope.core.workflow.flowable.SyncopeUserManager\"/>\n-  <bean id=\"syncopeFlowableGroupManager\" class=\"org.apache.syncope.core.workflow.flowable.SyncopeGroupManager\"/>\n-\n-  <bean class=\"org.activiti.spring.SpringProcessEngineConfiguration\" scope=\"prototype\">\n-    <property name=\"transactionsExternallyManaged\" value=\"true\"/>\n+  <bean id=\"syncopeIdmIdentityService\" class=\"org.apache.syncope.core.workflow.flowable.SyncopeIdmIdentityService\"/>\n+  <bean id=\"syncopeIdmEngineConfiguration\" class=\"org.flowable.idm.spring.SpringIdmEngineConfiguration\">\n+    <property name=\"idmIdentityService\" ref=\"syncopeIdmIdentityService\"/> \n+  </bean>\n+  <bean id=\"syncopeIdmEngineConfigurator\" class=\"org.flowable.spring.configurator.SpringIdmEngineConfigurator\">\n+    <property name=\"idmEngineConfiguration\" ref=\"syncopeIdmEngineConfiguration\"/> \n+  </bean>\n+  \n+  <bean class=\"org.flowable.spring.SpringProcessEngineConfiguration\" scope=\"prototype\">\n     <property name=\"databaseSchemaUpdate\" value=\"true\"/>\n \n     <property name=\"jpaHandleTransaction\" value=\"true\"/>\n     <property name=\"jpaCloseEntityManager\" value=\"false\"/>\n \n     <property name=\"history\" value=\"${historyLevel}\"/>\n-    <property name=\"jobExecutorActivate\" value=\"${jobExecutorActivate}\"/>\n \n-    <property name=\"customSessionFactories\">\n-      <list>\n-        <bean class=\"org.apache.syncope.core.workflow.flowable.SyncopeSessionFactory\">\n-          <property name=\"syncopeSession\" ref=\"syncopeFlowableUserManager\"/>\n-        </bean>\n-        <bean class=\"org.apache.syncope.core.workflow.flowable.SyncopeSessionFactory\">\n-          <property name=\"syncopeSession\" ref=\"syncopeFlowableGroupManager\"/>\n-        </bean>\n-      </list>\n-    </property>\n+    <property name=\"idmProcessEngineConfigurator\" ref=\"syncopeIdmEngineConfigurator\"/>\n     <property name=\"customPreVariableTypes\">\n       <list>\n         <bean class=\"org.apache.syncope.core.workflow.flowable.SyncopeEntitiesVariableType\"/>"},{"sha":"2c64c2dc8d72650975ab838e0d87b1b5923a8e6a","filename":"fit/console-reference/pom.xml","status":"modified","additions":12,"deletions":21,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/fit%2Fconsole-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/fit%2Fconsole-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fpom.xml?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -111,7 +111,7 @@ under the License.\n     </dependency>\n     <dependency>\n       <groupId>org.flowable</groupId>\n-      <artifactId>flowable-webapp-explorer2</artifactId>\n+      <artifactId>flowable-ui-modeler-app</artifactId>\n       <type>war</type>\n       <scope>test</scope>\n     </dependency>\n@@ -144,34 +144,25 @@ under the License.\n             <phase>process-resources</phase>\n             <configuration>\n               <target>\n-                <unzip src=\"${settings.localRepository}/org/flowable/flowable-webapp-explorer2/${flowable.version}/flowable-webapp-explorer2-${flowable.version}.war\" \n-                       dest=\"${project.build.directory}/flowable-webapp-explorer2\"/>\n+                <unzip src=\"${settings.localRepository}/org/flowable/flowable-ui-modeler-app/${flowable.version}/flowable-ui-modeler-app-${flowable.version}.war\" \n+                       dest=\"${flowable-modeler.directory}\"/>\n                 \n-                <mkdir dir=\"${flowable-modeler.directory}\"/>\n-                <copy file=\"${project.build.directory}/flowable-webapp-explorer2/modeler.html\" \n-                      todir=\"${flowable-modeler.directory}\"/>\n-                <replace file=\"${flowable-modeler.directory}/modeler.html\"\n+                <replace file=\"${flowable-modeler.directory}/index.html\"\n                          token=\"&lt;/head&gt;\"\n                          value=\"&lt;script type=&quot;text/javascript&quot;&gt;window.onunload = refreshParent; function refreshParent() { window.opener.location.reload(); }&lt;/script&gt;&lt;/head&gt;\"/>\n-                <copy file=\"${project.build.directory}/flowable-webapp-explorer2/WEB-INF/classes/stencilset.json\" \n-                      todir=\"${flowable-modeler.directory}\"/>\n-\n-                <mkdir dir=\"${flowable-modeler.directory}/editor-app\"/>\n-                <copy todir=\"${flowable-modeler.directory}/editor-app\">\n-                  <fileset dir=\"${project.build.directory}/flowable-webapp-explorer2/editor-app\"/>                  \n-                </copy>\n-                <replace file=\"${flowable-modeler.directory}/editor-app/editor/oryx.debug.js\"\n-                         token=\"return this.changeDifference !== 0 || (this.facade.getModelMetaData()['new'] &amp;&amp; this.facade.getCanvas().getChildShapes().size() &gt; 0);\"\n-                         value=\"return this.changeDifference !== 0 \n-              || (typeof this.facade.getModelMetaData() != 'undefined' \n-              &amp;&amp; this.facade.getModelMetaData()['new'] &amp;&amp; this.facade.getCanvas().getChildShapes().size() &gt; 0);\"/>\n                 <replace file=\"${flowable-modeler.directory}/editor-app/configuration/toolbar-default-actions.js\"\n-                         token=\"window.location.href = &quot;./&quot;;\"\n+                         token=\"$location.path('/processes');\"\n                          value=\"window.close();\"/>\n-                                               \n+\n+                <copy file=\"${basedir}/src/main/resources/app-cfg.js\" \n+                      todir=\"${flowable-modeler.directory}/scripts\"\n+                      overwrite=\"true\"/>\n                 <copy file=\"${basedir}/src/main/resources/url-config.js\" \n                       todir=\"${flowable-modeler.directory}/editor-app/configuration\"\n                       overwrite=\"true\"/>\n+                <copy file=\"${basedir}/src/main/resources/stencilset.json\" \n+                      todir=\"${flowable-modeler.directory}\"\n+                      overwrite=\"true\"/>\n                 <copy file=\"${basedir}/src/main/resources/save-model.html\" \n                       todir=\"${flowable-modeler.directory}/editor-app/popups\"\n                       overwrite=\"true\"/>"},{"sha":"ec812b42fbbeae056ebf569a3fc827cd1f9786d5","filename":"fit/console-reference/src/main/resources/app-cfg.js","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fapp-cfg.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fapp-cfg.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fapp-cfg.js?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * \n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+'use strict';\n+\n+var FLOWABLE = FLOWABLE || {};\n+\n+FLOWABLE.CONFIG = {\n+  'onPremise': true,\n+  'contextRoot': window.location.toString().substr(0, window.location.toString().indexOf('/flowable-modeler')),\n+  'webContextRoot': window.location.toString().substr(0, window.location.toString().indexOf('/flowable-modeler')),\n+  'datesLocalization': false\n+};"},{"sha":"abd5ecf86203f14b37a4c4b39ae39a79205394e7","filename":"fit/console-reference/src/main/resources/save-model.html","status":"modified","additions":83,"deletions":10,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fsave-model.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fsave-model.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fsave-model.html?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -23,28 +23,101 @@\n         <h2>{{'MODEL.SAVE.TITLE'| translate}}</h2>\n       </div>\n       <div class=\"modal-body\">\n-\n+        <div ng-if=\"saveDialog.errorMessage && saveDialog.errorMessage.length > 0\" class=\"alert error\" style=\"font-size: 14px; margin-top:20px\">\n+          <div class=\"popup-error\" style=\"font-size: 14px\">\n+            <span class=\"glyphicon glyphicon-remove-circle\"></span>\n+            <span>{{saveDialog.errorMessage}}</span>\n+          </div>\n+        </div>\n         <div class=\"form-group\">\n           <label for=\"nameField\">{{'MODEL.NAME'| translate}}</label>\n           <input type=\"text\"\n-                 ng-disabled=\"status.loading\"\n+                 ng-disabled=\"status.loading || (error && error.conflictResolveAction == 'saveAs')\"\n                  id=\"nameField\"\n                  class=\"form-control\"\n-                 ng-model=\"saveDialog.name\"\n-                 ui-keypress=\"{13:'save()'}\"\n-                 auto-focus readonly/>\n+                 ng-model=\"saveDialog.name\" readonly=\"readonly\"\n+                 auto-focus />\n         </div>\n-        <div class=\"form-group\">\n+        <div class=\"form-group\" style=\"display: none\">\n+          <label for=\"keyField\">{{'MODEL.KEY'| translate}}</label>\n+          <input type=\"text\"\n+                 ng-disabled=\"status.loading || (error && error.conflictResolveAction == 'saveAs')\"\n+                 id=\"keyField\"\n+                 class=\"form-control\"\n+                 ng-model=\"saveDialog.key\" ng-init=\"saveDialog.key = saveDialog.name\"/>\n+        </div>\n+        <div class=\"form-group\" style=\"display: none\">\n           <label for=\"docTextArea\">{{'MODEL.DESCRIPTION'| translate}}</label>\n-          <textarea id=\"docTextArea\" ng-disabled=\"status.loading\" class=\"form-control\" \n-                    ng-model=\"saveDialog.description\" readonly></textarea>\n+          <textarea id=\"docTextArea\" ng-disabled=\"status.loading\" class=\"form-control\" ng-model=\"saveDialog.description\"></textarea>\n+        </div>\n+        <div class=\"checkbox\" ng-show=\"!error && !error.isConflict\" style=\"display: none\">\n+          <label>\n+            <input type=\"checkbox\" ng-disabled=\"status.loading\" ng-model=\"saveDialog.newVersion\" >\n+            {{'MODEL.SAVE.NEWVERSION'| translate}}\n+          </label>\n+        </div>\n+        <div class=\"form-group\" ng-if=\"saveDialog.newVersion\">\n+          <label for=\"commentTextArea\">{{'MODEL.SAVE.COMMENT'| translate}}</label>\n+          <textarea id=\"commentTextArea\" class=\"form-control\" ng-model=\"saveDialog.comment\" ng-disabled=\"status.loading\"></textarea>\n         </div>\n+\n+        <div ng-if=\"saveDialog.validationErrors\" class=\"alert error\" style=\"font-size: 14px; margin-top:20px\">\n+\n+          <div class=\"popup-error\" style=\"font-size: 14px\">\n+            <span class=\"glyphicon glyphicon-remove-circle\"></span>\n+            <span>{{'MODEL.VALIDATIONERRORS'| translate:error}}</span>\n+          </div>\n+        </div>\n+\n+        <div ng-if=\"error && error.isConflict && !status.loading\" class=\"alert error\" style=\"font-size: 14px; margin-top:20px\">\n+\n+          <div class=\"popup-error\" style=\"font-size: 14px\">\n+            <span class=\"glyphicon glyphicon-remove-circle\"></span>\n+            <span>{{'MODEL.CONFLICT.WRITE'| translate:error}}</span>\n+          </div>\n+\n+          <div>\n+\n+            <div style=\"font-size: 14px; margin-bottom: 10px\">{{'MODEL.CONFLICT.WRITE.OPTIONS'| translate}}</div>\n+            <div class=\"btn-group\" data-toggle=\"buttons\">\n+              <label class=\"btn btn-danger\"\n+                     ng-click=\"error.conflictResolveAction = 'overwrite'\">\n+                <input type=\"radio\" name=\"options\" id=\"option1\">\n+                {{'MODEL.CONFLICT.WRITE.OPTION.OVERWRITE'| translate}}\n+              </label>\n+              <label class=\"btn btn-danger\"\n+                     ng-click=\"error.conflictResolveAction = 'discardChanges'\">\n+                <input type=\"radio\" name=\"options\" id=\"option2\">\n+                {{'MODEL.CONFLICT.WRITE.OPTION.DISCARDCHANGES'| translate}}\n+              </label>\n+              <label class=\"btn btn-danger\"\n+                     ng-click=\"error.conflictResolveAction = 'saveAs'\">\n+                <input type=\"radio\" name=\"options\" id=\"option3\" ng-disabled=\"account.type != 'enterprise'\">\n+                {{'MODEL.CONFLICT.WRITE.OPTION.SAVEAS'| translate}}\n+              </label>\n+              <label class=\"btn btn-danger\"\n+                     ng-click=\"error.conflictResolveAction = 'newVersion'\">\n+                <input type=\"radio\" name=\"options\" id=\"optio43\">\n+                {{'MODEL.CONFLICT.WRITE.OPTION.NEWVERSION'| translate}}\n+              </label>\n+            </div>\n+\n+            <div ng-if=\"error.conflictResolveAction == 'saveAs'\" style=\"margin-top: 10px\">\n+              <span>{{'MODEL.CONFLICT.SAVEAS'| translate}}</span>\n+              <input type=\"text\" ng-model=\"error.saveAs\" style=\"width: 300px\" auto-focus>\n+            </div>\n+          </div>\n+\n+        </div>\n+\n       </div>\n       <div class=\"modal-footer\">\n \n         <div class=\"pull-right\">\n           <button type=\"button\" class=\"btn\" ng-click=\"close()\" ng-disabled=\"status.loading\" translate>ACTION.CANCEL</button>\n-          <button class=\"btn btn-primary\" ng-click=\"saveAndClose()\" ng-disabled=\"status.loading\" ng-show=\"!error\" translate>ACTION.SAVE-AND-CLOSE</button>\n+          <button class=\"btn btn-primary\" ng-click=\"saveAndClose()\" ng-disabled=\"status.loading || saveDialog.name.length == 0 || saveDialog.key.length == 0\" ng-show=\"!error && !error.isConflict\" translate>ACTION.SAVE-AND-CLOSE</button>\n+          <button class=\"btn btn-primary\" ng-click=\"save()\" ng-disabled=\"status.loading || saveDialog.name.length == 0 || saveDialog.key.length == 0\" ng-show=\"!error && !error.isConflict\" style=\"display: none\" translate>ACTION.SAVE</button>\n+          <button class=\"btn btn-primary\" ng-click=\"okClicked()\" ng-disabled=\"isOkButtonDisabled()\" ng-show=\"error && error.isConflict\" translate>ACTION.OK</button>\n         </div>\n \n         <div class=\"pull-right popup-error\" ng-if=\"error && !error.isConflict\">\n@@ -56,4 +129,4 @@ <h2>{{'MODEL.SAVE.TITLE'| translate}}</h2>\n       </div>\n     </div>\n   </div>\n-</div>\n\\ No newline at end of file\n+</div>"},{"sha":"b8e703d1a7761655465a7dca547a4b28ef607be5","filename":"fit/console-reference/src/main/resources/stencilset.json","status":"added","additions":1627,"deletions":0,"changes":1627,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fstencilset.json","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fstencilset.json","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fstencilset.json?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807"},{"sha":"12ab6d320718b6a8e5c84eb66194f388279a54cb","filename":"fit/console-reference/src/main/resources/url-config.js","status":"modified","additions":14,"deletions":7,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Furl-config.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Furl-config.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Furl-config.js?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -6,29 +6,36 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- *\n+ * \n  *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * \n  * Unless required by applicable law or agreed to in writing,\n  * software distributed under the License is distributed on an\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  * KIND, either express or implied.  See the License for the\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-var KISBPM = KISBPM || {};\n+var FLOWABLE = FLOWABLE || {};\n+\n+FLOWABLE.URL = {\n \n-KISBPM.URL = {\n   getModel: function (modelId) {\n-    return window.location.toString().substr(0, window.location.toString().indexOf('/flowable-modeler')) \n+    return window.location.toString().substr(0, window.location.toString().indexOf('/flowable-modeler'))\n             + \"/workflowDefGET?modelId=\" + modelId;\n   },\n+\n   getStencilSet: function () {\n-    return window.location.toString().substr(0, window.location.toString().indexOf('/flowable-modeler')) \n+    return window.location.toString().substr(0, window.location.toString().indexOf('/flowable-modeler'))\n             + \"/flowable-modeler/stencilset.json\";\n   },\n+\n   putModel: function (modelId) {\n-    return window.location.toString().substr(0, window.location.toString().indexOf('/flowable-modeler')) \n+    return window.location.toString().substr(0, window.location.toString().indexOf('/flowable-modeler'))\n             + \"/workflowDefPUT?modelId=\" + modelId;\n+  },\n+\n+  validateModel: function () {\n+    return FLOWABLE.CONFIG.contextRoot + '/app/rest/model/validate';\n   }\n };"},{"sha":"36af01c0f9390559d0783c74aba2f0d879169f27","filename":"fit/core-reference/src/main/resources/all/workflow.properties","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2Fworkflow.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2Fworkflow.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2Fworkflow.properties?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -16,7 +16,6 @@\n # under the License.\n wf.directory=${conf.directory}\n historyLevel=activity\n-jobExecutorActivate=true\n uwfAdapter=org.apache.syncope.core.workflow.flowable.FlowableUserWorkflowAdapter\n gwfAdapter=org.apache.syncope.core.workflow.java.DefaultGroupWorkflowAdapter\n awfAdapter=org.apache.syncope.core.workflow.java.DefaultAnyObjectWorkflowAdapter"},{"sha":"7df562b1c598c891197821921d3802e2448e0459","filename":"fit/core-reference/src/main/resources/log4j2.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -140,7 +140,7 @@ under the License.\n       <appender-ref ref=\"mainFile\"/>\n       <appender-ref ref=\"main\"/>\n     </asyncLogger>\n-    <asyncLogger name=\"org.activiti\" additivity=\"false\" level=\"ERROR\">\n+    <asyncLogger name=\"org.flowable\" additivity=\"false\" level=\"ERROR\">\n       <appender-ref ref=\"mainFile\"/>\n       <appender-ref ref=\"main\"/>\n     </asyncLogger>"},{"sha":"4e38bf9893d1ff7ac2251dfa01a1bfffb1bc64a5","filename":"installer/src/main/java/org/apache/syncope/installer/files/ConsolePom.java","status":"modified","additions":16,"deletions":28,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FConsolePom.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FConsolePom.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/installer%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Finstaller%2Ffiles%2FConsolePom.java?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -24,7 +24,7 @@ public final class ConsolePom {\n \n     public static final String FLOWABLE_CONTENT_TO_ADD = \"<dependency>\\n\"\n             + \"          <groupId>org.flowable</groupId>\\n\"\n-            + \"          <artifactId>flowable-webapp-explorer2</artifactId>\\n\"\n+            + \"          <artifactId>flowable-ui-modeler-app</artifactId>\\n\"\n             + \"          <type>war</type>\\n\"\n             + \"          <scope>test</scope>\\n\"\n             + \"        </dependency>\\n\"\n@@ -43,42 +43,30 @@ public final class ConsolePom {\n             + \"                <phase>process-resources</phase>\\n\"\n             + \"                <configuration>\\n\"\n             + \"                  <target>\\n\"\n-            + \"                <unzip src=\\\"${settings.localRepository}/org/flowable/flowable-webapp-explorer2/\"\n-            + \"${flowable.version}/flowable-webapp-explorer2-${flowable.version}.war\\\" \\n\"\n-            + \"                       dest=\\\"${project.build.directory}/flowable-webapp-explorer2\\\"/>\\n\"\n-            + \"                \\n\" + \"                <mkdir dir=\\\"${flowable-modeler.directory}\\\"/>\\n\"\n-            + \"                <copy file=\\\"${project.build.directory}/flowable-webapp-explorer2/modeler.html\\\" \\n\"\n-            + \"                      todir=\\\"${flowable-modeler.directory}\\\"/>\\n\"\n-            + \"                <replace file=\\\"${flowable-modeler.directory}/modeler.html\\\"\\n\"\n+            + \"                <unzip src=\\\"${settings.localRepository}/org/flowable/flowable-ui-modeler-app/\"\n+            + \"${flowable.version}/flowable-ui-modeler-app-${flowable.version}.war\\\" \\n\"\n+            + \"                       dest=\\\"${flowable-modeler.directory}\\\"/>\\n\" + \"                \\n\"\n+            + \"                <replace file=\\\"${flowable-modeler.directory}/index.html\\\"\\n\"\n             + \"                         token=\\\"&lt;/head&gt;\\\"\\n\"\n             + \"                         value=\\\"&lt;script type=&quot;text/javascript&quot;&gt;window.onunload = \"\n-            + \"refreshParent; function refreshParent() { window.opener.location.reload(); }&lt;\"\n-            + \"/script&gt;&lt;/head&gt;\\\"/>\\n\"\n-            + \"                <copy file=\\\"${project.build.directory}/flowable-webapp-explorer2/WEB-INF/classes/\"\n-            + \"stencilset.json\\\" \\n\"\n-            + \"                      todir=\\\"${flowable-modeler.directory}\\\"/>\\n\" + \"\\n\"\n-            + \"                <mkdir dir=\\\"${flowable-modeler.directory}/editor-app\\\"/>\\n\"\n-            + \"                <copy todir=\\\"${flowable-modeler.directory}/editor-app\\\">\\n\"\n-            + \"                  <fileset dir=\\\"${project.build.directory}/flowable-webapp-explorer2/editor-app\\\"/>\\n\"\n-            + \"                </copy>\\n\"\n-            + \"                <replace file=\\\"${flowable-modeler.directory}/editor-app/editor/oryx.debug.js\\\"\\n\"\n-            + \"                         token=\\\"return this.changeDifference !== 0 || (this.facade.getModelMetaData()\"\n-            + \"['new'] &amp;&amp; this.facade.getCanvas().getChildShapes().size() &gt; 0);\\\"\\n\"\n-            + \"                         value=\\\"return this.changeDifference !== 0 \\n\"\n-            + \"              || (typeof this.facade.getModelMetaData() != 'undefined' \\n\"\n-            + \"              &amp;&amp; this.facade.getModelMetaData()['new'] &amp;&amp; this.facade.getCanvas().\"\n-            + \"getChildShapes().size() &gt; 0);\\\"/>\\n\"\n+            + \"refreshParent; function refreshParent() { window.opener.location.reload(); }&lt;/script&gt;\"\n+            + \"&lt;/head&gt;\\\"/>\\n\"\n             + \"                <replace file=\\\"${flowable-modeler.directory}/editor-app/configuration/\"\n             + \"toolbar-default-actions.js\\\"\\n\"\n-            + \"                         token=\\\"window.location.href = &quot;./&quot;;\\\"\\n\"\n-            + \"                         value=\\\"window.close();\\\"/>\\n\"\n-            + \"                                               \\n\"\n+            + \"                         token=\\\"$location.path('/processes');\\\"\\n\"\n+            + \"                         value=\\\"window.close();\\\"/>\\n\" + \"\\n\"\n+            + \"                <copy file=\\\"${basedir}/src/main/resources/app-cfg.js\\\" \\n\"\n+            + \"                      todir=\\\"${flowable-modeler.directory}/scripts\\\"\\n\"\n+            + \"                      overwrite=\\\"true\\\"/>\\n\"\n             + \"                <copy file=\\\"${basedir}/src/main/resources/url-config.js\\\" \\n\"\n             + \"                      todir=\\\"${flowable-modeler.directory}/editor-app/configuration\\\"\\n\"\n             + \"                      overwrite=\\\"true\\\"/>\\n\"\n+            + \"                <copy file=\\\"${basedir}/src/main/resources/stencilset.json\\\" \\n\"\n+            + \"                      todir=\\\"${flowable-modeler.directory}\\\"\\n\"\n+            + \"                      overwrite=\\\"true\\\"/>\\n\"\n             + \"                <copy file=\\\"${basedir}/src/main/resources/save-model.html\\\" \\n\"\n             + \"                      todir=\\\"${flowable-modeler.directory}/editor-app/popups\\\"\\n\"\n-            + \"                      overwrite=\\\"true\\\"/>\\n\"\n+            + \"                      overwrite=\\\"true\\\"/>\"\n             + \"                  </target>\\n\"\n             + \"                </configuration>\\n\"\n             + \"                <goals>\\n\""},{"sha":"0cfb5f82fad472dd15019b546129c1220f279451","filename":"pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=f27e1bb4a6cc9281a0e157ba6cda06ccc06e1807","patch":"@@ -383,7 +383,7 @@ under the License.\n \n     <groovy.version>2.4.12</groovy.version>\n \n-    <flowable.version>5.23.0</flowable.version>\n+    <flowable.version>6.1.2</flowable.version>\n \n     <camel.version>2.19.2</camel.version>\t\n \n@@ -1099,7 +1099,7 @@ under the License.\n       </dependency>\n       <dependency>\n         <groupId>org.flowable</groupId>\n-        <artifactId>flowable-webapp-explorer2</artifactId>\n+        <artifactId>flowable-ui-modeler-app</artifactId>\n         <version>${flowable.version}</version>\n         <type>war</type>\n       </dependency>"}]}