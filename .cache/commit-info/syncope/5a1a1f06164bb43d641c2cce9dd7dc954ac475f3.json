{"sha":"5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjVhMWExZjA2MTY0YmI0M2Q2NDFjMmNjZTlkZDdkYzk1NGFjNDc1ZjM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-19T13:20:33Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-08-19T13:20:33Z"},"message":"[SYNCOPE-938] Empowering defult methods","tree":{"sha":"ce64f14eb64de2c9f5c7af97b36a77ff08cc74e0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ce64f14eb64de2c9f5c7af97b36a77ff08cc74e0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"ea6559c856f2b6a136dc2179a7a9d92148c7c278","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ea6559c856f2b6a136dc2179a7a9d92148c7c278","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ea6559c856f2b6a136dc2179a7a9d92148c7c278"}],"stats":{"total":750,"additions":193,"deletions":557},"files":[{"sha":"ebe1e5d112b428912597dcb1fc07e3915bea8706","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/init/ClassPathScanImplementationLookup.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -99,7 +99,7 @@ protected String getBasePackage() {\n     public void load() {\n         classNames = new EnumMap<>(Type.class);\n         for (Type type : Type.values()) {\n-            classNames.put(type, new HashSet<String>());\n+            classNames.put(type, new HashSet<>());\n         }\n \n         jwtSSOProviderClasses = new HashSet<>();"},{"sha":"2c152c692463f0feddb4bb528dcafac519983c42","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/LogicActions.java","status":"modified","additions":18,"deletions":6,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FLogicActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FLogicActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FLogicActions.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -26,15 +26,27 @@\n  */\n public interface LogicActions {\n \n-    <A extends AnyTO> A beforeCreate(A input);\n+    default <A extends AnyTO> A beforeCreate(A input) {\n+        return input;\n+    }\n \n-    <A extends AnyTO> A afterCreate(A input);\n+    default <A extends AnyTO> A afterCreate(A input) {\n+        return input;\n+    }\n \n-    <P extends AnyPatch> P beforeUpdate(P input);\n+    default <P extends AnyPatch> P beforeUpdate(P input) {\n+        return input;\n+    }\n \n-    <A extends AnyTO> A afterUpdate(A input);\n+    default <A extends AnyTO> A afterUpdate(A input) {\n+        return input;\n+    }\n \n-    <A extends AnyTO> A beforeDelete(A input);\n+    default <A extends AnyTO> A beforeDelete(A input) {\n+        return input;\n+    }\n \n-    <A extends AnyTO> A afterDelete(A input);\n+    default <A extends AnyTO> A afterDelete(A input) {\n+        return input;\n+    }\n }"},{"sha":"4962d8f96be899fd2db17ba8f77d39fc54d8d632","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/ItemTransformer.java","status":"modified","additions":10,"deletions":4,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FItemTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FItemTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FItemTransformer.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -40,10 +40,13 @@ public interface ItemTransformer {\n      * @param values original values\n      * @return transformed values\n      */\n-    List<PlainAttrValue> beforePropagation(\n+    default List<PlainAttrValue> beforePropagation(\n             Item item,\n             Entity entity,\n-            List<PlainAttrValue> values);\n+            List<PlainAttrValue> values) {\n+\n+        return values;\n+    }\n \n     /**\n      * Invoked while reading attribute values from external resource during pull.\n@@ -53,8 +56,11 @@ List<PlainAttrValue> beforePropagation(\n      * @param values original values\n      * @return transformed values\n      */\n-    List<Object> beforePull(\n+    default List<Object> beforePull(\n             Item item,\n             EntityTO entityTO,\n-            List<Object> values);\n+            List<Object> values) {\n+\n+        return values;\n+    }\n }"},{"sha":"d21edea0b4f4207934221001be9ff339f888bfff","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/propagation/PropagationActions.java","status":"modified","additions":9,"deletions":3,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationActions.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -24,9 +24,15 @@\n \n public interface PropagationActions {\n \n-    void before(PropagationTask task, ConnectorObject beforeObj);\n+    default void before(PropagationTask task, ConnectorObject beforeObj) {\n+        // do nothing\n+    }\n \n-    void onError(PropagationTask task, TaskExec execution, Exception error);\n+    default void onError(PropagationTask task, TaskExec execution, Exception error) {\n+        // do nothing\n+    }\n \n-    void after(PropagationTask task, TaskExec execution, ConnectorObject afterObj);\n+    default void after(PropagationTask task, TaskExec execution, ConnectorObject afterObj) {\n+        // do nothing\n+    }\n }"},{"sha":"ff3a3e4df12c60c0baf5b989f3e30c9ad779605e","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/ProvisioningActions.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningActions.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -28,13 +28,17 @@ public interface ProvisioningActions {\n      * @param profile provisioning profile\n      * @throws JobExecutionException in case of generic failure\n      */\n-    void beforeAll(final ProvisioningProfile<?, ?> profile) throws JobExecutionException;\n+    default void beforeAll(final ProvisioningProfile<?, ?> profile) throws JobExecutionException {\n+        // do nothing\n+    }\n \n     /**\n      * Action to be executed after the provisioning (push / pull) task completion.\n      *\n      * @param profile provisioning profile\n      * @throws JobExecutionException in case of generic failure\n      */\n-    void afterAll(final ProvisioningProfile<?, ?> profile) throws JobExecutionException;\n+    default void afterAll(final ProvisioningProfile<?, ?> profile) throws JobExecutionException {\n+        // do nothing        \n+    }\n }"},{"sha":"2732ce725970a72f09417c3c4475f808686ca03a","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/PullActions.java","status":"modified","additions":50,"deletions":21,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPullActions.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -41,10 +41,13 @@ public interface PullActions extends ProvisioningActions {\n      * @return pull information, possibly altered.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    SyncDelta beforeProvision(\n+    default SyncDelta beforeProvision(\n             ProvisioningProfile<?, ?> profile,\n             SyncDelta delta,\n-            EntityTO entity) throws JobExecutionException;\n+            EntityTO entity) throws JobExecutionException {\n+\n+        return delta;\n+    }\n \n     /**\n      * Action to be executed before creating (and linking to the resource) a pulled entity locally.\n@@ -57,10 +60,13 @@ SyncDelta beforeProvision(\n      * @return pull information, possibly altered.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    SyncDelta beforeAssign(\n+    default SyncDelta beforeAssign(\n             ProvisioningProfile<?, ?> profile,\n             SyncDelta delta,\n-            EntityTO entity) throws JobExecutionException;\n+            EntityTO entity) throws JobExecutionException {\n+\n+        return delta;\n+    }\n \n     /**\n      * Action to be executed before unlinking resource from the pulled entity and de-provisioning.\n@@ -73,10 +79,13 @@ SyncDelta beforeAssign(\n      * @return pull information, possibly altered.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    SyncDelta beforeUnassign(\n+    default SyncDelta beforeUnassign(\n             ProvisioningProfile<?, ?> profile,\n             SyncDelta delta,\n-            EntityTO entity) throws JobExecutionException;\n+            EntityTO entity) throws JobExecutionException {\n+\n+        return delta;\n+    }\n \n     /**\n      * Action to be executed before de-provisioning action only.\n@@ -89,10 +98,13 @@ SyncDelta beforeUnassign(\n      * @return pull information, possibly altered.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    SyncDelta beforeDeprovision(\n+    default SyncDelta beforeDeprovision(\n             ProvisioningProfile<?, ?> profile,\n             SyncDelta delta,\n-            EntityTO entity) throws JobExecutionException;\n+            EntityTO entity) throws JobExecutionException {\n+\n+        return delta;\n+    }\n \n     /**\n      * Action to be executed before unlinking resource from the pulled entity.\n@@ -105,10 +117,13 @@ SyncDelta beforeDeprovision(\n      * @return pull information, possibly altered.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    SyncDelta beforeUnlink(\n+    default SyncDelta beforeUnlink(\n             ProvisioningProfile<?, ?> profile,\n             SyncDelta delta,\n-            EntityTO entity) throws JobExecutionException;\n+            EntityTO entity) throws JobExecutionException {\n+\n+        return delta;\n+    }\n \n     /**\n      * Action to be executed before linking resource to the pulled entity.\n@@ -121,10 +136,13 @@ SyncDelta beforeUnlink(\n      * @return pull information, possibly altered.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    SyncDelta beforeLink(\n+    default SyncDelta beforeLink(\n             ProvisioningProfile<?, ?> profile,\n             SyncDelta delta,\n-            EntityTO entity) throws JobExecutionException;\n+            EntityTO entity) throws JobExecutionException {\n+\n+        return delta;\n+    }\n \n     /**\n      * Action to be executed before to update a pulled entity locally.\n@@ -139,12 +157,14 @@ SyncDelta beforeLink(\n      * @return pull information used for logging and to be passed to the 'after' method.\n      * @throws JobExecutionException in case of generic failure.\n      */\n-    <P extends AnyPatch> SyncDelta beforeUpdate(\n+    default <P extends AnyPatch> SyncDelta beforeUpdate(\n             ProvisioningProfile<?, ?> profile,\n             SyncDelta delta,\n             EntityTO entityTO,\n-            P anyPatch)\n-            throws JobExecutionException;\n+            P anyPatch) throws JobExecutionException {\n+\n+        return delta;\n+    }\n \n     /**\n      * Action to be executed before to delete a pulled entity locally.\n@@ -155,10 +175,13 @@ <P extends AnyPatch> SyncDelta beforeUpdate(\n      * @return pull information used for logging and to be passed to the 'after' method.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    SyncDelta beforeDelete(\n+    default SyncDelta beforeDelete(\n             ProvisioningProfile<?, ?> profile,\n             SyncDelta delta,\n-            EntityTO entity) throws JobExecutionException;\n+            EntityTO entity) throws JobExecutionException {\n+\n+        return delta;\n+    }\n \n     /**\n      * Action to be executed after each local entity pull.\n@@ -170,11 +193,14 @@ SyncDelta beforeDelete(\n      * @param result global pull results at the current pull step\n      * @throws JobExecutionException in case of generic failure\n      */\n-    void after(\n+    default void after(\n             ProvisioningProfile<?, ?> profile,\n             SyncDelta delta,\n             EntityTO entity,\n-            ProvisioningReport result) throws JobExecutionException;\n+            ProvisioningReport result) throws JobExecutionException {\n+\n+        // do nothing\n+    }\n \n     /**\n      * Action to be executed in case an exception is thrown during pull.\n@@ -186,8 +212,11 @@ void after(\n      * @return an instance of the given exception type is that is to be thrown; {@code NULL} otherwise\n      * @throws JobExecutionException in case of generic failure\n      */\n-    IgnoreProvisionException onError(\n+    default IgnoreProvisionException onError(\n             ProvisioningProfile<?, ?> profile,\n             SyncDelta delta,\n-            Exception e) throws JobExecutionException;\n+            Exception e) throws JobExecutionException {\n+\n+        return null;\n+    }\n }"},{"sha":"1642b0eda220a12077d3350715d3e3f80b3e3172","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/PushActions.java","status":"modified","additions":50,"deletions":20,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPushActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPushActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FPushActions.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -35,9 +35,12 @@ public interface PushActions extends ProvisioningActions {\n      * @return entity.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    Entity beforeAssign(\n+    default Entity beforeAssign(\n             ProvisioningProfile<?, ?> profile,\n-            Entity entity) throws JobExecutionException;\n+            Entity entity) throws JobExecutionException {\n+\n+        return entity;\n+    }\n \n     /**\n      * Action to be executed before to provision a pushed entity to the resource.\n@@ -47,9 +50,12 @@ Entity beforeAssign(\n      * @return entity.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    Entity beforeProvision(\n+    default Entity beforeProvision(\n             ProvisioningProfile<?, ?> profile,\n-            Entity entity) throws JobExecutionException;\n+            Entity entity) throws JobExecutionException {\n+\n+        return entity;\n+    }\n \n     /**\n      * Action to be executed before to update a pushed entity on the resource.\n@@ -59,9 +65,12 @@ Entity beforeProvision(\n      * @return entity.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    Entity beforeUpdate(\n+    default Entity beforeUpdate(\n             ProvisioningProfile<?, ?> profile,\n-            Entity entity) throws JobExecutionException;\n+            Entity entity) throws JobExecutionException {\n+\n+        return entity;\n+    }\n \n     /**\n      * Action to be executed before to link a pushed entity to the resource.\n@@ -71,9 +80,12 @@ Entity beforeUpdate(\n      * @return entity.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    Entity beforeLink(\n+    default Entity beforeLink(\n             ProvisioningProfile<?, ?> profile,\n-            Entity entity) throws JobExecutionException;\n+            Entity entity) throws JobExecutionException {\n+\n+        return entity;\n+    }\n \n     /**\n      * Action to be executed before to unlink a pushed entity from the resource.\n@@ -83,9 +95,12 @@ Entity beforeLink(\n      * @return entity.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    Entity beforeUnlink(\n+    default Entity beforeUnlink(\n             ProvisioningProfile<?, ?> profile,\n-            Entity entity) throws JobExecutionException;\n+            Entity entity) throws JobExecutionException {\n+\n+        return entity;\n+    }\n \n     /**\n      * Action to be executed before to unassign a pushed entity from the resource.\n@@ -95,9 +110,12 @@ Entity beforeUnlink(\n      * @return entity.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    Entity beforeUnassign(\n+    default Entity beforeUnassign(\n             ProvisioningProfile<?, ?> profile,\n-            Entity entity) throws JobExecutionException;\n+            Entity entity) throws JobExecutionException {\n+\n+        return entity;\n+    }\n \n     /**\n      * Action to be executed before to unassign a pushed entity from the resource.\n@@ -107,9 +125,12 @@ Entity beforeUnassign(\n      * @return entity.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    Entity beforeDeprovision(\n+    default Entity beforeDeprovision(\n             ProvisioningProfile<?, ?> profile,\n-            Entity entity) throws JobExecutionException;\n+            Entity entity) throws JobExecutionException {\n+\n+        return entity;\n+    }\n \n     /**\n      * Action to be executed before delete a pushed entity locally and from the resource.\n@@ -119,9 +140,12 @@ Entity beforeDeprovision(\n      * @return entity.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    Entity beforeDelete(\n+    default Entity beforeDelete(\n             ProvisioningProfile<?, ?> profile,\n-            Entity entity) throws JobExecutionException;\n+            Entity entity) throws JobExecutionException {\n+\n+        return entity;\n+    }\n \n     /**\n      * Action to be executed after entity push goes on error.\n@@ -132,11 +156,14 @@ Entity beforeDelete(\n      * @param error error being reported\n      * @throws JobExecutionException in case of generic failure\n      */\n-    void onError(\n+    default void onError(\n             ProvisioningProfile<?, ?> profile,\n             Entity entity,\n             ProvisioningReport result,\n-            Exception error) throws JobExecutionException;\n+            Exception error) throws JobExecutionException {\n+\n+        // do nothing\n+    }\n \n     /**\n      * Action to be executed after each local entity push.\n@@ -146,8 +173,11 @@ void onError(\n      * @param result operation result.\n      * @throws JobExecutionException in case of generic failure\n      */\n-    void after(\n+    default void after(\n             ProvisioningProfile<?, ?> profile,\n             Entity entity,\n-            ProvisioningReport result) throws JobExecutionException;\n+            ProvisioningReport result) throws JobExecutionException {\n+\n+        // do nothing\n+    }\n }"},{"sha":"73dc33246c28d81152b4114fcb69ccf05469b9a6","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/ReconciliationFilterBuilder.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FReconciliationFilterBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FReconciliationFilterBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FReconciliationFilterBuilder.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -19,12 +19,17 @@\n package org.apache.syncope.core.provisioning.api.pushpull;\n \n import org.identityconnectors.framework.common.objects.filter.Filter;\n+import org.identityconnectors.framework.impl.api.local.operations.FilteredResultsHandler;\n \n /**\n  * Interface to be implemented for performing filtered reconciliation of a\n  * {@link org.apache.syncope.core.persistence.api.entity.task.PullTask}.\n  */\n public interface ReconciliationFilterBuilder {\n \n-    Filter build();\n+    static final FilteredResultsHandler.PassThroughFilter PASS_THROUGH = new FilteredResultsHandler.PassThroughFilter();\n+\n+    default Filter build() {\n+        return PASS_THROUGH;\n+    }\n }"},{"sha":"7052c7045d3fae946215167ecde3ce4c56e1e7b2","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultLogicActions.java","status":"removed","additions":0,"deletions":57,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultLogicActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultLogicActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultLogicActions.java?ref=ea6559c856f2b6a136dc2179a7a9d92148c7c278","patch":"@@ -1,57 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.provisioning.java;\n-\n-import org.apache.syncope.common.lib.patch.AnyPatch;\n-import org.apache.syncope.common.lib.to.AnyTO;\n-import org.apache.syncope.core.provisioning.api.LogicActions;\n-\n-public class DefaultLogicActions implements LogicActions {\n-\n-    @Override\n-    public <A extends AnyTO> A beforeCreate(final A input) {\n-        return input;\n-    }\n-\n-    @Override\n-    public <A extends AnyTO> A afterCreate(final A input) {\n-        return input;\n-    }\n-\n-    @Override\n-    public <P extends AnyPatch> P beforeUpdate(final P input) {\n-        return input;\n-    }\n-\n-    @Override\n-    public <A extends AnyTO> A afterUpdate(final A input) {\n-        return input;\n-    }\n-\n-    @Override\n-    public <A extends AnyTO> A beforeDelete(final A input) {\n-        return input;\n-    }\n-\n-    @Override\n-    public <A extends AnyTO> A afterDelete(final A input) {\n-        return input;\n-    }\n-\n-}"},{"sha":"230962a56a8cdf63637169d666de8d688829a974","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/DefaultItemTransformer.java","status":"removed","additions":0,"deletions":47,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDefaultItemTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDefaultItemTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDefaultItemTransformer.java?ref=ea6559c856f2b6a136dc2179a7a9d92148c7c278","patch":"@@ -1,47 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.provisioning.java.data;\n-\n-import java.util.List;\n-import org.apache.syncope.common.lib.to.EntityTO;\n-import org.apache.syncope.core.persistence.api.entity.Entity;\n-import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n-import org.apache.syncope.core.persistence.api.entity.resource.Item;\n-import org.apache.syncope.core.provisioning.api.data.ItemTransformer;\n-import org.springframework.transaction.annotation.Transactional;\n-\n-/**\n- * Default (empty) implementation of {@link ItemTransformer}.\n- */\n-@Transactional(readOnly = true)\n-public class DefaultItemTransformer implements ItemTransformer {\n-\n-    @Override\n-    public List<PlainAttrValue> beforePropagation(\n-            final Item item, final Entity entity, final List<PlainAttrValue> values) {\n-\n-        return values;\n-    }\n-\n-    @Override\n-    public List<Object> beforePull(final Item item, final EntityTO entityTO, final List<Object> values) {\n-        return values;\n-    }\n-\n-}"},{"sha":"91b4742f1399361a61f02c9281f22cc58a1d6a41","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/JEXLItemTransformerImpl.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FJEXLItemTransformerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FJEXLItemTransformerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FJEXLItemTransformerImpl.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -32,7 +32,7 @@\n import org.apache.syncope.core.provisioning.java.jexl.JexlUtils;\n import org.apache.syncope.core.provisioning.api.data.JEXLItemTransformer;\n \n-public class JEXLItemTransformerImpl extends DefaultItemTransformer implements JEXLItemTransformer {\n+public class JEXLItemTransformerImpl implements JEXLItemTransformer {\n \n     private String propagationJEXL;\n \n@@ -55,7 +55,7 @@ public List<PlainAttrValue> beforePropagation(\n             final List<PlainAttrValue> values) {\n \n         if (StringUtils.isNotBlank(propagationJEXL) && values != null) {\n-            for (PlainAttrValue value : values) {\n+            values.forEach(value -> {\n                 JexlContext jexlContext = new MapContext();\n                 if (entity != null) {\n                     JexlUtils.addFieldsToContext(entity, jexlContext);\n@@ -67,12 +67,12 @@ public List<PlainAttrValue> beforePropagation(\n                 jexlContext.set(\"value\", value.getValueAsString());\n \n                 value.setStringValue(JexlUtils.evaluate(propagationJEXL, jexlContext));\n-            }\n+            });\n \n             return values;\n         }\n \n-        return super.beforePropagation(item, entity, values);\n+        return values;\n     }\n \n     @Override\n@@ -83,20 +83,20 @@ public List<Object> beforePull(\n \n         if (StringUtils.isNotBlank(pullJEXL) && values != null) {\n             List<Object> newValues = new ArrayList<>(values.size());\n-            for (Object value : values) {\n+            values.forEach(value -> {\n                 JexlContext jexlContext = new MapContext();\n                 jexlContext.set(\"value\", value);\n                 if (entityTO instanceof AnyTO) {\n                     newValues.add(JexlUtils.evaluate(pullJEXL, (AnyTO) entityTO, jexlContext));\n                 } else {\n                     newValues.add(JexlUtils.evaluate(pullJEXL, jexlContext));\n                 }\n-            }\n+            });\n \n             return newValues;\n         }\n \n-        return super.beforePull(item, entityTO, values);\n+        return values;\n     }\n \n }"},{"sha":"7d81f1131caf25bc5b298938fd3ba7f4374f694f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/DBPasswordPropagationActions.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDBPasswordPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDBPasswordPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDBPasswordPropagationActions.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -29,6 +29,7 @@\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationActions;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n import org.identityconnectors.common.security.GuardedString;\n import org.identityconnectors.framework.common.objects.Attribute;\n@@ -44,7 +45,7 @@\n  * added a password. The CipherAlgorithm associated with the password must match the password\n  * cipher algorithm property of the DB Connector.\n  */\n-public class DBPasswordPropagationActions extends DefaultPropagationActions {\n+public class DBPasswordPropagationActions implements PropagationActions {\n \n     private static final String CLEARTEXT = \"CLEARTEXT\";\n \n@@ -54,8 +55,6 @@ public class DBPasswordPropagationActions extends DefaultPropagationActions {\n     @Transactional(readOnly = true)\n     @Override\n     public void before(final PropagationTask task, final ConnectorObject beforeObj) {\n-        super.before(task, beforeObj);\n-\n         if (AnyTypeKind.USER == task.getAnyTypeKind()) {\n             User user = userDAO.find(task.getEntityKey());\n \n@@ -93,7 +92,7 @@ private String getCipherAlgorithm(final ConnInstance connInstance) {\n                     @Override\n                     public boolean evaluate(final ConnConfProperty property) {\n                         return \"cipherAlgorithm\".equals(property.getSchema().getName())\n-                        && property.getValues() != null && !property.getValues().isEmpty();\n+                                && property.getValues() != null && !property.getValues().isEmpty();\n                     }\n                 });\n "},{"sha":"157fdc14ec59bc3adb99409f1794f9cc4f0142ef","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/DefaultPropagationActions.java","status":"removed","additions":0,"deletions":45,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationActions.java?ref=ea6559c856f2b6a136dc2179a7a9d92148c7c278","patch":"@@ -1,45 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.provisioning.java.propagation;\n-\n-import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n-import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationActions;\n-import org.identityconnectors.framework.common.objects.ConnectorObject;\n-\n-/**\n- * Default (empty) implementation of {@link PropagationActions}.\n- */\n-public abstract class DefaultPropagationActions implements PropagationActions {\n-\n-    @Override\n-    public void before(final PropagationTask task, final ConnectorObject beforeObj) {\n-        // do nothing\n-    }\n-\n-    @Override\n-    public void onError(final PropagationTask task, final TaskExec execution, final Exception error) {\n-        // do nothing\n-    }\n-\n-    @Override\n-    public void after(final PropagationTask task, final TaskExec execution, final ConnectorObject afterObj) {\n-        // do nothing\n-    }\n-}"},{"sha":"b3d05f499eb1e06f9bad20c80558eb55dde76eb5","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/LDAPMembershipPropagationActions.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -34,6 +34,7 @@\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationActions;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import org.identityconnectors.framework.common.objects.AttributeUtil;\n@@ -49,7 +50,7 @@\n  *\n  * @see org.apache.syncope.core.provisioning.java.pushpull.LDAPMembershipPullActions\n  */\n-public class LDAPMembershipPropagationActions extends DefaultPropagationActions {\n+public class LDAPMembershipPropagationActions implements PropagationActions {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(LDAPMembershipPropagationActions.class);\n \n@@ -74,8 +75,6 @@ protected String getGroupMembershipAttrName() {\n     @Transactional(readOnly = true)\n     @Override\n     public void before(final PropagationTask task, final ConnectorObject beforeObj) {\n-        super.before(task, beforeObj);\n-\n         Provision provision = task.getResource().getProvision(anyTypeDAO.findGroup());\n         if (AnyTypeKind.USER == task.getAnyTypeKind()\n                 && provision != null && provision.getMapping() != null"},{"sha":"5dcdf98f771ca9fd0563e5171094b09e2cefbbe0","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/LDAPPasswordPropagationActions.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPPasswordPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPPasswordPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPPasswordPropagationActions.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -29,6 +29,7 @@\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationActions;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n import org.identityconnectors.common.security.GuardedString;\n import org.identityconnectors.framework.common.objects.Attribute;\n@@ -46,7 +47,7 @@\n  * added a password. The CipherAlgorithm associated with the password must match the password\n  * hash algorithm property of the LDAP Connector.\n  */\n-public class LDAPPasswordPropagationActions extends DefaultPropagationActions {\n+public class LDAPPasswordPropagationActions implements PropagationActions {\n \n     private static final String CLEARTEXT = \"CLEARTEXT\";\n \n@@ -56,8 +57,6 @@ public class LDAPPasswordPropagationActions extends DefaultPropagationActions {\n     @Transactional(readOnly = true)\n     @Override\n     public void before(final PropagationTask task, final ConnectorObject beforeObj) {\n-        super.before(task, beforeObj);\n-\n         if (AnyTypeKind.USER == task.getAnyTypeKind()) {\n             User user = userDAO.find(task.getEntityKey());\n \n@@ -99,7 +98,7 @@ private String getCipherAlgorithm(final ConnInstance connInstance) {\n                     @Override\n                     public boolean evaluate(final ConnConfProperty property) {\n                         return \"passwordHashAlgorithm\".equals(property.getSchema().getName())\n-                        && property.getValues() != null && !property.getValues().isEmpty();\n+                                && property.getValues() != null && !property.getValues().isEmpty();\n                     }\n                 });\n "},{"sha":"36b33f748b35ed9b1ee0289ca127b8aa668c9a0b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DBPasswordPullActions.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDBPasswordPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDBPasswordPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDBPasswordPullActions.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -33,6 +33,7 @@\n import org.apache.syncope.core.provisioning.api.Connector;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n+import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.quartz.JobExecutionException;\n import org.slf4j.Logger;\n@@ -45,7 +46,7 @@\n  * import passwords from a Database backend, where the passwords are hashed according to the password cipher algorithm\n  * property of the (DB) Connector and HEX-encoded.\n  */\n-public class DBPasswordPullActions extends DefaultPullActions {\n+public class DBPasswordPullActions implements PullActions {\n \n     private static final Logger LOG = LoggerFactory.getLogger(DBPasswordPullActions.class);\n "},{"sha":"93448357bd744c23fdf1c7132a9c0f446c5dcebe","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultPullActions.java","status":"removed","additions":0,"deletions":125,"changes":125,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultPullActions.java?ref=ea6559c856f2b6a136dc2179a7a9d92148c7c278","patch":"@@ -1,125 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.provisioning.java.pushpull;\n-\n-import org.apache.syncope.common.lib.patch.AnyPatch;\n-import org.apache.syncope.common.lib.to.EntityTO;\n-import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n-import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n-import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n-import org.identityconnectors.framework.common.objects.SyncDelta;\n-import org.quartz.JobExecutionException;\n-import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n-\n-/**\n- * Default (empty) implementation of {@link PullActions}.\n- */\n-public abstract class DefaultPullActions implements PullActions {\n-\n-    @Override\n-    public void beforeAll(final ProvisioningProfile<?, ?> profile) throws JobExecutionException {\n-    }\n-\n-    @Override\n-    public <P extends AnyPatch> SyncDelta beforeUpdate(\n-            final ProvisioningProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final EntityTO entityTO,\n-            final P anyMod) throws JobExecutionException {\n-\n-        return delta;\n-    }\n-\n-    @Override\n-    public SyncDelta beforeDelete(\n-            final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final EntityTO entity)\n-            throws JobExecutionException {\n-\n-        return delta;\n-    }\n-\n-    @Override\n-    public SyncDelta beforeAssign(\n-            final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final EntityTO entity)\n-            throws JobExecutionException {\n-\n-        return delta;\n-    }\n-\n-    @Override\n-    public SyncDelta beforeProvision(\n-            final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final EntityTO entity)\n-            throws JobExecutionException {\n-\n-        return delta;\n-    }\n-\n-    @Override\n-    public SyncDelta beforeLink(\n-            final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final EntityTO entity)\n-            throws JobExecutionException {\n-\n-        return delta;\n-    }\n-\n-    @Override\n-    public SyncDelta beforeUnassign(\n-            final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final EntityTO entity)\n-            throws JobExecutionException {\n-\n-        return delta;\n-    }\n-\n-    @Override\n-    public SyncDelta beforeDeprovision(\n-            final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final EntityTO entity)\n-            throws JobExecutionException {\n-\n-        return delta;\n-    }\n-\n-    @Override\n-    public SyncDelta beforeUnlink(\n-            final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final EntityTO entity)\n-            throws JobExecutionException {\n-\n-        return delta;\n-    }\n-\n-    @Override\n-    public void after(\n-            final ProvisioningProfile<?, ?> profile, final SyncDelta delta, final EntityTO entity,\n-            final ProvisioningReport result)\n-            throws JobExecutionException {\n-    }\n-\n-    @Override\n-    public IgnoreProvisionException onError(\n-            final ProvisioningProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final Exception e) throws JobExecutionException {\n-\n-        return null;\n-    }\n-\n-    @Override\n-    public void afterAll(final ProvisioningProfile<?, ?> profile)\n-            throws JobExecutionException {\n-    }\n-}"},{"sha":"eea4980d4b22097b934a33effe9bdb47adfd82f2","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultPushActions.java","status":"removed","additions":0,"deletions":100,"changes":100,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultPushActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultPushActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultPushActions.java?ref=ea6559c856f2b6a136dc2179a7a9d92148c7c278","patch":"@@ -1,100 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.provisioning.java.pushpull;\n-\n-import org.apache.syncope.core.persistence.api.entity.Entity;\n-import org.apache.syncope.core.provisioning.api.pushpull.PushActions;\n-import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n-import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n-import org.quartz.JobExecutionException;\n-\n-/**\n- * Default (empty) implementation of PushActions.\n- */\n-public abstract class DefaultPushActions implements PushActions {\n-\n-    @Override\n-    public void beforeAll(final ProvisioningProfile<?, ?> profile) throws JobExecutionException {\n-    }\n-\n-    @Override\n-    public Entity beforeAssign(final ProvisioningProfile<?, ?> profile, final Entity entity)\n-            throws JobExecutionException {\n-\n-        return entity;\n-    }\n-\n-    @Override\n-    public Entity beforeProvision(final ProvisioningProfile<?, ?> profile, final Entity entity)\n-            throws JobExecutionException {\n-\n-        return entity;\n-    }\n-\n-    @Override\n-    public Entity beforeLink(final ProvisioningProfile<?, ?> profile, final Entity entity)\n-            throws JobExecutionException {\n-\n-        return entity;\n-    }\n-\n-    @Override\n-    public Entity beforeUnassign(final ProvisioningProfile<?, ?> profile, final Entity entity)\n-            throws JobExecutionException {\n-\n-        return entity;\n-    }\n-\n-    @Override\n-    public Entity beforeDeprovision(final ProvisioningProfile<?, ?> profile, final Entity entity)\n-            throws JobExecutionException {\n-\n-        return entity;\n-    }\n-\n-    @Override\n-    public Entity beforeUnlink(final ProvisioningProfile<?, ?> profile, final Entity entity)\n-            throws JobExecutionException {\n-\n-        return entity;\n-    }\n-\n-    @Override\n-    public void onError(\n-            final ProvisioningProfile<?, ?> profile, final Entity entity, final ProvisioningReport result,\n-            final Exception error) throws JobExecutionException {\n-\n-        // do nothing\n-    }\n-\n-    @Override\n-    public void after(\n-            final ProvisioningProfile<?, ?> profile, final Entity entity, final ProvisioningReport result)\n-            throws JobExecutionException {\n-\n-        // do nothing\n-    }\n-\n-    @Override\n-    public void afterAll(final ProvisioningProfile<?, ?> profile)\n-            throws JobExecutionException {\n-\n-        // do nothing\n-    }\n-}"},{"sha":"c46c0fb0b63da21dc15796fe8e0e44beaaba1e48","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultReconciliationFilterBuilder.java","status":"removed","additions":0,"deletions":38,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultReconciliationFilterBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea6559c856f2b6a136dc2179a7a9d92148c7c278/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultReconciliationFilterBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultReconciliationFilterBuilder.java?ref=ea6559c856f2b6a136dc2179a7a9d92148c7c278","patch":"@@ -1,38 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.provisioning.java.pushpull;\n-\n-import static org.identityconnectors.framework.impl.api.local.operations.FilteredResultsHandler.PassThroughFilter;\n-\n-import org.identityconnectors.framework.common.objects.filter.Filter;\n-import org.apache.syncope.core.provisioning.api.pushpull.ReconciliationFilterBuilder;\n-\n-/**\n- * Default (pass-through) implementation of {@link ReconciliationFilterBuilder}.\n- */\n-public abstract class DefaultReconciliationFilterBuilder implements ReconciliationFilterBuilder {\n-\n-    private static final PassThroughFilter PASS_THROUGH = new PassThroughFilter();\n-\n-    @Override\n-    public Filter build() {\n-        return PASS_THROUGH;\n-    }\n-\n-}"},{"sha":"8a9f1da168917fa3ef7d2b35079c145712f5a2bd","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/LDAPPasswordPullActions.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPPasswordPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPPasswordPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FLDAPPasswordPullActions.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -28,6 +28,7 @@\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n+import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.quartz.JobExecutionException;\n import org.slf4j.Logger;\n@@ -41,7 +42,7 @@\n  * A {@link org.apache.syncope.core.provisioning.api.pushpull.PullActions} implementation which allows the ability to\n  * import passwords from an LDAP backend that are hashed.\n  */\n-public class LDAPPasswordPullActions extends DefaultPullActions {\n+public class LDAPPasswordPullActions implements PullActions {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(LDAPPasswordPullActions.class);\n "},{"sha":"5daa7e00d9b0e6c7a36703be128915be7ecb0314","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/SchedulingPullActions.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSchedulingPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSchedulingPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSchedulingPullActions.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -22,6 +22,7 @@\n import java.util.UUID;\n import org.apache.syncope.core.provisioning.api.job.JobManager;\n import org.apache.syncope.core.provisioning.api.job.JobNamer;\n+import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.quartz.Job;\n@@ -40,7 +41,7 @@\n  *\n  * @see LDAPMembershipPullActions for a concrete example\n  */\n-public abstract class SchedulingPullActions extends DefaultPullActions {\n+public abstract class SchedulingPullActions implements PullActions {\n \n     @Autowired\n     protected SchedulerFactoryBean scheduler;"},{"sha":"d8ec455ede7a6ba9ca701acacff09e345e427f80","filename":"ext/saml2sp/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/SAML2IdPActions.java","status":"modified","additions":12,"deletions":4,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/ext%2Fsaml2sp%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FSAML2IdPActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/ext%2Fsaml2sp%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FSAML2IdPActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FSAML2IdPActions.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -24,11 +24,19 @@\n \n public interface SAML2IdPActions {\n \n-    UserTO beforeCreate(UserTO input, SAML2LoginResponseTO loginResponse);\n+    default UserTO beforeCreate(UserTO input, SAML2LoginResponseTO loginResponse) {\n+        return input;\n+    }\n \n-    UserTO afterCreate(UserTO input, SAML2LoginResponseTO loginResponse);\n+    default UserTO afterCreate(UserTO input, SAML2LoginResponseTO loginResponse) {\n+        return input;\n+    }\n \n-    UserPatch beforeUpdate(UserPatch input, SAML2LoginResponseTO loginResponse);\n+    default UserPatch beforeUpdate(UserPatch input, SAML2LoginResponseTO loginResponse) {\n+        return input;\n+    }\n \n-    UserTO afterUpdate(UserTO input, SAML2LoginResponseTO loginResponse);\n+    default UserTO afterUpdate(UserTO input, SAML2LoginResponseTO loginResponse) {\n+        return input;\n+    }\n }"},{"sha":"ba5fc4077e8e5d49cda1dc447d14d2e61a032a7f","filename":"ext/saml2sp/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultSAML2IdPActions.java","status":"removed","additions":0,"deletions":48,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ea6559c856f2b6a136dc2179a7a9d92148c7c278/ext%2Fsaml2sp%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultSAML2IdPActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ea6559c856f2b6a136dc2179a7a9d92148c7c278/ext%2Fsaml2sp%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultSAML2IdPActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultSAML2IdPActions.java?ref=ea6559c856f2b6a136dc2179a7a9d92148c7c278","patch":"@@ -1,48 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.provisioning.java;\n-\n-import org.apache.syncope.common.lib.patch.UserPatch;\n-import org.apache.syncope.common.lib.to.SAML2LoginResponseTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.core.provisioning.api.SAML2IdPActions;\n-\n-public class DefaultSAML2IdPActions implements SAML2IdPActions {\n-\n-    @Override\n-    public UserTO beforeCreate(final UserTO input, final SAML2LoginResponseTO loginResponse) {\n-        return input;\n-    }\n-\n-    @Override\n-    public UserTO afterCreate(final UserTO input, final SAML2LoginResponseTO loginResponse) {\n-        return input;\n-    }\n-\n-    @Override\n-    public UserPatch beforeUpdate(final UserPatch input, final SAML2LoginResponseTO loginResponse) {\n-        return input;\n-    }\n-\n-    @Override\n-    public UserTO afterUpdate(final UserTO input, final SAML2LoginResponseTO loginResponse) {\n-        return input;\n-    }\n-\n-}"},{"sha":"6c79367d52080d14784c2a7c69bb972757c5e480","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/DoubleValueLogicActions.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDoubleValueLogicActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDoubleValueLogicActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FDoubleValueLogicActions.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -24,12 +24,12 @@\n import org.apache.syncope.common.lib.patch.AttrPatch;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n-import org.apache.syncope.core.provisioning.java.DefaultLogicActions;\n+import org.apache.syncope.core.provisioning.api.LogicActions;\n \n /**\n  * Class for integration tests: transform (by making it double) any attribute value for defined schema.\n  */\n-public class DoubleValueLogicActions extends DefaultLogicActions {\n+public class DoubleValueLogicActions implements LogicActions {\n \n     private static final String NAME = \"makeItDouble\";\n "},{"sha":"32b3357f5e4ec410ac32e44bc59ed175352027f0","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/ITImplementationLookup.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FITImplementationLookup.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -52,8 +52,6 @@\n import org.apache.syncope.core.persistence.jpa.attrvalue.validation.EmailAddressValidator;\n import org.apache.syncope.core.persistence.jpa.dao.DefaultAccountRule;\n import org.apache.syncope.core.persistence.jpa.dao.DefaultPasswordRule;\n-import org.apache.syncope.core.provisioning.java.DefaultLogicActions;\n-import org.apache.syncope.core.provisioning.java.data.DefaultItemTransformer;\n import org.apache.syncope.core.provisioning.java.propagation.DBPasswordPropagationActions;\n import org.apache.syncope.core.provisioning.java.propagation.LDAPMembershipPropagationActions;\n import org.apache.syncope.core.provisioning.java.propagation.LDAPPasswordPropagationActions;\n@@ -100,7 +98,6 @@ public class ITImplementationLookup implements ImplementationLookup {\n \n             classNames = new HashSet<>();\n             classNames.add(PrefixItemTransformer.class.getName());\n-            classNames.add(DefaultItemTransformer.class.getName());\n             put(Type.ITEM_TRANSFORMER, classNames);\n \n             classNames = new HashSet<>();\n@@ -113,7 +110,6 @@ public class ITImplementationLookup implements ImplementationLookup {\n \n             classNames = new HashSet<>();\n             classNames.add(DoubleValueLogicActions.class.getName());\n-            classNames.add(DefaultLogicActions.class.getName());\n             put(Type.LOGIC_ACTIONS, classNames);\n \n             classNames = new HashSet<>();"},{"sha":"07f7968ef5342c86a642d3e173506df1a764145d","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/PrefixItemTransformer.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPrefixItemTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPrefixItemTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPrefixItemTransformer.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -25,9 +25,9 @@\n import org.apache.syncope.core.persistence.api.entity.Entity;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.resource.Item;\n-import org.apache.syncope.core.provisioning.java.data.DefaultItemTransformer;\n+import org.apache.syncope.core.provisioning.api.data.ItemTransformer;\n \n-public class PrefixItemTransformer extends DefaultItemTransformer {\n+public class PrefixItemTransformer implements ItemTransformer {\n \n     public static final String PREFIX = \"PREFIX_\";\n \n@@ -38,7 +38,7 @@ public List<PlainAttrValue> beforePropagation(\n             final List<PlainAttrValue> values) {\n \n         if (values == null || values.isEmpty() || values.get(0).getStringValue() == null) {\n-            return super.beforePropagation(item, entity, values);\n+            return values;\n         } else {\n             String value = values.get(0).getStringValue();\n             values.get(0).setStringValue(PREFIX + value);\n@@ -54,7 +54,7 @@ public List<Object> beforePull(\n             final List<Object> values) {\n \n         if (values == null || values.isEmpty() || values.get(0) == null) {\n-            return super.beforePull(item, entityTO, values);\n+            return values;\n         } else {\n             List<Object> newValues = new ArrayList<>(values);\n             newValues.set(0, StringUtils.substringAfter(values.get(0).toString(), PREFIX));"},{"sha":"fb48c9be1c63dcc7c08c8f30a4b83be6da686685","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/TestPullActions.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestPullActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestPullActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestPullActions.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -28,14 +28,14 @@\n import org.apache.syncope.common.lib.types.PatchOperation;\n import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n-import org.apache.syncope.core.provisioning.java.pushpull.DefaultPullActions;\n+import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.quartz.JobExecutionException;\n \n /**\n  * Test pull action.\n  */\n-public class TestPullActions extends DefaultPullActions {\n+public class TestPullActions implements PullActions {\n \n     private int counter;\n "},{"sha":"2c392ec89f189ff3edf7bcac18b080829d0d0cd4","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/TestReconciliationFilterBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestReconciliationFilterBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a1a1f06164bb43d641c2cce9dd7dc954ac475f3/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestReconciliationFilterBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestReconciliationFilterBuilder.java?ref=5a1a1f06164bb43d641c2cce9dd7dc954ac475f3","patch":"@@ -18,12 +18,12 @@\n  */\n package org.apache.syncope.fit.core.reference;\n \n-import org.apache.syncope.core.provisioning.java.pushpull.DefaultReconciliationFilterBuilder;\n+import org.apache.syncope.core.provisioning.api.pushpull.ReconciliationFilterBuilder;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n import org.identityconnectors.framework.common.objects.filter.Filter;\n import org.identityconnectors.framework.common.objects.filter.FilterBuilder;\n \n-public class TestReconciliationFilterBuilder extends DefaultReconciliationFilterBuilder {\n+public class TestReconciliationFilterBuilder implements ReconciliationFilterBuilder {\n \n     private static final Filter EQUALS = FilterBuilder.equalTo(AttributeBuilder.build(\"SURNAME\", \"Rossi\"));\n "}]}