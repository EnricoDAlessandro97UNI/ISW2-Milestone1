{"sha":"f2c03344bd6ab0e55e470daadfd2434e11e8678a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmYyYzAzMzQ0YmQ2YWIwZTU1ZTQ3MGRhYWRmZDI0MzRlMTFlODY3OGE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-03-02T10:06:51Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-03-02T10:06:51Z"},"message":"Fixing console build errors due to unfinished work\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1296108 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"157895e6f7b04ad3201f0a1823060f70d9ec9ed5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/157895e6f7b04ad3201f0a1823060f70d9ec9ed5"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f2c03344bd6ab0e55e470daadfd2434e11e8678a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f2c03344bd6ab0e55e470daadfd2434e11e8678a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f2c03344bd6ab0e55e470daadfd2434e11e8678a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f2c03344bd6ab0e55e470daadfd2434e11e8678a/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e797a8c4ba8e04129e25713db98520105283e58f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e797a8c4ba8e04129e25713db98520105283e58f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e797a8c4ba8e04129e25713db98520105283e58f"}],"stats":{"total":24,"additions":12,"deletions":12},"files":[{"sha":"5aa099556d127b85c5d11e74b3a6ed8cc8da49fc","filename":"console/src/main/java/org/syncope/console/pages/panels/PolicyBeanPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f2c03344bd6ab0e55e470daadfd2434e11e8678a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f2c03344bd6ab0e55e470daadfd2434e11e8678a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java?ref=f2c03344bd6ab0e55e470daadfd2434e11e8678a","patch":"@@ -41,7 +41,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.util.StringUtils;\n-import org.syncope.client.SchemaList;\n+import org.syncope.annotation.SchemaList;\n import org.syncope.client.to.SchemaTO;\n import org.syncope.console.commons.XMLRolesReader;\n import org.syncope.console.rest.SchemaRestClient;"},{"sha":"1d71c9b3581ff75e3f5984209f567fc8a2bfbe11","filename":"console/src/main/java/org/syncope/console/pages/panels/ResourceMappingPanel.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f2c03344bd6ab0e55e470daadfd2434e11e8678a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f2c03344bd6ab0e55e470daadfd2434e11e8678a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java?ref=f2c03344bd6ab0e55e470daadfd2434e11e8678a","patch":"@@ -55,7 +55,7 @@\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.syncope.console.wicket.markup.html.form.FieldPanel;\n import org.syncope.types.ConnConfProperty;\n-import org.syncope.types.Entity;\n+import org.syncope.types.AttributableType;\n import org.syncope.types.IntMappingType;\n \n /**\n@@ -188,8 +188,8 @@ protected void populateItem(\n \n                 final SchemaMappingTO mappingTO = item.getModelObject();\n \n-                final Entity entity = mappingTO.getIntMappingType() == null\n-                        ? null : mappingTO.getIntMappingType().getEntity();\n+                final AttributableType entity = mappingTO.getIntMappingType() == null\n+                        ? null : mappingTO.getIntMappingType().getAttributableType();\n \n                 attrTypes = getAttributeTypes(entity);\n \n@@ -293,7 +293,7 @@ protected void onUpdate(\n                         new ResourceModel(\"mappingTypes\", \"mappingTypes\").\n                         getObject(), new Model(entity), false);\n \n-                mappingTypesPanel.setChoices(Arrays.asList(Entity.values()));\n+                mappingTypesPanel.setChoices(Arrays.asList(AttributableType.values()));\n                 mappingTypesPanel.setStyleShet(defFieldStyle);\n \n                 item.add(mappingTypesPanel);\n@@ -309,7 +309,7 @@ protected void onUpdate(\n                                     final AjaxRequestTarget target) {\n \n                                 attrTypes = getAttributeTypes(\n-                                        (Entity) mappingTypesPanel.\n+                                        (AttributableType) mappingTypesPanel.\n                                         getModelObject());\n \n                                 typesPanel.setChoices(attrTypes);\n@@ -540,7 +540,7 @@ private void setAttrNames(\n         toBeUpdated.setRequired(true);\n         toBeUpdated.setEnabled(true);\n \n-        if (attrType == null || attrType.getEntity() == null) {\n+        if (attrType == null || attrType.getAttributableType() == null) {\n             toBeUpdated.setChoices(Collections.EMPTY_LIST);\n         } else {\n \n@@ -551,23 +551,23 @@ private void setAttrNames(\n                 case MembershipSchema:\n                     toBeUpdated.setChoices(\n                             schemaRestClient.getSchemaNames(\n-                            attrType.getEntity().toString().toLowerCase()));\n+                            attrType.getAttributableType().toString().toLowerCase()));\n                     break;\n \n                 case UserDerivedSchema:\n                 case RoleDerivedSchema:\n                 case MembershipDerivedSchema:\n                     toBeUpdated.setChoices(\n                             schemaRestClient.getDerivedSchemaNames(\n-                            attrType.getEntity().toString().toLowerCase()));\n+                            attrType.getAttributableType().toString().toLowerCase()));\n                     break;\n \n                 case UserVirtualSchema:\n                 case RoleVirtualSchema:\n                 case MembershipVirtualSchema:\n                     toBeUpdated.setChoices(\n                             schemaRestClient.getVirtualSchemaNames(\n-                            attrType.getEntity().toString().toLowerCase()));\n+                            attrType.getAttributableType().toString().toLowerCase()));\n                     break;\n \n                 case SyncopeUserId:\n@@ -602,12 +602,12 @@ private void setAttrNames(\n      * @param entity entity.\n      * @return all attribute types.\n      */\n-    private List<IntMappingType> getAttributeTypes(final Entity entity) {\n+    private List<IntMappingType> getAttributeTypes(final AttributableType entity) {\n         final List<IntMappingType> res = new ArrayList<IntMappingType>();\n \n         if (entity != null) {\n             final EnumSet types = IntMappingType.getAttributeTypes(\n-                    Entity.valueOf(entity.toString()));\n+                    AttributableType.valueOf(entity.toString()));\n \n             for (Object type : types) {\n                 res.add(IntMappingType.valueOf("}]}