{"sha":"474f4f6ec2fc7177119014dffdc2c6d0b78ce083","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ3NGY0ZjZlYzJmYzcxNzcxMTkwMTRkZmZkYzJjNmQwYjc4Y2UwODM=","commit":{"author":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2013-02-20T14:44:21Z"},"committer":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2013-02-20T14:44:21Z"},"message":"[SYNCOPE-320] - Support synchronizing role memberships from LDAP groupOfNames\n - Patch applied with some feedback from Francesco\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1448195 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e7476730da61661dddb1929e942af7708141bc69","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e7476730da61661dddb1929e942af7708141bc69"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/474f4f6ec2fc7177119014dffdc2c6d0b78ce083","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/474f4f6ec2fc7177119014dffdc2c6d0b78ce083","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/474f4f6ec2fc7177119014dffdc2c6d0b78ce083","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/474f4f6ec2fc7177119014dffdc2c6d0b78ce083/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"1f48897a94eef10c6222b0c5707947c95e145551","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1f48897a94eef10c6222b0c5707947c95e145551","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1f48897a94eef10c6222b0c5707947c95e145551"}],"stats":{"total":32,"additions":24,"deletions":8},"files":[{"sha":"5be5d0cd9fe7e4bd42713c75000153a8c3c1eb4e","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/LDAPMembershipSyncActions.java","status":"modified","additions":24,"deletions":8,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/474f4f6ec2fc7177119014dffdc2c6d0b78ce083/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/474f4f6ec2fc7177119014dffdc2c6d0b78ce083/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPMembershipSyncActions.java?ref=474f4f6ec2fc7177119014dffdc2c6d0b78ce083","patch":"@@ -20,6 +20,7 @@\n \n import java.util.Collections;\n import java.util.HashMap;\n+import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n \n@@ -28,7 +29,9 @@\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.RoleTO;\n+import org.apache.syncope.common.types.ConnConfProperty;\n import org.apache.syncope.core.notification.NotificationManager;\n+import org.apache.syncope.core.persistence.beans.ConnInstance;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.SyncTask;\n@@ -84,10 +87,23 @@ public class LDAPMembershipSyncActions extends DefaultSyncActions {\n     /**\n      * Allows easy subclassing for the ConnId AD connector bundle.\n      *\n+     * @param connector A Connector instance to query for the groupMemberAttribute property name\n      * @return the name of the attribute used to keep track of group memberships\n      */\n-    protected String getGroupMembershipAttrName() {\n-        return \"uniquemember\";\n+    protected String getGroupMembershipAttrName(final Connector connector) {\n+        ConnInstance connInstance = connector.getActiveConnInstance();\n+        Iterator<ConnConfProperty> propertyIterator = connInstance.getConfiguration().iterator();\n+        String groupMembershipName = \"uniquemember\";\n+        while (propertyIterator.hasNext()) {\n+            ConnConfProperty property = propertyIterator.next();\n+            if (\"groupMemberAttribute\".equals(property.getSchema().getName())\n+                && property.getValues() != null && !property.getValues().isEmpty()) {\n+                groupMembershipName = (String)property.getValues().get(0);\n+                break;\n+            }\n+        }\n+        \n+        return groupMembershipName;\n     }\n \n     /**\n@@ -144,7 +160,7 @@ protected UserMod getUserMod(final Long userId, final RoleTO roleTO) {\n \n     /**\n      * Read values of attribute returned by getGroupMembershipAttrName(); if not present in the given delta, perform an\n-     * additioanl read on the underlying connector.\n+     * additional read on the underlying connector.\n      *\n      * @param delta representing the synchronizing role\n      * @param connector associated to the current resource\n@@ -153,15 +169,15 @@ protected UserMod getUserMod(final Long userId, final RoleTO roleTO) {\n      */\n     protected List<Object> getMembAttrValues(final SyncDelta delta, final Connector connector) {\n         List<Object> result = Collections.<Object>emptyList();\n-\n+        String groupMemberName = getGroupMembershipAttrName(connector);\n+        \n         // first, try to read the configured attribute from delta, returned by the ongoing synchronization\n-        Attribute membAttr = delta.getObject().getAttributeByName(getGroupMembershipAttrName());\n+        Attribute membAttr = delta.getObject().getAttributeByName(groupMemberName);\n         // if not found, perform an additional read on the underlying connector for the same connector object\n         if (membAttr == null) {\n             final OperationOptionsBuilder oob = new OperationOptionsBuilder();\n-            oob.setAttributesToGet(getGroupMembershipAttrName());\n-            membAttr = connector.getObjectAttribute(ObjectClass.GROUP, delta.getUid(), oob.build(),\n-                    getGroupMembershipAttrName());\n+            oob.setAttributesToGet(groupMemberName);\n+            membAttr = connector.getObjectAttribute(ObjectClass.GROUP, delta.getUid(), oob.build(), groupMemberName);\n         }\n         if (membAttr != null && membAttr.getValue() != null) {\n             result = membAttr.getValue();"}]}