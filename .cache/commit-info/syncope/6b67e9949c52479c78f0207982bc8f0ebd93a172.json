{"sha":"6b67e9949c52479c78f0207982bc8f0ebd93a172","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZiNjdlOTk0OWM1MjQ3OWM3OGYwMjA3OTgyYmM4ZjBlYmQ5M2ExNzI=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-02-25T15:37:34Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-02-25T15:37:34Z"},"message":"SYNCOPE-265 added more user info ....\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1449752 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"98c6e7aa709f17f5a34595c2c39bba9631076240","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/98c6e7aa709f17f5a34595c2c39bba9631076240"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6b67e9949c52479c78f0207982bc8f0ebd93a172","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6b67e9949c52479c78f0207982bc8f0ebd93a172","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6b67e9949c52479c78f0207982bc8f0ebd93a172","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6b67e9949c52479c78f0207982bc8f0ebd93a172/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"eb4f73b6ba5b4b96a26e06b65ad7930b641ac94c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/eb4f73b6ba5b4b96a26e06b65ad7930b641ac94c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/eb4f73b6ba5b4b96a26e06b65ad7930b641ac94c"}],"stats":{"total":160,"additions":96,"deletions":64},"files":[{"sha":"0cf915a0d11f2dc2a45ef06c2c3e22a8eeeafc2b","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/AttrTest.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttrTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttrTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttrTest.java?ref=6b67e9949c52479c78f0207982bc8f0ebd93a172","patch":"@@ -54,14 +54,14 @@ public class AttrTest extends AbstractDAOTest {\n     @Test\n     public void findAll() {\n         List<UAttr> list = attrDAO.findAll(UAttr.class);\n-        assertEquals(\"did not get expected number of attributes \", 9, list.size());\n+        assertEquals(\"did not get expected number of attributes \", 24, list.size());\n     }\n \n     @Test\n     public void findById() {\n         UAttr attribute = attrDAO.find(100L, UAttr.class);\n         assertNotNull(\"did not find expected attribute schema\", attribute);\n-        attribute = attrDAO.find(200L, UAttr.class);\n+        attribute = attrDAO.find(104L, UAttr.class);\n         assertNotNull(\"did not find expected attribute schema\", attribute);\n     }\n \n@@ -190,7 +190,7 @@ public void validateAndSave() {\n \n     @Test\n     public void delete() {\n-        UAttr attribute = attrDAO.find(200L, UAttr.class);\n+        UAttr attribute = attrDAO.find(104L, UAttr.class);\n         String attrSchemaName = attribute.getSchema().getName();\n \n         attrDAO.delete(attribute.getId(), UAttr.class);"},{"sha":"c525f8769665ed488fe20fcdc9a33de9cf04a6a0","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/AttributableSearchTest.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributableSearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributableSearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FAttributableSearchTest.java?ref=6b67e9949c52479c78f0207982bc8f0ebd93a172","patch":"@@ -123,15 +123,15 @@ public void searchWithLikeCondition() {\n     public void searchWithNotCondition() {\n         final AttributeCond fullnameLeafCond = new AttributeCond(AttributeCond.Type.EQ);\n         fullnameLeafCond.setSchema(\"fullname\");\n-        fullnameLeafCond.setExpression(\"fabio.martelli\");\n+        fullnameLeafCond.setExpression(\"Giuseppe Verdi\");\n \n         final NodeCond cond = NodeCond.getNotLeafCond(fullnameLeafCond);\n         assertTrue(cond.isValid());\n \n         final List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), cond,\n                 AttributableUtil.getInstance(AttributableType.USER));\n         assertNotNull(users);\n-        assertEquals(2, users.size());\n+        assertEquals(4, users.size());\n \n         Set<Long> ids = new HashSet<Long>(2);\n         ids.add(users.get(0).getId());\n@@ -256,7 +256,7 @@ public void searchByResource() {\n     public void searchByUsernameAndId() {\n         final AttributableCond usernameLeafCond = new AttributableCond(AttributableCond.Type.EQ);\n         usernameLeafCond.setSchema(\"username\");\n-        usernameLeafCond.setExpression(\"user1\");\n+        usernameLeafCond.setExpression(\"rossini\");\n \n         final AttributableCond idRightCond = new AttributableCond(AttributableCond.Type.LT);\n         idRightCond.setSchema(\"id\");\n@@ -270,7 +270,7 @@ public void searchByUsernameAndId() {\n \n         assertNotNull(matchingUsers);\n         assertEquals(1, matchingUsers.size());\n-        assertEquals(\"user1\", matchingUsers.iterator().next().getUsername());\n+        assertEquals(\"rossini\", matchingUsers.iterator().next().getUsername());\n         assertEquals(1L, matchingUsers.iterator().next().getId().longValue());\n     }\n \n@@ -302,11 +302,11 @@ public void searchByRolenameAndId() {\n     public void searchByUsernameAndFullname() {\n         final AttributableCond usernameLeafCond = new AttributableCond(AttributableCond.Type.EQ);\n         usernameLeafCond.setSchema(\"username\");\n-        usernameLeafCond.setExpression(\"user1\");\n+        usernameLeafCond.setExpression(\"rossini\");\n \n         final AttributeCond idRightCond = new AttributeCond(AttributeCond.Type.LIKE);\n         idRightCond.setSchema(\"fullname\");\n-        idRightCond.setExpression(\"fabio.mart%\");\n+        idRightCond.setExpression(\"Giuseppe V%\");\n \n         final NodeCond searchCondition = NodeCond.getOrCond(NodeCond.getLeafCond(usernameLeafCond),\n                 NodeCond.getLeafCond(idRightCond));\n@@ -389,14 +389,14 @@ public void issue242() {\n     public void issueSYNCOPE46() {\n         final AttributableCond cond = new AttributableCond(AttributeCond.Type.LIKE);\n         cond.setSchema(\"username\");\n-        cond.setExpression(\"%user%\");\n+        cond.setExpression(\"%ossin%\");\n \n         final NodeCond searchCondition = NodeCond.getLeafCond(cond);\n         assertTrue(searchCondition.isValid());\n \n         final List<SyncopeUser> users = searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()),\n                 searchCondition, AttributableUtil.getInstance(AttributableType.USER));\n         assertNotNull(users);\n-        assertEquals(5, users.size());\n+        assertEquals(1, users.size());\n     }\n }"},{"sha":"bb86cd6df34d28d2bef59f2ce7ec76c3f0b1d732","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/DerAttrTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerAttrTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerAttrTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FDerAttrTest.java?ref=6b67e9949c52479c78f0207982bc8f0ebd93a172","patch":"@@ -191,7 +191,7 @@ public void issueSYNCOPE134User() {\n         String value = derAttr.getValue(owner.getAttributes());\n         assertNotNull(value);\n         assertFalse(value.isEmpty());\n-        assertTrue(value.startsWith(\"active - user3 - 2010-10-20\"));\n+        assertTrue(value.startsWith(\"active - vivaldi - 2010-10-20\"));\n         assertTrue(value.endsWith(\"[]\"));\n     }\n "},{"sha":"d68f712b78347310b9a755d02c5174c4fadb615e","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/UserTest.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FUserTest.java?ref=6b67e9949c52479c78f0207982bc8f0ebd93a172","patch":"@@ -82,7 +82,7 @@ public void findAllByPageAndSize() {\n     @Test\n     public void findByDerAttributeValue()\n             throws InvalidSearchConditionException {\n-        final List<SyncopeUser> list = userDAO.findByDerAttrValue(\"cn\", \"Doe, John\");\n+        final List<SyncopeUser> list = userDAO.findByDerAttrValue(\"cn\", \"Vivaldi, Antonio\");\n         assertEquals(\"did not get expected number of users \", 1, list.size());\n     }\n \n@@ -101,7 +101,7 @@ public void findByInvalidDerAttrExpression()\n     @Test\n     public void findByAttributeValue() {\n         final UAttrValue fullnameValue = new UAttrValue();\n-        fullnameValue.setStringValue(\"chicchiricco\");\n+        fullnameValue.setStringValue(\"Gioacchino Rossini\");\n \n         final List<SyncopeUser> list = userDAO.findByAttrValue(\"fullname\", fullnameValue);\n         assertEquals(\"did not get expected number of users \", 1, list.size());\n@@ -128,9 +128,9 @@ public void findById() {\n \n     @Test\n     public void findByUsername() {\n-        SyncopeUser user = userDAO.find(\"user1\");\n+        SyncopeUser user = userDAO.find(\"rossini\");\n         assertNotNull(\"did not find expected user\", user);\n-        user = userDAO.find(\"user3\");\n+        user = userDAO.find(\"vivaldi\");\n         assertNotNull(\"did not find expected user\", user);\n         user = userDAO.find(\"user6\");\n         assertNull(\"found user but did not expect it\", user);"},{"sha":"7739815a4adfe575a7286b674607e41d0d984ebd","filename":"core/src/test/java/org/apache/syncope/core/persistence/relationships/AttrTest.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FAttrTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FAttrTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FAttrTest.java?ref=6b67e9949c52479c78f0207982bc8f0ebd93a172","patch":"@@ -74,26 +74,26 @@ public class AttrTest extends AbstractDAOTest {\n \n     @Test\n     public void deleteAttribute() {\n-        attrDAO.delete(550L, UAttr.class);\n+        attrDAO.delete(117L, UAttr.class);\n \n         attrDAO.flush();\n \n-        assertNull(attrDAO.find(550L, UAttr.class));\n-        assertNull(attrValueDAO.find(22L, UAttrValue.class));\n+        assertNull(attrDAO.find(117L, UAttr.class));\n+        assertNull(attrValueDAO.find(28L, UAttrValue.class));\n     }\n \n     @Test\n     public void deleteAttributeValue() {\n-        UAttrValue value = attrValueDAO.find(20L, UAttrValue.class);\n+        UAttrValue value = attrValueDAO.find(14L, UAttrValue.class);\n         int attributeValueNumber = value.getAttribute().getValues().size();\n \n-        attrValueDAO.delete(20L, UAttrValue.class);\n+        attrValueDAO.delete(value.getId(), UAttrValue.class);\n \n         attrValueDAO.flush();\n \n-        assertNull(attrValueDAO.find(20L, UAttrValue.class));\n+        assertNull(attrValueDAO.find(value.getId(), UAttrValue.class));\n \n-        UAttr attribute = attrDAO.find(200L, UAttr.class);\n+        UAttr attribute = attrDAO.find(104L, UAttr.class);\n         assertEquals(attribute.getValues().size(), attributeValueNumber - 1);\n     }\n \n@@ -156,7 +156,7 @@ public void derAttrFromSpecialAttrs() {\n         String value = derAttr.getValue(owner.getAttributes());\n         assertNotNull(value);\n         assertFalse(value.isEmpty());\n-        assertTrue(value.startsWith(\"user3 - 2010-10-20\"));\n+        assertTrue(value.startsWith(\"vivaldi - 2010-10-20\"));\n         assertTrue(value.endsWith(\"[]\"));\n     }\n }"},{"sha":"1d6b75a8207439c51a31a637e771bb598d184248","filename":"core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java?ref=6b67e9949c52479c78f0207982bc8f0ebd93a172","patch":"@@ -160,7 +160,7 @@ public void testUserRead() {\n         UserTO readUserTO = userService2.read(1L);\n         assertNotNull(readUserTO);\n \n-        UserService userService3 = setupCredentials(userService, UserService.class, \"user2\", ADMIN_PWD);\n+        UserService userService3 = setupCredentials(userService, UserService.class, \"verdi\", ADMIN_PWD);\n \n         SyncopeClientException exception = null;\n         try {\n@@ -205,7 +205,7 @@ public void testUserSearch() throws InvalidSearchConditionException {\n         }\n         assertTrue(userIds.contains(1L));\n \n-        UserService userService3 = setupCredentials(userService, UserService.class, \"user2\", \"password\");\n+        UserService userService3 = setupCredentials(userService, UserService.class, \"verdi\", \"password\");\n \n         matchedUsers = userService3.search(searchCondition);\n "},{"sha":"4668d3621a9a7211a599b9ccc7b4a2d9092639f5","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=6b67e9949c52479c78f0207982bc8f0ebd93a172","patch":"@@ -194,7 +194,7 @@ public void selfRead() {\n         assertTrue(userTO.getMembershipMap().containsKey(1L));\n         assertFalse(userTO.getMembershipMap().containsKey(3L));\n \n-        RoleService roleService2 = setupCredentials(roleService, RoleService.class, \"user1\", ADMIN_PWD);\n+        RoleService roleService2 = setupCredentials(roleService, RoleService.class, \"rossini\", ADMIN_PWD);\n \n         SyncopeClientException exception = null;\n         try {\n@@ -297,7 +297,7 @@ public void updateAsRoleOwner() {\n         roleMod.setName(\"Managing Director\");\n \n         // 3. try to update as user3, not owner of role 7 - fail\n-        RoleService roleService2 = setupCredentials(roleService, RoleService.class, \"user2\", ADMIN_PWD);\n+        RoleService roleService2 = setupCredentials(roleService, RoleService.class, \"verdi\", ADMIN_PWD);\n \n         try {\n             roleService2.update(roleMod.getId(), roleMod);\n@@ -310,7 +310,7 @@ public void updateAsRoleOwner() {\n \n         // 4. update as user5, owner of role 7 because owner of role 6 with\n         // inheritance - success\n-        RoleService roleService3 = setupCredentials(roleService, RoleService.class, \"user5\", ADMIN_PWD);\n+        RoleService roleService3 = setupCredentials(roleService, RoleService.class, \"puccini\", ADMIN_PWD);\n \n         roleTO = roleService3.update(roleMod.getId(), roleMod);\n         assertEquals(\"Managing Director\", roleTO.getName());"},{"sha":"1c4a0d37a3f6c7e44a63e8a36888820baae240c9","filename":"core/src/test/java/org/apache/syncope/core/rest/SearchTestITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FSearchTestITCase.java?ref=6b67e9949c52479c78f0207982bc8f0ebd93a172","patch":"@@ -87,7 +87,7 @@ public void searchUser() throws InvalidSearchConditionException {\n     public void searchByUsernameAndId() throws InvalidSearchConditionException {\n         final AttributableCond usernameLeafCond = new AttributableCond(AttributableCond.Type.EQ);\n         usernameLeafCond.setSchema(\"username\");\n-        usernameLeafCond.setExpression(\"user1\");\n+        usernameLeafCond.setExpression(\"rossini\");\n \n         final AttributableCond idRightCond = new AttributableCond(AttributableCond.Type.LT);\n         idRightCond.setSchema(\"id\");\n@@ -102,7 +102,7 @@ public void searchByUsernameAndId() throws InvalidSearchConditionException {\n \n         assertNotNull(matchingUsers);\n         assertEquals(1, matchingUsers.size());\n-        assertEquals(\"user1\", matchingUsers.iterator().next().getUsername());\n+        assertEquals(\"rossini\", matchingUsers.iterator().next().getUsername());\n         assertEquals(1L, matchingUsers.iterator().next().getId());\n     }\n "},{"sha":"d5727ae0e806149903cbdde78d75e2d3b275f8c7","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=6b67e9949c52479c78f0207982bc8f0ebd93a172","patch":"@@ -878,7 +878,6 @@ public void issueSYNCOPE307() {\n                     \"SELECT USERNAME FROM testsync WHERE ID=?\", String.class, userTO.getId());\n             assertEquals(\"virtualvalue\", value);\n         } catch (EmptyResultDataAccessException e) {\n-            LOG.error(\"AAAAAAAAAAAAAAAAAAAAAAA\", e);\n             assertTrue(false);\n         }\n     }"},{"sha":"e66ec0c79abaa2ac956ff19949fab81503f73998","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":8,"deletions":6,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=6b67e9949c52479c78f0207982bc8f0ebd93a172","patch":"@@ -112,7 +112,7 @@ public static UserTO getSampleTO(final String email) {\n \n     @Test\n     public void selfRead() {\n-        UserService userService2 = setupCredentials(userService, UserService.class, \"user1\", ADMIN_PWD);\n+        UserService userService2 = setupCredentials(userService, UserService.class, \"rossini\", ADMIN_PWD);\n \n         try {\n             userService2.read(1L);\n@@ -125,7 +125,7 @@ public void selfRead() {\n         }\n \n         UserTO userTO = userService2.readSelf();\n-        assertEquals(\"user1\", userTO.getUsername());\n+        assertEquals(\"rossini\", userTO.getUsername());\n     }\n \n     @Test\n@@ -564,8 +564,9 @@ public void createWithReject() {\n         assertNotNull(form.getTaskId());\n         assertNull(form.getOwner());\n \n-        // 3. claim task from user1, not in role 7 (designated for approval in workflow definition): fail\n-        UserWorkflowService userService2 = setupCredentials(userWorkflowService, UserWorkflowService.class, \"user1\", ADMIN_PWD);\n+        // 3. claim task from rossini, not in role 7 (designated for approval in workflow definition): fail\n+        UserWorkflowService userService2 = \n+                setupCredentials(userWorkflowService, UserWorkflowService.class, \"rossini\", ADMIN_PWD);\n \n         try {\n             userService2.claimForm(form.getTaskId());\n@@ -574,8 +575,9 @@ public void createWithReject() {\n             assertNotNull(scce.getException(SyncopeClientExceptionType.Workflow));\n         }\n \n-        // 4. claim task from user4, in role 7\n-        UserWorkflowService userService3 = setupCredentials(userWorkflowService, UserWorkflowService.class, \"user4\", ADMIN_PWD);\n+        // 4. claim task from bellini, in role 7\n+        UserWorkflowService userService3 = \n+                setupCredentials(userWorkflowService, UserWorkflowService.class, \"bellini\", ADMIN_PWD);\n \n         form = userService3.claimForm(form.getTaskId());\n         assertNotNull(form);"},{"sha":"624b58966073bc71cd3384bf46acfcaee4c36cc0","filename":"core/src/test/resources/content.xml","status":"modified","additions":57,"deletions":26,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6b67e9949c52479c78f0207982bc8f0ebd93a172/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=6b67e9949c52479c78f0207982bc8f0ebd93a172","patch":"@@ -42,15 +42,15 @@ under the License.\n   <Policy DTYPE=\"SyncPolicy\" id=\"9\" description=\"sync policy for java rule\" type=\"SYNC\" specification=\"%3Corg.apache.syncope.common.types.SyncPolicySpec%3E%0A++%3CconflictResolutionAction%3EIGNORE%3C/conflictResolutionAction%3E%0A%3C/org.apache.syncope.common.types.SyncPolicySpec%3E\"/>\n     \n   <SyncopeUser id=\"1\" workflowId=\"0\" status=\"active\" password=\"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\" cipherAlgorithm=\"SHA1\"\n-               username=\"user1\" creationDate=\"2010-10-20 11:00:00\" suspended=\"0\"/>\n+               username=\"rossini\" creationDate=\"2010-10-20 11:00:00\" suspended=\"0\"/>\n   <SyncopeUser id=\"2\" workflowId=\"0\" status=\"active\" password=\"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\" cipherAlgorithm=\"SHA1\"\n-               username=\"user2\" creationDate=\"2010-10-20 11:00:00\" suspended=\"0\"/>\n+               username=\"verdi\" creationDate=\"2010-10-20 11:00:00\" suspended=\"0\"/>\n   <SyncopeUser id=\"3\" workflowId=\"0\" status=\"active\" password=\"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\" cipherAlgorithm=\"SHA1\"\n-               username=\"user3\" creationDate=\"2010-10-20 11:00:00\" suspended=\"0\"/>\n+               username=\"vivaldi\" creationDate=\"2010-10-20 11:00:00\" suspended=\"0\"/>\n   <SyncopeUser id=\"4\" workflowId=\"0\" status=\"active\" password=\"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\" cipherAlgorithm=\"SHA1\"\n-               username=\"user4\" creationDate=\"2010-10-20 11:00:00\" suspended=\"0\"/>\n+               username=\"bellini\" creationDate=\"2010-10-20 11:00:00\" suspended=\"0\"/>\n   <SyncopeUser id=\"5\" workflowId=\"0\" status=\"active\" password=\"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\" cipherAlgorithm=\"SHA1\"\n-               username=\"user5\" creationDate=\"2010-10-20 11:00:00\" suspended=\"0\"/>\n+               username=\"puccini\" creationDate=\"2010-10-20 11:00:00\" suspended=\"0\"/>\n \n   <SyncopeRole id=\"1\" name=\"root\"/>\n   <SyncopeRole id=\"2\" name=\"child\" parent_id=\"1\"/>\n@@ -155,27 +155,58 @@ under the License.\n            mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n \n   <UAttr id=\"100\" owner_id=\"1\" schema_name=\"fullname\"/>\n-  <UAttrUniqueValue id=\"10\" attribute_id=\"100\" schema_name=\"fullname\" stringValue=\"chicchiricco\"/>\n-  <UAttr id=\"200\" owner_id=\"1\" schema_name=\"loginDate\"/>\n-  <UAttrValue attribute_id=\"200\" id=\"20\" dateValue=\"2009-05-26\"/>\n-  <UAttrValue attribute_id=\"200\" id=\"21\" dateValue=\"2010-05-26 15:40:04\"/>\n-\n-  <UAttr id=\"300\" owner_id=\"2\" schema_name=\"fullname\"/>\n-  <UAttrUniqueValue id=\"11\" attribute_id=\"300\" schema_name=\"fullname\" stringValue=\"fabio.martelli\"/>\n-\n-  <UAttr id=\"400\" owner_id=\"3\" schema_name=\"firstname\"/>\n-  <UAttrValue attribute_id=\"400\" id=\"30\" stringValue=\"John\"/>\n-  <UAttr id=\"500\" owner_id=\"3\" schema_name=\"surname\"/>\n-  <UAttrValue attribute_id=\"500\" id=\"31\" stringValue=\"Doe\"/>\n-  <UAttr id=\"540\" owner_id=\"3\" schema_name=\"fullname\"/>\n-  <UAttrUniqueValue id=\"12\" attribute_id=\"540\" schema_name=\"fullname\" stringValue=\"testUsername\"/>\n-\n-  <UAttr id=\"550\" owner_id=\"4\" schema_name=\"loginDate\"/>\n-  <UAttrValue attribute_id=\"550\" id=\"22\" dateValue=\"2009-06-24\"/>\n-  <UAttr id=\"560\" owner_id=\"4\" schema_name=\"cool\"/>\n-  <UAttrValue attribute_id=\"560\" id=\"23\" booleanValue=\"1\"/>\n-  <UAttr id=\"561\" owner_id=\"4\" schema_name=\"gender\"/>\n-  <UAttrValue attribute_id=\"561\" id=\"24\" stringValue=\"M\"/>\n+  <UAttrUniqueValue id=\"10\" attribute_id=\"100\" schema_name=\"fullname\" stringValue=\"Gioacchino Rossini\"/>\n+  <UAttr id=\"101\" owner_id=\"1\" schema_name=\"firstname\"/>\n+  <UAttrValue id=\"11\" attribute_id=\"101\" stringValue=\"Gioacchino\"/>\n+  <UAttr id=\"102\" owner_id=\"1\" schema_name=\"surname\"/>\n+  <UAttrValue id=\"12\" attribute_id=\"102\" stringValue=\"Rossini\"/>\n+  <UAttr id=\"103\" owner_id=\"1\" schema_name=\"userId\"/>\n+  <UAttrUniqueValue id=\"13\" attribute_id=\"103\" schema_name=\"userId\" stringValue=\"rossini@apache.org\"/>\n+  <UAttr id=\"104\" owner_id=\"1\" schema_name=\"loginDate\"/>\n+  <UAttrValue id=\"14\" attribute_id=\"104\" dateValue=\"2009-05-26\"/>\n+  <UAttrValue id=\"15\" attribute_id=\"104\" dateValue=\"2010-05-26 15:40:04\"/>\n+\n+  <UAttr id=\"105\" owner_id=\"2\" schema_name=\"fullname\"/>\n+  <UAttrUniqueValue id=\"16\" attribute_id=\"105\" schema_name=\"fullname\" stringValue=\"Giuseppe Verdi\"/>\n+  <UAttr id=\"106\" owner_id=\"2\" schema_name=\"firstname\"/>\n+  <UAttrValue id=\"17\" attribute_id=\"106\" stringValue=\"Giuseppe\"/>\n+  <UAttr id=\"107\" owner_id=\"2\" schema_name=\"surname\"/>\n+  <UAttrValue id=\"18\" attribute_id=\"107\" stringValue=\"Verdi\"/>\n+  <UAttr id=\"108\" owner_id=\"2\" schema_name=\"userId\"/>\n+  <UAttrUniqueValue id=\"19\" attribute_id=\"108\" schema_name=\"userId\" stringValue=\"verdi@apache.org\"/>\n+\n+  <UAttr id=\"109\" owner_id=\"3\" schema_name=\"firstname\"/>\n+  <UAttrValue id=\"20\" attribute_id=\"109\" stringValue=\"Antonio\"/>\n+  <UAttr id=\"110\" owner_id=\"3\" schema_name=\"surname\"/>\n+  <UAttrValue id=\"21\" attribute_id=\"110\" stringValue=\"Vivaldi\"/>\n+  <UAttr id=\"111\" owner_id=\"3\" schema_name=\"fullname\"/>\n+  <UAttrUniqueValue id=\"22\" attribute_id=\"111\" schema_name=\"fullname\" stringValue=\"Antonio Vivaldi\"/>\n+  <UAttr id=\"112\" owner_id=\"3\" schema_name=\"userId\"/>\n+  <UAttrUniqueValue id=\"23\" attribute_id=\"112\" schema_name=\"userId\" stringValue=\"vivaldi@apache.org\"/>\n+\n+  <UAttr id=\"113\" owner_id=\"4\" schema_name=\"firstname\"/>\n+  <UAttrValue id=\"24\" attribute_id=\"113\" stringValue=\"Vincenzo\"/>\n+  <UAttr id=\"114\" owner_id=\"4\" schema_name=\"surname\"/>\n+  <UAttrValue id=\"25\" attribute_id=\"114\" stringValue=\"Bellini\"/>\n+  <UAttr id=\"115\" owner_id=\"4\" schema_name=\"fullname\"/>\n+  <UAttrUniqueValue id=\"26\" attribute_id=\"115\" schema_name=\"fullname\" stringValue=\"Vincenzo Bellini\"/>\n+  <UAttr id=\"116\" owner_id=\"4\" schema_name=\"userId\"/>\n+  <UAttrUniqueValue id=\"27\" attribute_id=\"116\" schema_name=\"userId\" stringValue=\"bellini@apache.org\"/>\n+  <UAttr id=\"117\" owner_id=\"4\" schema_name=\"loginDate\"/>\n+  <UAttrValue id=\"28\" attribute_id=\"117\" dateValue=\"2009-06-24\"/>\n+  <UAttr id=\"118\" owner_id=\"4\" schema_name=\"cool\"/>\n+  <UAttrValue id=\"29\" attribute_id=\"118\" booleanValue=\"1\"/>\n+  <UAttr id=\"119\" owner_id=\"4\" schema_name=\"gender\"/>\n+  <UAttrValue id=\"30\" attribute_id=\"119\" stringValue=\"M\"/>\n+  \n+  <UAttr id=\"120\" owner_id=\"5\" schema_name=\"firstname\"/>\n+  <UAttrValue id=\"31\" attribute_id=\"120\" stringValue=\"Giacomo\"/>\n+  <UAttr id=\"121\" owner_id=\"5\" schema_name=\"surname\"/>\n+  <UAttrValue id=\"32\" attribute_id=\"121\" stringValue=\"Puccini\"/>\n+  <UAttr id=\"122\" owner_id=\"5\" schema_name=\"fullname\"/>\n+  <UAttrUniqueValue id=\"33\" attribute_id=\"122\" schema_name=\"fullname\" stringValue=\"Giacomo Puccini\"/>\n+  <UAttr id=\"123\" owner_id=\"5\" schema_name=\"userId\"/>\n+  <UAttrUniqueValue id=\"34\" attribute_id=\"123\" schema_name=\"userId\" stringValue=\"puccini@apache.org\"/>\n     \n   <RAttr id=\"600\" owner_id=\"1\" schema_name=\"icon\"/>\n   <RAttr id=\"700\" owner_id=\"2\" schema_name=\"icon\"/>"}]}