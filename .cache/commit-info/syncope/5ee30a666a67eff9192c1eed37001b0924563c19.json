{"sha":"5ee30a666a67eff9192c1eed37001b0924563c19","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjVlZTMwYTY2NmE2N2VmZjkxOTJjMWVlZDM3MDAxYjA5MjQ1NjNjMTk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-05-16T12:49:16Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-05-16T12:49:16Z"},"message":"[SYNCOPE-857] Feature provided","tree":{"sha":"d24f2a7f694b38575f291c69d8180e06e666640f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d24f2a7f694b38575f291c69d8180e06e666640f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5ee30a666a67eff9192c1eed37001b0924563c19","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5ee30a666a67eff9192c1eed37001b0924563c19","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5ee30a666a67eff9192c1eed37001b0924563c19","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5ee30a666a67eff9192c1eed37001b0924563c19/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"ecc062ca56d9875b2869f35a9917f52295f65ea5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ecc062ca56d9875b2869f35a9917f52295f65ea5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ecc062ca56d9875b2869f35a9917f52295f65ea5"}],"stats":{"total":879,"additions":765,"deletions":114},"files":[{"sha":"e39631684874453e6581865df597077310ad5fb2","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceResultManager.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -81,7 +81,11 @@ private void printMappingItem(final List<MappingItemTO> mappingItemTOs) {\n             System.out.println(\"             internal attribute name: \" + mappingItemTO.getIntAttrName());\n             System.out.println(\"             external attribute name: \" + mappingItemTO.getExtAttrName());\n             System.out.println(\"             mandatory condition: \" + mappingItemTO.getMandatoryCondition());\n-            System.out.println(\"             transformers class: \"\n+            System.out.println(\"             JEXL propagation transformer: \"\n+                    + mappingItemTO.getPropagationJEXLTransformer());\n+            System.out.println(\"             JEXL pull transformer: \"\n+                    + mappingItemTO.getPullJEXLTransformer());\n+            System.out.println(\"             transformers classes: \"\n                     + mappingItemTO.getMappingItemTransformerClassNames());\n             System.out.println(\"             purpose: \" + mappingItemTO.getPurpose());\n             System.out.println(\"             connector object key: \" + mappingItemTO.isConnObjectKey());"},{"sha":"9e8c69e62fc4b81c514304553d8b1027a881f5a7","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PullTaskDirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPullTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPullTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPullTaskDirectoryPanel.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -53,7 +53,7 @@ protected ProvisioningTasksProvider<PullTaskTO> dataProvider() {\n     }\n \n     @Override\n-    protected void addFurtherAcions(final ActionLinksPanel.Builder<PullTaskTO> panel, final IModel<PullTaskTO> model) {\n+    protected void addFurtherActions(final ActionLinksPanel.Builder<PullTaskTO> panel, final IModel<PullTaskTO> model) {\n         panel.add(new ActionLink<PullTaskTO>() {\n \n             private static final long serialVersionUID = -3722207913631435501L;"},{"sha":"504bb0da5f99642f90b906593ff1cb4760f37ce2","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskDirectoryPanel.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -183,9 +183,7 @@ protected final List<IColumn<T, String>> getColumns() {\n             private static final long serialVersionUID = 2054811145491901166L;\n \n             @Override\n-            public ActionLinksPanel<T> getActions(\n-                    final String componentId, final IModel<T> model) {\n-\n+            public ActionLinksPanel<T> getActions(final String componentId, final IModel<T> model) {\n                 final T taskTO = model.getObject();\n \n                 final ActionLinksPanel.Builder<T> panel = ActionLinksPanel.<T>builder().\n@@ -260,7 +258,7 @@ public void onClick(final AjaxRequestTarget target, final T ignore) {\n                             }\n                         }, ActionLink.ActionType.DELETE, StandardEntitlement.TASK_DELETE);\n \n-                addFurtherAcions(panel, model);\n+                addFurtherActions(panel, model);\n \n                 return panel.build(componentId, model.getObject());\n             }\n@@ -286,7 +284,7 @@ public void onClick(final AjaxRequestTarget target, final T ignore) {\n         return columns;\n     }\n \n-    protected void addFurtherAcions(final ActionLinksPanel.Builder<T> panel, final IModel<T> model) {\n+    protected void addFurtherActions(final ActionLinksPanel.Builder<T> panel, final IModel<T> model) {\n     }\n \n     @Override"},{"sha":"5e4667aa10a7980109366d0aa400fabe8ec08bb9","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/AjaxTextFieldPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -101,7 +101,7 @@ public void setChoices(final List<String> choices) {\n         }\n     }\n \n-    public FieldPanel<String> enableJextHelp() {\n+    public FieldPanel<String> enableJexlHelp() {\n         questionMarkJexlHelp.setVisible(true);\n         return this;\n     }"},{"sha":"a4dec3d3166b930ec780d5b91659d5c1b37e0933","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/JEXLTransformerWidget.java","status":"added","additions":95,"deletions":0,"changes":95,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJEXLTransformerWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJEXLTransformerWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJEXLTransformerWidget.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -0,0 +1,95 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.widgets;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.image.Icon;\n+import de.agilecoders.wicket.extensions.markup.html.bootstrap.icon.FontAwesomeIconTypeBuilder;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.wizards.resources.JEXLTransformersTogglePanel;\n+import org.apache.syncope.common.lib.to.MappingItemTO;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.markup.html.link.AbstractLink;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.util.ListModel;\n+\n+public class JEXLTransformerWidget extends AlertWidget<String> {\n+\n+    private static final long serialVersionUID = 7667120094526529934L;\n+\n+    private final MappingItemTO mapItem;\n+\n+    private final JEXLTransformersTogglePanel transformers;\n+\n+    public JEXLTransformerWidget(\n+            final String id,\n+            final MappingItemTO mapItem,\n+            final JEXLTransformersTogglePanel transformers) {\n+\n+        super(id);\n+        setOutputMarkupId(true);\n+\n+        this.mapItem = mapItem;\n+        this.transformers = transformers;\n+        \n+        this.latestAlertsList.setVisible(false);\n+    }\n+\n+    @Override\n+    protected IModel<List<String>> getLatestAlerts() {\n+        return new ListModel<String>() {\n+\n+            private static final long serialVersionUID = -2583290457773357445L;\n+\n+            @Override\n+            public List<String> getObject() {\n+                List<String> result = new ArrayList<>();\n+                if (StringUtils.isNotBlank(mapItem.getPropagationJEXLTransformer())) {\n+                    result.add(mapItem.getPropagationJEXLTransformer());\n+                }\n+                if (StringUtils.isNotBlank(mapItem.getPullJEXLTransformer())) {\n+                    result.add(mapItem.getPullJEXLTransformer());\n+                }\n+                return result;\n+            }\n+        };\n+    }\n+\n+    @Override\n+    protected AbstractLink getEventsLink(final String linkid) {\n+        return new AjaxLink<String>(linkid) {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                transformers.setMappingItem(target, JEXLTransformerWidget.this.mapItem);\n+                transformers.toggle(target, true);\n+            }\n+        };\n+    }\n+\n+    @Override\n+    protected Icon getIcon(final String iconid) {\n+        return new Icon(\n+                iconid, FontAwesomeIconTypeBuilder.on(FontAwesomeIconTypeBuilder.FontAwesomeGraphic.repeat).build());\n+    }\n+}"},{"sha":"6e363dd21bb782c22b51a0738f34e664b021dd6e","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/MappingItemTransformerWidget.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FMappingItemTransformerWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FMappingItemTransformerWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FMappingItemTransformerWidget.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -21,7 +21,7 @@\n import de.agilecoders.wicket.core.markup.html.bootstrap.image.Icon;\n import de.agilecoders.wicket.extensions.markup.html.bootstrap.icon.FontAwesomeIconTypeBuilder;\n import java.util.List;\n-import org.apache.syncope.client.console.tasks.TransformersTogglePanel;\n+import org.apache.syncope.client.console.wizards.resources.MappingItemTransformersTogglePanel;\n import org.apache.syncope.common.lib.to.MappingItemTO;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n@@ -35,12 +35,13 @@ public class MappingItemTransformerWidget extends AlertWidget<String> {\n \n     private final MappingItemTO mapItem;\n \n-    private final TransformersTogglePanel transformers;\n+    private final MappingItemTransformersTogglePanel transformers;\n \n     public MappingItemTransformerWidget(\n             final String id,\n             final MappingItemTO mapItem,\n-            final TransformersTogglePanel transformers) {\n+            final MappingItemTransformersTogglePanel transformers) {\n+\n         super(id);\n         this.mapItem = mapItem;\n         this.transformers = transformers;"},{"sha":"7b4f4cee9a2e48caa49b220627cdf4c4328c0e5f","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupDetails.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupDetails.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -44,7 +44,7 @@ public GroupDetails(\n         final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\"name\", \"name\",\n                 new PropertyModel<String>(groupTO, \"name\"), false);\n         if (templateMode) {\n-            name.enableJextHelp();\n+            name.enableJexlHelp();\n         } else {\n             name.addRequiredLabel();\n         }"},{"sha":"39d9446df3bb717aec8c04a44b38ec783fe20b3e","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -251,7 +251,7 @@ public String getObject(\n                 panel = new AjaxTextFieldPanel(\"panel\", schemaTO.getKey(), new Model<String>(), false);\n \n                 if (jexlHelp) {\n-                    AjaxTextFieldPanel.class.cast(panel).enableJextHelp();\n+                    AjaxTextFieldPanel.class.cast(panel).enableJexlHelp();\n                 }\n \n                 if (required) {"},{"sha":"ac02a6edb88c10c63fc582d29bd311a85dd690b6","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserDetails.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserDetails.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -62,7 +62,7 @@ public UserDetails(\n                 \"username\", \"username\", new PropertyModel<String>(userTO, \"username\"), false);\n \n         if (templateMode) {\n-            username.enableJextHelp();\n+            username.enableJexlHelp();\n         } else {\n             username.addRequiredLabel();\n         }"},{"sha":"ea05da8d2a88410e47fbf10516b9f9fee1377f53","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -73,7 +73,7 @@ protected void populateItem(final ListItem<AttrTO> item) {\n                         = new AjaxTextFieldPanel(\"panel\", attrTO.getSchema(), new Model<String>(), false);\n \n                 if (mode == AjaxWizard.Mode.TEMPLATE) {\n-                    item.add(panel.enableJextHelp().setEnabled(!attrTO.isReadonly()));\n+                    item.add(panel.enableJexlHelp().setEnabled(!attrTO.isReadonly()));\n                 } else {\n                     item.add(new MultiFieldPanel.Builder<>(\n                             new PropertyModel<List<String>>(attrTO, \"values\")).build("},{"sha":"d777af586afd3ca4d7c2e727e987b3caf66c5d46","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/JEXLTransformersTogglePanel.java","status":"added","additions":77,"deletions":0,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FJEXLTransformersTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FJEXLTransformersTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FJEXLTransformersTogglePanel.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wizards.resources;\n+\n+import java.io.Serializable;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.panels.TogglePanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.apache.syncope.common.lib.to.MappingItemTO;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+\n+public class JEXLTransformersTogglePanel extends TogglePanel<Serializable> {\n+\n+    private static final long serialVersionUID = -1284019117452782479L;\n+\n+    private final AjaxTextFieldPanel propagationJEXLTransformer;\n+\n+    private final AjaxTextFieldPanel pullJEXLTransformer;\n+\n+    public JEXLTransformersTogglePanel(final WebMarkupContainer container) {\n+        super(\"outer\", \"jexlTransformersTogglePanel\");\n+\n+        Form<?> form = new Form<>(\"form\");\n+        addInnerObject(form);\n+\n+        propagationJEXLTransformer = new AjaxTextFieldPanel(\n+                \"propagationJEXLTransformer\",\n+                \"Propagation\",\n+                Model.of(\"\"));\n+        form.add(propagationJEXLTransformer.enableJexlHelp());\n+\n+        pullJEXLTransformer = new AjaxTextFieldPanel(\n+                \"pullJEXLTransformer\",\n+                \"Pull\",\n+                Model.of(\"\"));\n+        form.add(pullJEXLTransformer.enableJexlHelp());\n+\n+        form.add(new AjaxSubmitLink(\"submit\", form) {\n+\n+            private static final long serialVersionUID = 4617041491286858973L;\n+\n+            @Override\n+            public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                toggle(target, false);\n+                target.add(container);\n+            }\n+        });\n+    }\n+\n+    public JEXLTransformersTogglePanel setMappingItem(final AjaxRequestTarget target, final MappingItemTO mapItem) {\n+        this.propagationJEXLTransformer.setNewModel(new PropertyModel<String>(mapItem, \"propagationJEXLTransformer\"));\n+        this.pullJEXLTransformer.setNewModel(new PropertyModel<String>(mapItem, \"pullJEXLTransformer\"));\n+        setHeader(target, StringUtils.EMPTY);\n+        return this;\n+    }\n+}"},{"sha":"4889c2ba7e8c1aa8eaea21112692cd361adff3b2","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/MappingItemTransformersTogglePanel.java","status":"renamed","additions":9,"deletions":11,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FMappingItemTransformersTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FMappingItemTransformersTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FMappingItemTransformersTogglePanel.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.tasks;\n+package org.apache.syncope.client.console.wizards.resources;\n \n import java.io.Serializable;\n import java.util.ArrayList;\n@@ -27,7 +27,6 @@\n import org.apache.syncope.client.console.panels.TogglePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.common.lib.to.MappingItemTO;\n-import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -37,17 +36,14 @@\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.util.ListModel;\n \n-public class TransformersTogglePanel extends TogglePanel<Serializable> {\n+public class MappingItemTransformersTogglePanel extends TogglePanel<Serializable> {\n \n     private static final long serialVersionUID = -3195479265440591519L;\n \n-    private Component container;\n-\n     private MappingItemTO mapItem;\n \n-    public TransformersTogglePanel(final WebMarkupContainer container) {\n-        super(\"outer\", \"transformersTogglePanel\");\n-        this.container = container;\n+    public MappingItemTransformersTogglePanel(final WebMarkupContainer container) {\n+        super(\"outer\", \"mappingItemTransformersTogglePanel\");\n \n         final LoadableDetachableModel<List<String>> model = new LoadableDetachableModel<List<String>>() {\n \n@@ -62,7 +58,7 @@ protected List<String> load() {\n             }\n         };\n \n-        final Form<?> form = new Form<>(\"form\");\n+        Form<?> form = new Form<>(\"form\");\n         addInnerObject(form);\n \n         form.add(new AjaxPalettePanel.Builder<String>().setAllowOrder(true).setRenderer(new IChoiceRenderer<String>() {\n@@ -108,13 +104,15 @@ public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 mapItem.getMappingItemTransformerClassNames().clear();\n                 mapItem.getMappingItemTransformerClassNames().addAll(model.getObject());\n \n-                target.add(TransformersTogglePanel.this.container);\n+                target.add(container);\n             }\n \n         });\n     }\n \n-    public TransformersTogglePanel setMappingItem(final AjaxRequestTarget target, final MappingItemTO mapItem) {\n+    public MappingItemTransformersTogglePanel setMappingItem(\n+            final AjaxRequestTarget target, final MappingItemTO mapItem) {\n+\n         this.mapItem = mapItem;\n         setHeader(target, StringUtils.EMPTY);\n         return this;","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/TransformersTogglePanel.java"},{"sha":"e342659dfadc8936d3e2dcfd50ecfca19ba82f45","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ProvisionWizardBuilder.java","status":"modified","additions":9,"deletions":5,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -28,7 +28,6 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.ProvisionAuxClassesPanel;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n-import org.apache.syncope.client.console.tasks.TransformersTogglePanel;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n@@ -239,12 +238,17 @@ protected WizardModel buildModelSteps(final ProvisionTO modelObject, final Wizar\n         wizardModel.add(new ObjectType(modelObject));\n         wizardModel.add(new AuxClasses(modelObject));\n \n-        final Mapping mapping = new Mapping(modelObject);\n+        Mapping mapping = new Mapping(modelObject);\n         mapping.setOutputMarkupId(true);\n+\n+        MappingItemTransformersTogglePanel mapItemTransformers = new MappingItemTransformersTogglePanel(mapping);\n+        addOuterObject(mapItemTransformers);\n+        JEXLTransformersTogglePanel jexlTransformers = new JEXLTransformersTogglePanel(mapping);\n+        addOuterObject(jexlTransformers);\n+        mapping.add(new ResourceMappingPanel(\n+                \"mapping\", resourceTO, modelObject, mapItemTransformers, jexlTransformers));\n+\n         wizardModel.add(mapping);\n-        final TransformersTogglePanel transformers = new TransformersTogglePanel(mapping);\n-        addOuterObject(transformers);\n-        mapping.add(new ResourceMappingPanel(\"mapping\", resourceTO, modelObject, transformers));\n \n         wizardModel.add(new ConnObjectLink(modelObject));\n         return wizardModel;"},{"sha":"5020bd76ad0f697fea1909aaf5c15dbf3cec0d55","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceMappingPanel.java","status":"modified","additions":17,"deletions":12,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -34,14 +34,14 @@\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.rest.ConnectorRestClient;\n-import org.apache.syncope.client.console.tasks.TransformersTogglePanel;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.MappingPurposePanel;\n+import org.apache.syncope.client.console.widgets.JEXLTransformerWidget;\n import org.apache.syncope.client.console.widgets.MappingItemTransformerWidget;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n@@ -108,11 +108,6 @@ public class ResourceMappingPanel extends Panel {\n      */\n     private final ListView<MappingItemTO> mappings;\n \n-    /**\n-     * External resource to be updated.\n-     */\n-    private final ResourceTO resourceTO;\n-\n     /**\n      * External resource provisioning configuration instance to be updated.\n      */\n@@ -135,18 +130,21 @@ private MappingTO getMapping() {\n      * Attribute Mapping Panel.\n      *\n      * @param id panel id\n-     * @param resourceTO external resource to be updated.\n-     * @param provisionTO external resource provisioning configuration instance.\n+     * @param resourceTO external resource to be updated\n+     * @param provisionTO external resource provisioning configuration instance\n+     * @param mapItemTransformers mapping item transformers toggle panel\n+     * @param jexlTransformers JEXL transformers toggle panel\n      */\n     public ResourceMappingPanel(\n             final String id,\n             final ResourceTO resourceTO,\n             final ProvisionTO provisionTO,\n-            final TransformersTogglePanel transformers) {\n+            final MappingItemTransformersTogglePanel mapItemTransformers,\n+            final JEXLTransformersTogglePanel jexlTransformers) {\n+\n         super(id);\n         setOutputMarkupId(true);\n \n-        this.resourceTO = resourceTO;\n         this.provisionTO = provisionTO == null ? new ProvisionTO() : provisionTO;\n         if (provisionTO == null) {\n             getMapping().getItems().clear();\n@@ -292,10 +290,17 @@ protected void populateItem(final ListItem<MappingItemTO> item) {\n                 // -------------------------------\n \n                 //--------------------------------\n-                // Mapping item transformer\n+                // JEXL transformers\n+                // -------------------------------\n+                item.add(new JEXLTransformerWidget(\n+                        \"jexlTransformers\", mapItem, jexlTransformers).setRenderBodyOnly(true));\n+                // -------------------------------\n+\n+                //--------------------------------\n+                // Mapping item transformers\n                 // -------------------------------\n                 item.add(new MappingItemTransformerWidget(\n-                        \"transformers\", mapItem, transformers).setRenderBodyOnly(true));\n+                        \"mappingItemTransformers\", mapItem, mapItemTransformers).setRenderBodyOnly(true));\n                 // -------------------------------\n \n                 //--------------------------------"},{"sha":"ae152d9426fc99a43b0eece9df2f96aa62916a9f","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":16,"deletions":7,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -734,6 +734,10 @@ li.todoitem a {\n   cursor: pointer;\n }\n \n+.popover-content {\n+  color: black;\n+}\n+\n .form-palette {\n   display: inline-block;\n   width: 119%;\n@@ -821,39 +825,44 @@ END - Alert widget onside menu\n /**\n START - Transformers toggle panel\n */\n-div#transformersTogglePanel {\n+div.transformersTogglePanel {\n   background-color: rgba(140, 140, 140, 0.99) !important;\n   width: 1000px !important;\n }\n \n-div#transformersContainer {\n+div.transformersContainer {\n   padding: 15px;\n }\n \n-div#transformersContainer input {\n+div.transformersContainer input {\n   background-color: rgba(200, 200, 200, 0.60) !important;\n }\n \n-div#transformersContainer #footer {\n+div.transformersContainer #footer {\n   clear: both;\n   display: block;\n   text-align: right;\n+  margin-top: 10px;\n }\n \n-div#transformersContainer #body {\n+div.transformersContainer #body {\n   clear: both;\n   display: block;\n }\n \n-div#transformersContainer #body select {\n+div.mappingItemTransformersContainer #body select {\n   border: 1px solid #ccc !important;\n   background: rgba(240, 240, 240, 0.95) !important\n }\n \n-div#transformersContainer #body a {\n+div.mappingItemTransformersContainer #body a {\n   color: #ccc !important;\n   cursor: pointer !important;\n }\n+\n+div#jexlTransformersTogglePanel {\n+  right: 400px;\n+}\n /**\n END - Transformers toggle panel\n */"},{"sha":"09aa967c66ea75b9476069f8e13a59fddd392de1","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/JEXLTransformerWidget.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJEXLTransformerWidget.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJEXLTransformerWidget.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJEXLTransformerWidget.properties?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+alerts.view.all=View All JEXL Tranformers\n+summary=${number} configured expression(s)"},{"sha":"aa754d7bdf058160eed5f4b73003cdfb89c0a92b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/JEXLTransformerWidget_it.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJEXLTransformerWidget_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJEXLTransformerWidget_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJEXLTransformerWidget_it.properties?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+alerts.view.all=Tutti i Transformer JEXL\n+summary=${number} espressione/i configurata/e"},{"sha":"09aa967c66ea75b9476069f8e13a59fddd392de1","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/JEXLTransformerWidget_pt_BR.properties","status":"added","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJEXLTransformerWidget_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJEXLTransformerWidget_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJEXLTransformerWidget_pt_BR.properties?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+alerts.view.all=View All JEXL Tranformers\n+summary=${number} configured expression(s)"},{"sha":"5d858363bc796dec39b7ccd800b0db8709648128","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/JEXLTransformerWidget_ru.properties","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJEXLTransformerWidget_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJEXLTransformerWidget_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJEXLTransformerWidget_ru.properties?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -0,0 +1,21 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+# approvals.view.all=\\u00d0\\u009f\\u00d0\\u00be\\u00d1\\u0081\\u00d0\\u00bc\\u00d0\\u00be\\u00d1\\u0082\\u00d1\\u0080\\u00d0\\u00b5\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00b2\\u00d1\\u0081\\u00d0\\u00b5 \\u00d0\\u00b7\\u00d0\\u00b0\\u00d1\\u008f\\u00d0\\u00b2\\u00d0\\u00ba\\u00d0\\u00b8\n+alerts.view.all=View All JEXL Tranformers\n+# summary=${number} \\u00d0\\u00be\\u00d0\\u00b6\\u00d0\\u00b8\\u00d0\\u00b4\\u00d0\\u00b0\\u00d1\\u008e\\u00d1\\u0082 \\u00d1\\u0081\\u00d0\\u00be\\u00d0\\u00b3\\u00d0\\u00bb\\u00d0\\u00b0\\u00d1\\u0081\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f\n+summary=${number} configured expression(s)"},{"sha":"5c2d15d2f7251c96e03fe2eb1e1a538fe784e6da","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/MappingItemTransformerWidget.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FMappingItemTransformerWidget.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FMappingItemTransformerWidget.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FMappingItemTransformerWidget.properties?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -14,5 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-alerts.view.all=View All Mapping Tranformers\n+alerts.view.all=View All Mapping Item Tranformers\n summary=${number} selected transformer(s)"},{"sha":"8e23aefedf123d8f14644fcd9cb3e44e197f2d66","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/MappingItemTransformerWidget_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FMappingItemTransformerWidget_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FMappingItemTransformerWidget_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FMappingItemTransformerWidget_it.properties?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -14,5 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-alerts.view.all=Tutti i Mapping Transformer\n+alerts.view.all=View All Mapping Item Tranformers\n summary=${number} transformer selezionati"},{"sha":"0fd94d7f91062b3d6e657ae967b2c8376c5c28c7","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/MappingItemTransformerWidget_pt_BR.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FMappingItemTransformerWidget_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FMappingItemTransformerWidget_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FMappingItemTransformerWidget_pt_BR.properties?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -14,5 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-alerts.view.all=View All Mapping Tranformers\n-summary=${number} selected transformer(s)\n+alerts.view.all=View All Mapping Item Tranformers\n+summary=${number} JEXL transforming expression(s)"},{"sha":"16e78bebe48e0113f624d492399058025d1e7fe4","filename":"client/console/src/main/resources/org/apache/syncope/client/console/widgets/MappingItemTransformerWidget_ru.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FMappingItemTransformerWidget_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FMappingItemTransformerWidget_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FMappingItemTransformerWidget_ru.properties?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -16,6 +16,6 @@\n # under the License.\n #\n # approvals.view.all=\\u00d0\\u009f\\u00d0\\u00be\\u00d1\\u0081\\u00d0\\u00bc\\u00d0\\u00be\\u00d1\\u0082\\u00d1\\u0080\\u00d0\\u00b5\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00b2\\u00d1\\u0081\\u00d0\\u00b5 \\u00d0\\u00b7\\u00d0\\u00b0\\u00d1\\u008f\\u00d0\\u00b2\\u00d0\\u00ba\\u00d0\\u00b8\n-alerts.view.all=View All Mapping Tranformers\n+alerts.view.all=View All Mapping Item Tranformers\n # summary=${number} \\u00d0\\u00be\\u00d0\\u00b6\\u00d0\\u00b8\\u00d0\\u00b4\\u00d0\\u00b0\\u00d1\\u008e\\u00d1\\u0082 \\u00d1\\u0081\\u00d0\\u00be\\u00d0\\u00b3\\u00d0\\u00bb\\u00d0\\u00b0\\u00d1\\u0081\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f\n summary=${number} selected transformer(s)"},{"sha":"142f91a528ccde144e931dba71d2f74ce2a6c957","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/JEXLTransformersTogglePanel.html","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FJEXLTransformersTogglePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FJEXLTransformersTogglePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FJEXLTransformersTogglePanel.html?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -0,0 +1,33 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <div id=\"jexlTransformersContainer\" class=\"transformersContainer\">\n+      <form wicket:id=\"form\">\n+        <div id=\"body\">\n+          <span wicket:id=\"propagationJEXLTransformer\"/>\n+          <span wicket:id=\"pullJEXLTransformer\"/>\n+        </div>\n+        <div id=\"footer\">\n+          <input type=\"button\" wicket:id=\"submit\" class=\"btn\" wicket:message=\"value:finish\"></input>\n+        </div>\n+      </form>\n+    </div>\n+  </wicket:extend>\n+</html>"},{"sha":"8983a41a39c5cf2f3123575e750d315fc8e2d99c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/MappingItemTransformersTogglePanel.html","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FMappingItemTransformersTogglePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FMappingItemTransformersTogglePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FMappingItemTransformersTogglePanel.html?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -18,7 +18,7 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:extend>\n-    <div id=\"transformersContainer\">\n+    <div id=\"mappingItemTransformersContainer\" class=\"transformersContainer\">\n       <form wicket:id=\"form\">\n         <div id=\"body\">\n           <span wicket:id=\"classes\"/>","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TransformersTogglePanel.html"},{"sha":"06d3702737b31e684e10ad75482925825905a3b5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/MappingItemTransformersTogglePanel.properties","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FMappingItemTransformersTogglePanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FMappingItemTransformersTogglePanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FMappingItemTransformersTogglePanel.properties?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -16,4 +16,4 @@\n # under the License.\n finish=Finish\n palette.available=Available Mapping Item Transformers\n-palette.selected=Selected Transformers\n+palette.selected=Selected Mapping Item Transformers","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TransformersTogglePanel.properties"},{"sha":"9e80b996f42ff36fd386b0734b1b43da2e4ab1a3","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/MappingItemTransformersTogglePanel_it.properties","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FMappingItemTransformersTogglePanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FMappingItemTransformersTogglePanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FMappingItemTransformersTogglePanel_it.properties?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -16,4 +16,4 @@\n # under the License.\n finish=Fine\n palette.available=Mapping Item Transformer Disponibili\n-palette.selected=Transformer Selezionati\n+palette.selected=Mapping Item Transformer Selezionati","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TransformersTogglePanel_it.properties"},{"sha":"d5a72dc1e4cb63f9366497b0931652b87f92836d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/MappingItemTransformersTogglePanel_pt_BR.properties","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FMappingItemTransformersTogglePanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FMappingItemTransformersTogglePanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FMappingItemTransformersTogglePanel_pt_BR.properties?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -16,4 +16,4 @@\n # under the License.\n finish=Finish\n palette.available=Available Mapping Item Transformers\n-palette.selected=Selected Transformers\n+palette.selected=Mapping Item","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TransformersTogglePanel_pt_BR.properties"},{"sha":"d5a72dc1e4cb63f9366497b0931652b87f92836d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/MappingItemTransformersTogglePanel_ru.properties","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FMappingItemTransformersTogglePanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FMappingItemTransformersTogglePanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FMappingItemTransformersTogglePanel_ru.properties?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -16,4 +16,4 @@\n # under the License.\n finish=Finish\n palette.available=Available Mapping Item Transformers\n-palette.selected=Selected Transformers\n+palette.selected=Mapping Item","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TransformersTogglePanel_ru.properties"},{"sha":"2aa106bce0e7fc75583616a9170eec891475726e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceMappingPanel.html","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.html?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -31,6 +31,7 @@\n               <th><wicket:message key=\"intMappingTypes\"/></th>\n               <th><wicket:message key=\"intAttrNames\"/></th>\n               <th><wicket:message key=\"extAttrNames\"/></th>\n+              <th><i class=\"fa fa-repeat\"></i></th>\n               <th><i class=\"fa fa-magic\"></i></th>\n               <th>\n                 <wicket:message key=\"mandatoryCondition\"/>\n@@ -56,7 +57,12 @@\n               </td>\n               <td>\n                 <div class=\"alert-widget dropdown tasks-menu\">\n-                  <span wicket:id=\"transformers\">[Mapping Item Transformes]</span>\n+                  <span wicket:id=\"jexlTransformers\">[JEXL Transformers]</span>\n+                </div>\n+              </td>\n+              <td>\n+                <div class=\"alert-widget dropdown tasks-menu\">\n+                  <span wicket:id=\"mappingItemTransformers\">[Mapping Item Transformers]</span>\n                 </div>\n               </td>\n               <td>"},{"sha":"696941db618ab21abb63aa26627acaefd5ccea67","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/MappingItemTO.java","status":"modified","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingItemTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingItemTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingItemTO.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -73,6 +73,16 @@ public class MappingItemTO extends AbstractBaseBean implements EntityTO {\n      */\n     private MappingPurpose purpose;\n \n+    /**\n+     * (Optional) JEXL expression to apply to values before propagation.\n+     */\n+    private String propagationJEXLTransformer;\n+\n+    /**\n+     * (Optional) JEXL expression to apply to values before pull.\n+     */\n+    private String pullJEXLTransformer;\n+\n     private final List<String> mappingItemTransformerClassNames = new ArrayList<>();\n \n     public boolean isConnObjectKey() {\n@@ -141,6 +151,22 @@ public void setPurpose(final MappingPurpose purpose) {\n         this.purpose = purpose;\n     }\n \n+    public String getPropagationJEXLTransformer() {\n+        return propagationJEXLTransformer;\n+    }\n+\n+    public void setPropagationJEXLTransformer(final String propagationJEXLTransformer) {\n+        this.propagationJEXLTransformer = propagationJEXLTransformer;\n+    }\n+\n+    public String getPullJEXLTransformer() {\n+        return pullJEXLTransformer;\n+    }\n+\n+    public void setPullJEXLTransformer(final String pullJEXLTransformer) {\n+        this.pullJEXLTransformer = pullJEXLTransformer;\n+    }\n+\n     @XmlElementWrapper(name = \"mappingItemTransformerClassNames\")\n     @XmlElement(name = \"className\")\n     @JsonProperty(\"mappingItemTransformerClassNames\")"},{"sha":"beff5151a2186a710b92dc8099b5e1b962cb3cf6","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/init/ClassPathScanImplementationLookup.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -55,6 +55,7 @@\n import org.apache.syncope.core.provisioning.api.pushpull.ReconciliationFilterBuilder;\n import org.apache.syncope.core.provisioning.api.pushpull.PullCorrelationRule;\n import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n+import org.apache.syncope.core.provisioning.java.data.JEXLMappingItemTransformer;\n \n /**\n  * Cache class names for all implementations of Syncope interfaces found in classpath, for later usage.\n@@ -136,7 +137,9 @@ public void load() {\n                     }\n                 }\n \n-                if (MappingItemTransformer.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n+                if (MappingItemTransformer.class.isAssignableFrom(clazz) && !isAbsractClazz\n+                        && !clazz.equals(JEXLMappingItemTransformer.class)) {\n+\n                     classNames.get(Type.MAPPING_ITEM_TRANSFORMER).add(clazz.getName());\n                 }\n "},{"sha":"6fb320fc3bd74404e8e1989c82f3906f85924e5f","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/LinkingMappingItem.java","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FLinkingMappingItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FLinkingMappingItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FLinkingMappingItem.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -133,6 +133,26 @@ public void setPassword(final boolean password) {\n         // RO instance, nothing to do\n     }\n \n+    @Override\n+    public String getPropagationJEXLTransformer() {\n+        return null;\n+    }\n+\n+    @Override\n+    public void setPropagationJEXLTransformer(final String propagationJEXLTransformer) {\n+        // RO instance, nothing to do\n+    }\n+\n+    @Override\n+    public String getPullJEXLTransformer() {\n+        return null;\n+    }\n+\n+    @Override\n+    public void setPullJEXLTransformer(final String pullJEXLTransformer) {\n+        // RO instance, nothing to do\n+    }\n+\n     @Override\n     public List<String> getMappingItemTransformerClassNames() {\n         return Collections.emptyList();"},{"sha":"af751e2fd247f6f52946b9e448f25eb53f5d8b3f","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/resource/MappingItem.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FMappingItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FMappingItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FMappingItem.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -57,6 +57,14 @@ public interface MappingItem extends Entity {\n \n     void setPassword(boolean password);\n \n+    String getPropagationJEXLTransformer();\n+\n+    void setPropagationJEXLTransformer(String propagationJEXLTransformer);\n+\n+    String getPullJEXLTransformer();\n+\n+    void setPullJEXLTransformer(String pullJEXLTransformer);\n+\n     List<String> getMappingItemTransformerClassNames();\n \n }"},{"sha":"438994f74cd0404b6bf6b1d77a5e4fa844a03ab8","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/resource/JPAMappingItem.java","status":"modified","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMappingItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMappingItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Fresource%2FJPAMappingItem.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -94,6 +94,18 @@ public class JPAMappingItem extends AbstractGeneratedKeyEntity implements Mappin\n     @Enumerated(EnumType.STRING)\n     private MappingPurpose purpose;\n \n+    /**\n+     * (Optional) JEXL expression to apply to values before propagation.\n+     */\n+    @Column(name = \"propJEXL\")\n+    private String propagationJEXLTransformer;\n+\n+    /**\n+     * (Optional) JEXL expression to apply to values before pull.\n+     */\n+    @Column(name = \"pullJEXL\")\n+    private String pullJEXLTransformer;\n+\n     /**\n      * (Optional) classes for MappingItem transformation.\n      */\n@@ -223,6 +235,26 @@ public void setPurpose(final MappingPurpose purpose) {\n         this.purpose = purpose;\n     }\n \n+    @Override\n+    public String getPropagationJEXLTransformer() {\n+        return propagationJEXLTransformer;\n+    }\n+\n+    @Override\n+    public void setPropagationJEXLTransformer(final String propagationJEXLTransformer) {\n+        this.propagationJEXLTransformer = propagationJEXLTransformer;\n+    }\n+\n+    @Override\n+    public String getPullJEXLTransformer() {\n+        return pullJEXLTransformer;\n+    }\n+\n+    @Override\n+    public void setPullJEXLTransformer(final String pullJEXLTransformer) {\n+        this.pullJEXLTransformer = pullJEXLTransformer;\n+    }\n+\n     @Override\n     public List<String> getMappingItemTransformerClassNames() {\n         return mappingItemTransformerClassNames;"},{"sha":"db667668444fbff727f8866409a64dfd4420c53b","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/data/MappingItemTransformer.java","status":"modified","additions":15,"deletions":2,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FMappingItemTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FMappingItemTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fdata%2FMappingItemTransformer.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -19,7 +19,10 @@\n package org.apache.syncope.core.provisioning.api.data;\n \n import java.util.List;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n+import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n \n /**\n  * Transforms values to be propagated to (or pulling from) external resources right before they leave (or enter)\n@@ -32,16 +35,26 @@ public interface MappingItemTransformer {\n     /**\n      * Invoked while preparing attribute values to be sent out to external resource during propagation.\n      *\n+     * @param mappingItem mapping item\n+     * @param anys any objects\n      * @param values original values\n      * @return transformed values\n      */\n-    List<PlainAttrValue> beforePropagation(List<PlainAttrValue> values);\n+    List<PlainAttrValue> beforePropagation(\n+            MappingItem mappingItem,\n+            List<Any<?>> anys,\n+            List<PlainAttrValue> values);\n \n     /**\n      * Invoked while reading attribute values from external resource during pull.\n      *\n+     * @param mappingItem mapping item\n+     * @param anyTO any object\n      * @param values original values\n      * @return transformed values\n      */\n-    List<Object> beforePull(List<Object> values);\n+    List<Object> beforePull(\n+            MappingItem mappingItem,\n+            AnyTO anyTO,\n+            List<Object> values);\n }"},{"sha":"c742c1ab683ac332ba2ab5d5d7799c867332f43d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/MappingManagerImpl.java","status":"modified","additions":35,"deletions":12,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FMappingManagerImpl.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -58,6 +58,7 @@\n import org.apache.syncope.core.spring.security.PasswordGenerator;\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.ParsingValidationException;\n+import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.DerSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n@@ -74,6 +75,7 @@\n import org.apache.syncope.core.provisioning.api.MappingManager;\n import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n import org.apache.syncope.core.provisioning.api.data.MappingItemTransformer;\n+import org.apache.syncope.core.provisioning.java.data.JEXLMappingItemTransformer;\n import org.apache.syncope.core.provisioning.java.utils.ConnObjectUtils;\n import org.identityconnectors.framework.common.FrameworkUtil;\n import org.identityconnectors.framework.common.objects.Attribute;\n@@ -113,6 +115,9 @@ public class MappingManagerImpl implements MappingManager {\n     @Autowired\n     private UserDAO userDAO;\n \n+    @Autowired\n+    private AnyObjectDAO anyObjectDAO;\n+\n     @Autowired\n     private DerAttrHandler derAttrHandler;\n \n@@ -254,12 +259,31 @@ public static Name evaluateNAME(final Any<?> any, final Provision provision, fin\n     public static List<MappingItemTransformer> getMappingItemTransformers(final MappingItem mappingItem) {\n         List<MappingItemTransformer> result = new ArrayList<>();\n \n+        // First consider the JEXL transformation expressions\n+        JEXLMappingItemTransformer jexlTransformer = null;\n+        if (StringUtils.isNotBlank(mappingItem.getPropagationJEXLTransformer())\n+                || StringUtils.isNotBlank(mappingItem.getPullJEXLTransformer())) {\n+\n+            try {\n+                jexlTransformer = (JEXLMappingItemTransformer) ApplicationContextProvider.getBeanFactory().\n+                        createBean(JEXLMappingItemTransformer.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+\n+                jexlTransformer.setPropagationJEXL(mappingItem.getPropagationJEXLTransformer());\n+                jexlTransformer.setPullJEXL(mappingItem.getPullJEXLTransformer());\n+            } catch (Exception e) {\n+                LOG.error(\"Could not instantiate {}, ignoring...\", JEXLMappingItemTransformer.class.getName(), e);\n+            }\n+        }\n+        if (jexlTransformer != null) {\n+            result.add(jexlTransformer);\n+        }\n+\n+        // Then other custom tranaformers\n         for (String className : mappingItem.getMappingItemTransformerClassNames()) {\n             try {\n                 Class<?> transformerClass = ClassUtils.getClass(className);\n \n-                result.add((MappingItemTransformer) ApplicationContextProvider.\n-                        getBeanFactory().\n+                result.add((MappingItemTransformer) ApplicationContextProvider.getBeanFactory().\n                         createBean(transformerClass, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false));\n             } catch (Exception e) {\n                 LOG.error(\"Could not instantiate {}, ignoring...\", className, e);\n@@ -395,9 +419,9 @@ private Pair<String, Attribute> prepareAttr(\n \n             case GROUP:\n                 if (any instanceof User) {\n-                    for (Group group : userDAO.findAllGroups((User) any)) {\n-                        anys.add(group);\n-                    }\n+                    anys.addAll(userDAO.findAllGroups((User) any));\n+                } else if (any instanceof AnyObject) {\n+                    anys.addAll(anyObjectDAO.findAllGroups((AnyObject) any));\n                 } else if (any instanceof Group) {\n                     anys.add(any);\n                 }\n@@ -525,8 +549,8 @@ private String getGroupOwnerValue(final Provision provision, final Any<?> any) {\n      */\n     @Transactional(readOnly = true)\n     @Override\n-    public List<PlainAttrValue> getIntValues(final Provision provision,\n-            final MappingItem mappingItem, final List<Any<?>> anys) {\n+    public List<PlainAttrValue> getIntValues(\n+            final Provision provision, final MappingItem mappingItem, final List<Any<?>> anys) {\n \n         LOG.debug(\"Get attributes for '{}' and mapping type '{}'\", anys, mappingItem.getIntMappingType());\n \n@@ -682,7 +706,7 @@ public List<PlainAttrValue> getIntValues(final Provision provision,\n         List<PlainAttrValue> transformed = values;\n         if (transform) {\n             for (MappingItemTransformer transformer : getMappingItemTransformers(mappingItem)) {\n-                transformed = transformer.beforePropagation(transformed);\n+                transformed = transformer.beforePropagation(mappingItem, anys, transformed);\n             }\n             LOG.debug(\"Transformed values for propagation: {}\", values);\n         } else {\n@@ -713,22 +737,21 @@ public String getConnObjectKeyValue(final Any<?> any, final Provision provision)\n      * Set attribute values, according to the given {@link MappingItem}, to any object from attribute received from\n      * connector.\n      *\n-     * @param <T> any object\n      * @param mappingItem mapping item\n      * @param attr attribute received from connector\n      * @param anyTO any object\n      * @param anyUtils any utils\n      */\n     @Transactional(readOnly = true)\n     @Override\n-    public <T extends AnyTO> void setIntValues(\n-            final MappingItem mappingItem, final Attribute attr, final T anyTO, final AnyUtils anyUtils) {\n+    public void setIntValues(\n+            final MappingItem mappingItem, final Attribute attr, final AnyTO anyTO, final AnyUtils anyUtils) {\n \n         List<Object> values = null;\n         if (attr != null) {\n             values = attr.getValue();\n             for (MappingItemTransformer transformer : getMappingItemTransformers(mappingItem)) {\n-                values = transformer.beforePull(values);\n+                values = transformer.beforePull(mappingItem, anyTO, values);\n             }\n         }\n         values = ListUtils.emptyIfNull(values);"},{"sha":"7ed913d81d61b99876ef5d12d44f336f59933a80","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/DefaultMappingItemTransformer.java","status":"modified","additions":16,"deletions":2,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDefaultMappingItemTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDefaultMappingItemTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FDefaultMappingItemTransformer.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -19,21 +19,35 @@\n package org.apache.syncope.core.provisioning.java.data;\n \n import java.util.List;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n+import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.provisioning.api.data.MappingItemTransformer;\n+import org.springframework.transaction.annotation.Transactional;\n \n /**\n  * Default (empty) implementation of {@link MappingItemTransformer}.\n  */\n public class DefaultMappingItemTransformer implements MappingItemTransformer {\n \n+    @Transactional(readOnly = true)\n     @Override\n-    public List<PlainAttrValue> beforePropagation(final List<PlainAttrValue> values) {\n+    public List<PlainAttrValue> beforePropagation(\n+            final MappingItem mappingItem,\n+            final List<Any<?>> anys,\n+            final List<PlainAttrValue> values) {\n+\n         return values;\n     }\n \n+    @Transactional(readOnly = true)\n     @Override\n-    public List<Object> beforePull(final List<Object> values) {\n+    public List<Object> beforePull(\n+            final MappingItem mappingItem,\n+            final AnyTO anyTO,\n+            final List<Object> values) {\n+\n         return values;\n     }\n "},{"sha":"e4e155a40e77983d41b808c227490d81380df6ad","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/JEXLMappingItemTransformer.java","status":"added","additions":142,"deletions":0,"changes":142,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FJEXLMappingItemTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FJEXLMappingItemTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FJEXLMappingItemTransformer.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -0,0 +1,142 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java.data;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.jexl3.JexlContext;\n+import org.apache.commons.jexl3.MapContext;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.core.persistence.api.entity.Any;\n+import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n+import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n+import org.apache.syncope.core.persistence.api.entity.group.Group;\n+import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n+import org.apache.syncope.core.persistence.api.entity.user.User;\n+import org.apache.syncope.core.provisioning.java.jexl.JexlUtils;\n+\n+/**\n+ * {@link org.apache.syncope.core.provisioning.api.data.MappingItemTransformer} implemeting evaluation of JEXL\n+ * expression defined for a given {@link MappingItem}.\n+ */\n+public class JEXLMappingItemTransformer extends DefaultMappingItemTransformer {\n+\n+    private String propagationJEXL;\n+\n+    private String pullJEXL;\n+\n+    public void setPropagationJEXL(final String propagationJEXL) {\n+        this.propagationJEXL = propagationJEXL;\n+    }\n+\n+    public void setPullJEXL(final String pullJEXL) {\n+        this.pullJEXL = pullJEXL;\n+    }\n+\n+    @Override\n+    public List<PlainAttrValue> beforePropagation(\n+            final MappingItem mappingItem,\n+            final List<Any<?>> anys,\n+            final List<PlainAttrValue> values) {\n+\n+        if (StringUtils.isNotBlank(propagationJEXL) && values != null) {\n+            Any<?> any = null;\n+            if (!anys.isEmpty()) {\n+                switch (mappingItem.getMapping().getProvision().getAnyType().getKind()) {\n+                    case USER:\n+                        any = IterableUtils.find(anys, new Predicate<Any<?>>() {\n+\n+                            @Override\n+                            public boolean evaluate(final Any<?> object) {\n+                                return object instanceof User;\n+                            }\n+                        });\n+                        break;\n+\n+                    case GROUP:\n+                        any = IterableUtils.find(anys, new Predicate<Any<?>>() {\n+\n+                            @Override\n+                            public boolean evaluate(final Any<?> object) {\n+                                return object instanceof Group;\n+                            }\n+                        });\n+                        break;\n+\n+                    case ANY_OBJECT:\n+                        any = IterableUtils.find(anys, new Predicate<Any<?>>() {\n+\n+                            @Override\n+                            public boolean evaluate(final Any<?> object) {\n+                                return object instanceof AnyObject;\n+                            }\n+                        });\n+                        break;\n+\n+                    default:\n+                }\n+            }\n+\n+            for (PlainAttrValue value : values) {\n+                JexlContext jexlContext = new MapContext();\n+                if (any != null) {\n+                    JexlUtils.addFieldsToContext(any, jexlContext);\n+                    JexlUtils.addPlainAttrsToContext(any.getPlainAttrs(), jexlContext);\n+                    JexlUtils.addDerAttrsToContext(any, jexlContext);\n+                }\n+                jexlContext.set(\"value\", value.getValueAsString());\n+\n+                value.setStringValue(JexlUtils.evaluate(propagationJEXL, jexlContext));\n+            }\n+\n+            return values;\n+        }\n+\n+        return super.beforePropagation(mappingItem, anys, values);\n+    }\n+\n+    @Override\n+    public List<Object> beforePull(\n+            final MappingItem mappingItem,\n+            final AnyTO anyTO,\n+            final List<Object> values) {\n+\n+        if (StringUtils.isNotBlank(pullJEXL) && values != null) {\n+\n+            List<Object> newValues = new ArrayList<>(values.size());\n+            for (Object value : values) {\n+                JexlContext jexlContext = new MapContext();\n+                jexlContext.set(\"value\", value);\n+                if (anyTO == null) {\n+                    newValues.add(JexlUtils.evaluate(pullJEXL, jexlContext));\n+                } else {\n+                    newValues.add(JexlUtils.evaluate(pullJEXL, anyTO, jexlContext));\n+                }\n+            }\n+\n+            return newValues;\n+        }\n+\n+        return super.beforePull(mappingItem, anyTO, values);\n+    }\n+\n+}"},{"sha":"af3aa52cf53e76547e66b80939e3f9d7f7278073","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/jexl/JexlUtils.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjexl%2FJexlUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjexl%2FJexlUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjexl%2FJexlUtils.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -193,9 +193,7 @@ public static boolean evaluateMandatoryCondition(final String mandatoryCondition\n         return Boolean.parseBoolean(evaluate(mandatoryCondition, jexlContext));\n     }\n \n-    public static String evaluate(final String expression, final AnyTO anyTO) {\n-        final JexlContext context = new MapContext();\n-\n+    public static String evaluate(final String expression, final AnyTO anyTO, final JexlContext context) {\n         addFieldsToContext(anyTO, context);\n \n         for (AttrTO plainAttr : anyTO.getPlainAttrs()) {"},{"sha":"990127a8b19f2fc2bb858840e2a630b57ecf8f64","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PlainAttrsPullCorrelationRule.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPlainAttrsPullCorrelationRule.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPlainAttrsPullCorrelationRule.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPlainAttrsPullCorrelationRule.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -55,19 +55,18 @@ public SearchCond getSearchCond(final ConnectorObject connObj) {\n         SearchCond searchCond = null;\n \n         for (String schema : plainSchemaNames) {\n-            Attribute attr = mappingItems.get(schema) == null\n+            MappingItem mappingItem = mappingItems.get(schema);\n+            Attribute attr = mappingItem == null\n                     ? null\n-                    : connObj.getAttributeByName(mappingItems.get(schema).getExtAttrName());\n+                    : connObj.getAttributeByName(mappingItem.getExtAttrName());\n             if (attr == null) {\n                 throw new IllegalArgumentException(\n                         \"Connector object does not contains the attributes to perform the search: \" + schema);\n             }\n \n             List<Object> values = attr.getValue();\n-            for (MappingItemTransformer transformer\n-                    : MappingManagerImpl.getMappingItemTransformers(mappingItems.get(schema))) {\n-\n-                values = transformer.beforePull(values);\n+            for (MappingItemTransformer transformer : MappingManagerImpl.getMappingItemTransformers(mappingItem)) {\n+                values = transformer.beforePull(mappingItem, null, values);\n             }\n \n             AttributeCond.Type type;"},{"sha":"599aabf0b0f62481311a0c2dfd7313748b7ec506","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullUtils.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullUtils.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -171,7 +171,10 @@ private List<String> findByConnObjectKeyItem(\n \n         String transfUid = uid;\n         for (MappingItemTransformer transformer : MappingManagerImpl.getMappingItemTransformers(connObjectKeyItem)) {\n-            List<Object> output = transformer.beforePull(Collections.<Object>singletonList(transfUid));\n+            List<Object> output = transformer.beforePull(\n+                    connObjectKeyItem,\n+                    null,\n+                    Collections.<Object>singletonList(transfUid));\n             if (output != null && !output.isEmpty()) {\n                 transfUid = output.get(0).toString();\n             }"},{"sha":"f750cbfeac070cc52cd8290d1a5d08d240d1c3ab","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/utils/TemplateUtils.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FTemplateUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FTemplateUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FTemplateUtils.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -20,6 +20,7 @@\n \n import java.util.List;\n import java.util.Map;\n+import org.apache.commons.jexl3.MapContext;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -56,7 +57,7 @@ private AttrTO evaluateAttr(final AnyTO anyTO, final AttrTO template) {\n \n         if (template.getValues() != null && !template.getValues().isEmpty()) {\n             for (String value : template.getValues()) {\n-                String evaluated = JexlUtils.evaluate(value, anyTO);\n+                String evaluated = JexlUtils.evaluate(value, anyTO, new MapContext());\n                 if (StringUtils.isNotBlank(evaluated)) {\n                     result.getValues().add(evaluated);\n                 }\n@@ -138,14 +139,14 @@ public <T extends AnyTO> void apply(final T anyTO, final AnyTemplate anyTemplate\n                         ((AnyObjectTO) anyTO).getMemberships(), ((AnyObjectTO) template).getMemberships());\n             } else if (template instanceof UserTO) {\n                 if (StringUtils.isNotBlank(((UserTO) template).getUsername())) {\n-                    String evaluated = JexlUtils.evaluate(((UserTO) template).getUsername(), anyTO);\n+                    String evaluated = JexlUtils.evaluate(((UserTO) template).getUsername(), anyTO, new MapContext());\n                     if (StringUtils.isNotBlank(evaluated)) {\n                         ((UserTO) anyTO).setUsername(evaluated);\n                     }\n                 }\n \n                 if (StringUtils.isNotBlank(((UserTO) template).getPassword())) {\n-                    String evaluated = JexlUtils.evaluate(((UserTO) template).getPassword(), anyTO);\n+                    String evaluated = JexlUtils.evaluate(((UserTO) template).getPassword(), anyTO, new MapContext());\n                     if (StringUtils.isNotBlank(evaluated)) {\n                         ((UserTO) anyTO).setPassword(evaluated);\n                     }\n@@ -157,7 +158,7 @@ public <T extends AnyTO> void apply(final T anyTO, final AnyTemplate anyTemplate\n                         ((UserTO) anyTO).getMemberships(), ((UserTO) template).getMemberships());\n             } else if (template instanceof GroupTO) {\n                 if (StringUtils.isNotBlank(((GroupTO) template).getName())) {\n-                    String evaluated = JexlUtils.evaluate(((GroupTO) template).getName(), anyTO);\n+                    String evaluated = JexlUtils.evaluate(((GroupTO) template).getName(), anyTO, new MapContext());\n                     if (StringUtils.isNotBlank(evaluated)) {\n                         ((GroupTO) anyTO).setName(evaluated);\n                     }"},{"sha":"7fc60df480cf0e3b1013584f748b9bd11aeef750","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/PrefixMappingItemTransformer.java","status":"modified","additions":15,"deletions":4,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPrefixMappingItemTransformer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPrefixMappingItemTransformer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPrefixMappingItemTransformer.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -21,17 +21,24 @@\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.common.lib.to.AnyTO;\n+import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n+import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.provisioning.java.data.DefaultMappingItemTransformer;\n \n public class PrefixMappingItemTransformer extends DefaultMappingItemTransformer {\n \n     public static final String PREFIX = \"PREFIX_\";\n \n     @Override\n-    public List<PlainAttrValue> beforePropagation(final List<PlainAttrValue> values) {\n+    public List<PlainAttrValue> beforePropagation(\n+            final MappingItem mappingItem,\n+            final List<Any<?>> anys,\n+            final List<PlainAttrValue> values) {\n+\n         if (values == null || values.isEmpty() || values.get(0).getStringValue() == null) {\n-            return super.beforePropagation(values);\n+            return super.beforePropagation(mappingItem, anys, values);\n         } else {\n             String value = values.get(0).getStringValue();\n             values.get(0).setStringValue(PREFIX + value);\n@@ -41,9 +48,13 @@ public List<PlainAttrValue> beforePropagation(final List<PlainAttrValue> values)\n     }\n \n     @Override\n-    public List<Object> beforePull(final List<Object> values) {\n+    public List<Object> beforePull(\n+            final MappingItem mappingItem,\n+            final AnyTO anyTO,\n+            final List<Object> values) {\n+\n         if (values == null || values.isEmpty() || values.get(0) == null) {\n-            return super.beforePull(values);\n+            return super.beforePull(mappingItem, anyTO, values);\n         } else {\n             List<Object> newValues = new ArrayList<>(values);\n             newValues.set(0, StringUtils.substringAfter(values.get(0).toString(), PREFIX));"},{"sha":"a36d1cc83fe9f1864200097ac9734a6b3a6d7396","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/TopologyITCase.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -97,12 +97,12 @@ public void editProvisioning() {\n         wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:\"\n                 + \"container:content:wizard:form:view:mapping:mappingContainer:mappings:1\", WebMarkupContainer.class);\n \n-        wicketTester.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:\"\n-                + \"container:content:wizard:form:view:mapping:mappingContainer:mappings:1:transformers:icon\",\n+        wicketTester.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n+                + \"content:wizard:form:view:mapping:mappingContainer:mappings:1:mappingItemTransformers:icon\",\n                 Constants.ON_CLICK);\n \n         wicketTester.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:\"\n-                + \"wizard:form:view:mapping:mappingContainer:mappings:0:transformers:alertsLink\");\n+                + \"wizard:form:view:mapping:mappingContainer:mappings:0:mappingItemTransformers:alertsLink\");\n \n         wicketTester.assertComponent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:wizard:outerObjectsRepeater:0:outer:container:content:togglePanelContainer:\"\n@@ -119,8 +119,8 @@ public void createNewResurceAndProvisionRules() {\n         wicketTester.executeAjaxEvent(\n                 \"body:toggle:container:content:togglePanelContainer:container:actions:create\", Constants.ON_CLICK);\n \n-        FormTester formTester\n-                = wicketTester.newFormTester(\"body:toggle:outerObjectsRepeater:0:outer:form:content:form\");\n+        FormTester formTester =\n+                wicketTester.newFormTester(\"body:toggle:outerObjectsRepeater:0:outer:form:content:form\");\n \n         formTester.setValue(\"view:container:key:textField\", res);\n         formTester.submit(\"buttons:next\");"},{"sha":"762049ee6db0e11a8a3b71c014430d35783e37e5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PropagationTaskITCase.java","status":"modified","additions":54,"deletions":1,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPropagationTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPropagationTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPropagationTaskITCase.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -25,11 +25,19 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.lang3.SerializationUtils;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n+import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.BulkAction;\n+import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n import org.apache.syncope.common.lib.to.ExecTO;\n+import org.apache.syncope.common.lib.to.MappingItemTO;\n+import org.apache.syncope.common.lib.to.ProvisionTO;\n+import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.TaskType;\n@@ -103,6 +111,50 @@ public void bulkAction() {\n                 getResult().containsAll(tasks));\n     }\n \n+    @Test\n+    public void propagationJEXLTransformer() {\n+        // 0. Set propagation JEXL MappingItemTransformer\n+        ResourceTO resource = resourceService.read(RESOURCE_NAME_DBSCRIPTED);\n+        ResourceTO originalResource = SerializationUtils.clone(resource);\n+        ProvisionTO provision = resource.getProvision(\"PRINTER\");\n+        assertNotNull(provision);\n+\n+        MappingItemTO mappingItem = IterableUtils.find(\n+                provision.getMapping().getItems(), new Predicate<MappingItemTO>() {\n+\n+            @Override\n+            public boolean evaluate(final MappingItemTO object) {\n+                return \"location\".equals(object.getIntAttrName());\n+            }\n+        });\n+        assertNotNull(mappingItem);\n+        assertTrue(mappingItem.getMappingItemTransformerClassNames().isEmpty());\n+\n+        String suffix = getUUIDString();\n+        mappingItem.setPropagationJEXLTransformer(\"value + '\" + suffix + \"'\");\n+\n+        try {\n+            resourceService.update(resource);\n+\n+            // 1. create printer on external resource\n+            AnyObjectTO anyObjectTO = AnyObjectITCase.getSampleTO(\"propagationJEXLTransformer\");\n+            String originalLocation = anyObjectTO.getPlainAttrMap().get(\"location\").getValues().get(0);\n+            assertFalse(originalLocation.endsWith(suffix));\n+\n+            anyObjectTO = createAnyObject(anyObjectTO).getAny();\n+            assertNotNull(anyObjectTO);\n+\n+            // 2. verify that JEXL MappingItemTransformer was applied during propagation\n+            // (location ends with given suffix on external resource)\n+            ConnObjectTO connObjectTO = resourceService.\n+                    readConnObject(RESOURCE_NAME_DBSCRIPTED, anyObjectTO.getType(), anyObjectTO.getKey());\n+            assertFalse(anyObjectTO.getPlainAttrMap().get(\"location\").getValues().get(0).endsWith(suffix));\n+            assertTrue(connObjectTO.getPlainAttrMap().get(\"LOCATION\").getValues().get(0).endsWith(suffix));\n+        } finally {\n+            resourceService.update(originalResource);\n+        }\n+    }\n+\n     @Test\n     public void issueSYNCOPE741() {\n         for (int i = 0; i < 3; i++) {\n@@ -142,7 +194,8 @@ public void issueSYNCOPE741() {\n         assertFalse(task.getExecutions().isEmpty());\n \n         // check list executions\n-        PagedResult<ExecTO> execs = taskService.listExecutions(new ExecQuery.Builder().key(\"1e697572-b896-484c-ae7f-0c8f63fcbc6c\").\n+        PagedResult<ExecTO> execs = taskService.listExecutions(new ExecQuery.Builder().key(\n+                \"1e697572-b896-484c-ae7f-0c8f63fcbc6c\").\n                 page(1).size(2).build());\n         assertTrue(execs.getTotalCount() >= execs.getResult().size());\n     }"},{"sha":"12bf74f76b29684b695599029c86b45384c421b7","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5ee30a666a67eff9192c1eed37001b0924563c19/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5ee30a666a67eff9192c1eed37001b0924563c19/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=5ee30a666a67eff9192c1eed37001b0924563c19","patch":"@@ -396,21 +396,21 @@ public void reconcileFromScriptedSQL() {\n         ProvisionTO provision = resource.getProvision(\"PRINTER\");\n         assertNotNull(provision);\n \n-        try {\n-            provision.setSyncToken(null);\n+        provision.setSyncToken(null);\n \n-            MappingItemTO mappingItem = IterableUtils.find(\n-                    provision.getMapping().getItems(), new Predicate<MappingItemTO>() {\n+        MappingItemTO mappingItem = IterableUtils.find(\n+                provision.getMapping().getItems(), new Predicate<MappingItemTO>() {\n \n-                @Override\n-                public boolean evaluate(final MappingItemTO object) {\n-                    return \"location\".equals(object.getIntAttrName());\n-                }\n-            });\n-            assertNotNull(mappingItem);\n-            mappingItem.getMappingItemTransformerClassNames().clear();\n-            mappingItem.getMappingItemTransformerClassNames().add(PrefixMappingItemTransformer.class.getName());\n+            @Override\n+            public boolean evaluate(final MappingItemTO object) {\n+                return \"location\".equals(object.getIntAttrName());\n+            }\n+        });\n+        assertNotNull(mappingItem);\n+        mappingItem.getMappingItemTransformerClassNames().clear();\n+        mappingItem.getMappingItemTransformerClassNames().add(PrefixMappingItemTransformer.class.getName());\n \n+        try {\n             resourceService.update(resource);\n \n             // 1. create printer on external resource"}]}