{"sha":"1d6451b5c4178e7d5a368d10af6df82055d95386","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjFkNjQ1MWI1YzQxNzhlN2Q1YTM2OGQxMGFmNmRmODIwNTVkOTUzODY=","commit":{"author":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2015-05-20T10:41:53Z"},"committer":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2015-05-20T10:41:53Z"},"message":"[SYNCOPE-668] JobInstanceLoader is able to return task id and report id starting from its job name. Removing unnecessary failover configuration during spring initialzation","tree":{"sha":"c543a785ff7f1bce1b1c7afe17a09c643b702366","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c543a785ff7f1bce1b1c7afe17a09c643b702366"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1d6451b5c4178e7d5a368d10af6df82055d95386","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1d6451b5c4178e7d5a368d10af6df82055d95386","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1d6451b5c4178e7d5a368d10af6df82055d95386","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1d6451b5c4178e7d5a368d10af6df82055d95386/comments","author":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"committer":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"parents":[{"sha":"4f7746a3165ba2130a05c8102d6ba61ecbb1737b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4f7746a3165ba2130a05c8102d6ba61ecbb1737b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4f7746a3165ba2130a05c8102d6ba61ecbb1737b"}],"stats":{"total":19,"additions":2,"deletions":17},"files":[{"sha":"27f05792be613f625d287cba8392fc285390289b","filename":"core/src/main/java/org/apache/syncope/core/init/JobInstanceLoader.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d6451b5c4178e7d5a368d10af6df82055d95386/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d6451b5c4178e7d5a368d10af6df82055d95386/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java?ref=1d6451b5c4178e7d5a368d10af6df82055d95386","patch":"@@ -92,11 +92,11 @@ private static Long getIdFromJobName(final String name, final String pattern, fi\n     }\n \n     public static Long getTaskIdFromJobName(final String name) {\n-        return getIdFromJobName(\"taskJob[0-9]+\", name, 7);\n+        return getIdFromJobName(name, \"taskJob[0-9]+\", 7);\n     }\n \n     public static Long getReportIdFromJobName(final String name) {\n-        return getIdFromJobName(\"reportJob[0-9]+\", name, 9);\n+        return getIdFromJobName(name, \"reportJob[0-9]+\", 9);\n     }\n \n     public static String getJobName(final Task task) {"},{"sha":"8bad7762918fdc72ab3afd5065fd7182e7dc8287","filename":"core/src/main/java/org/apache/syncope/core/quartz/SpringBeanJobFactory.java","status":"modified","additions":0,"deletions":15,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1d6451b5c4178e7d5a368d10af6df82055d95386/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FSpringBeanJobFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1d6451b5c4178e7d5a368d10af6df82055d95386/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FSpringBeanJobFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fquartz%2FSpringBeanJobFactory.java?ref=1d6451b5c4178e7d5a368d10af6df82055d95386","patch":"@@ -56,21 +56,6 @@ public void setSchedulerContext(final SchedulerContext schedulerContext) {\n     protected Object createJobInstance(final TriggerFiredBundle bundle) throws Exception {\n         final ApplicationContext ctx = ((ConfigurableApplicationContext) schedulerContext.get(\"applicationContext\"));\n \n-        // Try to re-create job bean from underlying task (useful for managing failover scenarios)\n-        if (!ctx.containsBean(bundle.getJobDetail().getKey().getName())) {\n-            Long taskId = JobInstanceLoader.getTaskIdFromJobName(bundle.getJobDetail().getKey().getName());\n-            if (taskId != null) {\n-                JobInstanceLoader jobInstanceLoader = ctx.getBean(JobInstanceLoader.class);\n-                jobInstanceLoader.registerTaskJob(taskId);\n-            }\n-\n-            Long reportId = JobInstanceLoader.getReportIdFromJobName(bundle.getJobDetail().getKey().getName());\n-            if (reportId != null) {\n-                JobInstanceLoader jobInstanceLoader = ctx.getBean(JobInstanceLoader.class);\n-                jobInstanceLoader.registerReportJob(reportId);\n-            }\n-        }\n-\n         final Object job = ctx.getBean(bundle.getJobDetail().getKey().getName());\n         final BeanWrapper wrapper = PropertyAccessorFactory.forBeanPropertyAccess(job);\n         if (isEligibleForPropertyPopulation(wrapper.getWrappedInstance())) {"}]}