{"sha":"83072f7a86c92fcaa1a28642c5b5a792493e1003","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjgzMDcyZjdhODZjOTJmY2FhMWEyODY0MmM1YjVhNzkyNDkzZTEwMDM=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-28T12:04:46Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-11-28T12:04:46Z"},"message":"connector properties comparable\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247218 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"87e765331c976d604cd0532d9258b18c30ee35f6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/87e765331c976d604cd0532d9258b18c30ee35f6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/83072f7a86c92fcaa1a28642c5b5a792493e1003","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/83072f7a86c92fcaa1a28642c5b5a792493e1003","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/83072f7a86c92fcaa1a28642c5b5a792493e1003","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/83072f7a86c92fcaa1a28642c5b5a792493e1003/comments","author":null,"committer":null,"parents":[{"sha":"01f0755b5ceb38baec137045d74ade77fae1eb72","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/01f0755b5ceb38baec137045d74ade77fae1eb72","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/01f0755b5ceb38baec137045d74ade77fae1eb72"}],"stats":{"total":45,"additions":37,"deletions":8},"files":[{"sha":"a7018f7c1ad0fecfd4e059e080a5e828433ef622","filename":"client/src/main/java/org/syncope/types/ConnConfPropSchema.java","status":"modified","additions":25,"deletions":1,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/83072f7a86c92fcaa1a28642c5b5a792493e1003/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfPropSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/83072f7a86c92fcaa1a28642c5b5a792493e1003/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfPropSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfPropSchema.java?ref=83072f7a86c92fcaa1a28642c5b5a792493e1003","patch":"@@ -16,7 +16,10 @@\n \n import org.syncope.client.AbstractBaseBean;\n \n-public class ConnConfPropSchema extends AbstractBaseBean {\n+public class ConnConfPropSchema extends AbstractBaseBean\n+        implements Comparable<ConnConfPropSchema> {\n+\n+    private static final long serialVersionUID = -1976365781005801296L;\n \n     private String name;\n \n@@ -28,6 +31,8 @@ public class ConnConfPropSchema extends AbstractBaseBean {\n \n     private boolean required;\n \n+    private int order;\n+\n     public String getName() {\n         return name;\n     }\n@@ -67,4 +72,23 @@ public String getHelpMessage() {\n     public void setHelpMessage(String helpMessage) {\n         this.helpMessage = helpMessage;\n     }\n+\n+    public int getOrder() {\n+        return order;\n+    }\n+\n+    public void setOrder(int order) {\n+        this.order = order;\n+    }\n+\n+    @Override\n+    public int compareTo(final ConnConfPropSchema connConfPropSchema) {\n+        if (this.getOrder() > connConfPropSchema.getOrder()) {\n+            return 1;\n+        } else if (this.getOrder() < connConfPropSchema.getOrder()) {\n+            return -1;\n+        } else {\n+            return 0;\n+        }\n+    }\n }"},{"sha":"772cd6e4c54bb685b22e02b4544c2d4a3e37534b","filename":"client/src/main/java/org/syncope/types/ConnConfProperty.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/83072f7a86c92fcaa1a28642c5b5a792493e1003/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/83072f7a86c92fcaa1a28642c5b5a792493e1003/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Ftypes%2FConnConfProperty.java?ref=83072f7a86c92fcaa1a28642c5b5a792493e1003","patch":"@@ -16,7 +16,8 @@\n \n import org.syncope.client.AbstractBaseBean;\n \n-public class ConnConfProperty extends AbstractBaseBean {\n+public class ConnConfProperty extends AbstractBaseBean\n+        implements Comparable<ConnConfProperty> {\n \n     private static final long serialVersionUID = -8391413960221862238L;\n \n@@ -49,4 +50,9 @@ public boolean isOverridable() {\n     public void setOverridable(boolean overridable) {\n         this.overridable = overridable;\n     }\n+\n+    @Override\n+    public int compareTo(final ConnConfProperty connConfProperty) {\n+        return this.getSchema().compareTo(connConfProperty.getSchema());\n+    }\n }"},{"sha":"c435578ff7252ac6e43286b4029ad3cce8a913bb","filename":"core/src/main/java/org/syncope/core/rest/controller/ConnInstanceController.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/83072f7a86c92fcaa1a28642c5b5a792493e1003/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/83072f7a86c92fcaa1a28642c5b5a792493e1003/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java?ref=83072f7a86c92fcaa1a28642c5b5a792493e1003","patch":"@@ -76,7 +76,7 @@ public class ConnInstanceController extends AbstractController {\n     private ConnInstanceDataBinder binder;\n \n     @Autowired\n-    private ConnBundleManager connBundleManager;\n+    private ConnBundleManager bundleManager;\n \n     @PreAuthorize(\"hasRole('CONNECTOR_CREATE')\")\n     @RequestMapping(method = RequestMethod.POST,\n@@ -253,7 +253,7 @@ public List<ConnBundleTO> getBundles(\n         }\n \n         ConnectorInfoManager manager =\n-                connBundleManager.getConnectorManager();\n+                bundleManager.getConnectorManager();\n \n         List<ConnectorInfo> bundles = manager.getConnectorInfos();\n \n@@ -290,8 +290,7 @@ public List<ConnBundleTO> getBundles(\n                 connectorBundleTO.setConnectorName(key.getConnectorName());\n                 connectorBundleTO.setVersion(key.getBundleVersion());\n \n-                properties =\n-                        connBundleManager.getConfigurationProperties(bundle);\n+                properties = bundleManager.getConfigurationProperties(bundle);\n \n                 ConnConfPropSchema connConfPropSchema;\n                 ConfigurationProperty configurationProperty;"},{"sha":"893106a235a34f40025c5261702c0b129650b831","filename":"core/src/main/java/org/syncope/core/util/ConnBundleManager.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/83072f7a86c92fcaa1a28642c5b5a792493e1003/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FConnBundleManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/83072f7a86c92fcaa1a28642c5b5a792493e1003/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FConnBundleManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FConnBundleManager.java?ref=83072f7a86c92fcaa1a28642c5b5a792493e1003","patch":"@@ -132,14 +132,14 @@ public ConfigurationProperties getConfigurationProperties(\n         }\n \n         // create default configuration\n-        APIConfiguration apiConfig = info.createDefaultAPIConfiguration();\n+        final APIConfiguration apiConfig = info.createDefaultAPIConfiguration();\n \n         if (apiConfig == null) {\n             throw new NotFoundException(\"Default API configuration\");\n         }\n \n         // retrieve the ConfigurationProperties.\n-        ConfigurationProperties properties =\n+        final ConfigurationProperties properties =\n                 apiConfig.getConfigurationProperties();\n \n         if (properties == null) {"}]}