{"sha":"cae9834cccaf1f40372ae40cc60404b041e025ba","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmNhZTk4MzRjY2NhZjFmNDAzNzJhZTQwY2M2MDQwNGIwNDFlMDI1YmE=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2012-05-30T12:27:43Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2012-05-30T12:27:43Z"},"message":"SYNCOPE-83 Changed the behavior in the Recipients tab for the NotificationModalPage\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1344226 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"863982e6b9de5f38e077983728400307d78fb570","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/863982e6b9de5f38e077983728400307d78fb570"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/cae9834cccaf1f40372ae40cc60404b041e025ba","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cae9834cccaf1f40372ae40cc60404b041e025ba","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cae9834cccaf1f40372ae40cc60404b041e025ba","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cae9834cccaf1f40372ae40cc60404b041e025ba/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"7ccf7e0716ff8e053a173ac913140ee3c2231917","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7ccf7e0716ff8e053a173ac913140ee3c2231917","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7ccf7e0716ff8e053a173ac913140ee3c2231917"}],"stats":{"total":207,"additions":178,"deletions":29},"files":[{"sha":"a794687f436164100ecd41a41ac312943d1f9062","filename":"console/src/main/java/org/apache/syncope/console/pages/NotificationModalPage.java","status":"modified","additions":54,"deletions":4,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cae9834cccaf1f40372ae40cc60404b041e025ba/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cae9834cccaf1f40372ae40cc60404b041e025ba/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java?ref=cae9834cccaf1f40372ae40cc60404b041e025ba","patch":"@@ -31,6 +31,7 @@\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.Model;\n@@ -136,13 +137,62 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 new ListModel<String>(restClient.getEvents()));\n         form.add(events);\n \n-        final UserSearchPanel recipients = new UserSearchPanel(\"recipients\", notificationTO.getRecipients());\n-        form.add(recipients);\n+        final WebMarkupContainer recipientsContainer = new WebMarkupContainer(\"recipientsContainer\");\n+        recipientsContainer.setOutputMarkupId(true);\n+\n+        form.add(recipientsContainer);\n \n         final AjaxCheckBoxPanel selfAsRecipient = new AjaxCheckBoxPanel(\"selfAsRecipient\",\n                 getString(\"selfAsRecipient\"), new PropertyModel(notificationTO, \"selfAsRecipient\"));\n         form.add(selfAsRecipient);\n \n+        if (createFlag) {\n+            selfAsRecipient.getField().setDefaultModelObject(Boolean.TRUE);\n+        }\n+\n+        final AjaxCheckBoxPanel checkRecipients =\n+                new AjaxCheckBoxPanel(\"checkRecipients\", \"checkRecipients\",\n+                new Model(notificationTO.getRecipients() == null ? false : true));\n+        recipientsContainer.add(checkRecipients);\n+\n+        final UserSearchPanel recipients =\n+                new UserSearchPanel(\"recipients\",\n+                notificationTO.getRecipients() == null ? null : notificationTO.getRecipients());\n+        recipientsContainer.add(recipients);\n+        recipients.setEnabled(checkRecipients.getModelObject());\n+\n+        selfAsRecipient.getField().add(new AjaxFormComponentUpdatingBehavior(onchange) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                if (!Boolean.valueOf(selfAsRecipient.getField().getValue())) {\n+                    checkRecipients.getField().setDefaultModelObject(Boolean.TRUE);\n+                    target.add(checkRecipients);\n+                    recipients.setEnabled(checkRecipients.getModelObject());\n+                    target.add(recipients);\n+                    target.add(recipientsContainer);\n+                }\n+            }\n+        });\n+\n+        checkRecipients.getField().add(new AjaxFormComponentUpdatingBehavior(onchange) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                if (!checkRecipients.getModelObject()) {\n+                    selfAsRecipient.getField().setDefaultModelObject(Boolean.TRUE);\n+                    target.add(selfAsRecipient);\n+                }\n+                recipients.setEnabled(checkRecipients.getModelObject());\n+                target.add(recipients);\n+                target.add(recipientsContainer);\n+            }\n+        });\n+\n         AjaxButton submit = new IndicatingAjaxButton(\"apply\", new Model<String>(getString(\"submit\"))) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n@@ -151,8 +201,8 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n \n                 notificationTO.setAbout(about.buildSearchCond());\n-                notificationTO.setRecipients(recipients.buildSearchCond());\n-\n+                notificationTO.setRecipients(checkRecipients.getModelObject() ? recipients.buildSearchCond() : null);\n+                \n                 try {\n                     if (createFlag) {\n                         restClient.createNotification(notificationTO);"},{"sha":"cf4d19c95fe60302abebb87cee711b111e16cf49","filename":"console/src/main/resources/org/apache/syncope/console/pages/NotificationModalPage.html","status":"modified","additions":15,"deletions":6,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cae9834cccaf1f40372ae40cc60404b041e025ba/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cae9834cccaf1f40372ae40cc60404b041e025ba/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.html?ref=cae9834cccaf1f40372ae40cc60404b041e025ba","patch":"@@ -97,16 +97,25 @@\n         </div>\n \n         <div id=\"recipients\">\n-          <span wicket:id=\"recipients\"/>\n-\n           <div class=\"tablerow\">\n-            <div class=\"tablecolumn_label medium_fixedsize\">\n-              <label for=\"selfAsRecipient\"><wicket:message key=\"selfAsRecipient\"/></label>\n-            </div>\n-            <div class=\"tablecolumn_field medium_dynamicsize\">\n+            <div class=\"tablecolumn_field\">\n               <span wicket:id=\"selfAsRecipient\">[selfAsRecipient]</span>\n             </div>\n+            <div class=\"tablecolumn_label\">\n+              <label for=\"selfAsRecipient\"><wicket:message key=\"selfAsRecipient\"/></label>\n+            </div>\n           </div>\n+          <span wicket:id=\"recipientsContainer\">\n+            <div class=\"tablerow\">\n+              <div class=\"tablecolumn_field\">\n+                <span wicket:id=\"checkRecipients\">[checkRecipients]</span>\n+              </div>\n+              <div class=\"tablecolumn_label\">\n+                <label for=\"checkRecipients\"><wicket:message key=\"checkRecipients\"/></label>\n+              </div>\n+            </div>\n+            <span wicket:id=\"recipients\"/>\n+          </span>\n         </div>\n       </div>\n "},{"sha":"91b04cc252f3fef2b931752be1cde3f4e678d322","filename":"console/src/main/resources/org/apache/syncope/console/pages/NotificationModalPage.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cae9834cccaf1f40372ae40cc60404b041e025ba/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cae9834cccaf1f40372ae40cc60404b041e025ba/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.properties?ref=cae9834cccaf1f40372ae40cc60404b041e025ba","patch":"@@ -27,3 +27,4 @@ recipients=Recipients\n selfAsRecipient=Include users matching About\n recipientAttrType=Recipients e-mail attribute type\n recipientAttrName=Recipients e-mail attribute schema\n+checkRecipients=Search recipients"},{"sha":"215fe9642b00c853c616762195a11a013ffa4230","filename":"console/src/main/resources/org/apache/syncope/console/pages/NotificationModalPage_it.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cae9834cccaf1f40372ae40cc60404b041e025ba/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cae9834cccaf1f40372ae40cc60404b041e025ba/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage_it.properties?ref=cae9834cccaf1f40372ae40cc60404b041e025ba","patch":"@@ -24,6 +24,7 @@ notification=Notifica\n about=Soggetti\n events=Eventi\n recipients=Destinatari\n-selfAsRecipient=Including i soggetti\n+selfAsRecipient=Includi i soggetti\n recipientAttrType=Tipo attributo e-mail destinatari\n recipientAttrName=Shcema attributo e-mail destinatari\n+checkRecipients=Cerca i destinatari\n\\ No newline at end of file"},{"sha":"dd78cb5e62f5ced69f09977a67c5e4a16bb76357","filename":"console/src/test/java/org/apache/syncope/console/ConfigurationTestITCase.java","status":"modified","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cae9834cccaf1f40372ae40cc60404b041e025ba/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cae9834cccaf1f40372ae40cc60404b041e025ba/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConfigurationTestITCase.java?ref=cae9834cccaf1f40372ae40cc60404b041e025ba","patch":"@@ -125,4 +125,53 @@ public void setLogLevel() {\n \n         selenium.waitForCondition(\"selenium.isTextPresent(\\\"Operation executed successfully\\\");\", \"30000\");\n     }\n+\n+    @Test\n+    public void createNotification() {\n+        selenium.click(\"css=img[alt=\\\"Configuration\\\"]\");\n+\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+\n+        selenium.click(\"//a[contains(text(),'Create new notification')]\");\n+\n+        selenium.waitForCondition(\"selenium.isElementPresent(\"\n+                + \"\\\"//div[2]/form/div[2]/div/div/div/div/label\\\");\", \"30000\");\n+\n+        selenium.type(\"name=sender:textField\", \"test@syncope.it\");\n+\n+        selenium.type(\"name=sender:textField\", \"test@syncope.it\");\n+\n+        selenium.select(\"//div[2]/form/div[2]/div/div/div[3]/div[2]/span/select\", \"label=UserSchema\");\n+\n+        selenium.waitForCondition(\"selenium.isElementPresent(\"\n+                + \"\\\"//div[2]/form/div[2]/div/div/div[4]/div[2]/span/select/option[2]\\\");\", \"30000\");\n+\n+        selenium.select(\"//div[2]/form/div[2]/div/div/div[4]/div[2]/span/select\", \"label=fullname\");\n+\n+        selenium.select(\"//div[2]/form/div[2]/div/div/div[5]/div[2]/span/select\", \"label=optin\");\n+\n+        selenium.select(\"//div[2]/form/div[2]/div/div/div[6]/div[2]/span/select\", \"label=ALL\");\n+\n+        selenium.click(\"//div[2]/form/div[2]/ul/li[2]/a/span\");\n+\n+        selenium.select(\"//td[3]/select\", \"label=MEMBERSHIP\");\n+\n+        selenium.waitForCondition(\"selenium.isElementPresent(\"\n+                + \"\\\"//td[4]/select[option='8 otherchild']\\\");\", \"30000\");\n+\n+        selenium.select(\"//td[4]/select\", \"label=8 otherchild\");\n+\n+        selenium.click(\"//div[2]/form/div[2]/ul/li[3]/a/span\");\n+\n+        selenium.click(\"//tr[2]/td/select/option\");\n+\n+        selenium.click(\"//div[2]/form/div[2]/div[3]/span/span/table/tbody/tr[2]/td[2]/button\");\n+\n+        selenium.click(\"//div[2]/form/div[2]/ul/li[4]/a/span\");\n+\n+        selenium.waitForCondition(\"selenium.isElementPresent(\"\n+                + \"\\\"//div[2]/form/div[2]/div[4]/div/div[2]/label\\\");\", \"30000\");\n+        \n+        selenium.click(\"//div[2]/form/div[3]/input\");\n+    }\n }"},{"sha":"7bf3e07ae31793df1f6e45198b53e67080f6cf22","filename":"core/src/main/java/org/apache/syncope/core/notification/NotificationManager.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cae9834cccaf1f40372ae40cc60404b041e025ba/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cae9834cccaf1f40372ae40cc60404b041e025ba/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java?ref=cae9834cccaf1f40372ae40cc60404b041e025ba","patch":"@@ -133,8 +133,11 @@ private NotificationTask getNotificationTask(final Notification notification, fi\n         connObjectUtil.retrieveVirAttrValues(user);\n \n         final List<SyncopeUser> recipients = new ArrayList<SyncopeUser>();\n-        recipients.addAll(\n-                searchDAO.search(EntitlementUtil.getRoleIds(entitlementDAO.findAll()), notification.getRecipients()));\n+\n+        if (notification.getRecipients() != null) {\n+            recipients.addAll(searchDAO.search(EntitlementUtil.getRoleIds(\n+                    entitlementDAO.findAll()), notification.getRecipients()));\n+        }\n \n         if (notification.isSelfAsRecipient()) {\n             recipients.add(user);"},{"sha":"ee9faeaf63c6b8400b48a5f2f527a4e2fdb4769c","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/Notification.java","status":"modified","additions":2,"deletions":11,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cae9834cccaf1f40372ae40cc60404b041e025ba/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cae9834cccaf1f40372ae40cc60404b041e025ba/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FNotification.java?ref=cae9834cccaf1f40372ae40cc60404b041e025ba","patch":"@@ -58,7 +58,6 @@ public class Notification extends AbstractBaseBean {\n     @Lob\n     private String xmlAbout;\n \n-    @NotNull\n     @Lob\n     private String xmlRecipients;\n \n@@ -115,19 +114,11 @@ public void setAbout(NodeCond about) {\n     }\n \n     public NodeCond getRecipients() {\n-        NodeCond result = XMLSerializer.<NodeCond>deserialize(xmlRecipients);\n-        if (result == null) {\n-            result = new NodeCond();\n-        }\n-        return result;\n+        return xmlRecipients == null ? null : XMLSerializer.<NodeCond>deserialize(xmlRecipients);\n     }\n \n     public void setRecipients(NodeCond recipients) {\n-        if (recipients == null) {\n-            recipients = new NodeCond();\n-        }\n-\n-        xmlRecipients = XMLSerializer.serialize(recipients);\n+        xmlRecipients = recipients == null ? null : XMLSerializer.serialize(recipients);\n     }\n \n     public String getRecipientAttrName() {"},{"sha":"1fe0bba4dd9f59e3ea612d7134eb52a9353ebcdf","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/NotificationValidator.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cae9834cccaf1f40372ae40cc60404b041e025ba/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cae9834cccaf1f40372ae40cc60404b041e025ba/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FNotificationValidator.java?ref=cae9834cccaf1f40372ae40cc60404b041e025ba","patch":"@@ -49,11 +49,14 @@ public boolean isValid(final Notification value, final ConstraintValidatorContex\n             context.buildConstraintViolationWithTemplate(\"Invalid about search condition\").addNode(\n                     EntityViolationType.InvalidNotification.toString()).addNode(\"about\").addConstraintViolation();\n         }\n-        if (!value.getRecipients().checkValidity()) {\n-            isValid = false;\n+        if (value.getRecipients() != null) {\n+            if (!value.getRecipients().checkValidity() && !value.isSelfAsRecipient()) {\n+                isValid = false;\n \n-            context.buildConstraintViolationWithTemplate(\"Invalid recipients search condition\").addNode(\n-                    EntityViolationType.InvalidNotification.toString()).addNode(\"recipients\").addConstraintViolation();\n+                context.buildConstraintViolationWithTemplate(\"Invalid recipients search condition\").addNode(\n+                        EntityViolationType.InvalidNotification.toString()).\n+                        addNode(\"recipients\").addConstraintViolation();\n+            }\n         }\n \n         return isValid;"},{"sha":"532a553c509989d0f62e9ee36b4927b1452e1f73","filename":"core/src/test/java/org/apache/syncope/core/rest/NotificationTestITCase.java","status":"modified","additions":43,"deletions":1,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cae9834cccaf1f40372ae40cc60404b041e025ba/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cae9834cccaf1f40372ae40cc60404b041e025ba/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FNotificationTestITCase.java?ref=cae9834cccaf1f40372ae40cc60404b041e025ba","patch":"@@ -86,7 +86,7 @@ public void create() {\n \n         NotificationTO actual =\n                 restTemplate.postForObject(BASE_URL + \"notification/create.json\", notificationTO, NotificationTO.class);\n-        \n+\n         assertNotNull(actual);\n         assertNotNull(actual.getId());\n         notificationTO.setId(actual.getId());\n@@ -135,4 +135,46 @@ public void delete() {\n         }\n         assertNotNull(exception);\n     }\n+\n+    @Test\n+    public void issueSYNCOPE83() {\n+        NotificationTO notificationTO = new NotificationTO();\n+        notificationTO.setTraceLevel(TraceLevel.SUMMARY);\n+        notificationTO.addEvent(\"create\");\n+\n+        AttributeCond fullnameLeafCond1 = new AttributeCond(AttributeCond.Type.LIKE);\n+        fullnameLeafCond1.setSchema(\"fullname\");\n+        fullnameLeafCond1.setExpression(\"%o%\");\n+        AttributeCond fullnameLeafCond2 = new AttributeCond(AttributeCond.Type.LIKE);\n+        fullnameLeafCond2.setSchema(\"fullname\");\n+        fullnameLeafCond2.setExpression(\"%i%\");\n+        NodeCond about = NodeCond.getAndCond(NodeCond.getLeafCond(fullnameLeafCond1), NodeCond.getLeafCond(\n+                fullnameLeafCond2));\n+\n+        notificationTO.setAbout(about);\n+\n+        notificationTO.setRecipientAttrName(\"email\");\n+        notificationTO.setRecipientAttrType(IntMappingType.UserSchema);\n+\n+        notificationTO.setSelfAsRecipient(true);\n+\n+        notificationTO.setSender(\"syncope@syncope.apache.org\");\n+        notificationTO.setSubject(\"Test notification without\");\n+        notificationTO.setTemplate(\"test\");\n+\n+        NotificationTO actual = null;\n+        SyncopeClientException exception = null;\n+        try {\n+            actual = restTemplate.postForObject(\n+                    BASE_URL + \"notification/create.json\", notificationTO, NotificationTO.class);\n+\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            exception = e.getException(SyncopeClientExceptionType.InvalidNotification);\n+        }\n+        assertNull(exception);\n+        assertNotNull(actual);\n+        assertNotNull(actual.getId());\n+        notificationTO.setId(actual.getId());\n+        assertEquals(actual, notificationTO);\n+    }\n }"}]}