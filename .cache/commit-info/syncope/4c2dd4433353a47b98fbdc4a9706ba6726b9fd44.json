{"sha":"4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjRjMmRkNDQzMzM1M2E0N2I5OGZiZGM0YTk3MDZiYTY3MjZiOWZkNDQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-04-07T06:52:49Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-04-11T12:50:41Z"},"message":"[SYNCOPE-1020] Implementation completed: now several sub-processes can be managed besides the main workflow definition","tree":{"sha":"724d27c980474dad13a6dcd9a53c85dc13ccd1af","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/724d27c980474dad13a6dcd9a53c85dc13ccd1af"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b578e4b02f26d7c81e608fc1f9e5baa09bf41a60","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b578e4b02f26d7c81e608fc1f9e5baa09bf41a60","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b578e4b02f26d7c81e608fc1f9e5baa09bf41a60"}],"stats":{"total":2189,"additions":1560,"deletions":629},"files":[{"sha":"a71c04b476591adef356e4896147a1939917fe3e","filename":"archetype/src/main/resources/archetype-resources/console/pom.xml","status":"modified","additions":65,"deletions":5,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fpom.xml?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -203,14 +203,74 @@ ORYX.Editor.createByUrl = function(modelUrl){\"/>\n           <version>${syncope.version}</version>\n         </dependency> \n \n-\t<dependency>\n-\t  <groupId>org.apache.syncope.ext.saml2sp</groupId>\n-\t  <artifactId>syncope-ext-saml2sp-client-console</artifactId>\n-\t  <version>${syncope.version}</version>\n-\t</dependency>\n+        <dependency>\n+          <groupId>org.apache.syncope.ext.saml2sp</groupId>\n+          <artifactId>syncope-ext-saml2sp-client-console</artifactId>\n+          <version>${syncope.version}</version>\n+        </dependency>\n       </dependencies>\n \n       <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-antrun-plugin</artifactId>\n+            <inherited>true</inherited>\n+            <executions>\n+              <execution>\n+                <id>setupActivitiModeler</id>\n+                <phase>process-resources</phase>\n+                <configuration>\n+                  <target>\n+                    <unzip src=\"${settings.localRepository}/org/activiti/activiti-webapp-explorer2/${activiti.version}/activiti-webapp-explorer2-${activiti.version}.war\" \n+                           dest=\"${project.build.directory}/activiti-webapp-explorer2\" />\n+                \n+                    <mkdir dir=\"${activiti-modeler.directory}\" />\n+                    <copy file=\"${project.build.directory}/activiti-webapp-explorer2/modeler.html\" \n+                          todir=\"${activiti-modeler.directory}\" />\n+                    <replace file=\"${activiti-modeler.directory}/modeler.html\"\n+                             token=\"&lt;/head&gt;\"\n+                             value=\"&lt;script type=&quot;text/javascript&quot;&gt;window.onunload = refreshParent; function refreshParent() { window.opener.location.reload(); }&lt;/script&gt;&lt;/head&gt;\"/>\n+                    <copy file=\"${project.build.directory}/activiti-webapp-explorer2/WEB-INF/classes/stencilset.json\" \n+                          todir=\"${activiti-modeler.directory}\" />\n+\n+                    <mkdir dir=\"${activiti-modeler.directory}/editor-app\" />\n+                    <copy todir=\"${activiti-modeler.directory}/editor-app\">\n+                      <fileset dir=\"${project.build.directory}/activiti-webapp-explorer2/editor-app\" />                  \n+                    </copy>\n+                    <replaceregexp file=\"${activiti-modeler.directory}/editor-app/editor/oryx.debug.js\"\n+                                   match=\"ORYX.CONFIG.ROOT_PATH =.*&quot;editor/&quot;; //TODO: Remove last slash!!\"\n+                                   replace=\"BASE_PATH = window.location.toString().substr(0, window.location.toString().indexOf(&#39;/wicket&#39;));\n+ORYX.CONFIG.ROOT_PATH = BASE_PATH + &quot;/activiti-modeler/editor-app/editor/&quot;;\"\n+                                   byline=\"true\"/>\n+                    <replace file=\"${activiti-modeler.directory}/editor-app/editor/oryx.debug.js\"\n+                             token=\"new Ajax.Request(ACTIVITI.CONFIG.contextRoot + &#39;/editor/stencilset?version=&#39; + Date.now(), {\"\n+                             value=\"new Ajax.Request(window.location.toString().substr(0, window.location.toString().indexOf(&#39;/activiti-modeler&#39;)) + &quot;/activiti-modeler/stencilset.json&quot;, {\"/>\n+                    <replace file=\"${activiti-modeler.directory}/editor-app/editor/oryx.debug.js\"\n+                             token=\"ORYX.Editor.createByUrl(modelUrl);\"\n+                             value=\"modelUrl = BASE_PATH + &quot;/workflowDefGET?modelId=&quot; + modelId; ORYX.Editor.createByUrl(modelUrl);\" />\n+                    <replace file=\"${activiti-modeler.directory}/editor-app/editor/oryx.debug.js\"\n+                             token=\"ORYX.Editor.createByUrl = function(modelUrl){\"\n+                             value=\"modelUrl = BASE_PATH + &quot;/workflowDefGET?modelId=&quot; + modelId; ORYX.Editor.createByUrl = function(modelUrl){\" />               \n+                    <replace file=\"${activiti-modeler.directory}/editor-app/configuration/toolbar-default-actions.js\"\n+                             token=\"window.location.href = &quot;./&quot;;\"\n+                             value=\"window.close();\"/>\n+                                               \n+                    <copy file=\"${basedir}/src/main/resources/url-config.js\" \n+                          todir=\"${activiti-modeler.directory}/editor-app/configuration\"\n+                          overwrite=\"true\" />\n+                    <copy file=\"${basedir}/src/main/resources/save-model.html\" \n+                          todir=\"${activiti-modeler.directory}/editor-app/popups\"\n+                          overwrite=\"true\" />\n+                  </target>\n+                </configuration>\n+                <goals>\n+                  <goal>run</goal>\n+                </goals>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n         <resources>\n           <resource>\n             <directory>src/main/resources</directory>"},{"sha":"45025d4e9be79269d42e302cedba8ddfb93e3d52","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/self/WorkflowSyncopeOperations.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowSyncopeOperations.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -21,20 +21,21 @@\n import javax.ws.rs.core.Response;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.client.cli.SyncopeServices;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.service.WorkflowService;\n \n public class WorkflowSyncopeOperations {\n \n+    private static final String DEFAULT = \"userWorkflow\";\n+\n     private final WorkflowService workflowService = SyncopeServices.get(WorkflowService.class);\n \n-    public Response exportDiagram(final String anyTypeKindString) {\n+    public Response exportDiagram(final String anyType) {\n         WebClient.client(workflowService).accept(RESTHeaders.MEDIATYPE_IMAGE_PNG);\n-        return workflowService.exportDiagram(AnyTypeKind.valueOf(anyTypeKindString));\n+        return workflowService.exportDiagram(anyType, DEFAULT);\n     }\n \n-    public Response exportDefinition(final String anyTypeKindString) {\n-        return workflowService.exportDefinition(AnyTypeKind.valueOf(anyTypeKindString));\n+    public Response exportDefinition(final String anyType) {\n+        return workflowService.get(anyType, DEFAULT);\n     }\n }"},{"sha":"affe16e880a50131157599e7fd485d5b06ae8b1e","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -29,6 +29,14 @@ public final class Constants {\n \n     public static final String SYNCOPE = \"syncope\";\n \n+    public static final String ACTIVITI_MODELER_CONTEXT = \"activiti-modeler\";\n+\n+    public static final String FLOWABLE_MODELER_CONTEXT = \"flowable-modeler\";\n+\n+    public static final String MODELER_CONTEXT = \"modelerContext\";\n+\n+    public static final String MODEL_ID_PARAM = \"modelId\";\n+\n     public static final String ON_CLICK = \"click\";\n \n     public static final String ON_CHANGE = \"change\";\n@@ -139,6 +147,8 @@ public final class Constants {\n \n     public static final String PREF_REPORT_PAGINATOR_ROWS = \"report.paginator.rows\";\n \n+    public static final String PREF_WORKFLOW_PAGINATOR_ROWS = \"workflow.paginator.rows\";\n+\n     public static final String PAGEPARAM_CREATE = \"CREATE\";\n \n     public static final String PAGEPARAM_CURRENT_PAGE = \"_current_page\";"},{"sha":"c02a4995df69c50c26fe4d3503ebfeae74ae0b2d","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -173,7 +173,7 @@ public void onClick() {\n                 SyncopeConsoleSession.get().getPlatformInfo().getUserWorkflowAdapter().contains(\"Activiti\"));\n         confULContainer.add(liContainer);\n         link = BookmarkablePageLinkBuilder.build(\"workflow\", Workflow.class);\n-        MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.ENABLE, StandardEntitlement.WORKFLOW_DEF_READ);\n+        MetaDataRoleAuthorizationStrategy.authorize(link, WebPage.ENABLE, StandardEntitlement.WORKFLOW_DEF_GET);\n         liContainer.add(link);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"audit\"));"},{"sha":"22f2fc5c7e49b6d20118f052ebb6662ae7c507c3","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/LogViewer.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogViewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogViewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogViewer.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n-import static org.apache.wicket.Component.ENABLE;\n-\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.commons.collections4.list.SetUniqueList;"},{"sha":"3b3ed844a8b75f469b002722679a76b198ba3290","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/ModelerPopupPage.java","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FModelerPopupPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FModelerPopupPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FModelerPopupPage.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+import org.apache.wicket.util.string.StringValue;\n+\n+public class ModelerPopupPage extends WebPage {\n+\n+    private static final long serialVersionUID = -7031206743629422898L;\n+\n+    public ModelerPopupPage(final PageParameters parameters) {\n+        super(parameters);\n+\n+        StringValue modelId = parameters.get(Constants.MODEL_ID_PARAM);\n+\n+        WebMarkupContainer refresh = new WebMarkupContainer(\"refresh\");\n+        // properly parameterize ?modelId=5 with SYNCOPE-1020\n+        refresh.add(new AttributeModifier(\n+                \"content\", \"0; url=../../\" + parameters.get(Constants.MODELER_CONTEXT)\n+                + \"/modeler.html?modelId=\" + modelId.toString()));\n+        add(refresh);\n+    }\n+\n+}"},{"sha":"01f4655966511de452bd38996d6eef4f2c64d8ae","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Workflow.java","status":"modified","additions":20,"deletions":44,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWorkflow.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWorkflow.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWorkflow.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -18,71 +18,47 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n+import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.panels.WorkflowTogglePanel;\n-import org.apache.syncope.client.console.rest.WorkflowRestClient;\n+import org.apache.syncope.client.console.panels.WorkflowDirectoryPanel;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.image.Image;\n-import org.apache.wicket.model.Model;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n-import org.apache.wicket.request.resource.DynamicImageResource;\n-import org.apache.wicket.request.resource.IResource;\n \n public class Workflow extends BasePage {\n \n     private static final long serialVersionUID = -8781434495150074529L;\n \n-    private final WorkflowRestClient wfRestClient = new WorkflowRestClient();\n-\n     public Workflow(final PageParameters parameters) {\n         super(parameters);\n \n-        final boolean isActivitiEnabledForUsers =\n-                SyncopeConsoleSession.get().getPlatformInfo().getUserWorkflowAdapter().contains(\"Activiti\");\n-\n-        WebMarkupContainer noActivitiEnabledForUsers = new WebMarkupContainer(\"noActivitiEnabledForUsers\");\n-        noActivitiEnabledForUsers.setOutputMarkupPlaceholderTag(true);\n-        body.add(noActivitiEnabledForUsers);\n+        body.add(BookmarkablePageLinkBuilder.build(\"dashboard\", \"dashboardBr\", Dashboard.class));\n \n-        WebMarkupContainer workflowDef = new WebMarkupContainer(\"workflowDefContainer\");\n-        workflowDef.setOutputMarkupPlaceholderTag(true);\n+        WebMarkupContainer content = new WebMarkupContainer(\"content\");\n+        content.setOutputMarkupId(true);\n+        body.add(content);\n \n-        Image workflowDefDiagram = new Image(\"workflowDefDiagram\", new Model<IResource>()) {\n+        WebMarkupContainer disabled = new WebMarkupContainer(\"disabled\");\n+        disabled.setOutputMarkupPlaceholderTag(true);\n+        content.add(disabled);\n \n-            private static final long serialVersionUID = -8457850449086490660L;\n+        WizardMgtPanel<WorkflowDefinitionTO> workflowsPanel = new WorkflowDirectoryPanel.Builder(getPageReference()) {\n \n-            @Override\n-            protected IResource getImageResource() {\n-                return new DynamicImageResource() {\n+            private static final long serialVersionUID = -5960765294082359003L;\n \n-                    private static final long serialVersionUID = 923201517955737928L;\n+        }.disableCheckBoxes().build(\"workflowsPanel\");\n+        workflowsPanel.setOutputMarkupPlaceholderTag(true);\n+        MetaDataRoleAuthorizationStrategy.authorize(workflowsPanel, ENABLE, StandardEntitlement.WORKFLOW_DEF_LIST);\n \n-                    @Override\n-                    protected byte[] getImageData(final IResource.Attributes attributes) {\n-                        return isActivitiEnabledForUsers\n-                                ? wfRestClient.getDiagram()\n-                                : new byte[0];\n-                    }\n-                };\n-            }\n-        };\n-        workflowDefDiagram.setOutputMarkupId(true);\n-        workflowDef.add(workflowDefDiagram);\n+        content.add(workflowsPanel);\n \n-        WorkflowTogglePanel togglePanel =\n-                new WorkflowTogglePanel(\"togglePanel\", getPageReference(), workflowDefDiagram);\n-        togglePanel.setOutputMarkupId(true);\n-        workflowDef.add(togglePanel);\n-\n-        if (isActivitiEnabledForUsers) {\n-            noActivitiEnabledForUsers.setVisible(false);\n+        if (SyncopeConsoleSession.get().getPlatformInfo().getUserWorkflowAdapter().contains(\"Activiti\")) {\n+            disabled.setVisible(false);\n         } else {\n-            workflowDef.setVisible(false);\n+            workflowsPanel.setVisible(false);\n         }\n-\n-        MetaDataRoleAuthorizationStrategy.authorize(workflowDef, ENABLE, StandardEntitlement.WORKFLOW_DEF_READ);\n-        body.add(workflowDef);\n     }\n }"},{"sha":"ab4bda3ce31320dd1fc4cfb231eabec34cf36f96","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/NewWorkflowProcess.java","status":"added","additions":87,"deletions":0,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNewWorkflowProcess.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNewWorkflowProcess.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNewWorkflowProcess.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.io.Serializable;\n+import javax.ws.rs.core.MediaType;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.pdfbox.util.Charsets;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.rest.WorkflowRestClient;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.TextField;\n+import org.apache.wicket.model.Model;\n+\n+public class NewWorkflowProcess extends TogglePanel<Serializable> {\n+\n+    private static final long serialVersionUID = -4886361549305302161L;\n+\n+    private final WorkflowRestClient restClient = new WorkflowRestClient();\n+\n+    private final Form<?> form;\n+\n+    public NewWorkflowProcess(final String id, final WebMarkupContainer container, final PageReference pageRef) {\n+        super(id, pageRef);\n+\n+        form = new Form<>(\"form\");\n+        addInnerObject(form);\n+\n+        final TextField<String> key = new TextField<>(\"key\", new Model<String>());\n+        key.setRequired(true);\n+        form.add(key);\n+\n+        form.add(new AjaxSubmitLink(\"submit\", form) {\n+\n+            private static final long serialVersionUID = 4947613489823025052L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                try {\n+                    restClient.setDefinition(MediaType.APPLICATION_XML_TYPE, key.getModelObject(),\n+                            IOUtils.toString(\n+                                    getClass().getResourceAsStream(\"empty.bpmn20.xml\"),\n+                                    Charsets.UTF_8.name()).replaceAll(\"%KEY%\", key.getModelObject()));\n+\n+                    key.getModel().setObject(null);\n+                    SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                    toggle(target, false);\n+                    target.add(container);\n+                } catch (Exception e) {\n+                    LOG.error(\"While creating new workflow process\", e);\n+                    SyncopeConsoleSession.get().error(\n+                            StringUtils.isBlank(e.getMessage())\n+                            ? e.getClass().getName() : e.getMessage());\n+                }\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+            }\n+        });\n+    }\n+}"},{"sha":"4bf7499aba06f241ca97ea1980e89e2e44757b7b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/WorkflowDirectoryPanel.java","status":"added","additions":346,"deletions":0,"changes":346,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWorkflowDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWorkflowDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWorkflowDirectoryPanel.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -0,0 +1,346 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import javax.ws.rs.core.MediaType;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.SyncopeConsoleApplication;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.syncope.client.console.pages.ModelerPopupPage;\n+import org.apache.syncope.client.console.panels.WorkflowDirectoryPanel.WorkflowDefinitionDataProvider;\n+import org.apache.syncope.client.console.rest.WorkflowRestClient;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ImageModalPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.XMLEditorPanel;\n+import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.Page;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+import org.apache.wicket.util.io.IOUtils;\n+\n+public class WorkflowDirectoryPanel extends DirectoryPanel<\n+        WorkflowDefinitionTO, WorkflowDefinitionTO, WorkflowDefinitionDataProvider, WorkflowRestClient> {\n+\n+    private static final long serialVersionUID = 2705668831139984998L;\n+\n+    private final BaseModal<String> utility;\n+\n+    private String modelerCtx;\n+\n+    protected WorkflowDirectoryPanel(final String id, final Builder builder) {\n+        super(id, builder);\n+\n+        this.addNewItemPanelBuilder(new AjaxWizardBuilder<WorkflowDefinitionTO>(new WorkflowDefinitionTO(), pageRef) {\n+\n+            private static final long serialVersionUID = 1633859795677053912L;\n+\n+            @Override\n+            protected WizardModel buildModelSteps(\n+                    final WorkflowDefinitionTO modelObject, final WizardModel wizardModel) {\n+\n+                return wizardModel;\n+            }\n+        }, false);\n+        final NewWorkflowProcess newWorkflowProcess = new NewWorkflowProcess(\"newWorkflowProcess\", container, pageRef);\n+        addInnerObject(newWorkflowProcess);\n+        AjaxLink<Void> newWorkflowProcessLink = new AjaxLink<Void>(\"add\") {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                newWorkflowProcess.toggle(target, true);\n+            }\n+        };\n+        ((WebMarkupContainer) get(\"container:content\")).addOrReplace(newWorkflowProcessLink);\n+\n+        setShowResultPage(true);\n+\n+        modal.size(Modal.Size.Large);\n+\n+        utility = new BaseModal<>(\"outer\");\n+        addOuterObject(utility);\n+        utility.size(Modal.Size.Large);\n+        AjaxSubmitLink xmlEditorSubmit = utility.addSubmitButton();\n+        MetaDataRoleAuthorizationStrategy.authorize(xmlEditorSubmit, RENDER, StandardEntitlement.WORKFLOW_DEF_SET);\n+        utility.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+\n+            private static final long serialVersionUID = 8804221891699487139L;\n+\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                utility.show(false);\n+                utility.close(target);\n+            }\n+        });\n+        initResultTable();\n+\n+        // Check if Activiti or Flowable Modeler directory is found\n+        modelerCtx = null;\n+        try {\n+            if (SyncopeConsoleApplication.get().getActivitiModelerDirectory() != null) {\n+                File baseDir = new File(SyncopeConsoleApplication.get().getActivitiModelerDirectory());\n+                if (baseDir.exists() && baseDir.canRead() && baseDir.isDirectory()) {\n+                    modelerCtx = Constants.ACTIVITI_MODELER_CONTEXT;\n+                }\n+            }\n+        } catch (Exception e) {\n+            LOG.error(\"Could not check for Modeler directory\", e);\n+        }\n+    }\n+\n+    @Override\n+    protected WorkflowDefinitionDataProvider dataProvider() {\n+        return new WorkflowDefinitionDataProvider(rows);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return Constants.PREF_WORKFLOW_PAGINATOR_ROWS;\n+    }\n+\n+    @Override\n+    protected List<IColumn<WorkflowDefinitionTO, String>> getColumns() {\n+        List<IColumn<WorkflowDefinitionTO, String>> columns = new ArrayList<>();\n+\n+        columns.add(new KeyPropertyColumn<WorkflowDefinitionTO>(new ResourceModel(\"key\"), \"key\", \"key\"));\n+        columns.add(new PropertyColumn<WorkflowDefinitionTO, String>(new ResourceModel(\"name\"), \"name\", \"name\"));\n+        columns.add(new BooleanPropertyColumn<WorkflowDefinitionTO>(new ResourceModel(\"main\"), null, \"main\"));\n+\n+        columns.add(new ActionColumn<WorkflowDefinitionTO, String>(new ResourceModel(\"actions\")) {\n+\n+            private static final long serialVersionUID = 906457126287899096L;\n+\n+            @Override\n+            public ActionLinksPanel<?> getActions(final String componentId, final IModel<WorkflowDefinitionTO> model) {\n+                final ActionLinksPanel.Builder<WorkflowDefinitionTO> panel = ActionLinksPanel.builder();\n+\n+                panel.add(new ActionLink<WorkflowDefinitionTO>() {\n+\n+                    private static final long serialVersionUID = 3109256773218160485L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final WorkflowDefinitionTO ignore) {\n+                        modal.header(Model.of(model.getObject().getKey()));\n+                        modal.setContent(new ImageModalPanel<>(\n+                                modal, restClient.getDiagram(model.getObject().getKey()), pageRef));\n+                        modal.show(target);\n+                        target.add(modal);\n+                    }\n+                }, ActionLink.ActionType.VIEW, StandardEntitlement.WORKFLOW_DEF_GET);\n+\n+                panel.add(new ActionLink<WorkflowDefinitionTO>() {\n+\n+                    private static final long serialVersionUID = -184018732772021627L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final WorkflowDefinitionTO ignore) {\n+                        final IModel<String> wfDefinition = new Model<>();\n+                        try {\n+                            wfDefinition.setObject(IOUtils.toString(restClient.getDefinition(\n+                                    MediaType.APPLICATION_XML_TYPE, model.getObject().getKey())));\n+                        } catch (IOException e) {\n+                            LOG.error(\"Could not get workflow definition\", e);\n+                        }\n+\n+                        utility.header(Model.of(model.getObject().getKey()));\n+                        utility.setContent(new XMLEditorPanel(utility, wfDefinition, false, pageRef) {\n+\n+                            private static final long serialVersionUID = -7688359318035249200L;\n+\n+                            @Override\n+                            public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                                if (StringUtils.isNotBlank(wfDefinition.getObject())) {\n+                                    try {\n+                                        restClient.setDefinition(MediaType.APPLICATION_XML_TYPE,\n+                                                model.getObject().getKey(), wfDefinition.getObject());\n+                                        SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+\n+                                        utility.show(false);\n+                                        utility.close(target);\n+                                    } catch (SyncopeClientException e) {\n+                                        SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n+                                                ? e.getClass().getName() : e.getMessage());\n+                                    }\n+                                    ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                                }\n+                            }\n+                        });\n+                        utility.show(target);\n+                        target.add(utility);\n+                    }\n+                }, ActionLink.ActionType.EDIT, StandardEntitlement.WORKFLOW_DEF_SET);\n+\n+                panel.add(new ActionLink<WorkflowDefinitionTO>() {\n+\n+                    private static final long serialVersionUID = -184018732772021627L;\n+\n+                    @Override\n+                    public Class<? extends Page> getPageClass() {\n+                        return ModelerPopupPage.class;\n+                    }\n+\n+                    @Override\n+                    public PageParameters getPageParameters() {\n+                        PageParameters parameters = new PageParameters();\n+                        if (modelerCtx != null) {\n+                            parameters.add(Constants.MODELER_CONTEXT, modelerCtx);\n+                        }\n+                        parameters.add(Constants.MODEL_ID_PARAM, model.getObject().getModelId());\n+\n+                        return parameters;\n+                    }\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final WorkflowDefinitionTO ignore) {\n+                        // do nothing\n+                    }\n+                }, ActionLink.ActionType.WORKFLOW_MODELER, StandardEntitlement.WORKFLOW_DEF_SET, modelerCtx != null);\n+\n+                panel.add(new ActionLink<WorkflowDefinitionTO>() {\n+\n+                    private static final long serialVersionUID = -7978723352517770644L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final WorkflowDefinitionTO ignore) {\n+                        try {\n+                            restClient.deleteDefinition(model.getObject().getKey());\n+                            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n+                            target.add(container);\n+                        } catch (SyncopeClientException e) {\n+                            LOG.error(\"While deleting workflow definition {}\", model.getObject().getName(), e);\n+                            SyncopeConsoleSession.get().error(\n+                                    StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.getMessage());\n+                        }\n+                        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n+                    }\n+                }, ActionLink.ActionType.DELETE, StandardEntitlement.WORKFLOW_DEF_DELETE, !model.getObject().isMain());\n+\n+                return panel.build(componentId);\n+            }\n+\n+            @Override\n+            public ActionLinksPanel<WorkflowDefinitionTO> getHeader(final String componentId) {\n+                final ActionLinksPanel.Builder<WorkflowDefinitionTO> panel = ActionLinksPanel.builder();\n+\n+                return panel.add(new ActionLink<WorkflowDefinitionTO>() {\n+\n+                    private static final long serialVersionUID = -184018732772021627L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final WorkflowDefinitionTO ignore) {\n+                        if (target != null) {\n+                            target.add(container);\n+                        }\n+                    }\n+                }, ActionLink.ActionType.RELOAD, StandardEntitlement.WORKFLOW_DEF_LIST).build(componentId);\n+            }\n+        });\n+\n+        return columns;\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n+        return Collections.emptyList();\n+    }\n+\n+    public abstract static class Builder\n+            extends DirectoryPanel.Builder<WorkflowDefinitionTO, WorkflowDefinitionTO, WorkflowRestClient> {\n+\n+        private static final long serialVersionUID = 5088962796986706805L;\n+\n+        public Builder(final PageReference pageRef) {\n+            super(new WorkflowRestClient(), pageRef);\n+        }\n+\n+        @Override\n+        protected WizardMgtPanel<WorkflowDefinitionTO> newInstance(final String id, final boolean wizardInModal) {\n+            return new WorkflowDirectoryPanel(id, this);\n+        }\n+    }\n+\n+    protected class WorkflowDefinitionDataProvider extends DirectoryDataProvider<WorkflowDefinitionTO> {\n+\n+        private static final long serialVersionUID = 1764153405387687592L;\n+\n+        private final SortableDataProviderComparator<WorkflowDefinitionTO> comparator;\n+\n+        private final WorkflowRestClient restClient = new WorkflowRestClient();\n+\n+        public WorkflowDefinitionDataProvider(final int paginatorRows) {\n+            super(paginatorRows);\n+            this.comparator = new SortableDataProviderComparator<>(this);\n+            setSort(\"main\", SortOrder.DESCENDING);\n+        }\n+\n+        @Override\n+        public Iterator<WorkflowDefinitionTO> iterator(final long first, final long count) {\n+            List<WorkflowDefinitionTO> result = restClient.getDefinitions();\n+            Collections.sort(result, comparator);\n+            return result.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return restClient.getDefinitions().size();\n+        }\n+\n+        @Override\n+        public IModel<WorkflowDefinitionTO> model(final WorkflowDefinitionTO object) {\n+            return new CompoundPropertyModel<>(object);\n+        }\n+    }\n+}"},{"sha":"be1553e7d79f631c70d790395cb28f941014680b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/WorkflowTogglePanel.java","status":"removed","additions":0,"deletions":145,"changes":145,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b578e4b02f26d7c81e608fc1f9e5baa09bf41a60/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWorkflowTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b578e4b02f26d7c81e608fc1f9e5baa09bf41a60/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWorkflowTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWorkflowTogglePanel.java?ref=b578e4b02f26d7c81e608fc1f9e5baa09bf41a60","patch":"@@ -1,145 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n-import java.io.File;\n-import java.io.IOException;\n-import javax.ws.rs.core.MediaType;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleApplication;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.ActivitiModelerPopupPage;\n-import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.rest.WorkflowRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.client.console.wicket.markup.html.form.XMLEditorPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.link.VeilPopupSettings;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.types.StandardEntitlement;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.image.Image;\n-import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.ResourceModel;\n-import org.apache.wicket.util.io.IOUtils;\n-\n-public class WorkflowTogglePanel extends TogglePanel<String> {\n-\n-    private static final long serialVersionUID = -2025535531121434056L;\n-\n-    private final WebMarkupContainer container;\n-\n-    protected final BaseModal<String> modal;\n-\n-    public WorkflowTogglePanel(final String id, final PageReference pageRef, final Image workflowDefDiagram) {\n-        super(id, pageRef);\n-        modal = new BaseModal<>(\"outer\");\n-        addOuterObject(modal);\n-        modal.size(Modal.Size.Large);\n-\n-        container = new WebMarkupContainer(\"container\");\n-        container.setOutputMarkupPlaceholderTag(true);\n-        addInnerObject(container);\n-\n-        BookmarkablePageLink<Void> activitiModeler = new BookmarkablePageLink<>(\"activitiModeler\",\n-                ActivitiModelerPopupPage.class);\n-        activitiModeler.setPopupSettings(new VeilPopupSettings().setHeight(600).setWidth(800));\n-        MetaDataRoleAuthorizationStrategy.authorize(activitiModeler, ENABLE, StandardEntitlement.WORKFLOW_DEF_READ);\n-        container.add(activitiModeler);\n-        // Check if Activiti Modeler directory is found\n-        boolean activitiModelerEnabled = false;\n-        try {\n-            File baseDir = new File(SyncopeConsoleApplication.get().getActivitiModelerDirectory());\n-            activitiModelerEnabled = baseDir.exists() && baseDir.canRead() && baseDir.isDirectory();\n-        } catch (Exception e) {\n-            LOG.error(\"Could not check for Activiti Modeler directory\", e);\n-        }\n-        activitiModeler.setEnabled(activitiModelerEnabled);\n-\n-        AjaxSubmitLink xmlEditorSubmit = modal.addSubmitButton();\n-        MetaDataRoleAuthorizationStrategy.authorize(xmlEditorSubmit, RENDER, StandardEntitlement.WORKFLOW_DEF_UPDATE);\n-        modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n-\n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                modal.show(false);\n-                modal.close(target);\n-                target.add(workflowDefDiagram);\n-            }\n-        });\n-\n-        AjaxLink<Void> xmlEditor = new AjaxLink<Void>(\"xmlEditor\") {\n-\n-            private static final long serialVersionUID = -1964967067512351526L;\n-\n-            private final WorkflowRestClient restClient = new WorkflowRestClient();\n-\n-            @Override\n-            public void onClick(final AjaxRequestTarget target) {\n-                final IModel<String> wfDefinition = new Model<>();\n-                try {\n-                    wfDefinition.setObject(IOUtils.toString(restClient.getDefinition(MediaType.APPLICATION_XML_TYPE)));\n-                } catch (IOException e) {\n-                    LOG.error(\"Could not get workflow definition\", e);\n-                }\n-\n-                target.add(modal.setContent(new XMLEditorPanel(modal, wfDefinition, false, pageRef) {\n-\n-                    private static final long serialVersionUID = 5488080606102212554L;\n-\n-                    @Override\n-                    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                        if (StringUtils.isNotBlank(wfDefinition.getObject())) {\n-                            try {\n-                                restClient.updateDefinition(MediaType.APPLICATION_XML_TYPE, wfDefinition.getObject());\n-                                SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-\n-                                modal.show(false);\n-                                modal.close(target);\n-                            } catch (SyncopeClientException e) {\n-                                SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().\n-                                        getName() : e.\n-                                                getMessage());\n-                            }\n-                            ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-                        }\n-                    }\n-                }));\n-\n-                modal.header(new ResourceModel(\"xmlEditorTitle\"));\n-                modal.show(true);\n-            }\n-        };\n-        MetaDataRoleAuthorizationStrategy.authorize(xmlEditor, RENDER, StandardEntitlement.WORKFLOW_DEF_READ);\n-        container.add(xmlEditor);\n-    }\n-\n-}"},{"sha":"53bc669a3aa1ac542e7c21342ce93a4b5bf4b996","filename":"client/console/src/main/java/org/apache/syncope/client/console/resources/AbstractWorkflowResource.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FAbstractWorkflowResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FAbstractWorkflowResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FAbstractWorkflowResource.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.resources;\n+\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.rest.WorkflowRestClient;\n+import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n+import org.apache.wicket.request.resource.AbstractResource;\n+import org.apache.wicket.util.string.StringValue;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+abstract class AbstractWorkflowResource extends AbstractResource {\n+\n+    private static final long serialVersionUID = 5163553843196539019L;\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(AbstractWorkflowResource.class);\n+\n+    protected final WorkflowRestClient restClient = new WorkflowRestClient();\n+\n+    protected WorkflowDefinitionTO getWorkflowDefinition(final Attributes attributes) {\n+        final StringValue modelId =\n+                attributes.getRequest().getQueryParameters().getParameterValue(Constants.MODEL_ID_PARAM);\n+\n+        WorkflowDefinitionTO workflowDefinition = modelId == null ? null\n+                : IterableUtils.find(restClient.getDefinitions(), new Predicate<WorkflowDefinitionTO>() {\n+\n+                    @Override\n+                    public boolean evaluate(final WorkflowDefinitionTO object) {\n+                        return modelId.toString().equals(object.getModelId());\n+                    }\n+                });\n+\n+        return workflowDefinition;\n+    }\n+}"},{"sha":"18cbb6ab531997868e1907afef285823f2098dff","filename":"client/console/src/main/java/org/apache/syncope/client/console/resources/WorkflowDefGETResource.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefGETResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefGETResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefGETResource.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -22,20 +22,22 @@\n import java.nio.charset.StandardCharsets;\n import javax.ws.rs.core.MediaType;\n import org.apache.syncope.client.console.rest.WorkflowRestClient;\n-import org.apache.wicket.request.resource.AbstractResource;\n+import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.wicket.util.io.IOUtils;\n \n /**\n  * Mirror REST resource for obtaining user workflow definition in JSON (used by Activiti Modeler).\n  *\n  * @see org.apache.syncope.common.rest.api.service.WorkflowService#exportDefinition\n  */\n-public class WorkflowDefGETResource extends AbstractResource {\n+public class WorkflowDefGETResource extends AbstractWorkflowResource {\n \n     private static final long serialVersionUID = 4637304868056148970L;\n \n     @Override\n     protected ResourceResponse newResourceResponse(final Attributes attributes) {\n+        final WorkflowDefinitionTO toGet = getWorkflowDefinition(attributes);\n+\n         ResourceResponse response = new ResourceResponse();\n         response.disableCaching();\n         response.setContentType(MediaType.APPLICATION_JSON);\n@@ -45,7 +47,7 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n             @Override\n             public void writeData(final Attributes attributes) throws IOException {\n                 IOUtils.copy(\n-                        new WorkflowRestClient().getDefinition(MediaType.APPLICATION_JSON_TYPE),\n+                        new WorkflowRestClient().getDefinition(MediaType.APPLICATION_JSON_TYPE, toGet.getKey()),\n                         attributes.getResponse().getOutputStream());\n             }\n         });"},{"sha":"5223dc07f7cfd0b62b468a9ff9f384fcc2f594a2","filename":"client/console/src/main/java/org/apache/syncope/client/console/resources/WorkflowDefPUTResource.java","status":"modified","additions":8,"deletions":12,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefPUTResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefPUTResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefPUTResource.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -23,25 +23,18 @@\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.cxf.common.util.UrlUtils;\n-import org.apache.syncope.client.console.rest.WorkflowRestClient;\n-import org.apache.wicket.request.resource.AbstractResource;\n+import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.wicket.util.io.IOUtils;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n /**\n  * Mirror REST resource for putting user workflow definition in JSON (used by Activiti Modeler).\n  *\n  * @see org.apache.syncope.common.rest.api.service.WorkflowService#importDefinition\n  */\n-public class WorkflowDefPUTResource extends AbstractResource {\n+public class WorkflowDefPUTResource extends AbstractWorkflowResource {\n \n     private static final long serialVersionUID = 2964542005207297944L;\n \n-    private static final Logger LOG = LoggerFactory.getLogger(WorkflowDefPUTResource.class);\n-\n-    private final WorkflowRestClient restClient = new WorkflowRestClient();\n-\n     @Override\n     protected ResourceResponse newResourceResponse(final Attributes attributes) {\n         String definition = null;\n@@ -58,14 +51,17 @@ protected ResourceResponse newResourceResponse(final Attributes attributes) {\n         } catch (IOException e) {\n             LOG.error(\"Could not extract workflow definition\", e);\n         }\n-        if (definition == null) {\n+\n+        WorkflowDefinitionTO toSet = getWorkflowDefinition(attributes);\n+\n+        if (definition == null || toSet == null) {\n             return new ResourceResponse().setStatusCode(Response.Status.BAD_REQUEST.getStatusCode()).\n                     setError(Response.Status.BAD_REQUEST.getStatusCode(),\n-                            \"Could not extract workflow definition\");\n+                            \"Could not extract workflow model id and / or definition\");\n         }\n \n         try {\n-            restClient.updateDefinition(MediaType.APPLICATION_JSON_TYPE, definition);\n+            restClient.setDefinition(MediaType.APPLICATION_JSON_TYPE, toSet.getKey(), definition);\n             return new ResourceResponse().setStatusCode(Response.Status.NO_CONTENT.getStatusCode());\n         } catch (Exception e) {\n             LOG.error(\"While updating workflow definition\", e);"},{"sha":"14711a4a6effffc809efdd0ad13d5d04c7e46b6d","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/WorkflowRestClient.java","status":"modified","additions":16,"deletions":6,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWorkflowRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWorkflowRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWorkflowRestClient.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -19,11 +19,13 @@\n package org.apache.syncope.client.console.rest;\n \n import java.io.InputStream;\n+import java.util.List;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.cxf.helpers.IOUtils;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.service.WorkflowService;\n@@ -36,16 +38,20 @@ private WorkflowService getService(final MediaType mediaType) {\n         return SyncopeConsoleSession.get().getService(mediaType, WorkflowService.class);\n     }\n \n-    public InputStream getDefinition(final MediaType mediaType) {\n-        Response response = getService(mediaType).exportDefinition(AnyTypeKind.USER);\n+    public List<WorkflowDefinitionTO> getDefinitions() {\n+        return getService(WorkflowService.class).list(AnyTypeKind.USER.name());\n+    }\n+\n+    public InputStream getDefinition(final MediaType mediaType, final String key) {\n+        Response response = getService(mediaType).get(AnyTypeKind.USER.name(), key);\n \n         return (InputStream) response.getEntity();\n     }\n \n-    public byte[] getDiagram() {\n+    public byte[] getDiagram(final String key) {\n         WorkflowService service = getService(WorkflowService.class);\n         WebClient.client(service).accept(RESTHeaders.MEDIATYPE_IMAGE_PNG);\n-        Response response = service.exportDiagram(AnyTypeKind.USER);\n+        Response response = service.exportDiagram(AnyTypeKind.USER.name(), key);\n \n         byte[] diagram;\n         try {\n@@ -57,7 +63,11 @@ public byte[] getDiagram() {\n         return diagram;\n     }\n \n-    public void updateDefinition(final MediaType mediaType, final String definition) {\n-        getService(mediaType).importDefinition(AnyTypeKind.USER, definition);\n+    public void setDefinition(final MediaType mediaType, final String key, final String definition) {\n+        getService(mediaType).set(AnyTypeKind.USER.name(), key, definition);\n+    }\n+\n+    public void deleteDefinition(final String key) {\n+        getService(WorkflowService.class).delete(AnyTypeKind.USER.name(), key);\n     }\n }"},{"sha":"c4c5bf7e934d038bc31fb54700b575dcd1a224e9","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLink.java","status":"modified","additions":12,"deletions":1,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLink.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -19,7 +19,9 @@\n package org.apache.syncope.client.console.wicket.markup.html.form;\n \n import java.io.Serializable;\n+import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n public abstract class ActionLink<T extends Serializable> implements Serializable {\n \n@@ -91,7 +93,8 @@ public enum ActionType {\n         PROPAGATION_TASKS(\"read\"),\n         NOTIFICATION_TASKS(\"read\"),\n         ZOOM_IN(\"zoomin\"),\n-        ZOOM_OUT(\"zoomout\");\n+        ZOOM_OUT(\"zoomout\"),\n+        WORKFLOW_MODELER(\"workflowModeler\");\n \n         private final String actionId;\n \n@@ -126,6 +129,14 @@ protected boolean statusCondition(final T modelObject) {\n         return true;\n     }\n \n+    public Class<? extends Page> getPageClass() {\n+        return null;\n+    }\n+\n+    public PageParameters getPageParameters() {\n+        return null;\n+    }\n+\n     public final ActionLink<T> disable() {\n         this.enabled = false;\n         return this;"},{"sha":"c9a632d96fb70c7474510cdf03f693fbd7bf42b7","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.java","status":"modified","additions":27,"deletions":11,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -24,9 +24,11 @@\n import java.util.Map.Entry;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Triple;\n+import org.apache.syncope.client.console.wicket.markup.html.link.VeilPopupSettings;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n+import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n@@ -103,6 +105,7 @@ private ActionLinksPanel(final String componentId, final IModel<T> model) {\n         super.add(new Fragment(\"panelNotificationTasks\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelZoomIn\", \"emptyFragment\", this));\n         super.add(new Fragment(\"panelZoomOut\", \"emptyFragment\", this));\n+        super.add(new Fragment(\"panelWorkflowModeler\", \"emptyFragment\", this));\n     }\n \n     public ActionLinksPanel<T> add(\n@@ -945,19 +948,19 @@ public String getAjaxIndicatorMarkupId() {\n                 fragment.addOrReplace(\n                         new IndicatingOnConfirmAjaxLink<Void>(\"unassignLink\", \"confirmUnassign\", enabled) {\n \n-                    private static final long serialVersionUID = -6957616042924610294L;\n+                            private static final long serialVersionUID = -6957616042924610294L;\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-                        link.onClick(target, model.getObject());\n-                    }\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target) {\n+                                link.onClick(target, model.getObject());\n+                            }\n \n-                    @Override\n-                    public String getAjaxIndicatorMarkupId() {\n-                        return disableIndicator || !link.isIndicatorEnabled()\n-                                ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n-                    }\n-                }.setVisible(link.isEnabled(model.getObject())));\n+                            @Override\n+                            public String getAjaxIndicatorMarkupId() {\n+                                return disableIndicator || !link.isIndicatorEnabled()\n+                                        ? StringUtils.EMPTY : super.getAjaxIndicatorMarkupId();\n+                            }\n+                        }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n             case ASSIGN:\n@@ -1140,6 +1143,15 @@ public String getAjaxIndicatorMarkupId() {\n                 }.setVisible(link.isEnabled(model.getObject())));\n                 break;\n \n+            case WORKFLOW_MODELER:\n+                fragment = new Fragment(\"panelWorkflowModeler\", \"fragmentWorkflowModeler\", this);\n+\n+                fragment.addOrReplace(new BookmarkablePageLink<>(\n+                        \"workflowModelerLink\", link.getPageClass(), link.getPageParameters()).\n+                        setPopupSettings(new VeilPopupSettings().setHeight(600).setWidth(800)).\n+                        setVisible(link.isEnabled(model.getObject())));\n+                break;\n+\n             default:\n             // do nothing\n         }\n@@ -1336,6 +1348,10 @@ public void remove(final ActionLink.ActionType type) {\n                 super.addOrReplace(new Fragment(\"panelZoomOut\", \"emptyFragment\", this));\n                 break;\n \n+            case WORKFLOW_MODELER:\n+                super.addOrReplace(new Fragment(\"panelWorkflowModelert\", \"emptyFragment\", this));\n+                break;\n+\n             default:\n             // do nothing\n         }"},{"sha":"cf9c1083a96863302756137c8e363f1bf37404ef","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/ImageModalPanel.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FImageModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FImageModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FImageModalPanel.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.markup.html.form;\n+\n+import java.io.Serializable;\n+import org.apache.syncope.client.console.panels.AbstractModalPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.markup.html.image.Image;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.request.resource.DynamicImageResource;\n+import org.apache.wicket.request.resource.IResource;\n+\n+public class ImageModalPanel<T extends Serializable> extends AbstractModalPanel<T> {\n+\n+    private static final long serialVersionUID = 5044632306261219075L;\n+\n+    public ImageModalPanel(final BaseModal<T> modal, final byte[] content, final PageReference pageRef) {\n+        super(modal, pageRef);\n+\n+        Image image = new Image(\"image\", new Model<IResource>()) {\n+\n+            private static final long serialVersionUID = -8457850449086490660L;\n+\n+            @Override\n+            protected IResource getImageResource() {\n+                return new DynamicImageResource() {\n+\n+                    private static final long serialVersionUID = 923201517955737928L;\n+\n+                    @Override\n+                    protected byte[] getImageData(final IResource.Attributes attributes) {\n+                        return content;\n+                    }\n+                };\n+            }\n+        };\n+        image.setOutputMarkupId(true);\n+        add(image);\n+    }\n+\n+}"},{"sha":"f266c817214dc3f172c1050ba075c33e00bdd2b8","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/ModelerPopupPage.html","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FModelerPopupPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FModelerPopupPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FModelerPopupPage.html?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -0,0 +1,28 @@\n+<!DOCTYPE html>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html>\n+  <head>\n+    <title>Apache Syncope / Workflow Modeler</title>\n+\n+    <meta wicket:id=\"refresh\" http-equiv=\"refresh\"/>\n+  </head>\n+  <body>\n+  </body>\n+</html>\n\\ No newline at end of file"},{"sha":"723c46a63576ba4ae8304165a9fdd7921335fb5c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Workflow.html","status":"modified","additions":9,"deletions":8,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWorkflow.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWorkflow.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWorkflow.html?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -20,17 +20,18 @@\n   <wicket:extend>\n     <section class=\"content-header\">\n       <h1>&nbsp;</h1>\n+      <ol class=\"breadcrumb\">\n+        <li><a wicket:id=\"dashboardBr\"><i class=\"fa fa-dashboard\"></i> <wicket:message key=\"dashboard\"/></a></li>\n+        <li class=\"active\"><wicket:message key=\"configuration\"/></li>\n+        <li class=\"active\"><wicket:message key=\"workflow\"/></li>\n+      </ol>\n     </section>\n \n-    <section class=\"content\">\n-      <div>\n-        <span wicket:id=\"noActivitiEnabledForUsers\"><i><wicket:message key=\"noActivitiEnabledForUsers\"/></i></span>\n-        <span wicket:id=\"workflowDefContainer\">\n-          <img wicket:id=\"workflowDefDiagram\" style=\"width: 100%;\"/>\n-          <span wicket:id=\"togglePanel\"/>\n-        </span>\n+    <section class=\"content\" wicket:id=\"content\">\n+      <span wicket:id=\"disabled\"><i><wicket:message key=\"disabled\"/></i></span>\n+      <div class=\"box\">\n+        <div class=\"box-body\" wicket:id=\"workflowsPanel\"/>\n       </div>\n     </section>\n-\n   </wicket:extend>\n </html>\n\\ No newline at end of file"},{"sha":"a9635bf21d987211f6643b90b6a930cc5480a213","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Workflow.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWorkflow.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWorkflow.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWorkflow.properties?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -16,3 +16,4 @@\n # under the License.\n noActivitiEnabledForUsers=Activiti not enabled for users\n xmlEditorTitle=Workflow XML Editor\n+main=Main"},{"sha":"ff960990f83a313e78d98e2d55d6bb2a403aaedd","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Workflow_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWorkflow_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWorkflow_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWorkflow_it.properties?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -16,3 +16,4 @@\n # under the License.\n noActivitiEnabledForUsers=Activiti non configurato per gli utenti\n xmlEditorTitle=Workflow XML Editor\n+main=Principale"},{"sha":"ae769c69900b2b049590536b4c72f7c758dc1d2d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Workflow_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWorkflow_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWorkflow_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWorkflow_pt_BR.properties?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -16,3 +16,4 @@\n # under the License.\n noActivitiEnabledForUsers=Activiti n\\u00e3o habilitado para usu\\u00e1rios\n xmlEditorTitle=Workflow XML Editor\n+main=Main"},{"sha":"a05edf695fc270c7e3b7da718aa42af68e5cf5cf","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Workflow_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWorkflow_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWorkflow_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWorkflow_ru.properties?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -19,3 +19,4 @@\n noActivitiEnabledForUsers=Activiti \\u043e\\u0442\\u043a\\u043b\\u044e\\u0447\\u0435\\u043d \\u0434\\u043b\\u044f \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0435\\u0439\n # xmlEditorTitle=XML редактор процесса согласования\n xmlEditorTitle=XML \\u0440\\u0435\\u0434\\u0430\\u043a\\u0442\\u043e\\u0440 \\u043f\\u0440\\u043e\\u0446\\u0435\\u0441\\u0441\\u0430 \\u0441\\u043e\\u0433\\u043b\\u0430\\u0441\\u043e\\u0432\\u0430\\u043d\\u0438\\u044f\n+main=Main"},{"sha":"d0dad1e25cb0646cf7458350570e94dd3936a6cb","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ConnObjectListViewPanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.html?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -20,7 +20,7 @@\n   <wicket:panel>\n     <span wicket:id=\"objs\"/>\n     <div wicket:id=\"arrows\">\n-      <a haref=\"#\" class=\"btn btn-primary btn-circle btn-lg pull-right\" wicket:id=\"next\"><i class=\"fa fa-chevron-right\"></i></a>\n+      <a href=\"#\" class=\"btn btn-primary btn-circle btn-lg pull-right\" wicket:id=\"next\"><i class=\"fa fa-chevron-right\"></i></a>\n     </div>\n   </wicket:panel>\n </html>"},{"sha":"6197d5ae8cb50d5d434b53789e91e8c31d67b185","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/NewWorkflowProcess.html","status":"renamed","additions":9,"deletions":27,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNewWorkflowProcess.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNewWorkflowProcess.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNewWorkflowProcess.html?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -17,34 +17,16 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:head>\n-    <script type=\"text/javascript\">\n-      $(document).ready(function () {\n-        $(\"div.inactive-topology-menu\").toggle(\"slow\");\n-        $(\"div.inactive-topology-menu\").attr(\"class\", \"topology-menu active-topology-menu\");\n-      });\n-    </script>\n-\n-    <style type=\"text/css\">\n-      div.topology-menu {\n-        top: 65px !important;\n-      }\n-\n-      div.topology-menu div.header {\n-        display: none !important;\n-      }\n-    </style>\n-  </wicket:head>\n   <wicket:extend>\n-    <div wicket:id=\"container\">\n-      <ul class=\"menu\">\n-        <wicket:enclosure child=\"activitiModeler\">\n-          <li><a href=\"#\" wicket:id=\"activitiModeler\"><i class=\"fa fa-file-image-o\"></i>Activiti Modeler</a></li>\n-        </wicket:enclosure>\n-        <wicket:enclosure child=\"xmlEditor\">\n-          <li><a href=\"#\" wicket:id=\"xmlEditor\"><i class=\"fa fa-file-text-o\"></i>XML editor</a></li>\n-        </wicket:enclosure>\n-      </ul>\n+    <div id=\"startAtContainer\">\n+      <form wicket:id=\"form\">\n+        <div class=\"input-group\">\n+          <input wicket:id=\"key\"/>\n+          <div class=\"input-group-addon\">\n+            <a wicket:id=\"submit\"><i class=\"fa fa-file-o\" alt=\"new\" title=\"new\"></i></a>\n+          </div>\n+        </div>\n+      </form>\n     </div>\n   </wicket:extend>\n </html>","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/WorkflowTogglePanel.html"},{"sha":"d17004136dc13100ed7f577865cccd21765dceda","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/WorkflowDirectoryPanel.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWorkflowDirectoryPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWorkflowDirectoryPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FWorkflowDirectoryPanel.html?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -0,0 +1,23 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:extend>\n+    <span wicket:id=\"newWorkflowProcess\"/>\n+  </wicket:extend>\n+</html>"},{"sha":"7e9e7eab561377ab500f890744c4e2a5c678959d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/empty.bpmn20.xml","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fempty.bpmn20.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fempty.bpmn20.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fempty.bpmn20.xml?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -0,0 +1,49 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<definitions xmlns=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" \n+             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n+             xmlns:activiti=\"http://activiti.org/bpmn\" \n+             xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" \n+             xmlns:omgdc=\"http://www.omg.org/spec/DD/20100524/DC\" \n+             xmlns:omgdi=\"http://www.omg.org/spec/DD/20100524/DI\" \n+             typeLanguage=\"http://www.w3.org/2001/XMLSchema\" \n+             expressionLanguage=\"http://www.w3.org/1999/XPath\" \n+             targetNamespace=\"http://activiti.org/bpmn20\">\n+\n+  <process id=\"%KEY%\" name=\"%KEY%\" isExecutable=\"true\">\n+    <startEvent id=\"startevent1\" name=\"Start\"></startEvent>\n+    <endEvent id=\"endevent1\" name=\"End\"></endEvent>\n+    <sequenceFlow id=\"flow1\" sourceRef=\"startevent1\" targetRef=\"endevent1\"></sequenceFlow>\n+  </process>\n+  <bpmndi:BPMNDiagram id=\"BPMNDiagram_myProcess\">\n+    <bpmndi:BPMNPlane bpmnElement=\"myProcess\" id=\"BPMNPlane_myProcess\">\n+      <bpmndi:BPMNShape bpmnElement=\"startevent1\" id=\"BPMNShape_startevent1\">\n+        <omgdc:Bounds height=\"35.0\" width=\"35.0\" x=\"180.0\" y=\"110.0\"></omgdc:Bounds>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNShape bpmnElement=\"endevent1\" id=\"BPMNShape_endevent1\">\n+        <omgdc:Bounds height=\"35.0\" width=\"35.0\" x=\"460.0\" y=\"110.0\"></omgdc:Bounds>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNEdge bpmnElement=\"flow1\" id=\"BPMNEdge_flow1\">\n+        <omgdi:waypoint x=\"215.0\" y=\"127.0\"></omgdi:waypoint>\n+        <omgdi:waypoint x=\"460.0\" y=\"127.0\"></omgdi:waypoint>\n+      </bpmndi:BPMNEdge>\n+    </bpmndi:BPMNPlane>\n+  </bpmndi:BPMNDiagram>\n+</definitions>\n\\ No newline at end of file"},{"sha":"65a7eb7a7e5da74cbc27fdc7655b2b906bdd2e7b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ActionLinksPanel.html","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FActionLinksPanel.html?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -63,6 +63,7 @@\n     <span wicket:id=\"panelNotificationTasks\">[plus]</span>\n     <span wicket:id=\"panelDeprovisionMembers\">[plus]</span>\n     <span wicket:id=\"panelProvisionMembers\">[plus]</span>\n+    <span wicket:id=\"panelWorkflowModeler\">[plus]</span>\n     <span wicket:id=\"panelDelete\">[plus]</span>\n     <span wicket:id=\"panelSelect\">[select]</span>\n     <span wicket:id=\"panelClose\">[close]</span>\n@@ -287,6 +288,10 @@\n       <a href=\"#\" wicket:id=\"zoomOutLink\" class=\"btn\"><i class=\"fa fa-search-minus\" alt=\"zoom out icon\" title=\"Zoom Out\"></i></a>\n     </wicket:fragment>\n \n+    <wicket:fragment wicket:id=\"fragmentWorkflowModeler\">\n+      <a wicket:id=\"workflowModelerLink\" class=\"btn\"><i class=\"fa fa-picture-o\" alt=\"picture icon\" title=\"Workflow Modeler\"></i></a>\n+    </wicket:fragment>\n+\n     <wicket:fragment wicket:id=\"emptyFragment\">\n     </wicket:fragment>\n   </wicket:panel>"},{"sha":"eca8d93b0fdcd3f126451f218c4dedce81a678da","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/ImageModalPanel.html","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FImageModalPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FImageModalPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FImageModalPanel.html?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -0,0 +1,23 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <img wicket:id=\"image\" style=\"width: 100%;\"/>\n+  </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"80736d26acd326509306a5e0f5e50706e6e79efb","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/WizardMgtPanel.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.html?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -43,10 +43,10 @@ <h3 class=\"box-title\">\n \n       <wicket:enclosure child=\"add\">\n         <div class=\"modal-footer\" style=\"text-align: right\">\n-          <a haref=\"#\"  class=\"btn btn-default btn-circle btn-lg pull-left\" wicket:id=\"exit\">\n+          <a href=\"#\"  class=\"btn btn-default btn-circle btn-lg pull-left\" wicket:id=\"exit\">\n             <i class=\"fa fa-sign-out\"></i>\n           </a>\n-          <a haref=\"#\"  class=\"btn btn-primary btn-circle btn-lg\" wicket:id=\"add\">\n+          <a href=\"#\"  class=\"btn btn-primary btn-circle btn-lg\" wicket:id=\"add\">\n             <i class=\"glyphicon glyphicon-plus\"></i>\n           </a>\n         </div>"},{"sha":"804d75c781823aaf57483994e3dc5a179cdaab96","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/WorkflowDefinitionTO.java","status":"added","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowDefinitionTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowDefinitionTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowDefinitionTO.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.to;\n+\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.AbstractBaseBean;\n+\n+@XmlRootElement(name = \"workflowDefinition\")\n+@XmlType\n+public class WorkflowDefinitionTO extends AbstractBaseBean {\n+\n+    private static final long serialVersionUID = -7044543391316529128L;\n+\n+    private String key;\n+\n+    private String modelId;\n+\n+    private String name;\n+\n+    private boolean main;\n+\n+    public String getKey() {\n+        return key;\n+    }\n+\n+    public void setKey(final String key) {\n+        this.key = key;\n+    }\n+\n+    public String getModelId() {\n+        return modelId;\n+    }\n+\n+    public void setModelId(final String modelId) {\n+        this.modelId = modelId;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(final String name) {\n+        this.name = name;\n+    }\n+\n+    public boolean isMain() {\n+        return main;\n+    }\n+\n+    public void setMain(final boolean main) {\n+        this.main = main;\n+    }\n+\n+}"},{"sha":"aa3fd179ddb0423e4e1d6a820cda831c81104213","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/StandardEntitlement.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FStandardEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FStandardEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FStandardEntitlement.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -160,9 +160,13 @@ public final class StandardEntitlement {\n \n     public static final String POLICY_DELETE = \"POLICY_DELETE\";\n \n-    public static final String WORKFLOW_DEF_READ = \"WORKFLOW_DEF_READ\";\n+    public static final String WORKFLOW_DEF_LIST = \"WORKFLOW_DEF_LIST\";\n \n-    public static final String WORKFLOW_DEF_UPDATE = \"WORKFLOW_DEF_UPDATE\";\n+    public static final String WORKFLOW_DEF_GET = \"WORKFLOW_DEF_GET\";\n+\n+    public static final String WORKFLOW_DEF_SET = \"WORKFLOW_DEF_SET\";\n+\n+    public static final String WORKFLOW_DEF_DELETE = \"WORKFLOW_DEF_DELETE\";\n \n     public static final String WORKFLOW_TASK_LIST = \"WORKFLOW_TASK_LIST\";\n "},{"sha":"cb1cc4abbb86cbe6a55e51b6078733f27b45bbf2","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/WorkflowService.java","status":"modified","additions":48,"deletions":14,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FWorkflowService.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -18,16 +18,18 @@\n  */\n package org.apache.syncope.common.rest.api.service;\n \n+import java.util.List;\n import javax.validation.constraints.NotNull;\n import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n import javax.ws.rs.GET;\n import javax.ws.rs.PUT;\n import javax.ws.rs.Path;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n \n /**\n@@ -37,36 +39,68 @@\n public interface WorkflowService extends JAXRSService {\n \n     /**\n-     * Exports workflow definition for matching kind.\n+     * Lists the available workflow definitions, for the given any object type.\n      *\n-     * @param anyTypeKind any object type\n-     * @return workflow definition for matching kind\n+     * @param anyType any object type\n+     * @return available workflow definitions, for the given any object type\n      */\n     @GET\n-    @Path(\"{anyTypeKind}\")\n+    @Path(\"{anyType}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response exportDefinition(@NotNull @PathParam(\"anyTypeKind\") AnyTypeKind anyTypeKind);\n+    List<WorkflowDefinitionTO> list(@NotNull @PathParam(\"anyType\") String anyType);\n \n     /**\n-     * Exports workflow diagram representation.\n+     * Exports the workflow definition for matching any object type and key.\n      *\n-     * @param anyTypeKind any object type\n+     * @param anyType any object type\n+     * @param key workflow definition key\n+     * @return workflow definition for matching any object type and key\n+     */\n+    @GET\n+    @Path(\"{anyType}/{key}\")\n+    @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n+    Response get(\n+            @NotNull @PathParam(\"anyType\") String anyType,\n+            @NotNull @PathParam(\"key\") String key);\n+\n+    /**\n+     * Exports the workflow diagram representation (if available), for matching any object type and key.\n+     *\n+     * @param anyType any object type\n+     * @param key workflow definition key\n      * @return workflow diagram representation\n      */\n     @GET\n-    @Path(\"{anyTypeKind}/diagram.png\")\n+    @Path(\"{anyType}/{key}/diagram.png\")\n     @Produces({ RESTHeaders.MEDIATYPE_IMAGE_PNG })\n-    Response exportDiagram(@NotNull @PathParam(\"anyTypeKind\") AnyTypeKind anyTypeKind);\n+    Response exportDiagram(\n+            @NotNull @PathParam(\"anyType\") String anyType,\n+            @NotNull @PathParam(\"key\") String key);\n \n     /**\n-     * Imports workflow definition for matching kind.\n+     * Imports the workflow definition for matching any object type, under the provided key.\n      *\n-     * @param anyTypeKind any object type\n+     * @param anyType any object type\n+     * @param key workflow definition key\n      * @param definition workflow definition for matching kind\n      */\n     @PUT\n-    @Path(\"{anyTypeKind}\")\n+    @Path(\"{anyType}/{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    void importDefinition(@NotNull @PathParam(\"anyTypeKind\") AnyTypeKind anyTypeKind, @NotNull String definition);\n+    void set(\n+            @NotNull @PathParam(\"anyType\") String anyType,\n+            @NotNull @PathParam(\"key\") String key,\n+            @NotNull String definition);\n \n+    /**\n+     * Removes the workflow definition for matching any object type, under the provided key.\n+     *\n+     * @param anyType any object type\n+     * @param key workflow definition key\n+     */\n+    @DELETE\n+    @Path(\"{anyType}/{key}\")\n+    void delete(\n+            @NotNull @PathParam(\"anyType\") String anyType,\n+            @NotNull @PathParam(\"key\") String key);\n }"},{"sha":"4f3e5126cce4b158c95c903b336aa58f7879712e","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/WorkflowLogic.java","status":"modified","additions":53,"deletions":67,"changes":120,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FWorkflowLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FWorkflowLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FWorkflowLogic.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -20,108 +20,94 @@\n \n import java.io.OutputStream;\n import java.lang.reflect.Method;\n-import javax.ws.rs.core.MediaType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import java.util.List;\n+import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n-import org.apache.syncope.core.workflow.api.AnyObjectWorkflowAdapter;\n-import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n-import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n-import org.apache.syncope.core.workflow.api.WorkflowAdapter;\n+import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n+import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n+import org.apache.syncope.core.persistence.api.entity.AnyType;\n+import org.apache.syncope.core.workflow.api.AnyObjectWorkflowDefinitionAdapter;\n+import org.apache.syncope.core.workflow.api.GroupWorkflowDefinitionAdapter;\n+import org.apache.syncope.core.workflow.api.UserWorkflowDefinitionAdapter;\n+import org.apache.syncope.core.workflow.api.WorkflowDefinitionAdapter;\n import org.apache.syncope.core.workflow.api.WorkflowDefinitionFormat;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n \n @Component\n-public class WorkflowLogic extends AbstractTransactionalLogic<AbstractBaseBean> {\n+public class WorkflowLogic extends AbstractTransactionalLogic<WorkflowDefinitionTO> {\n \n     @Autowired\n-    private AnyObjectWorkflowAdapter awfAdapter;\n+    private AnyTypeDAO anyTypeDAO;\n \n     @Autowired\n-    private UserWorkflowAdapter uwfAdapter;\n+    private AnyObjectWorkflowDefinitionAdapter awfAdapter;\n \n     @Autowired\n-    private GroupWorkflowAdapter gwfAdapter;\n+    private UserWorkflowDefinitionAdapter uwfAdapter;\n \n-    private void exportDefinition(\n-            final WorkflowAdapter adapter, final WorkflowDefinitionFormat format, final OutputStream os) {\n-\n-        adapter.exportDefinition(format, os);\n-    }\n-\n-    private WorkflowDefinitionFormat getFormat(final MediaType format) {\n-        return format.equals(MediaType.APPLICATION_JSON_TYPE)\n-                ? WorkflowDefinitionFormat.JSON\n-                : WorkflowDefinitionFormat.XML;\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.WORKFLOW_DEF_READ + \"')\")\n-    @Transactional(readOnly = true)\n-    public void exportAnyObjectDefinition(final MediaType format, final OutputStream os) {\n-        exportDefinition(awfAdapter, getFormat(format), os);\n+    @Autowired\n+    private GroupWorkflowDefinitionAdapter gwfAdapter;\n+\n+    private WorkflowDefinitionAdapter getAdapter(final String anyTypeKey) {\n+        AnyType anyType = anyTypeDAO.find(anyTypeKey);\n+        if (anyType == null) {\n+            LOG.error(\"Could not find anyType '\" + anyTypeKey + \"'\");\n+            throw new NotFoundException(anyTypeKey);\n+        }\n+\n+        switch (anyType.getKind()) {\n+            case ANY_OBJECT:\n+                return awfAdapter;\n+\n+            case GROUP:\n+                return gwfAdapter;\n+\n+            case USER:\n+            default:\n+                return uwfAdapter;\n+        }\n     }\n \n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.WORKFLOW_DEF_READ + \"')\")\n+    @PreAuthorize(\"hasRole('\" + StandardEntitlement.WORKFLOW_DEF_LIST + \"')\")\n     @Transactional(readOnly = true)\n-    public void exportUserDefinition(final MediaType format, final OutputStream os) {\n-        exportDefinition(uwfAdapter, getFormat(format), os);\n+    public List<WorkflowDefinitionTO> list(final String anyType) {\n+        return getAdapter(anyType).getDefinitions();\n     }\n \n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.WORKFLOW_DEF_READ + \"')\")\n+    @PreAuthorize(\"hasRole('\" + StandardEntitlement.WORKFLOW_DEF_GET + \"')\")\n     @Transactional(readOnly = true)\n-    public void exportGroupDefinition(final MediaType format, final OutputStream os) {\n-        exportDefinition(gwfAdapter, getFormat(format), os);\n-    }\n+    public void exportDefinition(\n+            final String anyType, final String key, final WorkflowDefinitionFormat format, final OutputStream os) {\n \n-    private void exportDiagram(final WorkflowAdapter adapter, final OutputStream os) {\n-        adapter.exportDiagram(os);\n+        getAdapter(anyType).exportDefinition(key, format, os);\n     }\n \n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.WORKFLOW_DEF_READ + \"')\")\n+    @PreAuthorize(\"hasRole('\" + StandardEntitlement.WORKFLOW_DEF_GET + \"')\")\n     @Transactional(readOnly = true)\n-    public void exportAnyObjectDiagram(final OutputStream os) {\n-        exportDiagram(awfAdapter, os);\n+    public void exportDiagram(final String anyType, final String key, final OutputStream os) {\n+        getAdapter(anyType).exportDiagram(key, os);\n     }\n \n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.WORKFLOW_DEF_READ + \"')\")\n-    @Transactional(readOnly = true)\n-    public void exportUserDiagram(final OutputStream os) {\n-        exportDiagram(uwfAdapter, os);\n-    }\n+    @PreAuthorize(\"hasRole('\" + StandardEntitlement.WORKFLOW_DEF_GET + \"')\")\n+    public void importDefinition(\n+            final String anyType, final String key, final WorkflowDefinitionFormat format, final String definition) {\n \n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.WORKFLOW_DEF_READ + \"')\")\n-    @Transactional(readOnly = true)\n-    public void exportGroupDiagram(final OutputStream os) {\n-        exportDiagram(gwfAdapter, os);\n+        getAdapter(anyType).importDefinition(key, format, definition);\n     }\n \n-    private void importDefinition(\n-            final WorkflowAdapter adapter, final WorkflowDefinitionFormat format, final String definition) {\n-\n-        adapter.importDefinition(format, definition);\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.WORKFLOW_DEF_UPDATE + \"')\")\n-    public void importAnyObjectDefinition(final MediaType format, final String definition) {\n-        importDefinition(awfAdapter, getFormat(format), definition);\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.WORKFLOW_DEF_UPDATE + \"')\")\n-    public void importUserDefinition(final MediaType format, final String definition) {\n-        importDefinition(uwfAdapter, getFormat(format), definition);\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.WORKFLOW_DEF_UPDATE + \"')\")\n-    public void importGroupDefinition(final MediaType format, final String definition) {\n-        importDefinition(gwfAdapter, getFormat(format), definition);\n+    @PreAuthorize(\"hasRole('\" + StandardEntitlement.WORKFLOW_DEF_DELETE + \"')\")\n+    public void delete(final String anyType, final String key) {\n+        getAdapter(anyType).deleteDefinition(key);\n     }\n \n     @Override\n-    protected AbstractBaseBean resolveReference(final Method method, final Object... args)\n+    protected WorkflowDefinitionTO resolveReference(final Method method, final Object... args)\n             throws UnresolvedReferenceException {\n \n         throw new UnresolvedReferenceException();\n     }\n+\n }"},{"sha":"2642853b39991d2b308a17f040522f6c6e7d4960","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/WorkflowServiceImpl.java","status":"modified","additions":27,"deletions":32,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FWorkflowServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FWorkflowServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FWorkflowServiceImpl.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -20,13 +20,15 @@\n \n import java.io.IOException;\n import java.io.OutputStream;\n+import java.util.List;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.StreamingOutput;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.service.WorkflowService;\n import org.apache.syncope.core.logic.WorkflowLogic;\n+import org.apache.syncope.core.workflow.api.WorkflowDefinitionFormat;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n \n@@ -37,44 +39,38 @@ public class WorkflowServiceImpl extends AbstractServiceImpl implements Workflow\n     private WorkflowLogic logic;\n \n     @Override\n-    public Response exportDefinition(final AnyTypeKind kind) {\n-        final MediaType accept =\n+    public List<WorkflowDefinitionTO> list(final String anyType) {\n+        return logic.list(anyType);\n+    }\n+\n+    @Override\n+    public Response get(final String anyType, final String key) {\n+        final WorkflowDefinitionFormat format =\n                 messageContext.getHttpHeaders().getAcceptableMediaTypes().contains(MediaType.APPLICATION_JSON_TYPE)\n-                        ? MediaType.APPLICATION_JSON_TYPE\n-                        : MediaType.APPLICATION_XML_TYPE;\n+                ? WorkflowDefinitionFormat.JSON\n+                : WorkflowDefinitionFormat.XML;\n \n         StreamingOutput sout = new StreamingOutput() {\n \n             @Override\n             public void write(final OutputStream os) throws IOException {\n-                if (kind == AnyTypeKind.USER) {\n-                    logic.exportUserDefinition(accept, os);\n-                } else if (kind == AnyTypeKind.ANY_OBJECT) {\n-                    logic.exportAnyObjectDefinition(accept, os);\n-                } else {\n-                    logic.exportGroupDefinition(accept, os);\n-                }\n+                logic.exportDefinition(anyType, key, format, os);\n             }\n         };\n \n         return Response.ok(sout).\n-                type(accept).\n+                type(format == WorkflowDefinitionFormat.JSON\n+                        ? MediaType.APPLICATION_JSON_TYPE : MediaType.APPLICATION_XHTML_XML_TYPE).\n                 build();\n     }\n \n     @Override\n-    public Response exportDiagram(final AnyTypeKind kind) {\n+    public Response exportDiagram(final String anyType, final String key) {\n         StreamingOutput sout = new StreamingOutput() {\n \n             @Override\n             public void write(final OutputStream os) throws IOException {\n-                if (kind == AnyTypeKind.USER) {\n-                    logic.exportUserDiagram(os);\n-                } else if (kind == AnyTypeKind.ANY_OBJECT) {\n-                    logic.exportAnyObjectDiagram(os);\n-                } else {\n-                    logic.exportGroupDiagram(os);\n-                }\n+                logic.exportDiagram(anyType, key, os);\n             }\n         };\n \n@@ -84,19 +80,18 @@ public void write(final OutputStream os) throws IOException {\n     }\n \n     @Override\n-    public void importDefinition(final AnyTypeKind kind, final String definition) {\n-        final MediaType contentType =\n+    public void set(final String anyType, final String key, final String definition) {\n+        WorkflowDefinitionFormat format =\n                 messageContext.getHttpHeaders().getMediaType().equals(MediaType.APPLICATION_JSON_TYPE)\n-                        ? MediaType.APPLICATION_JSON_TYPE\n-                        : MediaType.APPLICATION_XML_TYPE;\n+                ? WorkflowDefinitionFormat.JSON\n+                : WorkflowDefinitionFormat.XML;\n \n-        if (kind == AnyTypeKind.USER) {\n-            logic.importUserDefinition(contentType, definition);\n-        } else if (kind == AnyTypeKind.ANY_OBJECT) {\n-            logic.importAnyObjectDefinition(contentType, definition);\n-        } else {\n-            logic.importGroupDefinition(contentType, definition);\n-        }\n+        logic.importDefinition(anyType, key, format, definition);\n+    }\n+\n+    @Override\n+    public void delete(final String anyType, final String key) {\n+        logic.delete(anyType, key);\n     }\n \n }"},{"sha":"9521213e88bb87e948ff353277086c1b32c81fec","filename":"core/workflow-activiti/src/main/java/org/apache/syncope/core/workflow/activiti/ActivitiDefinitionLoader.java","status":"modified","additions":3,"deletions":15,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiDefinitionLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiDefinitionLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiDefinitionLoader.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -18,17 +18,13 @@\n  */\n package org.apache.syncope.core.workflow.activiti;\n \n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import com.fasterxml.jackson.databind.node.ObjectNode;\n import java.io.ByteArrayInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.util.List;\n import java.util.Map;\n import javax.annotation.Resource;\n-import org.activiti.editor.constants.ModelDataJsonConstants;\n import org.activiti.engine.ProcessEngine;\n-import org.activiti.engine.repository.Model;\n import org.activiti.engine.repository.ProcessDefinition;\n import org.activiti.spring.SpringProcessEngineConfiguration;\n import org.apache.commons.io.IOUtils;\n@@ -65,7 +61,7 @@ public void load() {\n             wfIn = userWorkflowDef.getResource().getInputStream();\n             wfDef = IOUtils.toByteArray(wfIn);\n         } catch (IOException e) {\n-            LOG.error(\"While loading \" + ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE, e);\n+            LOG.error(\"While loading \" + userWorkflowDef.getResource().getFilename(), e);\n         } finally {\n             IOUtils.closeQuietly(wfIn);\n         }\n@@ -79,21 +75,13 @@ public void load() {\n             // Only loads process definition from file if not found in repository\n             if (processes.isEmpty()) {\n                 entry.getValue().getRepositoryService().createDeployment().addInputStream(\n-                        ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE, new ByteArrayInputStream(wfDef)).deploy();\n+                        userWorkflowDef.getResource().getFilename(), new ByteArrayInputStream(wfDef)).deploy();\n \n                 ProcessDefinition procDef = entry.getValue().getRepositoryService().createProcessDefinitionQuery().\n                         processDefinitionKey(ActivitiUserWorkflowAdapter.WF_PROCESS_ID).latestVersion().\n                         singleResult();\n \n-                Model model = entry.getValue().getRepositoryService().newModel();\n-                ObjectNode modelObjectNode = new ObjectMapper().createObjectNode();\n-                modelObjectNode.put(ModelDataJsonConstants.MODEL_NAME, procDef.getName());\n-                modelObjectNode.put(ModelDataJsonConstants.MODEL_REVISION, 1);\n-                modelObjectNode.put(ModelDataJsonConstants.MODEL_DESCRIPTION, procDef.getDescription());\n-                model.setMetaInfo(modelObjectNode.toString());\n-                model.setName(procDef.getName());\n-                model.setDeploymentId(procDef.getDeploymentId());\n-                ActivitiImportUtils.fromJSON(entry.getValue(), procDef, model);\n+                ActivitiDeployUtils.deployModel(entry.getValue(), procDef);\n \n                 LOG.debug(\"Activiti Workflow definition loaded for domain {}\", entry.getKey());\n             }"},{"sha":"965e03c3e089b5e51df5d428a08eae6212416b7e","filename":"core/workflow-activiti/src/main/java/org/apache/syncope/core/workflow/activiti/ActivitiDeployUtils.java","status":"renamed","additions":27,"deletions":23,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiDeployUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiDeployUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiDeployUtils.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.core.workflow.activiti;\n \n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n import java.io.ByteArrayInputStream;\n import java.io.InputStream;\n import java.io.InputStreamReader;\n@@ -26,41 +28,32 @@\n import javax.xml.stream.XMLStreamReader;\n import org.activiti.bpmn.converter.BpmnXMLConverter;\n import org.activiti.bpmn.model.BpmnModel;\n+import org.activiti.editor.constants.ModelDataJsonConstants;\n import org.activiti.editor.language.json.converter.BpmnJsonConverter;\n import org.activiti.engine.ActivitiException;\n import org.activiti.engine.ProcessEngine;\n+import org.activiti.engine.repository.Deployment;\n import org.activiti.engine.repository.Model;\n import org.activiti.engine.repository.ProcessDefinition;\n import org.apache.commons.io.IOUtils;\n import org.apache.syncope.core.workflow.api.WorkflowException;\n \n-public final class ActivitiImportUtils {\n+public final class ActivitiDeployUtils {\n \n-    public static void fromXML(final ProcessEngine engine, final byte[] definition) {\n-        try {\n-            engine.getRepositoryService().createDeployment().\n-                    addInputStream(ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE,\n-                            new ByteArrayInputStream(definition)).deploy();\n-        } catch (ActivitiException e) {\n-            throw new WorkflowException(\"While updating process \" + ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE, e);\n-        }\n-    }\n+    private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n \n-    public static void fromJSON(\n-            final ProcessEngine engine, final byte[] definition, final ProcessDefinition procDef, final Model model) {\n+    public static Deployment deployDefinition(\n+            final ProcessEngine engine, final String resourceName, final byte[] definition) {\n \n         try {\n-            model.setVersion(procDef.getVersion());\n-            model.setDeploymentId(procDef.getDeploymentId());\n-            engine.getRepositoryService().saveModel(model);\n-\n-            engine.getRepositoryService().addModelEditorSource(model.getId(), definition);\n-        } catch (Exception e) {\n-            throw new WorkflowException(\"While updating process \" + ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE, e);\n+            return engine.getRepositoryService().createDeployment().\n+                    addInputStream(resourceName, new ByteArrayInputStream(definition)).deploy();\n+        } catch (ActivitiException e) {\n+            throw new WorkflowException(\"While importing \" + resourceName, e);\n         }\n     }\n \n-    public static void fromJSON(final ProcessEngine engine, final ProcessDefinition procDef, final Model model) {\n+    public static void deployModel(final ProcessEngine engine, final ProcessDefinition procDef) {\n         InputStream bpmnStream = null;\n         InputStreamReader isr = null;\n         XMLStreamReader xtr = null;\n@@ -71,9 +64,20 @@ public static void fromJSON(final ProcessEngine engine, final ProcessDefinition\n             xtr = XMLInputFactory.newInstance().createXMLStreamReader(isr);\n             BpmnModel bpmnModel = new BpmnXMLConverter().convertToBpmnModel(xtr);\n \n-            fromJSON(engine, new BpmnJsonConverter().convertToJson(bpmnModel).toString().getBytes(), procDef, model);\n+            Model model = engine.getRepositoryService().newModel();\n+            ObjectNode modelObjectNode = OBJECT_MAPPER.createObjectNode();\n+            modelObjectNode.put(ModelDataJsonConstants.MODEL_NAME, procDef.getName());\n+            model.setMetaInfo(modelObjectNode.toString());\n+            model.setName(procDef.getName());\n+            model.setDeploymentId(procDef.getDeploymentId());\n+            model.setVersion(procDef.getVersion());\n+\n+            engine.getRepositoryService().saveModel(model);\n+            engine.getRepositoryService().addModelEditorSource(\n+                    model.getId(),\n+                    new BpmnJsonConverter().convertToJson(bpmnModel).toString().getBytes());\n         } catch (Exception e) {\n-            throw new WorkflowException(\"While updating process \" + ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE, e);\n+            throw new WorkflowException(\"While importing \" + procDef.getResourceName(), e);\n         } finally {\n             if (xtr != null) {\n                 try {\n@@ -87,7 +91,7 @@ public static void fromJSON(final ProcessEngine engine, final ProcessDefinition\n         }\n     }\n \n-    private ActivitiImportUtils() {\n+    private ActivitiDeployUtils() {\n         // private constructor for static utility class\n     }\n }","previous_filename":"core/workflow-activiti/src/main/java/org/apache/syncope/core/workflow/activiti/ActivitiImportUtils.java"},{"sha":"8fbec72f5f5649d7b56151f2dd6c9290cd696561","filename":"core/workflow-activiti/src/main/java/org/apache/syncope/core/workflow/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":175,"deletions":111,"changes":286,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -32,7 +32,6 @@\n import java.util.Map;\n import java.util.Set;\n import javax.annotation.Resource;\n-import javax.ws.rs.NotFoundException;\n import org.activiti.bpmn.converter.BpmnXMLConverter;\n import org.activiti.bpmn.model.BpmnModel;\n import org.activiti.editor.constants.ModelDataJsonConstants;\n@@ -46,11 +45,13 @@\n import org.activiti.engine.history.HistoricTaskInstance;\n import org.activiti.engine.impl.persistence.entity.HistoricFormPropertyEntity;\n import org.activiti.engine.query.Query;\n+import org.activiti.engine.repository.Deployment;\n import org.activiti.engine.repository.Model;\n import org.activiti.engine.repository.ProcessDefinition;\n import org.activiti.engine.runtime.ProcessInstance;\n import org.activiti.engine.task.Task;\n import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.Transformer;\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.ImmutablePair;\n@@ -59,6 +60,7 @@\n import org.apache.syncope.common.lib.patch.PasswordPatch;\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.lib.to.WorkflowFormPropertyTO;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n@@ -68,6 +70,7 @@\n import org.apache.syncope.core.spring.BeanUtils;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.ParsingValidationException;\n+import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n@@ -83,14 +86,12 @@\n  */\n public class ActivitiUserWorkflowAdapter extends AbstractUserWorkflowAdapter {\n \n+    protected static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n+\n     protected static final String[] PROPERTY_IGNORE_PROPS = { \"type\" };\n \n     public static final String WF_PROCESS_ID = \"userWorkflow\";\n \n-    public static final String WF_PROCESS_RESOURCE = \"userWorkflow.bpmn20.xml\";\n-\n-    public static final String WF_DGRM_RESOURCE = \"userWorkflow.userWorkflow.png\";\n-\n     public static final String USER = \"user\";\n \n     public static final String WF_EXECUTOR = \"wfExecutor\";\n@@ -459,112 +460,6 @@ public WorkflowResult<String> execute(final UserTO userTO, final String taskId)\n         return new WorkflowResult<>(updated.getKey(), null, performedTasks);\n     }\n \n-    protected ProcessDefinition getProcessDefinition() {\n-        try {\n-            return engine.getRepositoryService().createProcessDefinitionQuery().processDefinitionKey(\n-                    ActivitiUserWorkflowAdapter.WF_PROCESS_ID).latestVersion().singleResult();\n-        } catch (ActivitiException e) {\n-            throw new WorkflowException(\"While accessing process \" + ActivitiUserWorkflowAdapter.WF_PROCESS_ID, e);\n-        }\n-\n-    }\n-\n-    protected Model getModel(final ProcessDefinition procDef) {\n-        try {\n-            Model model = engine.getRepositoryService().createModelQuery().\n-                    deploymentId(procDef.getDeploymentId()).singleResult();\n-            if (model == null) {\n-                throw new NotFoundException(\"Could not find Model for deployment \" + procDef.getDeploymentId());\n-            }\n-            return model;\n-        } catch (Exception e) {\n-            throw new WorkflowException(\"While accessing process \" + ActivitiUserWorkflowAdapter.WF_PROCESS_ID, e);\n-        }\n-    }\n-\n-    protected void exportProcessResource(final String resourceName, final OutputStream os) {\n-        ProcessDefinition procDef = getProcessDefinition();\n-\n-        InputStream procDefIS = engine.getRepositoryService().getResourceAsStream(procDef.getDeploymentId(),\n-                resourceName);\n-        try {\n-            IOUtils.copy(procDefIS, os);\n-        } catch (IOException e) {\n-            LOG.error(\"While exporting workflow definition {}\", procDef.getKey(), e);\n-        } finally {\n-            IOUtils.closeQuietly(procDefIS);\n-        }\n-    }\n-\n-    protected void exportProcessModel(final OutputStream os) {\n-        Model model = getModel(getProcessDefinition());\n-\n-        ObjectMapper objectMapper = new ObjectMapper();\n-        try {\n-            ObjectNode modelNode = (ObjectNode) objectMapper.readTree(model.getMetaInfo());\n-            modelNode.put(ModelDataJsonConstants.MODEL_ID, model.getId());\n-            modelNode.replace(MODEL_DATA_JSON_MODEL,\n-                    objectMapper.readTree(engine.getRepositoryService().getModelEditorSource(model.getId())));\n-\n-            os.write(modelNode.toString().getBytes());\n-        } catch (IOException e) {\n-            LOG.error(\"While exporting workflow definition {}\", model.getId(), e);\n-        }\n-    }\n-\n-    @Override\n-    public void exportDefinition(final WorkflowDefinitionFormat format, final OutputStream os) {\n-        switch (format) {\n-            case JSON:\n-                exportProcessModel(os);\n-                break;\n-\n-            case XML:\n-            default:\n-                exportProcessResource(WF_PROCESS_RESOURCE, os);\n-        }\n-    }\n-\n-    @Override\n-    public void exportDiagram(final OutputStream os) {\n-        exportProcessResource(WF_DGRM_RESOURCE, os);\n-    }\n-\n-    @Override\n-    public void importDefinition(final WorkflowDefinitionFormat format, final String definition) {\n-        Model model = getModel(getProcessDefinition());\n-        switch (format) {\n-            case JSON:\n-                JsonNode definitionNode;\n-                try {\n-                    definitionNode = new ObjectMapper().readTree(definition);\n-                    if (definitionNode.has(MODEL_DATA_JSON_MODEL)) {\n-                        definitionNode = definitionNode.get(MODEL_DATA_JSON_MODEL);\n-                    }\n-                    if (!definitionNode.has(BpmnJsonConverter.EDITOR_CHILD_SHAPES)) {\n-                        throw new IllegalArgumentException(\n-                                \"Could not find JSON node \" + BpmnJsonConverter.EDITOR_CHILD_SHAPES);\n-                    }\n-\n-                    BpmnModel bpmnModel = new BpmnJsonConverter().convertToBpmnModel(definitionNode);\n-                    ActivitiImportUtils.fromXML(engine, new BpmnXMLConverter().convertToXML(bpmnModel));\n-                } catch (Exception e) {\n-                    throw new WorkflowException(\"While updating process \"\n-                            + ActivitiUserWorkflowAdapter.WF_PROCESS_RESOURCE, e);\n-                }\n-\n-                ActivitiImportUtils.fromJSON(\n-                        engine, definitionNode.toString().getBytes(), getProcessDefinition(), model);\n-                break;\n-\n-            case XML:\n-            default:\n-                ActivitiImportUtils.fromXML(engine, definition.getBytes());\n-\n-                ActivitiImportUtils.fromJSON(engine, getProcessDefinition(), model);\n-        }\n-    }\n-\n     protected WorkflowFormPropertyType fromActivitiFormType(final FormType activitiFormType) {\n         WorkflowFormPropertyType result = WorkflowFormPropertyType.String;\n \n@@ -879,4 +774,173 @@ public WorkflowResult<UserPatch> submitForm(final WorkflowFormTO form) {\n \n         return new WorkflowResult<>(userPatch, propByRes, postTasks);\n     }\n+\n+    protected Model getModel(final ProcessDefinition procDef) {\n+        try {\n+            Model model = engine.getRepositoryService().createModelQuery().\n+                    deploymentId(procDef.getDeploymentId()).singleResult();\n+            if (model == null) {\n+                throw new NotFoundException(\"Could not find Model for deployment \" + procDef.getDeploymentId());\n+            }\n+            return model;\n+        } catch (Exception e) {\n+            throw new WorkflowException(\"While accessing process \" + procDef.getKey(), e);\n+        }\n+    }\n+\n+    @Override\n+    public List<WorkflowDefinitionTO> getDefinitions() {\n+        try {\n+            return CollectionUtils.collect(\n+                    engine.getRepositoryService().createProcessDefinitionQuery().latestVersion().list(),\n+                    new Transformer<ProcessDefinition, WorkflowDefinitionTO>() {\n+\n+                @Override\n+                public WorkflowDefinitionTO transform(final ProcessDefinition procDef) {\n+                    WorkflowDefinitionTO defTO = new WorkflowDefinitionTO();\n+                    defTO.setKey(procDef.getKey());\n+                    defTO.setName(procDef.getName());\n+\n+                    try {\n+                        defTO.setModelId(getModel(procDef).getId());\n+                    } catch (NotFoundException e) {\n+                        LOG.warn(\"No model found for definition {}, ignoring\", procDef.getDeploymentId(), e);\n+                    }\n+\n+                    defTO.setMain(WF_PROCESS_ID.equals(procDef.getKey()));\n+\n+                    return defTO;\n+                }\n+            }, new ArrayList<WorkflowDefinitionTO>());\n+        } catch (ActivitiException e) {\n+            throw new WorkflowException(\"While listing available process definitions\", e);\n+        }\n+    }\n+\n+    protected ProcessDefinition getProcessDefinitionByKey(final String key) {\n+        try {\n+            return engine.getRepositoryService().createProcessDefinitionQuery().\n+                    processDefinitionKey(key).latestVersion().singleResult();\n+        } catch (ActivitiException e) {\n+            throw new WorkflowException(\"While accessing process \" + key, e);\n+        }\n+\n+    }\n+\n+    protected ProcessDefinition getProcessDefinitionByDeploymentId(final String deploymentId) {\n+        try {\n+            return engine.getRepositoryService().createProcessDefinitionQuery().\n+                    deploymentId(deploymentId).latestVersion().singleResult();\n+        } catch (ActivitiException e) {\n+            throw new WorkflowException(\"While accessing deployment \" + deploymentId, e);\n+        }\n+\n+    }\n+\n+    protected void exportProcessModel(final String key, final OutputStream os) {\n+        Model model = getModel(getProcessDefinitionByKey(key));\n+\n+        try {\n+            ObjectNode modelNode = (ObjectNode) OBJECT_MAPPER.readTree(model.getMetaInfo());\n+            modelNode.put(ModelDataJsonConstants.MODEL_ID, model.getId());\n+            modelNode.replace(MODEL_DATA_JSON_MODEL,\n+                    OBJECT_MAPPER.readTree(engine.getRepositoryService().getModelEditorSource(model.getId())));\n+\n+            os.write(modelNode.toString().getBytes());\n+        } catch (IOException e) {\n+            LOG.error(\"While exporting workflow definition {}\", model.getId(), e);\n+        }\n+    }\n+\n+    protected void exportProcessResource(final String deploymentId, final String resourceName, final OutputStream os) {\n+        InputStream procDefIS = engine.getRepositoryService().\n+                getResourceAsStream(deploymentId, resourceName);\n+        try {\n+            IOUtils.copy(procDefIS, os);\n+        } catch (IOException e) {\n+            LOG.error(\"While exporting {}\", resourceName, e);\n+        } finally {\n+            IOUtils.closeQuietly(procDefIS);\n+        }\n+    }\n+\n+    @Override\n+    public void exportDefinition(final String key, final WorkflowDefinitionFormat format, final OutputStream os) {\n+        switch (format) {\n+            case JSON:\n+                exportProcessModel(key, os);\n+                break;\n+\n+            case XML:\n+            default:\n+                ProcessDefinition procDef = getProcessDefinitionByKey(key);\n+                exportProcessResource(procDef.getDeploymentId(), procDef.getResourceName(), os);\n+        }\n+    }\n+\n+    @Override\n+    public void exportDiagram(final String key, final OutputStream os) {\n+        ProcessDefinition procDef = getProcessDefinitionByKey(key);\n+        if (procDef == null) {\n+            throw new NotFoundException(\"Workflow process definition for \" + key);\n+        }\n+        exportProcessResource(procDef.getDeploymentId(), procDef.getDiagramResourceName(), os);\n+    }\n+\n+    @Override\n+    public void importDefinition(final String key, final WorkflowDefinitionFormat format, final String definition) {\n+        ProcessDefinition procDef = getProcessDefinitionByKey(key);\n+        String resourceName = procDef == null ? key + \".bpmn20.xml\" : procDef.getResourceName();\n+        Deployment deployment;\n+        switch (format) {\n+            case JSON:\n+                JsonNode definitionNode;\n+                try {\n+                    definitionNode = OBJECT_MAPPER.readTree(definition);\n+                    if (definitionNode.has(MODEL_DATA_JSON_MODEL)) {\n+                        definitionNode = definitionNode.get(MODEL_DATA_JSON_MODEL);\n+                    }\n+                    if (!definitionNode.has(BpmnJsonConverter.EDITOR_CHILD_SHAPES)) {\n+                        throw new IllegalArgumentException(\n+                                \"Could not find JSON node \" + BpmnJsonConverter.EDITOR_CHILD_SHAPES);\n+                    }\n+\n+                    BpmnModel bpmnModel = new BpmnJsonConverter().convertToBpmnModel(definitionNode);\n+                    deployment = ActivitiDeployUtils.deployDefinition(\n+                            engine,\n+                            resourceName,\n+                            new BpmnXMLConverter().convertToXML(bpmnModel));\n+                } catch (Exception e) {\n+                    throw new WorkflowException(\"While creating or updating process \" + key, e);\n+                }\n+                break;\n+\n+            case XML:\n+            default:\n+                deployment = ActivitiDeployUtils.deployDefinition(\n+                        engine,\n+                        resourceName,\n+                        definition.getBytes());\n+        }\n+\n+        procDef = getProcessDefinitionByDeploymentId(deployment.getId());\n+        if (!key.equals(procDef.getKey())) {\n+            throw new WorkflowException(\"Mismatching key: expected \" + key + \", found \" + procDef.getKey());\n+        }\n+        ActivitiDeployUtils.deployModel(engine, procDef);\n+    }\n+\n+    @Override\n+    public void deleteDefinition(final String key) {\n+        ProcessDefinition procDef = getProcessDefinitionByKey(key);\n+        if (WF_PROCESS_ID.equals(procDef.getKey())) {\n+            throw new WorkflowException(\"Cannot delete the main process \" + WF_PROCESS_ID);\n+        }\n+\n+        try {\n+            engine.getRepositoryService().deleteDeployment(procDef.getDeploymentId());\n+        } catch (Exception e) {\n+            throw new WorkflowException(\"While deleting \" + key, e);\n+        }\n+    }\n }"},{"sha":"43fb0dda659269a2717023c0aaf88a8b4e409cee","filename":"core/workflow-api/src/main/java/org/apache/syncope/core/workflow/api/AnyObjectWorkflowDefinitionAdapter.java","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FAnyObjectWorkflowDefinitionAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FAnyObjectWorkflowDefinitionAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FAnyObjectWorkflowDefinitionAdapter.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -0,0 +1,22 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.workflow.api;\n+\n+public interface AnyObjectWorkflowDefinitionAdapter extends WorkflowDefinitionAdapter {\n+}"},{"sha":"6dc2241475aa1240f179346bd85c1d008019dba2","filename":"core/workflow-api/src/main/java/org/apache/syncope/core/workflow/api/GroupWorkflowDefinitionAdapter.java","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FGroupWorkflowDefinitionAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FGroupWorkflowDefinitionAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FGroupWorkflowDefinitionAdapter.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -0,0 +1,22 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.workflow.api;\n+\n+public interface GroupWorkflowDefinitionAdapter extends WorkflowDefinitionAdapter {\n+}"},{"sha":"93b3969fea3b04e0d248c2e41061e051fdbcb9f7","filename":"core/workflow-api/src/main/java/org/apache/syncope/core/workflow/api/UserWorkflowDefinitionAdapter.java","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FUserWorkflowDefinitionAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FUserWorkflowDefinitionAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FUserWorkflowDefinitionAdapter.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -0,0 +1,22 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.workflow.api;\n+\n+public interface UserWorkflowDefinitionAdapter extends WorkflowDefinitionAdapter {\n+}"},{"sha":"72a27272fdbc01b35dc7930f1d24c5bfeeca8871","filename":"core/workflow-api/src/main/java/org/apache/syncope/core/workflow/api/WorkflowAdapter.java","status":"modified","additions":0,"deletions":24,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FWorkflowAdapter.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.workflow.api;\n \n-import java.io.OutputStream;\n import java.util.List;\n import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n@@ -31,29 +30,6 @@ public interface WorkflowAdapter {\n      */\n     String getPrefix();\n \n-    /**\n-     * Export workflow definition.\n-     *\n-     * @param format export format\n-     * @param os export stream\n-     */\n-    void exportDefinition(WorkflowDefinitionFormat format, OutputStream os);\n-\n-    /**\n-     * Export workflow graphical representation (if available).\n-     *\n-     * @param os export stream\n-     */\n-    void exportDiagram(OutputStream os);\n-\n-    /**\n-     * Update workflow definition.\n-     *\n-     * @param format import format\n-     * @param definition definition\n-     */\n-    void importDefinition(WorkflowDefinitionFormat format, String definition);\n-\n     /**\n      * Get all defined forms for current workflow process instances.\n      *"},{"sha":"ea845981817f6d1b595a9359d07bf5f94e50738a","filename":"core/workflow-api/src/main/java/org/apache/syncope/core/workflow/api/WorkflowDefinitionAdapter.java","status":"added","additions":64,"deletions":0,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FWorkflowDefinitionAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FWorkflowDefinitionAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FWorkflowDefinitionAdapter.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.workflow.api;\n+\n+import java.io.OutputStream;\n+import java.util.List;\n+import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n+\n+public interface WorkflowDefinitionAdapter {\n+\n+    /**\n+     * @return all available workflow definitions.\n+     */\n+    List<WorkflowDefinitionTO> getDefinitions();\n+\n+    /**\n+     * Export the workflow definition for the given key, in the requested format.\n+     *\n+     * @param key definition key\n+     * @param format export format\n+     * @param os export stream\n+     */\n+    void exportDefinition(String key, WorkflowDefinitionFormat format, OutputStream os);\n+\n+    /**\n+     * Export the workflow graphical representation for the given key (if available).\n+     *\n+     * @param key definition key\n+     * @param os export stream\n+     */\n+    void exportDiagram(String key, OutputStream os);\n+\n+    /**\n+     * Import the workflow definition for the given key.\n+     *\n+     * @param key definition key\n+     * @param format import format\n+     * @param definition definition\n+     */\n+    void importDefinition(String key, WorkflowDefinitionFormat format, String definition);\n+\n+    /**\n+     * Remove the workflow definition for the given key.\n+     *\n+     * @param key definition key\n+     */\n+    void deleteDefinition(String key);\n+}"},{"sha":"7b3805d02c825548c631b717be239a897df531e4","filename":"core/workflow-api/src/main/java/org/apache/syncope/core/workflow/api/WorkflowException.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FWorkflowException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FWorkflowException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fapi%2FWorkflowException.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -25,11 +25,12 @@\n  */\n public class WorkflowException extends RuntimeException {\n \n-    /**\n-     * Generated serialVersionUID.\n-     */\n     private static final long serialVersionUID = -6261173250078013869L;\n \n+    public WorkflowException(final String message) {\n+        super(message);\n+    }\n+\n     /**\n      * Return a new instance wrapping the original workflow exception.\n      *"},{"sha":"df35de544b068c85f45d02ab09b8d36baf363f4f","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/AbstractAnyObjectWorkflowAdapter.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractAnyObjectWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractAnyObjectWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractAnyObjectWorkflowAdapter.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -25,12 +25,14 @@\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.data.AnyObjectDataBinder;\n import org.apache.syncope.core.workflow.api.AnyObjectWorkflowAdapter;\n+import org.apache.syncope.core.workflow.api.AnyObjectWorkflowDefinitionAdapter;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Propagation;\n import org.springframework.transaction.annotation.Transactional;\n \n @Transactional(propagation = Propagation.REQUIRES_NEW, rollbackFor = { Throwable.class })\n-public abstract class AbstractAnyObjectWorkflowAdapter implements AnyObjectWorkflowAdapter {\n+public abstract class AbstractAnyObjectWorkflowAdapter\n+        implements AnyObjectWorkflowAdapter, AnyObjectWorkflowDefinitionAdapter {\n \n     @Autowired\n     protected AnyObjectDataBinder dataBinder;"},{"sha":"7b1fd3ee30557c8f4b142da6a3d773673a3fda09","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/AbstractGroupWorkflowAdapter.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractGroupWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractGroupWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractGroupWorkflowAdapter.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -25,12 +25,13 @@\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.data.GroupDataBinder;\n import org.apache.syncope.core.workflow.api.GroupWorkflowAdapter;\n+import org.apache.syncope.core.workflow.api.GroupWorkflowDefinitionAdapter;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Propagation;\n import org.springframework.transaction.annotation.Transactional;\n \n @Transactional(propagation = Propagation.REQUIRES_NEW, rollbackFor = { Throwable.class })\n-public abstract class AbstractGroupWorkflowAdapter implements GroupWorkflowAdapter {\n+public abstract class AbstractGroupWorkflowAdapter implements GroupWorkflowAdapter, GroupWorkflowDefinitionAdapter {\n \n     @Autowired\n     protected GroupDataBinder dataBinder;"},{"sha":"48c6d60b6a9d2af900cbbedf63716a789613af40","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/AbstractUserWorkflowAdapter.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractUserWorkflowAdapter.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -27,6 +27,7 @@\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.data.UserDataBinder;\n import org.apache.syncope.core.workflow.api.UserWorkflowAdapter;\n+import org.apache.syncope.core.workflow.api.UserWorkflowDefinitionAdapter;\n import org.identityconnectors.common.Base64;\n import org.identityconnectors.common.security.EncryptorFactory;\n import org.slf4j.Logger;\n@@ -36,7 +37,7 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Transactional(propagation = Propagation.REQUIRES_NEW, rollbackFor = { Throwable.class })\n-public abstract class AbstractUserWorkflowAdapter implements UserWorkflowAdapter {\n+public abstract class AbstractUserWorkflowAdapter implements UserWorkflowAdapter, UserWorkflowDefinitionAdapter {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(UserWorkflowAdapter.class);\n "},{"sha":"b3a7c484b912b2aad0c838527400badccf26baf5","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultAnyObjectWorkflowAdapter.java","status":"modified","additions":20,"deletions":9,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultAnyObjectWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultAnyObjectWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultAnyObjectWorkflowAdapter.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -23,6 +23,7 @@\n import java.util.List;\n import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n+import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n@@ -68,37 +69,47 @@ public WorkflowResult<String> execute(final AnyObjectTO anyObject, final String\n     }\n \n     @Override\n-    public void exportDefinition(final WorkflowDefinitionFormat format, final OutputStream os) {\n+    public List<WorkflowFormTO> getForms() {\n+        return Collections.emptyList();\n+    }\n+\n+    @Override\n+    public WorkflowFormTO getForm(final String workflowId) {\n+        return null;\n+    }\n+\n+    @Override\n+    public WorkflowFormTO claimForm(final String taskId) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public void exportDiagram(final OutputStream os) {\n+    public WorkflowResult<AnyObjectPatch> submitForm(final WorkflowFormTO form) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public void importDefinition(final WorkflowDefinitionFormat format, final String definition) {\n+    public List<WorkflowDefinitionTO> getDefinitions() {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public List<WorkflowFormTO> getForms() {\n-        return Collections.emptyList();\n+    public void exportDefinition(final String key, final WorkflowDefinitionFormat format, final OutputStream os) {\n+        throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public WorkflowFormTO getForm(final String workflowId) {\n-        return null;\n+    public void exportDiagram(final String key, final OutputStream os) {\n+        throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public WorkflowFormTO claimForm(final String taskId) {\n+    public void importDefinition(final String key, final WorkflowDefinitionFormat format, final String definition) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public WorkflowResult<AnyObjectPatch> submitForm(final WorkflowFormTO form) {\n+    public void deleteDefinition(final String key) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n "},{"sha":"a0282dc805364d4a7652327de5a9bce5ee3fd1a9","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultGroupWorkflowAdapter.java","status":"modified","additions":20,"deletions":10,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultGroupWorkflowAdapter.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -23,6 +23,7 @@\n import java.util.List;\n import org.apache.syncope.common.lib.patch.GroupPatch;\n import org.apache.syncope.common.lib.to.GroupTO;\n+import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n@@ -68,38 +69,47 @@ public WorkflowResult<String> execute(final GroupTO group, final String taskId)\n     }\n \n     @Override\n-    public void exportDefinition(final WorkflowDefinitionFormat format, final OutputStream os) {\n-        throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n+    public List<WorkflowFormTO> getForms() {\n+        return Collections.emptyList();\n     }\n \n     @Override\n-    public void exportDiagram(final OutputStream os) {\n+    public WorkflowFormTO getForm(final String workflowId) {\n+        return null;\n+    }\n+\n+    @Override\n+    public WorkflowFormTO claimForm(final String taskId) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public void importDefinition(final WorkflowDefinitionFormat format, final String definition) {\n+    public WorkflowResult<GroupPatch> submitForm(final WorkflowFormTO form) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public List<WorkflowFormTO> getForms() {\n-        return Collections.emptyList();\n+    public List<WorkflowDefinitionTO> getDefinitions() {\n+        throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public WorkflowFormTO getForm(final String workflowId) {\n-        return null;\n+    public void exportDefinition(final String key, final WorkflowDefinitionFormat format, final OutputStream os) {\n+        throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public WorkflowFormTO claimForm(final String taskId) {\n+    public void exportDiagram(final String key, final OutputStream os) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public WorkflowResult<GroupPatch> submitForm(final WorkflowFormTO form) {\n+    public void importDefinition(final String key, final WorkflowDefinitionFormat format, final String definition) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n+    @Override\n+    public void deleteDefinition(final String key) {\n+        throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n+    }\n }"},{"sha":"7b66170479ccdb85d81cc4ef249d2d61c31fa99b","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultUserWorkflowAdapter.java","status":"modified","additions":22,"deletions":12,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -27,6 +27,7 @@\n import org.apache.syncope.common.lib.patch.PasswordPatch;\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.lib.to.WorkflowFormTO;\n import org.apache.syncope.core.provisioning.api.PropagationByResource;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n@@ -173,43 +174,52 @@ public WorkflowResult<String> execute(final UserTO userTO, final String taskId)\n     }\n \n     @Override\n-    public void exportDefinition(final WorkflowDefinitionFormat format, final OutputStream os) {\n-        throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n+    public List<WorkflowFormTO> getForms() {\n+        return Collections.emptyList();\n     }\n \n     @Override\n-    public void exportDiagram(final OutputStream os) {\n+    public WorkflowFormTO getForm(final String workflowId) {\n+        return null;\n+    }\n+\n+    @Override\n+    public WorkflowFormTO claimForm(final String taskId) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public void importDefinition(final WorkflowDefinitionFormat format, final String definition) {\n+    public WorkflowResult<UserPatch> submitForm(final WorkflowFormTO form) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public List<WorkflowFormTO> getForms() {\n-        return Collections.emptyList();\n+    public WorkflowResult<String> requestCertify(final User user) {\n+        throw new UnsupportedOperationException(\"Not supported.\");\n     }\n \n     @Override\n-    public WorkflowFormTO getForm(final String workflowId) {\n-        return null;\n+    public List<WorkflowDefinitionTO> getDefinitions() {\n+        throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public WorkflowFormTO claimForm(final String taskId) {\n+    public void exportDefinition(final String key, final WorkflowDefinitionFormat format, final OutputStream os) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public WorkflowResult<UserPatch> submitForm(final WorkflowFormTO form) {\n+    public void exportDiagram(final String key, final OutputStream os) {\n         throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n     @Override\n-    public WorkflowResult<String> requestCertify(final User user) {\n-        throw new UnsupportedOperationException(\"Not supported.\");\n+    public void importDefinition(final String key, final WorkflowDefinitionFormat format, final String definition) {\n+        throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n     }\n \n+    @Override\n+    public void deleteDefinition(final String key) {\n+        throw new WorkflowException(new UnsupportedOperationException(\"Not supported.\"));\n+    }\n }"},{"sha":"1a2da131b753b46a3cbc800e2b33742085dc2727","filename":"fit/console-reference/pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/fit%2Fconsole-reference%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/fit%2Fconsole-reference%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fpom.xml?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -157,8 +157,8 @@ under the License.\n                 </copy>\n                 <replaceregexp file=\"${activiti-modeler.directory}/editor-app/editor/oryx.debug.js\" match=\"ORYX.CONFIG.ROOT_PATH =.*&quot;editor/&quot;; //TODO: Remove last slash!!\" replace=\"BASE_PATH = window.location.toString().substr(0, window.location.toString().indexOf('/wicket')); ORYX.CONFIG.ROOT_PATH = BASE_PATH + &quot;/activiti-modeler/editor-app/editor/&quot;;\" byline=\"true\" />\n                 <replace file=\"${activiti-modeler.directory}/editor-app/editor/oryx.debug.js\" token=\"new Ajax.Request(ACTIVITI.CONFIG.contextRoot + '/editor/stencilset?version=' + Date.now(), {\" value=\"new Ajax.Request(window.location.toString().substr(0, window.location.toString().indexOf('/activiti-modeler')) + &quot;/activiti-modeler/stencilset.json&quot;, {\" />\n-                <replace file=\"${activiti-modeler.directory}/editor-app/editor/oryx.debug.js\" token=\"ORYX.Editor.createByUrl(modelUrl);\" value=\"modelUrl = BASE_PATH + &quot;/workflowDefGET&quot;; ORYX.Editor.createByUrl(modelUrl);\" />\n-                <replace file=\"${activiti-modeler.directory}/editor-app/editor/oryx.debug.js\" token=\"ORYX.Editor.createByUrl = function(modelUrl){\" value=\"modelUrl = BASE_PATH + &quot;/workflowDefGET&quot;; ORYX.Editor.createByUrl = function(modelUrl){\" />                \n+                <replace file=\"${activiti-modeler.directory}/editor-app/editor/oryx.debug.js\" token=\"ORYX.Editor.createByUrl(modelUrl);\" value=\"modelUrl = BASE_PATH + &quot;/workflowDefGET?modelId=&quot; + modelId; ORYX.Editor.createByUrl(modelUrl);\" />\n+                <replace file=\"${activiti-modeler.directory}/editor-app/editor/oryx.debug.js\" token=\"ORYX.Editor.createByUrl = function(modelUrl){\" value=\"modelUrl = BASE_PATH + &quot;/workflowDefGET?modelId=&quot; + modelId; ORYX.Editor.createByUrl = function(modelUrl){\" />                \n                 <replace file=\"${activiti-modeler.directory}/editor-app/configuration/toolbar-default-actions.js\" token=\"window.location.href = &quot;./&quot;;\" value=\"window.close();\" />\n                                                \n                 <copy file=\"${basedir}/src/main/resources/url-config.js\" todir=\"${activiti-modeler.directory}/editor-app/configuration\" overwrite=\"true\" />"},{"sha":"8019a6e2e58d5739510563c49a7e0bc1af1e1c8e","filename":"fit/console-reference/src/main/resources/url-config.js","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Furl-config.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Furl-config.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Furl-config.js?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -21,14 +21,14 @@ var KISBPM = KISBPM || {};\n KISBPM.URL = {\n   getModel: function (modelId) {\n     return window.location.toString().substr(0, window.location.toString().indexOf('/activiti-modeler')) \n-            + \"/workflowDefGET\";\n+            + \"/workflowDefGET?modelId=\" + modelId;\n   },\n   getStencilSet: function () {\n     return window.location.toString().substr(0, window.location.toString().indexOf('/activiti-modeler')) \n             + \"/activiti-modeler/stencilset.json\";\n   },\n   putModel: function (modelId) {\n     return window.location.toString().substr(0, window.location.toString().indexOf('/activiti-modeler')) \n-            + \"/workflowDefPUT\";\n+            + \"/workflowDefPUT?modelId\" + modelId;\n   }\n };"},{"sha":"529c13e053f14b4501f10e6f361a8cd79448c54f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/WorkflowITCase.java","status":"modified","additions":30,"deletions":27,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FWorkflowITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4c2dd4433353a47b98fbdc4a9706ba6726b9fd44/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FWorkflowITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FWorkflowITCase.java?ref=4c2dd4433353a47b98fbdc4a9706ba6726b9fd44","patch":"@@ -28,52 +28,55 @@\n import java.io.InputStream;\n import java.nio.charset.StandardCharsets;\n import javax.ws.rs.core.Response;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n import org.apache.commons.io.IOUtils;\n+import org.apache.syncope.common.lib.to.WorkflowDefinitionTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.fit.AbstractITCase;\n import org.junit.Assume;\n+import org.junit.BeforeClass;\n import org.junit.Test;\n \n public class WorkflowITCase extends AbstractITCase {\n \n-    private void exportDefinition(final AnyTypeKind type) throws IOException {\n-        Response response = workflowService.exportDefinition(type);\n-        assertTrue(response.getMediaType().toString().\n-                startsWith(clientFactory.getContentType().getMediaType().toString()));\n-        assertTrue(response.getEntity() instanceof InputStream);\n-        String definition = IOUtils.toString((InputStream) response.getEntity(), StandardCharsets.UTF_8);\n-        assertNotNull(definition);\n-        assertFalse(definition.isEmpty());\n-    }\n+    private static String defaultUserKey = null;\n \n-    @Test\n-    public void exportUserDefinition() throws IOException {\n+    @BeforeClass\n+    public static void findDefault() {\n         Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForUsers(syncopeService));\n-        exportDefinition(AnyTypeKind.USER);\n-    }\n+        WorkflowDefinitionTO found = IterableUtils.find(\n+                workflowService.list(AnyTypeKind.USER.name()), new Predicate<WorkflowDefinitionTO>() {\n \n-    @Test\n-    public void getGroupDefinition() throws IOException {\n-        Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForGroups(syncopeService));\n-        exportDefinition(AnyTypeKind.GROUP);\n+            @Override\n+            public boolean evaluate(final WorkflowDefinitionTO object) {\n+                return object.isMain();\n+            }\n+        });\n+        if (found != null) {\n+            defaultUserKey = found.getKey();\n+        }\n+        assertNotNull(defaultUserKey);\n     }\n \n-    private void importDefinition(final AnyTypeKind type) throws IOException {\n-        Response response = workflowService.exportDefinition(type);\n+    @Test\n+    public void exportUserDefinition() throws IOException {\n+        Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForUsers(syncopeService));\n+        Response response = workflowService.get(AnyTypeKind.USER.name(), defaultUserKey);\n+        assertTrue(response.getMediaType().toString().\n+                startsWith(clientFactory.getContentType().getMediaType().toString()));\n+        assertTrue(response.getEntity() instanceof InputStream);\n         String definition = IOUtils.toString((InputStream) response.getEntity(), StandardCharsets.UTF_8);\n-\n-        workflowService.importDefinition(type, definition);\n+        assertNotNull(definition);\n+        assertFalse(definition.isEmpty());\n     }\n \n     @Test\n     public void updateUserDefinition() throws IOException {\n         Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForUsers(syncopeService));\n-        importDefinition(AnyTypeKind.USER);\n-    }\n+        Response response = workflowService.get(AnyTypeKind.USER.name(), defaultUserKey);\n+        String definition = IOUtils.toString((InputStream) response.getEntity(), StandardCharsets.UTF_8);\n \n-    @Test\n-    public void updateGroupDefinition() throws IOException {\n-        Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForGroups(syncopeService));\n-        importDefinition(AnyTypeKind.GROUP);\n+        workflowService.set(AnyTypeKind.USER.name(), defaultUserKey, definition);\n     }\n }"}]}