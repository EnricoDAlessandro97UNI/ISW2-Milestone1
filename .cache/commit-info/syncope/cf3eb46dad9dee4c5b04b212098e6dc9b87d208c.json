{"sha":"cf3eb46dad9dee4c5b04b212098e6dc9b87d208c","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmNmM2ViNDZkYWQ5ZGVlNGM1YjA0YjIxMjA5OGU2ZGM5Yjg3ZDIwOGM=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-05-08T21:03:18Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-05-08T21:04:04Z"},"message":"[SYNCOPE-1074] adds for entitlements check to enable realm list items","tree":{"sha":"95bff8a2648bfa5e26971f7ac81186b58f4e0149","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/95bff8a2648bfa5e26971f7ac81186b58f4e0149"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/cf3eb46dad9dee4c5b04b212098e6dc9b87d208c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cf3eb46dad9dee4c5b04b212098e6dc9b87d208c","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/cf3eb46dad9dee4c5b04b212098e6dc9b87d208c","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/cf3eb46dad9dee4c5b04b212098e6dc9b87d208c/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"704b3adb99318a76352f32bec8ba78e36f73afb8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/704b3adb99318a76352f32bec8ba78e36f73afb8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/704b3adb99318a76352f32bec8ba78e36f73afb8"}],"stats":{"total":73,"additions":59,"deletions":14},"files":[{"sha":"62f1a7635adb9c24149c3f75659bf8e88fee963c","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleSession.java","status":"modified","additions":22,"deletions":6,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf3eb46dad9dee4c5b04b212098e6dc9b87d208c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf3eb46dad9dee4c5b04b212098e6dc9b87d208c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java?ref=cf3eb46dad9dee4c5b04b212098e6dc9b87d208c","patch":"@@ -21,13 +21,15 @@\n import java.text.DateFormat;\n import java.util.Collections;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.Locale;\n import java.util.Map;\n import java.util.Set;\n import java.util.concurrent.Executors;\n import java.util.concurrent.ScheduledExecutorService;\n import javax.ws.rs.core.EntityTag;\n import javax.ws.rs.core.MediaType;\n+import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.time.FastDateFormat;\n import org.apache.commons.lang3.tuple.Pair;\n@@ -148,8 +150,7 @@ public boolean authenticate(final String username, final String password) {\n         boolean authenticated = false;\n \n         try {\n-            client = clientFactory.\n-                    setDomain(getDomain()).create(username, password);\n+            client = clientFactory.setDomain(getDomain()).create(username, password);\n \n             afterAuthentication();\n \n@@ -165,8 +166,7 @@ public boolean authenticate(final String jwt) {\n         boolean authenticated = false;\n \n         try {\n-            client = clientFactory.\n-                    setDomain(getDomain()).create(jwt);\n+            client = clientFactory.setDomain(getDomain()).create(jwt);\n \n             afterAuthentication();\n \n@@ -217,6 +217,23 @@ public UserTO getSelfTO() {\n         return selfTO;\n     }\n \n+    public Set<String> getAvailableRealms(final String... entitlements) {\n+        final Set<String> availableRealms = new HashSet<>();\n+        if (entitlements != null && entitlements.length > 0) {\n+            for (String entitlement : entitlements) {\n+                final Set<String> realms = auth.get(entitlement);\n+                if (CollectionUtils.isNotEmpty(realms)) {\n+                    availableRealms.addAll(realms);\n+                }\n+            }\n+        } else {\n+            for (Map.Entry<String, Set<String>> entitlement : auth.entrySet()) {\n+                availableRealms.addAll(entitlement.getValue());\n+            }\n+        }\n+        return availableRealms;\n+    }\n+\n     public boolean owns(final String entitlement) {\n         return auth != null && auth.containsKey(entitlement);\n     }\n@@ -266,8 +283,7 @@ public <T> T getService(final MediaType mediaType, final Class<T> serviceClass)\n         T service;\n \n         synchronized (clientFactory) {\n-            SyncopeClientFactoryBean.ContentType preType = clientFactory.\n-                    getContentType();\n+            SyncopeClientFactoryBean.ContentType preType = clientFactory.getContentType();\n \n             clientFactory.\n                     setContentType(SyncopeClientFactoryBean.ContentType.fromString(mediaType.toString()));"},{"sha":"1c43d8d51b49e47c509342fb6458c9ffcd0ed3f9","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/ITabComponent.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf3eb46dad9dee4c5b04b212098e6dc9b87d208c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FITabComponent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf3eb46dad9dee4c5b04b212098e6dc9b87d208c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FITabComponent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FITabComponent.java?ref=cf3eb46dad9dee4c5b04b212098e6dc9b87d208c","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.commons;\n \n+import java.util.Set;\n import java.util.UUID;\n import org.apache.wicket.Component;\n import org.apache.wicket.authroles.authorization.strategies.role.Roles;\n@@ -36,6 +37,15 @@ public abstract class ITabComponent extends Component implements ITab {\n \n     private final IModel<String> title;\n \n+    /**\n+     * Constructor.\n+     *\n+     * @param title IModel used to represent the title of the tab. Must contain a string\n+     * @param roles authorized roles\n+     */\n+    public ITabComponent(final IModel<String> title, final Set<String> roles) {\n+        this(title, roles.toArray(new String[roles.size()]));\n+    }\n     /**\n      * Constructor.\n      *"},{"sha":"615b3934609a3d75675b1deae5de18f5343699e9","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf3eb46dad9dee4c5b04b212098e6dc9b87d208c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf3eb46dad9dee4c5b04b212098e6dc9b87d208c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=cf3eb46dad9dee4c5b04b212098e6dc9b87d208c","patch":"@@ -85,8 +85,8 @@ public Realm(final String id, final RealmTO realmTO, final PageReference pageRef\n \n         setPageRef(pageRef);\n \n-        AjaxBootstrapTabbedPanel<ITab> tabbedPanel =\n-                new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageRef));\n+        AjaxBootstrapTabbedPanel<ITab> tabbedPanel\n+                = new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageRef));\n         tabbedPanel.setSelectedTab(selectedIndex);\n         addInnerObject(tabbedPanel);\n         this.wizardBuilder = new RealmWizardBuilder(pageRef);\n@@ -167,15 +167,15 @@ public boolean isVisible() {\n             }\n         });\n \n-        final Triple<UserFormLayoutInfo, GroupFormLayoutInfo, Map<String, AnyObjectFormLayoutInfo>> formLayoutInfo =\n-                FormLayoutInfoUtils.fetch(anyTypeTOs);\n+        final Triple<UserFormLayoutInfo, GroupFormLayoutInfo, Map<String, AnyObjectFormLayoutInfo>> formLayoutInfo\n+                = FormLayoutInfoUtils.fetch(anyTypeTOs);\n \n         Collections.sort(anyTypeTOs, new AnyTypeComparator());\n         for (final AnyTypeTO anyTypeTO : anyTypeTOs) {\n             tabs.add(new ITabComponent(\n                     new Model<>(anyTypeTO.getKey()),\n                     AnyTypeKind.GROUP.name().equals(anyTypeTO.getKey())\n-                    ? null : String.format(\"%s_SEARCH\", anyTypeTO.getKey())) {\n+                    ? null : new String[]{String.format(\"%s_SEARCH\", anyTypeTO.getKey())}) {\n \n                 private static final long serialVersionUID = 1169585538404171118L;\n \n@@ -228,7 +228,7 @@ protected Component getValueComponent(final String key, final PropagationStatus\n                             || CollectionUtils.isEmpty(afterObj.getAttrMap().get(ConnIdSpecialName.NAME).getValues())\n                             ? StringUtils.EMPTY\n                             : afterObj.getAttrMap().get(ConnIdSpecialName.NAME).getValues().\n-                                    iterator().next();\n+                            iterator().next();\n \n                     return new Label(\"field\", remoteId);\n                 } else if (\"status\".equalsIgnoreCase(key)) {"},{"sha":"2d985ef53b789ca409defa3dd395ee59d4896ddd","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmChoicePanel.java","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf3eb46dad9dee4c5b04b212098e6dc9b87d208c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf3eb46dad9dee4c5b04b212098e6dc9b87d208c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java?ref=cf3eb46dad9dee4c5b04b212098e6dc9b87d208c","patch":"@@ -32,8 +32,12 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n@@ -63,6 +67,8 @@ public class RealmChoicePanel extends Panel {\n \n     private final Model<RealmTO> model;\n \n+    private final Set<String> availableRealms;\n+\n     private final Map<String, Pair<RealmTO, List<RealmTO>>> tree;\n \n     public RealmChoicePanel(final String id, final PageReference pageRef) {\n@@ -109,6 +115,8 @@ protected List<Pair<String, RealmTO>> load() {\n         container.setOutputMarkupId(true);\n         add(container);\n \n+        availableRealms = SyncopeConsoleSession.get().getAvailableRealms();\n+\n         reloadRealmTree();\n     }\n \n@@ -143,6 +151,17 @@ public void onClick(final AjaxRequestTarget target) {\n                             target.add(label);\n                             send(pageRef.getPage(), Broadcast.EXACT, new ChosenRealm<>(realmTO, target));\n                         }\n+\n+                        @Override\n+                        public boolean isEnabled() {\n+                            return IterableUtils.matchesAny(availableRealms, new Predicate<String>() {\n+\n+                                @Override\n+                                public boolean evaluate(final String availableRealm) {\n+                                    return realmTO.getFullPath().startsWith(availableRealm);\n+                                }\n+                            });\n+                        }\n                     });\n                 }\n                 return links;"},{"sha":"0d2c3237ded1488db01499e467f16a836f5d5ef9","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Relationships.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf3eb46dad9dee4c5b04b212098e6dc9b87d208c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf3eb46dad9dee4c5b04b212098e6dc9b87d208c/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java?ref=cf3eb46dad9dee4c5b04b212098e6dc9b87d208c","patch":"@@ -168,7 +168,7 @@ public void onClick(final AjaxRequestTarget target, final RelationshipTO ignore)\n                 addFragment.add(new Specification().setRenderBodyOnly(true));\n                 target.add(Relationships.this);\n             }\n-        }, ActionType.CREATE, AnyEntitlement.UPDATE.getFor(anyTO.getType()));\n+        }, ActionType.CREATE, AnyEntitlement.UPDATE.getFor(anyTO.getType())).hideLabel();\n \n         return viewFragment;\n     }"},{"sha":"34e8266471c9b1c603bee55093dbd846ddfbd93c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/Relationships.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/cf3eb46dad9dee4c5b04b212098e6dc9b87d208c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/cf3eb46dad9dee4c5b04b212098e6dc9b87d208c/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.html?ref=cf3eb46dad9dee4c5b04b212098e6dc9b87d208c","patch":"@@ -25,7 +25,7 @@\n \n       <wicket:fragment wicket:id=\"viewFragment\">\n         <div wicket:id=\"relationships\"/>\n-        <div class=\"modal-footer\">\n+        <div id=\"inline-actions\" class=\"modal-footer\">\n           <span wicket:id=\"actions\" class=\"circular-actions\">[ACTIONS]</span>\n         </div>\n       </wicket:fragment>"}]}