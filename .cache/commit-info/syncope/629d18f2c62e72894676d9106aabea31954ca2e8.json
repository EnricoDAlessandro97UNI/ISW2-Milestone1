{"sha":"629d18f2c62e72894676d9106aabea31954ca2e8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjYyOWQxOGYyYzYyZTcyODk0Njc2ZDkxMDZhYWJlYTMxOTU0Y2EyZTg=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-06-27T19:34:48Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-06-27T19:34:48Z"},"message":"[SYNCOPE-881] Fix provided","tree":{"sha":"29a1e031c5ddc8010374282d4d8c1517638ace85","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/29a1e031c5ddc8010374282d4d8c1517638ace85"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/629d18f2c62e72894676d9106aabea31954ca2e8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/629d18f2c62e72894676d9106aabea31954ca2e8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/629d18f2c62e72894676d9106aabea31954ca2e8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/629d18f2c62e72894676d9106aabea31954ca2e8/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"d06975672a24dbab3efbf43fe1a1b21f718ccfc3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/d06975672a24dbab3efbf43fe1a1b21f718ccfc3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/d06975672a24dbab3efbf43fe1a1b21f718ccfc3"}],"stats":{"total":301,"additions":167,"deletions":134},"files":[{"sha":"cfbf06508dd965b99329f0b65a83e104a73f5b8e","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/StatusUtils.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -113,7 +113,7 @@ public StatusBean getStatusBean(\n     }\n \n     private Boolean isEnabled(final ConnObjectTO objectTO) {\n-        final Map<String, AttrTO> attributeTOs = objectTO.getPlainAttrMap();\n+        final Map<String, AttrTO> attributeTOs = objectTO.getAttrMap();\n \n         final AttrTO status = attributeTOs.get(ConnIdSpecialAttributeName.ENABLE);\n \n@@ -125,7 +125,7 @@ private Boolean isEnabled(final ConnObjectTO objectTO) {\n     private String getConnObjectLink(final ConnObjectTO objectTO) {\n         final Map<String, AttrTO> attributeTOs = objectTO == null\n                 ? Collections.<String, AttrTO>emptyMap()\n-                : objectTO.getPlainAttrMap();\n+                : objectTO.getAttrMap();\n \n         final AttrTO name = attributeTOs.get(ConnIdSpecialAttributeName.NAME);\n "},{"sha":"6a9ab0898b9a7f9c26e85530b1f351e94e433d81","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -201,12 +201,12 @@ protected Component getValueComponent(final String key, final PropagationStatus\n                 if (\"afterObj\".equalsIgnoreCase(key)) {\n                     ConnObjectTO afterObj = bean.getAfterObj();\n                     String remoteId = afterObj == null\n-                            || MapUtils.isEmpty(afterObj.getPlainAttrMap())\n-                            || !afterObj.getPlainAttrMap().containsKey(ConnIdSpecialAttributeName.NAME)\n+                            || MapUtils.isEmpty(afterObj.getAttrMap())\n+                            || !afterObj.getAttrMap().containsKey(ConnIdSpecialAttributeName.NAME)\n                             || CollectionUtils.isEmpty(\n-                                    afterObj.getPlainAttrMap().get(ConnIdSpecialAttributeName.NAME).getValues())\n+                                    afterObj.getAttrMap().get(ConnIdSpecialAttributeName.NAME).getValues())\n                             ? StringUtils.EMPTY\n-                            : afterObj.getPlainAttrMap().get(ConnIdSpecialAttributeName.NAME).getValues().\n+                            : afterObj.getAttrMap().get(ConnIdSpecialAttributeName.NAME).getValues().\n                             iterator().next();\n \n                     return new Label(\"field\", remoteId);"},{"sha":"907f647d80f0b82e9cf5ce136232de309ca561be","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/ConnObjectAttrColumn.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FConnObjectAttrColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FConnObjectAttrColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FConnObjectAttrColumn.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -48,8 +48,8 @@ public void populateItem(\n             final IModel<ConnObjectTO> rowModel) {\n \n         List<String> values = null;\n-        if (rowModel.getObject().getPlainAttrMap().containsKey(name)) {\n-            values = rowModel.getObject().getPlainAttrMap().get(name).getValues();\n+        if (rowModel.getObject().getAttrMap().containsKey(name)) {\n+            values = rowModel.getObject().getAttrMap().get(name).getValues();\n         }\n \n         if (values == null || values.isEmpty()) {"},{"sha":"09e6351e45075857f62c9108634e29b785cfa46b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/ConnObjectPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -88,11 +88,11 @@ public String transform(final AttrTO input) {\n \n         final Map<String, AttrTO> beforeProfile = connObjectTOs == null || connObjectTOs.getLeft() == null\n                 ? null\n-                : connObjectTOs.getLeft().getPlainAttrMap();\n+                : connObjectTOs.getLeft().getAttrMap();\n \n         final Map<String, AttrTO> afterProfile = connObjectTOs == null || connObjectTOs.getRight() == null\n                 ? null\n-                : connObjectTOs.getRight().getPlainAttrMap();\n+                : connObjectTOs.getRight().getAttrMap();\n \n         final ListView<String> propView = new ListView<String>(\"propView\", formProps) {\n "},{"sha":"09784c804989b4b1a2a6f164ddb28e44da58c4ac","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ConnObjectTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnObjectTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnObjectTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnObjectTO.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -47,7 +47,7 @@ public Set<AttrTO> getAttrs() {\n     }\n \n     @JsonIgnore\n-    public Map<String, AttrTO> getPlainAttrMap() {\n+    public Map<String, AttrTO> getAttrMap() {\n         Map<String, AttrTO> result = new HashMap<>(attrs.size());\n         for (AttrTO attributeTO : attrs) {\n             result.put(attributeTO.getSchema(), attributeTO);"},{"sha":"d399ac8db59090fba16d5d6b5e924cb05dee94d4","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AnyObjectDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyObjectDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyObjectDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyObjectDAO.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -56,5 +56,5 @@ public interface AnyObjectDAO extends AnyDAO<AnyObject> {\n \n     Collection<ExternalResource> findAllResources(AnyObject anyObject);\n \n-    Collection<String> findAllResourceNames(AnyObject anyObject);\n+    Collection<String> findAllResourceNames(String key);\n }"},{"sha":"d5773276b858d04b8966949ee6dc9a12005f3d6d","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/UserDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -58,7 +58,7 @@ public interface UserDAO extends AnyDAO<User> {\n \n     Collection<ExternalResource> findAllResources(User user);\n \n-    Collection<String> findAllResourceNames(User user);\n+    Collection<String> findAllResourceNames(String key);\n \n     Pair<Boolean, Boolean> enforcePolicies(User user);\n }"},{"sha":"2eae7080115f39fd0dd9a99b1e999b708af97d64","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnyObjectDAO.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -271,9 +271,8 @@ public Collection<ExternalResource> findAllResources(final AnyObject anyObject)\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW, readOnly = true)\n     @Override\n-    public Collection<String> findAllResourceNames(final AnyObject anyObject) {\n-        return CollectionUtils.collect(\n-                findAllResources(anyObject), EntityUtils.<ExternalResource>keyTransformer());\n+    public Collection<String> findAllResourceNames(final String key) {\n+        return CollectionUtils.collect(findAllResources(authFind(key)), EntityUtils.<ExternalResource>keyTransformer());\n     }\n \n }"},{"sha":"a33e29e128646da11970780b067acf07999f50e2","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAUserDAO.java","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAUserDAO.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -525,14 +525,8 @@ public Collection<ExternalResource> findAllResources(final User user) {\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW, readOnly = true)\n     @Override\n-    public Collection<String> findAllResourceNames(final User user) {\n-        return CollectionUtils.collect(findAllResources(user), new Transformer<ExternalResource, String>() {\n-\n-            @Override\n-            public String transform(final ExternalResource input) {\n-                return input.getKey();\n-            }\n-        });\n+    public Collection<String> findAllResourceNames(final String key) {\n+        return CollectionUtils.collect(findAllResources(authFind(key)), EntityUtils.keyTransformer());\n     }\n \n }"},{"sha":"7b82d1b90edfbacebc7ac98d4381895fd57aa70d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultAnyObjectProvisioningManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAnyObjectProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAnyObjectProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultAnyObjectProvisioningManager.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -180,7 +180,7 @@ public List<PropagationStatus> deprovision(\n                 AnyTypeKind.ANY_OBJECT,\n                 key,\n                 propByRes,\n-                CollectionUtils.removeAll(anyObjectDAO.findAllResourceNames(anyObjectDAO.authFind(key)), resources));\n+                CollectionUtils.removeAll(anyObjectDAO.findAllResourceNames(key), resources));\n         PropagationReporter propagationReporter =\n                 ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n         taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);"},{"sha":"55128c1be5cd45e70532b4ad36e87b0c7966153b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DefaultUserProvisioningManager.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDefaultUserProvisioningManager.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -201,7 +201,7 @@ public List<PropagationStatus> delete(\n             final String key, final Set<String> excludedResources, final boolean nullPriorityAsync) {\n \n         PropagationByResource propByRes = new PropagationByResource();\n-        propByRes.set(ResourceOperation.DELETE, userDAO.findAllResourceNames(userDAO.authFind(key)));\n+        propByRes.set(ResourceOperation.DELETE, userDAO.findAllResourceNames(key));\n \n         // Note here that we can only notify about \"delete\", not any other\n         // task defined in workflow process definition: this because this\n@@ -359,7 +359,7 @@ public List<PropagationStatus> deprovision(\n                 AnyTypeKind.USER,\n                 key,\n                 propByRes,\n-                CollectionUtils.removeAll(userDAO.findAllResourceNames(userDAO.authFind(key)), resources));\n+                CollectionUtils.removeAll(userDAO.findAllResourceNames(key), resources));\n         PropagationReporter propagationReporter =\n                 ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n         taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);"},{"sha":"74bf7e0de22139462f3d63fdea653f0cb4fd9f91","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/AnyObjectDataBinderImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FAnyObjectDataBinderImpl.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -256,7 +256,8 @@ public PropagationByResource update(final AnyObject toBeUpdated, final AnyObject\n \n         SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();\n \n-        Collection<String> currentResources = anyObjectDAO.findAllResourceNames(anyObject);\n+        Collection<String> currentResources = CollectionUtils.collect(\n+                anyObjectDAO.findAllResources(anyObject), EntityUtils.keyTransformer());\n \n         // fetch connObjectKeys before update\n         Map<String, String> oldConnObjectKeys = getConnObjectKeys(anyObject);"},{"sha":"ff485ed3c82cfef72dec0521167ab20f47fbd5d4","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/UserDataBinderImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FUserDataBinderImpl.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -310,7 +310,8 @@ public PropagationByResource update(final User toBeUpdated, final UserPatch user\n \n         SyncopeClientCompositeException scce = SyncopeClientException.buildComposite();\n \n-        Collection<String> currentResources = userDAO.findAllResourceNames(user);\n+        Collection<String> currentResources = CollectionUtils.collect(\n+                userDAO.findAllResources(user), EntityUtils.keyTransformer());\n \n         // fetch connObjectKeys before update\n         Map<String, String> oldConnObjectKeys = getConnObjectKeys(user);"},{"sha":"856fcd0b2055d886fd024d92e9b832a22184d300","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":29,"deletions":47,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -51,16 +51,12 @@\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n import org.apache.syncope.core.persistence.api.dao.VirSchemaDAO;\n-import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.persistence.api.entity.VirSchema;\n-import org.apache.syncope.core.persistence.api.entity.anyobject.AnyObject;\n-import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.resource.MappingItem;\n import org.apache.syncope.core.persistence.api.entity.resource.OrgUnit;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n-import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.AuditManager;\n import org.apache.syncope.core.provisioning.api.cache.VirAttrCache;\n import org.apache.syncope.core.provisioning.api.cache.VirAttrCacheValue;\n@@ -285,41 +281,6 @@ protected Uid createOrUpdate(\n         return result;\n     }\n \n-    protected Any<?> getAny(final PropagationTask task) {\n-        Any<?> any = null;\n-\n-        if (task.getEntityKey() != null && task.getAnyTypeKind() != null) {\n-            switch (task.getAnyTypeKind()) {\n-                case USER:\n-                    try {\n-                        any = userDAO.authFind(task.getEntityKey());\n-                    } catch (Exception e) {\n-                        LOG.error(\"Could not read user {}\", task.getEntityKey(), e);\n-                    }\n-                    break;\n-\n-                case GROUP:\n-                    try {\n-                        any = groupDAO.authFind(task.getEntityKey());\n-                    } catch (Exception e) {\n-                        LOG.error(\"Could not read group {}\", task.getEntityKey(), e);\n-                    }\n-                    break;\n-\n-                case ANY_OBJECT:\n-                default:\n-                    try {\n-                        any = anyObjectDAO.authFind(task.getEntityKey());\n-                    } catch (Exception e) {\n-                        LOG.error(\"Could not read any object {}\", task.getEntityKey(), e);\n-                    }\n-                    break;\n-            }\n-        }\n-\n-        return any;\n-    }\n-\n     protected Uid delete(\n             final PropagationTask task,\n             final ConnectorObject beforeObj,\n@@ -346,14 +307,35 @@ protected Uid delete(\n              * update, this entity used to have the current resource assigned by more than one mean (for example,\n              * two different memberships with the same resource).\n              */\n-            Any<?> any = getAny(task);\n-            Collection<String> resources = any instanceof User\n-                    ? userDAO.findAllResourceNames((User) any)\n-                    : any instanceof AnyObject\n-                            ? anyObjectDAO.findAllResourceNames((AnyObject) any)\n-                            : any instanceof Group\n-                                    ? ((Group) any).getResourceKeys()\n-                                    : Collections.<String>emptySet();\n+            Collection<String> resources = Collections.emptySet();\n+            if (task.getEntityKey() != null && task.getAnyTypeKind() != null) {\n+                switch (task.getAnyTypeKind()) {\n+                    case USER:\n+                        try {\n+                            resources = userDAO.findAllResourceNames(task.getEntityKey());\n+                        } catch (Exception e) {\n+                            LOG.error(\"Could not read user {}\", task.getEntityKey(), e);\n+                        }\n+                        break;\n+\n+                    case GROUP:\n+                        try {\n+                            resources = groupDAO.authFind(task.getEntityKey()).getResourceKeys();\n+                        } catch (Exception e) {\n+                            LOG.error(\"Could not read group {}\", task.getEntityKey(), e);\n+                        }\n+                        break;\n+\n+                    case ANY_OBJECT:\n+                    default:\n+                        try {\n+                            resources = anyObjectDAO.findAllResourceNames(task.getEntityKey());\n+                        } catch (Exception e) {\n+                            LOG.error(\"Could not read any object {}\", task.getEntityKey(), e);\n+                        }\n+                        break;\n+                }\n+            }\n             if (task.getAnyTypeKind() == null || !resources.contains(task.getResource().getKey())) {\n                 LOG.debug(\"Delete {} on {}\", beforeObj.getUid(), task.getResource().getKey());\n "},{"sha":"57a4894760c342ec14ad4fbb4825d70848f2ab61","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PropagationManagerImpl.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPropagationManagerImpl.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -63,6 +63,7 @@\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.MappingManager;\n+import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n@@ -228,8 +229,7 @@ public List<PropagationTask> getUserUpdateTasks(final WorkflowResult<Pair<UserPa\n             origPropByRes.merge(wfResult.getPropByRes());\n \n             Set<String> pwdResourceNames = new HashSet<>(userPatch.getPassword().getResources());\n-            Collection<String> currentResourceNames =\n-                    userDAO.findAllResourceNames(userDAO.authFind(userPatch.getKey()));\n+            Collection<String> currentResourceNames = userDAO.findAllResourceNames(userPatch.getKey());\n             pwdResourceNames.retainAll(currentResourceNames);\n             PropagationByResource pwdPropByRes = new PropagationByResource();\n             pwdPropByRes.addAll(ResourceOperation.UPDATE, pwdResourceNames);\n@@ -342,9 +342,11 @@ protected List<PropagationTask> createTasks(final Any<?> any,\n         virtualResources.addAll(propByRes.get(ResourceOperation.CREATE));\n         virtualResources.addAll(propByRes.get(ResourceOperation.UPDATE));\n         if (any instanceof User) {\n-            virtualResources.addAll(userDAO.findAllResourceNames((User) any));\n+            virtualResources.addAll(CollectionUtils.collect(\n+                    userDAO.findAllResources((User) any), EntityUtils.keyTransformer()));\n         } else if (any instanceof AnyObject) {\n-            virtualResources.addAll(anyObjectDAO.findAllResourceNames((AnyObject) any));\n+            virtualResources.addAll(CollectionUtils.collect(\n+                    anyObjectDAO.findAllResources((AnyObject) any), EntityUtils.keyTransformer()));\n         } else {\n             virtualResources.addAll(((Group) any).getResourceKeys());\n         }"},{"sha":"62277180ca55d01426b42a5144532396b404638d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPushResultHandler.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -21,6 +21,7 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.IteratorUtils;\n import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.syncope.common.lib.patch.AnyPatch;\n@@ -47,6 +48,7 @@\n import org.apache.syncope.core.provisioning.api.TimeoutException;\n import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePushResultHandler;\n+import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n@@ -267,7 +269,7 @@ private void doHandle(final Any<?> any) throws JobExecutionException {\n                             if (!profile.getTask().isPerformUpdate()) {\n                                 LOG.debug(\"PushTask not configured for update\");\n                             } else {\n-                                update(any, status);\n+                                update(any);\n                             }\n \n                             break;\n@@ -397,15 +399,17 @@ private ResourceOperation getResourceOperation(final MatchingRule rule) {\n         }\n     }\n \n-    private Any<?> update(final Any<?> any, final Boolean enabled) {\n+    private Any<?> update(final Any<?> any) {\n         boolean changepwd;\n         Collection<String> resourceKeys;\n         if (any instanceof User) {\n             changepwd = true;\n-            resourceKeys = userDAO.findAllResourceNames((User) any);\n+            resourceKeys = CollectionUtils.collect(\n+                    userDAO.findAllResources((User) any), EntityUtils.keyTransformer());\n         } else if (any instanceof AnyObject) {\n             changepwd = false;\n-            resourceKeys = anyObjectDAO.findAllResourceNames((AnyObject) any);\n+            resourceKeys = CollectionUtils.collect(\n+                    anyObjectDAO.findAllResources((AnyObject) any), EntityUtils.keyTransformer());\n         } else {\n             changepwd = false;\n             resourceKeys = ((Group) any).getResourceKeys();"},{"sha":"ef1e7320e18159ce8a6eb844933a882a3519681a","filename":"core/workflow-activiti/src/main/java/org/apache/syncope/core/workflow/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -50,6 +50,7 @@\n import org.activiti.engine.repository.ProcessDefinition;\n import org.activiti.engine.runtime.ProcessInstance;\n import org.activiti.engine.task.Task;\n+import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.ImmutablePair;\n@@ -69,6 +70,7 @@\n import org.apache.syncope.core.persistence.api.attrvalue.validation.ParsingValidationException;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n+import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.apache.syncope.core.workflow.activiti.spring.DomainProcessEngine;\n import org.apache.syncope.core.workflow.api.WorkflowDefinitionFormat;\n import org.apache.syncope.core.workflow.api.WorkflowException;\n@@ -264,7 +266,9 @@ public WorkflowResult<Pair<String, Boolean>> create(final UserTO userTO, final b\n         }\n \n         PropagationByResource propByRes = new PropagationByResource();\n-        propByRes.set(ResourceOperation.CREATE, userDAO.findAllResourceNames(user));\n+        propByRes.set(\n+                ResourceOperation.CREATE,\n+                CollectionUtils.collect(userDAO.findAllResources(user), EntityUtils.keyTransformer()));\n \n         saveForFormSubmit(user, userTO.getPassword(), propByRes);\n \n@@ -403,7 +407,9 @@ protected void doDelete(final User user) {\n         doExecuteTask(user, \"delete\", null);\n \n         PropagationByResource propByRes = new PropagationByResource();\n-        propByRes.set(ResourceOperation.DELETE, userDAO.findAllResourceNames(user));\n+        propByRes.set(\n+                ResourceOperation.DELETE,\n+                CollectionUtils.collect(userDAO.findAllResources(user), EntityUtils.keyTransformer()));\n \n         saveForFormSubmit(user, null, propByRes);\n "},{"sha":"997fd3b35092bc7c62994d1ce845af9e92eb73a9","filename":"core/workflow-activiti/src/main/java/org/apache/syncope/core/workflow/activiti/task/PasswordReset.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2Ftask%2FPasswordReset.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2Ftask%2FPasswordReset.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-activiti%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2Ftask%2FPasswordReset.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -18,12 +18,14 @@\n  */\n package org.apache.syncope.core.workflow.activiti.task;\n \n+import org.apache.commons.collections4.CollectionUtils;\n import org.apache.syncope.common.lib.patch.PasswordPatch;\n import org.apache.syncope.common.lib.patch.UserPatch;\n import org.apache.syncope.common.lib.types.PropagationByResource;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.data.UserDataBinder;\n+import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.apache.syncope.core.workflow.api.WorkflowException;\n import org.apache.syncope.core.workflow.activiti.ActivitiUserWorkflowAdapter;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -56,7 +58,9 @@ protected void doExecute(final String executionId) {\n         UserPatch userPatch = new UserPatch();\n         userPatch.setKey(user.getKey());\n         userPatch.setPassword(new PasswordPatch.Builder().\n-                onSyncope(true).resources(userDAO.findAllResourceNames(user)).value(password).build());\n+                onSyncope(true).\n+                resources(CollectionUtils.collect(userDAO.findAllResources(user), EntityUtils.keyTransformer())).\n+                value(password).build());\n \n         PropagationByResource propByRes = dataBinder.update(user, userPatch);\n "},{"sha":"46367e242f3e3c3364d7a49546b25b9c503eab3d","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/DefaultUserWorkflowAdapter.java","status":"modified","additions":9,"deletions":3,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FDefaultUserWorkflowAdapter.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -21,6 +21,7 @@\n import java.io.OutputStream;\n import java.util.Collections;\n import java.util.List;\n+import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.lang3.tuple.ImmutablePair;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.patch.PasswordPatch;\n@@ -32,6 +33,7 @@\n import org.apache.syncope.core.persistence.api.dao.ConfDAO;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n+import org.apache.syncope.core.provisioning.api.utils.EntityUtils;\n import org.apache.syncope.core.workflow.api.WorkflowDefinitionFormat;\n import org.apache.syncope.core.workflow.api.WorkflowException;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -84,8 +86,10 @@ public WorkflowResult<Pair<String, Boolean>> create(final UserTO userTO, final b\n         user.setStatus(status);\n         user = userDAO.save(user);\n \n-        final PropagationByResource propByRes = new PropagationByResource();\n-        propByRes.set(ResourceOperation.CREATE, userDAO.findAllResourceNames(user));\n+        PropagationByResource propByRes = new PropagationByResource();\n+        propByRes.set(\n+                ResourceOperation.CREATE,\n+                CollectionUtils.collect(userDAO.findAllResources(user), EntityUtils.keyTransformer()));\n \n         return new WorkflowResult<Pair<String, Boolean>>(\n                 new ImmutablePair<>(user.getKey(), propagateEnable), propByRes, \"create\");\n@@ -151,7 +155,9 @@ protected WorkflowResult<Pair<UserPatch, Boolean>> doConfirmPasswordReset(\n         UserPatch userPatch = new UserPatch();\n         userPatch.setKey(user.getKey());\n         userPatch.setPassword(new PasswordPatch.Builder().\n-                onSyncope(true).resources(userDAO.findAllResourceNames(user)).value(password).build());\n+                onSyncope(true).\n+                resources(CollectionUtils.collect(userDAO.findAllResources(user), EntityUtils.keyTransformer())).\n+                value(password).build());\n \n         return doUpdate(user, userPatch);\n     }"},{"sha":"8831559c6d32e35d0d8aa2b0d6fade882fbf70cf","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/AnyObjectDeprovisionProcessor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectDeprovisionProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectDeprovisionProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectDeprovisionProcessor.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -60,7 +60,7 @@ public void process(final Exchange exchange) {\n                 AnyTypeKind.ANY_OBJECT,\n                 key,\n                 propByRes,\n-                CollectionUtils.removeAll(anyObjectDAO.findAllResourceNames(anyObjectDAO.authFind(key)), resources));\n+                CollectionUtils.removeAll(anyObjectDAO.findAllResourceNames(key), resources));\n         PropagationReporter propagationReporter =\n                 ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n         taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);"},{"sha":"22195e369612a2ff07138966104251f8c436c7a9","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserDeleteProcessor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserDeleteProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserDeleteProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserDeleteProcessor.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -54,7 +54,7 @@ public void process(final Exchange exchange) throws Exception {\n         Boolean nullPriorityAsync = exchange.getProperty(\"nullPriorityAsync\", Boolean.class);\n \n         PropagationByResource propByRes = new PropagationByResource();\n-        propByRes.set(ResourceOperation.DELETE, userDAO.findAllResourceNames(userDAO.authFind(key)));\n+        propByRes.set(ResourceOperation.DELETE, userDAO.findAllResourceNames(key));\n \n         // Note here that we can only notify about \"delete\", not any other\n         // task defined in workflow process definition: this because this"},{"sha":"b0eab1561d95155116ae009f3fbfd10df50d20c0","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserDeprovisionProcessor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserDeprovisionProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserDeprovisionProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserDeprovisionProcessor.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -60,7 +60,7 @@ public void process(final Exchange exchange) {\n                 AnyTypeKind.USER,\n                 key,\n                 propByRes,\n-                CollectionUtils.removeAll(userDAO.findAllResourceNames(userDAO.authFind(key)), resources));\n+                CollectionUtils.removeAll(userDAO.findAllResourceNames(key), resources));\n         PropagationReporter propagationReporter =\n                 ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n         taskExecutor.execute(tasks, propagationReporter, nullPriorityAsync);"},{"sha":"171a19765ac93e1e36e2a6b9e9a3e0bd12173c89","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AnyObjectITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAnyObjectITCase.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -70,10 +70,10 @@ public void create() {\n         ConnObjectTO connObjectTO =\n                 resourceService.readConnObject(RESOURCE_NAME_DBSCRIPTED, anyObjectTO.getType(), anyObjectTO.getKey());\n         assertNotNull(connObjectTO);\n-        assertNotNull(connObjectTO.getPlainAttrMap().get(\"LOCATION\"));\n+        assertNotNull(connObjectTO.getAttrMap().get(\"LOCATION\"));\n         assertEquals(\n                 anyObjectTO.getPlainAttrMap().get(\"location\").getValues(),\n-                connObjectTO.getPlainAttrMap().get(\"LOCATION\").getValues());\n+                connObjectTO.getAttrMap().get(\"LOCATION\").getValues());\n     }\n \n     @Test"},{"sha":"00959a08df3cb1adff6cb0a10ea6e61b0cfa8ee9","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/GroupITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FGroupITCase.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -130,7 +130,7 @@ public void create() {\n         ConnObjectTO connObjectTO =\n                 resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.GROUP.name(), groupTO.getKey());\n         assertNotNull(connObjectTO);\n-        assertNotNull(connObjectTO.getPlainAttrMap().get(\"owner\"));\n+        assertNotNull(connObjectTO.getAttrMap().get(\"owner\"));\n \n         // SYNCOPE-515: remove ownership\n         GroupPatch groupPatch = new GroupPatch();"},{"sha":"893ab5ad8d3a141b8fb977269aa3e997598eb45e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PropagationTaskITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPropagationTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPropagationTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPropagationTaskITCase.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -149,7 +149,7 @@ public boolean evaluate(final MappingItemTO object) {\n             ConnObjectTO connObjectTO = resourceService.\n                     readConnObject(RESOURCE_NAME_DBSCRIPTED, anyObjectTO.getType(), anyObjectTO.getKey());\n             assertFalse(anyObjectTO.getPlainAttrMap().get(\"location\").getValues().get(0).endsWith(suffix));\n-            assertTrue(connObjectTO.getPlainAttrMap().get(\"LOCATION\").getValues().get(0).endsWith(suffix));\n+            assertTrue(connObjectTO.getAttrMap().get(\"LOCATION\").getValues().get(0).endsWith(suffix));\n         } finally {\n             resourceService.update(originalResource);\n         }"},{"sha":"b08fc3de6e161e3bf7aa14e75f60c26b8e885a80","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/PullTaskITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FPullTaskITCase.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -455,7 +455,7 @@ public boolean evaluate(final MappingItemTO object) {\n                     readConnObject(RESOURCE_NAME_DBSCRIPTED, anyObjectTO.getType(), anyObjectTO.getKey());\n             assertFalse(anyObjectTO.getPlainAttrMap().get(\"location\").getValues().get(0).\n                     startsWith(PrefixMappingItemTransformer.PREFIX));\n-            assertTrue(connObjectTO.getPlainAttrMap().get(\"LOCATION\").getValues().get(0).\n+            assertTrue(connObjectTO.getAttrMap().get(\"LOCATION\").getValues().get(0).\n                     startsWith(PrefixMappingItemTransformer.PREFIX));\n \n             // 3. unlink any existing printer and delete from Syncope (printer is now only on external resource)\n@@ -981,9 +981,9 @@ public void issueSYNCOPE313LDAP() throws Exception {\n             ConnObjectTO connObject =\n                     resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.USER.name(), user.getKey());\n             assertNotNull(getLdapRemoteObject(\n-                    connObject.getPlainAttrMap().get(Name.NAME).getValues().get(0),\n+                    connObject.getAttrMap().get(Name.NAME).getValues().get(0),\n                     oldCleanPassword,\n-                    connObject.getPlainAttrMap().get(Name.NAME).getValues().get(0)));\n+                    connObject.getAttrMap().get(Name.NAME).getValues().get(0)));\n \n             // 5. Update the LDAP Connector to retrieve passwords\n             ResourceTO ldapResource = resourceService.read(RESOURCE_NAME_LDAP);"},{"sha":"8fa5aca5c5d9399da990608a847e623b793ba65c","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ResourceITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FResourceITCase.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -604,7 +604,7 @@ public void listConnObjects() {\n \n                     @Override\n                     public String transform(final ConnObjectTO input) {\n-                        return input.getPlainAttrMap().get(\"__NAME__\").getValues().get(0);\n+                        return input.getAttrMap().get(\"__NAME__\").getValues().get(0);\n                     }\n                 }, read);\n "},{"sha":"4c2c6de3f8db63417daa9c5022eecda75ae3f69e","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/UserITCase.java","status":"modified","additions":60,"deletions":26,"changes":86,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FUserITCase.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -115,7 +115,7 @@ public class UserITCase extends AbstractITCase {\n     private static final FastDateFormat DATE_FORMAT = DateFormatUtils.ISO_DATE_FORMAT;\n \n     private boolean getBooleanAttribute(final ConnObjectTO connObjectTO, final String attrName) {\n-        return Boolean.parseBoolean(connObjectTO.getPlainAttrMap().get(attrName).getValues().get(0));\n+        return Boolean.parseBoolean(connObjectTO.getAttrMap().get(attrName).getValues().get(0));\n     }\n \n     public static UserTO getUniqueSampleTO(final String email) {\n@@ -1121,7 +1121,7 @@ public void groupAttrPropagation() {\n         ConnObjectTO connObjectTO =\n                 resourceService.readConnObject(RESOURCE_NAME_CSV, AnyTypeKind.USER.name(), actual.getKey());\n         assertNotNull(connObjectTO);\n-        assertEquals(\"sx-dx\", connObjectTO.getPlainAttrMap().get(\"THEIRGROUP\").getValues().get(0));\n+        assertEquals(\"sx-dx\", connObjectTO.getAttrMap().get(\"THEIRGROUP\").getValues().get(0));\n     }\n \n     @Test\n@@ -1341,7 +1341,7 @@ public void issueSYNCOPE267() {\n         ConnObjectTO connObjectTO =\n                 resourceService.readConnObject(RESOURCE_NAME_DBVIRATTR, AnyTypeKind.USER.name(), userTO.getKey());\n         assertNotNull(connObjectTO);\n-        assertEquals(\"virtualvalue\", connObjectTO.getPlainAttrMap().get(\"USERNAME\").getValues().get(0));\n+        assertEquals(\"virtualvalue\", connObjectTO.getAttrMap().get(\"USERNAME\").getValues().get(0));\n         // ----------------------------------\n \n         userTO = userService.read(userTO.getKey());\n@@ -1399,15 +1399,15 @@ public void issueSYNCOPE122() {\n \n         ConnObjectTO userOnDb = resourceService.readConnObject(\n                 RESOURCE_NAME_TESTDB, AnyTypeKind.USER.name(), userTO.getKey());\n-        final AttrTO pwdOnTestDbAttr = userOnDb.getPlainAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n+        final AttrTO pwdOnTestDbAttr = userOnDb.getAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDbAttr);\n         assertNotNull(pwdOnTestDbAttr.getValues());\n         assertFalse(pwdOnTestDbAttr.getValues().isEmpty());\n         final String pwdOnTestDb = pwdOnTestDbAttr.getValues().iterator().next();\n \n         ConnObjectTO userOnDb2 = resourceService.readConnObject(\n                 RESOURCE_NAME_TESTDB2, AnyTypeKind.USER.name(), userTO.getKey());\n-        final AttrTO pwdOnTestDb2Attr = userOnDb2.getPlainAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n+        final AttrTO pwdOnTestDb2Attr = userOnDb2.getAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDb2Attr);\n         assertNotNull(pwdOnTestDb2Attr.getValues());\n         assertFalse(pwdOnTestDb2Attr.getValues().isEmpty());\n@@ -1432,15 +1432,15 @@ public void issueSYNCOPE122() {\n \n         // 3c. verify that password *has* changed on testdb\n         userOnDb = resourceService.readConnObject(RESOURCE_NAME_TESTDB, AnyTypeKind.USER.name(), userTO.getKey());\n-        final AttrTO pwdOnTestDbAttrAfter = userOnDb.getPlainAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n+        final AttrTO pwdOnTestDbAttrAfter = userOnDb.getAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDbAttrAfter);\n         assertNotNull(pwdOnTestDbAttrAfter.getValues());\n         assertFalse(pwdOnTestDbAttrAfter.getValues().isEmpty());\n         assertNotEquals(pwdOnTestDb, pwdOnTestDbAttrAfter.getValues().iterator().next());\n \n         // 3d. verify that password hasn't changed on testdb2\n         userOnDb2 = resourceService.readConnObject(RESOURCE_NAME_TESTDB2, AnyTypeKind.USER.name(), userTO.getKey());\n-        final AttrTO pwdOnTestDb2AttrAfter = userOnDb2.getPlainAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n+        final AttrTO pwdOnTestDb2AttrAfter = userOnDb2.getAttrMap().get(OperationalAttributes.PASSWORD_NAME);\n         assertNotNull(pwdOnTestDb2AttrAfter);\n         assertNotNull(pwdOnTestDb2AttrAfter.getValues());\n         assertFalse(pwdOnTestDb2AttrAfter.getValues().isEmpty());\n@@ -1542,7 +1542,7 @@ public void mappingPurpose() {\n \n         ConnObjectTO connObjectTO =\n                 resourceService.readConnObject(RESOURCE_NAME_CSV, AnyTypeKind.USER.name(), userTO.getKey());\n-        assertNull(connObjectTO.getPlainAttrMap().get(\"email\"));\n+        assertNull(connObjectTO.getAttrMap().get(\"email\"));\n     }\n \n     @Test\n@@ -1627,7 +1627,7 @@ public void issueSYNCOPE354() {\n         ConnObjectTO connObj = resourceService.readConnObject(\n                 RESOURCE_NAME_LDAP, AnyTypeKind.GROUP.name(), groupTO.getKey());\n         assertNotNull(connObj);\n-        assertTrue(connObj.getPlainAttrMap().get(\"uniqueMember\").getValues().\n+        assertTrue(connObj.getAttrMap().get(\"uniqueMember\").getValues().\n                 contains(\"uid=\" + userTO.getUsername() + \",ou=people,o=isp\"));\n \n         // 4. remove membership\n@@ -1642,7 +1642,7 @@ public void issueSYNCOPE354() {\n         // 5. read group on resource, check that user DN was removed from uniqueMember\n         connObj = resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.GROUP.name(), groupTO.getKey());\n         assertNotNull(connObj);\n-        assertFalse(connObj.getPlainAttrMap().get(\"uniqueMember\").getValues().\n+        assertFalse(connObj.getAttrMap().get(\"uniqueMember\").getValues().\n                 contains(\"uid=\" + userTO.getUsername() + \",ou=people,o=isp\"));\n \n         // 6. restore original resource-ldap group mapping\n@@ -1681,10 +1681,10 @@ public void issueSYNCOPE357() throws IOException {\n         ConnObjectTO connObj = resourceService.readConnObject(\n                 RESOURCE_NAME_LDAP, AnyTypeKind.USER.name(), userTO.getKey());\n         assertNotNull(connObj);\n-        AttrTO registeredAddress = connObj.getPlainAttrMap().get(\"registeredAddress\");\n+        AttrTO registeredAddress = connObj.getAttrMap().get(\"registeredAddress\");\n         assertNotNull(registeredAddress);\n         assertEquals(userTO.getPlainAttrMap().get(\"obscure\").getValues(), registeredAddress.getValues());\n-        AttrTO jpegPhoto = connObj.getPlainAttrMap().get(\"jpegPhoto\");\n+        AttrTO jpegPhoto = connObj.getAttrMap().get(\"jpegPhoto\");\n         assertNotNull(jpegPhoto);\n         assertEquals(userTO.getPlainAttrMap().get(\"photo\").getValues(), jpegPhoto.getValues());\n \n@@ -2111,9 +2111,9 @@ public void issueSYNCOPE454() throws NamingException {\n \n         // 3. try (and succeed) to perform simple LDAP binding with provided password ('password123')\n         assertNotNull(getLdapRemoteObject(\n-                connObject.getPlainAttrMap().get(Name.NAME).getValues().get(0),\n+                connObject.getAttrMap().get(Name.NAME).getValues().get(0),\n                 \"password123\",\n-                connObject.getPlainAttrMap().get(Name.NAME).getValues().get(0)));\n+                connObject.getAttrMap().get(Name.NAME).getValues().get(0)));\n \n         // 4. update user without any password change request\n         UserPatch userPatch = new UserPatch();\n@@ -2125,9 +2125,9 @@ public void issueSYNCOPE454() throws NamingException {\n \n         // 5. try (and succeed again) to perform simple LDAP binding: password has not changed\n         assertNotNull(getLdapRemoteObject(\n-                connObject.getPlainAttrMap().get(Name.NAME).getValues().get(0),\n+                connObject.getAttrMap().get(Name.NAME).getValues().get(0),\n                 \"password123\",\n-                connObject.getPlainAttrMap().get(Name.NAME).getValues().get(0)));\n+                connObject.getAttrMap().get(Name.NAME).getValues().get(0)));\n     }\n \n     @Test\n@@ -2145,7 +2145,7 @@ public void issueSYNCOPE493() {\n                 resourceService.readConnObject(RESOURCE_NAME_WS1, AnyTypeKind.USER.name(), userTO.getKey());\n         assertNotNull(actual);\n         // check if mapping attribute with purpose NONE really hasn't been propagated\n-        assertNull(actual.getPlainAttrMap().get(\"NAME\"));\n+        assertNull(actual.getAttrMap().get(\"NAME\"));\n \n         // 2.  update resource ws-target-resource-1\n         ResourceTO ws1 = resourceService.read(RESOURCE_NAME_WS1);\n@@ -2185,8 +2185,8 @@ public void issueSYNCOPE493() {\n         ConnObjectTO newUser =\n                 resourceService.readConnObject(RESOURCE_NAME_WS1, AnyTypeKind.USER.name(), userTO.getKey());\n \n-        assertNotNull(newUser.getPlainAttrMap().get(\"NAME\"));\n-        assertEquals(\"firstnameNew\", newUser.getPlainAttrMap().get(\"NAME\").getValues().get(0));\n+        assertNotNull(newUser.getAttrMap().get(\"NAME\"));\n+        assertEquals(\"firstnameNew\", newUser.getAttrMap().get(\"NAME\").getValues().get(0));\n \n         // 4.  restore resource ws-target-resource-1 mapping\n         ws1NewUMapping = newWs1.getProvision(AnyTypeKind.USER.name()).getMapping();\n@@ -2275,9 +2275,9 @@ public void issueSYNCOPE505LDAP() throws Exception {\n                 resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.USER.name(), user.getKey());\n \n         assertNotNull(getLdapRemoteObject(\n-                connObject.getPlainAttrMap().get(Name.NAME).getValues().get(0),\n+                connObject.getAttrMap().get(Name.NAME).getValues().get(0),\n                 \"security123\",\n-                connObject.getPlainAttrMap().get(Name.NAME).getValues().get(0)));\n+                connObject.getAttrMap().get(Name.NAME).getValues().get(0)));\n \n         // 5. Remove LDAPPasswordPropagationActions\n         resourceTO = resourceService.read(RESOURCE_NAME_LDAP);\n@@ -2320,7 +2320,7 @@ public void issueSYNCOPE391() {\n         assertNotNull(connObjectTO);\n \n         // check if password has not changed\n-        assertEquals(\"password0\", connObjectTO.getPlainAttrMap().\n+        assertEquals(\"password0\", connObjectTO.getAttrMap().\n                 get(OperationalAttributes.PASSWORD_NAME).getValues().get(0));\n         assertNull(userTO.getPassword());\n \n@@ -2342,7 +2342,7 @@ public void issueSYNCOPE391() {\n         assertNotNull(connObjectTO);\n \n         // check if password has been propagated and that saved userTO's password is null\n-        assertEquals(\"passwordTESTNULL1\", connObjectTO.getPlainAttrMap().\n+        assertEquals(\"passwordTESTNULL1\", connObjectTO.getAttrMap().\n                 get(OperationalAttributes.PASSWORD_NAME).getValues().get(0));\n         assertNull(userTO.getPassword());\n \n@@ -2363,7 +2363,7 @@ public void issueSYNCOPE391() {\n         assertNotNull(connObjectTO);\n \n         // check if password has been correctly propagated on Syncope and resource-csv as usual\n-        assertEquals(\"passwordTESTNULL1\", connObjectTO.getPlainAttrMap().\n+        assertEquals(\"passwordTESTNULL1\", connObjectTO.getAttrMap().\n                 get(OperationalAttributes.PASSWORD_NAME).getValues().get(0));\n         Pair<Map<String, Set<String>>, UserTO> self =\n                 clientFactory.create(userTO.getUsername(), \"passwordTESTNULL1\").self();\n@@ -2420,7 +2420,7 @@ public void issueSYNCOPE647() {\n         ConnObjectTO connObjectTO =\n                 resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.USER.name(), actual.getKey());\n         assertNotNull(connObjectTO);\n-        assertEquals(\"postalAddress\", connObjectTO.getPlainAttrMap().get(\"postalAddress\").getValues().get(0));\n+        assertEquals(\"postalAddress\", connObjectTO.getAttrMap().get(\"postalAddress\").getValues().get(0));\n \n         UserPatch userPatch = new UserPatch();\n         userPatch.setKey(actual.getKey());\n@@ -2430,7 +2430,7 @@ public void issueSYNCOPE647() {\n \n         connObjectTO = resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.USER.name(), actual.getKey());\n         assertNotNull(connObjectTO);\n-        assertEquals(\"newPostalAddress\", connObjectTO.getPlainAttrMap().get(\"postalAddress\").getValues().get(0));\n+        assertEquals(\"newPostalAddress\", connObjectTO.getAttrMap().get(\"postalAddress\").getValues().get(0));\n     }\n \n     @Test\n@@ -2554,4 +2554,38 @@ public void issueSYNCOPE710() {\n         assertEquals(1, result.getPropagationStatuses().size());\n         assertEquals(RESOURCE_NAME_TESTDB, result.getPropagationStatuses().get(0).getResource());\n     }\n+\n+    @Test\n+    public void issueSYNCOPE881() {\n+        // 1. create group and assign LDAP\n+        GroupTO group = GroupITCase.getSampleTO(\"syncope881G\");\n+        group.getVirAttrs().add(attrTO(\"rvirtualdata\", \"rvirtualvalue\"));\n+\n+        group = createGroup(group).getEntity();\n+        assertNotNull(group);\n+        assertNotNull(resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.GROUP.name(), group.getKey()));\n+\n+        // 2. create user and assign such group\n+        UserTO user = getUniqueSampleTO(\"syncope881U@apache.org\");\n+        user.getMemberships().clear();\n+        user.getMemberships().add(new MembershipTO.Builder().group(group.getKey()).build());\n+\n+        user = createUser(user).getEntity();\n+        assertNotNull(user);\n+\n+        // 3. verify that user is in LDAP\n+        ConnObjectTO connObject =\n+                resourceService.readConnObject(RESOURCE_NAME_LDAP, AnyTypeKind.USER.name(), user.getKey());\n+        assertNotNull(connObject);\n+        AttrTO userDn = connObject.getAttrMap().get(Name.NAME);\n+        assertNotNull(userDn);\n+        assertEquals(1, userDn.getValues().size());\n+        assertNotNull(getLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD, userDn.getValues().get(0)));\n+\n+        // 4. remove user\n+        userService.delete(user.getKey());\n+\n+        // 5. verify that user is not in LDAP anynmore\n+        assertNull(getLdapRemoteObject(RESOURCE_LDAP_ADMIN_DN, RESOURCE_LDAP_ADMIN_PWD, userDn.getValues().get(0)));\n+    }\n }"},{"sha":"3c439ec8014a4325a2c9134fa8c990c84909700d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/VirAttrITCase.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/629d18f2c62e72894676d9106aabea31954ca2e8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/629d18f2c62e72894676d9106aabea31954ca2e8/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java?ref=629d18f2c62e72894676d9106aabea31954ca2e8","patch":"@@ -137,7 +137,7 @@ public void issueSYNCOPE260() {\n \n         ConnObjectTO connObjectTO =\n                 resourceService.readConnObject(RESOURCE_NAME_WS2, AnyTypeKind.USER.name(), userTO.getKey());\n-        assertEquals(\"virtualvalue\", connObjectTO.getPlainAttrMap().get(\"COMPANYNAME\").getValues().get(0));\n+        assertEquals(\"virtualvalue\", connObjectTO.getAttrMap().get(\"COMPANYNAME\").getValues().get(0));\n         // ----------------------------------\n \n         // ----------------------------------\n@@ -155,7 +155,7 @@ public void issueSYNCOPE260() {\n         userTO = result.getEntity();\n \n         connObjectTO = resourceService.readConnObject(RESOURCE_NAME_WS2, AnyTypeKind.USER.name(), userTO.getKey());\n-        assertEquals(\"virtualvalue2\", connObjectTO.getPlainAttrMap().get(\"COMPANYNAME\").getValues().get(0));\n+        assertEquals(\"virtualvalue2\", connObjectTO.getAttrMap().get(\"COMPANYNAME\").getValues().get(0));\n         // ----------------------------------\n \n         // ----------------------------------\n@@ -169,7 +169,7 @@ public void issueSYNCOPE260() {\n         assertEquals(\"suspended\", userTO.getStatus());\n \n         connObjectTO = resourceService.readConnObject(RESOURCE_NAME_WS2, AnyTypeKind.USER.name(), userTO.getKey());\n-        assertEquals(\"virtualvalue2\", connObjectTO.getPlainAttrMap().get(\"COMPANYNAME\").getValues().get(0));\n+        assertEquals(\"virtualvalue2\", connObjectTO.getAttrMap().get(\"COMPANYNAME\").getValues().get(0));\n \n         statusPatch = new StatusPatch();\n         statusPatch.setKey(userTO.getKey());\n@@ -179,7 +179,7 @@ public void issueSYNCOPE260() {\n         assertEquals(\"active\", userTO.getStatus());\n \n         connObjectTO = resourceService.readConnObject(RESOURCE_NAME_WS2, AnyTypeKind.USER.name(), userTO.getKey());\n-        assertEquals(\"virtualvalue2\", connObjectTO.getPlainAttrMap().get(\"COMPANYNAME\").getValues().get(0));\n+        assertEquals(\"virtualvalue2\", connObjectTO.getAttrMap().get(\"COMPANYNAME\").getValues().get(0));\n         // ----------------------------------\n \n         // ----------------------------------\n@@ -197,11 +197,11 @@ public void issueSYNCOPE260() {\n         userTO = result.getEntity();\n \n         connObjectTO = resourceService.readConnObject(RESOURCE_NAME_WS2, AnyTypeKind.USER.name(), userTO.getKey());\n-        assertEquals(\"Surname2\", connObjectTO.getPlainAttrMap().get(\"SURNAME\").getValues().get(0));\n+        assertEquals(\"Surname2\", connObjectTO.getAttrMap().get(\"SURNAME\").getValues().get(0));\n \n         // virtual attribute value did not change\n-        assertFalse(connObjectTO.getPlainAttrMap().get(\"COMPANYNAME\").getValues().isEmpty());\n-        assertEquals(\"virtualvalue2\", connObjectTO.getPlainAttrMap().get(\"COMPANYNAME\").getValues().get(0));\n+        assertFalse(connObjectTO.getAttrMap().get(\"COMPANYNAME\").getValues().isEmpty());\n+        assertEquals(\"virtualvalue2\", connObjectTO.getAttrMap().get(\"COMPANYNAME\").getValues().get(0));\n         // ----------------------------------\n     }\n "}]}