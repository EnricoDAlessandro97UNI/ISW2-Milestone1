{"sha":"dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRiY2ZjZGQ3MWY0NDgwM2UzNDNmNDYwMjhlNzBkYzc1YjZlOGZmNmE=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2012-02-10T16:13:33Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2012-02-10T16:13:33Z"},"message":"Update issue 217\ngetSchemaName refactoring and bug-fix; ResourceModalPage refactoring; User status on resource provided at user edit time.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247399 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2fc37c02d6fde1738ca1cf341475874031af48c7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2fc37c02d6fde1738ca1cf341475874031af48c7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/comments","author":null,"committer":null,"parents":[{"sha":"1611dc592acc3f083765a2d84c9109162e5c2c98","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1611dc592acc3f083765a2d84c9109162e5c2c98","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1611dc592acc3f083765a2d84c9109162e5c2c98"}],"stats":{"total":5056,"additions":3086,"deletions":1970},"files":[{"sha":"bc9a9ad6e0612f7d454b02583c5713b18045f9af","filename":"client/src/main/java/org/syncope/client/to/ConnBundleTO.java","status":"modified","additions":1,"deletions":23,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnBundleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnBundleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnBundleTO.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -14,10 +14,10 @@\n  */\n package org.syncope.client.to;\n \n-import org.syncope.types.ConnConfPropSchema;\n import java.util.ArrayList;\n import java.util.List;\n import org.syncope.client.AbstractBaseBean;\n+import org.syncope.types.ConnConfPropSchema;\n \n public class ConnBundleTO extends AbstractBaseBean {\n \n@@ -84,26 +84,4 @@ public String getVersion() {\n     public void setVersion(String version) {\n         this.version = version;\n     }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        // needed into the administration console\n-        if (obj instanceof ConnBundleTO) {\n-            return toString().equals(obj.toString());\n-        } else {\n-            return false;\n-        }\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        // needed into the administration console\n-        return toString().hashCode();\n-    }\n-\n-    @Override\n-    public String toString() {\n-        // needed into the administration console\n-        return bundleName + \"#\" + version;\n-    }\n }"},{"sha":"7d6bec518818554755261a54aff23dee4a12675f","filename":"client/src/main/java/org/syncope/client/to/ConnInstanceTO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnInstanceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnInstanceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConnInstanceTO.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -14,21 +14,21 @@\n  */\n package org.syncope.client.to;\n \n-import org.syncope.types.ConnConfProperty;\n import java.util.EnumSet;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Map;\n import java.util.Set;\n import org.codehaus.jackson.annotate.JsonIgnore;\n import org.syncope.client.AbstractBaseBean;\n+import org.syncope.types.ConnConfProperty;\n import org.syncope.types.ConnectorCapability;\n \n public class ConnInstanceTO extends AbstractBaseBean {\n \n     private static final long serialVersionUID = 2707778645445168671L;\n \n-    private Long id;\n+    private long id;\n \n     private String bundleName;\n \n@@ -49,11 +49,11 @@ public ConnInstanceTO() {\n         capabilities = EnumSet.noneOf(ConnectorCapability.class);\n     }\n \n-    public Long getId() {\n+    public long getId() {\n         return id;\n     }\n \n-    public void setId(Long id) {\n+    public void setId(long id) {\n         this.id = id;\n     }\n "},{"sha":"e568a688d2eab34102250096906de8543d26eed2","filename":"client/src/main/java/org/syncope/client/to/ResourceTO.java","status":"modified","additions":6,"deletions":8,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FResourceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FResourceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FResourceTO.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -18,7 +18,6 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-\n import org.syncope.client.AbstractBaseBean;\n import org.syncope.types.ConnConfProperty;\n import org.syncope.types.PropagationMode;\n@@ -70,13 +69,13 @@ public class ResourceTO extends AbstractBaseBean {\n \n     private Long syncPolicy;\n \n-    private Set<ConnConfProperty> connectorConfigurationProperties;\n+    private Set<ConnConfProperty> connConfProperties;\n \n     private String syncToken;\n \n     public ResourceTO() {\n         mappings = new ArrayList<SchemaMappingTO>();\n-        connectorConfigurationProperties = new HashSet<ConnConfProperty>();\n+        connConfProperties = new HashSet<ConnConfProperty>();\n         propagationMode = PropagationMode.TWO_PHASES;\n         propagationPriority = 0;\n \n@@ -206,14 +205,13 @@ public void setSyncPolicy(Long syncPolicy) {\n         this.syncPolicy = syncPolicy;\n     }\n \n-    public Set<ConnConfProperty> getConnectorConfigurationProperties() {\n-        return connectorConfigurationProperties;\n+    public Set<ConnConfProperty> getConnConfProperties() {\n+        return connConfProperties;\n     }\n \n     public void setConnectorConfigurationProperties(\n-            final Set<ConnConfProperty> connectorConfigurationProperties) {\n-        this.connectorConfigurationProperties =\n-                connectorConfigurationProperties;\n+            final Set<ConnConfProperty> connConfProperties) {\n+        this.connConfProperties = connConfProperties;\n     }\n \n     public TraceLevel getSyncTraceLevel() {"},{"sha":"60983b3c857d1225268492be90bb360f328e9a7b","filename":"client/src/main/java/org/syncope/client/to/UserTO.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FUserTO.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -33,6 +33,8 @@ public class UserTO extends AbstractAttributableTO {\n \n     private List<MembershipTO> memberships;\n \n+    private List<ConnObjectTO> connObjectTOs;\n+\n     private String status;\n \n     private String token;\n@@ -55,6 +57,7 @@ public UserTO() {\n         super();\n \n         memberships = new ArrayList<MembershipTO>();\n+        connObjectTOs = new ArrayList<ConnObjectTO>();\n         propagationStatusMap = new HashMap<String, PropagationTaskExecStatus>();\n     }\n \n@@ -185,6 +188,14 @@ public void setPropagationStatusMap(\n         }\n     }\n \n+    public List<ConnObjectTO> getConnObjectTOs() {\n+        return connObjectTOs;\n+    }\n+\n+    public void setConnObjectTOs(final List<ConnObjectTO> connObjectTOs) {\n+        this.connObjectTOs = connObjectTOs;\n+    }\n+\n     @Override\n     public String toString() {\n         return new ReflectionToStringBuilder(this,"},{"sha":"cdf488a72893f9bf7dce597307dd038eb4ee7638","filename":"console/src/main/java/org/syncope/console/pages/BaseModalPage.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -44,4 +44,8 @@ public BaseModalPage() {\n         feedbackPanel.setOutputMarkupId(true);\n         add(feedbackPanel);\n     }\n+\n+    public FeedbackPanel getFeedbackPanel() {\n+        return feedbackPanel;\n+    }\n }"},{"sha":"fe55850a8bbdd9700384c95ab4bf88b42c3942eb","filename":"console/src/main/java/org/syncope/console/pages/BasePage.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -82,8 +82,7 @@ public BasePage() {\n     }\n \n     /**\n-     * Constructor that is invoked when page is invoked without a\n-     * session.\n+     * Constructor that is invoked when page is invoked without a session.\n      *\n      * @param PageParameters parameters\n      */\n@@ -171,12 +170,11 @@ public void onClick(final AjaxRequestTarget target) {\n \n                                         @Override\n                                         public Page createPage() {\n-                                            return new UserModalPage(\n+                                            return new UserRequestModalPage(\n                                                     BasePage.this.\n                                                     getPageReference(),\n                                                     editProfileModalWin,\n-                                                    userTO,\n-                                                    UserModalPage.Mode.SELF);\n+                                                    userTO);\n                                         }\n                                     });\n \n@@ -213,6 +211,7 @@ public void setModalResult(final boolean operationResult) {\n \n     /**\n      * Set a WindowClosedCallback for a ModalWindow instance.\n+     *\n      * @param window window\n      * @param container container\n      */"},{"sha":"4fb42587f443dfb3d7947c6df2520e5b0e1bc6e5","filename":"console/src/main/java/org/syncope/console/pages/ConnectorModalPage.java","status":"modified","additions":108,"deletions":102,"changes":210,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -18,11 +18,10 @@\n \n import java.util.ArrayList;\n import java.util.Arrays;\n-import java.util.Collections;\n import java.util.EnumSet;\n import java.util.HashSet;\n import java.util.List;\n-\n+import org.apache.commons.lang.StringUtils;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n@@ -48,7 +47,6 @@\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.springframework.beans.BeanUtils;\n import org.springframework.util.ClassUtils;\n import org.syncope.client.to.ConnBundleTO;\n import org.syncope.client.to.ConnInstanceTO;\n@@ -96,80 +94,52 @@ public class ConnectorModalPage extends BaseModalPage {\n \n     private CheckBoxMultipleChoice capabilitiesPalette;\n \n-    private ConnBundleTO selectedBundleTO = new ConnBundleTO();\n-\n     private WebMarkupContainer propertiesContainer;\n \n     private List<ConnectorCapability> selectedCapabilities;\n \n+    private ConnBundleTO bundleTO;\n+\n+    private List<ConnConfProperty> properties;\n+\n     public ConnectorModalPage(\n             final PageReference callerPageRef,\n             final ModalWindow window,\n-            final ConnInstanceTO connectorTO,\n-            final boolean createFlag) {\n+            final ConnInstanceTO connectorTO) {\n \n         super();\n \n-        selectedCapabilities = new ArrayList(createFlag\n+        selectedCapabilities = new ArrayList(connectorTO.getId() == 0\n                 ? EnumSet.noneOf(ConnectorCapability.class)\n                 : connectorTO.getCapabilities());\n \n-        final IModel<List<ConnBundleTO>> bundles =\n-                new LoadableDetachableModel<List<ConnBundleTO>>() {\n+        final IModel<List<ConnectorCapability>> capabilities =\n+                new LoadableDetachableModel<List<ConnectorCapability>>() {\n \n                     private static final long serialVersionUID =\n                             5275935387613157437L;\n \n                     @Override\n-                    protected List<ConnBundleTO> load() {\n-                        return restClient.getAllBundles();\n+                    protected List<ConnectorCapability> load() {\n+                        return Arrays.asList(ConnectorCapability.values());\n                     }\n                 };\n \n-        IModel<List<ConnConfProperty>> selectedBundleProperties =\n-                new LoadableDetachableModel<List<ConnConfProperty>>() {\n+        final IModel<List<ConnBundleTO>> bundles =\n+                new LoadableDetachableModel<List<ConnBundleTO>>() {\n \n                     private static final long serialVersionUID =\n                             5275935387613157437L;\n \n                     @Override\n-                    protected List<ConnConfProperty> load() {\n-                        List<ConnConfProperty> result;\n-\n-                        if (createFlag) {\n-                            connectorTO.setConnectorName(\n-                                    selectedBundleTO.getConnectorName());\n-                            connectorTO.setVersion(\n-                                    selectedBundleTO.getVersion());\n-\n-                            result = new ArrayList<ConnConfProperty>();\n-                            ConnConfProperty propertyTO;\n-\n-                            for (ConnConfPropSchema key :\n-                                    selectedBundleTO.getProperties()) {\n-\n-                                propertyTO = new ConnConfProperty();\n-                                propertyTO.setSchema(key);\n-\n-                                result.add(propertyTO);\n-                            }\n-                        } else {\n-                            BeanUtils.copyProperties(\n-                                    connectorTO, selectedBundleTO, new String[]{\n-                                        \"id\", \"configuration\", \"capabilities\"});\n-\n-                            result = new ArrayList<ConnConfProperty>(\n-                                    connectorTO.getConfiguration());\n-                        }\n-\n-                        if (result != null && !result.isEmpty()) {\n-                            Collections.sort(result);\n-                        }\n-\n-                        return result;\n+                    protected List<ConnBundleTO> load() {\n+                        return restClient.getAllBundles();\n                     }\n                 };\n \n+        bundleTO = getSelectedBundleTO(bundles.getObject(), connectorTO);\n+        properties = getProperties(bundleTO, connectorTO);\n+\n         final AjaxTextFieldPanel connectorName = new AjaxTextFieldPanel(\n                 \"connectorName\",\n                 \"connector name\",\n@@ -199,7 +169,7 @@ protected List<ConnConfProperty> load() {\n \n         final AjaxDropDownChoicePanel<ConnBundleTO> bundle =\n                 new AjaxDropDownChoicePanel<ConnBundleTO>(\n-                \"bundle\", \"bundle\", new Model(null), true);\n+                \"bundle\", \"bundle\", new Model<ConnBundleTO>(bundleTO), false);\n \n         bundle.setStyleShet(\"long_dynamicsize\");\n \n@@ -219,7 +189,7 @@ public Object getDisplayValue(final ConnBundleTO object) {\n             public String getIdValue(final ConnBundleTO object,\n                     final int index) {\n                 // idValue must include version as well in order to cope\n-                //with multiple version of the same bundle.\n+                // with multiple version of the same bundle.\n                 return object.getBundleName() + \"#\" + object.getVersion();\n             }\n         });\n@@ -238,13 +208,14 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                         //reset all informations stored in connectorTO\n                         connectorTO.setConfiguration(\n                                 new HashSet<ConnConfProperty>());\n-                        DropDownChoice bundleChoice =\n-                                (DropDownChoice) bundle.getField();\n-                        bundleChoice.setNullValid(false);\n+\n+                        ((DropDownChoice) bundle.getField()).setNullValid(false);\n                         target.add(bundle.getField());\n-                        target.add(propertiesContainer);\n+\n                         target.add(connectorName);\n                         target.add(version);\n+\n+                        target.add(propertiesContainer);\n                     }\n                 });\n \n@@ -254,12 +225,18 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             @Override\n             public ConnBundleTO getObject() {\n-                return selectedBundleTO;\n+                return bundleTO;\n             }\n \n             @Override\n             public void setObject(final ConnBundleTO object) {\n-                selectedBundleTO = object;\n+                if (object != null && connectorTO != null) {\n+                    connectorTO.setBundleName(object.getBundleName());\n+                    connectorTO.setVersion(object.getVersion());\n+                    connectorTO.setConnectorName(object.getConnectorName());\n+                    properties = getProperties(object, connectorTO);\n+                    bundleTO = object;\n+                }\n             }\n \n             @Override\n@@ -268,10 +245,11 @@ public void detach() {\n         });\n \n         bundle.addRequiredLabel();\n-        bundle.setEnabled(createFlag);\n+        bundle.setEnabled(connectorTO.getId() == 0);\n \n-        final ListView<ConnConfProperty> propView = new ListView<ConnConfProperty>(\n-                \"connectorProperties\", selectedBundleProperties) {\n+        final ListView<ConnConfProperty> view = new ListView<ConnConfProperty>(\n+                \"connectorProperties\",\n+                new PropertyModel(this, \"properties\")) {\n \n             private static final long serialVersionUID =\n                     9101744072914090143L;\n@@ -283,8 +261,7 @@ protected void populateItem(\n \n                 final Label label = new Label(\"connPropAttrSchema\",\n                         property.getSchema().getDisplayName() == null\n-                        || property.getSchema().getDisplayName().\n-                        isEmpty()\n+                        || property.getSchema().getDisplayName().isEmpty()\n                         ? property.getSchema().getName()\n                         : property.getSchema().getDisplayName());\n \n@@ -400,10 +377,10 @@ protected void populateItem(\n \n         propertiesContainer = new WebMarkupContainer(\"container\");\n         propertiesContainer.setOutputMarkupId(true);\n-\n         propertiesContainer.add(connectorPropForm);\n+\n         connectorForm.add(propertiesContainer);\n-        connectorPropForm.add(propView);\n+        connectorPropForm.add(view);\n \n         final AjaxLink check =\n                 new IndicatingAjaxLink(\"check\", new ResourceModel(\"check\")) {\n@@ -414,17 +391,16 @@ protected void populateItem(\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n \n-                        connectorTO.setBundleName(\n-                                selectedBundleTO.getBundleName());\n-                        connectorTO.setVersion(selectedBundleTO.getVersion());\n-\n-                            if (restClient.check(connectorTO).booleanValue()) {\n-                                info(getString(\"success_connection\"));\n-                            } else {\n-                                error(getString(\"error_connection\"));\n-                            }\n-                            \n-                            target.add(feedbackPanel);\n+                        connectorTO.setBundleName(bundleTO.getBundleName());\n+                        connectorTO.setVersion(bundleTO.getVersion());\n+\n+                        if (restClient.check(connectorTO).booleanValue()) {\n+                            info(getString(\"success_connection\"));\n+                        } else {\n+                            error(getString(\"error_connection\"));\n+                        }\n+\n+                        target.add(feedbackPanel);\n                     }\n                 };\n \n@@ -439,38 +415,34 @@ public void onClick(final AjaxRequestTarget target) {\n             protected void onSubmit(final AjaxRequestTarget target,\n                     final Form form) {\n \n-                final ConnInstanceTO connector =\n+                final ConnInstanceTO conn =\n                         (ConnInstanceTO) form.getDefaultModelObject();\n \n-                ConnBundleTO bundleTO = (ConnBundleTO) bundle.getModelObject();\n-                connector.setBundleName(bundleTO.getBundleName());\n+                conn.setBundleName(bundleTO.getBundleName());\n \n                 // Set the model object's capabilites to\n                 // capabilitiesPalette's converted Set\n                 if (!selectedCapabilities.isEmpty()) {\n                     // exception if selectedCapabilities is empy\n-                    connector.setCapabilities(\n-                            EnumSet.copyOf(selectedCapabilities));\n+                    conn.setCapabilities(EnumSet.copyOf(selectedCapabilities));\n                 } else {\n-                    connector.setCapabilities(\n+                    conn.setCapabilities(\n                             EnumSet.noneOf(ConnectorCapability.class));\n                 }\n                 try {\n-                    if (createFlag) {\n-                        restClient.create(connector);\n+                    if (connectorTO.getId() == 0) {\n+                        restClient.create(conn);\n                     } else {\n-                        restClient.update(connector);\n+                        restClient.update(conn);\n                     }\n \n                     ((Resources) callerPageRef.getPage()).setModalResult(true);\n                     window.close(target);\n                 } catch (SyncopeClientCompositeErrorException e) {\n                     error(getString(\"error\") + \":\" + e.getMessage());\n                     target.add(feedbackPanel);\n-                    ((Resources) callerPageRef.getPage()).setModalResult(\n-                            false);\n-                    LOG.error(\"While creating or updating connector \"\n-                            + connector);\n+                    ((Resources) callerPageRef.getPage()).setModalResult(false);\n+                    LOG.error(\"While creating or updating connector {}\", conn);\n                 }\n             }\n \n@@ -482,30 +454,17 @@ protected void onError(final AjaxRequestTarget target,\n             }\n         };\n \n-        String allowedRoles = createFlag\n+        String roles = connectorTO.getId() == 0\n                 ? xmlRolesReader.getAllAllowedRoles(\"Connectors\", \"create\")\n                 : xmlRolesReader.getAllAllowedRoles(\"Connectors\", \"update\");\n \n-        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE,\n-                allowedRoles);\n+        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE, roles);\n \n         connectorForm.add(connectorName);\n         connectorForm.add(displayName);\n         connectorForm.add(bundle);\n         connectorForm.add(version);\n \n-        final IModel<List<ConnectorCapability>> capabilities =\n-                new LoadableDetachableModel<List<ConnectorCapability>>() {\n-\n-                    private static final long serialVersionUID =\n-                            5275935387613157437L;\n-\n-                    @Override\n-                    protected List<ConnectorCapability> load() {\n-                        return Arrays.asList(ConnectorCapability.values());\n-                    }\n-                };\n-\n         capabilitiesPalette = new CheckBoxMultipleChoice(\"capabilitiesPalette\",\n                 new PropertyModel(this, \"selectedCapabilities\"), capabilities);\n         connectorForm.add(capabilitiesPalette);\n@@ -514,4 +473,51 @@ protected List<ConnectorCapability> load() {\n \n         add(connectorForm);\n     }\n+\n+    private ConnBundleTO getSelectedBundleTO(\n+            final List<ConnBundleTO> bundles, final ConnInstanceTO connTO) {\n+        // -------------------------------------\n+        // Manage bundle and connector beans\n+        // -------------------------------------\n+\n+        if (connTO != null\n+                && StringUtils.isNotBlank(connTO.getBundleName())\n+                && StringUtils.isNotBlank(connTO.getVersion())) {\n+\n+            for (ConnBundleTO to : bundles) {\n+                if (to.getVersion().equals(connTO.getVersion())\n+                        && to.getBundleName().equals(connTO.getBundleName())) {\n+\n+                    connTO.setConnectorName(to.getConnectorName());\n+                    connTO.setVersion(to.getVersion());\n+\n+                    return to;\n+                }\n+            }\n+        }\n+\n+        return null;\n+    }\n+\n+    private List<ConnConfProperty> getProperties(\n+            final ConnBundleTO bundleTO, final ConnInstanceTO connTO) {\n+\n+        // -------------------------------------\n+        // Manage bundle properties\n+        // -------------------------------------\n+        final List<ConnConfProperty> props = new ArrayList<ConnConfProperty>();\n+\n+        if (connTO.getId() == 0 && bundleTO != null) {\n+            for (ConnConfPropSchema key : bundleTO.getProperties()) {\n+                final ConnConfProperty propertyTO = new ConnConfProperty();\n+                propertyTO.setSchema(key);\n+                props.add(propertyTO);\n+            }\n+        } else {\n+            props.addAll(connTO.getConfiguration());\n+        }\n+        // -------------------------------------\n+\n+        return props;\n+    }\n }"},{"sha":"a631fffab303c899dae20fb54f79663a9b77b0be","filename":"console/src/main/java/org/syncope/console/pages/EditUserModalPage.java","status":"added","additions":98,"deletions":0,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FEditUserModalPage.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -0,0 +1,98 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.console.pages;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.syncope.client.mod.UserMod;\n+import org.syncope.client.to.UserTO;\n+import org.syncope.client.util.AttributableOperations;\n+import org.syncope.console.pages.panels.AccountInformationPanel;\n+import org.syncope.console.pages.panels.StatusPanel;\n+import org.syncope.console.pages.panels.StatusPanel.StatusBean;\n+import org.syncope.console.rest.UserRestClient;\n+\n+/**\n+ * Modal window with User form.\n+ */\n+public class EditUserModalPage extends UserModalPage {\n+\n+    @SpringBean\n+    private UserRestClient userRestClient;\n+\n+    private UserTO initialUserTO = null;\n+\n+    public EditUserModalPage(\n+            final PageReference callerPageRef,\n+            final ModalWindow window,\n+            final UserTO userTO) {\n+\n+        super(callerPageRef, window, userTO, Mode.ADMIN, true);\n+\n+        this.initialUserTO = AttributableOperations.clone(userTO);\n+\n+        Form form = setupEditPanel();\n+\n+        // add resource assignment details in case of update\n+        if (userTO.getId() != 0) {\n+            final List<StatusBean> statuses = new ArrayList<StatusBean>();\n+\n+            form.addOrReplace(new StatusPanel(\n+                    \"statuspanel\", userTO, statuses, false));\n+\n+            form.addOrReplace(\n+                    new AccountInformationPanel(\"accountinformation\", userTO));\n+        }\n+    }\n+\n+    private EditUserModalPage(\n+            final ModalWindow window,\n+            final UserTO userTO) {\n+        super(window, userTO, Mode.ADMIN);\n+    }\n+\n+    @Override\n+    protected void submitAction(\n+            final AjaxRequestTarget target, final Form form) {\n+\n+        final UserTO updatedUserTO = (UserTO) form.getModelObject();\n+\n+        if (updatedUserTO.getId() == 0) {\n+            userTO = userRestClient.create(updatedUserTO);\n+        } else {\n+            final UserMod userMod = AttributableOperations.diff(\n+                    updatedUserTO, initialUserTO);\n+\n+            // update user just if it is changed\n+            if (!userMod.isEmpty()) {\n+                userTO = userRestClient.update(userMod);\n+            }\n+        }\n+\n+    }\n+\n+    @Override\n+    protected void closeAction(\n+            final AjaxRequestTarget target, final Form form) {\n+        setResponsePage(new EditUserModalPage(window, userTO));\n+    }\n+}"},{"sha":"83bbccdae9ada4e3f2007bf84ef1ee4506039daa","filename":"console/src/main/java/org/syncope/console/pages/Login.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -157,11 +157,10 @@ public void onClick(final AjaxRequestTarget target) {\n \n                                 @Override\n                                 public Page createPage() {\n-                                    return new UserModalPage(\n+                                    return new UserRequestModalPage(\n                                             Login.this.getPageReference(),\n                                             editProfileModalWin,\n-                                            new UserTO(),\n-                                            UserModalPage.Mode.SELF);\n+                                            new UserTO());\n                                 }\n                             });\n "},{"sha":"9cd63704a816bcf4d8db9cc486e6a9889a831c0e","filename":"console/src/main/java/org/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":67,"deletions":850,"changes":917,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -16,63 +16,24 @@\n  */\n package org.syncope.console.pages;\n \n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Set;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.ajax.IAjaxCallDecorator;\n-import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n-import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.event.Broadcast;\n-import org.apache.wicket.event.IEvent;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.form.ChoiceRenderer;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.form.PasswordTextField;\n-import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.model.CompoundPropertyModel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.LoadableDetachableModel;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.springframework.util.ClassUtils;\n-import org.syncope.client.to.ConnBundleTO;\n-import org.syncope.client.to.ConnInstanceTO;\n import org.syncope.client.to.ResourceTO;\n import org.syncope.client.to.SchemaMappingTO;\n-import org.syncope.client.util.ConnConfPropUtils;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n+import org.syncope.console.pages.panels.ResourceConnConfPanel;\n+import org.syncope.console.pages.panels.ResourceDetailsPanel;\n+import org.syncope.console.pages.panels.ResourceMappingPanel;\n import org.syncope.console.pages.panels.ResourceSecurityPanel;\n-import org.syncope.console.rest.ConnectorRestClient;\n import org.syncope.console.rest.ResourceRestClient;\n-import org.syncope.console.rest.SchemaRestClient;\n-import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n-import org.syncope.console.wicket.markup.html.form.AjaxDecoratedCheckbox;\n-import org.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.syncope.console.wicket.markup.html.form.AjaxNumberFieldPanel;\n-import org.syncope.console.wicket.markup.html.form.AjaxPasswordFieldPanel;\n-import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.syncope.console.wicket.markup.html.form.FieldPanel;\n-import org.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n-import org.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel.MultiValueSelectorEvent;\n-import org.syncope.types.ConnConfProperty;\n-import org.syncope.types.PropagationMode;\n-import org.syncope.types.IntMappingType;\n-import org.syncope.types.TraceLevel;\n \n /**\n  * Modal window with Resource form.\n@@ -81,752 +42,85 @@ public class ResourceModalPage extends BaseModalPage {\n \n     private static final long serialVersionUID = 1734415311027284221L;\n \n-    // GuardedString is not in classpath\n-    private static final String GUARDED_STRING =\n-            \"org.identityconnectors.common.security.GuardedString\";\n-\n-    // GuardedByteArray is not in classpath\n-    private static final String GUARDED_BYTE_ARRAY =\n-            \"org.identityconnectors.common.security.GuardedByteArray\";\n-\n-    private static final List<Class> NUMBER = Arrays.asList(new Class[]{\n-                Integer.class,\n-                Double.class,\n-                Long.class,\n-                Float.class,\n-                Number.class,\n-                Integer.TYPE,\n-                Long.TYPE,\n-                Double.TYPE,\n-                Float.TYPE});\n-\n-    @SpringBean\n-    private SchemaRestClient schemaRestClient;\n-\n-    @SpringBean\n-    private ConnectorRestClient connectorRestClient;\n-\n     @SpringBean\n-    private ResourceRestClient restClient;\n-\n-    private List<String> uSchemaAttrNames;\n-\n-    private List<String> uDerSchemaAttrNames;\n-\n-    private List<String> uVirSchemaAttrNames;\n-\n-    private WebMarkupContainer mappingContainer;\n-\n-    private WebMarkupContainer connectorPropertiesContainer;\n-\n-    private Set<ConnConfProperty> overridableConnectorProperties;\n-\n-    private List<String> resourceSchemaNames;\n-\n-    final ResourceTO resourceTO;\n+    private ResourceRestClient resourceRestClient;\n \n-    final ListView<SchemaMappingTO> mappings;\n-\n-    final AjaxButton addSchemaMappingBtn;\n-\n-    final AjaxDropDownChoicePanel<ConnBundleTO> bundle =\n-            new AjaxDropDownChoicePanel<ConnBundleTO>(\n-            \"bundle\", \"bundle\", new Model(null), false);\n-\n-    public ResourceModalPage(final PageReference callPageRef,\n-            final ModalWindow window, final ResourceTO resourceTO,\n+    public ResourceModalPage(\n+            final PageReference pageref,\n+            final ModalWindow window,\n+            final ResourceTO resourceTO,\n             final boolean createFlag) {\n \n         super();\n \n-        this.resourceTO = resourceTO;\n-\n-        uSchemaAttrNames =\n-                schemaRestClient.getSchemaNames(\"user\");\n-        uDerSchemaAttrNames =\n-                schemaRestClient.getDerivedSchemaNames(\"user\");\n-        uVirSchemaAttrNames =\n-                schemaRestClient.getVirtualSchemaNames(\"user\");\n-\n-        final IModel<List<ConnInstanceTO>> connectors =\n-                new LoadableDetachableModel<List<ConnInstanceTO>>() {\n-\n-                    private static final long serialVersionUID =\n-                            5275935387613157437L;\n-\n-                    @Override\n-                    protected List<ConnInstanceTO> load() {\n-                        return connectorRestClient.getAllConnectors();\n-                    }\n-                };\n-\n-        final IModel<List<IntMappingType>> intMappingTypes =\n-                new LoadableDetachableModel<List<IntMappingType>>() {\n-\n-                    private static final long serialVersionUID =\n-                            5275935387613157437L;\n-\n-                    @Override\n-                    protected List<IntMappingType> load() {\n-                        return Arrays.asList(IntMappingType.values());\n-                    }\n-                };\n-        final IModel<List<ConnConfProperty>> connectorPropertiesModel =\n-                new LoadableDetachableModel<List<ConnConfProperty>>() {\n-\n-                    private static final long serialVersionUID =\n-                            5275935387613157437L;\n-\n-                    @Override\n-                    protected List<ConnConfProperty> load() {\n-                        Set<ConnConfProperty> props =\n-                                resourceTO.getConnectorConfigurationProperties();\n-\n-                        if (props == null || props.isEmpty() || createFlag) {\n-                            props = overridableConnectorProperties;\n-                        }\n-                        return new ArrayList<ConnConfProperty>(props);\n-                    }\n-                };\n-\n-        updateResourceSchemaNames(resourceTO);\n-        updateConnectorProperties(resourceTO.getConnectorId());\n-\n-        final ConnInstanceTO connectorTO = new ConnInstanceTO();\n-        if (!createFlag) {\n-            connectorTO.setId(resourceTO.getConnectorId());\n-        }\n-\n         final Form form = new Form(\"form\");\n         form.setModel(new CompoundPropertyModel(resourceTO));\n \n-        final AjaxTextFieldPanel resourceName = new AjaxTextFieldPanel(\n-                \"name\", getString(\"name\"),\n-                new PropertyModel<String>(resourceTO, \"name\"), false);\n-        resourceName.setEnabled(createFlag);\n-        resourceName.addRequiredLabel();\n-        form.add(resourceName);\n-\n-        final AjaxTextFieldPanel accountLink = new AjaxTextFieldPanel(\n-                \"accountLink\", getString(\"accountLink\"),\n-                new PropertyModel<String>(resourceTO, \"accountLink\"), false);\n-        form.add(accountLink);\n-\n-        final AjaxCheckBoxPanel forceMandatoryConstraint =\n-                new AjaxCheckBoxPanel(\n-                \"forceMandatoryConstraint\",\n-                getString(\"forceMandatoryConstraint\"),\n-                new PropertyModel<Boolean>(resourceTO,\n-                \"forceMandatoryConstraint\"),\n-                false);\n-        form.add(forceMandatoryConstraint);\n-\n-        final AjaxCheckBoxPanel propagationPrimary =\n-                new AjaxCheckBoxPanel(\n-                \"propagationPrimary\",\n-                getString(\"propagationPrimary\"),\n-                new PropertyModel<Boolean>(resourceTO,\n-                \"propagationPrimary\"),\n-                false);\n-        form.add(propagationPrimary);\n-\n-        final AjaxNumberFieldPanel propagationPriority =\n-                new AjaxNumberFieldPanel(\n-                \"propagationPriority\", getString(\"propagationPriority\"),\n-                new PropertyModel<Number>(resourceTO, \"propagationPriority\"),\n-                Integer.class,\n-                false);\n-        form.add(propagationPriority);\n-\n-        final AjaxDropDownChoicePanel<PropagationMode> propagationMode =\n-                new AjaxDropDownChoicePanel<PropagationMode>(\n-                \"propagationMode\",\n-                getString(\"propagationMode\"),\n-                new PropertyModel(resourceTO, \"propagationMode\"),\n-                false);\n-        propagationMode.setChoices(\n-                Arrays.asList(PropagationMode.values()));\n-        form.add(propagationMode);\n-\n-        final AjaxDropDownChoicePanel<TraceLevel> createTraceLevel =\n-                new AjaxDropDownChoicePanel<TraceLevel>(\"createTraceLevel\",\n-                getString(\"createTraceLevel\"),\n-                new PropertyModel(resourceTO, \"createTraceLevel\"),\n-                false);\n-        createTraceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n-        form.add(createTraceLevel);\n-\n-        final AjaxDropDownChoicePanel<TraceLevel> updateTraceLevel =\n-                new AjaxDropDownChoicePanel<TraceLevel>(\"updateTraceLevel\",\n-                getString(\"updateTraceLevel\"),\n-                new PropertyModel(resourceTO, \"updateTraceLevel\"),\n-                false);\n-        updateTraceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n-        form.add(updateTraceLevel);\n-\n-        final AjaxDropDownChoicePanel<TraceLevel> deleteTraceLevel =\n-                new AjaxDropDownChoicePanel<TraceLevel>(\"deleteTraceLevel\",\n-                getString(\"deleteTraceLevel\"),\n-                new PropertyModel(resourceTO, \"deleteTraceLevel\"),\n-                false);\n-        deleteTraceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n-        form.add(deleteTraceLevel);\n-\n-        final AjaxDropDownChoicePanel<TraceLevel> syncTraceLevel =\n-                new AjaxDropDownChoicePanel<TraceLevel>(\"syncTraceLevel\",\n-                getString(\"syncTraceLevel\"),\n-                new PropertyModel(resourceTO, \"syncTraceLevel\"),\n-                false);\n-        syncTraceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n-        form.add(syncTraceLevel);\n-\n-        final AjaxCheckBoxPanel resetToken = new AjaxCheckBoxPanel(\n-                \"resetToken\", getString(\"resetToken\"), new Model(null), false);\n-        resetToken.getField().add(\n-                new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-\n-                    private static final long serialVersionUID =\n-                            -1107858522700306810L;\n-\n-                    @Override\n-                    protected void onUpdate(final AjaxRequestTarget art) {\n-                        if (resetToken.getModelObject()) {\n-                            resourceTO.setSyncToken(null);\n-                        }\n-                    }\n-                });\n-        form.add(resetToken);\n-\n-        mappingContainer = new WebMarkupContainer(\"mappingContainer\");\n-        mappingContainer.setOutputMarkupId(true);\n-        form.add(mappingContainer);\n-\n-        connectorPropertiesContainer =\n-                new WebMarkupContainer(\"connectorPropertiesContainer\");\n-        connectorPropertiesContainer.setOutputMarkupId(true);\n-        form.add(connectorPropertiesContainer);\n-\n-        final AjaxDropDownChoicePanel<ConnInstanceTO> connector =\n-                new AjaxDropDownChoicePanel<ConnInstanceTO>(\"connector\",\n-                getString(\"connector\"),\n-                new Model<ConnInstanceTO>(connectorTO),\n-                false);\n-        connector.setChoices(connectors.getObject());\n-        connector.setChoiceRenderer(new ChoiceRenderer(\"displayName\", \"id\"));\n-        connector.getField().setModel(new IModel<ConnInstanceTO>() {\n-\n-            private static final long serialVersionUID = -4202872830392400310L;\n-\n-            @Override\n-            public ConnInstanceTO getObject() {\n-                return connectorTO;\n-            }\n-\n-            @Override\n-            public void setObject(final ConnInstanceTO connector) {\n-                resourceTO.setConnectorId(connector.getId());\n-            }\n-\n-            @Override\n-            public void detach() {\n-            }\n-        });\n-\n-        connector.addRequiredLabel();\n-        connector.setEnabled(createFlag);\n-        form.add(connector);\n-\n-        mappings = new ListView<SchemaMappingTO>(\n-                \"mappings\", resourceTO.getMappings()) {\n-\n-            private static final long serialVersionUID = 4949588177564901031L;\n-\n-            @Override\n-            protected void populateItem(\n-                    final ListItem<SchemaMappingTO> item) {\n-\n-                final SchemaMappingTO mappingTO = item.getModelObject();\n-\n-                item.add(new AjaxDecoratedCheckbox(\"toRemove\",\n-                        new Model(Boolean.FALSE)) {\n-\n-                    private static final long serialVersionUID =\n-                            7170946748485726506L;\n-\n-                    @Override\n-                    protected void onUpdate(\n-                            final AjaxRequestTarget target) {\n-                        int index = -1;\n-                        for (int i = 0; i < resourceTO.getMappings().\n-                                size()\n-                                && index == -1; i++) {\n-\n-                            if (mappingTO.equals(\n-                                    resourceTO.getMappings().get(i))) {\n-\n-                                index = i;\n-                            }\n-                        }\n-\n-                        if (index != -1) {\n-                            resourceTO.getMappings().remove(index);\n-                            item.getParent().removeAll();\n-                            target.add(mappingContainer);\n-                        }\n-                    }\n-\n-                    @Override\n-                    protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(\n-                                super.getAjaxCallDecorator()) {\n-\n-                            private static final long serialVersionUID =\n-                                    -7927968187160354605L;\n-\n-                            @Override\n-                            public CharSequence preDecorateScript(\n-                                    final CharSequence script) {\n-\n-                                return \"if (confirm('\"\n-                                        + getString(\"confirmDelete\")\n-                                        + \"'))\"\n-                                        + \"{\" + script + \"} \"\n-                                        + \"else {this.checked = false;}\";\n-                            }\n-                        };\n-                    }\n-                });\n-\n-                final AjaxDropDownChoicePanel intAttrNames =\n-                        new AjaxDropDownChoicePanel<String>(\n-                        \"intAttrNames\",\n-                        getString(\"intAttrNames\"),\n-                        new PropertyModel(mappingTO, \"intAttrName\"),\n-                        true);\n-                intAttrNames.setChoices(resourceSchemaNames);\n-                intAttrNames.setRequired(true);\n-                intAttrNames.setStyleShet(\n-                        \"ui-widget-content ui-corner-all short_fixedsize\");\n-\n-                if (mappingTO.getIntMappingType() == null) {\n-                    intAttrNames.setChoices(Collections.EMPTY_LIST);\n-                } else {\n-                    switch (mappingTO.getIntMappingType()) {\n-                        case UserSchema:\n-                            intAttrNames.setChoices(uSchemaAttrNames);\n-                            break;\n-\n-                        case UserDerivedSchema:\n-                            intAttrNames.setChoices(\n-                                    uDerSchemaAttrNames);\n-                            break;\n-\n-                        case UserVirtualSchema:\n-                            intAttrNames.setChoices(\n-                                    uVirSchemaAttrNames);\n-                            break;\n-\n-                        case SyncopeUserId:\n-                            intAttrNames.setEnabled(false);\n-                            intAttrNames.setRequired(false);\n-                            intAttrNames.setChoices(\n-                                    Collections.EMPTY_LIST);\n-                            mappingTO.setIntAttrName(\"SyncopeUserId\");\n-                            break;\n-\n-                        case Password:\n-                            intAttrNames.setEnabled(false);\n-                            intAttrNames.setRequired(false);\n-                            intAttrNames.setChoices(\n-                                    Collections.EMPTY_LIST);\n-                            mappingTO.setIntAttrName(\"Password\");\n-                            break;\n-\n-                        case Username:\n-                            intAttrNames.setEnabled(false);\n-                            intAttrNames.setRequired(false);\n-                            intAttrNames.setChoices(\n-                                    Collections.EMPTY_LIST);\n-                            mappingTO.setIntAttrName(\"Username\");\n-                            break;\n-\n-                        default:\n-                            intAttrNames.setChoices(\n-                                    Collections.EMPTY_LIST);\n-                    }\n-                }\n-                item.add(intAttrNames);\n-\n-                final IntMappingTypesDropDownChoice mappingTypesPanel =\n-                        new IntMappingTypesDropDownChoice(\n-                        \"intMappingTypes\",\n-                        getString(\"intMappingTypes\"),\n-                        new PropertyModel<IntMappingType>(\n-                        mappingTO, \"intMappingType\"),\n-                        intAttrNames);\n-\n-                mappingTypesPanel.setRequired(true);\n-                mappingTypesPanel.setChoices(intMappingTypes.getObject());\n-                mappingTypesPanel.setStyleShet(\n-                        \"ui-widget-content ui-corner-all short_fixedsize\");\n-                item.add(mappingTypesPanel);\n-\n-                final FieldPanel extAttrName;\n-\n-                if (resourceSchemaNames.isEmpty()) {\n-                    extAttrName = new AjaxTextFieldPanel(\n-                            \"extAttrName\", getString(\"extAttrNames\"),\n-                            new PropertyModel<String>(mappingTO,\n-                            \"extAttrName\"),\n-                            true);\n-\n-                } else {\n-                    extAttrName =\n-                            new AjaxDropDownChoicePanel<String>(\n-                            \"extAttrName\", getString(\"extAttrNames\"),\n-                            new PropertyModel(mappingTO, \"extAttrName\"),\n-                            true);\n-                    ((AjaxDropDownChoicePanel) extAttrName).setChoices(\n-                            resourceSchemaNames);\n-\n-                }\n-\n-                boolean required = mappingTO != null\n-                        && !mappingTO.isAccountid()\n-                        && !mappingTO.isPassword();\n-\n-                extAttrName.setRequired(required);\n-                extAttrName.setEnabled(required);\n-\n-                extAttrName.setStyleShet(\n-                        \"ui-widget-content ui-corner-all short_fixedsize\");\n-                item.add(extAttrName);\n-\n-                final AjaxTextFieldPanel mandatoryCondition =\n-                        new AjaxTextFieldPanel(\n-                        \"mandatoryCondition\",\n-                        getString(\"mandatoryCondition\"),\n-                        new PropertyModel(mappingTO,\n-                        \"mandatoryCondition\"),\n-                        true);\n-\n-                mandatoryCondition.setChoices(Arrays.asList(\n-                        new String[]{\"true\", \"false\"}));\n-\n-                mandatoryCondition.setStyleShet(\n-                        \"ui-widget-content ui-corner-all short_fixedsize\");\n-\n-                item.add(mandatoryCondition);\n-\n-                final AjaxCheckBoxPanel accountId =\n-                        new AjaxCheckBoxPanel(\n-                        \"accountId\", getString(\"accountId\"),\n-                        new PropertyModel(mappingTO, \"accountid\"), false);\n-\n-                accountId.getField().add(\n-                        new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-\n-                            private static final long serialVersionUID =\n-                                    -1107858522700306810L;\n-\n-                            @Override\n-                            protected void onUpdate(\n-                                    AjaxRequestTarget target) {\n-                                extAttrName.setEnabled(\n-                                        !accountId.getModelObject()\n-                                        && !mappingTO.isPassword());\n-                                extAttrName.setModelObject(null);\n-                                extAttrName.setRequired(\n-                                        !accountId.getModelObject());\n-                                target.add(extAttrName);\n-                            }\n-                        });\n-\n-                item.add(accountId);\n-\n-                final AjaxCheckBoxPanel password =\n-                        new AjaxCheckBoxPanel(\n-                        \"password\", getString(\"password\"),\n-                        new PropertyModel(mappingTO, \"password\"), true);\n-\n-                password.getField().add(\n-                        new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-\n-                            private static final long serialVersionUID =\n-                                    -1107858522700306810L;\n-\n-                            @Override\n-                            protected void onUpdate(\n-                                    AjaxRequestTarget target) {\n-                                extAttrName.setEnabled(\n-                                        !mappingTO.isAccountid()\n-                                        && !password.getModelObject());\n-                                extAttrName.setModelObject(null);\n-                                extAttrName.setRequired(\n-                                        !password.getModelObject());\n-                                target.add(extAttrName);\n-                            }\n-                        });\n-\n-                item.add(password);\n-            }\n-        };\n-\n-        mappings.setReuseItems(true);\n-        mappingContainer.add(mappings);\n-\n-        addSchemaMappingBtn = new IndicatingAjaxButton(\n-                \"addUserSchemaMappingBtn\", new ResourceModel(\"add\")) {\n-\n-            private static final long serialVersionUID = -4804368561204623354L;\n-\n-            @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form form) {\n-\n-                resourceTO.getMappings().add(new SchemaMappingTO());\n-                target.add(mappingContainer);\n-            }\n-\n-            @Override\n-            protected void onError(AjaxRequestTarget target, Form<?> form) {\n-                // ignore errors\n-            }\n-        };\n-\n-        addSchemaMappingBtn.setDefaultFormProcessing(false);\n-        addSchemaMappingBtn.setEnabled(!createFlag);\n-        mappingContainer.add(addSchemaMappingBtn);\n-\n-        /*\n-         * the list of overridable connector properties\n-         */\n-        connectorPropertiesContainer.add(new ListView<ConnConfProperty>(\n-                \"connectorProperties\", connectorPropertiesModel) {\n-\n-            private static final long serialVersionUID = 9101744072914090143L;\n-\n-            @Override\n-            protected void populateItem(final ListItem<ConnConfProperty> item) {\n-                final ConnConfProperty property = item.getModelObject();\n-\n-                final Label label = new Label(\"connPropAttrSchema\",\n-                        property.getSchema().getDisplayName() == null\n-                        || property.getSchema().getDisplayName().isEmpty()\n-                        ? property.getSchema().getName()\n-                        : property.getSchema().getDisplayName());\n-\n-                item.add(label);\n-\n-                final FieldPanel field;\n-\n-                boolean required = false;\n-\n-                boolean isArray = false;\n-\n-                if (GUARDED_STRING.equalsIgnoreCase(\n-                        property.getSchema().getType())\n-                        || GUARDED_BYTE_ARRAY.equalsIgnoreCase(\n-                        property.getSchema().getType())) {\n-\n-                    field = new AjaxPasswordFieldPanel(\n-                            \"panel\",\n-                            label.getDefaultModelObjectAsString(),\n-                            new Model(),\n-                            true);\n-\n-                    ((PasswordTextField) field.getField()).setResetPassword(\n-                            false);\n-\n-                    required = property.getSchema().isRequired();\n-\n-                } else {\n-                    Class propertySchemaClass;\n-\n-                    try {\n-                        propertySchemaClass = ClassUtils.forName(\n-                                property.getSchema().getType(),\n-                                ClassUtils.getDefaultClassLoader());\n-                    } catch (Exception e) {\n-                        LOG.error(\"Error parsing attribute type\", e);\n-                        propertySchemaClass = String.class;\n-                    }\n-\n-                    if (NUMBER.contains(propertySchemaClass)) {\n-                        field = new AjaxNumberFieldPanel(\n-                                \"panel\",\n-                                label.getDefaultModelObjectAsString(),\n-                                new Model(),\n-                                ClassUtils.resolvePrimitiveIfNecessary(\n-                                propertySchemaClass),\n-                                true);\n-\n-                        required = property.getSchema().isRequired();\n-                    } else if (Boolean.class.equals(propertySchemaClass)\n-                            || boolean.class.equals(propertySchemaClass)) {\n-                        field = new AjaxCheckBoxPanel(\n-                                \"panel\",\n-                                label.getDefaultModelObjectAsString(),\n-                                new Model(),\n-                                true);\n-                    } else {\n-\n-                        field = new AjaxTextFieldPanel(\n-                                \"panel\",\n-                                label.getDefaultModelObjectAsString(),\n-                                new Model(),\n-                                true);\n-\n-                        required = property.getSchema().isRequired();\n-                    }\n-\n-                    if (String[].class.equals(propertySchemaClass)) {\n-                        isArray = true;\n-                    }\n-                }\n-\n-                field.setTitle(property.getSchema().getHelpMessage());\n-\n-                if (isArray) {\n-                    field.removeRequiredLabel();\n-\n-                    if (property.getValues().isEmpty()) {\n-                        property.getValues().add(null);\n-                    }\n-\n-                    final MultiValueSelectorPanel multiFields =\n-                            new MultiValueSelectorPanel<String>(\n-                            \"panel\",\n-                            new PropertyModel<List<String>>(property, \"values\"),\n-                            String.class,\n-                            field,\n-                            true);\n-\n-                    item.add(multiFields);\n-                } else {\n-                    if (required) {\n-                        field.addRequiredLabel();\n-                    }\n-\n-                    field.getField().add(\n-                            new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-\n-                                private static final long serialVersionUID =\n-                                        -1107858522700306810L;\n-\n-                                @Override\n-                                protected void onUpdate(\n-                                        final AjaxRequestTarget target) {\n-                                    send(getPage(), Broadcast.BREADTH,\n-                                            new MultiValueSelectorEvent(target));\n-                                }\n-                            });\n-\n-                    field.setNewModel(property.getValues());\n-                    item.add(field);\n-                }\n-\n-                resourceTO.getConnectorConfigurationProperties().add(property);\n-            }\n-        });\n-\n-        connector.getField().add(\n-                new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-\n-                    private static final long serialVersionUID =\n-                            -1107858522700306810L;\n-\n-                    @Override\n-                    protected void onUpdate(AjaxRequestTarget target) {\n-                        mappings.removeAll();\n-                        addSchemaMappingBtn.setEnabled(\n-                                resourceTO.getConnectorId() != null\n-                                && resourceTO.getConnectorId() > 0);\n-\n-                        updateResourceSchemaNames(resourceTO);\n-                        target.add(mappingContainer);\n-\n-                        updateConnectorProperties(\n-                                resourceTO.getConnectorId());\n-                        target.add(connectorPropertiesContainer);\n-                    }\n-                });\n-\n-        final AjaxLink check =\n-                new IndicatingAjaxLink(\"check\", new ResourceModel(\"check\")) {\n-\n-                    private static final long serialVersionUID =\n-                            -4199438518229098169L;\n-\n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target) {\n-\n-                        ConnInstanceTO connectorTO =\n-                                connectorRestClient.read(\n-                                resourceTO.getConnectorId());\n-\n-                        connectorTO.setConfiguration(\n-                                ConnConfPropUtils.joinConnInstanceProperties(\n-                                connectorTO.getConfigurationMap(),\n-                                ConnConfPropUtils.getConnConfPropertyMap(\n-                                resourceTO.getConnectorConfigurationProperties())));\n+        //--------------------------------\n+        // Resource details panel\n+        //--------------------------------\n+        form.add(new ResourceDetailsPanel(\"details\", resourceTO, createFlag));\n+        //--------------------------------\n \n-                            if (connectorRestClient.check(\n-                                    connectorTO).booleanValue()) {\n-                                info(getString(\"success_connection\"));\n-                            } else {\n-                                error(getString(\"error_connection\"));\n-                            }\n-                            \n-                            target.add(feedbackPanel);  \n-                    }\n-                };\n+        //--------------------------------\n+        // Resource mapping panle\n+        //--------------------------------\n+        form.add(new ResourceMappingPanel(\"mapping\", resourceTO, createFlag));\n+        //--------------------------------\n \n-        check.setEnabled(!connectorPropertiesModel.getObject().isEmpty());\n-        connectorPropertiesContainer.add(check);\n+        //--------------------------------\n+        // Resource mapping panle\n+        //--------------------------------\n+        form.add(new ResourceConnConfPanel(\"connconf\", resourceTO, createFlag));\n+        //--------------------------------\n \n         //--------------------------------\n-        // Security container\n+        // Resource security panel\n         //--------------------------------\n         form.add(new ResourceSecurityPanel(\"security\", resourceTO));\n         //--------------------------------\n \n-        AjaxButton submit = new IndicatingAjaxButton(\n-                \"apply\", new ResourceModel(\"submit\")) {\n+        final AjaxButton submit = new IndicatingAjaxButton(\n+                \"apply\", new ResourceModel(\"submit\", \"submit\")) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onSubmit(\n+                    final AjaxRequestTarget target, final Form form) {\n \n-                ResourceTO resourceTO =\n+                final ResourceTO resourceTO =\n                         (ResourceTO) form.getDefaultModelObject();\n \n                 int accountIdCount = 0;\n+\n                 for (SchemaMappingTO mapping : resourceTO.getMappings()) {\n                     if (mapping.isAccountid()) {\n                         accountIdCount++;\n                     }\n                 }\n+\n                 if (accountIdCount == 0 || accountIdCount > 1) {\n-                    error(getString(\"accountIdValidation\"));\n+                    error(new ResourceModel(\n+                            \"accountIdValidation\", \"accountIdValidation\").\n+                            getObject());\n                     target.add(feedbackPanel);\n                 } else {\n                     try {\n+\n                         if (createFlag) {\n-                            restClient.create(resourceTO);\n+                            resourceRestClient.create(resourceTO);\n                         } else {\n-                            restClient.update(resourceTO);\n+                            resourceRestClient.update(resourceTO);\n                         }\n \n-                        ((Resources) callPageRef.getPage()).setModalResult(\n-                                true);\n+                        ((Resources) pageref.getPage()).setModalResult(true);\n                         window.close(target);\n+\n                     } catch (SyncopeClientCompositeErrorException e) {\n-                        LOG.error(\"While creating/updating resource {}\",\n-                                resourceTO);\n-                        error(getString(\"error\") + \":\" + e.getMessage());\n+                        LOG.error(\"Failuer managing resource {}\", resourceTO);\n+                        error(new ResourceModel(\"error\", \"error\").getObject()\n+                                + \":\" + e.getMessage());\n                         target.add(feedbackPanel);\n                     }\n                 }\n@@ -839,118 +133,41 @@ protected void onError(final AjaxRequestTarget target,\n                 target.add(feedbackPanel);\n             }\n         };\n-        form.add(submit);\n \n+        form.add(submit);\n         add(form);\n \n-        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE,\n-                xmlRolesReader.getAllAllowedRoles(\"Resources\",\n-                createFlag ? \"create\" : \"update\"));\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                submit, ENABLE, xmlRolesReader.getAllAllowedRoles(\n+                \"Resources\", createFlag ? \"create\" : \"update\"));\n     }\n \n     /**\n-     * Extension class of DropDownChoice. It's purposed for storing values in\n-     * the corresponding property model after pressing 'Add' button.\n+     * Generic resource event.\n      */\n-    private class IntMappingTypesDropDownChoice\n-            extends AjaxDropDownChoicePanel {\n-\n-        private static final long serialVersionUID = -2855668124505116627L;\n+    public static class ResourceEvent {\n \n-        public IntMappingTypesDropDownChoice(\n-                final String id,\n-                final String name,\n-                final PropertyModel<IntMappingType> model,\n-                final AjaxDropDownChoicePanel<String> chooserToPopulate) {\n-\n-            super(id, name, model, false);\n-\n-            field.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-\n-                private static final long serialVersionUID =\n-                        -1107858522700306810L;\n-\n-                @Override\n-                protected void onUpdate(final AjaxRequestTarget target) {\n-\n-                    chooserToPopulate.setRequired(true);\n-                    chooserToPopulate.setEnabled(true);\n-\n-                    final List<String> result;\n-\n-                    switch (model.getObject()) {\n-                        case UserSchema:\n-                            result = uSchemaAttrNames;\n-                            break;\n-\n-                        case UserDerivedSchema:\n-                            result = uDerSchemaAttrNames;\n-                            break;\n-\n-                        case UserVirtualSchema:\n-                            result = uVirSchemaAttrNames;\n-                            break;\n-\n-                        case SyncopeUserId:\n-                        case Password:\n-                        case Username:\n-                        default:\n-                            chooserToPopulate.setRequired(false);\n-                            chooserToPopulate.setEnabled(false);\n-                            result = Collections.EMPTY_LIST;\n-                    }\n-\n-                    chooserToPopulate.setChoices(result);\n-                    target.add(chooserToPopulate);\n-                }\n-            });\n-        }\n-    }\n-\n-    public final void updateResourceSchemaNames(final ResourceTO resourceTO) {\n-        try {\n-            resourceSchemaNames =\n-                    (resourceTO != null && resourceTO.getConnectorId() != null)\n-                    ? restClient.getSchemaNames(resourceTO.getName())\n-                    : Collections.EMPTY_LIST;\n-\n-        } catch (Exception e) {\n-            LOG.warn(\"Error retrieving resource schema names\", e);\n-            resourceSchemaNames = Collections.EMPTY_LIST;\n-        }\n-    }\n+        /**\n+         * Request target.\n+         */\n+        private AjaxRequestTarget target;\n \n-    public final void updateConnectorProperties(final Long connectorId) {\n-        if (connectorId != null && connectorId > 0) {\n-            Set<ConnConfProperty> overridableProperties =\n-                    new HashSet<ConnConfProperty>();\n-            for (ConnConfProperty p :\n-                    connectorRestClient.getConnectorProperties(connectorId)) {\n-                if (p.isOverridable()) {\n-                    overridableProperties.add(p);\n-                }\n-            }\n-            overridableConnectorProperties = overridableProperties;\n-        } else {\n-            overridableConnectorProperties = Collections.emptySet();\n+        /**\n+         * Constructor.\n+         *\n+         * @param target request target.\n+         */\n+        public ResourceEvent(final AjaxRequestTarget target) {\n+            this.target = target;\n         }\n-    }\n-\n-    @Override\n-    public void onEvent(final IEvent<?> event) {\n-        if (event.getPayload() instanceof MultiValueSelectorEvent) {\n-\n-            final AjaxRequestTarget target =\n-                    ((MultiValueSelectorEvent) event.getPayload()).getTarget();\n \n-            mappings.removeAll();\n-\n-            addSchemaMappingBtn.setEnabled(\n-                    resourceTO.getConnectorId() != null\n-                    && resourceTO.getConnectorId() > 0);\n-\n-            updateResourceSchemaNames(resourceTO);\n-            target.add(mappingContainer);\n+        /**\n+         * Target getter.\n+         *\n+         * @return request target.\n+         */\n+        public AjaxRequestTarget getTarget() {\n+            return target;\n         }\n     }\n-}\n+}\n\\ No newline at end of file"},{"sha":"c98b8021ad20d7182dd4122899b4a02e015cb417","filename":"console/src/main/java/org/syncope/console/pages/Resources.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -323,8 +323,7 @@ public void onClick(final AjaxRequestTarget target) {\n                                     public Page createPage() {\n                                         return new ConnectorModalPage(\n                                                 Resources.this.getPageReference(),\n-                                                editConnectorWin, connectorTO,\n-                                                false);\n+                                                editConnectorWin, connectorTO);\n                                     }\n                                 });\n \n@@ -397,7 +396,7 @@ public void onClick(AjaxRequestTarget target) {\n                     public Page createPage() {\n                         ConnectorModalPage form = new ConnectorModalPage(\n                                 Resources.this.getPageReference(),\n-                                editConnectorWin, new ConnInstanceTO(), true);\n+                                editConnectorWin, new ConnInstanceTO());\n                         return form;\n                     }\n                 });"},{"sha":"32c123556ff35ecd22f422ef7e46a2559245ca1f","filename":"console/src/main/java/org/syncope/console/pages/StatusModalPage.java","status":"modified","additions":26,"deletions":205,"changes":231,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -16,37 +16,20 @@\n  */\n package org.syncope.console.pages;\n \n-import java.util.AbstractMap;\n import java.util.ArrayList;\n-import java.util.HashMap;\n import java.util.List;\n-import java.util.Map;\n-import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n-import org.apache.wicket.behavior.Behavior;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.markup.ComponentTag;\n-import org.apache.wicket.markup.html.basic.Label;\n-import org.apache.wicket.markup.html.form.Check;\n-import org.apache.wicket.markup.html.form.CheckGroup;\n import org.apache.wicket.markup.html.form.Form;\n-import org.apache.wicket.markup.html.image.Image;\n-import org.apache.wicket.markup.html.list.ListItem;\n-import org.apache.wicket.markup.html.list.ListView;\n-import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.syncope.client.to.AttributeTO;\n-import org.syncope.client.to.ConnObjectTO;\n-import org.syncope.client.to.ResourceTO;\n-import org.syncope.client.to.SchemaMappingTO;\n import org.syncope.client.to.UserTO;\n-import org.syncope.console.rest.ResourceRestClient;\n+import org.syncope.console.pages.panels.StatusPanel;\n+import org.syncope.console.pages.panels.StatusPanel.StatusBean;\n import org.syncope.console.rest.UserRestClient;\n-import org.syncope.types.IntMappingType;\n \n public class StatusModalPage extends BaseModalPage {\n \n@@ -55,96 +38,21 @@ public class StatusModalPage extends BaseModalPage {\n     @SpringBean\n     private UserRestClient userRestClient;\n \n-    @SpringBean\n-    private ResourceRestClient resourceRestClient;\n-\n-    private enum STATUS {\n-\n-        ACTIVE,\n-        SUSPENDED,\n-        UNDEFINED,\n-        USER_NOT_FOUND\n-    }\n-\n-    final List<String> selectedResources = new ArrayList<String>();\n-\n     public StatusModalPage(\n             final PageReference callerPageRef,\n             final ModalWindow window,\n             final UserTO userTO) {\n \n         super();\n \n-        final Map<String, STATUS> statuses = getRemoteStatuses(userTO);\n-\n         final Form form = new Form(\"form\");\n         add(form);\n \n-        final List<String> externalResources = new ArrayList<String>();\n-        externalResources.add(\"Syncope\");\n-        externalResources.addAll(userTO.getResources());\n-\n-        final CheckGroup selections = new CheckGroup(\n-                \"selections\", new PropertyModel(this, \"selectedResources\"));\n-        form.add(selections);\n-\n-        final ListView<String> resources = new ListView<String>(\n-                \"resources\", externalResources) {\n-\n-            private static final long serialVersionUID = 4949588177564901031L;\n-\n-            @Override\n-            protected void populateItem(ListItem<String> item) {\n-                item.add(new Check(\"check\", item.getModel()));\n-                item.add(new Label(\"name\", new ResourceModel(\n-                        item.getModelObject(), item.getModelObject())));\n-\n-                final Image image;\n-                final String alt, title;\n+        final List<StatusBean> statuses = new ArrayList<StatusBean>();\n \n-                switch (\"Syncope\".equals(item.getModelObject())\n-                        ? STATUS.valueOf(userTO.getStatus().toUpperCase())\n-                        : statuses.get(item.getModelObject())) {\n-                    case ACTIVE:\n-                        image = new Image(\"icon\", \"statuses/active.png\");\n-                        alt = \"active icon\";\n-                        title = \"Enabled\";\n-                        break;\n-                    case UNDEFINED:\n-                        image = new Image(\"icon\", \"statuses/undefined.png\");\n-                        item.setEnabled(false);\n-                        alt = \"undefined icon\";\n-                        title = \"Undefined status\";\n-                        break;\n-                    case USER_NOT_FOUND:\n-                        image = new Image(\"icon\", \"statuses/usernotfound.png\");\n-                        item.setEnabled(false);\n-                        alt = \"notfound icon\";\n-                        title = \"User not found\";\n-                        break;\n-                    default:\n-                        image = new Image(\"icon\", \"statuses/inactive.png\");\n-                        alt = \"inactive icon\";\n-                        title = \"Disabled\";\n-                }\n-\n-                image.add(new Behavior() {\n-\n-                    private static final long serialVersionUID = 1469628524240283489L;\n-\n-                    @Override\n-                    public void onComponentTag(\n-                            Component component, ComponentTag tag) {\n-                        tag.put(\"alt\", alt);\n-                        tag.put(\"title\", title);\n-                    }\n-                });\n-\n-                item.add(image);\n-            }\n-        };\n-\n-        selections.add(resources);\n+        final StatusPanel statusPanel =\n+                new StatusPanel(\"statuspanel\", userTO, statuses);\n+        form.add(statusPanel);\n \n         final AjaxButton disable = new IndicatingAjaxButton(\n                 \"disable\", new ResourceModel(\"disable\", \"Disable\")) {\n@@ -156,13 +64,19 @@ protected void onSubmit(\n                     final AjaxRequestTarget target,\n                     final Form form) {\n \n-                userRestClient.suspend(userTO.getId(), selectedResources);\n+                try {\n+                    userRestClient.suspend(userTO.getId(), statuses);\n \n-                if (callerPageRef.getPage() instanceof BasePage) {\n-                    ((BasePage) callerPageRef.getPage()).setModalResult(true);\n-                }\n+                    if (callerPageRef.getPage() instanceof BasePage) {\n+                        ((BasePage) callerPageRef.getPage()).setModalResult(true);\n+                    }\n \n-                window.close(target);\n+                    window.close(target);\n+                } catch (Exception e) {\n+                    LOG.error(\"Error disabling resources\", e);\n+                    error(getString(\"error\") + \":\" + e.getMessage());\n+                    target.add(feedbackPanel);\n+                }\n             }\n \n             @Override\n@@ -183,11 +97,17 @@ protected void onSubmit(\n                     final AjaxRequestTarget target,\n                     final Form form) {\n \n-                userRestClient.reactivate(userTO.getId(), selectedResources);\n+                try {\n+                    userRestClient.reactivate(userTO.getId(), statuses);\n \n-                ((BasePage) callerPageRef.getPage()).setModalResult(true);\n+                    ((BasePage) callerPageRef.getPage()).setModalResult(true);\n \n-                window.close(target);\n+                    window.close(target);\n+                } catch (Exception e) {\n+                    LOG.error(\"Error enabling resources\", e);\n+                    error(getString(\"error\") + \":\" + e.getMessage());\n+                    target.add(feedbackPanel);\n+                }\n             }\n \n             @Override\n@@ -201,103 +121,4 @@ protected void onError(final AjaxRequestTarget target,\n         form.add(disable);\n         form.add(enable);\n     }\n-\n-    private Map<String, STATUS> getRemoteStatuses(final UserTO userTO) {\n-        Map<String, STATUS> statuses = new HashMap<String, STATUS>();\n-\n-        for (String res : userTO.getResources()) {\n-            ResourceTO resourceTO = resourceRestClient.read(res);\n-            Map.Entry<IntMappingType, String> accountId = getAccountId(\n-                    resourceTO);\n-\n-            String objectId = null;\n-\n-            switch (accountId != null ? accountId.getKey() : IntMappingType.SyncopeUserId) {\n-                case SyncopeUserId:\n-                    objectId = String.valueOf(userTO.getId());\n-                    break;\n-                case Username:\n-                    objectId = userTO.getUsername();\n-                    break;\n-                case UserSchema:\n-                    AttributeTO attributeTO = null;\n-                    attributeTO =\n-                            userTO.getAttributeMap().get(accountId.getValue());\n-                    objectId =\n-                            attributeTO != null\n-                            && attributeTO.getValues() != null\n-                            && !attributeTO.getValues().isEmpty()\n-                            ? attributeTO.getValues().get(0) : null;\n-                    break;\n-                case UserDerivedSchema:\n-                    attributeTO = userTO.getDerivedAttributeMap().\n-                            get(accountId.getValue());\n-                    objectId =\n-                            attributeTO != null\n-                            && attributeTO.getValues() != null\n-                            && !attributeTO.getValues().isEmpty()\n-                            ? attributeTO.getValues().get(0) : null;\n-                    break;\n-                case UserVirtualSchema:\n-                    attributeTO = userTO.getVirtualAttributeMap().\n-                            get(accountId.getValue());\n-                    objectId =\n-                            attributeTO != null\n-                            && attributeTO.getValues() != null\n-                            && !attributeTO.getValues().isEmpty()\n-                            ? attributeTO.getValues().get(0) : null;\n-                    break;\n-                default:\n-            }\n-\n-            STATUS status;\n-\n-            try {\n-                final ConnObjectTO objectTO =\n-                        userRestClient.getRemoteObject(res, objectId);\n-\n-                final Boolean enabled = isEnabled(objectTO);\n-\n-                status = enabled == null\n-                        ? STATUS.UNDEFINED\n-                        : enabled ? STATUS.ACTIVE : STATUS.SUSPENDED;\n-\n-            } catch (Exception e) {\n-                LOG.warn(\"User '{}' not found on resource '{}'\",\n-                        objectId, res);\n-\n-                status = STATUS.USER_NOT_FOUND;\n-            }\n-\n-            statuses.put(res, status);\n-        }\n-\n-        return statuses;\n-    }\n-\n-    private Boolean isEnabled(final ConnObjectTO objectTO) {\n-        final String STATUSATTR = \"__ENABLE__\";\n-\n-        final Map<String, AttributeTO> attributeTOs = objectTO.getAttributeMap();\n-        final AttributeTO status = attributeTOs.get(STATUSATTR);\n-\n-        return status != null && status.getValues() != null\n-                && !status.getValues().isEmpty()\n-                ? Boolean.parseBoolean(status.getValues().get(0)) : null;\n-    }\n-\n-    private Map.Entry<IntMappingType, String> getAccountId(\n-            final ResourceTO resourceTO) {\n-        Map.Entry<IntMappingType, String> accountId = null;\n-\n-        for (SchemaMappingTO mapping : resourceTO.getMappings()) {\n-            if (mapping.isAccountid()) {\n-                accountId = new AbstractMap.SimpleEntry<IntMappingType, String>(\n-                        mapping.getIntMappingType(),\n-                        mapping.getIntAttrName());\n-            }\n-        }\n-\n-        return accountId;\n-    }\n }"},{"sha":"2808928228e9630ed1c89bfae7e52324e9184aac","filename":"console/src/main/java/org/syncope/console/pages/Todo.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTodo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTodo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTodo.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -275,7 +275,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                                     @Override\n                                     public Page createPage() {\n-                                        return new UserModalPage(\n+                                        return new UserRequestModalPage(\n                                                 Todo.this.getPageReference(),\n                                                 editUserRequestWin,\n                                                 model.getObject());"},{"sha":"6579bd2fae64b74344eebd27f41e9212522e14f4","filename":"console/src/main/java/org/syncope/console/pages/UserModalPage.java","status":"modified","additions":76,"deletions":184,"changes":260,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -26,28 +26,21 @@\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n-import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.syncope.client.mod.UserMod;\n-import org.syncope.client.to.SyncTaskTO;\n-import org.syncope.client.to.UserRequestTO;\n import org.syncope.client.to.UserTO;\n-import org.syncope.client.util.AttributableOperations;\n import org.syncope.console.pages.panels.AttributesPanel;\n import org.syncope.console.pages.panels.DerivedAttributesPanel;\n import org.syncope.console.pages.panels.ResourcesPanel;\n import org.syncope.console.pages.panels.RolesPanel;\n import org.syncope.console.pages.panels.UserDetailsPanel;\n import org.syncope.console.pages.panels.UserModalPageResult;\n import org.syncope.console.pages.panels.VirtualAttributesPanel;\n-import org.syncope.console.rest.TaskRestClient;\n-import org.syncope.console.rest.UserRequestRestClient;\n-import org.syncope.console.rest.UserRestClient;\n \n /**\n  * Modal window with User form.\n  */\n-public class UserModalPage extends BaseModalPage {\n+public abstract class UserModalPage extends BaseModalPage {\n \n     public enum Mode {\n \n@@ -58,81 +51,60 @@ public enum Mode {\n \n     private static final long serialVersionUID = 5002005009737457667L;\n \n-    @SpringBean\n-    private UserRestClient userRestClient;\n+    protected final PageReference callerPageRef;\n \n-    @SpringBean\n-    private UserRequestRestClient requestRestClient;\n+    protected final ModalWindow window;\n \n-    @SpringBean\n-    private TaskRestClient taskRestClient;\n+    protected UserTO userTO;\n \n-    private final PageReference callerPageRef;\n+    private final Mode mode;\n \n-    private final ModalWindow window;\n+    private Fragment fragment = null;\n \n-    private UserRequestTO userRequestTO;\n+    private final boolean resetPassword;\n \n-    private UserTO userTO;\n-\n-    private SyncTaskTO syncTaskTO;\n-\n-    private Mode mode = Mode.ADMIN;\n-\n-    private UserTO initialUserTO;\n-\n-    private Fragment fragment;\n-\n-    private boolean submitted = false;\n-\n-    public UserModalPage(final PageReference callerPageRef,\n+    public UserModalPage(\n+            final PageReference callerPageRef,\n             final ModalWindow window,\n-            final UserRequestTO userRequestTO) {\n+            final UserTO userTO,\n+            final Mode mode,\n+            final boolean resetPassword) {\n \n         super();\n \n         this.callerPageRef = callerPageRef;\n         this.window = window;\n-        this.userRequestTO = userRequestTO;\n-        this.mode = Mode.ADMIN;\n+        this.userTO = userTO;\n+        this.mode = mode;\n+        this.resetPassword = resetPassword;\n \n-        setupModalPage();\n+        fragment = new Fragment(\"userModalFrag\", \"userModalEditFrag\", this);\n+        fragment.setOutputMarkupId(true);\n+        add(fragment);\n     }\n \n-    public UserModalPage(final PageReference callerPageRef,\n+    public UserModalPage(\n             final ModalWindow window,\n-            final SyncTaskTO syncTaskTO) {\n-\n-        super();\n-\n-        this.callerPageRef = callerPageRef;\n-        this.window = window;\n-        this.syncTaskTO = syncTaskTO;\n-        this.mode = Mode.TEMPLATE;\n-\n-        setupModalPage();\n-    }\n-\n-    public UserModalPage(final PageReference callerPageRef,\n-            final ModalWindow window, final UserTO userTO,\n+            final UserTO userTO,\n             final Mode mode) {\n \n-        this(callerPageRef, window, userTO, mode, false);\n-    }\n-\n-    public UserModalPage(final PageReference callerPageRef,\n-            final ModalWindow window, final UserTO userTO,\n-            final Mode mode, final boolean submitted) {\n-\n         super();\n \n-        this.callerPageRef = callerPageRef;\n+        this.callerPageRef = null;\n         this.window = window;\n+        this.mode = mode;\n         this.userTO = userTO;\n-        this.mode = mode == null ? Mode.ADMIN : mode;\n-        this.submitted = submitted;\n+        this.resetPassword = false;\n+\n+        fragment = new Fragment(\"userModalFrag\", \"userModalResultFrag\", this);\n+        fragment.setOutputMarkupId(true);\n+        add(fragment);\n \n-        setupModalPage();\n+        final UserModalPageResult result = new UserModalPageResult(\n+                \"userModalPageResult\", window, mode, userTO);\n+        result.setOutputMarkupId(true);\n+\n+        fragment.add(result);\n     }\n \n     public UserTO getUserTO() {\n@@ -143,69 +115,33 @@ public void setUserTO(final UserTO userTO) {\n         this.userTO = userTO;\n     }\n \n-    private void setupModalPage() {\n-        fragment = new Fragment(\"userModalFrag\",\n-                submitted ? \"userModalResultFrag\" : \"userModalEditFrag\", this);\n-        fragment.setOutputMarkupId(true);\n-        add(fragment);\n-\n-        if (submitted) {\n-            setupResultPanel();\n-        } else {\n-            setupEditPanel();\n-        }\n-    }\n-\n-    private void setupEditPanel() {\n-        if (userRequestTO != null) {\n-            switch (userRequestTO.getType()) {\n-                case CREATE:\n-                    userTO = userRequestTO.getUserTO();\n-                    break;\n-\n-                case UPDATE:\n-                    initialUserTO = userRestClient.read(\n-                            userRequestTO.getUserMod().getId());\n-                    userTO = AttributableOperations.apply(\n-                            initialUserTO, userRequestTO.getUserMod());\n-                    break;\n-\n-                case DELETE:\n-                default:\n-            }\n-        }\n-        if (syncTaskTO != null) {\n-            userTO = syncTaskTO.getUserTemplate();\n-            if (userTO == null) {\n-                userTO = new UserTO();\n-                syncTaskTO.setUserTemplate(userTO);\n-            }\n-        }\n-\n-        if (initialUserTO == null && userTO.getId() > 0) {\n-            initialUserTO = AttributableOperations.clone(userTO);\n-        }\n+    protected Form setupEditPanel() {\n \n         fragment.add(new Label(\"id\", userTO.getId() == 0\n                 ? \"\" : userTO.getUsername()));\n+\n         fragment.add(new Label(\"new\", userTO.getId() == 0\n-                ? getString(\"new\") : \"\"));\n+                ? new ResourceModel(\"new\") : new Model(\"\")));\n \n         final Form form = new Form(\"UserForm\");\n         form.setModel(new CompoundPropertyModel(userTO));\n \n         //--------------------------------\n         // User details\n         //--------------------------------\n-        form.add(new UserDetailsPanel(\"details\", userTO, form,\n-                userRequestTO == null, mode == Mode.TEMPLATE));\n+        form.add(new UserDetailsPanel(\n+                \"details\", userTO, form, resetPassword, mode == Mode.TEMPLATE));\n+        \n+        form.add(new Label(\"statuspanel\", \"\"));\n+        \n+        form.add(new Label(\"accountinformation\", \"\"));\n         //--------------------------------\n \n         //--------------------------------\n         // Attributes panel\n         //--------------------------------\n-        form.add(new AttributesPanel(\"attributes\", userTO, form,\n-                mode == Mode.TEMPLATE));\n+        form.add(new AttributesPanel(\n+                \"attributes\", userTO, form, mode == Mode.TEMPLATE));\n         //--------------------------------\n \n         //--------------------------------\n@@ -217,8 +153,8 @@ private void setupEditPanel() {\n         //--------------------------------\n         // Virtual attributes panel\n         //--------------------------------\n-        form.add(new VirtualAttributesPanel(\"virtualAttributes\", userTO,\n-                mode == Mode.TEMPLATE));\n+        form.add(new VirtualAttributesPanel(\n+                \"virtualAttributes\", userTO, mode == Mode.TEMPLATE));\n         //--------------------------------\n \n         //--------------------------------\n@@ -233,71 +169,40 @@ private void setupEditPanel() {\n         form.add(new RolesPanel(\"roles\", userTO, mode == Mode.TEMPLATE));\n         //--------------------------------\n \n-        final AjaxButton submit = new IndicatingAjaxButton(\n-                \"apply\", new ResourceModel(\"submit\")) {\n+        final AjaxButton submit = getOnSubmit();\n+\n+        if (mode == Mode.ADMIN) {\n+            String allowedRoles = userTO.getId() == 0\n+                    ? xmlRolesReader.getAllAllowedRoles(\"Users\", \"create\")\n+                    : xmlRolesReader.getAllAllowedRoles(\"Users\", \"update\");\n+            MetaDataRoleAuthorizationStrategy.authorize(\n+                    submit, RENDER, allowedRoles);\n+        }\n+\n+        fragment.add(form);\n+        form.add(submit);\n \n-            private static final long serialVersionUID =\n-                    -958724007591692537L;\n+        return form;\n+    }\n+\n+    protected AjaxButton getOnSubmit() {\n+        return new IndicatingAjaxButton(\"apply\", new ResourceModel(\"submit\")) {\n+\n+            private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onSubmit(\n+                    final AjaxRequestTarget target, final Form form) {\n \n-                final UserTO updatedUserTO = (UserTO) form.getModelObject();\n                 try {\n-                    if (updatedUserTO.getId() == 0) {\n-                        switch (mode) {\n-                            case SELF:\n-                                requestRestClient.requestCreate(updatedUserTO);\n-                                break;\n-\n-                            case TEMPLATE:\n-                                syncTaskTO.setUserTemplate(updatedUserTO);\n-                                taskRestClient.updateSyncTask(syncTaskTO);\n-                                break;\n-\n-                            default:\n-                                userTO = userRestClient.create(updatedUserTO);\n-                                if (userRequestTO != null) {\n-                                    requestRestClient.delete(\n-                                            userRequestTO.getId());\n-                                }\n-                        }\n-                    } else {\n-                        UserMod userMod = AttributableOperations.diff(\n-                                updatedUserTO, initialUserTO);\n-\n-                        // update user just if it is changed\n-                        if (!userMod.isEmpty()) {\n-                            if (mode == Mode.SELF) {\n-                                requestRestClient.requestUpdate(userMod);\n-                            } else {\n-                                userTO = userRestClient.update(userMod);\n-                                if (userRequestTO != null) {\n-                                    requestRestClient.delete(\n-                                            userRequestTO.getId());\n-                                }\n-                            }\n-                        }\n-                    }\n+                    submitAction(target, form);\n \n                     if (callerPageRef.getPage() instanceof BasePage) {\n-                        ((BasePage) callerPageRef.getPage()).setModalResult(\n-                                true);\n+                        ((BasePage) callerPageRef.getPage()).setModalResult(true);\n                     }\n \n-                    switch (mode) {\n-                        case ADMIN:\n-                        case SELF:\n-                            setResponsePage(new UserModalPage(\n-                                    callerPageRef, window, userTO, mode,\n-                                    form.isSubmitted()));\n-                            break;\n-\n-                        case TEMPLATE:\n-                        default:\n-                            window.close(target);\n-                    }\n+                    closeAction(target, form);\n+\n                 } catch (Exception e) {\n                     LOG.error(\"While creating or updating user\", e);\n                     error(getString(\"error\") + \":\" + e.getMessage());\n@@ -312,24 +217,11 @@ protected void onError(final AjaxRequestTarget target,\n                 target.add(feedbackPanel);\n             }\n         };\n-\n-        if (mode == Mode.ADMIN) {\n-            String allowedRoles = userTO.getId() == 0\n-                    ? xmlRolesReader.getAllAllowedRoles(\"Users\", \"create\")\n-                    : xmlRolesReader.getAllAllowedRoles(\"Users\", \"update\");\n-            MetaDataRoleAuthorizationStrategy.authorize(\n-                    submit, RENDER, allowedRoles);\n-        }\n-\n-        fragment.add(form);\n-        form.add(submit);\n     }\n \n-    private void setupResultPanel() {\n-        final UserModalPageResult result =\n-                new UserModalPageResult(\"userModalPageResult\",\n-                window, mode, userTO);\n-        result.setOutputMarkupId(true);\n-        fragment.add(result);\n-    }\n+    protected abstract void submitAction(\n+            final AjaxRequestTarget target, final Form form);\n+\n+    protected abstract void closeAction(\n+            final AjaxRequestTarget target, final Form form);\n }"},{"sha":"61715b90e94ad87380b6ee64a090fc73aa77fd9c","filename":"console/src/main/java/org/syncope/console/pages/UserRequestModalPage.java","status":"added","additions":118,"deletions":0,"changes":118,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.console.pages;\n+\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.syncope.client.mod.UserMod;\n+import org.syncope.client.to.UserRequestTO;\n+import org.syncope.client.to.UserTO;\n+import org.syncope.client.util.AttributableOperations;\n+import org.syncope.console.rest.UserRequestRestClient;\n+import org.syncope.console.rest.UserRestClient;\n+\n+/**\n+ * Modal window with User form.\n+ */\n+public class UserRequestModalPage extends UserModalPage {\n+\n+    @SpringBean\n+    private UserRestClient userRestClient;\n+\n+    @SpringBean\n+    private UserRequestRestClient requestRestClient;\n+\n+    private UserTO initialUserTO;\n+\n+    private UserRequestTO userRequestTO;\n+\n+    public UserRequestModalPage(\n+            final PageReference callerPageRef,\n+            final ModalWindow window,\n+            final UserTO userTO) {\n+\n+        super(callerPageRef, window, userTO, Mode.SELF, false);\n+\n+        setupEditPanel();\n+    }\n+\n+    public UserRequestModalPage(\n+            final PageReference callerPageRef,\n+            final ModalWindow window,\n+            final UserRequestTO userRequestTO) {\n+\n+        super(callerPageRef, window, null, Mode.SELF, false);\n+\n+        // evaluate userTO ...\n+        switch (userRequestTO.getType()) {\n+            case CREATE:\n+                userTO = userRequestTO.getUserTO();\n+                this.initialUserTO = AttributableOperations.clone(userTO);\n+                break;\n+\n+            case UPDATE:\n+                this.initialUserTO =\n+                        userRestClient.read(userRequestTO.getUserMod().getId());\n+\n+                userTO = AttributableOperations.apply(\n+                        initialUserTO,\n+                        userRequestTO.getUserMod());\n+                break;\n+\n+            case DELETE:\n+            default:\n+        }\n+\n+        this.userRequestTO = userRequestTO;\n+\n+        setupEditPanel();\n+    }\n+\n+    public UserRequestModalPage(\n+            final ModalWindow window,\n+            final UserTO userTO) {\n+\n+        super(window, userTO, Mode.SELF);\n+    }\n+\n+    @Override\n+    protected void submitAction(\n+            final AjaxRequestTarget target, final Form form) {\n+        final UserTO updatedUserTO = (UserTO) form.getModelObject();\n+\n+        if (updatedUserTO.getId() == 0) {\n+            requestRestClient.requestCreate(updatedUserTO);\n+        } else {\n+            final UserMod userMod = AttributableOperations.diff(\n+                    updatedUserTO, userRestClient.read(updatedUserTO.getId()));\n+\n+            // update user just if it is changed\n+            if (!userMod.isEmpty()) {\n+                requestRestClient.requestUpdate(userMod);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    protected void closeAction(\n+            final AjaxRequestTarget target, final Form form) {\n+        setResponsePage(new UserRequestModalPage(window, userTO));\n+    }\n+}"},{"sha":"7458d3638c4a5aabab66d7ed310b05900e388162","filename":"console/src/main/java/org/syncope/console/pages/UserTemplateModalPage.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserTemplateModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserTemplateModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserTemplateModalPage.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.console.pages;\n+\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.syncope.client.to.SyncTaskTO;\n+import org.syncope.client.to.UserTO;\n+import org.syncope.console.rest.TaskRestClient;\n+\n+/**\n+ * Modal window with User form.\n+ */\n+public class UserTemplateModalPage extends UserModalPage {\n+\n+    @SpringBean\n+    private TaskRestClient taskRestClient;\n+\n+    private SyncTaskTO syncTaskTO;\n+\n+    public UserTemplateModalPage(\n+            final PageReference callerPageRef,\n+            final ModalWindow window,\n+            final SyncTaskTO syncTaskTO) {\n+\n+        super(callerPageRef, window, syncTaskTO.getUserTemplate() == null\n+                ? new UserTO() : syncTaskTO.getUserTemplate(),\n+                Mode.TEMPLATE, true);\n+\n+        this.syncTaskTO = syncTaskTO;\n+\n+        setupEditPanel();\n+    }\n+\n+    @Override\n+    protected void submitAction(AjaxRequestTarget target, Form form) {\n+        syncTaskTO.setUserTemplate((UserTO) form.getModelObject());\n+        taskRestClient.updateSyncTask(syncTaskTO);\n+    }\n+\n+    @Override\n+    protected void closeAction(final AjaxRequestTarget target, final Form form) {\n+        window.close(target);\n+    }\n+}"},{"sha":"f3b488c270ee5ccd9f7fef617b459d24421ff108","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -73,10 +73,9 @@ public void onClick(final AjaxRequestTarget target) {\n \n                     @Override\n                     public Page createPage() {\n-                        return new UserModalPage(\n+                        return new EditUserModalPage(\n                                 Users.this.getPageReference(),\n-                                editModalWin, new UserTO(),\n-                                UserModalPage.Mode.ADMIN);\n+                                editModalWin, new UserTO());\n                     }\n                 });\n "},{"sha":"f00ea9efdff8aaa3470ca96b8bd7adf84ba8be0b","filename":"console/src/main/java/org/syncope/console/pages/panels/AccountInformationPanel.java","status":"added","additions":81,"deletions":0,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAccountInformationPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAccountInformationPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAccountInformationPanel.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -0,0 +1,81 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.console.pages.panels;\n+\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.Model;\n+import org.syncope.client.to.AbstractAttributableTO;\n+import org.syncope.client.to.UserTO;\n+import org.syncope.console.SyncopeSession;\n+\n+public class AccountInformationPanel extends Panel {\n+\n+    public <T extends AbstractAttributableTO> AccountInformationPanel(\n+            final String id,\n+            final UserTO userTO) {\n+\n+        super(id);\n+\n+        // ------------------------\n+        // Creation date\n+        // ------------------------\n+        add(new Label(\"creationDate\", new Model(\n+                userTO.getCreationDate() != null\n+                ? SyncopeSession.get().getDateFormat().format(\n+                userTO.getCreationDate()) : \"\")));\n+        // ------------------------\n+\n+        // ------------------------\n+        // Change password date\n+        // ------------------------\n+        add(new Label(\"changePwdDate\", new Model(\n+                userTO.getChangePwdDate() != null\n+                ? SyncopeSession.get().getDateFormat().format(\n+                userTO.getChangePwdDate()) : \"\")));\n+        // ------------------------\n+\n+        // ------------------------\n+        // Last login date\n+        // ------------------------\n+        add(new Label(\"lastLoginDate\", new Model(\n+                userTO.getLastLoginDate() != null\n+                ? SyncopeSession.get().getDateFormat().format(\n+                userTO.getLastLoginDate()) : \"\")));\n+        // ------------------------\n+\n+        // ------------------------\n+        // Failed logins\n+        // ------------------------\n+        add(new Label(\"failedLogins\", new Model(userTO.getFailedLogins() != null\n+                ? userTO.getFailedLogins() : \"\")));\n+        // ------------------------\n+\n+        // ------------------------\n+        // Token\n+        // ------------------------\n+        add(new Label(\"token\", new Model(\n+                userTO.getToken() != null ? userTO.getToken() : \"\")));\n+        // ------------------------\n+\n+        // ------------------------\n+        // Token expire time\n+        // ------------------------\n+        add(new Label(\"tokenExpireTime\", new Model(\n+                userTO.getTokenExpireTime() != null\n+                ? userTO.getTokenExpireTime() : \"\")));\n+        // ------------------------\n+    }\n+}"},{"sha":"b2f61b112aedf9458fcf1d9ec1875a9b387804eb","filename":"console/src/main/java/org/syncope/console/pages/panels/ResourceConnConfPanel.java","status":"added","additions":371,"deletions":0,"changes":371,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceConnConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceConnConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceConnConfPanel.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -0,0 +1,371 @@\n+/*\n+ *  Copyright 2011 fabio.\n+ * \n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.console.pages.panels;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.PasswordTextField;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.util.ClassUtils;\n+import org.syncope.client.to.ConnInstanceTO;\n+import org.syncope.client.to.ResourceTO;\n+import org.syncope.client.util.ConnConfPropUtils;\n+import org.syncope.console.pages.BaseModalPage;\n+import org.syncope.console.pages.ResourceModalPage.ResourceEvent;\n+import org.syncope.console.pages.panels.ResourceDetailsPanel.DetailsModEvent;\n+import org.syncope.console.rest.ConnectorRestClient;\n+import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxNumberFieldPanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxPasswordFieldPanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.syncope.console.wicket.markup.html.form.FieldPanel;\n+import org.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n+import org.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel.MultiValueSelectorEvent;\n+import org.syncope.types.ConnConfProperty;\n+\n+public class ResourceConnConfPanel extends Panel {\n+\n+    private static final long serialVersionUID = -7982691107029848579L;\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG =\n+            LoggerFactory.getLogger(ResourceConnConfPanel.class);\n+\n+    /**\n+     * GuardedString is not in classpath.\n+     */\n+    private static final String GUARDED_STRING =\n+            \"org.identityconnectors.common.security.GuardedString\";\n+\n+    /**\n+     * GuardedByteArray is not in classpath.\n+     */\n+    private static final String GUARDED_BYTE_ARRAY =\n+            \"org.identityconnectors.common.security.GuardedByteArray\";\n+\n+    /**\n+     * Number java types.\n+     */\n+    private static final List<Class> NUMBER = Arrays.asList(new Class[]{\n+                Integer.class,\n+                Double.class,\n+                Long.class,\n+                Float.class,\n+                Number.class,\n+                Integer.TYPE,\n+                Long.TYPE,\n+                Double.TYPE,\n+                Float.TYPE});\n+\n+    @SpringBean\n+    private ConnectorRestClient connRestClient;\n+\n+    private List<ConnConfProperty> connConfProperties;\n+\n+    private WebMarkupContainer connConfPropContainer;\n+\n+    private AjaxLink check;\n+\n+    private boolean createFlag;\n+\n+    private ResourceTO resourceTO;\n+\n+    public ResourceConnConfPanel(\n+            final String id,\n+            final ResourceTO resourceTO,\n+            final boolean createFlag) {\n+\n+        super(id);\n+        setOutputMarkupId(true);\n+\n+        this.createFlag = createFlag;\n+        this.resourceTO = resourceTO;\n+\n+        connConfProperties = getConnConfProperties();\n+\n+        connConfPropContainer =\n+                new WebMarkupContainer(\"connectorPropertiesContainer\");\n+        connConfPropContainer.setOutputMarkupId(true);\n+        add(connConfPropContainer);\n+\n+        check = new IndicatingAjaxLink(\"check\", new ResourceModel(\"check\")) {\n+\n+            private static final long serialVersionUID =\n+                    -4199438518229098169L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+\n+                ConnInstanceTO connectorTO =\n+                        connRestClient.read(\n+                        resourceTO.getConnectorId());\n+\n+                connectorTO.setConfiguration(\n+                        ConnConfPropUtils.joinConnInstanceProperties(\n+                        connectorTO.getConfigurationMap(),\n+                        ConnConfPropUtils.getConnConfPropertyMap(\n+                        resourceTO.getConnConfProperties())));\n+\n+                if (connRestClient.check(\n+                        connectorTO).booleanValue()) {\n+                    info(getString(\"success_connection\"));\n+                } else {\n+                    error(getString(\"error_connection\"));\n+                }\n+\n+                target.add(((BaseModalPage) getPage()).getFeedbackPanel());\n+            }\n+        };\n+\n+        check.setEnabled(!connConfProperties.isEmpty());\n+        connConfPropContainer.add(check);\n+\n+        /*\n+         * the list of overridable connector properties\n+         */\n+        connConfPropContainer.add(new ListView<ConnConfProperty>(\n+                \"connectorProperties\",\n+                new PropertyModel(this, \"connConfProperties\")) {\n+\n+            private static final long serialVersionUID = 9101744072914090143L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<ConnConfProperty> item) {\n+                final ConnConfProperty property = item.getModelObject();\n+\n+                final Label label = new Label(\"connPropAttrSchema\",\n+                        property.getSchema().getDisplayName() == null\n+                        || property.getSchema().getDisplayName().isEmpty()\n+                        ? property.getSchema().getName()\n+                        : property.getSchema().getDisplayName());\n+\n+                item.add(label);\n+\n+                final FieldPanel field;\n+\n+                boolean required = false;\n+\n+                boolean isArray = false;\n+\n+                if (GUARDED_STRING.equalsIgnoreCase(\n+                        property.getSchema().getType())\n+                        || GUARDED_BYTE_ARRAY.equalsIgnoreCase(\n+                        property.getSchema().getType())) {\n+\n+                    field = new AjaxPasswordFieldPanel(\n+                            \"panel\",\n+                            label.getDefaultModelObjectAsString(),\n+                            new Model(),\n+                            true);\n+\n+                    ((PasswordTextField) field.getField()).setResetPassword(\n+                            false);\n+\n+                    required = property.getSchema().isRequired();\n+\n+                } else {\n+                    Class propertySchemaClass;\n+\n+                    try {\n+                        propertySchemaClass = ClassUtils.forName(\n+                                property.getSchema().getType(),\n+                                ClassUtils.getDefaultClassLoader());\n+                    } catch (Exception e) {\n+                        LOG.error(\"Error parsing attribute type\", e);\n+                        propertySchemaClass = String.class;\n+                    }\n+\n+                    if (NUMBER.contains(propertySchemaClass)) {\n+                        field = new AjaxNumberFieldPanel(\n+                                \"panel\",\n+                                label.getDefaultModelObjectAsString(),\n+                                new Model(),\n+                                ClassUtils.resolvePrimitiveIfNecessary(\n+                                propertySchemaClass),\n+                                true);\n+\n+                        required = property.getSchema().isRequired();\n+                    } else if (Boolean.class.equals(propertySchemaClass)\n+                            || boolean.class.equals(propertySchemaClass)) {\n+                        field = new AjaxCheckBoxPanel(\n+                                \"panel\",\n+                                label.getDefaultModelObjectAsString(),\n+                                new Model(),\n+                                true);\n+                    } else {\n+\n+                        field = new AjaxTextFieldPanel(\n+                                \"panel\",\n+                                label.getDefaultModelObjectAsString(),\n+                                new Model(),\n+                                true);\n+\n+                        required = property.getSchema().isRequired();\n+                    }\n+\n+                    if (String[].class.equals(propertySchemaClass)) {\n+                        isArray = true;\n+                    }\n+                }\n+\n+                field.setTitle(property.getSchema().getHelpMessage());\n+\n+                if (isArray) {\n+                    field.removeRequiredLabel();\n+\n+                    if (property.getValues().isEmpty()) {\n+                        property.getValues().add(null);\n+                    }\n+\n+                    final MultiValueSelectorPanel multiFields =\n+                            new MultiValueSelectorPanel<String>(\n+                            \"panel\",\n+                            new PropertyModel<List<String>>(property, \"values\"),\n+                            String.class,\n+                            field,\n+                            true);\n+\n+                    item.add(multiFields);\n+                } else {\n+                    if (required) {\n+                        field.addRequiredLabel();\n+                    }\n+\n+                    field.getField().add(\n+                            new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+                                private static final long serialVersionUID =\n+                                        -1107858522700306810L;\n+\n+                                @Override\n+                                protected void onUpdate(\n+                                        final AjaxRequestTarget target) {\n+                                    send(getPage(), Broadcast.BREADTH,\n+                                            new ConnConfModEvent(\n+                                            target, connConfProperties));\n+                                }\n+                            });\n+\n+                    field.setNewModel(property.getValues());\n+                    item.add(field);\n+                }\n+\n+                resourceTO.getConnConfProperties().add(property);\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Get overridable properties.\n+     *\n+     * @return overridable properties.\n+     */\n+    private List<ConnConfProperty> getConnConfProperties() {\n+\n+        final List<ConnConfProperty> props = new ArrayList<ConnConfProperty>();\n+\n+        if (!createFlag && !resourceTO.getConnConfProperties().isEmpty()) {\n+            props.addAll(resourceTO.getConnConfProperties());\n+        } else {\n+            resourceTO.getConnConfProperties().clear();\n+\n+            final Long connectorId = resourceTO.getConnectorId();\n+\n+            if (connectorId != null && connectorId > 0) {\n+                for (ConnConfProperty property :\n+                        connRestClient.getConnectorProperties(connectorId)) {\n+\n+                    if (property.isOverridable()) {\n+                        props.add(property);\n+                    }\n+                }\n+            }\n+        }\n+\n+        return props;\n+    }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof DetailsModEvent) {\n+            // connectro change: update properties and forward event\n+            final AjaxRequestTarget target =\n+                    ((ResourceEvent) event.getPayload()).getTarget();\n+\n+            connConfProperties = getConnConfProperties();\n+            check.setEnabled(!connConfProperties.isEmpty());\n+\n+            target.add(connConfPropContainer);\n+\n+            // get configuration properties and send a new event\n+            send(getPage(), Broadcast.BREADTH,\n+                    new ConnConfModEvent(target, connConfProperties));\n+            \n+        } else if (event.getPayload() instanceof MultiValueSelectorEvent) {\n+            // multi value connector property change: forward event\n+            final AjaxRequestTarget target =\n+                    ((MultiValueSelectorEvent) event.getPayload()).getTarget();\n+\n+            send(getPage(), Broadcast.BREADTH,\n+                    new ConnConfModEvent(target, connConfProperties));\n+        }\n+    }\n+\n+    /**\n+     * Connector configuration properties modification event.\n+     */\n+    public static class ConnConfModEvent extends ResourceEvent {\n+\n+        private List<ConnConfProperty> configuration;\n+\n+        /**\n+         * Constructor.\n+         *\n+         * @param target request target.\n+         * @param target connector configuration properties.\n+         */\n+        public ConnConfModEvent(\n+                final AjaxRequestTarget target,\n+                final List<ConnConfProperty> conf) {\n+            super(target);\n+            this.configuration = conf;\n+        }\n+\n+        public List<ConnConfProperty> getConfiguration() {\n+            return configuration;\n+        }\n+    }\n+}"},{"sha":"3b15d766b31ced1aadf89fa0ab5ce7cd3b0e956d","filename":"console/src/main/java/org/syncope/console/pages/panels/ResourceDetailsPanel.java","status":"added","additions":270,"deletions":0,"changes":270,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -0,0 +1,270 @@\n+/*\n+ *  Copyright 2011 fabio.\n+ * \n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.console.pages.panels;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.markup.html.form.ChoiceRenderer;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.syncope.client.to.ConnInstanceTO;\n+import org.syncope.client.to.ResourceTO;\n+import org.syncope.console.pages.ResourceModalPage.ResourceEvent;\n+import org.syncope.console.rest.ConnectorRestClient;\n+import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxNumberFieldPanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.syncope.types.PropagationMode;\n+import org.syncope.types.TraceLevel;\n+\n+public class ResourceDetailsPanel extends Panel {\n+\n+    private static final long serialVersionUID = -7982691107029848579L;\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG =\n+            LoggerFactory.getLogger(ResourceDetailsPanel.class);\n+\n+    @SpringBean\n+    private ConnectorRestClient connRestClient;\n+\n+    private ConnInstanceTO connInstanceTO;\n+\n+    public ResourceDetailsPanel(\n+            final String id,\n+            final ResourceTO resourceTO,\n+            final boolean createFlag) {\n+\n+        super(id);\n+        setOutputMarkupId(true);\n+\n+        final IModel<List<ConnInstanceTO>> connectors =\n+                new LoadableDetachableModel<List<ConnInstanceTO>>() {\n+\n+                    private static final long serialVersionUID =\n+                            5275935387613157437L;\n+\n+                    @Override\n+                    protected List<ConnInstanceTO> load() {\n+                        return connRestClient.getAllConnectors();\n+                    }\n+                };\n+\n+        connInstanceTO =\n+                getConectorInstanceTO(connectors.getObject(), resourceTO);\n+\n+        final AjaxTextFieldPanel resourceName = new AjaxTextFieldPanel(\n+                \"name\",\n+                new ResourceModel(\"name\", \"name\").getObject(),\n+                new PropertyModel<String>(resourceTO, \"name\"),\n+                false);\n+\n+        resourceName.setEnabled(createFlag);\n+        resourceName.addRequiredLabel();\n+        add(resourceName);\n+\n+        final AjaxCheckBoxPanel forceMandatoryConstraint =\n+                new AjaxCheckBoxPanel(\n+                \"forceMandatoryConstraint\",\n+                new ResourceModel(\n+                \"forceMandatoryConstraint\", \"forceMandatoryConstraint\").\n+                getObject(),\n+                new PropertyModel<Boolean>(resourceTO,\n+                \"forceMandatoryConstraint\"),\n+                false);\n+        add(forceMandatoryConstraint);\n+\n+        final AjaxCheckBoxPanel propagationPrimary =\n+                new AjaxCheckBoxPanel(\n+                \"propagationPrimary\",\n+                new ResourceModel(\n+                \"propagationPrimary\", \"propagationPrimary\").getObject(),\n+                new PropertyModel<Boolean>(resourceTO,\n+                \"propagationPrimary\"),\n+                false);\n+        add(propagationPrimary);\n+\n+        final AjaxNumberFieldPanel propagationPriority =\n+                new AjaxNumberFieldPanel(\n+                \"propagationPriority\",\n+                new ResourceModel(\"propagationPriority\", \"propagationPriority\").\n+                getObject(),\n+                new PropertyModel<Number>(resourceTO, \"propagationPriority\"),\n+                Integer.class,\n+                false);\n+        add(propagationPriority);\n+\n+        final AjaxDropDownChoicePanel<PropagationMode> propagationMode =\n+                new AjaxDropDownChoicePanel<PropagationMode>(\n+                \"propagationMode\",\n+                new ResourceModel(\"propagationMode\", \"propagationMode\").\n+                getObject(),\n+                new PropertyModel(resourceTO, \"propagationMode\"),\n+                false);\n+        propagationMode.setChoices(\n+                Arrays.asList(PropagationMode.values()));\n+        add(propagationMode);\n+\n+        final AjaxDropDownChoicePanel<TraceLevel> createTraceLevel =\n+                new AjaxDropDownChoicePanel<TraceLevel>(\"createTraceLevel\",\n+                new ResourceModel(\"createTraceLevel\", \"createTraceLevel\").\n+                getObject(),\n+                new PropertyModel(resourceTO, \"createTraceLevel\"),\n+                false);\n+        createTraceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n+        add(createTraceLevel);\n+\n+        final AjaxDropDownChoicePanel<TraceLevel> updateTraceLevel =\n+                new AjaxDropDownChoicePanel<TraceLevel>(\"updateTraceLevel\",\n+                new ResourceModel(\"updateTraceLevel\", \"updateTraceLevel\").\n+                getObject(),\n+                new PropertyModel(resourceTO, \"updateTraceLevel\"),\n+                false);\n+        updateTraceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n+        add(updateTraceLevel);\n+\n+        final AjaxDropDownChoicePanel<TraceLevel> deleteTraceLevel =\n+                new AjaxDropDownChoicePanel<TraceLevel>(\"deleteTraceLevel\",\n+                new ResourceModel(\"deleteTraceLevel\", \"deleteTraceLevel\").\n+                getObject(),\n+                new PropertyModel(resourceTO, \"deleteTraceLevel\"),\n+                false);\n+        deleteTraceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n+        add(deleteTraceLevel);\n+\n+        final AjaxDropDownChoicePanel<TraceLevel> syncTraceLevel =\n+                new AjaxDropDownChoicePanel<TraceLevel>(\"syncTraceLevel\",\n+                new ResourceModel(\"syncTraceLevel\", \"syncTraceLevel\").getObject(),\n+                new PropertyModel(resourceTO, \"syncTraceLevel\"),\n+                false);\n+        syncTraceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n+        add(syncTraceLevel);\n+\n+        final AjaxCheckBoxPanel resetToken = new AjaxCheckBoxPanel(\n+                \"resetToken\",\n+                new ResourceModel(\"resetToken\", \"resetToken\").getObject(),\n+                new Model(null), false);\n+\n+        resetToken.getField().add(\n+                new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+                    private static final long serialVersionUID =\n+                            -1107858522700306810L;\n+\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget art) {\n+                        if (resetToken.getModelObject()) {\n+                            resourceTO.setSyncToken(null);\n+                        }\n+                    }\n+                });\n+        add(resetToken);\n+\n+        final AjaxDropDownChoicePanel<ConnInstanceTO> conn =\n+                new AjaxDropDownChoicePanel<ConnInstanceTO>(\n+                \"connector\",\n+                new ResourceModel(\"connector\", \"connector\").getObject(),\n+                new PropertyModel(this, \"connInstanceTO\"),\n+                false);\n+        conn.setChoices(connectors.getObject());\n+        conn.setChoiceRenderer(new ChoiceRenderer(\"displayName\", \"id\"));\n+\n+        conn.getField().setModel(new IModel<ConnInstanceTO>() {\n+\n+            private static final long serialVersionUID = -4202872830392400310L;\n+\n+            @Override\n+            public ConnInstanceTO getObject() {\n+                return connInstanceTO;\n+            }\n+\n+            @Override\n+            public void setObject(final ConnInstanceTO connector) {\n+                resourceTO.setConnectorId(connector.getId());\n+                connInstanceTO = connector;\n+            }\n+\n+            @Override\n+            public void detach() {\n+            }\n+        });\n+\n+        conn.addRequiredLabel();\n+        conn.setEnabled(createFlag);\n+\n+        conn.getField().add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+            private static final long serialVersionUID =\n+                    -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                send(getPage(), Broadcast.BREADTH, new DetailsModEvent(target));\n+            }\n+        });\n+\n+        add(conn);\n+    }\n+\n+    /**\n+     * Get the connetorTO linked to the resource.\n+     *\n+     * @param connectorTOs list of all connectors.\n+     * @param resourceTO resource.\n+     * @return selected connector instance.\n+     */\n+    private ConnInstanceTO getConectorInstanceTO(\n+            final List<ConnInstanceTO> connectorTOs,\n+            final ResourceTO resourceTO) {\n+\n+        for (ConnInstanceTO to : connectorTOs) {\n+            if (Long.valueOf(to.getId()).equals(resourceTO.getConnectorId())) {\n+                return to;\n+            }\n+        }\n+\n+        return new ConnInstanceTO();\n+    }\n+\n+    /**\n+     * Connector instance modification event.\n+     */\n+    public static class DetailsModEvent extends ResourceEvent {\n+\n+        /**\n+         * Constructor.\n+         *\n+         * @param target request target.\n+         */\n+        public DetailsModEvent(final AjaxRequestTarget target) {\n+            super(target);\n+        }\n+    }\n+}"},{"sha":"345d1441f3504b440f95e7ff45a8c70d76451dd7","filename":"console/src/main/java/org/syncope/console/pages/panels/ResourceMappingPanel.java","status":"added","additions":532,"deletions":0,"changes":532,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -0,0 +1,532 @@\n+/*\n+ *  Copyright 2011 fabio.\n+ * \n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.console.pages.panels;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.IAjaxCallDecorator;\n+import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.syncope.client.to.ConnInstanceTO;\n+import org.syncope.client.to.ResourceTO;\n+import org.syncope.client.to.SchemaMappingTO;\n+import org.syncope.console.pages.panels.ResourceConnConfPanel.ConnConfModEvent;\n+import org.syncope.console.rest.ConnectorRestClient;\n+import org.syncope.console.rest.SchemaRestClient;\n+import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxDecoratedCheckbox;\n+import org.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.syncope.console.wicket.markup.html.form.FieldPanel;\n+import org.syncope.types.ConnConfProperty;\n+import org.syncope.types.IntMappingType;\n+\n+public class ResourceMappingPanel extends Panel {\n+\n+    private static final long serialVersionUID = -7982691107029848579L;\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG =\n+            LoggerFactory.getLogger(ResourceMappingPanel.class);\n+\n+    @SpringBean\n+    private SchemaRestClient schemaRestClient;\n+\n+    @SpringBean\n+    private ConnectorRestClient connRestClient;\n+\n+    private List<String> uSchemaAttrNames;\n+\n+    private List<String> uDerSchemaAttrNames;\n+\n+    private List<String> uVirSchemaAttrNames;\n+\n+    private List<String> resourceSchemaNames;\n+\n+    private AjaxButton addSchemaMappingBtn;\n+\n+    private ListView mappings;\n+\n+    private ResourceTO resourceTO;\n+\n+    private WebMarkupContainer mappingContainer;\n+\n+    private boolean createFlag;\n+\n+    public ResourceMappingPanel(\n+            final String id,\n+            final ResourceTO resourceTO,\n+            final boolean createFlag) {\n+\n+        super(id);\n+        setOutputMarkupId(true);\n+\n+        this.resourceTO = resourceTO;\n+        this.createFlag = createFlag;\n+\n+        initResourceSchemaNames();\n+\n+        uSchemaAttrNames =\n+                schemaRestClient.getSchemaNames(\"user\");\n+        uDerSchemaAttrNames =\n+                schemaRestClient.getDerivedSchemaNames(\"user\");\n+        uVirSchemaAttrNames =\n+                schemaRestClient.getVirtualSchemaNames(\"user\");\n+\n+        final IModel<List<IntMappingType>> intMappingTypes =\n+                new LoadableDetachableModel<List<IntMappingType>>() {\n+\n+                    private static final long serialVersionUID =\n+                            5275935387613157437L;\n+\n+                    @Override\n+                    protected List<IntMappingType> load() {\n+                        return Arrays.asList(IntMappingType.values());\n+                    }\n+                };\n+\n+        final AjaxTextFieldPanel accountLink = new AjaxTextFieldPanel(\n+                \"accountLink\",\n+                new ResourceModel(\"accountLink\", \"accountLink\").getObject(),\n+                new PropertyModel<String>(resourceTO, \"accountLink\"), false);\n+        add(accountLink);\n+\n+        mappingContainer = new WebMarkupContainer(\"mappingContainer\");\n+        mappingContainer.setOutputMarkupId(true);\n+        add(mappingContainer);\n+\n+        mappings = new ListView<SchemaMappingTO>(\n+                \"mappings\", resourceTO.getMappings()) {\n+\n+            private static final long serialVersionUID = 4949588177564901031L;\n+\n+            @Override\n+            protected void populateItem(\n+                    final ListItem<SchemaMappingTO> item) {\n+\n+                final SchemaMappingTO mappingTO = item.getModelObject();\n+\n+                item.add(new AjaxDecoratedCheckbox(\"toRemove\",\n+                        new Model(Boolean.FALSE)) {\n+\n+                    private static final long serialVersionUID =\n+                            7170946748485726506L;\n+\n+                    @Override\n+                    protected void onUpdate(\n+                            final AjaxRequestTarget target) {\n+                        int index = -1;\n+                        for (int i = 0; i < resourceTO.getMappings().\n+                                size()\n+                                && index == -1; i++) {\n+\n+                            if (mappingTO.equals(\n+                                    resourceTO.getMappings().get(i))) {\n+\n+                                index = i;\n+                            }\n+                        }\n+\n+                        if (index != -1) {\n+                            resourceTO.getMappings().remove(index);\n+                            item.getParent().removeAll();\n+                            target.add(mappingContainer);\n+                        }\n+                    }\n+\n+                    @Override\n+                    protected IAjaxCallDecorator getAjaxCallDecorator() {\n+                        return new AjaxPreprocessingCallDecorator(\n+                                super.getAjaxCallDecorator()) {\n+\n+                            private static final long serialVersionUID =\n+                                    -7927968187160354605L;\n+\n+                            @Override\n+                            public CharSequence preDecorateScript(\n+                                    final CharSequence script) {\n+\n+                                return \"if (confirm('\"\n+                                        + getString(\"confirmDelete\")\n+                                        + \"'))\"\n+                                        + \"{\" + script + \"} \"\n+                                        + \"else {this.checked = false;}\";\n+                            }\n+                        };\n+                    }\n+                });\n+\n+                final AjaxDropDownChoicePanel intAttrNames =\n+                        new AjaxDropDownChoicePanel<String>(\n+                        \"intAttrNames\",\n+                        getString(\"intAttrNames\"),\n+                        new PropertyModel(mappingTO, \"intAttrName\"),\n+                        true);\n+                intAttrNames.setChoices(resourceSchemaNames);\n+                intAttrNames.setRequired(true);\n+                intAttrNames.setStyleShet(\n+                        \"ui-widget-content ui-corner-all short_fixedsize\");\n+\n+                if (mappingTO.getIntMappingType() == null) {\n+                    intAttrNames.setChoices(Collections.EMPTY_LIST);\n+                } else {\n+                    switch (mappingTO.getIntMappingType()) {\n+                        case UserSchema:\n+                            intAttrNames.setChoices(uSchemaAttrNames);\n+                            break;\n+\n+                        case UserDerivedSchema:\n+                            intAttrNames.setChoices(uDerSchemaAttrNames);\n+                            break;\n+\n+                        case UserVirtualSchema:\n+                            intAttrNames.setChoices(uVirSchemaAttrNames);\n+                            break;\n+\n+                        case SyncopeUserId:\n+                            intAttrNames.setEnabled(false);\n+                            intAttrNames.setRequired(false);\n+                            intAttrNames.setChoices(Collections.EMPTY_LIST);\n+                            mappingTO.setIntAttrName(\"SyncopeUserId\");\n+                            break;\n+\n+                        case Password:\n+                            intAttrNames.setEnabled(false);\n+                            intAttrNames.setRequired(false);\n+                            intAttrNames.setChoices(Collections.EMPTY_LIST);\n+                            mappingTO.setIntAttrName(\"Password\");\n+                            break;\n+\n+                        case Username:\n+                            intAttrNames.setEnabled(false);\n+                            intAttrNames.setRequired(false);\n+                            intAttrNames.setChoices(Collections.EMPTY_LIST);\n+                            mappingTO.setIntAttrName(\"Username\");\n+                            break;\n+\n+                        default:\n+                            intAttrNames.setChoices(Collections.EMPTY_LIST);\n+                    }\n+                }\n+\n+                item.add(intAttrNames);\n+\n+                final IntMappingTypesDropDownChoice mappingTypesPanel =\n+                        new IntMappingTypesDropDownChoice(\n+                        \"intMappingTypes\",\n+                        new ResourceModel(\"intMappingTypes\", \"intMappingTypes\").\n+                        getObject(),\n+                        new PropertyModel<IntMappingType>(\n+                        mappingTO, \"intMappingType\"),\n+                        intAttrNames);\n+\n+                mappingTypesPanel.setRequired(true);\n+                mappingTypesPanel.setChoices(intMappingTypes.getObject());\n+                mappingTypesPanel.setStyleShet(\n+                        \"ui-widget-content ui-corner-all short_fixedsize\");\n+                item.add(mappingTypesPanel);\n+\n+                final FieldPanel extAttrName;\n+\n+                if (resourceSchemaNames.isEmpty()) {\n+                    extAttrName = new AjaxTextFieldPanel(\n+                            \"extAttrName\",\n+                            new ResourceModel(\"extAttrNames\", \"extAttrNames\").\n+                            getObject(),\n+                            new PropertyModel<String>(mappingTO, \"extAttrName\"),\n+                            true);\n+\n+                } else {\n+                    extAttrName =\n+                            new AjaxDropDownChoicePanel<String>(\n+                            \"extAttrName\",\n+                            new ResourceModel(\"extAttrNames\", \"extAttrNames\").\n+                            getObject(),\n+                            new PropertyModel(mappingTO, \"extAttrName\"),\n+                            true);\n+                    ((AjaxDropDownChoicePanel) extAttrName).setChoices(\n+                            resourceSchemaNames);\n+\n+                }\n+\n+                boolean required = mappingTO != null\n+                        && !mappingTO.isAccountid() && !mappingTO.isPassword();\n+\n+                extAttrName.setRequired(required);\n+                extAttrName.setEnabled(required);\n+\n+                extAttrName.setStyleShet(\n+                        \"ui-widget-content ui-corner-all short_fixedsize\");\n+                item.add(extAttrName);\n+\n+                final AjaxTextFieldPanel mandatoryCondition =\n+                        new AjaxTextFieldPanel(\n+                        \"mandatoryCondition\",\n+                        new ResourceModel(\n+                        \"mandatoryCondition\", \"mandatoryCondition\").getObject(),\n+                        new PropertyModel(mappingTO,\n+                        \"mandatoryCondition\"),\n+                        true);\n+\n+                mandatoryCondition.setChoices(\n+                        Arrays.asList(new String[]{\"true\", \"false\"}));\n+\n+                mandatoryCondition.setStyleShet(\n+                        \"ui-widget-content ui-corner-all short_fixedsize\");\n+\n+                item.add(mandatoryCondition);\n+\n+                final AjaxCheckBoxPanel accountId =\n+                        new AjaxCheckBoxPanel(\n+                        \"accountId\",\n+                        new ResourceModel(\"accountId\", \"accountId\").getObject(),\n+                        new PropertyModel(mappingTO, \"accountid\"), false);\n+\n+                accountId.getField().add(\n+                        new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+                            private static final long serialVersionUID =\n+                                    -1107858522700306810L;\n+\n+                            @Override\n+                            protected void onUpdate(\n+                                    final AjaxRequestTarget target) {\n+                                extAttrName.setEnabled(\n+                                        !accountId.getModelObject()\n+                                        && !mappingTO.isPassword());\n+                                extAttrName.setModelObject(null);\n+                                extAttrName.setRequired(\n+                                        !accountId.getModelObject());\n+                                target.add(extAttrName);\n+                            }\n+                        });\n+\n+                item.add(accountId);\n+\n+                final AjaxCheckBoxPanel password =\n+                        new AjaxCheckBoxPanel(\n+                        \"password\",\n+                        new ResourceModel(\"password\", \"password\").getObject(),\n+                        new PropertyModel(mappingTO, \"password\"), true);\n+\n+                password.getField().add(\n+                        new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+                            private static final long serialVersionUID =\n+                                    -1107858522700306810L;\n+\n+                            @Override\n+                            protected void onUpdate(\n+                                    AjaxRequestTarget target) {\n+                                extAttrName.setEnabled(\n+                                        !mappingTO.isAccountid()\n+                                        && !password.getModelObject());\n+                                extAttrName.setModelObject(null);\n+                                extAttrName.setRequired(\n+                                        !password.getModelObject());\n+                                target.add(extAttrName);\n+                            }\n+                        });\n+\n+                item.add(password);\n+            }\n+        };\n+\n+        mappings.setReuseItems(true);\n+        mappingContainer.add(mappings);\n+\n+        addSchemaMappingBtn = new IndicatingAjaxButton(\n+                \"addUserSchemaMappingBtn\", new ResourceModel(\"add\")) {\n+\n+            private static final long serialVersionUID = -4804368561204623354L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target,\n+                    final Form form) {\n+\n+                resourceTO.getMappings().add(new SchemaMappingTO());\n+                target.add(mappingContainer);\n+            }\n+\n+            @Override\n+            protected void onError(AjaxRequestTarget target, Form<?> form) {\n+                // ignore errors\n+            }\n+        };\n+\n+        addSchemaMappingBtn.setDefaultFormProcessing(false);\n+        addSchemaMappingBtn.setEnabled(!createFlag);\n+        mappingContainer.add(addSchemaMappingBtn);\n+\n+    }\n+\n+    /**\n+     * Extension class of DropDownChoice. It's purposed for storing values in\n+     * the corresponding property model after pressing 'Add' button.\n+     */\n+    private class IntMappingTypesDropDownChoice\n+            extends AjaxDropDownChoicePanel {\n+\n+        private static final long serialVersionUID = -2855668124505116627L;\n+\n+        public IntMappingTypesDropDownChoice(\n+                final String id,\n+                final String name,\n+                final PropertyModel<IntMappingType> model,\n+                final AjaxDropDownChoicePanel<String> chooserToPopulate) {\n+\n+            super(id, name, model, false);\n+\n+            field.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+                private static final long serialVersionUID =\n+                        -1107858522700306810L;\n+\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+\n+                    chooserToPopulate.setRequired(true);\n+                    chooserToPopulate.setEnabled(true);\n+\n+                    final List<String> result;\n+\n+                    switch (model.getObject()) {\n+                        case UserSchema:\n+                            result = uSchemaAttrNames;\n+                            break;\n+\n+                        case UserDerivedSchema:\n+                            result = uDerSchemaAttrNames;\n+                            break;\n+\n+                        case UserVirtualSchema:\n+                            result = uVirSchemaAttrNames;\n+                            break;\n+\n+                        case SyncopeUserId:\n+                        case Password:\n+                        case Username:\n+                        default:\n+                            chooserToPopulate.setRequired(false);\n+                            chooserToPopulate.setEnabled(false);\n+                            result = Collections.EMPTY_LIST;\n+                    }\n+\n+                    chooserToPopulate.setChoices(result);\n+                    target.add(chooserToPopulate);\n+                }\n+            });\n+        }\n+    }\n+\n+    /**\n+     * Initialize resource schema names.\n+     */\n+    private void initResourceSchemaNames() {\n+        if (resourceTO != null\n+                && resourceTO.getConnectorId() != null\n+                && resourceTO.getConnectorId() > 0) {\n+\n+            final ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n+            connInstanceTO.setId(resourceTO.getConnectorId());\n+\n+            connInstanceTO.setConfiguration(\n+                    resourceTO.getConnConfProperties());\n+\n+            resourceSchemaNames = getResourceSchemaNames(\n+                    resourceTO.getConnectorId(),\n+                    resourceTO.getConnConfProperties());\n+\n+        } else {\n+            resourceSchemaNames = Collections.EMPTY_LIST;\n+        }\n+    }\n+\n+    /**\n+     * Get resource schema names.\n+     *\n+     * @param connectorId connector id.\n+     * @param conf connector configuration properties.\n+     * @return resource schema names.\n+     */\n+    private List<String> getResourceSchemaNames(\n+            final Long connectorId, final Set<ConnConfProperty> conf) {\n+        final List<String> names = new ArrayList<String>();\n+\n+        try {\n+\n+            final ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n+            connInstanceTO.setId(connectorId);\n+            connInstanceTO.setConfiguration(conf);\n+\n+            names.addAll(connRestClient.getSchemaNames(connInstanceTO));\n+\n+        } catch (Exception e) {\n+            LOG.warn(\"Error retrieving resource schema names\", e);\n+        }\n+\n+        return names;\n+    }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+\n+        if (event.getPayload() instanceof ConnConfModEvent) {\n+\n+            final AjaxRequestTarget target =\n+                    ((ConnConfModEvent) event.getPayload()).getTarget();\n+\n+            final List<ConnConfProperty> conf =\n+                    ((ConnConfModEvent) event.getPayload()).getConfiguration();\n+\n+            mappings.removeAll();\n+\n+            addSchemaMappingBtn.setEnabled(\n+                    resourceTO.getConnectorId() != null\n+                    && resourceTO.getConnectorId() > 0);\n+\n+            resourceSchemaNames = getResourceSchemaNames(\n+                    resourceTO.getConnectorId(),\n+                    new HashSet<ConnConfProperty>(conf));\n+\n+            target.add(mappingContainer);\n+        }\n+    }\n+}"},{"sha":"b8cf2ae09a107710290ba359ad3c1bc653ca005f","filename":"console/src/main/java/org/syncope/console/pages/panels/ResourceSecurityPanel.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceSecurityPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceSecurityPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceSecurityPanel.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -26,6 +26,7 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -117,7 +118,8 @@ protected Map<Long, String> load() {\n         final AjaxDropDownChoicePanel<Long> passwordPolicy =\n                 new AjaxDropDownChoicePanel<Long>(\n                 \"passwordPolicy\",\n-                getString(\"passwordPolicy\"),\n+                new ResourceModel(\"passwordPolicy\", \"passwordPolicy\").\n+                getObject(),\n                 new PropertyModel(resourceTO, \"passwordPolicy\"),\n                 false);\n \n@@ -138,7 +140,8 @@ protected Map<Long, String> load() {\n         final AjaxDropDownChoicePanel<Long> accountPolicy =\n                 new AjaxDropDownChoicePanel<Long>(\n                 \"accountPolicy\",\n-                getString(\"accountPolicy\"),\n+                new ResourceModel(\"accountPolicy\", \"accountPolicy\").\n+                getObject(),\n                 new PropertyModel(resourceTO, \"accountPolicy\"),\n                 false);\n \n@@ -159,7 +162,8 @@ protected Map<Long, String> load() {\n         final AjaxDropDownChoicePanel<Long> syncPolicy =\n                 new AjaxDropDownChoicePanel<Long>(\n                 \"syncPolicy\",\n-                getString(\"syncPolicy\"),\n+                new ResourceModel(\"syncPolicy\", \"syncPolicy\").\n+                getObject(),\n                 new PropertyModel(resourceTO, \"syncPolicy\"),\n                 false);\n "},{"sha":"4bc928234657042ef61da70b716ff4d54da4dfad","filename":"console/src/main/java/org/syncope/console/pages/panels/ResultSetPanel.java","status":"modified","additions":10,"deletions":11,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResultSetPanel.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -59,8 +59,8 @@\n import org.syncope.console.commons.XMLRolesReader;\n import org.syncope.console.pages.BasePage;\n import org.syncope.console.pages.DisplayAttributesModalPage;\n+import org.syncope.console.pages.EditUserModalPage;\n import org.syncope.console.pages.StatusModalPage;\n-import org.syncope.console.pages.UserModalPage;\n import org.syncope.console.rest.UserRestClient;\n import org.syncope.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.syncope.console.wicket.extensions.markup.html.repeater.data.table.TokenColumn;\n@@ -101,12 +101,12 @@ public class ResultSetPanel extends Panel implements IEventSource {\n     /**\n      * Schemas to be shown modal window height.\n      */\n-    private final static int STATUS_MODAL_WIN_HEIGHT = 400;\n+    private final static int STATUS_MODAL_WIN_HEIGHT = 500;\n \n     /**\n      * Schemas to be shown modal window width.\n      */\n-    private final static int STATUS_MODAL_WIN_WIDTH = 400;\n+    private final static int STATUS_MODAL_WIN_WIDTH = 500;\n \n     /**\n      * User rest client.\n@@ -142,9 +142,9 @@ public class ResultSetPanel extends Panel implements IEventSource {\n     final private FeedbackPanel feedbackPanel;\n \n     /**\n-     * Specify if results are about a filtered search or not.\n-     * Using this attribute it is possible to use this panel to show results\n-     * about user list and user search.\n+     * Specify if results are about a filtered search or not. Using this\n+     * attribute it is possible to use this panel to show results about user\n+     * list and user search.\n      */\n     private boolean filtered;\n \n@@ -164,8 +164,8 @@ public class ResultSetPanel extends Panel implements IEventSource {\n     private UserDataProvider dataProvider;\n \n     /**\n-     * Modal window to be used for user profile editing.\n-     * Global visibility is required ...\n+     * Modal window to be used for user profile editing. Global visibility is\n+     * required ...\n      */\n     private final ModalWindow editmodal = new ModalWindow(\"editModal\");\n \n@@ -469,11 +469,10 @@ public void onClick(final AjaxRequestTarget target) {\n \n                                     @Override\n                                     public Page createPage() {\n-                                        return new UserModalPage(\n+                                        return new EditUserModalPage(\n                                                 page.getPageReference(),\n                                                 editmodal,\n-                                                model.getObject(),\n-                                                UserModalPage.Mode.ADMIN);\n+                                                model.getObject());\n                                     }\n                                 });\n "},{"sha":"feaf5a971f85a4a31ef8fb9516c872649ad14bee","filename":"console/src/main/java/org/syncope/console/pages/panels/StatusPanel.java","status":"added","additions":376,"deletions":0,"changes":376,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -0,0 +1,376 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ * \n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.console.pages.panels;\n+\n+import java.io.Serializable;\n+import java.util.AbstractMap;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.lang.StringUtils;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.behavior.Behavior;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.Check;\n+import org.apache.wicket.markup.html.form.CheckGroup;\n+import org.apache.wicket.markup.html.form.CheckGroupSelector;\n+import org.apache.wicket.markup.html.image.Image;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Fragment;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.syncope.client.to.AbstractAttributableTO;\n+import org.syncope.client.to.AttributeTO;\n+import org.syncope.client.to.ConnObjectTO;\n+import org.syncope.client.to.ResourceTO;\n+import org.syncope.client.to.SchemaMappingTO;\n+import org.syncope.client.to.UserTO;\n+import org.syncope.console.rest.ResourceRestClient;\n+import org.syncope.console.rest.UserRestClient;\n+import org.syncope.types.IntMappingType;\n+\n+public class StatusPanel extends Panel {\n+\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG =\n+            LoggerFactory.getLogger(StatusPanel.class);\n+\n+    @SpringBean\n+    private UserRestClient userRestClient;\n+\n+    @SpringBean\n+    private ResourceRestClient resourceRestClient;\n+\n+    public enum Status {\n+\n+        ACTIVE,\n+        SUSPENDED,\n+        UNDEFINED,\n+        USER_NOT_FOUND;\n+\n+        public boolean isActive() {\n+            return this == ACTIVE;\n+        }\n+    }\n+\n+    public <T extends AbstractAttributableTO> StatusPanel(\n+            final String id,\n+            final UserTO userTO,\n+            final List<StatusBean> selectedResources) {\n+        this(id, userTO, selectedResources, true);\n+    }\n+\n+    public <T extends AbstractAttributableTO> StatusPanel(\n+            final String id,\n+            final UserTO userTO,\n+            final List<StatusBean> selectedResources,\n+            final boolean enabled) {\n+\n+        super(id);\n+\n+        final List<StatusBean> statuses = new ArrayList<StatusBean>();\n+\n+        final StatusBean syncope = new StatusBean();\n+        syncope.setAccountLink(userTO.getUsername());\n+        syncope.setResourceName(\"Syncope\");\n+        syncope.setStatus(userTO.getStatus() != null\n+                ? Status.valueOf(userTO.getStatus().toUpperCase())\n+                : Status.UNDEFINED);\n+\n+        statuses.add(syncope);\n+        statuses.addAll(getRemoteStatuses(userTO));\n+\n+        final CheckGroup group = new CheckGroup(\"group\", selectedResources);\n+        add(group);\n+\n+        final Fragment headerCheckFrag;\n+\n+        if (enabled) {\n+            headerCheckFrag = new Fragment(\n+                    \"headerCheck\", \"headerCheckFrag\", this);\n+            headerCheckFrag.add(\n+                    new CheckGroupSelector(\"groupselector\", group));\n+        } else {\n+            headerCheckFrag = new Fragment(\n+                    \"headerCheck\", \"emptyCheckFrag\", this);\n+        }\n+\n+        add(headerCheckFrag);\n+\n+        final ListView<StatusBean> resources =\n+                new ListView<StatusBean>(\"resources\", statuses) {\n+\n+                    private static final long serialVersionUID =\n+                            4949588177564901031L;\n+\n+                    @Override\n+                    protected void populateItem(\n+                            final ListItem<StatusBean> item) {\n+                        final Image image;\n+                        final String alt, title;\n+                        boolean checkVisibility = true;\n+\n+                        switch (item.getModelObject().getStatus()) {\n+                            case ACTIVE:\n+                                image = new Image(\n+                                        \"icon\", \"statuses/active.png\");\n+                                alt = \"active icon\";\n+                                title = \"Enabled\";\n+                                break;\n+                            case UNDEFINED:\n+                                image = new Image(\n+                                        \"icon\", \"statuses/undefined.png\");\n+                                checkVisibility = false;\n+                                alt = \"undefined icon\";\n+                                title = \"Undefined status\";\n+                                break;\n+                            case USER_NOT_FOUND:\n+                                image = new Image(\n+                                        \"icon\", \"statuses/usernotfound.png\");\n+                                checkVisibility = false;\n+                                alt = \"notfound icon\";\n+                                title = \"User not found\";\n+                                break;\n+                            default:\n+                                image = new Image(\n+                                        \"icon\", \"statuses/inactive.png\");\n+                                alt = \"inactive icon\";\n+                                title = \"Disabled\";\n+                        }\n+\n+                        image.add(new Behavior() {\n+\n+                            private static final long serialVersionUID =\n+                                    1469628524240283489L;\n+\n+                            @Override\n+                            public void onComponentTag(\n+                                    final Component component,\n+                                    final ComponentTag tag) {\n+                                tag.put(\"alt\", alt);\n+                                tag.put(\"title\", title);\n+                            }\n+                        });\n+\n+                        final Fragment checkFrag;\n+\n+                        if (!enabled) {\n+                            checkFrag = new Fragment(\n+                                    \"rowCheck\",\n+                                    \"emptyCheckFrag\",\n+                                    group.getParent());\n+                        } else {\n+                            final Check check = new Check(\n+                                    \"check\", item.getModel(), group);\n+\n+                            check.setEnabled(checkVisibility);\n+                            check.setVisible(checkVisibility);\n+\n+                            checkFrag = new Fragment(\n+                                    \"rowCheck\",\n+                                    \"rowCheckFrag\",\n+                                    getParent());\n+\n+                            checkFrag.add(check);\n+                        }\n+\n+                        item.add(checkFrag);\n+\n+                        item.add(new Label(\"resource\", new ResourceModel(\n+                                item.getModelObject().getResourceName(),\n+                                item.getModelObject().getResourceName())));\n+\n+                        if (StringUtils.isNotBlank(\n+                                item.getModelObject().getAccountLink())) {\n+\n+                            item.add(new Label(\"accountLink\", new ResourceModel(\n+                                    item.getModelObject().getAccountLink(),\n+                                    item.getModelObject().getAccountLink())));\n+\n+                        } else {\n+                            item.add(new Label(\"accountLink\", \"\"));\n+                        }\n+\n+                        item.add(image);\n+                    }\n+                };\n+\n+        resources.setReuseItems(true);\n+\n+        group.add(resources);\n+    }\n+\n+    private List<StatusBean> getRemoteStatuses(final UserTO userTO) {\n+        final List<StatusBean> statuses = new ArrayList<StatusBean>();\n+\n+        for (String res : userTO.getResources()) {\n+            final StatusBean statusBean = new StatusBean();\n+            statuses.add(statusBean);\n+\n+            statusBean.setResourceName(res);\n+\n+            final ResourceTO resourceTO = resourceRestClient.read(res);\n+\n+            final Map.Entry<IntMappingType, String> accountId =\n+                    getAccountId(resourceTO);\n+\n+            String objectId = null;\n+\n+            switch (accountId != null\n+                    ? accountId.getKey() : IntMappingType.SyncopeUserId) {\n+\n+                case SyncopeUserId:\n+                    objectId = String.valueOf(userTO.getId());\n+                    break;\n+                case Username:\n+                    objectId = userTO.getUsername();\n+                    break;\n+                case UserSchema:\n+                    AttributeTO attributeTO = null;\n+                    attributeTO =\n+                            userTO.getAttributeMap().get(accountId.getValue());\n+                    objectId =\n+                            attributeTO != null\n+                            && attributeTO.getValues() != null\n+                            && !attributeTO.getValues().isEmpty()\n+                            ? attributeTO.getValues().get(0) : null;\n+                    break;\n+                case UserDerivedSchema:\n+                    attributeTO = userTO.getDerivedAttributeMap().\n+                            get(accountId.getValue());\n+                    objectId =\n+                            attributeTO != null\n+                            && attributeTO.getValues() != null\n+                            && !attributeTO.getValues().isEmpty()\n+                            ? attributeTO.getValues().get(0) : null;\n+                    break;\n+                case UserVirtualSchema:\n+                    attributeTO = userTO.getVirtualAttributeMap().\n+                            get(accountId.getValue());\n+                    objectId =\n+                            attributeTO != null\n+                            && attributeTO.getValues() != null\n+                            && !attributeTO.getValues().isEmpty()\n+                            ? attributeTO.getValues().get(0) : null;\n+                    break;\n+                default:\n+            }\n+\n+\n+            try {\n+                Status status;\n+                String accountLink;\n+\n+                final ConnObjectTO objectTO =\n+                        userRestClient.getRemoteObject(res, objectId);\n+\n+                final Boolean enabled = isEnabled(objectTO);\n+\n+                status = enabled == null\n+                        ? Status.UNDEFINED\n+                        : enabled ? Status.ACTIVE : Status.SUSPENDED;\n+\n+                accountLink = getAccountLink(objectTO);\n+\n+                statusBean.setStatus(status);\n+                statusBean.setAccountLink(accountLink);\n+\n+            } catch (Exception e) {\n+                LOG.warn(\"User '{}' not found on resource '{}'\", objectId, res);\n+            }\n+        }\n+\n+        return statuses;\n+    }\n+\n+    private Boolean isEnabled(final ConnObjectTO objectTO) {\n+        final String STATUSATTR = \"__ENABLE__\";\n+\n+        final Map<String, AttributeTO> attributeTOs =\n+                objectTO.getAttributeMap();\n+\n+        final AttributeTO status = attributeTOs.get(STATUSATTR);\n+\n+        return status != null && status.getValues() != null\n+                && !status.getValues().isEmpty()\n+                ? Boolean.parseBoolean(status.getValues().get(0)) : null;\n+    }\n+\n+    private String getAccountLink(final ConnObjectTO objectTO) {\n+        final String NAME = \"__NAME__\";\n+\n+        final Map<String, AttributeTO> attributeTOs = objectTO.getAttributeMap();\n+        final AttributeTO name = attributeTOs.get(NAME);\n+\n+        return name != null && name.getValues() != null\n+                && !name.getValues().isEmpty()\n+                ? (String) name.getValues().get(0) : null;\n+    }\n+\n+    private Map.Entry<IntMappingType, String> getAccountId(\n+            final ResourceTO resourceTO) {\n+        Map.Entry<IntMappingType, String> accountId = null;\n+\n+        for (SchemaMappingTO mapping : resourceTO.getMappings()) {\n+            if (mapping.isAccountid()) {\n+                accountId = new AbstractMap.SimpleEntry<IntMappingType, String>(\n+                        mapping.getIntMappingType(),\n+                        mapping.getIntAttrName());\n+            }\n+        }\n+\n+        return accountId;\n+    }\n+\n+    public class StatusBean implements Serializable {\n+\n+        private String resourceName = null;\n+\n+        private String accountLink = null;\n+\n+        private Status status = Status.USER_NOT_FOUND;\n+\n+        public String getAccountLink() {\n+            return accountLink;\n+        }\n+\n+        public void setAccountLink(final String accountLink) {\n+            this.accountLink = accountLink;\n+        }\n+\n+        public String getResourceName() {\n+            return resourceName;\n+        }\n+\n+        public void setResourceName(final String resourceName) {\n+            this.resourceName = resourceName;\n+        }\n+\n+        public Status getStatus() {\n+            return status;\n+        }\n+\n+        public void setStatus(final Status status) {\n+            this.status = status;\n+        }\n+    }\n+}"},{"sha":"123a50015fb9d9f9e11b01920ff43146d9c655e3","filename":"console/src/main/java/org/syncope/console/pages/panels/SyncTasks.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSyncTasks.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -47,7 +47,7 @@\n import org.syncope.console.pages.SyncTaskModalPage;\n import org.syncope.console.pages.Tasks;\n import org.syncope.console.pages.Tasks.TasksProvider;\n-import org.syncope.console.pages.UserModalPage;\n+import org.syncope.console.pages.UserTemplateModalPage;\n import org.syncope.console.rest.TaskRestClient;\n import org.syncope.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.syncope.console.wicket.markup.html.form.ActionLink;\n@@ -174,7 +174,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n                             @Override\n                             public Page createPage() {\n-                                return new UserModalPage(\n+                                return new UserTemplateModalPage(\n                                         callerPageRef, window, taskTO);\n                             }\n                         });"},{"sha":"28656d155dc6836bc65fcb32c17158eb922a1c53","filename":"console/src/main/java/org/syncope/console/pages/panels/UserDetailsPanel.java","status":"modified","additions":0,"deletions":100,"changes":100,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -14,7 +14,6 @@\n  */\n package org.syncope.console.pages.panels;\n \n-import java.util.Date;\n import org.apache.wicket.Component;\n import org.apache.wicket.behavior.Behavior;\n import org.apache.wicket.markup.ComponentTag;\n@@ -29,11 +28,8 @@\n import org.apache.wicket.model.ResourceModel;\n import org.syncope.client.to.AbstractAttributableTO;\n import org.syncope.client.to.UserTO;\n-import org.syncope.console.SyncopeSession;\n-import org.syncope.console.wicket.markup.html.form.AjaxNumberFieldPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxPasswordFieldPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n-import org.syncope.console.wicket.markup.html.form.DateTimeFieldPanel;\n import org.syncope.console.wicket.markup.html.form.FieldPanel;\n \n public class UserDetailsPanel extends Panel {\n@@ -120,101 +116,5 @@ public void onComponentTag(\n \n         add(mandatoryPassword);\n         // ------------------------\n-\n-        // ------------------------\n-        // Status\n-        // ------------------------\n-        final AjaxTextFieldPanel status = new AjaxTextFieldPanel(\n-                \"status\",\n-                \"status\",\n-                new Model<String>(userTO.getStatus()),\n-                false);\n-\n-        status.setReadOnly(true);\n-        add(status);\n-        // ------------------------\n-\n-        // ------------------------\n-        // Creation date\n-        // ------------------------\n-        final DateTimeFieldPanel creationDate = new DateTimeFieldPanel(\n-                \"creationDate\",\n-                \"creationDate\",\n-                new Model<Date>(userTO.getCreationDate()),\n-                false,\n-                SyncopeSession.get().getDateFormat().toLocalizedPattern());\n-\n-        creationDate.setReadOnly(true);\n-        add(creationDate);\n-        // ------------------------\n-\n-        // ------------------------\n-        // Change password date\n-        // ------------------------\n-        final DateTimeFieldPanel changePwdDate = new DateTimeFieldPanel(\n-                \"changePwdDate\",\n-                \"changePwdDate\",\n-                new Model<Date>(userTO.getChangePwdDate()),\n-                false,\n-                SyncopeSession.get().getDateFormat().toLocalizedPattern());\n-\n-        changePwdDate.setReadOnly(true);\n-        add(changePwdDate);\n-        // ------------------------\n-\n-        // ------------------------\n-        // Last login date\n-        // ------------------------\n-        final DateTimeFieldPanel lastLoginDate = new DateTimeFieldPanel(\n-                \"lastLoginDate\",\n-                \"lastLoginDate\",\n-                new Model<Date>(userTO.getLastLoginDate()),\n-                false,\n-                SyncopeSession.get().getDateFormat().toLocalizedPattern());\n-\n-        lastLoginDate.setReadOnly(true);\n-        add(lastLoginDate);\n-        // ------------------------\n-\n-        // ------------------------\n-        // Failed logins\n-        // ------------------------\n-        final AjaxNumberFieldPanel failedLogins = new AjaxNumberFieldPanel(\n-                \"failedLogins\",\n-                \"failedLogins\",\n-                new Model<Number>(userTO.getFailedLogins()),\n-                Integer.class,\n-                false);\n-\n-        failedLogins.setReadOnly(true);\n-        add(failedLogins);\n-        // ------------------------\n-\n-        // ------------------------\n-        // Token\n-        // ------------------------\n-        final AjaxTextFieldPanel token = new AjaxTextFieldPanel(\n-                \"token\",\n-                \"token\",\n-                new Model<String>(userTO.getToken()),\n-                false);\n-\n-        token.setReadOnly(true);\n-        add(token);\n-        // ------------------------\n-\n-        // ------------------------\n-        // Token expire time\n-        // ------------------------\n-        final DateTimeFieldPanel tokenExpireTime = new DateTimeFieldPanel(\n-                \"tokenExpireTime\",\n-                \"tokenExpireTime\",\n-                new Model<Date>(userTO.getTokenExpireTime()),\n-                false,\n-                SyncopeSession.get().getDateFormat().toLocalizedPattern());\n-\n-        tokenExpireTime.setReadOnly(true);\n-        add(tokenExpireTime);\n-        // ------------------------\n     }\n }"},{"sha":"f41e8d9f18e65a208165d7506c9ac2d951127982","filename":"console/src/main/java/org/syncope/console/pages/panels/UserModalPageResult.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserModalPageResult.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserModalPageResult.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserModalPageResult.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -50,8 +50,10 @@ public class UserModalPageResult extends Panel {\n \n     private static final int PROPAGATION_RESULT_PAGINATOR_ROWS = 7;\n \n-    public UserModalPageResult(final String id,\n-            final ModalWindow window, final UserModalPage.Mode mode,\n+    public UserModalPageResult(\n+            final String id,\n+            final ModalWindow window, \n+            final UserModalPage.Mode mode,\n             final UserTO userTO) {\n \n         super(id);"},{"sha":"f4783ed83a7ca05487394e1a4a0c9d2b60597007","filename":"console/src/main/java/org/syncope/console/rest/ConnectorRestClient.java","status":"modified","additions":26,"deletions":6,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -16,6 +16,7 @@\n \n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n@@ -110,6 +111,7 @@ public List<ConnBundleTO> getAllBundles() {\n     public List<ConnConfProperty> getConnectorProperties(\n             final Long connectorId) {\n         List<ConnConfProperty> properties = null;\n+\n         try {\n             properties = Arrays.asList(restTemplate.getForObject(baseURL\n                     + \"connector/{connectorId}/configurationProperty/list\",\n@@ -146,8 +148,8 @@ private Set<ConnConfProperty> filterProperties(final Set<ConnConfProperty> prope\n     /**\n      * Test connection.\n      *\n-     * @param connectorTO\n-     * @return Connection status\n+     * @param connectorTO connector.\n+     * @return Connection status.\n      */\n     public Boolean check(final ConnInstanceTO connectorTO) {\n \n@@ -158,12 +160,30 @@ public Boolean check(final ConnInstanceTO connectorTO) {\n                 filterProperties(connector.getConfiguration()));\n \n         try {\n-            return restTemplate.postForObject(baseURL\n-                    + \"connector/check.json\", connector, Boolean.class);\n+            return restTemplate.postForObject(\n+                    baseURL + \"connector/check.json\", connector, Boolean.class);\n \n-        } catch (Exception ex) {\n-            LOG.error(\"Connector not found {}\", ex);\n+        } catch (Exception e) {\n+            LOG.error(\"Connector not found {}\", connector, e);\n             return false;\n         }\n     }\n+\n+    public List<String> getSchemaNames(final ConnInstanceTO connectorTO) {\n+        List<String> schemaNames = null;\n+\n+        try {\n+            schemaNames = Arrays.asList(restTemplate.postForObject(\n+                    baseURL + \"connector/schema/list\",\n+                    connectorTO, String[].class));\n+\n+            // re-order schema names list\n+            Collections.sort(schemaNames);\n+\n+        } catch (Exception e) {\n+            LOG.error(\"While getting resource schema names\", e);\n+        }\n+\n+        return schemaNames;\n+    }\n }"},{"sha":"c7e2ba4930635f9184cd3f028a4fdfc4dc3e1239","filename":"console/src/main/java/org/syncope/console/rest/ResourceRestClient.java","status":"modified","additions":0,"deletions":18,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -15,7 +15,6 @@\n package org.syncope.console.rest;\n \n import java.util.Arrays;\n-import java.util.Collections;\n import java.util.List;\n import org.springframework.stereotype.Component;\n import org.syncope.client.to.ResourceTO;\n@@ -27,23 +26,6 @@\n @Component\n public class ResourceRestClient extends AbstractBaseRestClient {\n \n-    public List<String> getSchemaNames(final String resourceName) {\n-        List<String> schemaNames = null;\n-\n-        try {\n-            schemaNames = Arrays.asList(restTemplate.getForObject(\n-                    baseURL + \"resource/schema/{resourceName}/list\",\n-                    String[].class, resourceName));\n-\n-            // re-order schema names list\n-            Collections.sort(schemaNames);\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While getting resource schema names\", e);\n-        }\n-\n-        return schemaNames;\n-    }\n-\n     public List<ResourceTO> getAllResources() {\n         List<ResourceTO> resources = null;\n "},{"sha":"d6d977d4847a4bc829a1f957604ba82d76234632","filename":"console/src/main/java/org/syncope/console/rest/UserRestClient.java","status":"modified","additions":28,"deletions":17,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -22,6 +22,7 @@\n import org.syncope.client.to.ConnObjectTO;\n import org.syncope.client.to.UserTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n+import org.syncope.console.pages.panels.StatusPanel.StatusBean;\n \n /**\n  * Console client for invoking rest users services.\n@@ -36,6 +37,7 @@ public Integer count() {\n \n     /**\n      * Get all stored users.\n+     *\n      * @param page pagination element to fetch\n      * @param size maximum number to fetch\n      * @return list of TaskTO objects\n@@ -48,6 +50,7 @@ public List<UserTO> list(final int page, final int size) {\n \n     /**\n      * Create a new user and start off the workflow.\n+     *\n      * @param userTO instance\n      * @throws SyncopeClientCompositeErrorException\n      */\n@@ -60,6 +63,7 @@ public UserTO create(final UserTO userTO)\n \n     /**\n      * Update existing user.\n+     *\n      * @param userTO\n      * @return true is the opertion ends succesfully, false otherwise\n      */\n@@ -93,6 +97,7 @@ public Integer searchCount(final NodeCond searchCond) {\n \n     /**\n      * Search an user by its schema values.\n+     *\n      * @param userTO\n      * @return UserTOs\n      */\n@@ -121,45 +126,51 @@ public ConnObjectTO getRemoteObject(\n                 ConnObjectTO.class, resourceName, objectId);\n     }\n \n-    public UserTO reactivate(long userId, List<String> resources)\n+    public UserTO reactivate(long userId, List<StatusBean> statuses)\n             throws SyncopeClientCompositeErrorException {\n \n-        return enable(userId, resources, true);\n+        return enable(userId, statuses, true);\n     }\n \n-    public UserTO suspend(long userId, List<String> resources)\n+    public UserTO suspend(long userId, List<StatusBean> statuses)\n             throws SyncopeClientCompositeErrorException {\n \n-        return enable(userId, resources, false);\n+        return enable(userId, statuses, false);\n     }\n \n     private UserTO enable(\n             final long userId,\n-            final List<String> resources,\n+            final List<StatusBean> statuses,\n             final boolean enable)\n             throws SyncopeClientCompositeErrorException {\n \n-        boolean performLoacal = false;\n-        if (resources.contains(\"Syncope\")) {\n-            resources.remove(\"Syncope\");\n-            performLoacal = true;\n-        }\n-\n         final StringBuilder query = new StringBuilder();\n+\n         query.append(baseURL).append(\"user/\").append(\n                 enable ? \"reactivate/\" : \"suspend/\").append(userId).\n                 append(\"?\").\n-                // perform on syncope if and only if it has been requested\n-                append(\"performLocally=\").append(performLoacal).\n-                append(\"&\").\n                 // perform on resource if and only if resources have been speciofied\n-                append(\"performRemotely=\").append(!resources.isEmpty()).\n+                append(\"performRemotely=\").append(!statuses.isEmpty()).\n                 append(\"&\");\n \n-        for (String resource : resources) {\n-            query.append(\"resourceNames=\").append(resource).append(\"&\");\n+        boolean performLoacal = false;\n+\n+        for (StatusBean status : statuses) {\n+            if ((enable && !status.getStatus().isActive())\n+                    || (!enable && status.getStatus().isActive())) {\n+\n+                if (\"Syncope\".equals(status.getResourceName())) {\n+                    performLoacal = true;\n+                } else {\n+                    query.append(\"resourceNames=\").\n+                            append(status.getResourceName()).append(\"&\");\n+                }\n+            }\n         }\n \n+        // perform on syncope if and only if it has been requested\n+        query.append(\"performLocally=\").append(performLoacal);\n+\n         return restTemplate.getForObject(query.toString(), UserTO.class);\n     }\n }"},{"sha":"fca549dd2c01a57956b85b50aae2629cea626ad1","filename":"console/src/main/resources/org/syncope/console/pages/Login.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.html?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -49,7 +49,7 @@\n                 <input type=\"submit\" wicket:id=\"submit\"/>\n             </form>\n \n-            <span wicket:id=\"selfRegistration\"/>\n+            <span style=\"display: inline-table; margin-bottom: 10px;\" wicket:id=\"selfRegistration\"/>\n \n             <wicket:fragment wicket:id=\"selfRegNotAllowed\"/>\n             <wicket:fragment wicket:id=\"selfRegAllowed\">"},{"sha":"4d1a5bda2b3ff4d31a0bd9e499110f3fb5844f6a","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage.html","status":"modified","additions":3,"deletions":197,"changes":200,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -50,208 +50,14 @@\n                     <li><a href=\"#security\"><span><wicket:message key=\"security\"/></span></a></li>\n                 </ul>\n                 <div id=\"resource\">\n-                    <div id=\"formtable\">\n-                        <div class=\"tablerow\">\n-                            <div class=\"tablecolumn_label medium_fixedsize\">\n-                                <label for=\"name\"><wicket:message key=\"name\"/></label>\n-                            </div>\n-                            <div class=\"tablecolumn_field medium_dynamicsize\">\n-                                <span wicket:id=\"name\">[name]</span>\n-                            </div>\n-                        </div>\n-\n-                        <div class=\"tablerow\">\n-                            <div class=\"tablecolumn_label medium_fixedsize\">\n-                                <label for=\"connector\"><wicket:message key=\"connector\"/></label>\n-                            </div>\n-                            <div class=\"tablecolumn_field medium_dynamicsize\">\n-                                <span wicket:id=\"connector\">[connector]</span>\n-                            </div>\n-                        </div>\n-\n-                        <div class=\"tablerow\">\n-                            <div class=\"tablecolumn_label medium_fixedsize\">\n-                                <label for=\"mandatoryConstraint\"><wicket:message key=\"forceMandatoryConstraint\"/></label>\n-                            </div>\n-                            <div class=\"tablecolumn_field medium_dynamicsize\">\n-                                <span wicket:id=\"forceMandatoryConstraint\">[forceMandatoryConstraint]</span>\n-                            </div>\n-                        </div>\n-\n-                        <div class=\"tablerow\">\n-                            <div class=\"tablecolumn_label medium_fixedsize\">\n-                                <label for=\"propagationPrimary\"><wicket:message key=\"propagationPrimary\"/></label>\n-                            </div>\n-                            <div class=\"tablecolumn_field medium_dynamicsize\">\n-                                <span wicket:id=\"propagationPrimary\">[propagationPrimary]</span>\n-                            </div>\n-                        </div>\n-\n-                        <div class=\"tablerow\">\n-                            <div class=\"tablecolumn_label medium_fixedsize\">\n-                                <label for=\"propagationPriority\"><wicket:message key=\"propagationPriority\"/></label>\n-                            </div>\n-                            <div class=\"tablecolumn_field medium_dynamicsize\">\n-                                <span wicket:id=\"propagationPriority\">[propagationPriority]</span>\n-                            </div>\n-                        </div>\n-\n-                        <div class=\"tablerow\">\n-                            <div class=\"tablecolumn_label medium_fixedsize\">\n-                                <label for=\"propagationMode\"><wicket:message key=\"propagationMode\"/></label>\n-                            </div>\n-                            <div class=\"tablecolumn_field medium_dynamicsize\">\n-                                <span wicket:id=\"propagationMode\">[propagationMode]</span>\n-                            </div>\n-                        </div>\n-\n-                        <div class=\"tablerow\">\n-                            <div class=\"tablecolumn_label medium_fixedsize\">\n-                                <label for=\"createTraceLevel\"><wicket:message key=\"createTraceLevel\"/></label>\n-                            </div>\n-                            <div class=\"tablecolumn_field medium_dynamicsize\">\n-                                <span wicket:id=\"createTraceLevel\">[createTraceLevel]</span>\n-                            </div>\n-                        </div>\n-\n-                        <div class=\"tablerow\">\n-                            <div class=\"tablecolumn_label medium_fixedsize\">\n-                                <label for=\"updateTraceLevel\"><wicket:message key=\"updateTraceLevel\"/></label>\n-                            </div>\n-                            <div class=\"tablecolumn_field medium_dynamicsize\">\n-                                <span wicket:id=\"updateTraceLevel\">[updateTraceLevel]</span>\n-                            </div>\n-                        </div>\n-\n-                        <div class=\"tablerow\">\n-                            <div class=\"tablecolumn_label medium_fixedsize\">\n-                                <label for=\"deleteTraceLevel\"><wicket:message key=\"deleteTraceLevel\"/></label>\n-                            </div>\n-                            <div class=\"tablecolumn_field medium_dynamicsize\">\n-                                <span wicket:id=\"deleteTraceLevel\">[deleteTraceLevel]</span>\n-                            </div>\n-                        </div>\n-\n-                        <div class=\"tablerow\">\n-                            <div class=\"tablecolumn_label medium_fixedsize\">\n-                                <label for=\"syncTraceLevel\"><wicket:message key=\"syncTraceLevel\"/></label>\n-                            </div>\n-                            <div class=\"tablecolumn_field medium_dynamicsize\">\n-                                <span wicket:id=\"syncTraceLevel\">[syncTraceLevel]</span>\n-                            </div>\n-                        </div>\n-\n-                        <div class=\"tablerow\">\n-                            <div class=\"tablecolumn_label medium_fixedsize\">\n-                                <label for=\"resetToken\"><wicket:message key=\"resetToken\"/></label>\n-                            </div>\n-                            <div class=\"tablecolumn_field medium_dynamicsize\">\n-                                <span wicket:id=\"resetToken\">[resetToken]</span>\n-                            </div>\n-                        </div>\n-                    </div>\n-                    <script type=\"text/javascript\">\n-                        $(function() {\n-                            $('div#resource div#formtable div.tablerow:even').addClass(\"alt\");\n-                        });\n-                    </script>\n+                    <span wicket:id=\"details\">[details]</span>\n                 </div>\n                 <div id=\"mappings\">\n-                    <div id=\"formtable\">\n-                        <div class=\"tablerow\">\n-                            <div class=\"tablecolumn_field all_dynamicsize\">\n-                                <table id=\"mappingUserSchema\"\n-                                       class=\"ui-widget ui-widget-content ui-corner-all\"\n-                                       style=\"font-size: 1em;margin-top:2px;\"\n-                                       width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\"\n-                                       wicket:id=\"mappingContainer\">\n-                                    <thead>\n-                                        <tr class=\"ui-widget-header\">\n-                                            <th><wicket:message key=\"delete\"/></th>\n-                                    <th><wicket:message key=\"intMappingTypes\"/></th>\n-                                    <th><wicket:message key=\"intAttrNames\"/></th>\n-                                    <th><wicket:message key=\"extAttrNames\"/></th>\n-                                    <th><wicket:message key=\"mandatoryCondition\"/></th>\n-                                    <th><wicket:message key=\"accountId\"/></th>\n-                                    <th><wicket:message key=\"password\"/></th>\n-                                    </tr>\n-                                    </thead>\n-                                    <tfoot>\n-                                        <tr>\n-                                            <td colspan=\"7\" style=\"padding: 5px\">\n-                                                <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                                                       wicket:id=\"addUserSchemaMappingBtn\" />\n-                                            </td>\n-                                        </tr>\n-                                    </tfoot>\n-                                    <tbody>\n-                                        <tr wicket:id=\"mappings\">\n-                                            <td align=\"center\" valign=\"middle\">\n-                                                <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n-                                            </td>\n-                                            <td align=\"center\" valign=\"middle\">\n-                                                <span wicket:id=\"intMappingTypes\">[intMappingTypes]</span>\n-                                            </td>\n-                                            <td align=\"center\" valign=\"middle\">\n-                                                <span wicket:id=\"intAttrNames\">[intAttrNames]</span>\n-                                            </td>\n-                                            <td align=\"center\" valign=\"middle\">\n-                                                <span wicket:id=\"extAttrName\">[extAttrName]</span>\n-                                            </td>\n-                                            <td align=\"center\" valign=\"middle\">\n-                                                <span wicket:id=\"mandatoryCondition\">[mandatoryCondition]</span>\n-                                            </td>\n-                                            <td align=\"center\" valign=\"middle\">\n-                                                <span wicket:id=\"accountId\">[accountId]</span>\n-                                            </td>\n-                                            <td align=\"center\" valign=\"middle\">\n-                                                <span wicket:id=\"password\">[password]</span>\n-                                            </td>\n-                                        </tr>\n-                                    </tbody>\n-                                </table>\n-                            </div>\n-                        </div>\n-\n-                        <div class=\"tablerow\" style=\"margin-top: 10px\">\n-                            <div class=\"tablecolumn_label long_fixedsize\">\n-                                <label for=\"accountLink\"><wicket:message key=\"accountLink\"/></label>\n-                                <span wicket:id=\"accountLink\">[accountLink]</span>\n-                            </div>\n-                        </div>\n-                    </div>\n-\n-                    <script type=\"text/javascript\">\n-                        $(function() {\n-                            $('div#mappings div#formtable div.tablerow:even').addClass(\"alt\");\n-                        });\n-                    </script>\n+                    <span wicket:id=\"mapping\">[mapping]</span>\n                 </div>\n \n                 <div id=\"connectorProperties\">\n-                    <span wicket:id=\"connectorPropertiesContainer\">\n-                        <div id=\"formtable\">\n-                            <div class=\"tablerow\" wicket:id=\"connectorProperties\">\n-                                <div class=\"tablecolumn_label medium_fixedsize\">\n-                                    <span wicket:id=\"connPropAttrSchema\">[connPropAttrSchema]</span>\n-                                </div>\n-                                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                                    <span wicket:id=\"panel\">[connPropAttrValue]</span>\n-                                </div>\n-                            </div>\n-                        </div>\n-\n-                        <script type=\"text/javascript\">\n-                            $(function() {\n-                                $('div#connectorProperties div#formtable div.tablerow:even').addClass(\"alt\");\n-                            });\n-                        </script>\n-                        <div>\n-                            <label style=\"position: absolute; top: 10px; right:55px;\"><wicket:message key=\"check\"/></label>\n-                            <a style=\"position: absolute; top: 2px; right:20px;\" wicket:id=\"check\">\n-                                <img src=\"img/ping.png\" width=\"30\" height=\"30\" /></a>\n-                        </div>\n-                    </span>\n+                    <span wicket:id=\"connconf\">[connconf]</span>\n                 </div>\n \n                 <div id=\"security\">"},{"sha":"b234f63387273dba08d5f3fd00c44ef9bde989df","filename":"console/src/main/resources/org/syncope/console/pages/StatusModalPage.html","status":"modified","additions":2,"deletions":39,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.html?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -14,29 +14,6 @@\n -->\n <wicket:head>\n     <style>\n-        div.group{\n-            width:300px;\n-        }\n-\n-        div#check{\n-            width:20%;\n-            height: 25px;\n-            float:left;\n-        }\n-\n-        div#resource{\n-            margin-top: 3px;\n-            width:70%;\n-            height: 25px;\n-            float:left;\n-        }\n-\n-        div#status{\n-            margin-top: 3px;\n-            height: 25px;\n-            float: left;\n-        }\n-\n         .submit{\n             display:  block;\n             clear:  both;\n@@ -52,22 +29,8 @@\n         <wicket:message key=\"title\"/>\n         </p>\n \n-        <div>\n-            <span wicket:id=\"selections\">\n-                <div class=\"group\">\n-                    <div wicket:id=\"resources\">\n-                        <div id=\"check\">\n-                            <input type=\"checkbox\" wicket:id=\"check\"/>\n-                        </div>\n-                        <div id=\"resource\">\n-                            <span wicket:id=\"name\">[schema name]</span>\n-                        </div>\n-                        <div id=\"status\">\n-                            <img wicket:id=\"icon\"/>\n-                        </div>\n-                    </div>\n-                </div>\n-            </span>\n+        <div style=\"display: block; margin: 10px\">\n+            <span wicket:id=\"statuspanel\">[Status Panel]</span>\n         </div>\n \n         <div class=\"submit\">"},{"sha":"cb8ed59679138cef098e623e3eac9fc71b3142fe","filename":"console/src/main/resources/org/syncope/console/pages/UserModalPage.html","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -76,6 +76,8 @@\n                     </ul>\n                     <div id=\"tabs-1\">\n                         <span wicket:id=\"details\">[user details]</span>\n+                        <span wicket:id=\"statuspanel\">[Sattus Panel]</span>\n+                        <span wicket:id=\"accountinformation\">[Account Information]</span>\n                     </div>\n                     <div id=\"tabs-2\">\n                         <div id=\"formtable\">"},{"sha":"6f03a98a10c3e7f4f73d35e6f92d88d2d28d9c87","filename":"console/src/main/resources/org/syncope/console/pages/panels/AccountInformationPanel.html","status":"added","additions":110,"deletions":0,"changes":110,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAccountInformationPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAccountInformationPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAccountInformationPanel.html?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -0,0 +1,110 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<html>\n+    <wicket:head>\n+        <style>\n+            div.information{\n+                margin-top: 30px; \n+                border: 1px solid #DDDDDD; \n+                font-size: 8px;\n+                color: #555555;\n+                display: inline-table; \n+                width: 100%; \n+                clear: both; \n+                float:none;\n+            }\n+\n+            div.infolabel{\n+                margin-left: 5px; \n+                float:left; \n+                width: 150px;\n+                font-weight: bold\n+            }\n+\n+            div.infoleft{\n+                float:left; \n+                display: inline-table; \n+                width: 50%\n+            }\n+\n+            div.inforight{ \n+                display: inline-table; \n+                width: 50%\n+            }\n+\n+            div.inforow{\n+                display: inline-table;\n+                width: 100%\n+            }\n+        </style>\n+    </wicket:head>\n+    <wicket:panel>\n+        <div class=\"information\">\n+            <div class=\"infoleft\">\n+                <div class=\"infolabel\"> \n+                    <wicket:message key=\"creationDate\"/>:\n+                </div>\n+                <div>\n+                    <span wicket:id=\"creationDate\" />\n+                </div>\n+            </div>\n+\n+            <div class=\"inforight\">\n+                <div class=\"infolabel\">\n+                    <wicket:message key=\"lastLoginDate\"/>:\n+                </div>\n+                <div>\n+                    <span wicket:id=\"lastLoginDate\" />\n+                </div>\n+            </div>\n+\n+            <div class=\"infoleft\">\n+                <div class=\"infolabel\">\n+                    <wicket:message key=\"changePwdDate\"/>:\n+                </div>\n+                <div>\n+                    <span wicket:id=\"changePwdDate\" />\n+                </div>\n+            </div>\n+\n+            <div class=\"inforight\">\n+                <div class=\"infolabel\">\n+                    <wicket:message key=\"failedLogins\"/>:\n+                </div>\n+                <div>\n+                    <span wicket:id=\"failedLogins\" />\n+                </div>\n+            </div>\n+\n+            <div class=\"inforow\">\n+                <div class=\"infolabel\">\n+                    <wicket:message key=\"token\"/>:\n+                </div>\n+                <div>\n+                    <span wicket:id=\"token\" />\n+                </div>\n+            </div>\n+\n+            <div class=\"inforow\">\n+                <div class=\"infolabel\">\n+                    <wicket:message key=\"tokenExpireTime\"/>\n+                </div>\n+                <div>\n+                    <span wicket:id=\"tokenExpireTime\" />\n+                </div>\n+            </div>\n+        </div>\n+    </wicket:panel>\n+</html>\n\\ No newline at end of file"},{"sha":"3a652486a3cbd2b30146c33cde0cf4c895a71df6","filename":"console/src/main/resources/org/syncope/console/pages/panels/AccountInformationPanel.properties","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAccountInformationPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAccountInformationPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAccountInformationPanel.properties?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -0,0 +1,30 @@\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#       http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+creationDate=Creation Date\n+changePwdDate=Last Change Password Date\n+lastLoginDate=Last Login Data\n+failedLogins=Subsequent Failed Logins\n+token=Token\n+tokenExpireTime=Token Expire Time\n+confirmPassword=Password (confirm)"},{"sha":"3c9a205d955ad8c3827614c1e4ec443ef07a07fe","filename":"console/src/main/resources/org/syncope/console/pages/panels/AccountInformationPanel_it.properties","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAccountInformationPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAccountInformationPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAccountInformationPanel_it.properties?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -0,0 +1,30 @@\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#       http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+creationDate=Data Di Creazione\n+changePwdDate=Data Ultimo Cambio Password\n+lastLoginDate=Data Di Ultimo Login\n+failedLogins=Login Consecutivi Falliti\n+token=Token\n+tokenExpireTime=Scadenza Token\n+confirmPassword=Password (conferma)"},{"sha":"a066ee31876ed387e3ba5e83e9082b5067d10a63","filename":"console/src/main/resources/org/syncope/console/pages/panels/ResourceConnConfPanel.html","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceConnConfPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceConnConfPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceConnConfPanel.html?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -0,0 +1,41 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<html>\n+    <wicket:panel>\n+        <span wicket:id=\"connectorPropertiesContainer\">\n+            <div id=\"formtable\">\n+                <div class=\"tablerow\" wicket:id=\"connectorProperties\">\n+                    <div class=\"tablecolumn_label medium_fixedsize\">\n+                        <span wicket:id=\"connPropAttrSchema\">[connPropAttrSchema]</span>\n+                    </div>\n+                    <div class=\"tablecolumn_field medium_dynamicsize\">\n+                        <span wicket:id=\"panel\">[connPropAttrValue]</span>\n+                    </div>\n+                </div>\n+            </div>\n+\n+            <script type=\"text/javascript\">\n+                $(function() {\n+                    $('div#connectorProperties div#formtable div.tablerow:even').addClass(\"alt\");\n+                });\n+            </script>\n+            <div>\n+                <label style=\"position: absolute; top: 10px; right:55px;\"><wicket:message key=\"check\"/></label>\n+                <a style=\"position: absolute; top: 2px; right:20px;\" wicket:id=\"check\">\n+                    <img src=\"img/ping.png\" width=\"30\" height=\"30\" /></a>\n+            </div>\n+        </span>\n+    </wicket:panel>\n+</html>"},{"sha":"a9bfe083037c414ccf8f4edd0762ea313b455c90","filename":"console/src/main/resources/org/syncope/console/pages/panels/ResourceDetailsPanel.html","status":"added","additions":123,"deletions":0,"changes":123,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.html?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -0,0 +1,123 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<html>\n+    <wicket:panel>\n+        <div id=\"formtable\">\n+            <div class=\"tablerow\">\n+                <div class=\"tablecolumn_label medium_fixedsize\">\n+                    <label for=\"name\"><wicket:message key=\"name\"/></label>\n+                </div>\n+                <div class=\"tablecolumn_field medium_dynamicsize\">\n+                    <span wicket:id=\"name\">[name]</span>\n+                </div>\n+            </div>\n+\n+            <div class=\"tablerow\">\n+                <div class=\"tablecolumn_label medium_fixedsize\">\n+                    <label for=\"connector\"><wicket:message key=\"connector\"/></label>\n+                </div>\n+                <div class=\"tablecolumn_field medium_dynamicsize\">\n+                    <span wicket:id=\"connector\">[connector]</span>\n+                </div>\n+            </div>\n+\n+            <div class=\"tablerow\">\n+                <div class=\"tablecolumn_label medium_fixedsize\">\n+                    <label for=\"forceMandatoryConstraint\"><wicket:message key=\"forceMandatoryConstraint\"/></label>\n+                </div>\n+                <div class=\"tablecolumn_field medium_dynamicsize\">\n+                    <span wicket:id=\"forceMandatoryConstraint\">[forceMandatoryConstraint]</span>\n+                </div>\n+            </div>\n+\n+            <div class=\"tablerow\">\n+                <div class=\"tablecolumn_label medium_fixedsize\">\n+                    <label for=\"propagationPrimary\"><wicket:message key=\"propagationPrimary\"/></label>\n+                </div>\n+                <div class=\"tablecolumn_field medium_dynamicsize\">\n+                    <span wicket:id=\"propagationPrimary\">[propagationPrimary]</span>\n+                </div>\n+            </div>\n+\n+            <div class=\"tablerow\">\n+                <div class=\"tablecolumn_label medium_fixedsize\">\n+                    <label for=\"propagationPriority\"><wicket:message key=\"propagationPriority\"/></label>\n+                </div>\n+                <div class=\"tablecolumn_field medium_dynamicsize\">\n+                    <span wicket:id=\"propagationPriority\">[propagationPriority]</span>\n+                </div>\n+            </div>\n+\n+            <div class=\"tablerow\">\n+                <div class=\"tablecolumn_label medium_fixedsize\">\n+                    <label for=\"propagationMode\"><wicket:message key=\"propagationMode\"/></label>\n+                </div>\n+                <div class=\"tablecolumn_field medium_dynamicsize\">\n+                    <span wicket:id=\"propagationMode\">[propagationMode]</span>\n+                </div>\n+            </div>\n+\n+            <div class=\"tablerow\">\n+                <div class=\"tablecolumn_label medium_fixedsize\">\n+                    <label for=\"createTraceLevel\"><wicket:message key=\"createTraceLevel\"/></label>\n+                </div>\n+                <div class=\"tablecolumn_field medium_dynamicsize\">\n+                    <span wicket:id=\"createTraceLevel\">[createTraceLevel]</span>\n+                </div>\n+            </div>\n+\n+            <div class=\"tablerow\">\n+                <div class=\"tablecolumn_label medium_fixedsize\">\n+                    <label for=\"updateTraceLevel\"><wicket:message key=\"updateTraceLevel\"/></label>\n+                </div>\n+                <div class=\"tablecolumn_field medium_dynamicsize\">\n+                    <span wicket:id=\"updateTraceLevel\">[updateTraceLevel]</span>\n+                </div>\n+            </div>\n+\n+            <div class=\"tablerow\">\n+                <div class=\"tablecolumn_label medium_fixedsize\">\n+                    <label for=\"deleteTraceLevel\"><wicket:message key=\"deleteTraceLevel\"/></label>\n+                </div>\n+                <div class=\"tablecolumn_field medium_dynamicsize\">\n+                    <span wicket:id=\"deleteTraceLevel\">[deleteTraceLevel]</span>\n+                </div>\n+            </div>\n+\n+            <div class=\"tablerow\">\n+                <div class=\"tablecolumn_label medium_fixedsize\">\n+                    <label for=\"syncTraceLevel\"><wicket:message key=\"syncTraceLevel\"/></label>\n+                </div>\n+                <div class=\"tablecolumn_field medium_dynamicsize\">\n+                    <span wicket:id=\"syncTraceLevel\">[syncTraceLevel]</span>\n+                </div>\n+            </div>\n+\n+            <div class=\"tablerow\">\n+                <div class=\"tablecolumn_label medium_fixedsize\">\n+                    <label for=\"resetToken\"><wicket:message key=\"resetToken\"/></label>\n+                </div>\n+                <div class=\"tablecolumn_field medium_dynamicsize\">\n+                    <span wicket:id=\"resetToken\">[resetToken]</span>\n+                </div>\n+            </div>\n+        </div>\n+        <script type=\"text/javascript\">\n+            $(function() {\n+                $('div#resource div#formtable div.tablerow:even').addClass(\"alt\");\n+            });\n+        </script>\n+    </wicket:panel>\n+</html>"},{"sha":"23b9a3d31244d22dc95b33069b868dddece4138f","filename":"console/src/main/resources/org/syncope/console/pages/panels/ResourceMappingPanel.html","status":"added","additions":87,"deletions":0,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.html?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -0,0 +1,87 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<html>\n+    <wicket:panel>\n+        <div id=\"formtable\">\n+            <div class=\"tablerow\">\n+                <div class=\"tablecolumn_field all_dynamicsize\">\n+                    <table id=\"mappingUserSchema\"\n+                           class=\"ui-widget ui-widget-content ui-corner-all\"\n+                           style=\"font-size: 1em;margin-top:2px;\"\n+                           width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\"\n+                           wicket:id=\"mappingContainer\">\n+                        <thead>\n+                            <tr class=\"ui-widget-header\">\n+                                <th><wicket:message key=\"delete\"/></th>\n+                        <th><wicket:message key=\"intMappingTypes\"/></th>\n+                        <th><wicket:message key=\"intAttrNames\"/></th>\n+                        <th><wicket:message key=\"extAttrNames\"/></th>\n+                        <th><wicket:message key=\"mandatoryCondition\"/></th>\n+                        <th><wicket:message key=\"accountId\"/></th>\n+                        <th><wicket:message key=\"password\"/></th>\n+                        </tr>\n+                        </thead>\n+                        <tfoot>\n+                            <tr>\n+                                <td colspan=\"7\" style=\"padding: 5px\">\n+                                    <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                                           wicket:id=\"addUserSchemaMappingBtn\" />\n+                                </td>\n+                            </tr>\n+                        </tfoot>\n+                        <tbody>\n+                            <tr wicket:id=\"mappings\">\n+                                <td align=\"center\" valign=\"middle\">\n+                                    <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n+                                </td>\n+                                <td align=\"center\" valign=\"middle\">\n+                                    <span wicket:id=\"intMappingTypes\">[intMappingTypes]</span>\n+                                </td>\n+                                <td align=\"center\" valign=\"middle\">\n+                                    <span wicket:id=\"intAttrNames\">[intAttrNames]</span>\n+                                </td>\n+                                <td align=\"center\" valign=\"middle\">\n+                                    <span wicket:id=\"extAttrName\">[extAttrName]</span>\n+                                </td>\n+                                <td align=\"center\" valign=\"middle\">\n+                                    <span wicket:id=\"mandatoryCondition\">[mandatoryCondition]</span>\n+                                </td>\n+                                <td align=\"center\" valign=\"middle\">\n+                                    <span wicket:id=\"accountId\">[accountId]</span>\n+                                </td>\n+                                <td align=\"center\" valign=\"middle\">\n+                                    <span wicket:id=\"password\">[password]</span>\n+                                </td>\n+                            </tr>\n+                        </tbody>\n+                    </table>\n+                </div>\n+            </div>\n+\n+            <div class=\"tablerow\" style=\"margin-top: 10px\">\n+                <div class=\"tablecolumn_label long_fixedsize\">\n+                    <label for=\"accountLink\"><wicket:message key=\"accountLink\"/></label>\n+                    <span wicket:id=\"accountLink\">[accountLink]</span>\n+                </div>\n+            </div>\n+        </div>\n+\n+        <script type=\"text/javascript\">\n+            $(function() {\n+                $('div#mappings div#formtable div.tablerow:even').addClass(\"alt\");\n+            });\n+        </script>\n+    </wicket:panel>\n+</html>"},{"sha":"0338c5bee3fd9f9cd8645637bbe9729602d39dd6","filename":"console/src/main/resources/org/syncope/console/pages/panels/StatusPanel.html","status":"added","additions":127,"deletions":0,"changes":127,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.html?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -0,0 +1,127 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<html>\n+    <wicket:head>\n+        <style>\n+            div.group{\n+                width:100%;\n+            }\n+\n+            div#check{\n+                width:8%;\n+                height: 25px;\n+                float:left;\n+            }\n+\n+            div#resource{\n+                margin-top: 3px;\n+                margin-left: 5px;\n+                width: 35%;\n+                height: 25px;\n+                float:left;\n+            }\n+\n+            div#accountLink{\n+                margin-top: 3px;\n+                width:45%;\n+                height: 25px;\n+                float:left\n+            }\n+\n+            div#status{\n+                margin-top: 3px;\n+                height: 25px;\n+                width: 10%;\n+                float: left;\n+                text-align: center;\n+            }\n+\n+            div.assignment {\n+                display: inline-table;\n+                width: 100%\n+            }\n+\n+            div.assignments {\n+                margin-top: 20px;\n+                display: inline-table;\n+                width: 100%;\n+                border: 1px solid #DDDDDD;\n+                color: #555555;\n+            }\n+        </style>\n+    </wicket:head>\n+    <wicket:panel>\n+        <div class=\"assignments\">\n+            <div class=\"group\">\n+                <div>\n+                    <span wicket:id=\"headerCheck\"/>\n+\n+                    <div id=\"resource\">\n+                        <span style=\"font: Verdana,Arial,sans-serif; font-weight: bold\">\n+                            <wicket:message key=\"resourceheader\"/>\n+                        </span>\n+                    </div>\n+                    <div id=\"accountLink\">\n+                        <span style=\"font: Verdana,Arial,sans-serif; font-weight: bold\">\n+                            <wicket:message key=\"accountlinkheader\"/>\n+                        </span>\n+                    </div>\n+                    <div id=\"status\">\n+                        <span style=\"font: Verdana,Arial,sans-serif; font-weight: bold\">\n+                            <wicket:message key=\"statusheader\"/>\n+                        </span>\n+                    </div>\n+                </div>\n+\n+                <span wicket:id=\"group\">\n+\n+                    <div wicket:id=\"resources\" class=\"assignment\">\n+                        <span wicket:id=\"rowCheck\"/>\n+\n+                        <div id=\"resource\">\n+                            <span wicket:id=\"resource\">[resource name]</span>\n+                        </div>\n+                        <div id=\"accountLink\">\n+                            <span wicket:id=\"accountLink\">[accountLink]</span>\n+                        </div>\n+                        <div id=\"status\">\n+                            <img wicket:id=\"icon\"/>\n+                        </div>\n+                    </div>\n+\n+                    <wicket:fragment wicket:id=\"rowCheckFrag\">\n+                        <div id=\"check\">\n+                            <input type=\"checkbox\" wicket:id=\"check\"/>\n+                        </div>\n+                    </wicket:fragment>\n+                </span>\n+            </div>\n+\n+            <wicket:fragment wicket:id=\"headerCheckFrag\">\n+                <div id=\"check\">\n+                    <input type=\"checkbox\" wicket:id=\"groupselector\" />\n+                </div>\n+            </wicket:fragment>\n+\n+            <wicket:fragment wicket:id=\"emptyCheckFrag\" />\n+        </div>\n+\n+        <script type=\"text/javascript\">\n+            $(function() {\n+                $('div.assignments div.assignment:even').addClass(\"alt\");\n+            });\n+        </script>\n+    </wicket:panel>\n+</html>"},{"sha":"3d04d098d466d3a0a41fea395910cf6bd53c6ad4","filename":"console/src/main/resources/org/syncope/console/pages/panels/StatusPanel.properties","status":"added","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel.properties?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -0,0 +1,15 @@\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#       http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+resourceheader = Resource\n+accountlinkheader = AccountLink\n+statusheader = Status"},{"sha":"dc75e23824d4b5e0670e6350a32385cd93b6bcda","filename":"console/src/main/resources/org/syncope/console/pages/panels/StatusPanel_it.properties","status":"added","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FStatusPanel_it.properties?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -0,0 +1,15 @@\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#       http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+resourceheader = Risorsa\n+accountlinkheader = AccountLink\n+statusheader = Stato\n\\ No newline at end of file"},{"sha":"fbf49d077ee51f2f2d452f28494844a350f37881","filename":"console/src/main/resources/org/syncope/console/pages/panels/UserDetailsPanel.html","status":"modified","additions":2,"deletions":63,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.html?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -32,74 +32,13 @@\n                     <span wicket:id=\"password\" />\n                     <span wicket:id=\"mandatory_pwd\"></span>\n                 </div>\n-                <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <span wicket:id=\"confirmPasswordLabel\"/>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"confirmPassword\" />\n-                </div>\n-            </div>\n-\n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <wicket:message key=\"status\"/>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"status\" />\n-                </div>\n-            </div>\n-\n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <wicket:message key=\"creationDate\"/>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"creationDate\" />\n-                </div>\n-            </div>\n-\n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <wicket:message key=\"changePwdDate\"/>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"changePwdDate\" />\n-                </div>\n             </div>\n-\n             <div class=\"tablerow\">\n                 <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <wicket:message key=\"lastLoginDate\"/>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"lastLoginDate\" />\n-                </div>\n-            </div>\n-\n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <wicket:message key=\"failedLogins\"/>\n-                </div>\n-                <div class=\"tablecolumn_field short_dynamicsize\">\n-                    <span wicket:id=\"failedLogins\" />\n-                </div>\n-            </div>\n-\n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <wicket:message key=\"token\"/>\n-                </div>\n-                <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"token\" />\n-                </div>\n-            </div>\n-\n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_label short_dynamicsize\">\n-                    <wicket:message key=\"tokenExpireTime\"/>\n+                    <span wicket:id=\"confirmPasswordLabel\"/>\n                 </div>\n                 <div class=\"tablecolumn_field medium_dynamicsize\">\n-                    <span wicket:id=\"tokenExpireTime\" />\n+                    <span wicket:id=\"confirmPassword\" />\n                 </div>\n             </div>\n         </div>"},{"sha":"9ed9502b308eca5e5ddc365f624f3b6b5d576f67","filename":"console/src/main/resources/org/syncope/console/pages/panels/UserDetailsPanel.properties","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.properties?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -23,11 +23,4 @@\n \n username=Username\n password=Password\n-status=Status\n-creationDate=Creation Date\n-changePwdDate=Last Change Password Date\n-lastLoginDate=Last Login Data\n-failedLogins=Subsequent Failed Logins\n-token=Token\n-tokenExpireTime=Token Expire Time\n confirmPassword=Password (confirm)"},{"sha":"e58afd43bdeaf6d7a1a9010795a9b1fa8f1cd98f","filename":"console/src/main/resources/org/syncope/console/pages/panels/UserDetailsPanel_it.properties","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel_it.properties?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -23,11 +23,4 @@\n \n username=Username\n password=Password\n-status=Stato\n-creationDate=Data Di Creazione\n-changePwdDate=Data Ultimo Cambio Password\n-lastLoginDate=Data Di Ultimo Login\n-failedLogins=Login Consecutivi Falliti\n-token=Token\n-tokenExpireTime=Scadenza Token\n confirmPassword=Password (conferma)"},{"sha":"8e07437a95f8c1c7721c0326aa667cf753c7b30c","filename":"console/src/main/resources/org/syncope/console/pages/panels/statuses/active.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2Fstatuses%2Factive.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2Fstatuses%2Factive.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2Fstatuses%2Factive.png?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","previous_filename":"console/src/main/resources/org/syncope/console/pages/statuses/active.png"},{"sha":"e5c3dd2f714bbd0c9372360d0d94d8211c7da0fe","filename":"console/src/main/resources/org/syncope/console/pages/panels/statuses/inactive.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2Fstatuses%2Finactive.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2Fstatuses%2Finactive.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2Fstatuses%2Finactive.png?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","previous_filename":"console/src/main/resources/org/syncope/console/pages/statuses/inactive.png"},{"sha":"8e08b27782537ea317436d96c11cab5cc06ff5ed","filename":"console/src/main/resources/org/syncope/console/pages/panels/statuses/undefined.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2Fstatuses%2Fundefined.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2Fstatuses%2Fundefined.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2Fstatuses%2Fundefined.png?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","previous_filename":"console/src/main/resources/org/syncope/console/pages/statuses/undefined.png"},{"sha":"c95ed50cae653f5dc3a5906b8b2651dbb8a2d395","filename":"console/src/main/resources/org/syncope/console/pages/panels/statuses/usernotfound.png","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2Fstatuses%2Fusernotfound.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2Fstatuses%2Fusernotfound.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2Fstatuses%2Fusernotfound.png?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","previous_filename":"console/src/main/resources/org/syncope/console/pages/statuses/usernotfound.png"},{"sha":"7d05b9ba46d3ea1d742e0498e0510fcdc4a09d1d","filename":"console/src/test/java/org/syncope/console/ResourceTestITCase.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FResourceTestITCase.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -27,7 +27,7 @@ public void browseCreateModal() {\n         selenium.click(\"//div[3]/div/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//form/div[2]/div/div/div/div/label[text()='Name']\\\");\",\n+                + \"\\\"//form/div[2]/div/span/div/div/div/label[text()='Name']\\\");\",\n                 \"30000\");\n \n         selenium.click(\"css=a.w_close\");\n@@ -43,7 +43,7 @@ public void browseEditModal() {\n         selenium.click(\"//td[4]/span/span[7]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//form/div[2]/div/div/div/div/label[text()='Name']\\\");\",\n+                + \"\\\"//form/div[2]/div/span/div/div/div/label[text()='Name']\\\");\",\n                 \"30000\");\n \n         selenium.click(\"//li[2]/a\");\n@@ -83,7 +83,7 @@ public void checkSecurityTab() {\n         selenium.click(\"//td[4]/span/span[7]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//form/div[2]/div/div/div/div/label[text()='Name']\\\");\",\n+                + \"\\\"//form/div[2]/div/span/div/div/div/label[text()='Name']\\\");\",\n                 \"30000\");\n \n         selenium.click(\"//li[4]/a\");\n@@ -108,17 +108,16 @@ public void checkConnection() {\n                 + \"*[span=\\\"ws-target-resource-delete\\\"]/../td[4]/span/span[7]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//form/div[2]/div/div/div/div/label[text()='Name']\\\");\",\n+                + \"\\\"//form/div[2]/div/span/div/div/div/label[text()='Name']\\\");\",\n                 \"30000\");\n \n         selenium.click(\"//li[3]/a\");\n \n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//div[2]/form/div[2]/\"\n-                + \"div[3]/span/div/div/div/span[text()='endpoint']\\\");\",\n+                + \"\\\"//span[text()='endpoint']\\\");\",\n                 \"30000\");\n         \n-        selenium.click(\"//div[2]/form/div[2]/div[3]/span/div[2]/a/img\");\n+        selenium.click(\"//div[2]/form/div[2]/div[3]/span/span/div[2]/a/img\");\n \n         selenium.waitForCondition(\n                 \"selenium.isElementPresent(\""},{"sha":"ac2b61b8d8853851439c1c54f36d2b0105c952d6","filename":"core/src/main/java/org/syncope/core/init/ConnInstanceLoader.java","status":"modified","additions":27,"deletions":6,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -54,7 +54,7 @@ private String getBeanName(final ExternalResource resource) {\n \n     /**\n      * Get a live connector bean that is registered with the given resource.\n-     * \n+     *\n      * @param resource the resource.\n      * @return live connector bran for given resource\n      * @throws BeansException in case the connector is not registered in the\n@@ -77,29 +77,50 @@ public ConnectorFacadeProxy createConnectorBean(\n             final ExternalResource resource)\n             throws NotFoundException {\n \n-        final ConnInstance connInstanceClone =\n-                (ConnInstance) SerializationUtils.clone(\n-                resource.getConnector());\n-\n         final Set<ConnConfProperty> configuration =\n                 new HashSet<ConnConfProperty>();\n \n+        // to be used to control managed prop (needed by overridden mechanism)\n         final Set<String> propertyNames = new HashSet<String>();\n \n+        // get overridden connector configuration properties\n         for (ConnConfProperty prop : resource.getConfiguration()) {\n             if (!propertyNames.contains(prop.getSchema().getName())) {\n                 configuration.add(prop);\n                 propertyNames.add(prop.getSchema().getName());\n             }\n         }\n \n-        for (ConnConfProperty prop : connInstanceClone.getConfiguration()) {\n+        final ConnInstance connInstance = resource.getConnector();\n+\n+        // get connector configuration properties\n+        for (ConnConfProperty prop : connInstance.getConfiguration()) {\n             if (!propertyNames.contains(prop.getSchema().getName())) {\n                 configuration.add(prop);\n                 propertyNames.add(prop.getSchema().getName());\n             }\n         }\n \n+        return createConnectorBean(connInstance, configuration);\n+    }\n+\n+    /**\n+     * Create connector bean starting from connector instance and configuration\n+     * properties. This method has to be used to create a connector instance\n+     * without any linked external resource.\n+     * @param connInstance connector instance.\n+     * @param configuration configuration properties.\n+     * @return connector facade proxy.\n+     * @throws NotFoundException when not able to fetch all the required data.\n+     */\n+    public ConnectorFacadeProxy createConnectorBean(\n+            final ConnInstance connInstance,\n+            final Set<ConnConfProperty> configuration)\n+            throws NotFoundException {\n+\n+        final ConnInstance connInstanceClone =\n+                (ConnInstance) SerializationUtils.clone(connInstance);\n+\n         connInstanceClone.setConfiguration(configuration);\n \n         return new ConnectorFacadeProxy(connInstanceClone, connBundleManager);"},{"sha":"06c988be3af991f14877ce9b9bd687756ed6b43f","filename":"core/src/main/java/org/syncope/core/propagation/ConnectorFacadeProxy.java","status":"modified","additions":21,"deletions":4,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -30,13 +30,28 @@\n import org.identityconnectors.framework.api.ConnectorFacadeFactory;\n import org.identityconnectors.framework.api.ConnectorInfo;\n import org.identityconnectors.framework.api.ConnectorKey;\n-import org.identityconnectors.framework.common.objects.*;\n+import org.identityconnectors.framework.common.objects.Attribute;\n+import org.identityconnectors.framework.common.objects.AttributeInfo;\n+import org.identityconnectors.framework.common.objects.ConnectorObject;\n+import org.identityconnectors.framework.common.objects.Name;\n+import org.identityconnectors.framework.common.objects.ObjectClass;\n+import org.identityconnectors.framework.common.objects.ObjectClassInfo;\n+import org.identityconnectors.framework.common.objects.OperationOptions;\n+import org.identityconnectors.framework.common.objects.OperationalAttributes;\n+import org.identityconnectors.framework.common.objects.ResultsHandler;\n+import org.identityconnectors.framework.common.objects.Schema;\n+import org.identityconnectors.framework.common.objects.SyncDelta;\n+import org.identityconnectors.framework.common.objects.SyncDeltaBuilder;\n+import org.identityconnectors.framework.common.objects.SyncDeltaType;\n+import org.identityconnectors.framework.common.objects.SyncResultsHandler;\n+import org.identityconnectors.framework.common.objects.SyncToken;\n+import org.identityconnectors.framework.common.objects.Uid;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.util.ClassUtils;\n-import org.syncope.core.util.ConnBundleManager;\n import org.syncope.core.persistence.beans.ConnInstance;\n import org.syncope.core.persistence.dao.MissingConfKeyException;\n+import org.syncope.core.util.ConnBundleManager;\n import org.syncope.types.ConnConfProperty;\n import org.syncope.types.ConnectorCapability;\n import org.syncope.types.PropagationMode;\n@@ -142,15 +157,17 @@ public ConnectorFacadeProxy(\n         Class propertySchemaClass;\n         Object propertyValue;\n         for (ConnConfProperty property : connInstance.getConfiguration()) {\n-            if (property.getValues() != null && !property.getValues().isEmpty()) {\n+            if (property.getValues() != null\n+                    && !property.getValues().isEmpty()) {\n                 try {\n                     propertySchemaClass = ClassUtils.forName(\n                             property.getSchema().getType(),\n                             ClassUtils.getDefaultClassLoader());\n \n                     if (GuardedString.class.equals(propertySchemaClass)) {\n                         propertyValue = new GuardedString(\n-                                ((String) property.getValues().iterator().next()).toCharArray());\n+                                ((String) property.getValues().iterator().next()).\n+                                toCharArray());\n                     } else if (GuardedByteArray.class.equals(\n                             propertySchemaClass)) {\n "},{"sha":"ad08fa72e63b06728969f52f21dee4cd8c401160","filename":"core/src/main/java/org/syncope/core/rest/controller/ConnInstanceController.java","status":"modified","additions":95,"deletions":14,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -15,8 +15,11 @@\n package org.syncope.core.rest.controller;\n \n import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Locale;\n+import java.util.Set;\n import javassist.NotFoundException;\n import javax.servlet.http.HttpServletResponse;\n import org.apache.commons.lang.StringUtils;\n@@ -41,6 +44,7 @@\n import org.syncope.client.to.ConnInstanceTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.client.validation.SyncopeClientException;\n+import org.syncope.core.init.ConnInstanceLoader;\n import org.syncope.core.persistence.beans.ConnInstance;\n import org.syncope.core.persistence.beans.ExternalResource;\n import org.syncope.core.persistence.dao.ConnInstanceDAO;\n@@ -65,10 +69,14 @@ public class ConnInstanceController extends AbstractController {\n     @Autowired\n     private ConnBundleManager bundleManager;\n \n+    @Autowired\n+    private ConnInstanceLoader connLoader;\n+\n     @PreAuthorize(\"hasRole('CONNECTOR_CREATE')\")\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/create\")\n-    public ConnInstanceTO create(final HttpServletResponse response,\n+    public ConnInstanceTO create(\n+            final HttpServletResponse response,\n             @RequestBody final ConnInstanceTO connectorTO)\n             throws SyncopeClientCompositeErrorException, NotFoundException {\n \n@@ -106,8 +114,8 @@ public ConnInstanceTO update(\n \n         LOG.debug(\"Connector update called with configuration {}\", connectorTO);\n \n-        ConnInstance connInstance = binder.updateConnInstance(\n-                connectorTO.getId(), connectorTO);\n+        ConnInstance connInstance =\n+                binder.updateConnInstance(connectorTO.getId(), connectorTO);\n \n         try {\n             connInstance = connInstanceDAO.save(connInstance);\n@@ -299,6 +307,45 @@ public List<ConnBundleTO> getBundles(\n         return connectorBundleTOs;\n     }\n \n+    @PreAuthorize(\"hasRole('CONNECTOR_READ')\")\n+    @RequestMapping(method = RequestMethod.POST,\n+    value = \"/schema/list\")\n+    @Transactional(readOnly = true)\n+    public List<String> getSchemaNames(\n+            final HttpServletResponse response,\n+            @RequestBody final ConnInstanceTO connectorTO,\n+            @RequestParam(required = false,\n+            value = \"showall\", defaultValue = \"false\") final boolean showall)\n+            throws NotFoundException {\n+\n+        final ConnInstance connInstance =\n+                connInstanceDAO.find(connectorTO.getId());\n+\n+        if (connInstance == null) {\n+            LOG.error(\"Could not find connector '\" + connInstance + \"'\");\n+            throw new NotFoundException(\"Connector '\" + connInstance + \"'\");\n+        }\n+\n+        // consider the possibility to receive overridden properties only\n+        final Set<ConnConfProperty> conf = mergeConnConfProperties(\n+                connectorTO.getConfiguration(),\n+                connInstance.getConfiguration());\n+\n+        // We cannot use Spring bean because this method could be used during\n+        // resource definition or modification: bean couldn't exist or bean\n+        // couldn't be updated.\n+        // This is the reason why we should take a \"not mature\" connector\n+        // facade proxy to ask for schema names.\n+\n+        final List<String> result = new ArrayList<String>(\n+                connLoader.createConnectorBean(\n+                connInstance, conf).getSchema(showall));\n+\n+        Collections.sort(result);\n+\n+        return result;\n+    }\n+\n     @PreAuthorize(\"hasRole('CONNECTOR_READ')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/{connectorId}/configurationProperty/list\")\n@@ -316,24 +363,58 @@ public List<ConnConfProperty> getConfigurationProperties(\n     }\n \n     @PreAuthorize(\"hasRole('CONNECTOR_READ')\")\n-    @RequestMapping(method = RequestMethod.POST,\n-    value = \"/check\")\n+    @RequestMapping(method = RequestMethod.POST, value = \"/check\")\n     @Transactional(readOnly = true)\n     public ModelAndView check(final HttpServletResponse response,\n-            @RequestBody final ConnInstanceTO connInstanceTO)\n-            throws NotFoundException {\n+            @RequestBody final ConnInstanceTO connectorTO)\n+            throws SyncopeClientCompositeErrorException, NotFoundException {\n \n-        Boolean status = Boolean.FALSE;\n-        ConnectorFacadeProxy connector = new ConnectorFacadeProxy(\n-                binder.getConnInstance(connInstanceTO), bundleManager);\n+        final ConnectorFacadeProxy connector =\n+                new ConnectorFacadeProxy(\n+                binder.getConnInstance(connectorTO), bundleManager);\n \n         try {\n             connector.test();\n-            status = Boolean.TRUE;\n-        } catch (Exception e) {\n-            LOG.error(\"Test connection failure {} {}\", connInstanceTO, e);\n+            return new ModelAndView().addObject(true);\n+        } catch (Exception ex) {\n+            LOG.error(\"Test connection failure {}\", ex);\n+            return new ModelAndView().addObject(false);\n+        }\n+    }\n+\n+    /**\n+     * Merge connector configuration properties avoiding repetition but giving\n+     * priority to primary set.\n+     *\n+     * @param primary primary set.\n+     * @param secondary secondary set.\n+     * @return merged set.\n+     */\n+    private Set<ConnConfProperty> mergeConnConfProperties(\n+            final Set<ConnConfProperty> primary,\n+            final Set<ConnConfProperty> secondary) {\n+\n+        final Set<ConnConfProperty> conf = new HashSet<ConnConfProperty>();\n+\n+        // to be used to control managed prop (needed by overridden mechanism)\n+        final Set<String> propertyNames = new HashSet<String>();\n+\n+        // get overridden connector configuration properties\n+        for (ConnConfProperty prop : primary) {\n+            if (!propertyNames.contains(prop.getSchema().getName())) {\n+                conf.add(prop);\n+                propertyNames.add(prop.getSchema().getName());\n+            }\n+        }\n+\n+        // get connector configuration properties\n+        for (ConnConfProperty prop : secondary) {\n+            if (!propertyNames.contains(prop.getSchema().getName())) {\n+                conf.add(prop);\n+                propertyNames.add(prop.getSchema().getName());\n+            }\n         }\n \n-        return new ModelAndView().addObject(status);\n+        return conf;\n     }\n }"},{"sha":"202f2d2ced48bfa2dae1d24f706926115f01664f","filename":"core/src/main/java/org/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":0,"deletions":31,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -15,7 +15,6 @@\n package org.syncope.core.rest.controller;\n \n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.List;\n import java.util.Set;\n import javassist.NotFoundException;\n@@ -35,7 +34,6 @@\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RequestMethod;\n-import org.springframework.web.bind.annotation.RequestParam;\n import org.syncope.client.to.AttributeTO;\n import org.syncope.client.to.ConnObjectTO;\n import org.syncope.client.to.ResourceTO;\n@@ -202,35 +200,6 @@ public List<ResourceTO> list(HttpServletResponse response)\n         return binder.getResourceTOs(resources);\n     }\n \n-    @PreAuthorize(\"hasRole('RESOURCE_READ')\")\n-    @RequestMapping(method = RequestMethod.GET,\n-    value = \"/schema/{resourceName}/list\")\n-    @Transactional(readOnly = true)\n-    public List<String> getSchemaNames(\n-            @PathVariable(\"resourceName\") final String resourceName,\n-            @RequestParam(required = false,\n-            value = \"showall\", defaultValue = \"false\") final boolean showall)\n-            throws NotFoundException {\n-\n-        ExternalResource resource = resourceDAO.find(resourceName);\n-        if (resource == null) {\n-            LOG.error(\"Could not find resource '\" + resourceName + \"'\");\n-            throw new NotFoundException(\"Resource '\" + resourceName + \"'\");\n-        }\n-\n-        // We cannot use Spring bean because this method could be used during\n-        // resource definition or modification: bean couldn't exist or bean\n-        // couldn't be updated.\n-        // This is the reason why we should take a \"not mature\" connector\n-        // facade proxy to ask for schema names.\n-\n-        List<String> result = new ArrayList<String>(\n-                connLoader.createConnectorBean(resource).getSchema(showall));\n-        Collections.sort(result);\n-\n-        return result;\n-    }\n-\n     @PreAuthorize(\"hasRole('RESOURCE_READ')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/{roleName}/mappings\")"},{"sha":"0b05bfae85aec2b0b3a6dbf1356c6db5c8c33333","filename":"core/src/main/java/org/syncope/core/rest/data/ConnInstanceDataBinder.java","status":"modified","additions":10,"deletions":15,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConnInstanceDataBinder.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -93,7 +93,7 @@ public ConnInstance getConnInstance(\n     }\n \n     public ConnInstance updateConnInstance(\n-            final Long connectorInstanceId,\n+            final long connInstanceId,\n             final ConnInstanceTO connInstanceTO)\n             throws SyncopeClientCompositeErrorException {\n \n@@ -105,41 +105,35 @@ public ConnInstance updateConnInstance(\n                 new SyncopeClientException(\n                 SyncopeClientExceptionType.RequiredValuesMissing);\n \n-        if (connectorInstanceId == null) {\n+        if (connInstanceId == 0) {\n             requiredValuesMissing.addElement(\"connector id\");\n         }\n \n-        ConnInstance connInstance =\n-                connectorInstanceDAO.find(connectorInstanceId);\n+        ConnInstance connInstance = connectorInstanceDAO.find(connInstanceId);\n \n         if (connInstanceTO.getBundleName() != null) {\n-            connInstance.setBundleName(\n-                    connInstanceTO.getBundleName());\n+            connInstance.setBundleName(connInstanceTO.getBundleName());\n         }\n \n         if (connInstanceTO.getVersion() != null) {\n             connInstance.setVersion(connInstanceTO.getVersion());\n         }\n \n         if (connInstanceTO.getConnectorName() != null) {\n-            connInstance.setConnectorName(\n-                    connInstanceTO.getConnectorName());\n+            connInstance.setConnectorName(connInstanceTO.getConnectorName());\n         }\n \n         if (connInstanceTO.getConfiguration() != null\n                 && !connInstanceTO.getConfiguration().isEmpty()) {\n \n-            connInstance.setConfiguration(\n-                    connInstanceTO.getConfiguration());\n+            connInstance.setConfiguration(connInstanceTO.getConfiguration());\n         }\n \n         if (connInstanceTO.getDisplayName() != null) {\n-            connInstance.setDisplayName(\n-                    connInstanceTO.getDisplayName());\n+            connInstance.setDisplayName(connInstanceTO.getDisplayName());\n         }\n \n-        connInstance.setCapabilities(\n-                connInstanceTO.getCapabilities());\n+        connInstance.setCapabilities(connInstanceTO.getCapabilities());\n \n         if (!requiredValuesMissing.isEmpty()) {\n             compositeErrorException.addException(requiredValuesMissing);\n@@ -158,7 +152,8 @@ public ConnInstanceTO getConnInstanceTO(final ConnInstance connInstance)\n             throws NotFoundException {\n \n         ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n-        connInstanceTO.setId(connInstance.getId());\n+        connInstanceTO.setId(connInstance.getId() != null\n+                ? connInstance.getId().longValue() : 0L);\n \n         // retrieve the ConfigurationProperties.\n         ConfigurationProperties properties ="},{"sha":"b59c0def1aa1ec884c9676eb460513294f818828","filename":"core/src/main/java/org/syncope/core/rest/data/ResourceDataBinder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FResourceDataBinder.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -119,7 +119,7 @@ public ExternalResource update(final ExternalResource resource,\n \n         resource.setConnectorConfigurationProperties(\n                 new HashSet<ConnConfProperty>(\n-                resourceTO.getConnectorConfigurationProperties()));\n+                resourceTO.getConnConfProperties()));\n \n         if (resourceTO.getSyncToken() == null) {\n             resource.setSerializedSyncToken(null);"},{"sha":"92400a5fbbbc8f075ad8dcc1d2e8a26af50d322c","filename":"core/src/test/java/org/syncope/core/rest/ConnInstanceTestITCase.java","status":"modified","additions":39,"deletions":7,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -147,6 +147,7 @@ public void create() {\n \n         // check for the updating\n         connectorTO.setId(actual.getId());\n+\n         connectorTO.removeCapability(ConnectorCapability.TWO_PHASES_UPDATE);\n         actual = null;\n         try {\n@@ -166,7 +167,7 @@ public void create() {\n         try {\n             restTemplate.delete(\n                     BASE_URL + \"connector/delete/{connectorId}.json\",\n-                    actual.getId().toString());\n+                    String.valueOf(actual.getId()));\n         } catch (HttpStatusCodeException e) {\n             LOG.error(\"delete failed\", e);\n             t = e;\n@@ -179,7 +180,7 @@ public void create() {\n             restTemplate.getForObject(\n                     BASE_URL + \"connector/read/{connectorId}\",\n                     ConnInstanceTO.class,\n-                    actual.getId().toString());\n+                    String.valueOf(actual.getId()));\n         } catch (HttpStatusCodeException e) {\n             assertEquals(e.getStatusCode(), HttpStatus.NOT_FOUND);\n         }\n@@ -228,8 +229,7 @@ public void update() {\n         // set connector configuration\n         connectorTO.setConfiguration(conf);\n \n-        ConnInstanceTO actual =\n-                (ConnInstanceTO) restTemplate.postForObject(\n+        ConnInstanceTO actual = (ConnInstanceTO) restTemplate.postForObject(\n                 BASE_URL + \"connector/update.json\",\n                 connectorTO, ConnInstanceTO.class);\n \n@@ -238,7 +238,7 @@ public void update() {\n         actual = restTemplate.getForObject(\n                 BASE_URL + \"connector/read/{connectorId}\",\n                 ConnInstanceTO.class,\n-                actual.getId().toString());\n+                String.valueOf(actual.getId()));\n \n         assertNotNull(actual);\n         assertEquals(actual.getBundleName(), connectorTO.getBundleName());\n@@ -447,11 +447,43 @@ public void check() {\n         conf.remove(password);\n         password.setValues(Collections.singletonList(\"password\"));\n         conf.add(password);\n-        \n+\n         verify = restTemplate.postForObject(\n                 BASE_URL + \"connector/check.json\",\n                 connectorTO, Boolean.class);\n-        \n+\n         assertFalse(verify);\n     }\n+\n+    @Test\n+    public void getSchemaNames() {\n+        ConnInstanceTO conn = restTemplate.getForObject(\n+                BASE_URL + \"connector/read/{connectorId}.json\",\n+                ConnInstanceTO.class, \"101\");\n+\n+        List<String> schemaNames = Arrays.asList(restTemplate.postForObject(\n+                BASE_URL + \"connector/schema/list?showall=true\",\n+                conn, String[].class));\n+        assertNotNull(schemaNames);\n+        assertFalse(schemaNames.isEmpty());\n+\n+        schemaNames = Arrays.asList(restTemplate.postForObject(\n+                BASE_URL + \"connector/schema/list\",\n+                conn, String[].class));\n+        assertNotNull(schemaNames);\n+        assertEquals(0, schemaNames.size());\n+\n+        conn = restTemplate.getForObject(\n+                BASE_URL + \"connector/read/{connectorId}.json\",\n+                ConnInstanceTO.class, \"104\");\n+\n+        // to be used with overridden properties\n+        conn.getConfiguration().clear();\n+\n+        schemaNames = Arrays.asList(restTemplate.postForObject(\n+                BASE_URL + \"connector//schema/list?showall=true\",\n+                conn, String[].class, conn));\n+        assertNotNull(schemaNames);\n+        assertFalse(schemaNames.isEmpty());\n+    }\n }\n\\ No newline at end of file"},{"sha":"c05f5d5d6809623a701c13dd06386ca85aa7d260","filename":"core/src/test/java/org/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":0,"deletions":21,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dbcfcdd71f44803e343f46028e70dc75b6e8ff6a/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=dbcfcdd71f44803e343f46028e70dc75b6e8ff6a","patch":"@@ -401,25 +401,4 @@ public void read() {\n \n         assertNotNull(actual);\n     }\n-\n-    @Test\n-    public void getSchemaNames() {\n-        List<String> schemaNames = Arrays.asList(restTemplate.getForObject(\n-                BASE_URL + \"resource/schema/{resourceName}/list?showAll=true\",\n-                String[].class, \"ws-target-resource-1\"));\n-        assertNotNull(schemaNames);\n-        assertFalse(schemaNames.isEmpty());\n-\n-        schemaNames = Arrays.asList(restTemplate.getForObject(\n-                BASE_URL + \"resource/schema/{resourceName}/list\",\n-                String[].class, \"resource-testdb\"));\n-        assertNotNull(schemaNames);\n-        assertEquals(0, schemaNames.size());\n-\n-        schemaNames = Arrays.asList(restTemplate.getForObject(\n-                BASE_URL + \"resource/schema/{resourceName}/list?showAll=true\",\n-                String[].class, \"resource-csv\"));\n-        assertNotNull(schemaNames);\n-        assertFalse(schemaNames.isEmpty());\n-    }\n }"}]}