{"sha":"3d0363f62bd3e7bad37bcd8dea70385dce7fa99f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjNkMDM2M2Y2MmJkM2U3YmFkMzdiY2Q4ZGVhNzAzODVkY2U3ZmE5OWY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-11-07T16:40:03Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-11-07T16:40:03Z"},"message":"[SYNCOPE-434] Merge from 1_1_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1539708 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8601be3790aec97b6b5a0728e36060bdf3a95eea","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8601be3790aec97b6b5a0728e36060bdf3a95eea"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3d0363f62bd3e7bad37bcd8dea70385dce7fa99f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3d0363f62bd3e7bad37bcd8dea70385dce7fa99f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3d0363f62bd3e7bad37bcd8dea70385dce7fa99f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3d0363f62bd3e7bad37bcd8dea70385dce7fa99f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"1fa232ccb536915f1b37c30325392000bf666f95","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1fa232ccb536915f1b37c30325392000bf666f95","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1fa232ccb536915f1b37c30325392000bf666f95"}],"stats":{"total":67,"additions":65,"deletions":2},"files":[{"sha":"f4a59873786b2cf5f0b4f58a5ba6d90e759a9df0","filename":"core/src/main/java/org/apache/syncope/core/security/SyncopeAuthenticationProvider.java","status":"modified","additions":17,"deletions":2,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d0363f62bd3e7bad37bcd8dea70385dce7fa99f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d0363f62bd3e7bad37bcd8dea70385dce7fa99f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java?ref=3d0363f62bd3e7bad37bcd8dea70385dce7fa99f","patch":"@@ -20,12 +20,15 @@\n \n import java.util.Date;\n import javax.annotation.Resource;\n+import org.apache.commons.lang3.ArrayUtils;\n import org.apache.syncope.common.types.AuditElements.AuthenticationSubCategory;\n import org.apache.syncope.common.types.AuditElements.Category;\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.CipherAlgorithm;\n import org.apache.syncope.core.audit.AuditManager;\n+import org.apache.syncope.core.persistence.beans.SyncopeConf;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.persistence.dao.ConfDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n import org.apache.syncope.core.util.PasswordEncoder;\n import org.slf4j.Logger;\n@@ -51,6 +54,9 @@ public class SyncopeAuthenticationProvider implements AuthenticationProvider {\n     @Autowired\n     private AuditManager auditManager;\n \n+    @Autowired\n+    private ConfDAO confDAO;\n+\n     @Autowired\n     private UserDAO userDAO;\n \n@@ -112,10 +118,19 @@ public Authentication authenticate(final Authentication authentication)\n         } else {\n             user = userDAO.find(username);\n \n-            if (user != null && user.isSuspended() != null) {\n-                if (user.isSuspended()) {\n+            if (user != null) {\n+                if (user.isSuspended() != null && user.isSuspended()) {\n                     throw new DisabledException(\"User \" + user.getUsername() + \" is suspended\");\n                 }\n+\n+                SyncopeConf authStatuses = confDAO.find(\"authentication.statuses\", null);\n+                if (authStatuses != null) {\n+                    String[] statuses = authStatuses.getValue().split(\"\\\\|\");\n+                    if (!ArrayUtils.contains(statuses, user.getStatus())) {\n+                        throw new DisabledException(\"User \" + user.getUsername() + \" not allowed to authenticate\");\n+                    }\n+                }\n+\n                 authenticated = authenticate(\n                         authentication.getCredentials().toString(),\n                         user.getCipherAlgorithm(),"},{"sha":"9973fe8812b11f4670a65fbf811f381b82f01083","filename":"core/src/main/resources/content.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d0363f62bd3e7bad37bcd8dea70385dce7fa99f/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d0363f62bd3e7bad37bcd8dea70385dce7fa99f/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=3d0363f62bd3e7bad37bcd8dea70385dce7fa99f","patch":"@@ -30,6 +30,8 @@ under the License.\n   <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n   <SyncopeConf confKey=\"selfRegistration.allowed\" confValue=\"true\"/>\n   <SyncopeConf confKey=\"notification.maxRetries\" confValue=\"0\"/>\n+  <!-- when needing to provide more values, use '|' as separator and no spaces -->\n+  <SyncopeConf confKey=\"authentication.statuses\" confValue=\"active\"/>\n     \n   <!-- Authentication and authorization -->\n   <Entitlement name=\"SCHEMA_LIST\"/>"},{"sha":"81c4708b3363d40fcee1bf8875edd8d7c808ac3d","filename":"core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java","status":"modified","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d0363f62bd3e7bad37bcd8dea70385dce7fa99f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d0363f62bd3e7bad37bcd8dea70385dce7fa99f/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java?ref=3d0363f62bd3e7bad37bcd8dea70385dce7fa99f","patch":"@@ -27,6 +27,7 @@\n import java.security.AccessControlException;\n import java.util.HashSet;\n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n \n import javax.ws.rs.core.Response;\n@@ -35,6 +36,7 @@\n \n import org.apache.syncope.common.search.AttributeCond;\n import org.apache.syncope.common.search.NodeCond;\n+import org.apache.syncope.common.services.EntitlementService;\n import org.apache.syncope.common.services.InvalidSearchConditionException;\n import org.apache.syncope.common.services.SchemaService;\n import org.apache.syncope.common.services.UserService;\n@@ -44,12 +46,16 @@\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.SchemaTO;\n import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.to.WorkflowFormPropertyTO;\n+import org.apache.syncope.common.to.WorkflowFormTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.AttributeSchemaType;\n import org.apache.syncope.common.types.SchemaType;\n import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.common.validation.SyncopeClientException;\n+import org.apache.syncope.core.workflow.ActivitiDetector;\n+import org.junit.Assume;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n@@ -356,4 +362,42 @@ public void issueSYNCOPE48() {\n         role1User = response.readEntity(UserTO.class);\n         assertNotNull(role1User);\n     }\n+\n+    @Test\n+    public void issueSYNCOPE434() {\n+        Assume.assumeTrue(ActivitiDetector.isActivitiEnabledForUsers());\n+\n+        // 1. create user with role 9 (users with role 9 are defined in workflow as subject to approval)\n+        UserTO userTO = UserTestITCase.getUniqueSampleTO(\"createWithReject@syncope.apache.org\");\n+        MembershipTO membershipTO = new MembershipTO();\n+        membershipTO.setRoleId(9L);\n+        userTO.getMemberships().add(membershipTO);\n+\n+        userTO = createUser(userTO);\n+        assertNotNull(userTO);\n+        assertEquals(\"createApproval\", userTO.getStatus());\n+\n+        // 2. try to authenticate: fail\n+        EntitlementService myEntitlementService = clientFactory.create(userTO.getUsername(), \"password123\").\n+                getService(EntitlementService.class);\n+        try {\n+            myEntitlementService.getOwnEntitlements();\n+            fail();\n+        } catch (AccessControlException e) {\n+            assertNotNull(e);\n+        }\n+\n+        // 3. approve user\n+        WorkflowFormTO form = userWorkflowService.getFormForUser(userTO.getId());\n+        form = userWorkflowService.claimForm(form.getTaskId());\n+        Map<String, WorkflowFormPropertyTO> props = form.getPropertyMap();\n+        props.get(\"approve\").setValue(Boolean.TRUE.toString());\n+        form.setProperties(props.values());\n+        userTO = userWorkflowService.submitForm(form);\n+        assertNotNull(userTO);\n+        assertEquals(\"active\", userTO.getStatus());\n+\n+        // 4. try to authenticate again: success\n+        assertNotNull(myEntitlementService.getOwnEntitlements());\n+    }\n }"},{"sha":"2bfff569ae52918181c2c2da81e3b85f6ca960fc","filename":"core/src/test/resources/content.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3d0363f62bd3e7bad37bcd8dea70385dce7fa99f/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3d0363f62bd3e7bad37bcd8dea70385dce7fa99f/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=3d0363f62bd3e7bad37bcd8dea70385dce7fa99f","patch":"@@ -30,6 +30,8 @@ under the License.\n   <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n   <SyncopeConf confKey=\"selfRegistration.allowed\" confValue=\"true\"/>\n   <SyncopeConf confKey=\"notification.maxRetries\" confValue=\"3\"/>\n+  <!-- when needing to provide more values, use '|' as separator and no spaces -->\n+  <SyncopeConf confKey=\"authentication.statuses\" confValue=\"active\"/>\n \n   <!-- sample policies -->\n   <Policy DTYPE=\"SyncPolicy\" id=\"1\" description=\"sync policy 1\" type=\"GLOBAL_SYNC\" specification=\"%3Corg.apache.syncope.common.types.SyncPolicySpec%2F%3E\"/>"}]}