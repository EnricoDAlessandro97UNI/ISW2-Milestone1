{"sha":"c2226917062427c11c6eac1719e33794db640557","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmMyMjI2OTE3MDYyNDI3YzExYzZlYWMxNzE5ZTMzNzk0ZGI2NDA1NTc=","commit":{"author":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2016-02-26T10:55:43Z"},"committer":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2016-02-26T10:55:43Z"},"message":"[SYNCOPE-719] Removed enduser cache service","tree":{"sha":"4f516dfd4bdebc7bf1d2b4d9f0f8eecffefdfc2e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4f516dfd4bdebc7bf1d2b4d9f0f8eecffefdfc2e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c2226917062427c11c6eac1719e33794db640557","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c2226917062427c11c6eac1719e33794db640557","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c2226917062427c11c6eac1719e33794db640557","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c2226917062427c11c6eac1719e33794db640557/comments","author":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"committer":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"parents":[{"sha":"e1b668a3f0d55058525e88d3c319909a9f6c2fb3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e1b668a3f0d55058525e88d3c319909a9f6c2fb3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e1b668a3f0d55058525e88d3c319909a9f6c2fb3"}],"stats":{"total":27,"additions":4,"deletions":23},"files":[{"sha":"ed0571881d75ba6f239c9aa55cf480c2fb690aea","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/SyncopeEnduserSession.java","status":"modified","additions":4,"deletions":23,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c2226917062427c11c6eac1719e33794db640557/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c2226917062427c11c6eac1719e33794db640557/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2FSyncopeEnduserSession.java?ref=c2226917062427c11c6eac1719e33794db640557","patch":"@@ -19,8 +19,6 @@\n package org.apache.syncope.client.enduser;\n \n import java.text.DateFormat;\n-import java.util.Collections;\n-import java.util.HashMap;\n import java.util.Locale;\n import java.util.Map;\n import java.util.Set;\n@@ -62,8 +60,6 @@ public class SyncopeEnduserSession extends WebSession {\n \n     private UserTO selfTO;\n \n-    private final Map<Class<?>, Object> services = Collections.synchronizedMap(new HashMap<Class<?>, Object>());\n-\n     private final CookieUtils cookieUtils;\n \n     private boolean xsrfTokenGenerated = false;\n@@ -99,8 +95,6 @@ public boolean authenticate(final String username, final String password) {\n             // for every  request\n             this.bind();\n             authenticated = true;\n-            //we should clear all the previous services\n-            services.clear();\n         } catch (Exception e) {\n             LOG.error(\"Authentication failed\", e);\n         }\n@@ -109,30 +103,17 @@ public boolean authenticate(final String username, final String password) {\n     }\n \n     public <T> void resetClient(final Class<T> service) {\n-        T serviceInstance = getCachedService(service);\n+        T serviceInstance = getService(service);\n         WebClient.client(serviceInstance).reset();\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    private <T> T getCachedService(final Class<T> serviceClass) {\n-        T service;\n-        if (services.containsKey(serviceClass)) {\n-            service = (T) services.get(serviceClass);\n-        } else {\n-            service = (client == null || !isAuthenticated()) ? anonymousClient.getService(serviceClass) : client.\n-                    getService(serviceClass);\n-            services.put(serviceClass, service);\n-        }\n-\n-        return service;\n-    }\n-\n     public <T> T getService(final Class<T> serviceClass) {\n-        return getCachedService(serviceClass);\n+        return (client == null || !isAuthenticated()) ? anonymousClient.getService(serviceClass) : client.\n+                getService(serviceClass);\n     }\n \n     public <T> T getService(final String etag, final Class<T> serviceClass) {\n-        T serviceInstance = getCachedService(serviceClass);\n+        T serviceInstance = getService(serviceClass);\n         WebClient.client(serviceInstance).match(new EntityTag(etag), false).\n                 type(MediaType.APPLICATION_JSON).accept(MediaType.APPLICATION_JSON);\n "}]}