{"sha":"0a8b97ca38cbccef1b76c322c6e86840370f12a9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBhOGI5N2NhMzhjYmNjZWYxYjc2YzMyMmM2ZTg2ODQwMzcwZjEyYTk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-05-08T09:05:05Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-05-08T09:07:10Z"},"message":"[SYNCOPE-1270] Upgrade CXF to get OIDC fix for Azure + other refinements","tree":{"sha":"f3a2623d736e49dc37b858f0c63ed310958d979a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f3a2623d736e49dc37b858f0c63ed310958d979a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0a8b97ca38cbccef1b76c322c6e86840370f12a9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0a8b97ca38cbccef1b76c322c6e86840370f12a9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0a8b97ca38cbccef1b76c322c6e86840370f12a9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0a8b97ca38cbccef1b76c322c6e86840370f12a9/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"7cdeb5fa8aaae5e39e2453e7bd9fe057afc886b4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7cdeb5fa8aaae5e39e2453e7bd9fe057afc886b4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7cdeb5fa8aaae5e39e2453e7bd9fe057afc886b4"}],"stats":{"total":94,"additions":56,"deletions":38},"files":[{"sha":"7906506934e72f142798de12c2516d561ccc2fac","filename":"ext/oidcclient/agent/src/main/java/org/apache/syncope/ext/oidcclient/agent/Login.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0a8b97ca38cbccef1b76c322c6e86840370f12a9/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0a8b97ca38cbccef1b76c322c6e86840370f12a9/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Foidcclient%2Fagent%2FLogin.java?ref=0a8b97ca38cbccef1b76c322c6e86840370f12a9","patch":"@@ -67,7 +67,7 @@ protected void doGet(final HttpServletRequest request, final HttpServletResponse\n             UriBuilder ub = UriBuilder.fromUri(requestTO.getProviderAddress());\n             ub.queryParam(OIDCConstants.CLIENT_ID, requestTO.getClientId());\n             ub.queryParam(OIDCConstants.REDIRECT_URI, requestTO.getRedirectURI());\n-            ub.queryParam(OIDCConstants.RESPOSNSE_TYPE, requestTO.getResponseType());\n+            ub.queryParam(OIDCConstants.RESPONSE_TYPE, requestTO.getResponseType());\n             ub.queryParam(OIDCConstants.SCOPE, requestTO.getScope());\n             ub.queryParam(OIDCConstants.STATE, requestTO.getState());\n             response.setHeader(\"Location\", ub.build().toASCIIString());"},{"sha":"b0b406a73030d28c7104a1da607da6e941196e00","filename":"ext/oidcclient/common-lib/src/main/java/org/apache/syncope/common/lib/OIDCConstants.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0a8b97ca38cbccef1b76c322c6e86840370f12a9/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FOIDCConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0a8b97ca38cbccef1b76c322c6e86840370f12a9/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FOIDCConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FOIDCConstants.java?ref=0a8b97ca38cbccef1b76c322c6e86840370f12a9","patch":"@@ -26,15 +26,13 @@ public final class OIDCConstants {\n \n     public static final String SCOPE = \"scope\";\n \n-    public static final String RESPOSNSE_TYPE = \"response_type\";\n-\n-    public static final String REDIRECT_URI = \"redirect_uri\";\n+    public static final String RESPONSE_TYPE = \"response_type\";\n \n     public static final String STATE = \"state\";\n \n-    public static final String CODE = \"code\";\n+    public static final String REDIRECT_URI = \"redirect_uri\";\n \n-    public static final String GRANT_TYPE = \"grant_type\";\n+    public static final String CODE = \"code\";\n \n     public static final String OP = \"op\";\n "},{"sha":"e7b6a15ce41740d7b687b01c7d585a7339ef8f6a","filename":"ext/oidcclient/logic/src/main/java/org/apache/syncope/core/logic/OIDCClientLogic.java","status":"modified","additions":51,"deletions":31,"changes":82,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0a8b97ca38cbccef1b76c322c6e86840370f12a9/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCClientLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0a8b97ca38cbccef1b76c322c6e86840370f12a9/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCClientLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCClientLogic.java?ref=0a8b97ca38cbccef1b76c322c6e86840370f12a9","patch":"@@ -18,9 +18,11 @@\n  */\n package org.apache.syncope.core.logic;\n \n-import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;\n import com.fasterxml.uuid.Generators;\n import com.fasterxml.uuid.impl.RandomBasedGenerator;\n+import java.io.IOException;\n+import java.io.InputStream;\n import java.lang.reflect.Method;\n import java.util.Arrays;\n import java.util.Collections;\n@@ -29,19 +31,21 @@\n import java.util.List;\n import java.util.Map;\n import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.cxf.helpers.IOUtils;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.cxf.jaxrs.provider.json.JsonMapObjectProvider;\n import org.apache.cxf.rs.security.jose.jaxrs.JsonWebKeysProvider;\n import org.apache.cxf.rs.security.oauth2.client.Consumer;\n import org.apache.cxf.rs.security.oauth2.common.ClientAccessToken;\n+import org.apache.cxf.rs.security.oauth2.utils.OAuthConstants;\n import org.apache.cxf.rs.security.oidc.common.IdToken;\n import org.apache.cxf.rs.security.oidc.common.UserInfo;\n import org.apache.cxf.rs.security.oidc.rp.IdTokenReader;\n import org.apache.cxf.rs.security.oidc.rp.UserInfoClient;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n-import org.apache.syncope.common.lib.OIDCConstants;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.OIDCLoginRequestTO;\n@@ -69,8 +73,6 @@ public class OIDCClientLogic extends AbstractTransactionalLogic<AbstractBaseBean\n \n     private static final Encryptor ENCRYPTOR = Encryptor.getInstance();\n \n-    private static final ObjectMapper MAPPER = new ObjectMapper();\n-\n     private static final RandomBasedGenerator UUID_GENERATOR = Generators.randomBasedGenerator();\n \n     private static final String JWT_CLAIM_OP_ENTITYID = \"OP_ENTITYID\";\n@@ -117,7 +119,7 @@ public OIDCLoginRequestTO createLoginRequest(final String redirectURI, final Str\n         requestTO.setProviderAddress(op.getAuthorizationEndpoint());\n         requestTO.setClientId(op.getClientID());\n         requestTO.setScope(\"openid email profile\");\n-        requestTO.setResponseType(\"code\");\n+        requestTO.setResponseType(OAuthConstants.CODE_RESPONSE_TYPE);\n         requestTO.setRedirectURI(redirectURI);\n         requestTO.setState(UUID_GENERATOR.generate().toString());\n         return requestTO;\n@@ -128,17 +130,27 @@ public OIDCLoginResponseTO login(final String redirectURI, final String authoriz\n         OIDCProvider op = getOIDCProvider(opName);\n \n         // 1. get OpenID Connect tokens\n-        String body = OIDCConstants.CODE + \"=\" + authorizationCode\n-                + \"&\" + OIDCConstants.CLIENT_ID + \"=\" + op.getClientID()\n-                + \"&\" + OIDCConstants.CLIENT_SECRET + \"=\" + op.getClientSecret()\n-                + \"&\" + OIDCConstants.REDIRECT_URI + \"=\" + redirectURI\n-                + \"&\" + OIDCConstants.GRANT_TYPE + \"=authorization_code\";\n-        TokenEndpointResponse tokenEndpointResponse = getOIDCTokens(op.getTokenEndpoint(), body);\n+        String body = OAuthConstants.AUTHORIZATION_CODE_VALUE + \"=\" + authorizationCode\n+                + \"&\" + OAuthConstants.CLIENT_ID + \"=\" + op.getClientID()\n+                + \"&\" + OAuthConstants.CLIENT_SECRET + \"=\" + op.getClientSecret()\n+                + \"&\" + OAuthConstants.REDIRECT_URI + \"=\" + redirectURI\n+                + \"&\" + OAuthConstants.GRANT_TYPE + \"=\" + OAuthConstants.AUTHORIZATION_CODE_GRANT;\n+        TokenEndpointResponse tokenEndpointResponse;\n+        try {\n+            tokenEndpointResponse = getOIDCTokens(op.getTokenEndpoint(), body);\n+        } catch (IOException e) {\n+            LOG.error(\"Unexpected response for OIDC Tokens\", e);\n+\n+            SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n+            sce.getElements().add(\"Unexpected response for OIDC Tokens: \" + e.getMessage());\n+            throw sce;\n+        }\n \n         // 1. get OpenID Connect tokens\n         Consumer consumer = new Consumer(op.getClientID(), op.getClientSecret());\n \n         // 2. validate token\n+        LOG.debug(\"Id Token to be validated: {}\", tokenEndpointResponse.getIdToken());\n         IdToken idToken = getValidatedIdToken(op, consumer, tokenEndpointResponse.getIdToken());\n \n         // 3. extract user information\n@@ -152,7 +164,7 @@ public OIDCLoginResponseTO login(final String redirectURI, final String authoriz\n         responseTO.setName(userInfo.getName());\n         responseTO.setSubject(userInfo.getSubject());\n \n-        String keyValue = null;\n+        String keyValue = userInfo.getEmail();\n         for (OIDCProviderItem item : op.getItems()) {\n             AttrTO attrTO = new AttrTO();\n             attrTO.setSchema(item.getExtAttrName());\n@@ -278,7 +290,14 @@ public OIDCLoginResponseTO login(final String redirectURI, final String authoriz\n                     break;\n \n                 default:\n-                    LOG.warn(\"Unsupported: {} \", item.getExtAttrName());\n+                    String value = userInfo.getClaim(item.getExtAttrName()) == null\n+                            ? null\n+                            : userInfo.getClaim(item.getExtAttrName()).toString();\n+                    attrTO.getValues().add(value);\n+                    responseTO.getAttrs().add(attrTO);\n+                    if (item.isConnObjectKey()) {\n+                        keyValue = value;\n+                    }\n             }\n         }\n \n@@ -296,7 +315,9 @@ public OIDCLoginResponseTO login(final String redirectURI, final String authoriz\n                 username = AuthContextUtils.execWithAuthContext(AuthContextUtils.getDomain(),\n                         () -> userManager.create(op, responseTO, emailValue));\n             } else {\n-                throw new NotFoundException(\"User matching the provided value \" + keyValue);\n+                throw new NotFoundException(keyValue == null\n+                        ? \"User marching the provided claims\"\n+                        : \"User matching the provided value \" + keyValue);\n             }\n         } else if (matchingUsers.size() > 1) {\n             throw new IllegalArgumentException(\"Several users match the provided value \" + keyValue);\n@@ -336,32 +357,30 @@ public OIDCLoginResponseTO login(final String redirectURI, final String authoriz\n         return responseTO;\n     }\n \n-    private TokenEndpointResponse getOIDCTokens(final String url, final String body) {\n-        String oidcTokens = WebClient.create(url).\n+    private TokenEndpointResponse getOIDCTokens(final String url, final String body) throws IOException {\n+        Response response = WebClient.create(url, Arrays.asList(new JacksonJsonProvider())).\n                 type(MediaType.APPLICATION_FORM_URLENCODED).accept(MediaType.APPLICATION_JSON).\n-                post(body).\n-                readEntity(String.class);\n-        TokenEndpointResponse endpointResponse = null;\n-        try {\n-            endpointResponse = MAPPER.readValue(oidcTokens, TokenEndpointResponse.class);\n-        } catch (Exception e) {\n-            LOG.error(\"While getting the Tokens from the OP\", e);\n+                post(body);\n+        if (response.getStatus() != Response.Status.OK.getStatusCode()) {\n+            LOG.error(\"Unexpected response from OIDC Provider: {}\\n{}\\n{}\",\n+                    response.getStatus(), response.getHeaders(),\n+                    IOUtils.toString((InputStream) response.getEntity()));\n+\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n-            sce.getElements().add(e.getMessage());\n+            sce.getElements().add(\"Unexpected response from OIDC Provider\");\n             throw sce;\n         }\n-        return endpointResponse;\n+\n+        return response.readEntity(TokenEndpointResponse.class);\n     }\n \n     private IdToken getValidatedIdToken(final OIDCProvider op, final Consumer consumer, final String jwtIdToken) {\n         IdTokenReader idTokenReader = new IdTokenReader();\n         idTokenReader.setClockOffset(10);\n         idTokenReader.setIssuerId(op.getIssuer());\n-        WebClient jwkSetClient = WebClient.create(\n-                op.getJwksUri(), Arrays.asList(new JsonWebKeysProvider())).\n-                accept(MediaType.APPLICATION_JSON);\n-        idTokenReader.setJwkSetClient(jwkSetClient);\n-        IdToken idToken = null;\n+        idTokenReader.setJwkSetClient(WebClient.create(op.getJwksUri(), Arrays.asList(new JsonWebKeysProvider())).\n+                accept(MediaType.APPLICATION_JSON));\n+        IdToken idToken;\n         try {\n             idToken = idTokenReader.getIdToken(jwtIdToken, consumer);\n         } catch (Exception e) {\n@@ -382,7 +401,8 @@ private UserInfo getUserInfo(\n         WebClient userInfoServiceClient = WebClient.create(\n                 op.getUserinfoEndpoint(), Arrays.asList(new JsonMapObjectProvider())).\n                 accept(MediaType.APPLICATION_JSON);\n-        ClientAccessToken clientAccessToken = new ClientAccessToken(\"Bearer\", accessToken);\n+        ClientAccessToken clientAccessToken =\n+                new ClientAccessToken(OAuthConstants.BEARER_AUTHORIZATION_SCHEME, accessToken);\n         UserInfoClient userInfoClient = new UserInfoClient();\n         userInfoClient.setUserInfoServiceClient(userInfoServiceClient);\n         UserInfo userInfo = null;"},{"sha":"c7d4384b4c576a93d39bf601d73e7088f21aa525","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0a8b97ca38cbccef1b76c322c6e86840370f12a9/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0a8b97ca38cbccef1b76c322c6e86840370f12a9/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=0a8b97ca38cbccef1b76c322c6e86840370f12a9","patch":"@@ -366,7 +366,7 @@ under the License.\n     <connid.googleapps.version>1.4.1</connid.googleapps.version>\n     <connid.azure.version>1.0.1</connid.azure.version>\n \n-    <cxf.version>3.2.4</cxf.version>\n+    <cxf.version>3.2.5-SNAPSHOT</cxf.version>\n \n     <jackson.version>2.9.5</jackson.version>\n "}]}