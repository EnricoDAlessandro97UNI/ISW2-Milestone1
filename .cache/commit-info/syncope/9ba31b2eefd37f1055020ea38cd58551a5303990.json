{"sha":"9ba31b2eefd37f1055020ea38cd58551a5303990","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjliYTMxYjJlZWZkMzdmMTA1NTAyMGVhMzhjZDU4NTUxYTUzMDM5OTA=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-03-13T16:37:26Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-03-13T16:37:26Z"},"message":"SYNCOPE-18 #comment provided control into SchemaMappingValidator class\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1300225 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5ee5f588a0bc7bd5b7d89b3f74a1d8ec7f1fc360","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5ee5f588a0bc7bd5b7d89b3f74a1d8ec7f1fc360"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9ba31b2eefd37f1055020ea38cd58551a5303990","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9ba31b2eefd37f1055020ea38cd58551a5303990","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9ba31b2eefd37f1055020ea38cd58551a5303990","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9ba31b2eefd37f1055020ea38cd58551a5303990/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"651f968c7a7cbd18828749eda15000b3a72f689e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/651f968c7a7cbd18828749eda15000b3a72f689e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/651f968c7a7cbd18828749eda15000b3a72f689e"}],"stats":{"total":332,"additions":174,"deletions":158},"files":[{"sha":"bdef441ebe30e06b2d85f4ac4b38bb669d3596cd","filename":"console/src/main/java/org/syncope/console/pages/panels/ResourceMappingPanel.java","status":"modified","additions":126,"deletions":140,"changes":266,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ba31b2eefd37f1055020ea38cd58551a5303990/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ba31b2eefd37f1055020ea38cd58551a5303990/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java?ref=9ba31b2eefd37f1055020ea38cd58551a5303990","patch":"@@ -129,20 +129,17 @@ public class ResourceMappingPanel extends Panel {\n     /**\n      * Mapping field style sheet.\n      */\n-    private static String fieldStyle =\n-            \"ui-widget-content ui-corner-all short_fixedsize\";\n+    private static String fieldStyle = \"ui-widget-content ui-corner-all short_fixedsize\";\n \n     /**\n      * Mapping field style sheet.\n      */\n-    private static String defFieldStyle =\n-            \"ui-widget-content ui-corner-all\";\n+    private static String defFieldStyle = \"ui-widget-content ui-corner-all\";\n \n     /**\n      * Mapping field style sheet.\n      */\n-    private static String shortFieldStyle =\n-            \"ui-widget-content ui-corner-all veryshort_fixedsize\";\n+    private static String shortFieldStyle = \"ui-widget-content ui-corner-all veryshort_fixedsize\";\n \n     /**\n      * Attribute Mapping Panel.\n@@ -151,10 +148,7 @@ public class ResourceMappingPanel extends Panel {\n      * @param resourceTO external resource.\n      * @param createFlag create flag.\n      */\n-    public ResourceMappingPanel(\n-            final String panelid,\n-            final ResourceTO resourceTO,\n-            final boolean createFlag) {\n+    public ResourceMappingPanel(final String panelid, final ResourceTO resourceTO, final boolean createFlag) {\n \n         super(panelid);\n         setOutputMarkupId(true);\n@@ -173,17 +167,15 @@ public ResourceMappingPanel(\n         mappingContainer.setOutputMarkupId(true);\n         add(mappingContainer);\n \n-        mappings = new ListView<SchemaMappingTO>(\n-                \"mappings\", resourceTO.getMappings()) {\n+        mappings = new ListView<SchemaMappingTO>(\"mappings\", resourceTO.getMappings()) {\n \n             /**\n              * Serial version UID.\n              */\n             private static final long serialVersionUID = 4949588177564901031L;\n \n             @Override\n-            protected void populateItem(\n-                    final ListItem<SchemaMappingTO> item) {\n+            protected void populateItem(final ListItem<SchemaMappingTO> item) {\n \n                 final SchemaMappingTO mappingTO = item.getModelObject();\n \n@@ -192,23 +184,15 @@ protected void populateItem(\n \n                 attrTypes = getAttributeTypes(entity);\n \n-                item.add(new AjaxDecoratedCheckbox(\"toRemove\",\n-                        new Model(Boolean.FALSE)) {\n+                item.add(new AjaxDecoratedCheckbox(\"toRemove\", new Model(Boolean.FALSE)) {\n \n-                    private static final long serialVersionUID =\n-                            7170946748485726506L;\n+                    private static final long serialVersionUID = 7170946748485726506L;\n \n                     @Override\n-                    protected void onUpdate(\n-                            final AjaxRequestTarget target) {\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n                         int index = -1;\n-                        for (int i = 0; i < resourceTO.getMappings().\n-                                size()\n-                                && index == -1; i++) {\n-\n-                            if (mappingTO.equals(\n-                                    resourceTO.getMappings().get(i))) {\n-\n+                        for (int i = 0; i < resourceTO.getMappings().size() && index == -1; i++) {\n+                            if (mappingTO.equals(resourceTO.getMappings().get(i))) {\n                                 index = i;\n                             }\n                         }\n@@ -222,15 +206,12 @@ protected void onUpdate(\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(\n-                                super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n \n-                            private static final long serialVersionUID =\n-                                    -7927968187160354605L;\n+                            private static final long serialVersionUID = -7927968187160354605L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(\n-                                    final CharSequence script) {\n+                            public CharSequence preDecorateScript(final CharSequence script) {\n \n                                 return \"if (confirm('\"\n                                         + getString(\"confirmDelete\")\n@@ -247,30 +228,13 @@ public CharSequence preDecorateScript(\n                 intAttrNames.setChoices(schemaNames);\n                 intAttrNames.setRequired(true);\n                 intAttrNames.setStyleShet(fieldStyle);\n-\n-                setAttrNames(mappingTO.getIntMappingType(), intAttrNames);\n-\n                 item.add(intAttrNames);\n \n-\n                 final AjaxDropDownChoicePanel typesPanel = new AjaxDropDownChoicePanel(\"intMappingTypes\",\n                         new ResourceModel(\"intMappingTypes\", \"intMappingTypes\").getObject(),\n                         new PropertyModel<IntMappingType>(mappingTO, \"intMappingType\"));\n \n-                typesPanel.getField().add(\n-                        new AjaxFormComponentUpdatingBehavior(onchange) {\n-\n-                            private static final long serialVersionUID =\n-                                    -1107858522700306810L;\n-\n-                            @Override\n-                            protected void onUpdate(\n-                                    final AjaxRequestTarget target) {\n-                                setAttrNames(\n-                                        (IntMappingType) typesPanel.getModelObject(), intAttrNames);\n-                                target.add(intAttrNames);\n-                            }\n-                        });\n+                // typesPanel onChange behavior provided below ...\n \n                 typesPanel.setRequired(true);\n                 typesPanel.setChoices(attrTypes);\n@@ -285,27 +249,23 @@ protected void onUpdate(\n \n                 item.add(mappingTypesPanel);\n \n-                mappingTypesPanel.getField().add(\n-                        new AjaxFormComponentUpdatingBehavior(onchange) {\n+                mappingTypesPanel.getField().add(new AjaxFormComponentUpdatingBehavior(onchange) {\n \n-                            private static final long serialVersionUID =\n-                                    -1107858522700306810L;\n+                    private static final long serialVersionUID = -1107858522700306810L;\n \n-                            @Override\n-                            protected void onUpdate(\n-                                    final AjaxRequestTarget target) {\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n \n-                                attrTypes = getAttributeTypes(\n-                                        (AttributableType) mappingTypesPanel.getModelObject());\n+                        attrTypes = getAttributeTypes((AttributableType) mappingTypesPanel.getModelObject());\n \n-                                typesPanel.setChoices(attrTypes);\n-                                intAttrNames.setChoices(Collections.EMPTY_LIST);\n+                        typesPanel.setChoices(attrTypes);\n+                        intAttrNames.setChoices(Collections.EMPTY_LIST);\n \n-                                target.add(typesPanel.getField());\n-                                target.add(intAttrNames.getField());\n+                        target.add(typesPanel.getField());\n+                        target.add(intAttrNames.getField());\n \n-                            }\n-                        });\n+                    }\n+                });\n \n                 final FieldPanel extAttrName;\n \n@@ -321,8 +281,7 @@ protected void onUpdate(\n                     ((AjaxDropDownChoicePanel) extAttrName).setChoices(schemaNames);\n                 }\n \n-                boolean required = mappingTO != null\n-                        && !mappingTO.isAccountid() && !mappingTO.isPassword();\n+                boolean required = mappingTO != null && !mappingTO.isAccountid() && !mappingTO.isPassword();\n \n                 extAttrName.setRequired(required);\n                 extAttrName.setEnabled(required);\n@@ -344,50 +303,59 @@ protected void onUpdate(\n                         new ResourceModel(\"accountId\", \"accountId\").getObject(),\n                         new PropertyModel(mappingTO, \"accountid\"));\n \n-                accountId.getField().add(\n-                        new AjaxFormComponentUpdatingBehavior(onchange) {\n+                accountId.getField().add(new AjaxFormComponentUpdatingBehavior(onchange) {\n \n-                            private static final long serialVersionUID =\n-                                    -1107858522700306810L;\n+                    private static final long serialVersionUID = -1107858522700306810L;\n \n-                            @Override\n-                            protected void onUpdate(\n-                                    final AjaxRequestTarget target) {\n-                                extAttrName.setEnabled(\n-                                        !accountId.getModelObject()\n-                                        && !mappingTO.isPassword());\n-                                extAttrName.setModelObject(null);\n-                                extAttrName.setRequired(\n-                                        !accountId.getModelObject());\n-                                target.add(extAttrName);\n-                            }\n-                        });\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                        extAttrName.setEnabled(!accountId.getModelObject() && !mappingTO.isPassword());\n+                        extAttrName.setModelObject(null);\n+                        extAttrName.setRequired(!accountId.getModelObject());\n+                        target.add(extAttrName);\n+                    }\n+                });\n \n                 item.add(accountId);\n \n                 final AjaxCheckBoxPanel password = new AjaxCheckBoxPanel(\"password\",\n-                        new ResourceModel(\"password\", \"password\").getObject(), new PropertyModel(mappingTO, \"password\"));\n+                        new ResourceModel(\"password\", \"password\").getObject(),\n+                        new PropertyModel(mappingTO, \"password\"));\n \n-                password.getField().add(\n-                        new AjaxFormComponentUpdatingBehavior(onchange) {\n+                password.getField().add(new AjaxFormComponentUpdatingBehavior(onchange) {\n \n-                            private static final long serialVersionUID =\n-                                    -1107858522700306810L;\n+                    private static final long serialVersionUID = -1107858522700306810L;\n \n-                            @Override\n-                            protected void onUpdate(\n-                                    final AjaxRequestTarget target) {\n-                                extAttrName.setEnabled(\n-                                        !mappingTO.isAccountid()\n-                                        && !password.getModelObject());\n-                                extAttrName.setModelObject(null);\n-                                extAttrName.setRequired(\n-                                        !password.getModelObject());\n-                                target.add(extAttrName);\n-                            }\n-                        });\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                        extAttrName.setEnabled(!mappingTO.isAccountid() && !password.getModelObject());\n+                        extAttrName.setModelObject(null);\n+                        extAttrName.setRequired(!password.getModelObject());\n+                        target.add(extAttrName);\n+\n+                        setAccountId((IntMappingType) typesPanel.getModelObject(), accountId, password);\n+                        target.add(accountId);\n+                    }\n+                });\n \n                 item.add(password);\n+\n+                typesPanel.getField().add(new AjaxFormComponentUpdatingBehavior(onchange) {\n+\n+                    private static final long serialVersionUID = -1107858522700306810L;\n+\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                        setAttrNames((IntMappingType) typesPanel.getModelObject(), intAttrNames);\n+                        target.add(intAttrNames);\n+\n+                        setAccountId((IntMappingType) typesPanel.getModelObject(), accountId, password);\n+                        target.add(accountId);\n+                    }\n+                });\n+\n+                setAttrNames(mappingTO.getIntMappingType(), intAttrNames);\n+                setAccountId(mappingTO.getIntMappingType(), accountId, password);\n             }\n         };\n \n@@ -400,16 +368,13 @@ protected void onUpdate(\n             private static final long serialVersionUID = -4804368561204623354L;\n \n             @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form form) {\n-\n+            protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n                 resourceTO.getMappings().add(new SchemaMappingTO());\n                 target.add(mappingContainer);\n             }\n \n             @Override\n-            protected void onError(\n-                    final AjaxRequestTarget target, final Form<?> form) {\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n                 // ignore errors\n             }\n         };\n@@ -424,19 +389,14 @@ protected void onError(\n      * Initialize resource schema names.\n      */\n     private void initResourceSchemaNames() {\n-        if (resourceTO != null\n-                && resourceTO.getConnectorId() != null\n-                && resourceTO.getConnectorId() > 0) {\n+        if (resourceTO != null && resourceTO.getConnectorId() != null && resourceTO.getConnectorId() > 0) {\n \n             final ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n             connInstanceTO.setId(resourceTO.getConnectorId());\n \n-            connInstanceTO.setConfiguration(\n-                    resourceTO.getConnConfProperties());\n+            connInstanceTO.setConfiguration(resourceTO.getConnConfProperties());\n \n-            schemaNames = getResourceSchemaNames(\n-                    resourceTO.getConnectorId(),\n-                    resourceTO.getConnConfProperties());\n+            schemaNames = getResourceSchemaNames(resourceTO.getConnectorId(), resourceTO.getConnConfProperties());\n \n         } else {\n             schemaNames = Collections.EMPTY_LIST;\n@@ -450,8 +410,7 @@ private void initResourceSchemaNames() {\n      * @param conf connector configuration properties.\n      * @return resource schema names.\n      */\n-    private List<String> getResourceSchemaNames(\n-            final Long connectorId, final Set<ConnConfProperty> conf) {\n+    private List<String> getResourceSchemaNames(final Long connectorId, final Set<ConnConfProperty> conf) {\n         final List<String> names = new ArrayList<String>();\n \n         try {\n@@ -474,61 +433,53 @@ public void onEvent(final IEvent<?> event) {\n \n         if (event.getPayload() instanceof ConnConfModEvent) {\n \n-            final AjaxRequestTarget target =\n-                    ((ConnConfModEvent) event.getPayload()).getTarget();\n+            final AjaxRequestTarget target = ((ConnConfModEvent) event.getPayload()).getTarget();\n \n-            final List<ConnConfProperty> conf =\n-                    ((ConnConfModEvent) event.getPayload()).getConfiguration();\n+            final List<ConnConfProperty> conf = ((ConnConfModEvent) event.getPayload()).getConfiguration();\n \n             mappings.removeAll();\n \n-            addMappingBtn.setEnabled(\n-                    resourceTO.getConnectorId() != null\n-                    && resourceTO.getConnectorId() > 0);\n+            addMappingBtn.setEnabled(resourceTO.getConnectorId() != null && resourceTO.getConnectorId() > 0);\n \n-            schemaNames = getResourceSchemaNames(\n-                    resourceTO.getConnectorId(),\n-                    new HashSet<ConnConfProperty>(conf));\n+            schemaNames = getResourceSchemaNames(resourceTO.getConnectorId(), new HashSet<ConnConfProperty>(conf));\n \n             target.add(mappingContainer);\n         }\n     }\n \n     /**\n-     * Seta attribute names for a drop down chice list.\n+     * Set attribute names for a drop down chice list.\n      *\n-     * @param attrType attribute type.\n+     * @param type attribute type.\n      * @param toBeUpdated drop down choice to be updated.\n      */\n-    private void setAttrNames(\n-            final IntMappingType attrType,\n-            final AjaxDropDownChoicePanel toBeUpdated) {\n+    private void setAttrNames(final IntMappingType type, final AjaxDropDownChoicePanel toBeUpdated) {\n \n         toBeUpdated.setRequired(true);\n         toBeUpdated.setEnabled(true);\n \n-        if (attrType == null || attrType.getAttributableType() == null) {\n+        if (type == null || type.getAttributableType() == null) {\n             toBeUpdated.setChoices(Collections.EMPTY_LIST);\n         } else {\n \n-            switch (attrType) {\n+            switch (type) {\n                 // user attribute names\n                 case UserSchema:\n                 case RoleSchema:\n                 case MembershipSchema:\n-                    toBeUpdated.setChoices(schemaRestClient.getSchemaNames(attrType.getAttributableType()));\n+                    toBeUpdated.setChoices(schemaRestClient.getSchemaNames(type.getAttributableType()));\n                     break;\n \n                 case UserDerivedSchema:\n                 case RoleDerivedSchema:\n                 case MembershipDerivedSchema:\n-                    toBeUpdated.setChoices(schemaRestClient.getDerivedSchemaNames(attrType.getAttributableType()));\n+                    toBeUpdated.setChoices(schemaRestClient.getDerivedSchemaNames(type.getAttributableType()));\n                     break;\n \n                 case UserVirtualSchema:\n                 case RoleVirtualSchema:\n                 case MembershipVirtualSchema:\n-                    toBeUpdated.setChoices(schemaRestClient.getVirtualSchemaNames(attrType.getAttributableType()));\n+                    toBeUpdated.setChoices(schemaRestClient.getVirtualSchemaNames(type.getAttributableType()));\n                     break;\n \n                 case SyncopeUserId:\n@@ -557,6 +508,43 @@ private void setAttrNames(\n         }\n     }\n \n+    /**\n+     * Enable/Disable accountId checkbox.\n+     *\n+     * @param type attribute type.\n+     * @param accountId accountId checkbox.\n+     * @param password password checkbox.\n+     */\n+    private void setAccountId(\n+            final IntMappingType type, final AjaxCheckBoxPanel accountId, final AjaxCheckBoxPanel password) {\n+\n+        if (type != null && type.getAttributableType() != null) {\n+            switch (type) {\n+                case UserVirtualSchema:\n+                case RoleVirtualSchema:\n+                case MembershipVirtualSchema:\n+                    // Virtual accountId is not permitted\n+                    accountId.setReadOnly(true);\n+                    accountId.setModelObject(false);\n+                    break;\n+\n+                case Password:\n+                    // AccountId cannot be derived from password.\n+                    accountId.setReadOnly(true);\n+                    accountId.setModelObject(false);\n+                    break;\n+\n+                default:\n+                    if (password.getModelObject()) {\n+                        accountId.setReadOnly(true);\n+                        accountId.setModelObject(false);\n+                    } else {\n+                        accountId.setReadOnly(false);\n+                    }\n+            }\n+        }\n+    }\n+\n     /**\n      * Get all attribute types from a selected attribute type.\n      *\n@@ -567,12 +555,10 @@ private List<IntMappingType> getAttributeTypes(final AttributableType entity) {\n         final List<IntMappingType> res = new ArrayList<IntMappingType>();\n \n         if (entity != null) {\n-            final EnumSet types = IntMappingType.getAttributeTypes(\n-                    AttributableType.valueOf(entity.toString()));\n+            final EnumSet types = IntMappingType.getAttributeTypes(AttributableType.valueOf(entity.toString()));\n \n             for (Object type : types) {\n-                res.add(IntMappingType.valueOf(\n-                        type.toString()));\n+                res.add(IntMappingType.valueOf(type.toString()));\n             }\n         }\n "},{"sha":"21144c1745fd2ddca19b37a01d2536741a7b926b","filename":"console/src/test/java/org/syncope/console/ConnInstanceTestITCase.java","status":"modified","additions":3,"deletions":9,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ba31b2eefd37f1055020ea38cd58551a5303990/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ba31b2eefd37f1055020ea38cd58551a5303990/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java?ref=9ba31b2eefd37f1055020ea38cd58551a5303990","patch":"@@ -94,30 +94,24 @@ public void delete() {\n     public void checkConnection() {\n         selenium.click(\"css=img[alt=\\\"Resources\\\"]\");\n \n-        selenium.waitForCondition(\n-                \"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//div[@id='tabs']\\\");\", \"30000\");\n \n         selenium.click(\"//div[3]/ul/li[2]/a\");\n         selenium.click(\"//tr[2]/td[6]/span/span[7]/a\");\n \n \n-\n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//input[@name='version:textField']\\\");\",\n                 \"30000\");\n \n         selenium.click(\"//div[2]/form/div[2]/ul/li[2]/a\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\"\n-                + \"\\\"//input[@name='version:textField']\\\");\",\n-                \"30000\");\n+        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//input[@name='version:textField']\\\");\", \"30000\");\n \n         selenium.click(\"//div[2]/form/div[2]/\"\n                 + \"div[2]/div/span/div[2]/div[27]/a/img\");\n \n         selenium.waitForCondition(\n-                \"selenium.isElementPresent(\"\n-                + \"\\\"//div/ul/li/span[contains(text(),'Successful connecting to resource')]\\\");\",\n-                \"30000\");\n+                \"selenium.isElementPresent(\\\"//div/ul/li/span[contains(text(),'Successful connection')]\\\");\", \"30000\");\n     }\n }"},{"sha":"3b2103784b2896d0c8214aa3f428b92806db4159","filename":"console/src/test/java/org/syncope/console/ResourceTestITCase.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ba31b2eefd37f1055020ea38cd58551a5303990/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ba31b2eefd37f1055020ea38cd58551a5303990/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fconsole%2FResourceTestITCase.java?ref=9ba31b2eefd37f1055020ea38cd58551a5303990","patch":"@@ -121,13 +121,10 @@ public void checkConnection() {\n         selenium.waitForCondition(\"selenium.isElementPresent(\"\n                 + \"\\\"//span[text()='endpoint']\\\");\",\n                 \"30000\");\n-        \n+\n         selenium.click(\"//div[2]/form/div[2]/div[3]/span/span/div[2]/a/img\");\n \n         selenium.waitForCondition(\n-                \"selenium.isElementPresent(\"\n-                + \"\\\"//div/ul/li/span[contains(text(),\"\n-                + \"'Successful connecting to resource')]\\\");\",\n-                \"30000\");\n+                \"selenium.isElementPresent(\\\"//div/ul/li/span[contains(text(), 'Successful connection')]\\\");\", \"30000\");\n     }\n }\n\\ No newline at end of file"},{"sha":"6393354fbd67e2fcbaf1ab587862c2e31d97f93c","filename":"core/src/main/java/org/syncope/core/persistence/validation/entity/SchemaMappingValidator.java","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ba31b2eefd37f1055020ea38cd58551a5303990/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaMappingValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ba31b2eefd37f1055020ea38cd58551a5303990/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaMappingValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSchemaMappingValidator.java?ref=9ba31b2eefd37f1055020ea38cd58551a5303990","patch":"@@ -24,6 +24,7 @@\n import org.syncope.core.persistence.beans.SchemaMapping;\n import org.syncope.core.util.SchemaMappingUtil;\n import org.syncope.types.EntityViolationType;\n+import org.syncope.types.IntMappingType;\n \n public class SchemaMappingValidator extends AbstractValidator\n         implements ConstraintValidator<SchemaMappingCheck, SchemaMapping> {\n@@ -51,6 +52,23 @@ public boolean isValid(final SchemaMapping mapping, final ConstraintValidatorCon\n             return false;\n         }\n \n+        if (mapping.isAccountid() && (IntMappingType.UserVirtualSchema == mapping.getIntMappingType()\n+                || IntMappingType.RoleVirtualSchema == mapping.getIntMappingType()\n+                || IntMappingType.MembershipVirtualSchema == mapping.getIntMappingType()\n+                || IntMappingType.Password == mapping.getIntMappingType())) {\n+            context.buildConstraintViolationWithTemplate(\"Virtual attribute as accountId is not permitted\").\n+                    addNode(EntityViolationType.InvalidSchemaMapping.toString()).addConstraintViolation();\n+\n+            return false;\n+        }\n+\n+        if (mapping.isAccountid() && (IntMappingType.Password == mapping.getIntMappingType() || mapping.isPassword())) {\n+            context.buildConstraintViolationWithTemplate(\"Password as accountId is not permitted\").\n+                    addNode(EntityViolationType.InvalidSchemaMapping.toString()).addConstraintViolation();\n+\n+            return false;\n+        }\n+\n         return true;\n     }\n }"},{"sha":"b99de5fc7d8afba67169b16ee0667cc1cd8c5e3d","filename":"core/src/test/java/org/syncope/core/persistence/dao/ResourceTest.java","status":"modified","additions":25,"deletions":4,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9ba31b2eefd37f1055020ea38cd58551a5303990/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9ba31b2eefd37f1055020ea38cd58551a5303990/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FResourceTest.java?ref=9ba31b2eefd37f1055020ea38cd58551a5303990","patch":"@@ -102,8 +102,7 @@ public void save() {\n \n         resource.addMapping(accountId);\n \n-        ConnInstance connector =\n-                resourceDAO.find(\"ws-target-resource-1\").getConnector();\n+        ConnInstance connector = resourceDAO.find(\"ws-target-resource-1\").getConnector();\n \n         resource.setConnector(connector);\n \n@@ -122,8 +121,7 @@ public void saveInvalidMappingIntAttr() {\n         ExternalResource resource = new ExternalResource();\n         resource.setName(\"ws-target-resource-basic-save-invalid\");\n \n-        ConnInstance connector =\n-                resourceDAO.find(\"ws-target-resource-1\").getConnector();\n+        ConnInstance connector = resourceDAO.find(\"ws-target-resource-1\").getConnector();\n \n         resource.setConnector(connector);\n \n@@ -140,6 +138,29 @@ public void saveInvalidMappingIntAttr() {\n         assertNotNull(actual);\n     }\n \n+    @Test(expected = InvalidEntityException.class)\n+    public void saveInvalidAccountIdMapping() {\n+\n+        ExternalResource resource = new ExternalResource();\n+        resource.setName(\"ws-target-resource-basic-save-invalid\");\n+\n+        ConnInstance connector = resourceDAO.find(\"ws-target-resource-1\").getConnector();\n+\n+        resource.setConnector(connector);\n+\n+        SchemaMapping accountId = new SchemaMapping();\n+        accountId.setResource(resource);\n+        accountId.setAccountid(true);\n+        accountId.setIntMappingType(IntMappingType.UserVirtualSchema);\n+\n+        resource.addMapping(accountId);\n+\n+        // save the resource\n+        ExternalResource actual = resourceDAO.save(resource);\n+\n+        assertNotNull(actual);\n+    }\n+\n     @Test(expected = InvalidEntityException.class)\n     public void saveInvalidMappingExtAttr() {\n "}]}