{"sha":"0362480ada657e1f92539f3025ad771e798678e0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjAzNjI0ODBhZGE2NTdlMWY5MjUzOWYzMDI1YWQ3NzFlNzk4Njc4ZTA=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-10-26T08:06:31Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-10-26T08:06:31Z"},"message":"Merge branch 'master' into SYNCOPE-156","tree":{"sha":"fe1db779fe85a87b7bc0b36d0edc025c8287bf35","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fe1db779fe85a87b7bc0b36d0edc025c8287bf35"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0362480ada657e1f92539f3025ad771e798678e0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0362480ada657e1f92539f3025ad771e798678e0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0362480ada657e1f92539f3025ad771e798678e0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0362480ada657e1f92539f3025ad771e798678e0/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"66d3a50565eff9718b07760f9f14f0d03a869b27","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/66d3a50565eff9718b07760f9f14f0d03a869b27","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/66d3a50565eff9718b07760f9f14f0d03a869b27"},{"sha":"7f584fb5939dda2b24497b0ff465cc8935c8e5b1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7f584fb5939dda2b24497b0ff465cc8935c8e5b1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7f584fb5939dda2b24497b0ff465cc8935c8e5b1"}],"stats":{"total":969,"additions":949,"deletions":20},"files":[{"sha":"251297b6d5fa563d64bbf693f16af046cdb6283b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/CommonsResultManager.java","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2FCommonsResultManager.java?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -18,7 +18,9 @@\n  */\n package org.apache.syncope.client.cli.commands;\n \n+import java.util.Set;\n import org.apache.syncope.client.cli.view.Messages;\n+import org.apache.syncope.common.lib.types.ConnConfProperty;\n \n public abstract class CommonsResultManager {\n \n@@ -53,4 +55,20 @@ public void defaultError(final String option, final String helpMessage) {\n     public void generic(final String... messages) {\n         Messages.printMessage(messages);\n     }\n+    \n+    protected void printConfiguration(final Set<ConnConfProperty> configurationPropertys) {\n+        for (final ConnConfProperty configuration : configurationPropertys) {\n+            System.out.println(\"       name: \" + configuration.getSchema().getName());\n+            System.out.println(\"       values: \" + configuration.getValues());\n+            System.out.println(\"       type: \" + configuration.getSchema().getType());\n+            System.out.println(\"       display name: \" + configuration.getSchema().getDisplayName());\n+            System.out.println(\"       help message: \" + configuration.getSchema().getHelpMessage());\n+            System.out.println(\"       order: \" + configuration.getSchema().getOrder());\n+            System.out.println(\"       default values: \" + configuration.getSchema().getDefaultValues());\n+            System.out.println(\"       confidential: \" + configuration.getSchema().isConfidential());\n+            System.out.println(\"       required: \" + configuration.getSchema().isRequired());\n+            System.out.println(\"       overridable: \" + configuration.isOverridable());\n+            System.out.println(\"\");\n+        }\n+    }\n }"},{"sha":"0605c4655df9e15ac9550199beb1413021ef9fa5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/AbstractConnectorCommand.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FAbstractConnectorCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FAbstractConnectorCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FAbstractConnectorCommand.java?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.connector;\n+\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.common.rest.api.service.ConnectorService;\n+\n+public abstract class AbstractConnectorCommand {\n+\n+    protected final ConnectorService connectorService = SyncopeServices.get(ConnectorService.class);\n+\n+    protected final ConnectorResultManager connectorResultManager = new ConnectorResultManager();\n+\n+}"},{"sha":"83a03cb91c795fd9ef8859654c22ea47cfedc17c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorCommand.java","status":"added","additions":123,"deletions":0,"changes":123,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorCommand.java?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -0,0 +1,123 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.connector;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.cli.Command;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.commands.AbstractCommand;\n+\n+@Command(name = \"connector\")\n+public class ConnectorCommand extends AbstractCommand {\n+\n+    private static final String HELP_MESSAGE = \"Usage: connector [options]\\n\"\n+            + \"  Options:\\n\"\n+            + \"    --help \\n\"\n+            + \"    --list \\n\"\n+            + \"    --list-bundles \\n\"\n+            + \"    --list-configuration-properties\\n\"\n+            + \"       Syntax: --list-configuration-properties {CONNECTOR-ID} {CONNECTOR-ID} [...]\\n\"\n+            + \"    --read \\n\"\n+            + \"       Syntax: --read {CONNECTOR-ID} {CONNECTOR-ID} [...]\\n\"\n+            + \"    --delete \\n\"\n+            + \"       Syntax: --delete {CONNECTOR-ID} {CONNECTOR-ID} [...]\";\n+\n+    @Override\n+    public void execute(final Input input) {\n+        if (StringUtils.isBlank(input.getOption())) {\n+            input.setOption(ConnectorOptions.HELP.getOptionName());\n+        }\n+\n+        switch (ConnectorOptions.fromName(input.getOption())) {\n+            case LIST:\n+                new ConnectorList().list();\n+                break;\n+            case LIST_BUNDLES:\n+                new ConnectorListBundles().list();\n+                break;\n+            case LIST_CONFIGURATION:\n+                new ConnectorListConfigurationProperties(input).list();\n+                break;\n+            case READ:\n+                new ConnectorRead(input).read();\n+                break;\n+            case READ_BY_RESOURCE:\n+                new ConnectorReadByResource(input).read();\n+                break;\n+            case DELETE:\n+                new ConnectorDelete(input).delete();\n+                break;\n+            case HELP:\n+                System.out.println(HELP_MESSAGE);\n+                break;\n+            default:\n+                new ConnectorResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n+        }\n+    }\n+\n+    @Override\n+    public String getHelpMessage() {\n+        return HELP_MESSAGE;\n+    }\n+\n+    private enum ConnectorOptions {\n+\n+        HELP(\"--help\"),\n+        LIST(\"--list\"),\n+        LIST_BUNDLES(\"--list-bundles\"),\n+        LIST_CONFIGURATION(\"--list-configuration-properties\"),\n+        READ(\"--read\"),\n+        READ_BY_RESOURCE(\"--read-by-resource\"),\n+        DELETE(\"--delete\");\n+\n+        private final String optionName;\n+\n+        ConnectorOptions(final String optionName) {\n+            this.optionName = optionName;\n+        }\n+\n+        public String getOptionName() {\n+            return optionName;\n+        }\n+\n+        public boolean equalsOptionName(final String otherName) {\n+            return (otherName == null) ? false : optionName.equals(otherName);\n+        }\n+\n+        public static ConnectorOptions fromName(final String name) {\n+            ConnectorOptions optionToReturn = HELP;\n+            for (final ConnectorOptions option : ConnectorOptions.values()) {\n+                if (option.equalsOptionName(name)) {\n+                    optionToReturn = option;\n+                }\n+            }\n+            return optionToReturn;\n+        }\n+\n+        public static List<String> toList() {\n+            final List<String> options = new ArrayList<>();\n+            for (final ConnectorOptions value : values()) {\n+                options.add(value.getOptionName());\n+            }\n+            return options;\n+        }\n+    }\n+}"},{"sha":"ab4c82e22fc7ac65c63d6a876a12e04255010bd0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorDelete.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorDelete.java?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.connector;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.ConnInstanceTO;\n+\n+public class ConnectorDelete extends AbstractConnectorCommand {\n+\n+    private static final String DELETE_HELP_MESSAGE = \"connector --delete {CONNECTOR-ID} {CONNECTOR-ID} [...]\";\n+\n+    private final Input input;\n+\n+    public ConnectorDelete(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void delete() {\n+        if (input.getParameters().length >= 1) {\n+            final List<ConnInstanceTO> connInstanceTOs = new ArrayList<>();\n+            for (final String parameter : input.getParameters()) {\n+                try {\n+                    connectorService.delete(Long.valueOf(parameter));\n+                    connectorResultManager.deletedMessage(\"connector\", parameter);\n+                } catch (final NumberFormatException ex) {\n+                    connectorResultManager.managerNumberFormatException(\"connector\", parameter);\n+                } catch (final SyncopeClientException | WebServiceException ex) {\n+                    if (ex.getMessage().startsWith(\"NotFound\")) {\n+                        connectorResultManager.notFoundError(\"Connector\", parameter);\n+                    } else {\n+                        connectorResultManager.generic(ex.getMessage());\n+                    }\n+                    break;\n+                }\n+            }\n+            connectorResultManager.toView(connInstanceTOs);\n+        } else {\n+            connectorResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n+        }\n+    }\n+\n+}"},{"sha":"7b6a3c62b6fb51191b05018a2f7d306211294df0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorList.java","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorList.java?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.connector;\n+\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+\n+public class ConnectorList extends AbstractConnectorCommand {\n+\n+    public void list() {\n+        try {\n+            connectorResultManager.toView(connectorService.list(null));\n+        } catch (final SyncopeClientException ex) {\n+            connectorResultManager.generic(ex.getMessage());\n+        }\n+    }\n+}"},{"sha":"72a103d9cf6c4bf615ae3e41f2d22895825504f5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorListBundles.java","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListBundles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListBundles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListBundles.java?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.connector;\n+\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+\n+public class ConnectorListBundles extends AbstractConnectorCommand {\n+\n+    public void list() {\n+        try {\n+            connectorResultManager.fromListBundles(connectorService.getBundles(null));\n+        } catch (final SyncopeClientException ex) {\n+            connectorResultManager.generic(ex.getMessage());\n+        }\n+    }\n+}"},{"sha":"6b80e8ed3af12c49b3e0fd65d42664f2db88f1cc","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorListConfigurationProperties.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListConfigurationProperties.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListConfigurationProperties.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorListConfigurationProperties.java?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.connector;\n+\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+\n+public class ConnectorListConfigurationProperties extends AbstractConnectorCommand {\n+\n+    private static final String LIST_CONFIGURATION_HELP_MESSAGE \n+            = \"connector --list-configuration-properties {CONNECTOR-ID} {CONNECTOR-ID} [...]\";\n+\n+    private final Input input;\n+\n+    public ConnectorListConfigurationProperties(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void list() {\n+        if (input.getParameters().length >= 1) {\n+            for (final String parameter : input.getParameters()) {\n+                try {\n+                    connectorResultManager.fromListConfigurationProperties(\n+                            connectorService.getConfigurationProperties(Long.valueOf(parameter)));\n+                } catch (final NumberFormatException ex) {\n+                    connectorResultManager.managerNumberFormatException(\"connector\", parameter);\n+                } catch (final SyncopeClientException | WebServiceException ex) {\n+                    if (ex.getMessage().startsWith(\"NotFound\")) {\n+                        connectorResultManager.notFoundError(\"Connector\", parameter);\n+                    } else {\n+                        connectorResultManager.generic(ex.getMessage());\n+                    }\n+                    break;\n+                }\n+            }\n+        } else {\n+            connectorResultManager.commandOptionError(LIST_CONFIGURATION_HELP_MESSAGE);\n+        }\n+    }\n+\n+}"},{"sha":"46cbe842f84c435a3584e8dce02deb22529b2fb0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorRead.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorRead.java?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.connector;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.ConnInstanceTO;\n+\n+public class ConnectorRead extends AbstractConnectorCommand {\n+\n+    private static final String READ_HELP_MESSAGE = \"connector --read {CONNECTOR-ID} {CONNECTOR-ID} [...]\";\n+\n+    private final Input input;\n+\n+    public ConnectorRead(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void read() {\n+        if (input.getParameters().length >= 1) {\n+            final List<ConnInstanceTO> connInstanceTOs = new ArrayList<>();\n+            for (final String parameter : input.getParameters()) {\n+                try {\n+                    connInstanceTOs.add(connectorService.read(Long.valueOf(parameter), READ_HELP_MESSAGE));\n+                } catch (final NumberFormatException ex) {\n+                    connectorResultManager.managerNumberFormatException(\"connector\", parameter);\n+                } catch (final SyncopeClientException | WebServiceException ex) {\n+                    if (ex.getMessage().startsWith(\"NotFound\")) {\n+                        connectorResultManager.notFoundError(\"Connector\", parameter);\n+                    } else {\n+                        connectorResultManager.generic(ex.getMessage());\n+                    }\n+                    break;\n+                }\n+            }\n+            connectorResultManager.toView(connInstanceTOs);\n+        } else {\n+            connectorResultManager.commandOptionError(READ_HELP_MESSAGE);\n+        }\n+    }\n+\n+}"},{"sha":"bd7797ce3034ce0d789c007c5640efd625727e12","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorReadByResource.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorReadByResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorReadByResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorReadByResource.java?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.connector;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.ConnInstanceTO;\n+\n+public class ConnectorReadByResource extends AbstractConnectorCommand {\n+\n+    private static final String READ_HELP_MESSAGE\n+            = \"connector --read-by-resource {RESOURCE-NAME} {RESOURCE-NAME} [...]\";\n+\n+    private final Input input;\n+\n+    public ConnectorReadByResource(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void read() {\n+        if (input.getParameters().length >= 1) {\n+            final List<ConnInstanceTO> connInstanceTOs = new ArrayList<>();\n+            for (final String parameter : input.getParameters()) {\n+                try {\n+                    connInstanceTOs.add(connectorService.readByResource(parameter, READ_HELP_MESSAGE));\n+                } catch (final SyncopeClientException | WebServiceException ex) {\n+                    if (ex.getMessage().startsWith(\"NotFound\")) {\n+                        connectorResultManager.notFoundError(\"Resource\", parameter);\n+                    } else {\n+                        connectorResultManager.generic(ex.getMessage());\n+                    }\n+                    break;\n+                }\n+            }\n+            connectorResultManager.toView(connInstanceTOs);\n+        } else {\n+            connectorResultManager.commandOptionError(READ_HELP_MESSAGE);\n+        }\n+    }\n+\n+}"},{"sha":"b6edbc2a6352f20ad43db0f994f27fa540a2009a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorResultManager.java","status":"added","additions":98,"deletions":0,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorResultManager.java?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -0,0 +1,98 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.connector;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.syncope.client.cli.commands.CommonsResultManager;\n+import org.apache.syncope.common.lib.to.ConnBundleTO;\n+import org.apache.syncope.common.lib.to.ConnInstanceTO;\n+import org.apache.syncope.common.lib.to.ConnPoolConfTO;\n+import org.apache.syncope.common.lib.types.ConnConfPropSchema;\n+import org.apache.syncope.common.lib.types.ConnConfProperty;\n+import org.apache.syncope.common.lib.types.ConnectorCapability;\n+\n+public class ConnectorResultManager extends CommonsResultManager {\n+\n+    public void toView(final List<ConnInstanceTO> connInstanceTOs) {\n+        for (final ConnInstanceTO connInstanceTO : connInstanceTOs) {\n+            printConnector(connInstanceTO);\n+        }\n+    }\n+\n+    public void fromListBundles(final List<ConnBundleTO> connBundleTOs) {\n+        for (final ConnBundleTO connBundleTO : connBundleTOs) {\n+            System.out.println(\" > BUNDLE NAME: \" + connBundleTO.getBundleName());\n+            System.out.println(\"    connector name: \" + connBundleTO.getConnectorName());\n+            System.out.println(\"    display name: \" + connBundleTO.getDisplayName());\n+            System.out.println(\"    location: \" + connBundleTO.getLocation());\n+            System.out.println(\"    version: \" + connBundleTO.getVersion());\n+            System.out.println(\"    PROPERTIES:\");\n+            printConfPropSchema(connBundleTO.getProperties());\n+        }\n+    }\n+\n+    public void fromListConfigurationProperties(final List<ConnConfProperty> connConfPropertys) {\n+        printConfiguration(new HashSet<>(connConfPropertys));\n+\n+    }\n+\n+    private void printConnector(final ConnInstanceTO connInstanceTO) {\n+        System.out.println(\" > CONNECTOR ID: \" + connInstanceTO.getKey());\n+        System.out.println(\"    bundle name: \" + connInstanceTO.getBundleName());\n+        System.out.println(\"    connector name: \" + connInstanceTO.getConnectorName());\n+        System.out.println(\"    display name: \" + connInstanceTO.getDisplayName());\n+        System.out.println(\"    location: \" + connInstanceTO.getLocation());\n+        System.out.println(\"    version: \" + connInstanceTO.getVersion());\n+        System.out.println(\"    timeout: \" + connInstanceTO.getConnRequestTimeout());\n+        System.out.println(\"    CAPABILITIES:\");\n+        printCapabilities(connInstanceTO.getCapabilities());\n+        System.out.println(\"    CONFIGURATION:\");\n+        printConfiguration(connInstanceTO.getConfiguration());\n+        System.out.println(\"    POOL CONFIGURATION:\");\n+        printConfPool(connInstanceTO.getPoolConf());\n+    }\n+\n+    private void printCapabilities(final Set<ConnectorCapability> capabilities) {\n+        for (final ConnectorCapability capability : capabilities) {\n+            System.out.println(\"       - \" + capability.name());\n+        }\n+    }\n+\n+    private void printConfPool(final ConnPoolConfTO connPoolConfTO) {\n+        System.out.println(\"       min idle: \" + connPoolConfTO.getMinIdle());\n+        System.out.println(\"       min evictlable idle: \" + connPoolConfTO.getMinEvictableIdleTimeMillis());\n+        System.out.println(\"       max idle: \" + connPoolConfTO.getMaxIdle());\n+        System.out.println(\"       max objects: \" + connPoolConfTO.getMaxObjects());\n+        System.out.println(\"       max wait: \" + connPoolConfTO.getMaxWait());\n+    }\n+\n+    private void printConfPropSchema(final List<ConnConfPropSchema> connConfPropSchemas) {\n+        for (final ConnConfPropSchema connConfPropSchema : connConfPropSchemas) {\n+            System.out.println(\"       name: \" + connConfPropSchema.getName());\n+            System.out.println(\"       display name: \" + connConfPropSchema.getDisplayName());\n+            System.out.println(\"       help message: \" + connConfPropSchema.getHelpMessage());\n+            System.out.println(\"       type: \" + connConfPropSchema.getType());\n+            System.out.println(\"       order: \" + connConfPropSchema.getOrder());\n+            System.out.println(\"       default value: \" + connConfPropSchema.getDefaultValues().toString());\n+            System.out.println(\"\");\n+        }\n+    }\n+}"},{"sha":"86b5d13c7f1ed69e0f738c8d0f0b0eff1e4c9393","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicyResultManager.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicyResultManager.java?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -90,6 +90,7 @@ public void printAccountPolicy(final AccountPolicyTO policyTO) {\n         System.out.println(\"    propagation suspension : \" + policyTO.isPropagateSuspension());\n         System.out.println(\"    RULES : \");\n         System.out.println(\"       > class : \" + policyTO.getRuleConfs());\n+        System.out.println(\"\");\n     }\n \n     public void printPasswordPolicy(final PasswordPolicyTO policyTO) {\n@@ -102,6 +103,7 @@ public void printPasswordPolicy(final PasswordPolicyTO policyTO) {\n         System.out.println(\"    allow null password : \" + policyTO.isAllowNullPassword());\n         System.out.println(\"    RULES : \");\n         System.out.println(\"       > class : \" + ((PasswordPolicyTO) policyTO).getRuleConfs());\n+        System.out.println(\"\");\n     }\n \n     public void printSyncPolicy(final SyncPolicyTO policyTO) {\n@@ -116,5 +118,6 @@ public void printSyncPolicy(final SyncPolicyTO policyTO) {\n             System.out.println(\"    correlation rule : \"\n                     + policyTO.getSpecification().getCorrelationRules().toString());\n         }\n+        System.out.println(\"\");\n     }\n }"},{"sha":"1d3e5de3a95010ab88e3d130ac59aa234df0ffaf","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportList.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportList.java?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -24,7 +24,7 @@ public class ReportList extends AbstractReportCommand {\n \n     public void list() {\n         try {\n-            reportResultManager.fromList(reportService.list());\n+            reportResultManager.fromValueToView(reportService.list());\n         } catch (final SyncopeClientException ex) {\n             reportResultManager.generic(ex.getMessage());\n         }"},{"sha":"d1ab975929bace18ee95bbf1fa63b136eaa8054e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportRead.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportRead.java?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -51,7 +51,7 @@ public void read() {\n                     }\n                 }\n             }\n-            reportResultManager.fromList(reportTOs);\n+            reportResultManager.fromValueToView(reportTOs);\n         } else {\n             reportResultManager.commandOptionError(READ_HELP_MESSAGE);\n         }"},{"sha":"bafdffef3969556b9fc432f74340e6c778759c8e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportResultManager.java","status":"modified","additions":9,"deletions":8,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportResultManager.java?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -27,27 +27,28 @@\n \n public class ReportResultManager extends CommonsResultManager {\n \n-    public void fromList(final List<ReportTO> reportTOs) {\n+    public void fromValueToView(final List<ReportTO> reportTOs) {\n         for (final ReportTO reportTO : reportTOs) {\n             printReport(reportTO);\n         }\n     }\n \n     private void printReport(final ReportTO reportTO) {\n         System.out.println(\" > REPORT ID: \" + reportTO.getKey());\n-        System.out.println(\"    type: \" + reportTO.getName());\n-        System.out.println(\"    type: \" + reportTO.getCronExpression());\n-        System.out.println(\"    type: \" + reportTO.getLatestExecStatus());\n-        System.out.println(\"    type: \" + reportTO.getLastExec());\n-        System.out.println(\"    type: \" + reportTO.getNextExec());\n-        System.out.println(\"    type: \" + reportTO.getStartDate());\n-        System.out.println(\"    type: \" + reportTO.getEndDate());\n+        System.out.println(\"    name: \" + reportTO.getName());\n+        System.out.println(\"    cron expression: \" + reportTO.getCronExpression());\n+        System.out.println(\"    latest execution status: \" + reportTO.getLatestExecStatus());\n+        System.out.println(\"    last execution: \" + reportTO.getLastExec());\n+        System.out.println(\"    next execution: \" + reportTO.getNextExec());\n+        System.out.println(\"    start date: \" + reportTO.getStartDate());\n+        System.out.println(\"    end date: \" + reportTO.getEndDate());\n         System.out.println(\"    CONF:\");\n         for (final AbstractReportletConf reportletConf : reportTO.getReportletConfs()) {\n             printReportletConf(reportletConf);\n         }\n         System.out.println(\"    EXECUTION:\");\n         printReportExecution(reportTO.getExecutions());\n+        System.out.println(\"\");\n     }\n \n     private void printReportletConf(final AbstractReportletConf reportletConf) {"},{"sha":"85d4a2d5e4c5948eee5c0ea00ade5cfedfe6d593","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/AbstractResourceCommand.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FAbstractResourceCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FAbstractResourceCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FAbstractResourceCommand.java?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.resource;\n+\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.common.rest.api.service.ResourceService;\n+\n+public abstract class AbstractResourceCommand {\n+\n+    protected final ResourceService resourceService = SyncopeServices.get(ResourceService.class);\n+\n+    protected final ResourceResultManager resourceResultManager = new ResourceResultManager();\n+\n+}"},{"sha":"942fcd20ed8dfc1cd750150a6a445aba9827ebce","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceCommand.java","status":"added","additions":109,"deletions":0,"changes":109,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceCommand.java?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -0,0 +1,109 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.resource;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.cli.Command;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.commands.AbstractCommand;\n+\n+@Command(name = \"resource\")\n+public class ResourceCommand extends AbstractCommand {\n+\n+    private static final String HELP_MESSAGE = \"Usage: resource [options]\\n\"\n+            + \"  Options:\\n\"\n+            + \"    --help \\n\"\n+            + \"    --list \\n\"\n+            + \"    --read \\n\"\n+            + \"       Syntax: --read {CONNECTOR-ID} {CONNECTOR-ID} [...]\\n\"\n+            + \"    --delete \\n\"\n+            + \"       Syntax: --delete {CONNECTOR-ID} {CONNECTOR-ID} [...]\";\n+\n+    @Override\n+    public void execute(final Input input) {\n+        if (StringUtils.isBlank(input.getOption())) {\n+            input.setOption(ResourceOptions.HELP.getOptionName());\n+        }\n+\n+        switch (ResourceOptions.fromName(input.getOption())) {\n+            case LIST:\n+                new ResourceList().list();\n+                break;\n+            case READ:\n+                new ResourceRead(input).read();\n+                break;\n+            case DELETE:\n+                new ResourceDelete(input).delete();\n+                break;\n+            case HELP:\n+                System.out.println(HELP_MESSAGE);\n+                break;\n+            default:\n+                new ResourceResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n+        }\n+    }\n+\n+    @Override\n+    public String getHelpMessage() {\n+        return HELP_MESSAGE;\n+    }\n+\n+    private enum ResourceOptions {\n+\n+        HELP(\"--help\"),\n+        LIST(\"--list\"),\n+        READ(\"--read\"),\n+        DELETE(\"--delete\");\n+\n+        private final String optionName;\n+\n+        ResourceOptions(final String optionName) {\n+            this.optionName = optionName;\n+        }\n+\n+        public String getOptionName() {\n+            return optionName;\n+        }\n+\n+        public boolean equalsOptionName(final String otherName) {\n+            return (otherName == null) ? false : optionName.equals(otherName);\n+        }\n+\n+        public static ResourceOptions fromName(final String name) {\n+            ResourceOptions optionToReturn = HELP;\n+            for (final ResourceOptions option : ResourceOptions.values()) {\n+                if (option.equalsOptionName(name)) {\n+                    optionToReturn = option;\n+                }\n+            }\n+            return optionToReturn;\n+        }\n+\n+        public static List<String> toList() {\n+            final List<String> options = new ArrayList<>();\n+            for (final ResourceOptions value : values()) {\n+                options.add(value.getOptionName());\n+            }\n+            return options;\n+        }\n+    }\n+\n+}"},{"sha":"c3ecd8497f54b071768ce6895a7c4aaa78c436ff","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceDelete.java","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceDelete.java?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.resource;\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+\n+public class ResourceDelete extends AbstractResourceCommand {\n+\n+    private static final String DELETE_HELP_MESSAGE = \"resource --delete {RESOURCE-NAME} {RESOURCE-NAME} [...]\";\n+\n+    private final Input input;\n+\n+    public ResourceDelete(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void delete() {\n+        if (input.getParameters().length >= 1) {\n+            for (final String parameter : input.getParameters()) {\n+                try {\n+                    resourceService.delete(parameter);\n+                    resourceResultManager.deletedMessage(\"resource\", parameter);\n+                } catch (final NumberFormatException ex) {\n+                    resourceResultManager.managerNumberFormatException(\"resource\", parameter);\n+                } catch (final SyncopeClientException | WebServiceException ex) {\n+                    if (ex.getMessage().startsWith(\"NotFound\")) {\n+                        resourceResultManager.notFoundError(\"Resource\", parameter);\n+                    } else {\n+                        resourceResultManager.generic(ex.getMessage());\n+                    }\n+                    break;\n+                }\n+            }\n+        } else {\n+            resourceResultManager.commandOptionError(DELETE_HELP_MESSAGE);\n+        }\n+    }\n+\n+}"},{"sha":"85f05f537cdf9b0db148d973bbd97cf85d01f10a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceList.java","status":"renamed","additions":10,"deletions":9,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceList.java?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -16,16 +16,17 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.cli;\n+package org.apache.syncope.client.cli.commands.resource;\n \n-public enum AvailableServices {\n+import org.apache.syncope.common.lib.SyncopeClientException;\n \n-    logger,\n-    config,\n-    notification,\n-    report,\n-    policy,\n-    entitlement,\n-    schema;\n+public class ResourceList extends AbstractResourceCommand {\n \n+    public void list() {\n+        try {\n+            resourceResultManager.toView(resourceService.list());\n+        } catch (final SyncopeClientException ex) {\n+            resourceResultManager.generic(ex.getMessage());\n+        }\n+    }\n }","previous_filename":"client/cli/src/main/java/org/apache/syncope/client/cli/AvailableServices.java"},{"sha":"3790c020ed9f65cdbe45cd9167f2d067fedfccb2","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceRead.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceRead.java?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.resource;\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.ResourceTO;\n+\n+public class ResourceRead extends AbstractResourceCommand {\n+\n+    private static final String READ_HELP_MESSAGE = \"resource --read {RESOURCE-NAME} {RESOURCE-NAME} [...]\";\n+\n+    private final Input input;\n+\n+    public ResourceRead(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void read() {\n+        if (input.getParameters().length >= 1) {\n+            final List<ResourceTO> resourceTOs = new ArrayList<>();\n+            for (final String parameter : input.getParameters()) {\n+                try {\n+                    resourceTOs.add(resourceService.read(parameter));\n+                } catch (final NumberFormatException ex) {\n+                    resourceResultManager.managerNumberFormatException(\"resource\", parameter);\n+                } catch (final SyncopeClientException | WebServiceException ex) {\n+                    if (ex.getMessage().startsWith(\"NotFound\")) {\n+                        resourceResultManager.notFoundError(\"Resource\", parameter);\n+                    } else {\n+                        resourceResultManager.generic(ex.getMessage());\n+                    }\n+                    break;\n+                }\n+            }\n+            resourceResultManager.toView(resourceTOs);\n+        } else {\n+            resourceResultManager.commandOptionError(READ_HELP_MESSAGE);\n+        }\n+    }\n+\n+}"},{"sha":"91847f42d677be1d98ce265b2a0495b5c9a460b7","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceResultManager.java","status":"added","additions":95,"deletions":0,"changes":95,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -0,0 +1,95 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.resource;\n+\n+import java.util.List;\n+import org.apache.syncope.client.cli.commands.CommonsResultManager;\n+import org.apache.syncope.common.lib.to.MappingItemTO;\n+import org.apache.syncope.common.lib.to.MappingTO;\n+import org.apache.syncope.common.lib.to.ProvisionTO;\n+import org.apache.syncope.common.lib.to.ResourceTO;\n+\n+public class ResourceResultManager extends CommonsResultManager {\n+\n+    public void toView(final List<ResourceTO> resourceTOs) {\n+        for (final ResourceTO resourceTO : resourceTOs) {\n+            printResource(resourceTO);\n+        }\n+        System.out.println(\"\");\n+    }\n+\n+    private void printResource(final ResourceTO resourceTO) {\n+        System.out.println(\" > RESOURCE ID: \" + resourceTO.getKey());\n+        System.out.println(\"    connector dispaly name: \" + resourceTO.getConnectorDisplayName());\n+        System.out.println(\"    etag value: \" + resourceTO.getETagValue());\n+        System.out.println(\"    connector id: \" + resourceTO.getConnector());\n+        System.out.println(\"    account policy id: \" + resourceTO.getAccountPolicy());\n+        System.out.println(\"    password policy id: \" + resourceTO.getPasswordPolicy());\n+        System.out.println(\"    sync policy id: \" + resourceTO.getSyncPolicy());\n+        System.out.println(\"    creator: \" + resourceTO.getCreator());\n+        System.out.println(\"    creation date: \" + resourceTO.getCreationDate());\n+        System.out.println(\"    last modifier: \" + resourceTO.getLastModifier());\n+        System.out.println(\"    last change date: \" + resourceTO.getLastChangeDate());\n+        System.out.println(\"    propagation actions class: \" + resourceTO.getPropagationActionsClassNames());\n+        System.out.println(\"    propagation priority: \" + resourceTO.getPropagationPriority());\n+        System.out.println(\"    PROVISIONS:\");\n+        printProvision(resourceTO.getProvisions());\n+        System.out.println(\"    create trace level: \" + resourceTO.getCreateTraceLevel());\n+        System.out.println(\"    delete trace level: \" + resourceTO.getDeleteTraceLevel());\n+        System.out.println(\"    update trace level: \" + resourceTO.getUpdateTraceLevel());\n+        System.out.println(\"    sync trace level: \" + resourceTO.getSyncTraceLevel());\n+    }\n+\n+    private void printProvision(final List<ProvisionTO> provisionTOs) {\n+        for (final ProvisionTO provisionTO : provisionTOs) {\n+            System.out.println(\"       provision id: \" + provisionTO.getKey());\n+            System.out.println(\"       any type: \" + provisionTO.getAnyType());\n+            System.out.println(\"       object class: \" + provisionTO.getObjectClass());\n+            System.out.println(\"       sync token: \" + provisionTO.getSyncToken());\n+            System.out.println(\"       virtual schema: \" + provisionTO.getVirSchemas());\n+            System.out.println(\"       MAPPING: \");\n+            printMapping(provisionTO.getMapping());\n+        }\n+        System.out.println(\"\");\n+    }\n+\n+    private void printMapping(final MappingTO mappingTO) {\n+        System.out.println(\"          ConnObjectLink: \" + mappingTO.getConnObjectLink());\n+        System.out.println(\"          MAPPING ITEM: \");\n+        printMappingItem(mappingTO.getItems());\n+        System.out.println(\"\");\n+    }\n+\n+    private void printMappingItem(final List<MappingItemTO> mappingItemTOs) {\n+        for (final MappingItemTO mappingItemTO : mappingItemTOs) {\n+            System.out.println(\"             mapping key: \" + mappingItemTO.getKey());\n+            System.out.println(\"             mapping item type: \" + mappingItemTO.getIntMappingType().name());\n+            System.out.println(\"             internal attribute name: \" + mappingItemTO.getIntAttrName());\n+            System.out.println(\"             external attribute name: \" + mappingItemTO.getExtAttrName());\n+            System.out.println(\"             mandatory condition: \" + mappingItemTO.getMandatoryCondition());\n+            System.out.println(\"             transformers class: \"\n+                    + mappingItemTO.getMappingItemTransformerClassNames());\n+            System.out.println(\"             purpose: \" + mappingItemTO.getPurpose());\n+            System.out.println(\"             connector object key: \" + mappingItemTO.isConnObjectKey());\n+            System.out.println(\"             password: \" + mappingItemTO.isPassword());\n+        }\n+        System.out.println(\"\");\n+    }\n+\n+}"},{"sha":"e713b0ead72b8b819f91c3ab90cf14b3cc7b14b9","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0362480ada657e1f92539f3025ad771e798678e0/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0362480ada657e1f92539f3025ad771e798678e0/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=0362480ada657e1f92539f3025ad771e798678e0","patch":"@@ -386,7 +386,7 @@ under the License.\n     <codemirror.version>5.7</codemirror.version>\n     <jsplumb.version>1.7.5</jsplumb.version>\n     \n-    <wicket.version>7.0.0</wicket.version>\n+    <wicket.version>7.1.0</wicket.version>\n     <wicket-jqueryui.version>7.0.2</wicket-jqueryui.version>\n \n     <izpack.version>5.0.5</izpack.version>"}]}