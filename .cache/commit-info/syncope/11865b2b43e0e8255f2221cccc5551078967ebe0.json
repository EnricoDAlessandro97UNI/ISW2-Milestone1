{"sha":"11865b2b43e0e8255f2221cccc5551078967ebe0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjExODY1YjJiNDNlMGU4MjU1ZjIyMjFjY2NjNTU1MTA3ODk2N2ViZTA=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-06-16T12:58:42Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-06-16T12:58:42Z"},"message":"DerivedAttributeSchema now directly depends on AttributeSchema\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246093 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f51be8bac8ef602c86e6a5343032169e0f49dd7e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f51be8bac8ef602c86e6a5343032169e0f49dd7e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/11865b2b43e0e8255f2221cccc5551078967ebe0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/11865b2b43e0e8255f2221cccc5551078967ebe0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/11865b2b43e0e8255f2221cccc5551078967ebe0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/11865b2b43e0e8255f2221cccc5551078967ebe0/comments","author":null,"committer":null,"parents":[{"sha":"aa5f89a3b9e02db8f5bcb75c924923e790ed7f48","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/aa5f89a3b9e02db8f5bcb75c924923e790ed7f48","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/aa5f89a3b9e02db8f5bcb75c924923e790ed7f48"}],"stats":{"total":182,"additions":76,"deletions":106},"files":[{"sha":"4c5cb037a7892fbe81d0be8e5566cabd1333fb35","filename":"core/src/main/java/org/syncope/core/persistence/beans/AttributeSchema.java","status":"modified","additions":20,"deletions":3,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAttributeSchema.java?ref=11865b2b43e0e8255f2221cccc5551078967ebe0","patch":"@@ -14,17 +14,19 @@\n  */\n package org.syncope.core.persistence.beans;\n \n-import java.lang.reflect.Constructor;\n import static javax.persistence.EnumType.STRING;\n \n+import java.lang.reflect.Constructor;\n import java.text.DecimalFormat;\n import java.text.Format;\n import java.text.SimpleDateFormat;\n+import java.util.HashSet;\n import java.util.Set;\n import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.Enumerated;\n import javax.persistence.Id;\n+import javax.persistence.ManyToMany;\n import javax.persistence.OneToMany;\n import javax.persistence.Transient;\n import org.syncope.core.persistence.AttributeType;\n@@ -44,16 +46,21 @@ public class AttributeSchema extends AbstractBaseBean {\n     private Boolean multivalue;\n     private String conversionPattern;\n     private String validatorClass;\n+    @Transient\n+    private AttributeValidator validator;\n     @OneToMany(mappedBy = \"schema\")\n     @org.hibernate.annotations.Cascade(org.hibernate.annotations.CascadeType.DELETE_ORPHAN)\n     private Set<Attribute> attributes;\n-    @Transient\n-    private AttributeValidator validator;\n+    @ManyToMany(mappedBy = \"attributeSchemas\")\n+    private Set<DerivedAttributeSchema> derivedAttributeSchemas;\n \n     public AttributeSchema() {\n         type = AttributeType.String;\n         mandatory = false;\n         multivalue = false;\n+\n+        attributes = new HashSet<Attribute>();\n+        derivedAttributeSchemas = new HashSet<DerivedAttributeSchema>();\n     }\n \n     public String getName() {\n@@ -164,6 +171,16 @@ public void setAttributes(Set<Attribute> attributes) {\n         this.attributes = attributes;\n     }\n \n+    public Set<DerivedAttributeSchema> getDerivedAttributeSchemas() {\n+        return derivedAttributeSchemas;\n+    }\n+\n+    public void setDerivedAttributeSchemas(\n+            Set<DerivedAttributeSchema> derivedAttributeSchemas) {\n+\n+        this.derivedAttributeSchemas = derivedAttributeSchemas;\n+    }\n+\n     public <T extends Format> T getFormatter(Class<T> reference) {\n         T result = null;\n "},{"sha":"e5377f7c565b2dcc8453a4708f6cdec46ca045dd","filename":"core/src/main/java/org/syncope/core/persistence/beans/DerivedAttribute.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttribute.java?ref=11865b2b43e0e8255f2221cccc5551078967ebe0","patch":"@@ -61,10 +61,14 @@ public String getValue(Set<Attribute> attributes) {\n         AttributeValue attributeValue = null;\n         for (Attribute attribute : attributes) {\n             attributeValues = attribute.getValues();\n-            if (attributeValues.isEmpty()) {\n+            if (attributeValues.isEmpty()\n+                    || !schema.getAttributeSchemas().contains(\n+                    attribute.getSchema())) {\n+\n                 expressionValue = \"\";\n             } else {\n                 attributeValue = attributeValues.iterator().next();\n+\n                 switch (attribute.getSchema().getType()) {\n                     case Boolean:\n                         expressionValue ="},{"sha":"ffb61088c0ee4ecf80524641de2797160c81ae7a","filename":"core/src/main/java/org/syncope/core/persistence/beans/DerivedAttributeSchema.java","status":"modified","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttributeSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttributeSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FDerivedAttributeSchema.java?ref=11865b2b43e0e8255f2221cccc5551078967ebe0","patch":"@@ -14,15 +14,24 @@\n  */\n package org.syncope.core.persistence.beans;\n \n+import java.util.HashSet;\n+import java.util.Set;\n import javax.persistence.Entity;\n import javax.persistence.Id;\n+import javax.persistence.ManyToMany;\n \n @Entity\n public class DerivedAttributeSchema extends AbstractBaseBean {\n \n     @Id\n     private String name;\n     private String expression;\n+    @ManyToMany\n+    private Set<AttributeSchema> attributeSchemas;\n+\n+    public DerivedAttributeSchema() {\n+        attributeSchemas = new HashSet<AttributeSchema>();\n+    }\n \n     public String getName() {\n         return name;\n@@ -40,6 +49,22 @@ public void setExpression(String expression) {\n         this.expression = expression;\n     }\n \n+    public boolean addAttributeSchema(AttributeSchema attributeSchema) {\n+        return attributeSchemas.add(attributeSchema);\n+    }\n+\n+    public boolean removeAttributeSchema(AttributeSchema attributeSchema) {\n+        return attributeSchemas.remove(attributeSchema);\n+    }\n+\n+    public Set<AttributeSchema> getAttributeSchemas() {\n+        return attributeSchemas;\n+    }\n+\n+    public void setAttributeSchemas(Set<AttributeSchema> attributeSchemas) {\n+        this.attributeSchemas = attributeSchemas;\n+    }\n+\n     @Override\n     public boolean equals(Object obj) {\n         if (obj == null) {"},{"sha":"0c26c53b7463807f72154dcfcc6f8eefb277d7ba","filename":"core/src/main/java/org/syncope/core/persistence/dao/impl/AttributeDAOImpl.java","status":"modified","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAttributeDAOImpl.java?ref=11865b2b43e0e8255f2221cccc5551078967ebe0","patch":"@@ -16,25 +16,15 @@\n \n import java.util.List;\n import javax.persistence.Query;\n-import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.Attribute;\n-import org.syncope.core.persistence.beans.SyncopeRole;\n-import org.syncope.core.persistence.beans.SyncopeUser;\n import org.syncope.core.persistence.dao.AttributeDAO;\n-import org.syncope.core.persistence.dao.SyncopeRoleDAO;\n-import org.syncope.core.persistence.dao.SyncopeUserDAO;\n \n @Repository\n public class AttributeDAOImpl extends AbstractDAOImpl\n         implements AttributeDAO {\n \n-    @Autowired\n-    SyncopeUserDAO syncopeUserDAO;\n-    @Autowired\n-    SyncopeRoleDAO syncopeRoleDAO;\n-\n     @Override\n     public Attribute find(long id) {\n         Attribute result = entityManager.find(Attribute.class, id);\n@@ -68,28 +58,6 @@ public void delete(long id) {\n             return;\n         }\n \n-        Query query = entityManager.createQuery(\n-                \"SELECT u FROM SyncopeUser u WHERE \"\n-                + \":attribute MEMBER OF u.attributes\");\n-        query.setParameter(\"attribute\", attribute);\n-        List<SyncopeUser> users = query.getResultList();\n-        for (SyncopeUser user : users) {\n-            user.removeAttribute(attribute);\n-            syncopeUserDAO.save(user);\n-        }\n-\n-        if (!isDeletedOrNotManaged(attribute)) {\n-            query = entityManager.createQuery(\n-                    \"SELECT r FROM SyncopeRole r WHERE \"\n-                    + \":attribute MEMBER OF r.attributes\");\n-            query.setParameter(\"attribute\", attribute);\n-            List<SyncopeRole> roles = query.getResultList();\n-            for (SyncopeRole role : roles) {\n-                role.removeAttribute(attribute);\n-                syncopeRoleDAO.save(role);\n-            }\n-        }\n-\n         entityManager.remove(attribute);\n     }\n }"},{"sha":"96238a0f1eb60fdc800664e5b1c44bac3445e0fc","filename":"core/src/test/java/org/syncope/core/persistence/test/AttributeDAOTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAttributeDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAttributeDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAttributeDAOTest.java?ref=11865b2b43e0e8255f2221cccc5551078967ebe0","patch":"@@ -99,7 +99,7 @@ public final void save() throws ClassNotFoundException {\n     }\n \n     @Test\n-    public final void deleteAndRelationships() {\n+    public final void delete() {\n         Attribute attribute = attributeDAO.find(200L);\n         String attributeSchemaName =\n                 attribute.getSchema().getName();"},{"sha":"9aefec58203b14810065b217053e37804eac8779","filename":"core/src/test/java/org/syncope/core/persistence/test/AttributeSchemaDAOTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAttributeSchemaDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAttributeSchemaDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FAttributeSchemaDAOTest.java?ref=11865b2b43e0e8255f2221cccc5551078967ebe0","patch":"@@ -63,7 +63,7 @@ public final void save() {\n     }\n \n     @Test\n-    public final void deleteAndRelationships() {\n+    public final void delete() {\n         AttributeSchema schema =\n                 attributeSchemaDAO.find(\"username\");\n "},{"sha":"fe3f393cf90e7ac2098f9a71ee6d06cde8216d3b","filename":"core/src/test/java/org/syncope/core/persistence/test/DerivedAttributeDAOTest.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeDAOTest.java?ref=11865b2b43e0e8255f2221cccc5551078967ebe0","patch":"@@ -24,6 +24,7 @@\n import org.syncope.core.persistence.beans.AttributeValueAsString;\n import org.syncope.core.persistence.beans.DerivedAttribute;\n import org.syncope.core.persistence.beans.DerivedAttributeSchema;\n+import org.syncope.core.persistence.dao.AttributeSchemaDAO;\n import org.syncope.core.persistence.dao.SyncopeUserDAO;\n import org.syncope.core.persistence.dao.DerivedAttributeDAO;\n import org.syncope.core.persistence.dao.DerivedAttributeSchemaDAO;\n@@ -37,6 +38,8 @@ public class DerivedAttributeDAOTest extends AbstractDAOTest {\n     SyncopeUserDAO syncopeUserDAO;\n     @Autowired\n     DerivedAttributeSchemaDAO derivedAttributeSchemaDAO;\n+    @Autowired\n+    AttributeSchemaDAO attributeSchemaDAO;\n \n     @Test\n     public final void findAll() {\n@@ -58,6 +61,10 @@ public final void save() throws ClassNotFoundException {\n                 new DerivedAttributeSchema();\n         derivedAttributeSchema.setName(\"cn2\");\n         derivedAttributeSchema.setExpression(\"firstname + \\\" \\\" + surname\");\n+        derivedAttributeSchema.addAttributeSchema(\n+                attributeSchemaDAO.find(\"firstname\"));\n+        derivedAttributeSchema.addAttributeSchema(\n+                attributeSchemaDAO.find(\"surname\"));\n \n         derivedAttributeSchemaDAO.save(derivedAttributeSchema);\n \n@@ -92,7 +99,7 @@ public final void save() throws ClassNotFoundException {\n     }\n \n     @Test\n-    public final void deleteAndRelationships() {\n+    public final void delete() {\n         DerivedAttribute attribute = derivedAttributeDAO.find(1000L);\n         String attributeSchemaName =\n                 attribute.getSchema().getName();\n@@ -104,7 +111,8 @@ public final void deleteAndRelationships() {\n \n         DerivedAttributeSchema attributeSchema =\n                 derivedAttributeSchemaDAO.find(attributeSchemaName);\n-        assertNotNull(\"user derived attribute schema deleted when deleting values\",\n+        assertNotNull(\"user derived attribute schema deleted \"\n+                + \"when deleting values\",\n                 attributeSchema);\n     }\n }"},{"sha":"8ed17782ab545a7249f596e76b6b154e63c3d61e","filename":"core/src/test/java/org/syncope/core/persistence/test/DerivedAttributeSchemaDAOTest.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeSchemaDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeSchemaDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FDerivedAttributeSchemaDAOTest.java?ref=11865b2b43e0e8255f2221cccc5551078967ebe0","patch":"@@ -21,13 +21,16 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.transaction.annotation.Transactional;\n import org.syncope.core.persistence.beans.DerivedAttributeSchema;\n+import org.syncope.core.persistence.dao.AttributeSchemaDAO;\n import org.syncope.core.persistence.dao.DerivedAttributeSchemaDAO;\n \n @Transactional\n public class DerivedAttributeSchemaDAOTest extends AbstractDAOTest {\n \n     @Autowired\n     DerivedAttributeSchemaDAO derivedAttributeSchemaDAO;\n+    @Autowired\n+    AttributeSchemaDAO attributeSchemaDAO;\n \n     @Test\n     public final void findAll() {\n@@ -50,7 +53,11 @@ public final void save() {\n         DerivedAttributeSchema derivedAttributeSchema =\n                 new DerivedAttributeSchema();\n         derivedAttributeSchema.setName(\"cn2\");\n-        derivedAttributeSchema.setExpression(\"name surname\");\n+        derivedAttributeSchema.setExpression(\"firstname surname\");\n+        derivedAttributeSchema.addAttributeSchema(\n+                attributeSchemaDAO.find(\"firstname\"));\n+        derivedAttributeSchema.addAttributeSchema(\n+                attributeSchemaDAO.find(\"surname\"));\n \n         derivedAttributeSchemaDAO.save(derivedAttributeSchema);\n "},{"sha":"666f244a017eeb2b240008aad486f9b560617225","filename":"core/src/test/java/org/syncope/core/persistence/test/EntitlementDAOTest.java","status":"modified","additions":0,"deletions":8,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FEntitlementDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FEntitlementDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FEntitlementDAOTest.java?ref=11865b2b43e0e8255f2221cccc5551078967ebe0","patch":"@@ -62,14 +62,6 @@ public final void save() {\n \n     @Test\n     public final void delete() {\n-        entitlementDAO.delete(\"advanced\");\n-\n-        Entitlement actual = entitlementDAO.find(\"advanced\");\n-        assertNull(\"delete did not work\", actual);\n-    }\n-\n-    @Test\n-    public final void relationships() {\n         Entitlement entitlement = entitlementDAO.find(\"base\");\n         assertNotNull(\"did not find expected entitlement\",\n                 entitlement);"},{"sha":"f895cbf598a7af98b5ad1778023cc9ded0359ae9","filename":"core/src/test/java/org/syncope/core/persistence/test/SyncopeRoleDAOTest.java","status":"modified","additions":0,"deletions":34,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeRoleDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeRoleDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeRoleDAOTest.java?ref=11865b2b43e0e8255f2221cccc5551078967ebe0","patch":"@@ -81,38 +81,4 @@ public final void delete() {\n         assertNull(\"delete of successors did not work\", children);\n \n     }\n-\n-    @Test\n-    public final void relationships() {\n-        SyncopeRole rootRole = syncopeRoleDAO.find(\"root\", null);\n-        Set<Attribute> attributes = rootRole.getAttributes();\n-        int originalAttributesSize = attributes.size();\n-        Attribute attribute = attributes.iterator().next();\n-\n-        // Remove an attribute from its table: we expect not to find it\n-        // associated with the user\n-        attributeDAO.delete(attribute.getId());\n-        assertNull(attributeDAO.find(attribute.getId()));\n-        assertEquals(\"unexpected number of attributes\",\n-                originalAttributesSize - 1, rootRole.getAttributes().size());\n-\n-        // Remove an attribute association with a user: we expect not to\n-        // have it on the db table as well\n-        attribute = rootRole.getAttributes().iterator().next();\n-        rootRole.removeAttribute(attribute);\n-        syncopeRoleDAO.save(rootRole);\n-        assertNull(attributeDAO.find(attribute.getId()));\n-\n-        // Remove an entitlement: we expect that all the owning roles\n-        // are updated as well\n-        Entitlement entitlement = entitlementDAO.find(\"base\");\n-        assertNotNull(\"did not find expected entitlement\",\n-                entitlement);\n-\n-        Set<SyncopeRole> roles = entitlement.getRoles();\n-        entitlementDAO.delete(\"base\");\n-        for (SyncopeRole role : roles) {\n-            assertFalse(role.getEntitlements().contains(entitlement));\n-        }\n-    }\n }"},{"sha":"50f7c60451ca9f6822e7807e28dc64eb307012ab","filename":"core/src/test/java/org/syncope/core/persistence/test/SyncopeUserDAOTest.java","status":"modified","additions":0,"deletions":22,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeUserDAOTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeUserDAOTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Ftest%2FSyncopeUserDAOTest.java?ref=11865b2b43e0e8255f2221cccc5551078967ebe0","patch":"@@ -76,26 +76,4 @@ public final void delete() {\n         SyncopeUser actual = syncopeUserDAO.find(3L);\n         assertNull(\"delete did not work\", actual);\n     }\n-\n-    @Test\n-    public final void relationships() {\n-        SyncopeUser user = syncopeUserDAO.find(1L);\n-        Set<Attribute> attributes = user.getAttributes();\n-        int originalAttributesSize = attributes.size();\n-        Attribute attribute = attributes.iterator().next();\n-\n-        // Remove an attribute from its table: we expect not to find it\n-        // associated with the user\n-        attributeDAO.delete(attribute.getId());\n-        assertNull(attributeDAO.find(attribute.getId()));\n-        assertEquals(\"unexpected number of attributes\",\n-                originalAttributesSize - 1, user.getAttributes().size());\n-\n-        // Remove an attribute association with a user: we expect not to\n-        // have it on the db table as well\n-        attribute = user.getAttributes().iterator().next();\n-        user.removeAttribute(attribute);\n-        syncopeUserDAO.save(user);\n-        assertNull(attributeDAO.find(attribute.getId()));\n-    }\n }"},{"sha":"aa3fc72159e0911be37274782e71e6e7dbdcfaef","filename":"core/src/test/resources/dbunitTestData.xml","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Ftest%2Fresources%2FdbunitTestData.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/11865b2b43e0e8255f2221cccc5551078967ebe0/core%2Fsrc%2Ftest%2Fresources%2FdbunitTestData.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2FdbunitTestData.xml?ref=11865b2b43e0e8255f2221cccc5551078967ebe0","patch":"@@ -88,7 +88,12 @@\n                            attributes_id=\"700\"/>\n \n     <DerivedAttributeSchema name=\"cn\" expression=\"surname + ', ' + firstname\"/>\n-\n+    \n+    <DerivedAttributeSchema_AttributeSchema derivedAttributeSchemas_name=\"cn\"\n+                                            attributeSchemas_name=\"surname\" />\n+    <DerivedAttributeSchema_AttributeSchema derivedAttributeSchemas_name=\"cn\"\n+                                            attributeSchemas_name=\"firstname\" />\n+                                            \n     <DerivedAttribute id=\"1000\" schema_name=\"cn\"/>\n \n     <SyncopeUser_DerivedAttribute SyncopeUser_id=\"3\""}]}