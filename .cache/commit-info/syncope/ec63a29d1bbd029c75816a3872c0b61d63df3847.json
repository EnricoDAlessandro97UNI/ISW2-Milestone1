{"sha":"ec63a29d1bbd029c75816a3872c0b61d63df3847","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmVjNjNhMjlkMWJiZDAyOWM3NTgxNmEzODcyYzBiNjFkNjNkZjM4NDc=","commit":{"author":{"name":"skylark17","email":"matteo.alessandroni@tirasa.net","date":"2018-03-29T11:57:24Z"},"committer":{"name":"skylark17","email":"matteo.alessandroni@tirasa.net","date":"2018-03-29T12:59:13Z"},"message":"[SYNCOPE-1148] Added new option for SAML extension - SAML-initiated self-registration","tree":{"sha":"8e50b51840da73d850fcecad31caa967f65e0d31","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8e50b51840da73d850fcecad31caa967f65e0d31"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ec63a29d1bbd029c75816a3872c0b61d63df3847","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ec63a29d1bbd029c75816a3872c0b61d63df3847","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ec63a29d1bbd029c75816a3872c0b61d63df3847","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ec63a29d1bbd029c75816a3872c0b61d63df3847/comments","author":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"committer":{"login":"mat-ale","id":25547301,"node_id":"MDQ6VXNlcjI1NTQ3MzAx","avatar_url":"https://avatars.githubusercontent.com/u/25547301?v=4","gravatar_id":"","url":"https://api.github.com/users/mat-ale","html_url":"https://github.com/mat-ale","followers_url":"https://api.github.com/users/mat-ale/followers","following_url":"https://api.github.com/users/mat-ale/following{/other_user}","gists_url":"https://api.github.com/users/mat-ale/gists{/gist_id}","starred_url":"https://api.github.com/users/mat-ale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mat-ale/subscriptions","organizations_url":"https://api.github.com/users/mat-ale/orgs","repos_url":"https://api.github.com/users/mat-ale/repos","events_url":"https://api.github.com/users/mat-ale/events{/privacy}","received_events_url":"https://api.github.com/users/mat-ale/received_events","type":"User","site_admin":false},"parents":[{"sha":"51b314fe514695a79b3f0e39e8b1f06dd49dbebc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/51b314fe514695a79b3f0e39e8b1f06dd49dbebc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/51b314fe514695a79b3f0e39e8b1f06dd49dbebc"}],"stats":{"total":441,"additions":418,"deletions":23},"files":[{"sha":"e2efccdc924573a6e4a81f2eae164691b173fa73","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wicket/markup/html/form/AjaxCheckBoxPanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.html?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -23,7 +23,7 @@\n   <body>\n     <wicket:extend>\n       <div class=\"checkbox\">\n-        <label  style=\"width:100%\">\n+        <label style=\"width:100%\">\n           <input type=\"checkbox\" wicket:id=\"checkboxField\" />\n           <wicket:enclosure child=\"field-label\">\n             <label wicket:id=\"field-label\">[LABEL]</label><span wicket:id=\"required\"/>"},{"sha":"1e7822226d46830383f1b1782194f35ca0263185","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/pages/HomePage.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FHomePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FHomePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FHomePage.java?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -38,6 +38,8 @@ public HomePage(final PageParameters parameters) {\n         } else if (!parameters.get(\"successMessage\").isNull()) {\n             redirectUrl.append(\"#!self?successMessage=\");\n             appendMessage(redirectUrl, parameters.get(\"successMessage\").toString());\n+        } else if (!parameters.get(\"saml2SPUserAttrs\").isNull()) {\n+            redirectUrl.append(\"#!self-saml2sp\");\n         }\n         throw new NonResettingRestartException(redirectUrl.toString());\n     }"},{"sha":"721abf70fbf2ff11209d6a25a69197d8d73c9fa5","filename":"client/enduser/src/main/resources/META-INF/resources/app/css/app.css","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fcss%2Fapp.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fcss%2Fapp.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fcss%2Fapp.css?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -72,10 +72,10 @@ under the License.\n   z-index : 10001;\n }\n \n-treasure-overlay-spinner.treasure-overlay-spinner-active .treasure-overlay-spinner-content {\n+treasure-overlay-spinner .treasure-overlay-spinner-content {\n   height: 100%;\n }\n-treasure-overlay-spinner.treasure-overlay-spinner-active {\n+treasure-overlay-spinner {\n   height: 100%;\n   top: 0;\n   bottom: 0;"},{"sha":"cd4542a9f8c61481c9b5a679ec7db221f0351aa6","filename":"client/enduser/src/main/resources/META-INF/resources/app/index.html","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Findex.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Findex.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Findex.html?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -100,9 +100,11 @@\n   <script src=\"js/services/groupService.js\"></script>\n   <script src=\"js/services/anyService.js\"></script>\n   <script src=\"js/services/saml2IdPService.js\"></script>\n+  <script src=\"js/services/saml2SPService.js\"></script>\n   <!--controllers-->\n   <script src=\"js/controllers/HomeController.js\"></script>\n   <script src=\"js/controllers/LoginController.js\"></script>\n+  <script src=\"js/controllers/SAML2SPController.js\"></script>\n   <script src=\"js/controllers/UserController.js\"></script>\n   <!--directives-->\n   <script src=\"js/directives/dynamicPlainAttribute.js\"></script>"},{"sha":"3ae4f9d1fd66126e4f7e0ca69cafda4ee6157a76","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/app.js","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fapp.js?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -73,6 +73,19 @@ app.config(['$stateProvider', '$urlRouterProvider', '$httpProvider', '$translate\n               url: '/self?errorMessage',\n               templateUrl: 'views/self.html'\n             })\n+            /* <Extensions> */\n+            .state('self-saml2sp', {\n+              url: '/self-saml2sp',\n+              templateUrl: 'views/self.html',\n+              controller: 'SAML2SPController',\n+              resolve: {\n+                'userAttrs': ['SAML2SPService',\n+                  function (SAML2SPService) {\n+                    return SAML2SPService.getSAML2SPUserAttrs();\n+                  }]\n+              }\n+            })\n+            /* </Extensions> */\n             .state('user-self-update', {\n               url: '/user-self-update',\n               templateUrl: 'views/home.html',"},{"sha":"b58aced7344a06de6db8a501154bce00cfd6cdd5","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/controllers/LoginController.js","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FLoginController.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FLoginController.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FLoginController.js?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -61,12 +61,15 @@ angular.module(\"login\").controller(\"LoginController\", ['$scope', '$rootScope', '\n         console.error(\"error retrieving user login status\", response);\n       });\n     };\n+\n     $scope.selfCreate = function () {\n       $location.path(\"/self/create\");\n     };\n+\n     $scope.passwordReset = function () {\n       $location.path(\"/passwordreset\");\n     };\n+\n     $scope.$watch(function () {\n       return $location.search().successMessage;\n     }, function (successMessage) {\n@@ -76,6 +79,7 @@ angular.module(\"login\").controller(\"LoginController\", ['$scope', '$rootScope', '\n         delete $location.$$search.successMessage;\n       }\n     });\n+\n     $scope.$watch(function () {\n       return $location.search().errorMessage;\n     }, function (errorMessage) {"},{"sha":"05adf188dcadaf6b38f0339b3af5750e9e5ccd01","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/controllers/SAML2SPController.js","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FSAML2SPController.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FSAML2SPController.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FSAML2SPController.js?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -0,0 +1,29 @@\n+/* \n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+'use strict';\n+angular.module(\"login\").controller(\"SAML2SPController\", function ($scope, $rootScope, $location, userAttrs) {\n+  $scope.selfCreate = function () {\n+    $location.path(\"/self/create\");\n+  };\n+\n+  $rootScope.saml2idps.userAttrs = userAttrs;\n+\n+  $scope.selfCreate();\n+});"},{"sha":"d2380f13044e5fa0e1dce68f4d881a655e3d366a","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/controllers/UserController.js","status":"modified","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fcontrollers%2FUserController.js?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -43,6 +43,10 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n       value: \"\"\n     };\n \n+    /* <Extensions> */\n+    $scope.loadFromSAML2AuthSelfReg = $rootScope.saml2idps.userAttrs && $rootScope.saml2idps.userAttrs.length;\n+    /* </Extensions> */\n+\n     $scope.initUser = function () {\n       $scope.dynamicForm = {\n         plainSchemas: [],\n@@ -61,6 +65,12 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         groupSchemas: ['own']\n       };\n \n+      var findLoadedSAML2AttrValue = function (schemaKey) {\n+        var found = $filter('filter')($rootScope.saml2idps.userAttrs, {\"schema\": schemaKey}, true);\n+        return (found && found.length && found[0].values && found[0].values.length)\n+                ? found[0].values : [];\n+      };\n+\n       var initUserSchemas = function (anyTypeClass, group) {\n         // initialization is done here synchronously to have all schema fields populated correctly\n         var schemaService;\n@@ -113,6 +123,11 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n               schema: plainSchemaKey,\n               values: initialAttributeValues\n             };\n+\n+            if ($scope.loadFromSAML2AuthSelfReg) {\n+              $scope.user.plainAttrs[plainSchemaKey].values = findLoadedSAML2AttrValue(plainSchemaKey);\n+            }\n+\n             if (schemas.plainSchemas[i].multivalue) {\n               // initialize multivalue schema and support table: create mode, default multivalues\n               if (initialAttributeValues.length > 0) {\n@@ -162,6 +177,11 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n               schema: virSchemaKey,\n               values: []\n             };\n+\n+            if ($scope.loadFromSAML2AuthSelfReg) {\n+              $scope.user.virAttrs[virSchemaKey].values = findLoadedSAML2AttrValue(virSchemaKey);\n+            }\n+\n             // initialize multivalue attribute and support table: create mode, only first value\n             $scope.dynamicForm.virtualAttributeTable[schemas.virSchemas[i].key] = {\n               fields: [schemas.virSchemas[i].key + \"_\" + 0]\n@@ -182,6 +202,9 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n         $scope.dynamicForm.plainSchemas = $scope.dynamicForm.plainSchemas.concat(schemas.plainSchemas);\n         $scope.dynamicForm.derSchemas = $scope.dynamicForm.derSchemas.concat(schemas.derSchemas);\n         $scope.dynamicForm.virSchemas = $scope.dynamicForm.virSchemas.concat(schemas.virSchemas);\n+\n+        //clean SAML Self Reg user attributes variable\n+        delete $rootScope.saml2idps.userAttrs;\n       };\n \n       var initSecurityQuestions = function () {\n@@ -421,6 +444,13 @@ angular.module(\"self\").controller(\"UserController\", ['$scope', '$rootScope', '$l\n           initUserSchemas(null, $scope.dynamicForm.selectedGroups[index]);\n         }\n         initProperties();\n+\n+        if ($scope.loadFromSAML2AuthSelfReg) {\n+          var username = findLoadedSAML2AttrValue(\"username\");\n+          if (username.length) {\n+            $scope.user.username = username[0];\n+          }\n+        }\n       } else {\n         // read user from syncope core\n         readUser();"},{"sha":"7db0056b75428455619afd6cc23c0f0664dd0dc2","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/services/saml2IdPService.js","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2Fsaml2IdPService.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2Fsaml2IdPService.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2Fsaml2IdPService.js?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -30,7 +30,8 @@ angular.module('self')\n                       .then(function (response) {\n                         return response.data;\n                       }, function (response) {\n-                        console.error(\"Something went wrong during saml2Idp extesion retrieval, exit with status: \", response);\n+                        console.error(\"Something went wrong during saml2Idp extension retrieval, exit with status: \",\n+                                response);\n                         return $q.reject(response.data || response.statusText);\n                       });\n             };"},{"sha":"85ac6a0987069f7e826a82034a7ec8590175c208","filename":"client/enduser/src/main/resources/META-INF/resources/app/js/services/saml2SPService.js","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2Fsaml2SPService.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2Fsaml2SPService.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fjs%2Fservices%2Fsaml2SPService.js?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -0,0 +1,42 @@\n+/* \n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+'use strict';\n+\n+angular.module('self')\n+        .factory('SAML2SPService', ['$q', '$http',\n+          function ($q, $http) {\n+\n+            var saml2SPService = {};\n+\n+            saml2SPService.getSAML2SPUserAttrs = function () {\n+              return $http.get(\"../api/saml2SPs/userAttrs\")\n+                      .then(function (response) {\n+                        return response.data;\n+                      }, function (response) {\n+                        console.error(\"Something went wrong while getting saml2 user attributes, exit with status: \",\n+                                response);\n+                        return $q.reject(response.data || response.statusText);\n+                      });\n+            };\n+\n+            return saml2SPService;\n+          }]);\n+\n+"},{"sha":"1cc279e7e71e117295f414c630a675ef7a36f3ef","filename":"client/enduser/src/main/resources/META-INF/resources/app/views/self.html","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fself.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fself.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fapp%2Fviews%2Fself.html?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -35,11 +35,13 @@\n             <form id=\"login-form\" class=\"form form-signin\" novalidate>\n               <fieldset class=\"form-group input-group\">\n                 <div class=\"form-group\">\n-                  <input autofocus=\"autofocus\" type=\"text\" class=\"form-control\" id=\"login-username\" placeholder=\"{{'USERNAME_PLACEHOLDER'| translate}}\"\n+                  <input autofocus=\"autofocus\" type=\"text\" class=\"form-control\" id=\"login-username\" \n+                         placeholder=\"{{'USERNAME_PLACEHOLDER'| translate}}\"\n                          ng-required ng-model=\"credentials.username\">\n                 </div>\n                 <div class=\"form-group\">\n-                  <input type=\"password\" class=\"form-control\" id=\"login-password\" placeholder=\"{{'PASSWORD_PLACEHOLDER'| translate}}\" \n+                  <input type=\"password\" class=\"form-control\" id=\"login-password\" \n+                         placeholder=\"{{'PASSWORD_PLACEHOLDER'| translate}}\" \n                          ng-required ng-model=\"credentials.password\">\n                 </div>\n                 <div class=\"form-group\" ng-controller=\"UserController\">"},{"sha":"aae650be2d9a5f10c991e954ceaf87e62a453864","filename":"ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/AssertionConsumer.java","status":"modified","additions":31,"deletions":7,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FAssertionConsumer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FAssertionConsumer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FAssertionConsumer.java?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.syncope.ext.saml2lsp.agent;\n \n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n import java.io.IOException;\n import java.net.URLEncoder;\n import java.nio.charset.StandardCharsets;\n@@ -27,6 +29,7 @@\n import javax.servlet.http.HttpServletResponse;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.SAML2LoginResponseTO;\n import org.apache.syncope.common.rest.api.service.SAML2SPService;\n \n@@ -35,6 +38,9 @@ public class AssertionConsumer extends AbstractSAML2SPServlet {\n \n     private static final long serialVersionUID = 968480296813639041L;\n \n+    private static final ObjectMapper MAPPER =\n+            new ObjectMapper().setSerializationInclusion(JsonInclude.Include.NON_EMPTY);\n+\n     @Override\n     protected void doPost(final HttpServletRequest request, final HttpServletResponse response)\n             throws ServletException, IOException {\n@@ -49,15 +55,33 @@ protected void doPost(final HttpServletRequest request, final HttpServletRespons\n                             request.getRemoteAddr(),\n                             request.getInputStream()));\n \n-            request.getSession(true).setAttribute(Constants.SAML2SPJWT, responseTO.getAccessToken());\n-            request.getSession(true).setAttribute(Constants.SAML2SPJWT_EXPIRE, responseTO.getAccessTokenExpiryTime());\n+            if (responseTO.isSelfReg()) {\n+                responseTO.getAttrs().add(\n+                        new AttrTO.Builder().schema(\"username\").values(responseTO.getUsername()).build());\n+                request.getSession(true).\n+                        setAttribute(Constants.SAML2SP_USER_ATTRS, MAPPER.writeValueAsString(responseTO.getAttrs()));\n \n-            String successURL = getServletContext().getInitParameter(Constants.CONTEXT_PARAM_LOGIN_SUCCESS_URL);\n-            if (successURL == null) {\n-                request.setAttribute(\"responseTO\", responseTO);\n-                request.getRequestDispatcher(\"loginSuccess.jsp\").forward(request, response);\n+                String selfRegRedirectURL =\n+                        getServletContext().getInitParameter(Constants.CONTEXT_PARAM_REDIRECT_SELFREG_URL);\n+                if (selfRegRedirectURL == null) {\n+                    request.setAttribute(\"responseTO\", responseTO);\n+                    request.getRequestDispatcher(\"loginSuccess.jsp\").forward(request, response);\n+                } else {\n+                    response.sendRedirect(selfRegRedirectURL);\n+                }\n             } else {\n-                response.sendRedirect(successURL + \"?sloSupported=\" + responseTO.isSloSupported());\n+                request.getSession(true).\n+                        setAttribute(Constants.SAML2SPJWT, responseTO.getAccessToken());\n+                request.getSession(true).\n+                        setAttribute(Constants.SAML2SPJWT_EXPIRE, responseTO.getAccessTokenExpiryTime());\n+\n+                String successURL = getServletContext().getInitParameter(Constants.CONTEXT_PARAM_LOGIN_SUCCESS_URL);\n+                if (successURL == null) {\n+                    request.setAttribute(\"responseTO\", responseTO);\n+                    request.getRequestDispatcher(\"loginSuccess.jsp\").forward(request, response);\n+                } else {\n+                    response.sendRedirect(successURL + \"?sloSupported=\" + responseTO.isSloSupported());\n+                }\n             }\n         } catch (Exception e) {\n             LOG.error(\"While processing authentication response from IdP\", e);"},{"sha":"c02c582bb843e2d70b3b97e21016b937d712a8ad","filename":"ext/saml2sp/agent/src/main/java/org/apache/syncope/ext/saml2lsp/agent/Constants.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fagent%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fsaml2lsp%2Fagent%2FConstants.java?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -34,10 +34,14 @@ public final class Constants {\n \n     public static final String CONTEXT_PARAM_LOGOUT_ERROR_URL = \"saml2sp.logout.error.url\";\n \n+    public static final String CONTEXT_PARAM_REDIRECT_SELFREG_URL = \"saml2sp.redirect.selfreg\";\n+\n     public static final String SAML2SPJWT = \"saml2sp.jwt\";\n \n     public static final String SAML2SPJWT_EXPIRE = \"saml2sp.jwt.expire\";\n \n+    public static final String SAML2SP_USER_ATTRS = \"saml2sp.userattrs\";\n+\n     private Constants() {\n         // private constructor for static utility class\n     }"},{"sha":"c7633e821204142ade152b593d048631c49f74fd","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/pages/SAML2SPSelfReg.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SPSelfReg.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SPSelfReg.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSAML2SPSelfReg.java?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+\n+public class SAML2SPSelfReg extends WebPage {\n+\n+    private static final long serialVersionUID = -4330637558823990359L;\n+\n+    private static final String SAML_ACCESS_ERROR = \n+            \"SAML 2.0 error - Admin Console does not support Self Registration\";\n+\n+    public SAML2SPSelfReg(final PageParameters parameters) {\n+        super(parameters);\n+\n+        PageParameters params = new PageParameters();\n+        params.add(\"errorMessage\", SAML_ACCESS_ERROR);\n+        setResponsePage(Login.class, params);\n+    }\n+}"},{"sha":"ebc77065559f8b82f384c6ba6d67f390186225a8","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/wizards/SAML2IdPWizardBuilder.java","status":"modified","additions":9,"deletions":5,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -109,6 +109,10 @@ private final class IdP extends WizardStep {\n                     \"field\", \"createUnmatching\", new PropertyModel<>(idpTO, \"createUnmatching\"), false);\n             fields.add(createUnmatching);\n \n+            AjaxCheckBoxPanel selfRegUnmatching = new AjaxCheckBoxPanel(\n+                    \"field\", \"selfRegUnmatching\", new PropertyModel<Boolean>(idpTO, \"selfRegUnmatching\"), false);\n+            fields.add(selfRegUnmatching);\n+\n             AjaxCheckBoxPanel updateMatching = new AjaxCheckBoxPanel(\n                     \"field\", \"updateMatching\", new PropertyModel<>(idpTO, \"updateMatching\"), false);\n             fields.add(updateMatching);\n@@ -127,14 +131,14 @@ private final class IdP extends WizardStep {\n             bindingType.setChoices(Arrays.asList(SAML2BindingType.values()));\n             fields.add(bindingType);\n \n-            AjaxPalettePanel<String> actionsClassNames = new AjaxPalettePanel.Builder<String>().\n+            AjaxPalettePanel<String> actions = new AjaxPalettePanel.Builder<String>().\n                     setAllowMoveAll(true).setAllowOrder(true).\n-                    setName(new StringResourceModel(\"actionsClassNames\", directoryPanel).getString()).\n+                    setName(new StringResourceModel(\"actions\", directoryPanel).getString()).\n                     build(\"field\",\n-                            new PropertyModel<List<String>>(idpTO, \"actionsClassNames\"),\n+                            new PropertyModel<List<String>>(idpTO, \"actions\"),\n                             new ListModel<>(actionsClasses.getObject()));\n-            actionsClassNames.setOutputMarkupId(true);\n-            fields.add(actionsClassNames);\n+            actions.setOutputMarkupId(true);\n+            fields.add(actions);\n \n             add(new ListView<Component>(\"fields\", fields) {\n "},{"sha":"f9b8446b524b6b5170d74b0255fee7ab849d4776","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.properties?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -24,5 +24,6 @@ bindingType=Binding\n html.title=metadata\n createUnmatching=Create unmatching users\n updateMatching=Update matching users\n-actionsClassNames=Actions\n+actions=Actions\n template.title=user template\n+selfRegUnmatching=SAML-initiated self-registration"},{"sha":"955f6713c6ea2b1726689a1fc9e64e3de93824f6","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel_it.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_it.properties?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -24,5 +24,6 @@ bindingType=Binding\n html.title=metadata\n createUnmatching=Create unmatching users\n updateMatching=Update matching users\n-actionsClassNames=Azioni\n+actions=Azioni\n template.title=template utenti\n+selfRegUnmatching=SAML-initiated self-registration"},{"sha":"18ded609c9a9d999b685c93c9087c993571ceceb","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel_pt_BR.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_pt_BR.properties?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -24,5 +24,6 @@ bindingType=Binding\n html.title=metadata\n createUnmatching=Create unmatching users\n updateMatching=Update matching users\n-actionsClassNames=Actions\n+actions=Actions\n template.title=user template\n+selfRegUnmatching=SAML-initiated self-registration"},{"sha":"af158bd1890ff05290ce8d782044dd676a2a1a72","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel_ru.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_ru.properties?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -24,5 +24,6 @@ bindingType=Binding\n html.title=metadata\n createUnmatching=Create unmatching users\n updateMatching=Update matching users\n-actionsClassNames=\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f\n+actions=\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f\n template.title=user template\n+selfRegUnmatching=SAML-initiated self-registration"},{"sha":"d7d2b45dbe45308c24cf885b15a2ce735e9c6f90","filename":"ext/saml2sp/client-enduser/src/main/java/org/apache/syncope/client/enduser/pages/SAML2SPSelfReg.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSAML2SPSelfReg.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSAML2SPSelfReg.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fpages%2FSAML2SPSelfReg.java?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.pages;\n+\n+import org.apache.syncope.ext.saml2lsp.agent.Constants;\n+import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.protocol.http.servlet.ServletWebRequest;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class SAML2SPSelfReg extends WebPage {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(SAML2SPSelfReg.class);\n+\n+    private static final long serialVersionUID = -4330637558823990359L;\n+\n+    private static final String SAML_ACCESS_ERROR = \"SAML 2.0 error - while getting user attributes\";\n+\n+    public SAML2SPSelfReg(final PageParameters parameters) {\n+        super(parameters);\n+\n+        PageParameters params = new PageParameters();\n+        try {\n+            params.add(\"saml2SPUserAttrs\", ((ServletWebRequest) getRequest()).getContainerRequest().\n+                    getSession().getAttribute(Constants.SAML2SP_USER_ATTRS));\n+        } catch (Exception e) {\n+            LOG.error(\"While extracting user attributes\", e);\n+\n+            params.add(\"errorMessage\", SAML_ACCESS_ERROR);\n+        }\n+        setResponsePage(getApplication().getHomePage(), params);\n+    }\n+}"},{"sha":"9d6e6af7d5e8001e3e9474db34f9b00689b8454d","filename":"ext/saml2sp/client-enduser/src/main/java/org/apache/syncope/client/enduser/resources/SAML2SPUserAttrsResource.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSAML2SPUserAttrsResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSAML2SPUserAttrsResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-enduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSAML2SPUserAttrsResource.java?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.enduser.resources;\n+\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.client.enduser.annotations.Resource;\n+import org.apache.syncope.ext.saml2lsp.agent.Constants;\n+import org.apache.wicket.request.cycle.RequestCycle;\n+import org.apache.wicket.request.resource.AbstractResource;\n+import org.apache.wicket.request.resource.IResource;\n+\n+@Resource(key = \"saml2SPs\", path = \"/api/saml2SPs/userAttrs\")\n+public class SAML2SPUserAttrsResource extends BaseResource {\n+\n+    private static final long serialVersionUID = 7273151109078469253L;\n+\n+    @Override\n+    protected ResourceResponse newResourceResponse(final IResource.Attributes attributes) {\n+        ResourceResponse response = new ResourceResponse();\n+        response.setContentType(MediaType.APPLICATION_JSON);\n+\n+        try {\n+            response.setTextEncoding(StandardCharsets.UTF_8.name());\n+            response.setWriteCallback(new AbstractResource.WriteCallback() {\n+\n+                @Override\n+                public void writeData(final Attributes attributes) throws IOException {\n+                    attributes.getResponse().write(\n+                            (CharSequence) ((HttpServletRequest) RequestCycle.get().getRequest().\n+                                    getContainerRequest()).getSession().getAttribute(Constants.SAML2SP_USER_ATTRS));\n+                }\n+            });\n+            response.setStatusCode(Response.Status.OK.getStatusCode());\n+        } catch (Exception e) {\n+            LOG.error(\"Error retrieving saml2 user attributes\", e);\n+            response.setError(Response.Status.INTERNAL_SERVER_ERROR.getStatusCode(), new StringBuilder()\n+                    .append(\"ErrorMessage{{ \")\n+                    .append(e.getMessage())\n+                    .append(\" }}\")\n+                    .toString());\n+        }\n+\n+        return response;\n+    }\n+}"},{"sha":"0c8a2d9d74c2bd200f1ae5130ee9d2210a982230","filename":"ext/saml2sp/common-lib/src/main/java/org/apache/syncope/common/lib/to/SAML2IdPTO.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -47,6 +47,8 @@ public class SAML2IdPTO extends AbstractBaseBean implements EntityTO, ItemContai\n \n     private boolean updateMatching;\n \n+    private boolean selfRegUnmatching;\n+\n     private boolean useDeflateEncoding;\n \n     private boolean supportUnsolicited;\n@@ -104,6 +106,14 @@ public void setCreateUnmatching(final boolean createUnmatching) {\n         this.createUnmatching = createUnmatching;\n     }\n \n+    public boolean isSelfRegUnmatching() {\n+        return selfRegUnmatching;\n+    }\n+\n+    public void setSelfRegUnmatching(final boolean selfRegUnmatching) {\n+        this.selfRegUnmatching = selfRegUnmatching;\n+    }\n+\n     public boolean isUpdateMatching() {\n         return updateMatching;\n     }"},{"sha":"177a3e53ce2efa5d4ae08be400b7d7667d64f268","filename":"ext/saml2sp/common-lib/src/main/java/org/apache/syncope/common/lib/to/SAML2LoginResponseTO.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2LoginResponseTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2LoginResponseTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2LoginResponseTO.java?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -56,6 +56,8 @@ public class SAML2LoginResponseTO extends AbstractBaseBean {\n \n     private boolean sloSupported;\n \n+    private boolean selfReg;\n+\n     public String getNameID() {\n         return nameID;\n     }\n@@ -154,4 +156,12 @@ public void setSloSupported(final boolean sloSupported) {\n         this.sloSupported = sloSupported;\n     }\n \n+    public boolean isSelfReg() {\n+        return selfReg;\n+    }\n+\n+    public void setSelfReg(final boolean selfReg) {\n+        this.selfReg = selfReg;\n+    }\n+\n }"},{"sha":"39d8530fdf17f75271a0f70d77e17576ac9d70df","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/SAML2SPLogic.java","status":"modified","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -44,6 +44,7 @@\n import org.apache.syncope.common.lib.to.SAML2RequestTO;\n import org.apache.syncope.common.lib.to.SAML2LoginResponseTO;\n import org.apache.syncope.common.lib.to.SAML2ReceivedResponseTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.SAML2BindingType;\n@@ -493,6 +494,22 @@ public SAML2LoginResponseTO validateLoginResponse(final SAML2ReceivedResponseTO\n \n                 username = AuthContextUtils.execWithAuthContext(AuthContextUtils.getDomain(),\n                         () -> userManager.create(idp, responseTO, nameID.getValue()));\n+            } else if (idp.isSelfRegUnmatching()) {\n+                responseTO.setNameID(nameID.getValue());\n+                UserTO userTO = new UserTO();\n+\n+                userManager.fill(idp.getKey(), responseTO, userTO);\n+\n+                responseTO.getAttrs().clear();\n+                responseTO.getAttrs().addAll(userTO.getPlainAttrs());\n+                responseTO.getAttrs().addAll(userTO.getVirAttrs());\n+                if (StringUtils.isNotBlank(userTO.getUsername())) {\n+                    responseTO.setUsername(userTO.getUsername());\n+                }\n+\n+                responseTO.setSelfReg(true);\n+\n+                return responseTO;\n             } else {\n                 throw new NotFoundException(\"User matching the provided value \" + keyValue);\n             }"},{"sha":"7dff814877ed8eebcd0aaee8727d661aad088aed","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/saml2/SAML2IdPEntity.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2IdPEntity.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2IdPEntity.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2IdPEntity.java?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -130,6 +130,10 @@ public boolean isCreateUnmatching() {\n         return idpTO.isCreateUnmatching();\n     }\n \n+    public boolean isSelfRegUnmatching() {\n+        return idpTO.isSelfRegUnmatching();\n+    }\n+\n     public boolean isUpdateMatching() {\n         return idpTO.isUpdateMatching();\n     }"},{"sha":"9e16384f2ca55e008e6ebe20f87e8f1646dbe59d","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/saml2/SAML2UserManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -199,7 +199,7 @@ private List<SAML2IdPActions> getActions(final SAML2IdPEntity idp) {\n         return actions;\n     }\n \n-    private void fill(final String idpKey, final SAML2LoginResponseTO responseTO, final UserTO userTO) {\n+    public void fill(final String idpKey, final SAML2LoginResponseTO responseTO, final UserTO userTO) {\n         SAML2IdP idp = idpDAO.find(idpKey);\n         if (idp == null) {\n             LOG.warn(\"Invalid IdP: {}\", idpKey);"},{"sha":"fce41297431a18d2a1b2588a2dca8157d5ced47f","filename":"ext/saml2sp/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/SAML2IdP.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSAML2IdP.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSAML2IdP.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSAML2IdP.java?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -40,6 +40,10 @@ public interface SAML2IdP extends Entity {\n \n     void setCreateUnmatching(boolean createUnmatching);\n \n+    boolean isSelfRegUnmatching();\n+\n+    void setSelfRegUnmatching(boolean selfRegUnmatching);\n+\n     boolean isUpdateMatching();\n \n     void setUpdateMatching(boolean updateMatching);"},{"sha":"b9bd2ad0d46cde876cb2a1c5d1b3cf9e8ae47404","filename":"ext/saml2sp/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPASAML2IdP.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASAML2IdP.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASAML2IdP.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASAML2IdP.java?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -73,6 +73,11 @@ public class JPASAML2IdP extends AbstractGeneratedKeyEntity implements SAML2IdP\n     @Column(nullable = false)\n     private Integer createUnmatching;\n \n+    @Min(0)\n+    @Max(1)\n+    @Column(nullable = false)\n+    private Integer selfRegUnmatching;\n+\n     @Min(0)\n     @Max(1)\n     @Column(nullable = false)\n@@ -142,6 +147,16 @@ public void setCreateUnmatching(final boolean createUnmatching) {\n         this.createUnmatching = getBooleanAsInteger(createUnmatching);\n     }\n \n+    @Override\n+    public boolean isSelfRegUnmatching() {\n+        return isBooleanAsInteger(selfRegUnmatching);\n+    }\n+\n+    @Override\n+    public void setSelfRegUnmatching(final boolean selfRegUnmatching) {\n+        this.selfRegUnmatching = getBooleanAsInteger(selfRegUnmatching);\n+    }\n+\n     @Override\n     public boolean isUpdateMatching() {\n         return isBooleanAsInteger(updateMatching);"},{"sha":"ab2f1129ec5a9a0fce1e11fb0c0e21f50cac5c4e","filename":"ext/saml2sp/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/SAML2IdPValidator.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FSAML2IdPValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FSAML2IdPValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FSAML2IdPValidator.java?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -28,6 +28,15 @@ public class SAML2IdPValidator extends AbstractValidator<SAML2IdPCheck, SAML2IdP\n \n     @Override\n     public boolean isValid(final SAML2IdP value, final ConstraintValidatorContext context) {\n+        if (value.isSelfRegUnmatching() && value.isCreateUnmatching()) {\n+            context.buildConstraintViolationWithTemplate(\n+                    getTemplate(EntityViolationType.Standard,\n+                            \"Either selfRegUnmatching or createUnmatching, not both\")).\n+                    addPropertyNode(\"selfRegUnmatching\").\n+                    addPropertyNode(\"createUnmatching\").addConstraintViolation();\n+            return false;\n+        }\n+\n         long connObjectKeys = value.getItems().stream().filter(item -> item.isConnObjectKey()).count();\n         if (!value.getItems().isEmpty() && connObjectKeys != 1) {\n             context.buildConstraintViolationWithTemplate("},{"sha":"b63928b85d72f034d7f27fb5159d15e99814bd70","filename":"ext/saml2sp/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/SAML2IdPDataBinderImpl.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSAML2IdPDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/ext%2Fsaml2sp%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSAML2IdPDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSAML2IdPDataBinderImpl.java?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -178,6 +178,7 @@ public SAML2IdP update(final SAML2IdP idp, final SAML2IdPTO idpTO) {\n         idp.setName(idpTO.getName());\n         idp.setMetadata(Base64.getMimeDecoder().decode(idpTO.getMetadata()));\n         idp.setCreateUnmatching(idpTO.isCreateUnmatching());\n+        idp.setSelfRegUnmatching(idpTO.isSelfRegUnmatching());\n         idp.setUpdateMatching(idpTO.isUpdateMatching());\n         idp.setUseDeflateEncoding(idpTO.isUseDeflateEncoding());\n         idp.setSupportUnsolicited(idpTO.isSupportUnsolicited());\n@@ -250,6 +251,7 @@ public SAML2IdPTO getIdPTO(final SAML2IdP idp) {\n         idpTO.setSupportUnsolicited(idp.isSupportUnsolicited());\n         idpTO.setBindingType(idp.getBindingType());\n         idpTO.setCreateUnmatching(idp.isCreateUnmatching());\n+        idpTO.setSelfRegUnmatching(idp.isSelfRegUnmatching());\n         idpTO.setUpdateMatching(idp.isUpdateMatching());\n         idpTO.setMetadata(Base64.getMimeEncoder().encodeToString(idp.getMetadata()));\n "},{"sha":"890e5b00a1b768b87e1a1e4524f89688dbffc670","filename":"fit/console-reference/src/main/webapp/WEB-INF/web.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -47,6 +47,11 @@ under the License.\n     <param-name>saml2sp.logout.error.url</param-name>\n     <param-value>../wicket/bookmarkable/org.apache.syncope.client.console.pages.Login</param-value>\n   </context-param>\n+\n+  <context-param>\n+    <param-name>saml2sp.redirect.selfreg</param-name>\n+    <param-value>../wicket/bookmarkable/org.apache.syncope.client.console.pages.SAML2SPSelfReg</param-value>\n+  </context-param>\n   \n   <!-- SESSION TIMEOUT (MINUTES)-->\n   <session-config>"},{"sha":"7f61a366c56aa864e9ad9b4195409de6805d6000","filename":"fit/enduser-reference/src/main/webapp/WEB-INF/web.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ec63a29d1bbd029c75816a3872c0b61d63df3847/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ec63a29d1bbd029c75816a3872c0b61d63df3847/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fenduser-reference%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=ec63a29d1bbd029c75816a3872c0b61d63df3847","patch":"@@ -47,6 +47,11 @@ under the License.\n     <param-name>saml2sp.logout.error.url</param-name>\n     <param-value>../wicket/bookmarkable/org.apache.syncope.client.enduser.pages.HomePage</param-value>\n   </context-param>\n+  \n+  <context-param>\n+    <param-name>saml2sp.redirect.selfreg</param-name>\n+    <param-value>../wicket/bookmarkable/org.apache.syncope.client.enduser.pages.SAML2SPSelfReg</param-value>\n+  </context-param>\n \n   <!-- SESSION TIMEOUT (MINUTES)-->\n   <session-config>"}]}