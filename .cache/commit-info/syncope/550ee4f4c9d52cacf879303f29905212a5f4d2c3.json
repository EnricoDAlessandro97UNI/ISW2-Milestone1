{"sha":"550ee4f4c9d52cacf879303f29905212a5f4d2c3","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjU1MGVlNGY0YzlkNTJjYWNmODc5MzAzZjI5OTA1MjEyYTVmNGQyYzM=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-18T13:28:16Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-04-19T13:01:19Z"},"message":"[SYNCOPE-822] UUID keys","tree":{"sha":"c4073d610fa9e5c5c17d6be60a9e8f345e9053a2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c4073d610fa9e5c5c17d6be60a9e8f345e9053a2"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/550ee4f4c9d52cacf879303f29905212a5f4d2c3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/550ee4f4c9d52cacf879303f29905212a5f4d2c3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/550ee4f4c9d52cacf879303f29905212a5f4d2c3","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/550ee4f4c9d52cacf879303f29905212a5f4d2c3/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"1735c44c19226d4f2351befa1efec60d9796d98a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1735c44c19226d4f2351befa1efec60d9796d98a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1735c44c19226d4f2351befa1efec60d9796d98a"}],"stats":{"total":10746,"additions":4720,"deletions":6026},"files":[{"sha":"4f06c5d9f23f0459620c6ad0281b554f1a91cbad","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/anyobject/AnyObjectSyncopeOperations.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fanyobject%2FAnyObjectSyncopeOperations.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -35,19 +35,19 @@ public List<AnyObjectTO> list(final String type) {\n         return anyObjectService.list(type, new AnyListQuery()).getResult();\n     }\n \n-    public AnyObjectTO read(final String anyId) {\n-        return anyObjectService.read(Long.valueOf(anyId));\n+    public AnyObjectTO read(final String anyKey) {\n+        return anyObjectService.read(anyKey);\n     }\n \n-    public Set<AttrTO> readAttributes(final String anyId, final String schemaType) {\n-        return anyObjectService.read(Long.valueOf(anyId), SchemaType.valueOf(schemaType));\n+    public Set<AttrTO> readAttributes(final String anyKey, final String schemaType) {\n+        return anyObjectService.read(anyKey, SchemaType.valueOf(schemaType));\n     }\n \n-    public AttrTO readAttribute(final String anyId, final String schemaType, final String schema) {\n-        return anyObjectService.read(Long.valueOf(anyId), SchemaType.valueOf(schemaType), schema);\n+    public AttrTO readAttribute(final String anyKey, final String schemaType, final String schema) {\n+        return anyObjectService.read(anyKey, SchemaType.valueOf(schemaType), schema);\n     }\n \n-    public void delete(final String anyId) {\n-        anyObjectService.delete(Long.valueOf(anyId));\n+    public void delete(final String anyKey) {\n+        anyObjectService.delete(anyKey);\n     }\n }"},{"sha":"44c9ea8567e27d666d4830f49c64ae1cef2f8d0a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/connector/ConnectorSyncopeOperations.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fconnector%2FConnectorSyncopeOperations.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -32,8 +32,8 @@ public ConnInstanceTO readByResource(final String resourceName) {\n         return connectorService.readByResource(resourceName, null);\n     }\n \n-    public ConnInstanceTO read(final String resourceId) {\n-        return connectorService.read(Long.valueOf(resourceId), null);\n+    public ConnInstanceTO read(final String resourceKey) {\n+        return connectorService.read(resourceKey, null);\n     }\n \n     public List<ConnBundleTO> getBundles() {\n@@ -44,7 +44,7 @@ public List<ConnInstanceTO> list() {\n         return connectorService.list(null);\n     }\n \n-    public void delete(final String resourceId) {\n-        connectorService.delete(Long.valueOf(resourceId));\n+    public void delete(final String resourceKey) {\n+        connectorService.delete(resourceKey);\n     }\n }"},{"sha":"55f0847a90e3962a13948aa0665f073682bade10","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementSyncopeOperations.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSyncopeOperations.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -47,7 +47,7 @@ public boolean exists(final String entitlement) {\n \n     public Set<String> usernameEntitlements(final String username) {\n         final Set<String> entitlements = new TreeSet<>();\n-        final UserTO userTO = userSyncopeOperations.read(userSyncopeOperations.getIdFromUsername(username));\n+        final UserTO userTO = userSyncopeOperations.read(username);\n         for (final String role : userTO.getRoles()) {\n             entitlements.addAll(roleSyncopeOperations.read(role).getEntitlements());\n         }"},{"sha":"8df8e8c31bd99df666624947735ac3d2cd0d9a11","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/group/GroupSyncopeOperations.java","status":"modified","additions":8,"deletions":18,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fgroup%2FGroupSyncopeOperations.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -35,29 +35,19 @@ public List<GroupTO> list() {\n         return groupService.list(new AnyListQuery()).getResult();\n     }\n \n-    public GroupTO read(final String groupId) {\n-        return groupService.read(Long.valueOf(groupId));\n+    public GroupTO read(final String groupKey) {\n+        return groupService.read(groupKey);\n     }\n \n-    public Set<AttrTO> readAttributes(final String groupId, final String schemaType) {\n-        return groupService.read(Long.valueOf(groupId), SchemaType.valueOf(schemaType));\n+    public Set<AttrTO> readAttributes(final String groupKey, final String schemaType) {\n+        return groupService.read(groupKey, SchemaType.valueOf(schemaType));\n     }\n \n-    public AttrTO readAttribute(final String groupId, final String schemaType, final String schema) {\n-        return groupService.read(Long.valueOf(groupId), SchemaType.valueOf(schemaType), schema);\n+    public AttrTO readAttribute(final String groupKey, final String schemaType, final String schema) {\n+        return groupService.read(groupKey, SchemaType.valueOf(schemaType), schema);\n     }\n \n-    public void delete(final String groupId) {\n-        groupService.delete(Long.valueOf(groupId));\n-    }\n-\n-    public boolean exists(final String realm) {\n-        boolean exists = false;\n-        for (final GroupTO list : list()) {\n-            if (list.getName().equals(realm)) {\n-                exists = true;\n-            }\n-        }\n-        return exists;\n+    public void delete(final String groupKey) {\n+        groupService.delete(groupKey);\n     }\n }"},{"sha":"34851e9a633dfcb9a13790798474a9919737aa98","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/migrate/MigrateConf.java","status":"modified","additions":203,"deletions":89,"changes":292,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fmigrate%2FMigrateConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fmigrate%2FMigrateConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fmigrate%2FMigrateConf.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -26,9 +26,12 @@\n import java.io.IOException;\n import java.io.StringWriter;\n import java.util.Arrays;\n+import java.util.HashMap;\n import java.util.HashSet;\n+import java.util.Map;\n import java.util.Set;\n import java.util.TreeSet;\n+import java.util.UUID;\n import javax.xml.stream.XMLInputFactory;\n import javax.xml.stream.XMLOutputFactory;\n import javax.xml.stream.XMLStreamException;\n@@ -62,6 +65,8 @@ private static void copyAttrs(\n \n         Set<String> exceptions = new TreeSet<>(String.CASE_INSENSITIVE_ORDER);\n         exceptions.addAll(Arrays.asList(but));\n+        exceptions.add(\"id\");\n+        exceptions.add(\"name\");\n \n         for (int i = 0; i < streamReader.getAttributeCount(); i++) {\n             String name = streamReader.getAttributeLocalName(i);\n@@ -72,11 +77,12 @@ private static void copyAttrs(\n     }\n \n     private static String getAttributeValue(final XMLStreamReader streamReader, final String key) {\n-        String value = streamReader.getAttributeValue(\"\", key);\n-        if (value == null || value.isEmpty()) {\n-            value = streamReader.getAttributeValue(\"\", key.toUpperCase());\n-            if (value == null || value.isEmpty()) {\n-                value = streamReader.getAttributeValue(\"\", key.toLowerCase());\n+        String value = null;\n+\n+        for (int i = 0; i < streamReader.getAttributeCount(); i++) {\n+            String attrName = streamReader.getAttributeLocalName(i);\n+            if (attrName.equalsIgnoreCase(key)) {\n+                value = streamReader.getAttributeValue(i);\n             }\n         }\n \n@@ -139,150 +145,182 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n         reader.nextTag(); // dataset\n \n         writer.writeStartElement(\"AnyType\");\n-        writer.writeAttribute(\"name\", \"USER\");\n+        writer.writeAttribute(\"key\", \"USER\");\n         writer.writeAttribute(\"kind\", \"USER\");\n         writer.writeEndElement();\n \n         writer.writeStartElement(\"AnyTypeClass\");\n-        writer.writeAttribute(\"name\", \"BaseUser\");\n+        writer.writeAttribute(\"key\", \"BaseUser\");\n         writer.writeEndElement();\n \n         writer.writeStartElement(\"AnyType_AnyTypeClass\");\n-        writer.writeAttribute(\"anyType_name\", \"USER\");\n-        writer.writeAttribute(\"anyTypeClass_name\", \"BaseUser\");\n+        writer.writeAttribute(\"anyType_key\", \"USER\");\n+        writer.writeAttribute(\"anyTypeClass_key\", \"BaseUser\");\n         writer.writeEndElement();\n \n         writer.writeStartElement(\"AnyType\");\n-        writer.writeAttribute(\"name\", \"GROUP\");\n+        writer.writeAttribute(\"key\", \"GROUP\");\n         writer.writeAttribute(\"kind\", \"GROUP\");\n         writer.writeEndElement();\n \n         writer.writeStartElement(\"AnyTypeClass\");\n-        writer.writeAttribute(\"name\", \"BaseGroup\");\n+        writer.writeAttribute(\"key\", \"BaseGroup\");\n         writer.writeEndElement();\n \n         writer.writeStartElement(\"AnyType_AnyTypeClass\");\n-        writer.writeAttribute(\"anyType_name\", \"GROUP\");\n-        writer.writeAttribute(\"anyTypeClass_name\", \"BaseGroup\");\n+        writer.writeAttribute(\"anyType_key\", \"GROUP\");\n+        writer.writeAttribute(\"anyTypeClass_key\", \"BaseGroup\");\n         writer.writeEndElement();\n \n         writer.writeStartElement(\"AnyTypeClass\");\n-        writer.writeAttribute(\"name\", \"BaseUMembership\");\n+        writer.writeAttribute(\"key\", \"BaseUMembership\");\n         writer.writeEndElement();\n \n         Set<String> connInstanceCapabilities = new HashSet<>();\n \n+        String lastUUID;\n+        String syncopeConf = UUID.randomUUID().toString();\n+        Map<String, String> cPlainAttrs = new HashMap<>();\n+        Map<String, String> policies = new HashMap<>();\n+        Map<String, String> connInstances = new HashMap<>();\n+        Map<String, String> provisions = new HashMap<>();\n+        Map<String, String> mappings = new HashMap<>();\n+        Map<String, String> tasks = new HashMap<>();\n+        Map<String, String> notifications = new HashMap<>();\n+        Map<String, String> reports = new HashMap<>();\n+\n         String globalAccountPolicy = null;\n         String globalPasswordPolicy = null;\n         while (reader.hasNext()) {\n             if (reader.isStartElement()) {\n                 switch (reader.getLocalName().toLowerCase()) {\n                     case \"syncopeconf\":\n                         writer.writeStartElement(\"SyncopeConf\");\n-                        copyAttrs(reader, writer);\n+                        writer.writeAttribute(\"key\", syncopeConf);\n                         writer.writeEndElement();\n                         break;\n \n                     case \"cschema\":\n                         writer.writeStartElement(\"PlainSchema\");\n                         copyAttrs(reader, writer);\n+                        writer.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n                         writer.writeEndElement();\n                         break;\n \n                     case \"cattr\":\n                         writer.writeStartElement(\"CPlainAttr\");\n-                        copyAttrs(reader, writer);\n+                        copyAttrs(reader, writer, \"owner_id\", \"schema_name\");\n+                        lastUUID = UUID.randomUUID().toString();\n+                        writer.writeAttribute(\"key\", lastUUID);\n+                        writer.writeAttribute(\"owner_key\", syncopeConf);\n+                        writer.writeAttribute(\"schema_key\", getAttributeValue(reader, \"schema_name\"));\n                         writer.writeEndElement();\n+                        cPlainAttrs.put(getAttributeValue(reader, \"id\"), lastUUID);\n                         break;\n \n                     case \"cattrvalue\":\n                         writer.writeStartElement(\"CPlainAttrValue\");\n-                        copyAttrs(reader, writer);\n+                        copyAttrs(reader, writer, \"attribute_id\");\n+                        writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n+                        writer.writeAttribute(\n+                                \"attribute_key\", cPlainAttrs.get(getAttributeValue(reader, \"attribute_id\")));\n                         writer.writeEndElement();\n                         break;\n \n                     case \"uschema\":\n                         writer.writeStartElement(\"PlainSchema\");\n                         copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"anyTypeClass_name\", \"BaseUser\");\n+                        writer.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n+                        writer.writeAttribute(\"anyTypeClass_key\", \"BaseUser\");\n                         writer.writeEndElement();\n                         break;\n \n                     case \"uderschema\":\n                         writer.writeStartElement(\"DerSchema\");\n                         copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"anyTypeClass_name\", \"BaseUser\");\n+                        writer.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n+                        writer.writeAttribute(\"anyTypeClass_key\", \"BaseUser\");\n                         writer.writeEndElement();\n                         break;\n \n                     case \"uvirschema\":\n                         reporter.writeStartElement(\"VirSchema\");\n                         copyAttrs(reader, reporter);\n+                        reporter.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n                         reporter.writeEndElement();\n                         break;\n \n                     case \"rschema\":\n                         writer.writeStartElement(\"PlainSchema\");\n                         copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"anyTypeClass_name\", \"BaseGroup\");\n+                        writer.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n+                        writer.writeAttribute(\"anyTypeClass_key\", \"BaseGroup\");\n                         writer.writeEndElement();\n                         break;\n \n                     case \"rderschema\":\n                         writer.writeStartElement(\"DerSchema\");\n                         copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"anyTypeClass_name\", \"BaseGroup\");\n+                        writer.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n+                        writer.writeAttribute(\"anyTypeClass_key\", \"BaseGroup\");\n                         writer.writeEndElement();\n                         break;\n \n                     case \"rvirschema\":\n                         reporter.writeStartElement(\"VirSchema\");\n+                        reporter.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n                         copyAttrs(reader, reporter);\n                         reporter.writeEndElement();\n                         break;\n \n                     case \"mschema\":\n                         writer.writeStartElement(\"PlainSchema\");\n                         copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"anyTypeClass_name\", \"BaseUMembership\");\n+                        writer.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n+                        writer.writeAttribute(\"anyTypeClass_key\", \"BaseUMembership\");\n                         writer.writeEndElement();\n                         break;\n \n                     case \"mderschema\":\n                         writer.writeStartElement(\"DerSchema\");\n                         copyAttrs(reader, writer);\n-                        writer.writeAttribute(\"anyTypeClass_name\", \"BaseUMembership\");\n+                        writer.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n+                        writer.writeAttribute(\"anyTypeClass_key\", \"BaseUMembership\");\n                         writer.writeEndElement();\n                         break;\n \n                     case \"mvirschema\":\n                         reporter.writeStartElement(\"VirSchema\");\n                         copyAttrs(reader, reporter);\n+                        reporter.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n                         reporter.writeEndElement();\n                         break;\n \n                     case \"policy\":\n                         String policyId = getAttributeValue(reader, \"id\");\n+                        lastUUID = UUID.randomUUID().toString();\n+                        policies.put(policyId, lastUUID);\n+\n                         ObjectNode specification = (ObjectNode) OBJECT_MAPPER.readTree(\n                                 getAttributeValue(reader, \"specification\"));\n \n                         switch (getAttributeValue(reader, \"DTYPE\")) {\n                             case \"SyncPolicy\":\n                                 writer.writeStartElement(\"PullPolicy\");\n-                                writer.writeAttribute(\"id\", policyId);\n+                                writer.writeAttribute(\"key\", lastUUID);\n                                 writer.writeAttribute(\n                                         \"description\", getAttributeValue(reader, \"description\"));\n                                 writer.writeEndElement();\n                                 break;\n \n                             case \"PasswordPolicy\":\n                                 writer.writeStartElement(\"PasswordPolicy\");\n-                                writer.writeAttribute(\"id\", policyId);\n+                                writer.writeAttribute(\"key\", lastUUID);\n                                 writer.writeAttribute(\n                                         \"description\", getAttributeValue(reader, \"description\"));\n \n                                 if (\"GLOBAL_PASSWORD\".equalsIgnoreCase(getAttributeValue(reader, \"type\"))) {\n-                                    globalPasswordPolicy = getAttributeValue(reader, \"id\");\n+                                    globalPasswordPolicy = lastUUID;\n                                 }\n \n                                 JsonNode allowNullPassword = specification.get(\"allowNullPassword\");\n@@ -301,20 +339,20 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                                 writer.writeEndElement();\n \n                                 writer.writeStartElement(\"PasswordRuleConfInstance\");\n-                                writer.writeAttribute(\"id\", policyId);\n-                                writer.writeAttribute(\"passwordPolicy_id\", policyId);\n+                                writer.writeAttribute(\"key\", lastUUID);\n+                                writer.writeAttribute(\"passwordPolicy_key\", lastUUID);\n                                 writer.writeAttribute(\"serializedInstance\", specification.toString());\n                                 writer.writeEndElement();\n                                 break;\n \n                             case \"AccountPolicy\":\n                                 writer.writeStartElement(\"AccountPolicy\");\n-                                writer.writeAttribute(\"id\", policyId);\n+                                writer.writeAttribute(\"key\", lastUUID);\n                                 writer.writeAttribute(\n                                         \"description\", getAttributeValue(reader, \"description\"));\n \n                                 if (\"GLOBAL_ACCOUNT\".equalsIgnoreCase(getAttributeValue(reader, \"type\"))) {\n-                                    globalAccountPolicy = getAttributeValue(reader, \"id\");\n+                                    globalAccountPolicy = lastUUID;\n                                 }\n \n                                 JsonNode propagateSuspension = specification.get(\"propagateSuspension\");\n@@ -334,8 +372,8 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                                 writer.writeEndElement();\n \n                                 writer.writeStartElement(\"AccountRuleConfInstance\");\n-                                writer.writeAttribute(\"id\", policyId);\n-                                writer.writeAttribute(\"accountPolicy_id\", policyId);\n+                                writer.writeAttribute(\"key\", lastUUID);\n+                                writer.writeAttribute(\"accountPolicy_key\", lastUUID);\n                                 writer.writeAttribute(\"serializedInstance\", specification.toString());\n                                 writer.writeEndElement();\n                                 break;\n@@ -345,13 +383,19 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         break;\n \n                     case \"conninstance\":\n+                        lastUUID = UUID.randomUUID().toString();\n+                        connInstances.put(getAttributeValue(reader, \"id\"), lastUUID);\n+\n                         writer.writeStartElement(\"ConnInstance\");\n                         copyAttrs(reader, writer);\n+                        writer.writeAttribute(\"key\", lastUUID);\n                         writer.writeEndElement();\n                         break;\n \n                     case \"conninstance_capabilities\":\n-                        String connInstanceId = getAttributeValue(reader, \"ConnInstance_id\");\n+                        String connInstanceId = getAttributeValue(reader, \"connInstance_id\");\n+                        String connInstanceKey = connInstances.get(connInstanceId);\n+\n                         String capabilities = getAttributeValue(reader, \"capabilities\");\n                         if (capabilities.startsWith(\"ONE_PHASE_\")) {\n                             capabilities = capabilities.substring(10);\n@@ -360,7 +404,7 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         }\n                         if (!connInstanceCapabilities.contains(connInstanceId + capabilities)) {\n                             writer.writeStartElement(\"ConnInstance_capabilities\");\n-                            writer.writeAttribute(\"ConnInstance_id\", connInstanceId);\n+                            writer.writeAttribute(\"connInstance_key\", connInstanceKey);\n                             writer.writeAttribute(\"capability\", capabilities);\n                             writer.writeEndElement();\n \n@@ -372,21 +416,33 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         writer.writeStartElement(\"ExternalResource\");\n                         copyAttrs(reader, writer,\n                                 \"syncTraceLevel\", \"userializedSyncToken\", \"rserializedSyncToken\",\n-                                \"propagationMode\", \"propagationPrimary\", \"syncPolicy_id\");\n-                        String syncPolicyId = getAttributeValue(reader, \"syncPolicy_id\");\n+                                \"propagationMode\", \"propagationPrimary\", \"connector_id\", \"syncPolicy_id\",\n+                                \"passwordPolicy_id\",\n+                                \"creator\", \"lastModifier\", \"creationDate\", \"lastChangeDate\");\n+\n+                        writer.writeAttribute(\"key\", getAttributeValue(reader, \"name\"));\n                         writer.writeAttribute(\n-                                \"pullTraceLevel\", getAttributeValue(reader, \"syncTraceLevel\"));\n-                        if (StringUtils.isNotBlank(syncPolicyId)) {\n-                            writer.writeAttribute(\n-                                    \"pullPolicy_id\", getAttributeValue(reader, \"syncPolicy_id\"));\n+                                \"connector_key\", connInstances.get(getAttributeValue(reader, \"connector_id\")));\n+\n+                        writer.writeAttribute(\"pullTraceLevel\", getAttributeValue(reader, \"syncTraceLevel\"));\n+\n+                        String syncPolicyKey = policies.get(getAttributeValue(reader, \"syncPolicy_id\"));\n+                        if (StringUtils.isNotBlank(syncPolicyKey)) {\n+                            writer.writeAttribute(\"pullPolicy_key\", syncPolicyKey);\n+                        }\n+\n+                        String passwordPolicyKey = policies.get(getAttributeValue(reader, \"passwordPolicy_id\"));\n+                        if (StringUtils.isNotBlank(passwordPolicyKey)) {\n+                            writer.writeAttribute(\"passwordPolicy_key\", passwordPolicyKey);\n                         }\n+\n                         writer.writeEndElement();\n                         break;\n \n                     case \"externalresource_propactions\":\n                         writer.writeStartElement(\"ExternalResource_PropActions\");\n \n-                        writer.writeAttribute(\"resource_name\", getAttributeValue(reader, \"externalResource_name\"));\n+                        writer.writeAttribute(\"resource_key\", getAttributeValue(reader, \"externalResource_name\"));\n \n                         String propActionClassName = getAttributeValue(reader, \"element\");\n                         switch (propActionClassName) {\n@@ -403,6 +459,7 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                             case \"org.apache.syncope.core.propagation.impl.DBPasswordPropagationActions\":\n                                 propActionClassName = \"org.apache.syncope.core.provisioning.java.propagation.\"\n                                         + \"DBPasswordPropagationActions\";\n+                                break;\n \n                             default:\n                         }\n@@ -412,24 +469,30 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n \n                     case \"policy_externalresource\":\n                         writer.writeStartElement(\"AccountPolicy_ExternalResource\");\n-                        writer.writeAttribute(\"accountPolicy_id\", getAttributeValue(reader, \"account_policy_id\"));\n-                        writer.writeAttribute(\"resource_name\", getAttributeValue(reader, \"resource_name\"));\n+                        writer.writeAttribute(\n+                                \"accountPolicy_key\", policies.get(getAttributeValue(reader, \"account_policy_id\")));\n+                        writer.writeAttribute(\"resource_key\", getAttributeValue(reader, \"resource_name\"));\n                         writer.writeEndElement();\n                         break;\n \n                     case \"umapping\":\n                         String umappingId = getAttributeValue(reader, \"id\");\n+                        lastUUID = UUID.randomUUID().toString();\n+                        provisions.put(umappingId, lastUUID);\n+\n                         writer.writeStartElement(\"Provision\");\n-                        writer.writeAttribute(\"id\", umappingId);\n-                        writer.writeAttribute(\n-                                \"resource_name\", getAttributeValue(reader, \"resource_name\"));\n-                        writer.writeAttribute(\"anyType_name\", \"USER\");\n+                        writer.writeAttribute(\"key\", lastUUID);\n+                        writer.writeAttribute(\"resource_key\", getAttributeValue(reader, \"resource_name\"));\n+                        writer.writeAttribute(\"anyType_key\", \"USER\");\n                         writer.writeAttribute(\"objectClass\", \"__ACCOUNT__\");\n                         writer.writeEndElement();\n \n+                        lastUUID = UUID.randomUUID().toString();\n+                        mappings.put(umappingId, lastUUID);\n+\n                         writer.writeStartElement(\"Mapping\");\n-                        writer.writeAttribute(\"id\", umappingId);\n-                        writer.writeAttribute(\"provision_id\", umappingId);\n+                        writer.writeAttribute(\"key\", lastUUID);\n+                        writer.writeAttribute(\"provision_key\", provisions.get(umappingId));\n \n                         String uaccountLink = getAttributeValue(reader, \"accountlink\");\n                         if (StringUtils.isNotBlank(uaccountLink)) {\n@@ -446,7 +509,9 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                             reporter.writeEndElement();\n                         } else {\n                             writer.writeStartElement(\"MappingItem\");\n-                            copyAttrs(reader, writer, \"accountid\", \"intMappingType\");\n+                            copyAttrs(reader, writer, \"accountid\", \"intMappingType\", \"mapping_id\");\n+                            writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n+                            writer.writeAttribute(\"mapping_key\", mappings.get(getAttributeValue(reader, \"mapping_id\")));\n                             writer.writeAttribute(\"intMappingType\", toNewIntMappingType(uIntMappingType));\n                             writer.writeAttribute(\"connObjectKey\", getAttributeValue(reader, \"accountid\"));\n                             writer.writeEndElement();\n@@ -455,17 +520,22 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n \n                     case \"rmapping\":\n                         String rmappingId = \"10\" + getAttributeValue(reader, \"id\");\n+                        lastUUID = UUID.randomUUID().toString();\n+                        provisions.put(rmappingId, lastUUID);\n+\n                         writer.writeStartElement(\"Provision\");\n-                        writer.writeAttribute(\"id\", rmappingId);\n-                        writer.writeAttribute(\n-                                \"resource_name\", getAttributeValue(reader, \"resource_name\"));\n-                        writer.writeAttribute(\"anyType_name\", \"GROUP\");\n+                        writer.writeAttribute(\"key\", lastUUID);\n+                        writer.writeAttribute(\"resource_key\", getAttributeValue(reader, \"resource_name\"));\n+                        writer.writeAttribute(\"anyType_key\", \"GROUP\");\n                         writer.writeAttribute(\"objectClass\", \"__GROUP__\");\n                         writer.writeEndElement();\n \n+                        lastUUID = UUID.randomUUID().toString();\n+                        mappings.put(rmappingId, lastUUID);\n+\n                         writer.writeStartElement(\"Mapping\");\n-                        writer.writeAttribute(\"id\", rmappingId);\n-                        writer.writeAttribute(\"provision_id\", rmappingId);\n+                        writer.writeAttribute(\"key\", lastUUID);\n+                        writer.writeAttribute(\"provision_key\", provisions.get(rmappingId));\n \n                         String raccountLink = getAttributeValue(reader, \"accountlink\");\n                         if (StringUtils.isNotBlank(raccountLink)) {\n@@ -482,7 +552,10 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                             reporter.writeEndElement();\n                         } else {\n                             writer.writeStartElement(\"MappingItem\");\n-                            copyAttrs(reader, writer, \"accountid\", \"intMappingType\");\n+                            copyAttrs(reader, writer, \"accountid\", \"intMappingType\", \"mapping_id\");\n+                            writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n+                            writer.writeAttribute(\n+                                    \"mapping_key\", mappings.get(\"10\" + getAttributeValue(reader, \"mapping_id\")));\n                             writer.writeAttribute(\"intMappingType\", toNewIntMappingType(rIntMappingType));\n                             writer.writeAttribute(\"connObjectKey\", getAttributeValue(reader, \"accountid\"));\n                             writer.writeEndElement();\n@@ -494,9 +567,22 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         copyAttrs(reader, writer,\n                                 \"DTYPE\", \"propagationMode\", \"subjectType\", \"subjectId\", \"xmlAttributes\",\n                                 \"jobClassName\", \"userTemplate\", \"roleTemplate\", \"userFilter\", \"roleFilter\",\n-                                \"propagationOperation\", \"syncStatus\", \"fullReconciliation\");\n+                                \"propagationOperation\", \"syncStatus\", \"fullReconciliation\", \"resource_name\");\n+\n+                        lastUUID = UUID.randomUUID().toString();\n+                        tasks.put(getAttributeValue(reader, \"id\"), lastUUID);\n+\n+                        writer.writeAttribute(\"key\", lastUUID);\n \n-                        String taskId = getAttributeValue(reader, \"id\");\n+                        String resourceName = getAttributeValue(reader, \"resource_name\");\n+                        if (StringUtils.isNotBlank(resourceName)) {\n+                            writer.writeAttribute(\"resource_key\", resourceName);\n+                        }\n+\n+                        String name = getAttributeValue(reader, \"name\");\n+                        if (StringUtils.isNotBlank(name)) {\n+                            writer.writeAttribute(\"name\", name);\n+                        }\n \n                         switch (getAttributeValue(reader, \"DTYPE\")) {\n                             case \"PropagationTask\":\n@@ -532,9 +618,9 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                                     template.set(\"plainAttrs\", plainAttrs);\n \n                                     writer.writeStartElement(\"AnyTemplatePullTask\");\n-                                    writer.writeAttribute(\"id\", taskId + \"1\");\n-                                    writer.writeAttribute(\"pullTask_id\", taskId);\n-                                    writer.writeAttribute(\"anyType_name\", \"USER\");\n+                                    writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n+                                    writer.writeAttribute(\"pullTask_key\", lastUUID);\n+                                    writer.writeAttribute(\"anyType_key\", \"USER\");\n                                     writer.writeAttribute(\"template\", template.toString());\n                                     writer.writeEndElement();\n                                 }\n@@ -545,9 +631,9 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                                     template.set(\"plainAttrs\", plainAttrs);\n \n                                     writer.writeStartElement(\"AnyTemplatePullTask\");\n-                                    writer.writeAttribute(\"id\", taskId + \"2\");\n-                                    writer.writeAttribute(\"pullTask_id\", taskId);\n-                                    writer.writeAttribute(\"anyType_name\", \"GROUP\");\n+                                    writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n+                                    writer.writeAttribute(\"pullTask_key\", lastUUID);\n+                                    writer.writeAttribute(\"anyType_key\", \"GROUP\");\n                                     writer.writeAttribute(\"template\", template.toString());\n                                     writer.writeEndElement();\n                                 }\n@@ -572,18 +658,18 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                                 String userFilter = getAttributeValue(reader, \"userFilter\");\n                                 if (StringUtils.isNotBlank(userFilter)) {\n                                     writer.writeStartElement(\"PushTaskAnyFilter\");\n-                                    writer.writeAttribute(\"id\", taskId + \"1\");\n-                                    writer.writeAttribute(\"pushTask_id\", taskId);\n-                                    writer.writeAttribute(\"anyType_name\", \"USER\");\n+                                    writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n+                                    writer.writeAttribute(\"pushTask_key\", lastUUID);\n+                                    writer.writeAttribute(\"anyType_key\", \"USER\");\n                                     writer.writeAttribute(\"fiql\", userFilter);\n                                     writer.writeEndElement();\n                                 }\n                                 String roleFilter = getAttributeValue(reader, \"roleFilter\");\n                                 if (StringUtils.isNotBlank(roleFilter)) {\n                                     writer.writeStartElement(\"PushTaskAnyFilter\");\n-                                    writer.writeAttribute(\"id\", taskId + \"2\");\n-                                    writer.writeAttribute(\"pushTask_id\", taskId);\n-                                    writer.writeAttribute(\"anyType_name\", \"GROUP\");\n+                                    writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n+                                    writer.writeAttribute(\"pushTask_key\", lastUUID);\n+                                    writer.writeAttribute(\"anyType_key\", \"GROUP\");\n                                     writer.writeAttribute(\"fiql\", roleFilter);\n                                     writer.writeEndElement();\n                                 }\n@@ -595,14 +681,16 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n \n                     case \"taskexec\":\n                         writer.writeStartElement(\"TaskExec\");\n-                        copyAttrs(reader, writer);\n+                        copyAttrs(reader, writer, \"task_id\");\n+                        writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n+                        writer.writeAttribute(\"task_key\", tasks.get(getAttributeValue(reader, \"task_id\")));\n                         writer.writeEndElement();\n                         break;\n \n                     case \"synctask_actionsclassnames\":\n                         writer.writeStartElement(\"PullTask_actionsClassNames\");\n                         writer.writeAttribute(\n-                                \"pullTask_id\", getAttributeValue(reader, \"syncTask_id\"));\n+                                \"pullTask_key\", tasks.get(getAttributeValue(reader, \"syncTask_id\")));\n \n                         String syncActionClassName = getAttributeValue(reader, \"element\");\n                         switch (syncActionClassName) {\n@@ -619,6 +707,7 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                             case \"org.apache.syncope.core.sync.impl.DBPasswordSyncActions\":\n                                 syncActionClassName =\n                                         \"org.apache.syncope.core.provisioning.java.pushpull.DBPasswordPullActions\";\n+                                break;\n \n                             default:\n                         }\n@@ -628,6 +717,12 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n \n                     case \"notification\":\n                         writer.writeStartElement(\"Notification\");\n+\n+                        lastUUID = UUID.randomUUID().toString();\n+                        notifications.put(getAttributeValue(reader, \"id\"), lastUUID);\n+\n+                        writer.writeAttribute(\"key\", lastUUID);\n+\n                         copyAttrs(reader, writer, \"recipientAttrType\", \"template\",\n                                 \"userAbout\", \"roleAbout\", \"recipients\");\n                         String recipientAttrType = getAttributeValue(reader, \"recipientAttrType\");\n@@ -638,34 +733,34 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n                         if (StringUtils.isNotBlank(recipients)) {\n                             writer.writeAttribute(\"recipientsFIQL\", getAttributeValue(reader, \"recipients\"));\n                         }\n-                        writer.writeAttribute(\"template_name\", getAttributeValue(reader, \"template\"));\n+                        writer.writeAttribute(\"template_key\", getAttributeValue(reader, \"template\"));\n                         writer.writeEndElement();\n \n-                        String notificationId = getAttributeValue(reader, \"id\");\n-\n                         String userAbout = getAttributeValue(reader, \"userAbout\");\n                         if (StringUtils.isNotBlank(userAbout)) {\n                             writer.writeStartElement(\"AnyAbout\");\n-                            writer.writeAttribute(\"id\", notificationId);\n-                            writer.writeAttribute(\"notification_id\", notificationId);\n-                            writer.writeAttribute(\"anyType_name\", \"USER\");\n+                            writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n+                            writer.writeAttribute(\"notification_key\", lastUUID);\n+                            writer.writeAttribute(\"anyType_key\", \"USER\");\n                             writer.writeAttribute(\"filter\", userAbout);\n                             writer.writeEndElement();\n                         }\n                         String roleAbout = getAttributeValue(reader, \"roleAbout\");\n                         if (StringUtils.isNotBlank(roleAbout)) {\n                             writer.writeStartElement(\"AnyAbout\");\n-                            writer.writeAttribute(\"id\", notificationId);\n-                            writer.writeAttribute(\"notification_id\", notificationId);\n-                            writer.writeAttribute(\"anyType_name\", \"GROUP\");\n+                            writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n+                            writer.writeAttribute(\"notification_key\", lastUUID);\n+                            writer.writeAttribute(\"anyType_key\", \"GROUP\");\n                             writer.writeAttribute(\"filter\", roleAbout);\n                             writer.writeEndElement();\n                         }\n                         break;\n \n                     case \"notification_events\":\n                         writer.writeStartElement(\"Notification_events\");\n-                        copyAttrs(reader, writer, \"events\");\n+                        copyAttrs(reader, writer, \"notification_id\", \"events\");\n+                        writer.writeAttribute(\n+                                \"notification_key\", notifications.get(getAttributeValue(reader, \"notification_id\")));\n                         writer.writeAttribute(\n                                 \"event\", getAttributeValue(reader, \"events\").\n                                 replaceAll(\"Controller\", \"Logic\"));\n@@ -674,31 +769,50 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n \n                     case \"notificationtask_recipients\":\n                         writer.writeStartElement(\"NotificationTask_recipients\");\n-                        copyAttrs(reader, writer);\n+                        copyAttrs(reader, writer, \"notificationTask_id\");\n+                        writer.writeAttribute(\n+                                \"notificationTask_key\",\n+                                tasks.get(getAttributeValue(reader, \"notificationTask_id\")));\n                         writer.writeEndElement();\n                         break;\n \n                     case \"report\":\n                         writer.writeStartElement(\"Report\");\n                         copyAttrs(reader, writer);\n+\n+                        lastUUID = UUID.randomUUID().toString();\n+                        reports.put(getAttributeValue(reader, \"id\"), lastUUID);\n+\n+                        writer.writeAttribute(\"key\", lastUUID);\n+                        writer.writeAttribute(\"name\", getAttributeValue(reader, \"name\"));\n+\n                         writer.writeEndElement();\n                         break;\n \n                     case \"reportletconfinstance\":\n                         writer.writeStartElement(\"ReportletConfInstance\");\n-                        copyAttrs(reader, writer);\n+                        copyAttrs(reader, writer, \"report_id\");\n+\n+                        writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n+                        writer.writeAttribute(\"report_key\", reports.get(getAttributeValue(reader, \"report_id\")));\n+\n                         writer.writeEndElement();\n                         break;\n \n                     case \"reportexec\":\n                         writer.writeStartElement(\"ReportExec\");\n-                        copyAttrs(reader, writer);\n+                        copyAttrs(reader, writer, \"report_id\");\n+\n+                        writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n+                        writer.writeAttribute(\"report_key\", reports.get(getAttributeValue(reader, \"report_id\")));\n+\n                         writer.writeEndElement();\n                         break;\n \n                     case \"securityquestion\":\n                         writer.writeStartElement(\"SecurityQuestion\");\n                         copyAttrs(reader, writer);\n+                        writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n                         writer.writeEndElement();\n                         break;\n \n@@ -710,13 +824,13 @@ private static void exec(final String src, final String dst) throws XMLStreamExc\n         }\n \n         writer.writeStartElement(\"Realm\");\n-        writer.writeAttribute(\"id\", \"1\");\n+        writer.writeAttribute(\"key\", UUID.randomUUID().toString());\n         writer.writeAttribute(\"name\", \"/\");\n         if (globalAccountPolicy != null) {\n-            writer.writeAttribute(\"accountPolicy_id\", globalAccountPolicy);\n+            writer.writeAttribute(\"accountPolicy_key\", globalAccountPolicy);\n         }\n         if (globalPasswordPolicy != null) {\n-            writer.writeAttribute(\"passwordPolicy_id\", globalPasswordPolicy);\n+            writer.writeAttribute(\"passwordPolicy_key\", globalPasswordPolicy);\n         }\n         writer.writeEndElement();\n "},{"sha":"cbdbf61c3d131b1e2c2a532cd894b729eda6b749","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/notification/NotificationSyncopeOperations.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fnotification%2FNotificationSyncopeOperations.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -27,15 +27,15 @@ public class NotificationSyncopeOperations {\n \n     private final NotificationService notificationService = SyncopeServices.get(NotificationService.class);\n \n-    public NotificationTO read(final String notificationId) {\n-        return notificationService.read(Long.valueOf(notificationId));\n+    public NotificationTO read(final String notificationKey) {\n+        return notificationService.read(notificationKey);\n     }\n \n     public List<NotificationTO> list() {\n         return notificationService.list();\n     }\n \n-    public void delete(final String notificationId) {\n-        notificationService.delete(Long.valueOf(notificationId));\n+    public void delete(final String notificationKey) {\n+        notificationService.delete(notificationKey);\n     }\n }"},{"sha":"127818b19cc088e8a5f645d985f53d6fc6f1f42a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/policy/PolicySyncopeOperations.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicySyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicySyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fpolicy%2FPolicySyncopeOperations.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -28,15 +28,15 @@ public class PolicySyncopeOperations {\n \n     private final PolicyService policyService = SyncopeServices.get(PolicyService.class);\n \n-    public <T extends AbstractPolicyTO> T read(final String policyId) {\n-        return policyService.read(Long.valueOf(policyId));\n+    public <T extends AbstractPolicyTO> T read(final String policyKey) {\n+        return policyService.read(policyKey);\n     }\n \n     public <T extends AbstractPolicyTO> List<T> list(final String policyType) {\n         return policyService.list(PolicyType.valueOf(policyType));\n     }\n \n-    public void delete(final String policyId) {\n-        policyService.delete(Long.valueOf(policyId));\n+    public void delete(final String policyKey) {\n+        policyService.delete(policyKey);\n     }\n }"},{"sha":"f4c09bbdc63cdfc4c3e771dd9a12c2d949334ed3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionSyncopeOperations.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionSyncopeOperations.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -31,14 +31,14 @@ public List<SecurityQuestionTO> list() {\n         return securityQuestionService.list();\n     }\n \n-    public void delete(final String questionId) {\n-        securityQuestionService.delete(Long.valueOf(questionId));\n+    public void delete(final String questionKey) {\n+        securityQuestionService.delete(questionKey);\n     }\n \n-    public SecurityQuestionTO read(final String questionId) {\n-        return securityQuestionService.read(Long.valueOf(questionId));\n+    public SecurityQuestionTO read(final String questionKey) {\n+        return securityQuestionService.read(questionKey);\n     }\n-    \n+\n     public SecurityQuestionTO readByUser(final String username) {\n         return securityQuestionService.readByUser(username);\n     }"},{"sha":"efbd8214d6fcc96dda81b8e43fc538e508846138","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/report/ReportSyncopeOperations.java","status":"modified","additions":43,"deletions":16,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Freport%2FReportSyncopeOperations.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -18,11 +18,13 @@\n  */\n package org.apache.syncope.client.cli.commands.report;\n \n+import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.SequenceInputStream;\n import java.util.List;\n import javax.xml.parsers.ParserConfigurationException;\n import javax.xml.transform.TransformerException;\n+import org.apache.cxf.helpers.IOUtils;\n import org.apache.syncope.client.cli.SyncopeServices;\n import org.apache.syncope.client.cli.util.XMLUtils;\n import org.apache.syncope.common.lib.to.JobTO;\n@@ -37,7 +39,7 @@ public class ReportSyncopeOperations {\n     private final ReportService reportService = SyncopeServices.get(ReportService.class);\n \n     public ReportTO read(final String reportKey) {\n-        return reportService.read(Long.valueOf(reportKey));\n+        return reportService.read(reportKey);\n     }\n \n     public List<JobTO> listJobs() {\n@@ -50,37 +52,62 @@ public List<ReportTO> list() {\n \n     public String exportExecutionResult(final String executionKey, final String reportExecExportFormat)\n             throws TransformerException, SAXException, IOException, ParserConfigurationException {\n-        final ReportExecExportFormat format = ReportExecExportFormat.valueOf(reportExecExportFormat);\n-        final SequenceInputStream report = (SequenceInputStream) reportService.exportExecutionResult(Long.valueOf(\n-                executionKey), format).getEntity();\n-        final String xmlFinalName = \"export_\" + executionKey + \".xml\";\n+\n+        ReportExecExportFormat format = ReportExecExportFormat.valueOf(reportExecExportFormat);\n+        SequenceInputStream report = (SequenceInputStream) reportService.exportExecutionResult(executionKey, format).\n+                getEntity();\n+\n+        String fileName = \"export_\" + executionKey;\n+        FileOutputStream fos = null;\n         switch (format) {\n             case XML:\n-                XMLUtils.createXMLFile(report, xmlFinalName);\n+                fileName += \".xml\";\n+                XMLUtils.createXMLFile(report, fileName);\n                 break;\n+\n             case CSV:\n-                return format + \" doesn't supported\";\n+                fileName += \".csv\";\n+                fos = new FileOutputStream(fileName);\n+                IOUtils.copyAndCloseInput(report, fos);\n+                break;\n+\n             case PDF:\n-                return format + \" doesn't supported\";\n+                fileName += \".pdf\";\n+                fos = new FileOutputStream(fileName);\n+                IOUtils.copyAndCloseInput(report, fos);\n+                break;\n+\n             case HTML:\n-                return format + \" doesn't supported\";\n+                fileName += \".html\";\n+                fos = new FileOutputStream(fileName);\n+                IOUtils.copyAndCloseInput(report, fos);\n+                break;\n+\n             case RTF:\n-                return format + \" doesn't supported\";\n+                fileName += \".rtf\";\n+                fos = new FileOutputStream(fileName);\n+                IOUtils.copyAndCloseInput(report, fos);\n+                break;\n+\n             default:\n-                return format + \" doesn't supported\";\n+                return format + \" not supported\";\n+        }\n+        if (fos != null) {\n+            fos.close();\n         }\n-        return xmlFinalName;\n+\n+        return fileName;\n     }\n \n     public void execute(final String reportKey) {\n-        reportService.execute(new ExecuteQuery.Builder().key(Long.valueOf(reportKey)).build());\n+        reportService.execute(new ExecuteQuery.Builder().key(reportKey).build());\n     }\n \n-    public void deleteExecution(final String executionId) {\n-        reportService.deleteExecution(Long.valueOf(executionId));\n+    public void deleteExecution(final String executionKey) {\n+        reportService.deleteExecution(executionKey);\n     }\n \n     public void delete(final String reportKey) {\n-        reportService.delete(Long.valueOf(reportKey));\n+        reportService.delete(reportKey);\n     }\n }"},{"sha":"042207a1b56f6118e45b83d93236b1a9b3463d25","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/resource/ResourceResultManager.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fresource%2FResourceResultManager.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -38,15 +38,10 @@ public void printResources(final List<ResourceTO> resourceTOs) {\n     private void printResource(final ResourceTO resourceTO) {\n         System.out.println(\" > RESOURCE ID: \" + resourceTO.getKey());\n         System.out.println(\"    connector dispaly name: \" + resourceTO.getConnectorDisplayName());\n-        System.out.println(\"    etag value: \" + resourceTO.getETagValue());\n         System.out.println(\"    connector id: \" + resourceTO.getConnector());\n         System.out.println(\"    account policy id: \" + resourceTO.getAccountPolicy());\n         System.out.println(\"    password policy id: \" + resourceTO.getPasswordPolicy());\n         System.out.println(\"    pull policy id: \" + resourceTO.getPullPolicy());\n-        System.out.println(\"    creator: \" + resourceTO.getCreator());\n-        System.out.println(\"    creation date: \" + resourceTO.getCreationDate());\n-        System.out.println(\"    last modifier: \" + resourceTO.getLastModifier());\n-        System.out.println(\"    last change date: \" + resourceTO.getLastChangeDate());\n         System.out.println(\"    propagation actions class: \" + resourceTO.getPropagationActionsClassNames());\n         System.out.println(\"    propagation priority: \" + resourceTO.getPropagationPriority());\n         System.out.println(\"    PROVISIONS:\");"},{"sha":"7ac859370b66c42948e8494ae6c760c3dd09e12f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskSyncopeOperations.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskSyncopeOperations.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -37,11 +37,11 @@ public List<JobTO> listJobs() {\n     }\n \n     public <T extends AbstractTaskTO> T read(final String taskKey) {\n-        return taskService.read(Long.valueOf(taskKey), true);\n+        return taskService.read(taskKey, true);\n     }\n \n     public void delete(final String taskKey) {\n-        taskService.delete(Long.valueOf(taskKey));\n+        taskService.delete(taskKey);\n     }\n \n     public List<AbstractTaskTO> list(final String type) {\n@@ -53,10 +53,11 @@ public List<AbstractTaskTO> listPropagationTask() {\n     }\n \n     public void deleteExecution(final String executionKey) {\n-        taskService.deleteExecution(Long.valueOf(executionKey));\n+        taskService.deleteExecution(executionKey);\n     }\n \n     public ExecTO execute(final String executionKey, final boolean dryRun) {\n-        return taskService.execute(new ExecuteQuery.Builder().key(Long.valueOf(executionKey)).dryRun(dryRun).build());\n+        return taskService.execute(\n+                new ExecuteQuery.Builder().key(executionKey).dryRun(dryRun).build());\n     }\n }"},{"sha":"22737c619aa499ca5bed8056746919513f9066ee","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserCommand.java","status":"modified","additions":1,"deletions":9,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -29,7 +29,7 @@\n public class UserCommand extends AbstractCommand {\n \n     private final UserResultManager userResultManager = new UserResultManager();\n-    \n+\n     @Override\n     public void execute(final Input input) {\n         if (StringUtils.isBlank(input.getOption())) {\n@@ -43,12 +43,6 @@ public void execute(final Input input) {\n             case LIST:\n                 new UserList(input).list();\n                 break;\n-            case GET_BY_KEY:\n-                new UserGetKey(input).get();\n-                break;\n-            case GET_BY_USERNAME:\n-                new UserGetUsername(input).get();\n-                break;\n             case READ_BY_ID:\n                 new UserReadByUserId(input).read();\n                 break;\n@@ -91,8 +85,6 @@ public enum UserOptions {\n         HELP(\"--help\"),\n         DETAILS(\"--details\"),\n         LIST(\"--list\"),\n-        GET_BY_KEY(\"--get-user-key\"),\n-        GET_BY_USERNAME(\"--get-username\"),\n         READ_BY_ID(\"--read-by-userid\"),\n         READ_BY_USERNAME(\"--read-by-username\"),\n         SEARCH_BY_ATTRIBUTE(\"--search-by-attribute\"),"},{"sha":"2eb1e3d8e9aae42e1b418c717a06c377308ac7ce","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserGetKey.java","status":"removed","additions":0,"deletions":51,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1735c44c19226d4f2351befa1efec60d9796d98a/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetKey.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1735c44c19226d4f2351befa1efec60d9796d98a/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetKey.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetKey.java?ref=1735c44c19226d4f2351befa1efec60d9796d98a","patch":"@@ -1,51 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.user;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class UserGetKey extends AbstractUserCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(UserGetKey.class);\n-\n-    private static final String GET_HELP_MESSAGE = \"user --get-user-key {USERNAME}\";\n-\n-    private final Input input;\n-\n-    public UserGetKey(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void get() {\n-        if (input.getParameters().length == 1) {\n-            try {\n-                final String userId = userSyncopeOperations.getIdFromUsername(input.firstParameter());\n-                userResultManager.genericMessage(input.firstParameter() + \" user ID is \" + userId);\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error getting user\", ex);\n-                userResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            userResultManager.commandOptionError(GET_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"42fc55868cb86304c5de44e6b2ac1e6be3c1d74a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserGetUsername.java","status":"removed","additions":0,"deletions":51,"changes":51,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1735c44c19226d4f2351befa1efec60d9796d98a/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetUsername.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1735c44c19226d4f2351befa1efec60d9796d98a/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetUsername.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserGetUsername.java?ref=1735c44c19226d4f2351befa1efec60d9796d98a","patch":"@@ -1,51 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.cli.commands.user;\n-\n-import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class UserGetUsername extends AbstractUserCommand {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(UserGetUsername.class);\n-\n-    private static final String GET_HELP_MESSAGE = \"user --get-username {USER-ID}\";\n-\n-    private final Input input;\n-\n-    public UserGetUsername(final Input input) {\n-        this.input = input;\n-    }\n-\n-    public void get() {\n-        if (input.getParameters().length == 1) {\n-            try {\n-                final String username = userSyncopeOperations.getUsernameFromId(input.firstParameter());\n-                userResultManager.genericMessage(input.firstParameter() + \" username is \" + username);\n-            } catch (final SyncopeClientException ex) {\n-                LOG.error(\"Error getting user\", ex);\n-                userResultManager.genericError(ex.getMessage());\n-            }\n-        } else {\n-            userResultManager.commandOptionError(GET_HELP_MESSAGE);\n-        }\n-    }\n-}"},{"sha":"e09ec83a84a49d32b3a4cd59124b748b1e34df76","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserReadByUsername.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserReadByUsername.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserReadByUsername.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserReadByUsername.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -44,8 +44,7 @@ public void read() {\n             final List<UserTO> userTOs = new ArrayList<>();\n             for (final String parameter : input.getParameters()) {\n                 try {\n-                    final String userId = userSyncopeOperations.getIdFromUsername(parameter);\n-                    userTOs.add(userSyncopeOperations.read(userId));\n+                    userTOs.add(userSyncopeOperations.read(parameter));\n                 } catch (final SyncopeClientException | WebServiceException ex) {\n                     LOG.error(\"Error reading user\", ex);\n                     if (ex.getMessage().startsWith(\"NotFound\")) {"},{"sha":"04bed36c7603ce62fb3ce4db634c2f6571714b26","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSyncopeOperations.java","status":"modified","additions":4,"deletions":13,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -26,7 +26,6 @@\n import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.rest.api.RESTHeaders;\n import org.apache.syncope.common.rest.api.beans.AnyListQuery;\n import org.apache.syncope.common.rest.api.beans.AnySearchQuery;\n import org.apache.syncope.common.rest.api.service.UserService;\n@@ -69,20 +68,12 @@ public PagedResult<UserTO> list() {\n         return userService.list(new AnyListQuery());\n     }\n \n-    public UserTO read(final String userId) {\n-        return userService.read(Long.valueOf(userId));\n+    public UserTO read(final String userKey) {\n+        return userService.read(userKey);\n     }\n \n-    public String getUsernameFromId(final String userId) {\n-        return userService.getUsername(Long.valueOf(userId)).getHeaderString(RESTHeaders.USERNAME);\n-    }\n-\n-    public String getIdFromUsername(final String username) {\n-        return userService.getUserKey(username).getHeaderString(RESTHeaders.USER_KEY);\n-    }\n-\n-    public void delete(final String userId) {\n-        userService.delete(Long.valueOf(userId));\n+    public void delete(final String userKey) {\n+        userService.delete(userKey);\n     }\n \n     public Map<String, BulkActionResult.Status> deleteByAttribute("},{"sha":"1a1d1857c30d1c6d258422debcc1a7476fd69b34","filename":"client/cli/src/test/resources/schema20.sql","status":"modified","additions":202,"deletions":199,"changes":401,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Fschema20.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Fschema20.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Ftest%2Fresources%2Fschema20.sql?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -15,204 +15,207 @@\n -- specific language governing permissions and limitations\n -- under the License.\n \n-CREATE TABLE AccountPolicy (id BIGINT NOT NULL, description VARCHAR(255), maxAuthenticationAttempts INTEGER, propagateSuspension INTEGER, PRIMARY KEY (id));\n-CREATE TABLE AccountPolicy_ExternalResource (accountPolicy_id BIGINT, resource_name VARCHAR(255));\n-CREATE TABLE AccountRuleConfInstance (id BIGINT NOT NULL, serializedInstance CLOB, ACCOUNTPOLICY_ID BIGINT, PRIMARY KEY (id));\n-CREATE TABLE ADynGroupMembership (id BIGINT NOT NULL, fiql VARCHAR(255), GROUP_ID BIGINT, ANYTYPE_NAME VARCHAR(255), PRIMARY KEY (id));\n-CREATE TABLE ADynGroupMembership_AnyObject (aDynGroupMembership_id BIGINT, anyObject_id BIGINT);\n-CREATE TABLE AMembership (id BIGINT NOT NULL, anyObject_id BIGINT, group_id BIGINT, PRIMARY KEY (id));\n-CREATE TABLE AnyAbout (id BIGINT NOT NULL, filter CLOB, ANYTYPE_NAME VARCHAR(255), NOTIFICATION_ID BIGINT, PRIMARY KEY (id), CONSTRAINT U_NYABOUT_NOTIFICATION_ID UNIQUE (NOTIFICATION_ID, ANYTYPE_NAME));\n-CREATE TABLE AnyObject (id BIGINT NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, status VARCHAR(255), workflowId VARCHAR(255), REALM_ID BIGINT, TYPE_NAME VARCHAR(255), PRIMARY KEY (id));\n-CREATE TABLE AnyObject_AnyTypeClass (anyObject_id BIGINT, anyTypeClass_name VARCHAR(255));\n-CREATE TABLE AnyObject_ExternalResource (anyObject_id BIGINT, resource_name VARCHAR(255));\n-CREATE TABLE AnyTemplatePullTask (id BIGINT NOT NULL, template CLOB, ANYTYPE_NAME VARCHAR(255), PULLTASK_ID BIGINT, PRIMARY KEY (id), CONSTRAINT U_NYTMTSK_PULLTASK_ID UNIQUE (PULLTASK_ID, ANYTYPE_NAME));\n-CREATE TABLE AnyTemplateRealm (id BIGINT NOT NULL, template CLOB, REALM_ID BIGINT, ANYTYPE_NAME VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_NYTMRLM_REALM_ID UNIQUE (REALM_ID, ANYTYPE_NAME));\n-CREATE TABLE AnyType (name VARCHAR(255) NOT NULL, kind VARCHAR(20), PRIMARY KEY (name));\n-CREATE TABLE AnyTypeClass (name VARCHAR(255) NOT NULL, PRIMARY KEY (name));\n-CREATE TABLE AnyType_AnyTypeClass (anyType_name VARCHAR(255), anyTypeClass_name VARCHAR(255));\n-CREATE TABLE APlainAttr (id BIGINT NOT NULL, OWNER_ID BIGINT, schema_name VARCHAR(255), PRIMARY KEY (id));\n-CREATE TABLE APlainAttrUniqueValue (id BIGINT NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID BIGINT, schema_name VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_PLNTQVL_BOOLEANVALUE1 UNIQUE (booleanValue, schema_name), CONSTRAINT U_PLNTQVL_DATEVALUE1 UNIQUE (dateValue, schema_name), CONSTRAINT U_PLNTQVL_STRINGVALUE1 UNIQUE (stringValue, schema_name), CONSTRAINT U_PLNTQVL_DOUBLEVALUE1 UNIQUE (doubleValue, schema_name), CONSTRAINT U_PLNTQVL_LONGVALUE1 UNIQUE (longValue, schema_name));\n-CREATE TABLE APlainAttrValue (id BIGINT NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID BIGINT, PRIMARY KEY (id));\n-CREATE TABLE ARelationship (id BIGINT NOT NULL, left_anyObject_id BIGINT, right_anyObject_id BIGINT, TYPE_NAME VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_RLTNSHP_TYPE_NAME1 UNIQUE (TYPE_NAME, left_anyObject_id, right_anyObject_id));\n-CREATE TABLE ConnInstance (id BIGINT NOT NULL, bundleName VARCHAR(255), connRequestTimeout INTEGER, connectorName VARCHAR(255), displayName VARCHAR(255), jsonConf CLOB, location VARCHAR(255), version VARCHAR(255), maxIdle INTEGER, maxObjects INTEGER, maxWait BIGINT, minEvictableIdleTimeMillis BIGINT, minIdle INTEGER, PRIMARY KEY (id), CONSTRAINT U_CNNNTNC_DISPLAYNAME UNIQUE (displayName));\n-CREATE TABLE ConnInstance_capabilities (connInstance_id BIGINT, capability VARCHAR(20));\n-CREATE TABLE CPlainAttr (id BIGINT NOT NULL, schema_name VARCHAR(255), OWNER_ID BIGINT, PRIMARY KEY (id));\n-CREATE TABLE CPlainAttrUniqueValue (id BIGINT NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID BIGINT, schema_name VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_CPLNQVL_BOOLEANVALUE UNIQUE (booleanValue, schema_name), CONSTRAINT U_CPLNQVL_DATEVALUE UNIQUE (dateValue, schema_name), CONSTRAINT U_CPLNQVL_STRINGVALUE UNIQUE (stringValue, schema_name), CONSTRAINT U_CPLNQVL_DOUBLEVALUE UNIQUE (doubleValue, schema_name), CONSTRAINT U_CPLNQVL_LONGVALUE UNIQUE (longValue, schema_name));\n-CREATE TABLE CPlainAttrValue (id BIGINT NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID BIGINT, PRIMARY KEY (id));\n-CREATE TABLE DerSchema (name VARCHAR(255) NOT NULL, expression VARCHAR(255), ANYTYPECLASS_NAME VARCHAR(255), PRIMARY KEY (name));\n-CREATE TABLE DynRoleMembership (id BIGINT NOT NULL, fiql VARCHAR(255), ROLE_NAME VARCHAR(255), PRIMARY KEY (id));\n-CREATE TABLE DynRoleMembership_User (dynRoleMembership_id BIGINT, user_id BIGINT);\n-CREATE TABLE ExternalResource (name VARCHAR(255) NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, createTraceLevel VARCHAR(20), deleteTraceLevel VARCHAR(20), enforceMandatoryCondition INTEGER, jsonConf CLOB, overrideCapabilities INTEGER, propagationPriority INTEGER, pullTraceLevel VARCHAR(20), randomPwdIfNotProvided INTEGER, updateTraceLevel VARCHAR(20), ACCOUNTPOLICY_ID BIGINT, CONNECTOR_ID BIGINT, PASSWORDPOLICY_ID BIGINT, PULLPOLICY_ID BIGINT, PRIMARY KEY (name));\n-CREATE TABLE ExternalResource_capOverride (resource_name VARCHAR(255), capabilityOverride VARCHAR(20));\n-CREATE TABLE ExternalResource_PropActions (resource_name VARCHAR(255), actionClassName VARCHAR(255));\n-CREATE TABLE GPlainAttr (id BIGINT NOT NULL, schema_name VARCHAR(255), OWNER_ID BIGINT, PRIMARY KEY (id));\n-CREATE TABLE GPlainAttrUniqueValue (id BIGINT NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID BIGINT, schema_name VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_GPLNQVL_BOOLEANVALUE UNIQUE (booleanValue, schema_name), CONSTRAINT U_GPLNQVL_DATEVALUE UNIQUE (dateValue, schema_name), CONSTRAINT U_GPLNQVL_STRINGVALUE UNIQUE (stringValue, schema_name), CONSTRAINT U_GPLNQVL_DOUBLEVALUE UNIQUE (doubleValue, schema_name), CONSTRAINT U_GPLNQVL_LONGVALUE UNIQUE (longValue, schema_name));\n-CREATE TABLE GPlainAttrValue (id BIGINT NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID BIGINT, PRIMARY KEY (id));\n-CREATE TABLE MailTemplate (name VARCHAR(255) NOT NULL, htmlTemplate CLOB, textTemplate CLOB, PRIMARY KEY (name));\n-CREATE TABLE Mapping (id BIGINT NOT NULL, connObjectLink VARCHAR(255), PROVISION_ID BIGINT, PRIMARY KEY (id));\n-CREATE TABLE MappingItem (id BIGINT NOT NULL, connObjectKey INTEGER, extAttrName VARCHAR(255), intAttrName VARCHAR(255), intMappingType VARCHAR(22), mandatoryCondition VARCHAR(255), password INTEGER, purpose VARCHAR(20), MAPPING_ID BIGINT, PRIMARY KEY (id));\n-CREATE TABLE MappingItem_Transformer (mappingItem_id BIGINT, transformerClassName VARCHAR(255));\n-CREATE TABLE Notification (id BIGINT NOT NULL, active INTEGER, recipientAttrName VARCHAR(255), recipientAttrType VARCHAR(22), recipientsFIQL VARCHAR(255), recipientsProviderClassName VARCHAR(255), selfAsRecipient INTEGER, sender VARCHAR(255), subject VARCHAR(255), traceLevel VARCHAR(20), template_name VARCHAR(255), PRIMARY KEY (id));\n-CREATE TABLE NotificationTask_recipients (notificationTask_id BIGINT, address VARCHAR(255));\n-CREATE TABLE Notification_events (notification_id BIGINT, event VARCHAR(255));\n-CREATE TABLE Notification_staticRecipients (notification_id BIGINT, staticRecipients VARCHAR(255));\n-CREATE TABLE OPENJPA_SEQUENCES_TABLE (ID VARCHAR(255) NOT NULL, SEQUENCE_VALUE BIGINT, PRIMARY KEY (ID));\n-CREATE TABLE PasswordPolicy (id BIGINT NOT NULL, description VARCHAR(255), allowNullPassword INTEGER, historyLength INTEGER, PRIMARY KEY (id));\n-CREATE TABLE PasswordRuleConfInstance (id BIGINT NOT NULL, serializedInstance CLOB, PASSWORDPOLICY_ID BIGINT, PRIMARY KEY (id));\n-CREATE TABLE PlainSchema (name VARCHAR(255) NOT NULL, cipherAlgorithm VARCHAR(20), conversionPattern VARCHAR(255), enumerationKeys CLOB, enumerationValues CLOB, mandatoryCondition VARCHAR(255), mimeType VARCHAR(255), multivalue INTEGER, readonly INTEGER, secretKey VARCHAR(255), type VARCHAR(20), uniqueConstraint INTEGER, validatorClass VARCHAR(255), ANYTYPECLASS_NAME VARCHAR(255), PRIMARY KEY (name));\n-CREATE TABLE Provision (id BIGINT NOT NULL, objectClass VARCHAR(255), serializedSyncToken CLOB, ANYTYPE_NAME VARCHAR(255), RESOURCE_NAME VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_PROVSON_RESOURCE_NAME UNIQUE (RESOURCE_NAME, ANYTYPE_NAME));\n-CREATE TABLE PullPolicy (id BIGINT NOT NULL, description VARCHAR(255), specification CLOB, PRIMARY KEY (id));\n-CREATE TABLE PullTask_actionsClassNames (pullTask_id BIGINT, actionClassName VARCHAR(255));\n-CREATE TABLE PushPolicy (id BIGINT NOT NULL, description VARCHAR(255), specification CLOB, PRIMARY KEY (id));\n-CREATE TABLE PushTaskAnyFilter (id BIGINT NOT NULL, fiql VARCHAR(255), PUSHTASK_ID BIGINT, ANYTYPE_NAME VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_PSHTLTR_PUSHTASK_ID UNIQUE (PUSHTASK_ID, ANYTYPE_NAME));\n-CREATE TABLE PushTask_actionsClassNames (pushTask_id BIGINT, actionClassName VARCHAR(255));\n-CREATE TABLE Realm (id BIGINT NOT NULL, name VARCHAR(255), ACCOUNTPOLICY_ID BIGINT, PARENT_ID BIGINT, PASSWORDPOLICY_ID BIGINT, PRIMARY KEY (id), CONSTRAINT U_REALM_NAME UNIQUE (name, PARENT_ID));\n-CREATE TABLE Realm_actionsClassNames (realm_id BIGINT, actionClassName VARCHAR(255));\n-CREATE TABLE RelationshipType (name VARCHAR(255) NOT NULL, description VARCHAR(255), PRIMARY KEY (name));\n-CREATE TABLE Report (id BIGINT NOT NULL, active INTEGER, cronExpression VARCHAR(255), name VARCHAR(255) NOT NULL, template_name VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_REPORT_NAME UNIQUE (name));\n-CREATE TABLE ReportExec (id BIGINT NOT NULL, endDate TIMESTAMP, message CLOB, startDate TIMESTAMP, status VARCHAR(255), execResult BLOB, REPORT_ID BIGINT, PRIMARY KEY (id));\n-CREATE TABLE ReportletConfInstance (id BIGINT NOT NULL, serializedInstance CLOB, REPORT_ID BIGINT, PRIMARY KEY (id));\n-CREATE TABLE ReportTemplate (name VARCHAR(255) NOT NULL, csvTemplate CLOB, foTemplate CLOB, htmlTemplate CLOB, PRIMARY KEY (name));\n-CREATE TABLE SecurityQuestion (id BIGINT NOT NULL, content VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_SCRTSTN_CONTENT UNIQUE (content));\n-CREATE TABLE SyncopeConf (id BIGINT NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, PRIMARY KEY (id));\n-CREATE TABLE SyncopeDomain (name VARCHAR(255) NOT NULL, adminCipherAlgorithm VARCHAR(20), adminPwd VARCHAR(255), PRIMARY KEY (name));\n-CREATE TABLE SyncopeGroup (id BIGINT NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, status VARCHAR(255), workflowId VARCHAR(255), name VARCHAR(255), REALM_ID BIGINT, GROUPOWNER_ID BIGINT, USEROWNER_ID BIGINT, PRIMARY KEY (id), CONSTRAINT U_SYNCGRP_NAME UNIQUE (name));\n-CREATE TABLE SyncopeGroup_AnyTypeClass (group_id BIGINT, anyTypeClass_name VARCHAR(255));\n-CREATE TABLE SyncopeGroup_ExternalResource (group_id BIGINT, resource_name VARCHAR(255));\n+CREATE TABLE AccountPolicy (key VARCHAR(36) NOT NULL, description VARCHAR(255), maxAuthenticationAttempts INTEGER, propagateSuspension INTEGER, PRIMARY KEY (key));\n+CREATE TABLE AccountPolicy_ExternalResource (accountPolicy_key VARCHAR(36), resource_key VARCHAR(255));\n+CREATE TABLE AccountRuleConfInstance (key VARCHAR(36) NOT NULL, serializedInstance CLOB, ACCOUNTPOLICY_KEY VARCHAR(36), PRIMARY KEY (key));\n+CREATE TABLE ADynGroupMembership (key VARCHAR(36) NOT NULL, fiql VARCHAR(255), GROUP_KEY VARCHAR(36), ANYTYPE_KEY VARCHAR(255), PRIMARY KEY (key));\n+CREATE TABLE ADynGroupMembership_AnyObject (aDynGroupMembership_key VARCHAR(36), anyObject_key VARCHAR(36));\n+CREATE TABLE AMembership (key VARCHAR(36) NOT NULL, anyObject_key VARCHAR(36), group_key VARCHAR(36), PRIMARY KEY (key));\n+CREATE TABLE AnyAbout (key VARCHAR(36) NOT NULL, filter CLOB, NOTIFICATION_KEY VARCHAR(36), ANYTYPE_KEY VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_NYABOUT_NOTIFICATION_KEY UNIQUE (NOTIFICATION_KEY, ANYTYPE_KEY));\n+CREATE TABLE AnyObject (key VARCHAR(36) NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, status VARCHAR(255), workflowId VARCHAR(255), REALM_KEY VARCHAR(36), TYPE_KEY VARCHAR(255), PRIMARY KEY (key));\n+CREATE TABLE AnyObject_AnyTypeClass (anyObject_key VARCHAR(36), anyTypeClass_key VARCHAR(255));\n+CREATE TABLE AnyObject_ExternalResource (anyObject_key VARCHAR(36), resource_key VARCHAR(255));\n+CREATE TABLE AnyTemplatePullTask (key VARCHAR(36) NOT NULL, template CLOB, PULLTASK_KEY VARCHAR(36), ANYTYPE_KEY VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_NYTMTSK_PULLTASK_KEY UNIQUE (PULLTASK_KEY, ANYTYPE_KEY));\n+CREATE TABLE AnyTemplateRealm (key VARCHAR(36) NOT NULL, template CLOB, REALM_KEY VARCHAR(36), ANYTYPE_KEY VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_NYTMRLM_REALM_KEY UNIQUE (REALM_KEY, ANYTYPE_KEY));\n+CREATE TABLE AnyType (key VARCHAR(255) NOT NULL, kind VARCHAR(20), PRIMARY KEY (key));\n+CREATE TABLE AnyTypeClass (key VARCHAR(255) NOT NULL, PRIMARY KEY (key));\n+CREATE TABLE AnyType_AnyTypeClass (anyType_key VARCHAR(255), anyTypeClass_key VARCHAR(255));\n+CREATE TABLE APlainAttr (key VARCHAR(36) NOT NULL, OWNER_KEY VARCHAR(36), schema_key VARCHAR(255), PRIMARY KEY (key));\n+CREATE TABLE APlainAttrUniqueValue (key VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_KEY VARCHAR(36), schema_key VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_PLNTQVL_BOOLEANVALUE1 UNIQUE (booleanValue, schema_key), CONSTRAINT U_PLNTQVL_DATEVALUE1 UNIQUE (dateValue, schema_key), CONSTRAINT U_PLNTQVL_STRINGVALUE1 UNIQUE (stringValue, schema_key), CONSTRAINT U_PLNTQVL_DOUBLEVALUE1 UNIQUE (doubleValue, schema_key), CONSTRAINT U_PLNTQVL_LONGVALUE1 UNIQUE (longValue, schema_key));\n+CREATE TABLE APlainAttrValue (key VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_KEY VARCHAR(36), PRIMARY KEY (key));\n+CREATE TABLE ARelationship (key VARCHAR(36) NOT NULL, left_anyObject_key VARCHAR(36), right_anyObject_key VARCHAR(36), TYPE_KEY VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_RLTNSHP_TYPE_KEY1 UNIQUE (TYPE_KEY, left_anyObject_key, right_anyObject_key));\n+CREATE TABLE ConnInstance (key VARCHAR(36) NOT NULL, bundleName VARCHAR(255), connRequestTimeout INTEGER, connectorName VARCHAR(255), displayName VARCHAR(255), jsonConf CLOB, location VARCHAR(255), version VARCHAR(255), maxIdle INTEGER, maxObjects INTEGER, maxWait BIGINT, minEvictableIdleTimeMillis BIGINT, minIdle INTEGER, PRIMARY KEY (key), CONSTRAINT U_CNNNTNC_DISPLAYNAME UNIQUE (displayName));\n+CREATE TABLE ConnInstance_capabilities (connInstance_key VARCHAR(36), capability VARCHAR(20));\n+CREATE TABLE CPlainAttr (key VARCHAR(36) NOT NULL, schema_key VARCHAR(255), OWNER_KEY VARCHAR(255), PRIMARY KEY (key));\n+CREATE TABLE CPlainAttrUniqueValue (key VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_KEY VARCHAR(36), schema_key VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_CPLNQVL_BOOLEANVALUE UNIQUE (booleanValue, schema_key), CONSTRAINT U_CPLNQVL_DATEVALUE UNIQUE (dateValue, schema_key), CONSTRAINT U_CPLNQVL_STRINGVALUE UNIQUE (stringValue, schema_key), CONSTRAINT U_CPLNQVL_DOUBLEVALUE UNIQUE (doubleValue, schema_key), CONSTRAINT U_CPLNQVL_LONGVALUE UNIQUE (longValue, schema_key));\n+CREATE TABLE CPlainAttrValue (key VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_KEY VARCHAR(36), PRIMARY KEY (key));\n+CREATE TABLE DerSchema (key VARCHAR(255) NOT NULL, expression VARCHAR(255), ANYTYPECLASS_KEY VARCHAR(255), PRIMARY KEY (key));\n+CREATE TABLE DynRoleMembership (key VARCHAR(36) NOT NULL, fiql VARCHAR(255), ROLE_KEY VARCHAR(255), PRIMARY KEY (key));\n+CREATE TABLE DynRoleMembership_User (dynRoleMembership_key VARCHAR(36), user_key VARCHAR(36));\n+CREATE TABLE ExternalResource (key VARCHAR(255) NOT NULL, createTraceLevel VARCHAR(20), deleteTraceLevel VARCHAR(20), enforceMandatoryCondition INTEGER, jsonConf CLOB, overrideCapabilities INTEGER, propagationPriority INTEGER, pullTraceLevel VARCHAR(20), randomPwdIfNotProvided INTEGER, updateTraceLevel VARCHAR(20), ACCOUNTPOLICY_KEY VARCHAR(36), CONNECTOR_KEY VARCHAR(36), PASSWORDPOLICY_KEY VARCHAR(36), PULLPOLICY_KEY VARCHAR(36), PRIMARY KEY (key));\n+CREATE TABLE ExternalResource_capOverride (resource_key VARCHAR(255), capabilityOverride VARCHAR(20));\n+CREATE TABLE ExternalResource_PropActions (resource_key VARCHAR(255), actionClassName VARCHAR(255));\n+CREATE TABLE GPlainAttr (key VARCHAR(36) NOT NULL, schema_key VARCHAR(255), OWNER_KEY VARCHAR(36), PRIMARY KEY (key));\n+CREATE TABLE GPlainAttrUniqueValue (key VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_KEY VARCHAR(36), schema_key VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_GPLNQVL_BOOLEANVALUE UNIQUE (booleanValue, schema_key), CONSTRAINT U_GPLNQVL_DATEVALUE UNIQUE (dateValue, schema_key), CONSTRAINT U_GPLNQVL_STRINGVALUE UNIQUE (stringValue, schema_key), CONSTRAINT U_GPLNQVL_DOUBLEVALUE UNIQUE (doubleValue, schema_key), CONSTRAINT U_GPLNQVL_LONGVALUE UNIQUE (longValue, schema_key));\n+CREATE TABLE GPlainAttrValue (key VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_KEY VARCHAR(36), PRIMARY KEY (key));\n+CREATE TABLE MailTemplate (key VARCHAR(255) NOT NULL, htmlTemplate CLOB, textTemplate CLOB, PRIMARY KEY (key));\n+CREATE TABLE Mapping (key VARCHAR(36) NOT NULL, connObjectLink VARCHAR(255), PROVISION_KEY VARCHAR(36), PRIMARY KEY (key));\n+CREATE TABLE MappingItem (key VARCHAR(36) NOT NULL, connObjectKey INTEGER, extAttrName VARCHAR(255), intAttrName VARCHAR(255), intMappingType VARCHAR(22), mandatoryCondition VARCHAR(255), password INTEGER, purpose VARCHAR(20), MAPPING_KEY VARCHAR(36), PRIMARY KEY (key));\n+CREATE TABLE MappingItem_Transformer (mappingItem_key VARCHAR(36), transformerClassName VARCHAR(255));\n+CREATE TABLE Notification (key VARCHAR(36) NOT NULL, active INTEGER, recipientAttrName VARCHAR(255), recipientAttrType VARCHAR(22), recipientsFIQL VARCHAR(255), recipientsProviderClassName VARCHAR(255), selfAsRecipient INTEGER, sender VARCHAR(255), subject VARCHAR(255), traceLevel VARCHAR(20), template_key VARCHAR(255), PRIMARY KEY (key));\n+CREATE TABLE NotificationTask_recipients (notificationTask_key VARCHAR(36), address VARCHAR(255));\n+CREATE TABLE Notification_events (notification_key VARCHAR(36), event VARCHAR(255));\n+CREATE TABLE Notification_staticRecipients (notification_key VARCHAR(36), staticRecipients VARCHAR(255));\n+CREATE TABLE PasswordPolicy (key VARCHAR(36) NOT NULL, description VARCHAR(255), allowNullPassword INTEGER, historyLength INTEGER, PRIMARY KEY (key));\n+CREATE TABLE PasswordRuleConfInstance (key VARCHAR(36) NOT NULL, serializedInstance CLOB, PASSWORDPOLICY_KEY VARCHAR(36), PRIMARY KEY (key));\n+CREATE TABLE PlainSchema (key VARCHAR(255) NOT NULL, cipherAlgorithm VARCHAR(20), conversionPattern VARCHAR(255), enumerationKeys CLOB, enumerationValues CLOB, mandatoryCondition VARCHAR(255), mimeType VARCHAR(255), multivalue INTEGER, readonly INTEGER, secretKey VARCHAR(255), type VARCHAR(20), uniqueConstraint INTEGER, validatorClass VARCHAR(255), ANYTYPECLASS_KEY VARCHAR(255), PRIMARY KEY (key));\n+CREATE TABLE Provision (key VARCHAR(36) NOT NULL, objectClass VARCHAR(255), serializedSyncToken CLOB, ANYTYPE_KEY VARCHAR(255), RESOURCE_KEY VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_PROVSON_RESOURCE_KEY UNIQUE (RESOURCE_KEY, ANYTYPE_KEY));\n+CREATE TABLE Provision_AnyTypeClass (provision_key VARCHAR(36), anyTypeClass_key VARCHAR(255));\n+CREATE TABLE PullPolicy (key VARCHAR(36) NOT NULL, description VARCHAR(255), specification CLOB, PRIMARY KEY (key));\n+CREATE TABLE PullTask_actionsClassNames (pullTask_key VARCHAR(36), actionClassName VARCHAR(255));\n+CREATE TABLE PushPolicy (key VARCHAR(36) NOT NULL, description VARCHAR(255), specification CLOB, PRIMARY KEY (key));\n+CREATE TABLE PushTaskAnyFilter (key VARCHAR(36) NOT NULL, fiql VARCHAR(255), PUSHTASK_KEY VARCHAR(36), ANYTYPE_KEY VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_PSHTLTR_PUSHTASK_KEY UNIQUE (PUSHTASK_KEY, ANYTYPE_KEY));\n+CREATE TABLE PushTask_actionsClassNames (pushTask_key VARCHAR(36), actionClassName VARCHAR(255));\n+CREATE TABLE Realm (key VARCHAR(36) NOT NULL, name VARCHAR(255), ACCOUNTPOLICY_KEY VARCHAR(36), PARENT_KEY VARCHAR(36), PASSWORDPOLICY_KEY VARCHAR(36), PRIMARY KEY (key), CONSTRAINT U_REALM_KEY UNIQUE (key, PARENT_KEY));\n+CREATE TABLE Realm_actionsClassNames (realm_key VARCHAR(36), actionClassName VARCHAR(255));\n+CREATE TABLE RelationshipType (key VARCHAR(255) NOT NULL, description VARCHAR(255), PRIMARY KEY (key));\n+CREATE TABLE Report (key VARCHAR(36) NOT NULL, active INTEGER, cronExpression VARCHAR(255), name VARCHAR(255) NOT NULL, template_key VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_REPORT_NAME UNIQUE (name));\n+CREATE TABLE ReportExec (key VARCHAR(36) NOT NULL, endDate TIMESTAMP, message CLOB, startDate TIMESTAMP, status VARCHAR(255), execResult BLOB, REPORT_KEY VARCHAR(36), PRIMARY KEY (key));\n+CREATE TABLE ReportletConfInstance (key VARCHAR(36) NOT NULL, serializedInstance CLOB, REPORT_KEY VARCHAR(36), PRIMARY KEY (key));\n+CREATE TABLE ReportTemplate (key VARCHAR(255) NOT NULL, csvTemplate CLOB, foTemplate CLOB, htmlTemplate CLOB, PRIMARY KEY (key));\n+CREATE TABLE SecurityQuestion (key VARCHAR(36) NOT NULL, content VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_SCRTSTN_CONTENT UNIQUE (content));\n+CREATE TABLE SyncopeConf (key VARCHAR(255) NOT NULL, PRIMARY KEY (key));\n+CREATE TABLE SyncopeDomain (key VARCHAR(255) NOT NULL, adminCipherAlgorithm VARCHAR(20), adminPwd VARCHAR(255), PRIMARY KEY (key));\n+CREATE TABLE SyncopeGroup (key VARCHAR(36) NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, status VARCHAR(255), workflowId VARCHAR(255), name VARCHAR(255), REALM_KEY VARCHAR(36), GROUPOWNER_KEY VARCHAR(36), USEROWNER_KEY VARCHAR(36), PRIMARY KEY (key), CONSTRAINT U_SYNCGRP_NAME UNIQUE (name));\n+CREATE TABLE SyncopeGroup_AnyTypeClass (group_key VARCHAR(36), anyTypeClass_key VARCHAR(255));\n+CREATE TABLE SyncopeGroup_ExternalResource (group_key VARCHAR(36), resource_key VARCHAR(255));\n CREATE TABLE SyncopeLogger (logName VARCHAR(255) NOT NULL, logLevel VARCHAR(20) NOT NULL, logType VARCHAR(20) NOT NULL, PRIMARY KEY (logName));\n-CREATE TABLE SyncopeRole (name VARCHAR(255) NOT NULL, PRIMARY KEY (name));\n-CREATE TABLE SyncopeRole_entitlements (role_name VARCHAR(255), entitlement VARCHAR(255));\n-CREATE TABLE SyncopeRole_Realm (role_name VARCHAR(255), realm_id BIGINT);\n-CREATE TABLE SyncopeUser (id BIGINT NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, status VARCHAR(255), workflowId VARCHAR(255), changePwdDate TIMESTAMP, cipherAlgorithm VARCHAR(20), failedLogins INTEGER, lastLoginDate TIMESTAMP, mustChangePassword INTEGER, password VARCHAR(255), securityAnswer VARCHAR(255), suspended INTEGER, token CLOB, tokenExpireTime TIMESTAMP, username VARCHAR(255), REALM_ID BIGINT, SECURITYQUESTION_ID BIGINT, PRIMARY KEY (id), CONSTRAINT U_SYNCPSR_USERNAME UNIQUE (username));\n-CREATE TABLE SyncopeUser_AnyTypeClass (user_id BIGINT, anyTypeClass_name VARCHAR(255));\n-CREATE TABLE SyncopeUser_ExternalResource (user_id BIGINT, resource_name VARCHAR(255));\n-CREATE TABLE SyncopeUser_passwordHistory (user_id BIGINT, passwordHistoryValue VARCHAR(255));\n-CREATE TABLE SyncopeUser_SyncopeRole (user_id BIGINT, role_name VARCHAR(255));\n-CREATE TABLE Task (id BIGINT NOT NULL, DTYPE VARCHAR(31), active INTEGER, cronExpression VARCHAR(255), description VARCHAR(255), jobDelegateClassName VARCHAR(255), name VARCHAR(255), startAt TIMESTAMP, matchingRule VARCHAR(20), performCreate INTEGER, performDelete INTEGER, performUpdate INTEGER, pullStatus INTEGER, unmatchingRule VARCHAR(20), pullMode VARCHAR(23), reconciliationFilterBuilderClassName VARCHAR(255), RESOURCE_NAME VARCHAR(255), DESTINATIONREALM_ID BIGINT, executed INTEGER, htmlBody CLOB, sender VARCHAR(255), subject VARCHAR(255), textBody CLOB, traceLevel VARCHAR(20), anyKey BIGINT, anyType VARCHAR(255), anyTypeKind VARCHAR(20), attributes CLOB, connObjectKey VARCHAR(255), objectClassName VARCHAR(255), oldConnObjectKey VARCHAR(255), operation VARCHAR(20), PRIMARY KEY (id));\n-CREATE TABLE TaskExec (id BIGINT NOT NULL, endDate TIMESTAMP, message CLOB, startDate TIMESTAMP, status VARCHAR(255), TASK_ID BIGINT, PRIMARY KEY (id));\n-CREATE TABLE TypeExtension (id BIGINT NOT NULL, GROUP_ID BIGINT, ANYTYPE_NAME VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_TYPXNSN_GROUP_ID UNIQUE (GROUP_ID, ANYTYPE_NAME));\n-CREATE TABLE TypeExtension_AnyTypeClass (typeExtension_id BIGINT, anyTypeClass_name VARCHAR(255));\n-CREATE TABLE UDynGroupMembership (id BIGINT NOT NULL, fiql VARCHAR(255), GROUP_ID BIGINT, PRIMARY KEY (id));\n-CREATE TABLE UDynGroupMembership_User (uDynGroupMembership_id BIGINT, user_id BIGINT);\n-CREATE TABLE UMembership (id BIGINT NOT NULL, user_id BIGINT, group_id BIGINT, PRIMARY KEY (id));\n-CREATE TABLE UPlainAttr (id BIGINT NOT NULL, OWNER_ID BIGINT, schema_name VARCHAR(255), PRIMARY KEY (id));\n-CREATE TABLE UPlainAttrUniqueValue (id BIGINT NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID BIGINT, schema_name VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_PLNTQVL_BOOLEANVALUE UNIQUE (booleanValue, schema_name), CONSTRAINT U_PLNTQVL_DATEVALUE UNIQUE (dateValue, schema_name), CONSTRAINT U_PLNTQVL_STRINGVALUE UNIQUE (stringValue, schema_name), CONSTRAINT U_PLNTQVL_DOUBLEVALUE UNIQUE (doubleValue, schema_name), CONSTRAINT U_PLNTQVL_LONGVALUE UNIQUE (longValue, schema_name));\n-CREATE TABLE UPlainAttrValue (id BIGINT NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_ID BIGINT, PRIMARY KEY (id));\n-CREATE TABLE URelationship (id BIGINT NOT NULL, user_id BIGINT, anyObject_id BIGINT, TYPE_NAME VARCHAR(255), PRIMARY KEY (id), CONSTRAINT U_RLTNSHP_TYPE_NAME UNIQUE (TYPE_NAME, user_id, anyObject_id));\n-CREATE TABLE VirSchema (name VARCHAR(255) NOT NULL, extAttrName VARCHAR(255), readonly INTEGER, ANYTYPECLASS_NAME VARCHAR(255), PROVISION_ID BIGINT, PRIMARY KEY (name));\n-CREATE INDEX I_CCNTSRC_ACCOUNTPOLICY_ID ON AccountPolicy_ExternalResource (accountPolicy_id);\n-CREATE INDEX I_CCNTSRC_ELEMENT ON AccountPolicy_ExternalResource (resource_name);\n-CREATE INDEX I_CCNTTNC_ACCOUNTPOLICY ON AccountRuleConfInstance (ACCOUNTPOLICY_ID);\n-CREATE INDEX I_DYNGSHP_ANYTYPE ON ADynGroupMembership (ANYTYPE_NAME);\n-CREATE INDEX I_DYNGSHP_GROUP ON ADynGroupMembership (GROUP_ID);\n-CREATE INDEX I_DYNGJCT_ADYNGROUPMEMBERSHIP_ID ON ADynGroupMembership_AnyObject (aDynGroupMembership_id);\n-CREATE INDEX I_DYNGJCT_ELEMENT ON ADynGroupMembership_AnyObject (anyObject_id);\n-CREATE INDEX I_MMBRSHP_LEFTEND1 ON AMembership (anyObject_id);\n-CREATE INDEX I_MMBRSHP_RIGHTEND1 ON AMembership (group_id);\n-CREATE INDEX I_NYABOUT_ANYTYPE ON AnyAbout (ANYTYPE_NAME);\n-CREATE INDEX I_NYABOUT_NOTIFICATION ON AnyAbout (NOTIFICATION_ID);\n-CREATE INDEX I_NYOBJCT_REALM ON AnyObject (REALM_ID);\n-CREATE INDEX I_NYOBJCT_TYPE ON AnyObject (TYPE_NAME);\n-CREATE INDEX I_NYBJLSS_ANYOBJECT_ID ON AnyObject_AnyTypeClass (anyObject_id);\n-CREATE INDEX I_NYBJLSS_ELEMENT ON AnyObject_AnyTypeClass (anyTypeClass_name);\n-CREATE INDEX I_NYBJSRC_ANYOBJECT_ID ON AnyObject_ExternalResource (anyObject_id);\n-CREATE INDEX I_NYBJSRC_ELEMENT ON AnyObject_ExternalResource (resource_name);\n-CREATE INDEX I_NYTMTSK_ANYTYPE ON AnyTemplatePullTask (ANYTYPE_NAME);\n-CREATE INDEX I_NYTMTSK_PULLTASK ON AnyTemplatePullTask (PULLTASK_ID);\n-CREATE INDEX I_NYTMRLM_ANYTYPE ON AnyTemplateRealm (ANYTYPE_NAME);\n-CREATE INDEX I_NYTMRLM_REALM ON AnyTemplateRealm (REALM_ID);\n-CREATE INDEX I_NYTYLSS_ANYTYPE_NAME ON AnyType_AnyTypeClass (anyType_name);\n-CREATE INDEX I_NYTYLSS_ELEMENT ON AnyType_AnyTypeClass (anyTypeClass_name);\n-CREATE INDEX I_PLINTTR_OWNER ON APlainAttr (OWNER_ID);\n-CREATE INDEX I_PLINTTR_SCHEMA ON APlainAttr (schema_name);\n-CREATE INDEX I_PLNTQVL_ATTRIBUTE1 ON APlainAttrUniqueValue (ATTRIBUTE_ID);\n-CREATE INDEX I_PLNTQVL_SCHEMA1 ON APlainAttrUniqueValue (schema_name);\n-CREATE INDEX I_PLNTRVL_ATTRIBUTE1 ON APlainAttrValue (ATTRIBUTE_ID);\n-CREATE INDEX I_RLTNSHP_LEFTEND1 ON ARelationship (left_anyObject_id);\n-CREATE INDEX I_RLTNSHP_RIGHTEND1 ON ARelationship (right_anyObject_id);\n-CREATE INDEX I_RLTNSHP_TYPE1 ON ARelationship (TYPE_NAME);\n-CREATE INDEX I_CNNNLTS_CONNINSTANCE_ID ON ConnInstance_capabilities (connInstance_id);\n-CREATE INDEX I_CPLNTTR_OWNER ON CPlainAttr (OWNER_ID);\n-CREATE INDEX I_CPLNTTR_SCHEMA ON CPlainAttr (schema_name);\n-CREATE INDEX I_CPLNQVL_ATTRIBUTE ON CPlainAttrUniqueValue (ATTRIBUTE_ID);\n-CREATE INDEX I_CPLNQVL_SCHEMA ON CPlainAttrUniqueValue (schema_name);\n-CREATE INDEX I_CPLNRVL_ATTRIBUTE ON CPlainAttrValue (ATTRIBUTE_ID);\n-CREATE INDEX I_DRSCHEM_ANYTYPECLASS ON DerSchema (ANYTYPECLASS_NAME);\n-CREATE INDEX I_DYNRSHP_ROLE ON DynRoleMembership (ROLE_NAME);\n-CREATE INDEX I_DYNR_SR_DYNROLEMEMBERSHIP_ID ON DynRoleMembership_User (dynRoleMembership_id);\n-CREATE INDEX I_DYNR_SR_ELEMENT ON DynRoleMembership_User (user_id);\n-CREATE INDEX I_XTRNSRC_ACCOUNTPOLICY ON ExternalResource (ACCOUNTPOLICY_ID);\n-CREATE INDEX I_XTRNSRC_CONNECTOR ON ExternalResource (CONNECTOR_ID);\n-CREATE INDEX I_XTRNSRC_PASSWORDPOLICY ON ExternalResource (PASSWORDPOLICY_ID);\n-CREATE INDEX I_XTRNSRC_PULLPOLICY ON ExternalResource (PULLPOLICY_ID);\n-CREATE INDEX I_XTRNRRD_RESOURCE_NAME ON ExternalResource_capOverride (resource_name);\n-CREATE INDEX I_XTRNTNS_RESOURCE_NAME ON ExternalResource_PropActions (resource_name);\n-CREATE INDEX I_GPLNTTR_OWNER ON GPlainAttr (OWNER_ID);\n-CREATE INDEX I_GPLNTTR_SCHEMA ON GPlainAttr (schema_name);\n-CREATE INDEX I_GPLNQVL_ATTRIBUTE ON GPlainAttrUniqueValue (ATTRIBUTE_ID);\n-CREATE INDEX I_GPLNQVL_SCHEMA ON GPlainAttrUniqueValue (schema_name);\n-CREATE INDEX I_GPLNRVL_ATTRIBUTE ON GPlainAttrValue (ATTRIBUTE_ID);\n-CREATE INDEX I_MAPPING_PROVISION ON Mapping (PROVISION_ID);\n-CREATE INDEX I_MPPNGTM_MAPPING ON MappingItem (MAPPING_ID);\n-CREATE INDEX I_MPPNRMR_MAPPINGITEM_ID ON MappingItem_Transformer (mappingItem_id);\n-CREATE INDEX I_NTFCTON_TEMPLATE ON Notification (template_name);\n-CREATE INDEX I_NTFCNTS_NOTIFICATIONTASK_ID ON NotificationTask_recipients (notificationTask_id);\n-CREATE INDEX I_NTFCNTS_NOTIFICATION_ID ON Notification_events (notification_id);\n-CREATE INDEX I_NTFCNTS_NOTIFICATION_ID1 ON Notification_staticRecipients (notification_id);\n-CREATE INDEX I_PSSWTNC_PASSWORDPOLICY ON PasswordRuleConfInstance (PASSWORDPOLICY_ID);\n-CREATE INDEX I_PLNSCHM_ANYTYPECLASS ON PlainSchema (ANYTYPECLASS_NAME);\n-CREATE INDEX I_PROVSON_ANYTYPE ON Provision (ANYTYPE_NAME);\n-CREATE INDEX I_PROVSON_RESOURCE ON Provision (RESOURCE_NAME);\n-CREATE INDEX I_PLLTNMS_PULLTASK_ID ON PullTask_actionsClassNames (pullTask_id);\n-CREATE INDEX I_PSHTLTR_ANYTYPE ON PushTaskAnyFilter (ANYTYPE_NAME);\n-CREATE INDEX I_PSHTLTR_PUSHTASK ON PushTaskAnyFilter (PUSHTASK_ID);\n-CREATE INDEX I_PSHTNMS_PUSHTASK_ID ON PushTask_actionsClassNames (pushTask_id);\n-CREATE INDEX I_REALM_ACCOUNTPOLICY ON Realm (ACCOUNTPOLICY_ID);\n-CREATE INDEX I_REALM_PARENT ON Realm (PARENT_ID);\n-CREATE INDEX I_REALM_PASSWORDPOLICY ON Realm (PASSWORDPOLICY_ID);\n-CREATE INDEX I_RLM_NMS_REALM_ID ON Realm_actionsClassNames (realm_id);\n-CREATE INDEX I_REPORT_TEMPLATE ON Report (template_name);\n-CREATE INDEX I_RPORTXC_REPORT ON ReportExec (REPORT_ID);\n-CREATE INDEX I_RPRTTNC_REPORT ON ReportletConfInstance (REPORT_ID);\n-CREATE INDEX I_SYNCGRP_GROUPOWNER ON SyncopeGroup (GROUPOWNER_ID);\n-CREATE INDEX I_SYNCGRP_REALM ON SyncopeGroup (REALM_ID);\n-CREATE INDEX I_SYNCGRP_USEROWNER ON SyncopeGroup (USEROWNER_ID);\n-CREATE INDEX I_SYNCLSS_ELEMENT ON SyncopeGroup_AnyTypeClass (anyTypeClass_name);\n-CREATE INDEX I_SYNCLSS_GROUP_ID ON SyncopeGroup_AnyTypeClass (group_id);\n-CREATE INDEX I_SYNCSRC_ELEMENT ON SyncopeGroup_ExternalResource (resource_name);\n-CREATE INDEX I_SYNCSRC_GROUP_ID ON SyncopeGroup_ExternalResource (group_id);\n-CREATE INDEX I_SYNCNTS_ROLE_NAME ON SyncopeRole_entitlements (role_name);\n-CREATE INDEX I_SYNCRLM_ELEMENT ON SyncopeRole_Realm (realm_id);\n-CREATE INDEX I_SYNCRLM_ROLE_NAME ON SyncopeRole_Realm (role_name);\n-CREATE INDEX I_SYNCPSR_REALM ON SyncopeUser (REALM_ID);\n-CREATE INDEX I_SYNCPSR_SECURITYQUESTION ON SyncopeUser (SECURITYQUESTION_ID);\n-CREATE INDEX I_SYNCLSS_ELEMENT1 ON SyncopeUser_AnyTypeClass (anyTypeClass_name);\n-CREATE INDEX I_SYNCLSS_USER_ID ON SyncopeUser_AnyTypeClass (user_id);\n-CREATE INDEX I_SYNCSRC_ELEMENT1 ON SyncopeUser_ExternalResource (resource_name);\n-CREATE INDEX I_SYNCSRC_USER_ID ON SyncopeUser_ExternalResource (user_id);\n-CREATE INDEX I_SYNCTRY_USER_ID ON SyncopeUser_passwordHistory (user_id);\n-CREATE INDEX I_SYNCPRL_ELEMENT ON SyncopeUser_SyncopeRole (role_name);\n-CREATE INDEX I_SYNCPRL_USER_ID ON SyncopeUser_SyncopeRole (user_id);\n-CREATE INDEX I_TASK_DESTINATIONREALM ON Task (DESTINATIONREALM_ID);\n+CREATE TABLE SyncopeRole (key VARCHAR(255) NOT NULL, PRIMARY KEY (key));\n+CREATE TABLE SyncopeRole_entitlements (role_key VARCHAR(255), entitlement VARCHAR(255));\n+CREATE TABLE SyncopeRole_Realm (role_key VARCHAR(255), realm_key VARCHAR(36));\n+CREATE TABLE SyncopeUser (key VARCHAR(36) NOT NULL, creationDate TIMESTAMP NOT NULL, creator VARCHAR(255) NOT NULL, lastChangeDate TIMESTAMP NOT NULL, lastModifier VARCHAR(255) NOT NULL, status VARCHAR(255), workflowId VARCHAR(255), changePwdDate TIMESTAMP, cipherAlgorithm VARCHAR(20), failedLogins INTEGER, lastLoginDate TIMESTAMP, mustChangePassword INTEGER, password VARCHAR(255), securityAnswer VARCHAR(255), suspended INTEGER, token CLOB, tokenExpireTime TIMESTAMP, username VARCHAR(255), REALM_KEY VARCHAR(36), SECURITYQUESTION_KEY VARCHAR(36), PRIMARY KEY (key), CONSTRAINT U_SYNCPSR_USERNAME UNIQUE (username));\n+CREATE TABLE SyncopeUser_AnyTypeClass (user_key VARCHAR(36), anyTypeClass_key VARCHAR(255));\n+CREATE TABLE SyncopeUser_ExternalResource (user_key VARCHAR(36), resource_key VARCHAR(255));\n+CREATE TABLE SyncopeUser_passwordHistory (user_key VARCHAR(36), passwordHistoryValue VARCHAR(255));\n+CREATE TABLE SyncopeUser_SyncopeRole (user_key VARCHAR(36), role_key VARCHAR(255));\n+CREATE TABLE Task (key VARCHAR(36) NOT NULL, DTYPE VARCHAR(31), anyKey VARCHAR(255), anyType VARCHAR(255), anyTypeKind VARCHAR(20), attributes CLOB, connObjectKey VARCHAR(255), objectClassName VARCHAR(255), oldConnObjectKey VARCHAR(255), operation VARCHAR(20), RESOURCE_KEY VARCHAR(255), active INTEGER, cronExpression VARCHAR(255), description VARCHAR(255), jobDelegateClassName VARCHAR(255), name VARCHAR(255), startAt TIMESTAMP, matchingRule VARCHAR(20), performCreate INTEGER, performDelete INTEGER, performUpdate INTEGER, pullStatus INTEGER, unmatchingRule VARCHAR(20), executed INTEGER, htmlBody CLOB, sender VARCHAR(255), subject VARCHAR(255), textBody CLOB, traceLevel VARCHAR(20), NOTIFICATION_KEY VARCHAR(36), pullMode VARCHAR(23), reconciliationFilterBuilderClassName VARCHAR(255), DESTINATIONREALM_KEY VARCHAR(36), PRIMARY KEY (key));\n+CREATE TABLE TaskExec (key VARCHAR(36) NOT NULL, endDate TIMESTAMP, message CLOB, startDate TIMESTAMP, status VARCHAR(255), TASK_KEY VARCHAR(36), PRIMARY KEY (key));\n+CREATE TABLE TypeExtension (key VARCHAR(36) NOT NULL, GROUP_KEY VARCHAR(36), ANYTYPE_KEY VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_TYPXNSN_GROUP_KEY UNIQUE (GROUP_KEY, ANYTYPE_KEY));\n+CREATE TABLE TypeExtension_AnyTypeClass (typeExtension_key VARCHAR(36), anyTypeClass_key VARCHAR(255));\n+CREATE TABLE UDynGroupMembership (key VARCHAR(36) NOT NULL, fiql VARCHAR(255), GROUP_KEY VARCHAR(36), PRIMARY KEY (key));\n+CREATE TABLE UDynGroupMembership_User (uDynGroupMembership_key VARCHAR(36), user_key VARCHAR(36));\n+CREATE TABLE UMembership (key VARCHAR(36) NOT NULL, user_key VARCHAR(36), group_key VARCHAR(36), PRIMARY KEY (key));\n+CREATE TABLE UPlainAttr (key VARCHAR(36) NOT NULL, OWNER_KEY VARCHAR(36), schema_key VARCHAR(255), PRIMARY KEY (key));\n+CREATE TABLE UPlainAttrUniqueValue (key VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_KEY VARCHAR(36), schema_key VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_PLNTQVL_BOOLEANVALUE UNIQUE (booleanValue, schema_key), CONSTRAINT U_PLNTQVL_DATEVALUE UNIQUE (dateValue, schema_key), CONSTRAINT U_PLNTQVL_STRINGVALUE UNIQUE (stringValue, schema_key), CONSTRAINT U_PLNTQVL_DOUBLEVALUE UNIQUE (doubleValue, schema_key), CONSTRAINT U_PLNTQVL_LONGVALUE UNIQUE (longValue, schema_key));\n+CREATE TABLE UPlainAttrValue (key VARCHAR(36) NOT NULL, binaryValue BLOB, booleanValue INTEGER, dateValue TIMESTAMP, doubleValue DOUBLE, longValue BIGINT, stringValue VARCHAR(255), ATTRIBUTE_KEY VARCHAR(36), PRIMARY KEY (key));\n+CREATE TABLE URelationship (key VARCHAR(36) NOT NULL, user_key VARCHAR(36), anyObject_key VARCHAR(36), TYPE_KEY VARCHAR(255), PRIMARY KEY (key), CONSTRAINT U_RLTNSHP_TYPE_KEY UNIQUE (TYPE_KEY, user_key, anyObject_key));\n+CREATE TABLE VirSchema (key VARCHAR(255) NOT NULL, extAttrName VARCHAR(255), readonly INTEGER, ANYTYPECLASS_KEY VARCHAR(255), PROVISION_KEY VARCHAR(36), PRIMARY KEY (key));\n+CREATE INDEX I_CCNTSRC_ACCOUNTPOLICY_KEY ON AccountPolicy_ExternalResource (accountPolicy_key);\n+CREATE INDEX I_CCNTSRC_ELEMENT ON AccountPolicy_ExternalResource (resource_key);\n+CREATE INDEX I_CCNTTNC_ACCOUNTPOLICY ON AccountRuleConfInstance (ACCOUNTPOLICY_KEY);\n+CREATE INDEX I_DYNGSHP_ANYTYPE ON ADynGroupMembership (ANYTYPE_KEY);\n+CREATE INDEX I_DYNGSHP_GROUP ON ADynGroupMembership (GROUP_KEY);\n+CREATE INDEX I_DYNGJCT_ADYNGROUPMEMBERSHIP_KEY ON ADynGroupMembership_AnyObject (aDynGroupMembership_key);\n+CREATE INDEX I_DYNGJCT_ELEMENT ON ADynGroupMembership_AnyObject (anyObject_key);\n+CREATE INDEX I_MMBRSHP_LEFTEND1 ON AMembership (anyObject_key);\n+CREATE INDEX I_MMBRSHP_RIGHTEND1 ON AMembership (group_key);\n+CREATE INDEX I_NYABOUT_ANYTYPE ON AnyAbout (ANYTYPE_KEY);\n+CREATE INDEX I_NYABOUT_NOTIFICATION ON AnyAbout (NOTIFICATION_KEY);\n+CREATE INDEX I_NYOBJCT_REALM ON AnyObject (REALM_KEY);\n+CREATE INDEX I_NYOBJCT_TYPE ON AnyObject (TYPE_KEY);\n+CREATE INDEX I_NYBJLSS_ANYOBJECT_KEY ON AnyObject_AnyTypeClass (anyObject_key);\n+CREATE INDEX I_NYBJLSS_ELEMENT ON AnyObject_AnyTypeClass (anyTypeClass_key);\n+CREATE INDEX I_NYBJSRC_ANYOBJECT_KEY ON AnyObject_ExternalResource (anyObject_key);\n+CREATE INDEX I_NYBJSRC_ELEMENT ON AnyObject_ExternalResource (resource_key);\n+CREATE INDEX I_NYTMTSK_ANYTYPE ON AnyTemplatePullTask (ANYTYPE_KEY);\n+CREATE INDEX I_NYTMTSK_PULLTASK ON AnyTemplatePullTask (PULLTASK_KEY);\n+CREATE INDEX I_NYTMRLM_ANYTYPE ON AnyTemplateRealm (ANYTYPE_KEY);\n+CREATE INDEX I_NYTMRLM_REALM ON AnyTemplateRealm (REALM_KEY);\n+CREATE INDEX I_NYTYLSS_ANYTYPE_KEY ON AnyType_AnyTypeClass (anyType_key);\n+CREATE INDEX I_NYTYLSS_ELEMENT ON AnyType_AnyTypeClass (anyTypeClass_key);\n+CREATE INDEX I_PLINTTR_OWNER ON APlainAttr (OWNER_KEY);\n+CREATE INDEX I_PLINTTR_SCHEMA ON APlainAttr (schema_key);\n+CREATE INDEX I_PLNTQVL_ATTRIBUTE1 ON APlainAttrUniqueValue (ATTRIBUTE_KEY);\n+CREATE INDEX I_PLNTQVL_SCHEMA1 ON APlainAttrUniqueValue (schema_key);\n+CREATE INDEX I_PLNTRVL_ATTRIBUTE1 ON APlainAttrValue (ATTRIBUTE_KEY);\n+CREATE INDEX I_RLTNSHP_LEFTEND1 ON ARelationship (left_anyObject_key);\n+CREATE INDEX I_RLTNSHP_RIGHTEND1 ON ARelationship (right_anyObject_key);\n+CREATE INDEX I_RLTNSHP_TYPE1 ON ARelationship (TYPE_KEY);\n+CREATE INDEX I_CNNNLTS_CONNINSTANCE_KEY ON ConnInstance_capabilities (connInstance_key);\n+CREATE INDEX I_CPLNTTR_OWNER ON CPlainAttr (OWNER_KEY);\n+CREATE INDEX I_CPLNTTR_SCHEMA ON CPlainAttr (schema_key);\n+CREATE INDEX I_CPLNQVL_ATTRIBUTE ON CPlainAttrUniqueValue (ATTRIBUTE_KEY);\n+CREATE INDEX I_CPLNQVL_SCHEMA ON CPlainAttrUniqueValue (schema_key);\n+CREATE INDEX I_CPLNRVL_ATTRIBUTE ON CPlainAttrValue (ATTRIBUTE_KEY);\n+CREATE INDEX I_DRSCHEM_ANYTYPECLASS ON DerSchema (ANYTYPECLASS_KEY);\n+CREATE INDEX I_DYNRSHP_ROLE ON DynRoleMembership (ROLE_KEY);\n+CREATE INDEX I_DYNR_SR_DYNROLEMEMBERSHIP_KEY ON DynRoleMembership_User (dynRoleMembership_key);\n+CREATE INDEX I_DYNR_SR_ELEMENT ON DynRoleMembership_User (user_key);\n+CREATE INDEX I_XTRNSRC_ACCOUNTPOLICY ON ExternalResource (ACCOUNTPOLICY_KEY);\n+CREATE INDEX I_XTRNSRC_CONNECTOR ON ExternalResource (CONNECTOR_KEY);\n+CREATE INDEX I_XTRNSRC_PASSWORDPOLICY ON ExternalResource (PASSWORDPOLICY_KEY);\n+CREATE INDEX I_XTRNSRC_PULLPOLICY ON ExternalResource (PULLPOLICY_KEY);\n+CREATE INDEX I_XTRNRRD_RESOURCE_KEY ON ExternalResource_capOverride (resource_key);\n+CREATE INDEX I_XTRNTNS_RESOURCE_KEY ON ExternalResource_PropActions (resource_key);\n+CREATE INDEX I_GPLNTTR_OWNER ON GPlainAttr (OWNER_KEY);\n+CREATE INDEX I_GPLNTTR_SCHEMA ON GPlainAttr (schema_key);\n+CREATE INDEX I_GPLNQVL_ATTRIBUTE ON GPlainAttrUniqueValue (ATTRIBUTE_KEY);\n+CREATE INDEX I_GPLNQVL_SCHEMA ON GPlainAttrUniqueValue (schema_key);\n+CREATE INDEX I_GPLNRVL_ATTRIBUTE ON GPlainAttrValue (ATTRIBUTE_KEY);\n+CREATE INDEX I_MAPPING_PROVISION ON Mapping (PROVISION_KEY);\n+CREATE INDEX I_MPPNGTM_MAPPING ON MappingItem (MAPPING_KEY);\n+CREATE INDEX I_MPPNRMR_MAPPINGITEM_KEY ON MappingItem_Transformer (mappingItem_key);\n+CREATE INDEX I_NTFCTON_TEMPLATE ON Notification (template_key);\n+CREATE INDEX I_NTFCNTS_NOTIFICATIONTASK_KEY ON NotificationTask_recipients (notificationTask_key);\n+CREATE INDEX I_NTFCNTS_NOTIFICATION_KEY ON Notification_events (notification_key);\n+CREATE INDEX I_NTFCNTS_NOTIFICATION_KEY1 ON Notification_staticRecipients (notification_key);\n+CREATE INDEX I_PSSWTNC_PASSWORDPOLICY ON PasswordRuleConfInstance (PASSWORDPOLICY_KEY);\n+CREATE INDEX I_PLNSCHM_ANYTYPECLASS ON PlainSchema (ANYTYPECLASS_KEY);\n+CREATE INDEX I_PROVSON_ANYTYPE ON Provision (ANYTYPE_KEY);\n+CREATE INDEX I_PROVSON_RESOURCE ON Provision (RESOURCE_KEY);\n+CREATE INDEX I_PRVSLSS_ELEMENT ON Provision_AnyTypeClass (anyTypeClass_key);\n+CREATE INDEX I_PRVSLSS_PROVISION_KEY ON Provision_AnyTypeClass (provision_key);\n+CREATE INDEX I_PLLTNMS_PULLTASK_KEY ON PullTask_actionsClassNames (pullTask_key);\n+CREATE INDEX I_PSHTLTR_ANYTYPE ON PushTaskAnyFilter (ANYTYPE_KEY);\n+CREATE INDEX I_PSHTLTR_PUSHTASK ON PushTaskAnyFilter (PUSHTASK_KEY);\n+CREATE INDEX I_PSHTNMS_PUSHTASK_KEY ON PushTask_actionsClassNames (pushTask_key);\n+CREATE INDEX I_REALM_ACCOUNTPOLICY ON Realm (ACCOUNTPOLICY_KEY);\n+CREATE INDEX I_REALM_PARENT ON Realm (PARENT_KEY);\n+CREATE INDEX I_REALM_PASSWORDPOLICY ON Realm (PASSWORDPOLICY_KEY);\n+CREATE INDEX I_RLM_NMS_REALM_KEY ON Realm_actionsClassNames (realm_key);\n+CREATE INDEX I_REPORT_TEMPLATE ON Report (template_key);\n+CREATE INDEX I_RPORTXC_REPORT ON ReportExec (REPORT_KEY);\n+CREATE INDEX I_RPRTTNC_REPORT ON ReportletConfInstance (REPORT_KEY);\n+CREATE INDEX I_SYNCGRP_GROUPOWNER ON SyncopeGroup (GROUPOWNER_KEY);\n+CREATE INDEX I_SYNCGRP_REALM ON SyncopeGroup (REALM_KEY);\n+CREATE INDEX I_SYNCGRP_USEROWNER ON SyncopeGroup (USEROWNER_KEY);\n+CREATE INDEX I_SYNCLSS_ELEMENT ON SyncopeGroup_AnyTypeClass (anyTypeClass_key);\n+CREATE INDEX I_SYNCLSS_GROUP_KEY ON SyncopeGroup_AnyTypeClass (group_key);\n+CREATE INDEX I_SYNCSRC_ELEMENT ON SyncopeGroup_ExternalResource (resource_key);\n+CREATE INDEX I_SYNCSRC_GROUP_KEY ON SyncopeGroup_ExternalResource (group_key);\n+CREATE INDEX I_SYNCNTS_ROLE_KEY ON SyncopeRole_entitlements (role_key);\n+CREATE INDEX I_SYNCRLM_ELEMENT ON SyncopeRole_Realm (realm_key);\n+CREATE INDEX I_SYNCRLM_ROLE_KEY ON SyncopeRole_Realm (role_key);\n+CREATE INDEX I_SYNCPSR_REALM ON SyncopeUser (REALM_KEY);\n+CREATE INDEX I_SYNCPSR_SECURITYQUESTION ON SyncopeUser (SECURITYQUESTION_KEY);\n+CREATE INDEX I_SYNCLSS_ELEMENT1 ON SyncopeUser_AnyTypeClass (anyTypeClass_key);\n+CREATE INDEX I_SYNCLSS_USER_KEY ON SyncopeUser_AnyTypeClass (user_key);\n+CREATE INDEX I_SYNCSRC_ELEMENT1 ON SyncopeUser_ExternalResource (resource_key);\n+CREATE INDEX I_SYNCSRC_USER_KEY ON SyncopeUser_ExternalResource (user_key);\n+CREATE INDEX I_SYNCTRY_USER_KEY ON SyncopeUser_passwordHistory (user_key);\n+CREATE INDEX I_SYNCPRL_ELEMENT ON SyncopeUser_SyncopeRole (role_key);\n+CREATE INDEX I_SYNCPRL_USER_KEY ON SyncopeUser_SyncopeRole (user_key);\n+CREATE INDEX I_TASK_DESTINATIONREALM ON Task (DESTINATIONREALM_KEY);\n CREATE INDEX I_TASK_DTYPE ON Task (DTYPE);\n-CREATE INDEX I_TASK_RESOURCE ON Task (RESOURCE_NAME);\n-CREATE INDEX I_TSKEXEC_TASK ON TaskExec (TASK_ID);\n-CREATE INDEX I_TYPXNSN_ANYTYPE ON TypeExtension (ANYTYPE_NAME);\n-CREATE INDEX I_TYPXNSN_GROUP ON TypeExtension (GROUP_ID);\n-CREATE INDEX I_TYPXLSS_ELEMENT ON TypeExtension_AnyTypeClass (anyTypeClass_name);\n-CREATE INDEX I_TYPXLSS_TYPEEXTENSION_ID ON TypeExtension_AnyTypeClass (typeExtension_id);\n-CREATE INDEX I_DYNGSHP_GROUP1 ON UDynGroupMembership (GROUP_ID);\n-CREATE INDEX I_DYNG_SR_ELEMENT ON UDynGroupMembership_User (user_id);\n-CREATE INDEX I_DYNG_SR_UDYNGROUPMEMBERSHIP_ID ON UDynGroupMembership_User (uDynGroupMembership_id);\n-CREATE INDEX I_MMBRSHP_LEFTEND ON UMembership (user_id);\n-CREATE INDEX I_MMBRSHP_RIGHTEND ON UMembership (group_id);\n-CREATE INDEX I_UPLNTTR_OWNER ON UPlainAttr (OWNER_ID);\n-CREATE INDEX I_UPLNTTR_SCHEMA ON UPlainAttr (schema_name);\n-CREATE INDEX I_PLNTQVL_ATTRIBUTE ON UPlainAttrUniqueValue (ATTRIBUTE_ID);\n-CREATE INDEX I_PLNTQVL_SCHEMA ON UPlainAttrUniqueValue (schema_name);\n-CREATE INDEX I_PLNTRVL_ATTRIBUTE ON UPlainAttrValue (ATTRIBUTE_ID);\n-CREATE INDEX I_RLTNSHP_LEFTEND ON URelationship (user_id);\n-CREATE INDEX I_RLTNSHP_RIGHTEND ON URelationship (anyObject_id);\n-CREATE INDEX I_RLTNSHP_TYPE ON URelationship (TYPE_NAME);\n-CREATE INDEX I_VIRSCHM_ANYTYPECLASS ON VirSchema (ANYTYPECLASS_NAME);\n-CREATE INDEX I_VIRSCHM_PROVISION ON VirSchema (PROVISION_ID);\n+CREATE INDEX I_TASK_NOTIFICATION ON Task (NOTIFICATION_KEY);\n+CREATE INDEX I_TASK_RESOURCE ON Task (RESOURCE_KEY);\n+CREATE INDEX I_TSKEXEC_TASK ON TaskExec (TASK_KEY);\n+CREATE INDEX I_TYPXNSN_ANYTYPE ON TypeExtension (ANYTYPE_KEY);\n+CREATE INDEX I_TYPXNSN_GROUP ON TypeExtension (GROUP_KEY);\n+CREATE INDEX I_TYPXLSS_ELEMENT ON TypeExtension_AnyTypeClass (anyTypeClass_key);\n+CREATE INDEX I_TYPXLSS_TYPEEXTENSION_KEY ON TypeExtension_AnyTypeClass (typeExtension_key);\n+CREATE INDEX I_DYNGSHP_GROUP1 ON UDynGroupMembership (GROUP_KEY);\n+CREATE INDEX I_DYNG_SR_ELEMENT ON UDynGroupMembership_User (user_key);\n+CREATE INDEX I_DYNG_SR_UDYNGROUPMEMBERSHIP_KEY ON UDynGroupMembership_User (uDynGroupMembership_key);\n+CREATE INDEX I_MMBRSHP_LEFTEND ON UMembership (user_key);\n+CREATE INDEX I_MMBRSHP_RIGHTEND ON UMembership (group_key);\n+CREATE INDEX I_UPLNTTR_OWNER ON UPlainAttr (OWNER_KEY);\n+CREATE INDEX I_UPLNTTR_SCHEMA ON UPlainAttr (schema_key);\n+CREATE INDEX I_PLNTQVL_ATTRIBUTE ON UPlainAttrUniqueValue (ATTRIBUTE_KEY);\n+CREATE INDEX I_PLNTQVL_SCHEMA ON UPlainAttrUniqueValue (schema_key);\n+CREATE INDEX I_PLNTRVL_ATTRIBUTE ON UPlainAttrValue (ATTRIBUTE_KEY);\n+CREATE INDEX I_RLTNSHP_LEFTEND ON URelationship (user_key);\n+CREATE INDEX I_RLTNSHP_RIGHTEND ON URelationship (anyObject_key);\n+CREATE INDEX I_RLTNSHP_TYPE ON URelationship (TYPE_KEY);\n+CREATE INDEX I_VIRSCHM_ANYTYPECLASS ON VirSchema (ANYTYPECLASS_KEY);\n+CREATE INDEX I_VIRSCHM_PROVISION ON VirSchema (PROVISION_KEY);"},{"sha":"4655fafc86bfa512f8013211083166c94fc6f0e4","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleApplication.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -91,7 +91,7 @@ public static SyncopeConsoleApplication get() {\n \n     private String activitiModelerDirectory;\n \n-    private Long reconciliationReportKey;\n+    private String reconciliationReportKey;\n \n     private SyncopeClientFactoryBean clientFactory;\n \n@@ -198,7 +198,7 @@ protected void init() {\n         Args.notNull(activitiModelerDirectory, \"<activitiModelerDirectory> not set\");\n \n         try {\n-            reconciliationReportKey = Long.valueOf(props.getProperty(\"reconciliationReportKey\"));\n+            reconciliationReportKey = props.getProperty(\"reconciliationReportKey\");\n         } catch (NumberFormatException e) {\n             LOG.error(\"While parsing reconciliationReportKey\", e);\n         }\n@@ -285,7 +285,7 @@ public String getActivitiModelerDirectory() {\n         return activitiModelerDirectory;\n     }\n \n-    public Long getReconciliationReportKey() {\n+    public String getReconciliationReportKey() {\n         return reconciliationReportKey;\n     }\n "},{"sha":"67d1238cf8740bfe0781df13148997d4f9cd786b","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleSession.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -104,8 +104,7 @@ public SyncopeConsoleSession(final Request request) {\n         domains = new ArrayList<>();\n         domains.add(SyncopeConstants.MASTER_DOMAIN);\n         CollectionUtils.collect(anonymousClient.getService(DomainService.class).list(),\n-                EntityTOUtils.<String, DomainTO>keyTransformer(),\n-                domains);\n+                EntityTOUtils.<DomainTO>keyTransformer(), domains);\n     }\n \n     public void execute(final Runnable command) {"},{"sha":"51101197311083092e76cc22fc193c7aaea4a69b","filename":"client/console/src/main/java/org/apache/syncope/client/console/bulk/BulkContent.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fbulk%2FBulkContent.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -143,15 +143,15 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                 throw new IllegalArgumentException(\"Invalid bulk action executor\");\n                             }\n \n-                            final AbstractAnyRestClient<?> anyRestClient\n-                                    = AbstractAnyRestClient.class.cast(bulkActionExecutor);\n+                            final AbstractAnyRestClient<?> anyRestClient =\n+                                    AbstractAnyRestClient.class.cast(bulkActionExecutor);\n \n                             if (items.isEmpty() || !(items.iterator().next() instanceof StatusBean)) {\n                                 throw new IllegalArgumentException(\"Invalid items\");\n                             }\n \n                             // Group bean information by anyKey\n-                            final Map<Long, List<StatusBean>> beans = new HashMap<>();\n+                            final Map<String, List<StatusBean>> beans = new HashMap<>();\n                             for (T bean : items) {\n                                 final StatusBean sb = StatusBean.class.cast(bean);\n                                 final List<StatusBean> sblist;\n@@ -164,7 +164,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                 sblist.add(sb);\n                             }\n \n-                            for (Map.Entry<Long, List<StatusBean>> entry : beans.entrySet()) {\n+                            for (Map.Entry<String, List<StatusBean>> entry : beans.entrySet()) {\n                                 final String etag = anyRestClient.read(entry.getKey()).getETagValue();\n                                 try {\n                                     switch (ResourceDeassociationAction.valueOf(actionToBeAddresed.name())) {"},{"sha":"e2b15825ed6dc040a6a3947f63f7b45cda8480e5","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/RoleDataProvider.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FRoleDataProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FRoleDataProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FRoleDataProvider.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -41,9 +41,9 @@ public RoleDataProvider(final int paginatorRows) {\n \n     @Override\n     public Iterator<RoleTO> iterator(final long first, final long count) {\n-        final List<RoleTO> result = restClient.list();\n+        List<RoleTO> result = restClient.list();\n         Collections.sort(result, comparator);\n-        return result.iterator();\n+        return result.subList((int) first, (int) first + (int) count).iterator();\n     }\n \n     @Override"},{"sha":"52087f77c109807ffc72e78e36587e2d0987c114","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/SortableAnyProviderComparator.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSortableAnyProviderComparator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSortableAnyProviderComparator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FSortableAnyProviderComparator.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -34,7 +34,7 @@\n     private static final long serialVersionUID = 1775967163571699258L;\n \n     private static final Set<String> INLINE_PROPS = new HashSet<>(Arrays.asList(\n-            new String[] { \"key\", \"status\", \"token\", \"username\" }));\n+            new String[] { \"key\", \"status\", \"token\", \"username\", \"name\" }));\n \n     public SortableAnyProviderComparator(final SortableDataProvider<T, String> provider) {\n         super(provider);\n@@ -54,7 +54,7 @@ private class AttrModel extends AbstractReadOnlyModel<Comparable> {\n \n         private static final long serialVersionUID = -7856686374020091808L;\n \n-        private final Map<String, AttrTO> attrs;\n+        private final Map<String, AttrTO> plainAttrs;\n \n         private final Map<String, AttrTO> derAttrs;\n \n@@ -63,7 +63,7 @@ private class AttrModel extends AbstractReadOnlyModel<Comparable> {\n         AttrModel(final AnyTO anyTO) {\n             super();\n \n-            this.attrs = anyTO.getPlainAttrMap();\n+            this.plainAttrs = anyTO.getPlainAttrMap();\n             this.derAttrs = anyTO.getDerAttrMap();\n             this.virAttrs = anyTO.getVirAttrMap();\n         }\n@@ -91,12 +91,12 @@ public Comparable getObject() {\n \n             final AttrTO attr;\n             if (schemaType == null) {\n-                attr = this.attrs.get(schema);\n+                attr = this.plainAttrs.get(schema);\n             } else {\n                 switch (schemaType) {\n                     case PLAIN:\n                     default:\n-                        attr = this.attrs.get(schema);\n+                        attr = this.plainAttrs.get(schema);\n                         break;\n \n                     case DERIVED:"},{"sha":"3f1afd12ef0615eba5e08b51bd6231fa26a7c862","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/StatusBean.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -31,7 +31,7 @@ public class StatusBean implements Serializable {\n \n     private static final long serialVersionUID = -5207260204921071129L;\n \n-    private final Long anyKey;\n+    private final String anyKey;\n \n     private final String anyName;\n \n@@ -71,7 +71,7 @@ public void setStatus(final Status status) {\n         this.status = status;\n     }\n \n-    public Long getAnyKey() {\n+    public String getAnyKey() {\n         return anyKey;\n     }\n "},{"sha":"566d2b8a9dea0bf5f9bc63a77a965c54abd80849","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/MailTemplateDirectoryPanel.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FMailTemplateDirectoryPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -94,8 +94,7 @@ public ModalPanel<MailTemplateTO> build(final String id, final int index, final\n \n     @Override\n     protected List<IColumn<MailTemplateTO, String>> getColumns() {\n-\n-        final List<IColumn<MailTemplateTO, String>> columns = new ArrayList<IColumn<MailTemplateTO, String>>();\n+        List<IColumn<MailTemplateTO, String>> columns = new ArrayList<>();\n         columns.add(new PropertyColumn<MailTemplateTO, String>(\n                 new StringResourceModel(\"key\", this, null), \"key\", \"key\"));\n \n@@ -115,8 +114,8 @@ public ActionLinksPanel<MailTemplateTO> getActions(\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore) {\n-                        MailTemplateContentModal.MailTemplateContentTO content\n-                                = new MailTemplateContentModal.MailTemplateContentTO(\n+                        MailTemplateContentModal.MailTemplateContentTO content =\n+                                new MailTemplateContentModal.MailTemplateContentTO(\n                                         model.getObject().getKey(), MailTemplateFormat.HTML);\n                         content.setContent(\n                                 restClient.readTemplateFormat(model.getObject().getKey(), MailTemplateFormat.HTML));\n@@ -134,8 +133,8 @@ public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore)\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final MailTemplateTO ignore) {\n-                        MailTemplateContentModal.MailTemplateContentTO content\n-                                = new MailTemplateContentModal.MailTemplateContentTO(\n+                        MailTemplateContentModal.MailTemplateContentTO content =\n+                                new MailTemplateContentModal.MailTemplateContentTO(\n                                         model.getObject().getKey(), MailTemplateFormat.TEXT);\n                         content.setContent(\n                                 restClient.readTemplateFormat(model.getObject().getKey(), MailTemplateFormat.TEXT));\n@@ -196,7 +195,7 @@ public class MailTemplateProvider extends DirectoryDataProvider<MailTemplateTO>\n         public MailTemplateProvider(final int paginatorRows) {\n             super(paginatorRows);\n             setSort(\"key\", SortOrder.ASCENDING);\n-            comparator = new SortableDataProviderComparator<MailTemplateTO>(this);\n+            comparator = new SortableDataProviderComparator<>(this);\n         }\n \n         @Override"},{"sha":"195c5ff68921910d8c71b7c6c762be189d959b67","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationDirectoryPanel.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationDirectoryPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -35,6 +35,7 @@\n import org.apache.syncope.client.console.rest.NotificationRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CollectionPropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -83,8 +84,8 @@ public NotificationDirectoryPanel(final String id, final PageReference pageRefer\n     @Override\n     protected List<IColumn<NotificationTO, String>> getColumns() {\n \n-        final List<IColumn<NotificationTO, String>> columns = new ArrayList<IColumn<NotificationTO, String>>();\n-        columns.add(new PropertyColumn<NotificationTO, String>(\n+        List<IColumn<NotificationTO, String>> columns = new ArrayList<>();\n+        columns.add(new KeyPropertyColumn<NotificationTO>(\n                 new StringResourceModel(\"key\", this, null), \"key\", \"key\"));\n         columns.add(new CollectionPropertyColumn<NotificationTO>(\n                 new StringResourceModel(\"events\", this, null), \"events\", \"events\"));\n@@ -181,7 +182,7 @@ public class NotificationProvider extends DirectoryDataProvider<NotificationTO>\n         public NotificationProvider(final int paginatorRows) {\n             super(paginatorRows);\n             setSort(\"key\", SortOrder.ASCENDING);\n-            comparator = new SortableDataProviderComparator<NotificationTO>(this);\n+            comparator = new SortableDataProviderComparator<>(this);\n         }\n \n         @Override"},{"sha":"b0896310547d4163fd2d7d36ff5b59ff09393e86","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationHandler.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -45,7 +45,7 @@ public NotificationHandler(final NotificationTO notificationTO) {\n         this.notificationTO = notificationTO;\n     }\n \n-    public final Long getKey() {\n+    public final String getKey() {\n         return this.notificationTO.getKey();\n     }\n "},{"sha":"4d2482431046f76fdcf7041d03a82653d482688d","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationTasks.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationTasks.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -40,21 +40,22 @@ public class NotificationTasks extends Panel implements ModalPanel<Serializable>\n \n     public NotificationTasks(\n             final AnyTypeKind anyTypeKind,\n-            final Long anyTypeKey,\n+            final String anyTypeKey,\n             final PageReference pageReference) {\n+\n         this(null, anyTypeKind, anyTypeKey, pageReference);\n     }\n \n     public NotificationTasks(\n-            final Long notification,\n+            final String notification,\n             final PageReference pageReference) {\n         this(notification, null, null, pageReference);\n     }\n \n     private NotificationTasks(\n-            final Long notification,\n+            final String notification,\n             final AnyTypeKind anyTypeKind,\n-            final Long anyTypeKey,\n+            final String anyTypeKey,\n             final PageReference pageReference) {\n         super(BaseModal.CONTENT_ID);\n "},{"sha":"a38dd9992fff76fda38d39602d057df6df08c9af","filename":"client/console/src/main/java/org/apache/syncope/client/console/notifications/NotificationWizardBuilder.java","status":"modified","additions":20,"deletions":23,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fnotifications%2FNotificationWizardBuilder.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -94,9 +94,7 @@ protected Serializable onApplyInternal(final NotificationHandler modelObject) {\n         modelObject.fillRecipientConditions();\n         modelObject.fillAboutConditions();\n \n-        final boolean createFlag\n-                = modelObject.getInnerObject().getKey() == null || modelObject.getInnerObject().getKey() <= 0;\n-\n+        final boolean createFlag = modelObject.getInnerObject().getKey() == null;\n         if (createFlag) {\n             restClient.create(modelObject.getInnerObject());\n         } else {\n@@ -121,7 +119,7 @@ public class Details extends WizardStep {\n \n         public Details(final NotificationHandler modelObject) {\n             final NotificationTO notificationTO = modelObject.getInnerObject();\n-            final boolean createFlag = notificationTO.getKey() == null || notificationTO.getKey() <= 0;\n+            final boolean createFlag = notificationTO.getKey() == null;\n \n             final AjaxTextFieldPanel sender = new AjaxTextFieldPanel(\"sender\", getString(\"sender\"),\n                     new PropertyModel<String>(notificationTO, \"sender\"));\n@@ -134,18 +132,18 @@ public Details(final NotificationHandler modelObject) {\n             subject.addRequiredLabel();\n             add(subject);\n \n-            final AjaxDropDownChoicePanel<IntMappingType> recipientAttrType\n-                    = new AjaxDropDownChoicePanel<IntMappingType>(\n+            final AjaxDropDownChoicePanel<IntMappingType> recipientAttrType =\n+                    new AjaxDropDownChoicePanel<>(\n                             \"recipientAttrType\",\n                             new ResourceModel(\"recipientAttrType\", \"recipientAttrType\").getObject(),\n                             new PropertyModel<IntMappingType>(notificationTO, \"recipientAttrType\"));\n             recipientAttrType.setChoices(\n-                    new ArrayList<IntMappingType>(IntMappingType.getAttributeTypes(AnyTypeKind.USER,\n+                    new ArrayList<>(IntMappingType.getAttributeTypes(AnyTypeKind.USER,\n                             EnumSet.of(IntMappingType.UserKey, IntMappingType.Password))));\n             recipientAttrType.addRequiredLabel();\n             add(recipientAttrType);\n \n-            final AjaxDropDownChoicePanel<String> recipientAttrName = new AjaxDropDownChoicePanel<String>(\n+            final AjaxDropDownChoicePanel<String> recipientAttrName = new AjaxDropDownChoicePanel<>(\n                     \"recipientAttrName\", new ResourceModel(\"recipientAttrName\", \"recipientAttrName\").getObject(),\n                     new PropertyModel<String>(notificationTO, \"recipientAttrName\"));\n             recipientAttrName.setChoices(getSchemaNames(recipientAttrType.getModelObject()));\n@@ -163,7 +161,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 }\n             });\n \n-            final AjaxDropDownChoicePanel<String> template = new AjaxDropDownChoicePanel<String>(\n+            final AjaxDropDownChoicePanel<String> template = new AjaxDropDownChoicePanel<>(\n                     \"template\", getString(\"template\"),\n                     new PropertyModel<String>(notificationTO, \"template\"));\n \n@@ -179,7 +177,7 @@ public String transform(final MailTemplateTO input) {\n             template.addRequiredLabel();\n             add(template);\n \n-            final AjaxDropDownChoicePanel<TraceLevel> traceLevel = new AjaxDropDownChoicePanel<TraceLevel>(\n+            final AjaxDropDownChoicePanel<TraceLevel> traceLevel = new AjaxDropDownChoicePanel<>(\n                     \"traceLevel\", getString(\"traceLevel\"),\n                     new PropertyModel<TraceLevel>(notificationTO, \"traceLevel\"));\n             traceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n@@ -236,11 +234,10 @@ public About(final String id, final IModel<Pair<String, List<SearchClause>>> mod\n \n             final List<String> anyTypeTOs = CollectionUtils.collect(\n                     new AnyTypeRestClient().list(),\n-                    EntityTOUtils.<String, AnyTypeTO>keyTransformer(),\n-                    new ArrayList<String>());\n+                    EntityTOUtils.<AnyTypeTO>keyTransformer(), new ArrayList<String>());\n \n-            final AjaxDropDownChoicePanel<String> type\n-                    = new AjaxDropDownChoicePanel<String>(\"about\", \"about\", new Model<String>() {\n+            final AjaxDropDownChoicePanel<String> type =\n+                    new AjaxDropDownChoicePanel<>(\"about\", \"about\", new Model<String>() {\n \n                         private static final long serialVersionUID = -2350296434572623272L;\n \n@@ -323,8 +320,8 @@ public Abouts(final NotificationHandler modelObject) {\n             aboutContainer.setOutputMarkupId(true);\n             add(aboutContainer);\n \n-            final IModel<List<Pair<String, List<SearchClause>>>> model\n-                    = new PropertyModel<List<Pair<String, List<SearchClause>>>>(modelObject, \"aboutClauses\");\n+            final IModel<List<Pair<String, List<SearchClause>>>> model =\n+                    new PropertyModel<>(modelObject, \"aboutClauses\");\n \n             aboutContainer.add(new MultiPanel<Pair<String, List<SearchClause>>>(\"abouts\", \"abouts\", model, false) {\n \n@@ -368,13 +365,13 @@ public class Recipients extends WizardStep {\n \n         public Recipients(final NotificationHandler modelObject) {\n             final NotificationTO notificationTO = modelObject.getInnerObject();\n-            final boolean createFlag = notificationTO.getKey() == null || notificationTO.getKey() <= 0;\n+            final boolean createFlag = notificationTO.getKey() == null;\n \n-            final AjaxTextFieldPanel staticRecipientsFieldPanel\n-                    = new AjaxTextFieldPanel(\"panel\", \"staticRecipients\", new Model<String>());\n+            final AjaxTextFieldPanel staticRecipientsFieldPanel =\n+                    new AjaxTextFieldPanel(\"panel\", \"staticRecipients\", new Model<String>());\n             staticRecipientsFieldPanel.addValidator(EmailAddressValidator.getInstance());\n \n-            final MultiFieldPanel<String> staticRecipients = new MultiFieldPanel.Builder<String>(\n+            final MultiFieldPanel<String> staticRecipients = new MultiFieldPanel.Builder<>(\n                     new PropertyModel<List<String>>(notificationTO, \"staticRecipients\")).\n                     build(\"staticRecipients\", \"staticRecipients\", staticRecipientsFieldPanel);\n \n@@ -406,19 +403,19 @@ private List<String> getSchemaNames(final IntMappingType type) {\n                 case UserPlainSchema:\n                     result = CollectionUtils.collect(\n                             schemaRestClient.<PlainSchemaTO>getSchemas(SchemaType.PLAIN, AnyTypeKind.USER.name()),\n-                            EntityTOUtils.<String, PlainSchemaTO>keyTransformer(), new ArrayList<String>());\n+                            EntityTOUtils.<PlainSchemaTO>keyTransformer(), new ArrayList<String>());\n                     break;\n \n                 case UserDerivedSchema:\n                     result = CollectionUtils.collect(\n                             schemaRestClient.<DerSchemaTO>getSchemas(SchemaType.DERIVED, AnyTypeKind.USER.name()),\n-                            EntityTOUtils.<String, DerSchemaTO>keyTransformer(), new ArrayList<String>());\n+                            EntityTOUtils.<DerSchemaTO>keyTransformer(), new ArrayList<String>());\n                     break;\n \n                 case UserVirtualSchema:\n                     result = CollectionUtils.collect(\n                             schemaRestClient.<VirSchemaTO>getSchemas(SchemaType.VIRTUAL, AnyTypeKind.USER.name()),\n-                            EntityTOUtils.<String, VirSchemaTO>keyTransformer(), new ArrayList<String>());\n+                            EntityTOUtils.<VirSchemaTO>keyTransformer(), new ArrayList<String>());\n                     break;\n \n                 case Username:"},{"sha":"b2e33569c3f6486663a42d60be90d315ad96c7a1","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Realms.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -148,7 +148,7 @@ protected void onClickEdit(final AjaxRequestTarget target, final RealmTO realmTO\n             @Override\n             protected void onClickDelete(final AjaxRequestTarget target, final RealmTO realmTO) {\n                 try {\n-                    if (realmTO.getKey() == null || realmTO.getKey() == 0) {\n+                    if (realmTO.getKey() == null) {\n                         throw new Exception(\"Root realm cannot be deleted\");\n                     }\n                     realmRestClient.delete(realmTO.getFullPath());"},{"sha":"62ef279490c9f6c46d56696bb106f4525b7bde6b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyDirectoryPanel.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -79,6 +79,7 @@ protected AnyDirectoryPanel(final String id, final Builder<T> builder) {\n         this.type = builder.type;\n         this.fiql = builder.fiql;\n \n+        utilityModal.size(Modal.Size.Large);\n         addOuterObject(utilityModal);\n         setWindowClosedReloadCallback(utilityModal);\n "},{"sha":"6721e1adf4fb7a74c5835c36d214bd23f11d5945","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectDirectoryPanel.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -34,6 +34,7 @@\n import org.apache.syncope.client.console.tasks.AnyPropagationTasks;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -81,7 +82,9 @@ protected List<IColumn<AnyObjectTO, String>> getColumns() {\n \n             final Field field = ReflectionUtils.findField(AnyObjectTO.class, name);\n \n-            if (field != null && field.getType().equals(Date.class)) {\n+            if (\"key\".equalsIgnoreCase(name)) {\n+                columns.add(new KeyPropertyColumn<AnyObjectTO>(new ResourceModel(name, name), name, name));\n+            } else if (field != null && field.getType().equals(Date.class)) {\n                 columns.add(new PropertyColumn<AnyObjectTO, String>(new ResourceModel(name, name), name, name));\n             } else {\n                 columns.add(new PropertyColumn<AnyObjectTO, String>(new ResourceModel(name, name), name, name));\n@@ -161,7 +164,7 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                         final AnyObjectTO clone = SerializationUtils.clone(model.getObject());\n-                        clone.setKey(0L);\n+                        clone.setKey(null);\n                         send(AnyObjectDirectoryPanel.this, Broadcast.EXACT,\n                                 new AjaxWizard.NewItemActionEvent<>(new AnyHandler<>(clone), target));\n                     }"},{"sha":"7cf3b33cd1433e489dded722dd1930d98789f656","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeDetailsPanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeDetailsPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -75,7 +75,6 @@ public AnyTypeDetailsPanel(final String id, final AnyTypeTO anyTypeTO) {\n \n     private List<String> getAvailableAnyTypeClasses() {\n         return CollectionUtils.collect(new AnyTypeClassRestClient().list(),\n-                EntityTOUtils.<String, AnyTypeClassTO>keyTransformer(),\n-                new ArrayList<String>());\n+                EntityTOUtils.<AnyTypeClassTO>keyTransformer(), new ArrayList<String>());\n     }\n }"},{"sha":"71cd7dee9105dd163c3e9a4c322a66114f9d08d9","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupDirectoryPanel.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -35,6 +35,7 @@\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -80,7 +81,9 @@ protected List<IColumn<GroupTO, String>> getColumns() {\n         for (String name : prefMan.getList(getRequest(), Constants.PREF_GROUP_DETAILS_VIEW)) {\n             final Field field = ReflectionUtils.findField(GroupTO.class, name);\n \n-            if (field != null && field.getType().equals(Date.class)) {\n+            if (\"key\".equalsIgnoreCase(name)) {\n+                columns.add(new KeyPropertyColumn<GroupTO>(new ResourceModel(name, name), name, name));\n+            } else if (field != null && field.getType().equals(Date.class)) {\n                 columns.add(new DatePropertyColumn<GroupTO>(new ResourceModel(name, name), name, name));\n             } else {\n                 columns.add(new PropertyColumn<GroupTO, String>(new ResourceModel(name, name), name, name));\n@@ -155,7 +158,7 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                         final GroupTO clone = SerializationUtils.clone(model.getObject());\n-                        clone.setKey(0L);\n+                        clone.setKey(null);\n                         send(GroupDirectoryPanel.this, Broadcast.EXACT,\n                                 new AjaxWizard.NewItemActionEvent<>(new GroupHandler(clone), target));\n                     }"},{"sha":"fe25812902c1f7d1ecd2bcbe0fdf189c5ea044dc","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmChoicePanel.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -63,7 +63,7 @@ public class RealmChoicePanel extends Panel {\n \n     private final Model<RealmTO> model;\n \n-    private final Map<Long, Pair<RealmTO, List<RealmTO>>> tree;\n+    private final Map<String, Pair<RealmTO, List<RealmTO>>> tree;\n \n     public RealmChoicePanel(final String id, final PageReference pageRef) {\n         super(id);\n@@ -81,8 +81,8 @@ public RealmChoicePanel(final String id, final PageReference pageRef) {\n \n             private void getChildren(\n                     final List<Pair<String, RealmTO>> full,\n-                    final long key,\n-                    final Map<Long, Pair<RealmTO, List<RealmTO>>> tree,\n+                    final String key,\n+                    final Map<String, Pair<RealmTO, List<RealmTO>>> tree,\n                     final String indent) {\n \n                 if (tree.containsKey(key)) {\n@@ -96,11 +96,11 @@ private void getChildren(\n \n             @Override\n             protected List<Pair<String, RealmTO>> load() {\n-                Map<Long, Pair<RealmTO, List<RealmTO>>> map = reloadRealmParentMap();\n-                model.setObject(map.get(1L).getKey());\n+                Map<String, Pair<RealmTO, List<RealmTO>>> map = reloadRealmParentMap();\n+                model.setObject(map.get(null).getKey());\n \n                 final List<Pair<String, RealmTO>> full = new ArrayList<>();\n-                getChildren(full, 0L, map, StringUtils.EMPTY);\n+                getChildren(full, null, map, StringUtils.EMPTY);\n                 return full;\n             }\n         };\n@@ -163,17 +163,17 @@ public final RealmChoicePanel reloadRealmTree(final AjaxRequestTarget target) {\n         return this;\n     }\n \n-    private Map<Long, Pair<RealmTO, List<RealmTO>>> reloadRealmParentMap() {\n+    private Map<String, Pair<RealmTO, List<RealmTO>>> reloadRealmParentMap() {\n         final List<RealmTO> realms = realmRestClient.list();\n         Collections.sort(realms, new RealmNameComparator());\n         return reloadRealmParentMap(realms);\n     }\n \n-    private Map<Long, Pair<RealmTO, List<RealmTO>>> reloadRealmParentMap(final List<RealmTO> realms) {\n+    private Map<String, Pair<RealmTO, List<RealmTO>>> reloadRealmParentMap(final List<RealmTO> realms) {\n         tree.clear();\n-        tree.put(0L, Pair.<RealmTO, List<RealmTO>>of(realms.get(0), new ArrayList<RealmTO>()));\n+        tree.put(null, Pair.<RealmTO, List<RealmTO>>of(realms.get(0), new ArrayList<RealmTO>()));\n \n-        final Map<Long, List<RealmTO>> cache = new HashMap<>();\n+        final Map<String, List<RealmTO>> cache = new HashMap<>();\n \n         for (RealmTO realm : realms) {\n             final List<RealmTO> children = new ArrayList<>();\n@@ -223,7 +223,7 @@ public RealmTO getCurrentRealm() {\n         return model.getObject();\n     }\n \n-    public RealmTO moveToParentRealm(final long key) {\n+    public RealmTO moveToParentRealm(final String key) {\n         for (Pair<RealmTO, List<RealmTO>> subtree : tree.values()) {\n             for (RealmTO child : subtree.getRight()) {\n                 if (child.getKey() == key) {"},{"sha":"766a2b8fb77e683aeeb91c0856ae1418dfb1e1dc","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmDetails.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -53,27 +53,27 @@ public class RealmDetails extends Panel {\n \n     private final PolicyRestClient policyRestClient = new PolicyRestClient();\n \n-    private final IModel<Map<Long, String>> accountPolicies = new LoadableDetachableModel<Map<Long, String>>() {\n+    private final IModel<Map<String, String>> accountPolicies = new LoadableDetachableModel<Map<String, String>>() {\n \n         private static final long serialVersionUID = -2012833443695917883L;\n \n         @Override\n-        protected Map<Long, String> load() {\n-            Map<Long, String> res = new HashMap<>();\n+        protected Map<String, String> load() {\n+            Map<String, String> res = new HashMap<>();\n             for (AbstractPolicyTO policyTO : policyRestClient.getPolicies(PolicyType.ACCOUNT)) {\n                 res.put(policyTO.getKey(), policyTO.getDescription());\n             }\n             return res;\n         }\n     };\n \n-    private final IModel<Map<Long, String>> passwordPolicies = new LoadableDetachableModel<Map<Long, String>>() {\n+    private final IModel<Map<String, String>> passwordPolicies = new LoadableDetachableModel<Map<String, String>>() {\n \n         private static final long serialVersionUID = -2012833443695917883L;\n \n         @Override\n-        protected Map<Long, String> load() {\n-            Map<Long, String> res = new HashMap<>();\n+        protected Map<String, String> load() {\n+            Map<String, String> res = new HashMap<>();\n             for (AbstractPolicyTO policyTO : policyRestClient.getPolicies(PolicyType.PASSWORD)) {\n                 res.put(policyTO.getKey(), policyTO.getDescription());\n             }\n@@ -120,20 +120,20 @@ public RealmDetails(\n         fullPath.setEnabled(false);\n         container.add(fullPath);\n \n-        AjaxDropDownChoicePanel<Long> accountPolicy = new AjaxDropDownChoicePanel<>(\n+        AjaxDropDownChoicePanel<String> accountPolicy = new AjaxDropDownChoicePanel<>(\n                 \"accountPolicy\",\n                 new ResourceModel(\"accountPolicy\", \"accountPolicy\").getObject(),\n-                new PropertyModel<Long>(realmTO, \"accountPolicy\"),\n+                new PropertyModel<String>(realmTO, \"accountPolicy\"),\n                 false);\n         accountPolicy.setChoiceRenderer(new PolicyRenderer(accountPolicies));\n         accountPolicy.setChoices(new ArrayList<>(accountPolicies.getObject().keySet()));\n         ((DropDownChoice<?>) accountPolicy.getField()).setNullValid(true);\n         container.add(accountPolicy);\n \n-        AjaxDropDownChoicePanel<Long> passwordPolicy = new AjaxDropDownChoicePanel<>(\n+        AjaxDropDownChoicePanel<String> passwordPolicy = new AjaxDropDownChoicePanel<>(\n                 \"passwordPolicy\",\n                 new ResourceModel(\"passwordPolicy\", \"passwordPolicy\").getObject(),\n-                new PropertyModel<Long>(realmTO, \"passwordPolicy\"),\n+                new PropertyModel<String>(realmTO, \"passwordPolicy\"),\n                 false);\n         passwordPolicy.setChoiceRenderer(new PolicyRenderer(passwordPolicies));\n         passwordPolicy.setChoices(new ArrayList<>(passwordPolicies.getObject().keySet()));"},{"sha":"81ae568545234412393d56ce7838b9700bd2dd3c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionsModalPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsModalPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -51,7 +51,7 @@ public final SecurityQuestionTO getItem() {\n     @Override\n     public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n         try {\n-            if (securityQuestionTO.getKey() == null || securityQuestionTO.getKey() == 0) {\n+            if (securityQuestionTO.getKey() == null) {\n                 SyncopeConsoleSession.get().getService(SecurityQuestionService.class).create(securityQuestionTO);\n             } else {\n                 SyncopeConsoleSession.get().getService(SecurityQuestionService.class).update(securityQuestionTO);"},{"sha":"1735620fcf3074c637f56fd87482fb496e9f3b4c","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionsPanel.java","status":"modified","additions":9,"deletions":34,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -19,14 +19,11 @@\n package org.apache.syncope.client.console.panels;\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n-import java.lang.reflect.Field;\n-import java.lang.reflect.Modifier;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n-import java.util.Map;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n@@ -35,6 +32,7 @@\n import org.apache.syncope.client.console.panels.SecurityQuestionsPanel.SecurityQuestionsProvider;\n import org.apache.syncope.client.console.rest.SecurityQuestionRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wizards.AbstractModalPanelBuilder;\n@@ -52,6 +50,7 @@\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.StringResourceModel;\n \n public class SecurityQuestionsPanel extends DirectoryPanel<\n         SecurityQuestionTO, SecurityQuestionTO, SecurityQuestionsProvider, SecurityQuestionRestClient> {\n@@ -113,37 +112,13 @@ protected Collection<ActionLink.ActionType> getBulkActions() {\n \n     @Override\n     protected List<IColumn<SecurityQuestionTO, String>> getColumns() {\n-        final List<IColumn<SecurityQuestionTO, String>> columns = new ArrayList<>();\n-\n-        for (Field field : SecurityQuestionTO.class.getDeclaredFields()) {\n-            if (field != null && !Modifier.isStatic(field.getModifiers())) {\n-                final String fieldName = field.getName();\n-                if (field.getType().isArray()\n-                        || Collection.class.isAssignableFrom(field.getType())\n-                        || Map.class.isAssignableFrom(field.getType())) {\n-\n-                    columns.add(new PropertyColumn<SecurityQuestionTO, String>(\n-                            new ResourceModel(field.getName()), field.getName()));\n-                } else {\n-                    columns.add(new PropertyColumn<SecurityQuestionTO, String>(\n-                            new ResourceModel(field.getName()), field.getName(), field.getName()) {\n-\n-                        private static final long serialVersionUID = -6902459669035442212L;\n-\n-                        @Override\n-                        public String getCssClass() {\n-                            String css = super.getCssClass();\n-                            if (\"key\".equals(fieldName)) {\n-                                css = StringUtils.isBlank(css)\n-                                        ? \"col-xs-1\"\n-                                        : css + \" col-xs-1\";\n-                            }\n-                            return css;\n-                        }\n-                    });\n-                }\n-            }\n-        }\n+        List<IColumn<SecurityQuestionTO, String>> columns = new ArrayList<>();\n+\n+        columns.add(new KeyPropertyColumn<SecurityQuestionTO>(\n+                new StringResourceModel(\"key\", this, null), \"key\", \"key\"));\n+\n+        columns.add(new PropertyColumn<SecurityQuestionTO, String>(\n+                new StringResourceModel(\"content\", this, null), \"content\", \"content\"));\n \n         columns.add(new ActionColumn<SecurityQuestionTO, String>(new ResourceModel(\"actions\")) {\n "},{"sha":"e3e9424f30a219c4261f6f82c038826024db98dd","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserDirectoryPanel.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -37,6 +37,7 @@\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.TokenColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n@@ -94,7 +95,9 @@ protected List<IColumn<UserTO, String>> getColumns() {\n         for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_DETAILS_VIEW)) {\n             final Field field = ReflectionUtils.findField(UserTO.class, name);\n \n-            if (\"token\".equalsIgnoreCase(name)) {\n+            if (\"key\".equalsIgnoreCase(name)) {\n+                columns.add(new KeyPropertyColumn<UserTO>(new ResourceModel(name, name), name, name));\n+            } else if (\"token\".equalsIgnoreCase(name)) {\n                 columns.add(new TokenColumn<UserTO>(new ResourceModel(name, name), name));\n             } else if (field != null\n                     && (field.getType().equals(Boolean.class) || field.getType().equals(boolean.class))) {\n@@ -214,7 +217,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                         UserTO clone = SerializationUtils.clone(model.getObject());\n-                        clone.setKey(0L);\n+                        clone.setKey(null);\n                         clone.setUsername(model.getObject().getUsername() + \"_clone\");\n                         send(UserDirectoryPanel.this, Broadcast.EXACT,\n                                 new AjaxWizard.NewItemActionEvent<>(new AnyHandler<>(clone), target));"},{"sha":"d0124c5b06626bcd6b62e8a7cafbd8f64c710ec7","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/VirSchemaDetails.java","status":"modified","additions":8,"deletions":9,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FVirSchemaDetails.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -43,9 +43,9 @@ public class VirSchemaDetails extends AbstractSchemaDetailsPanel {\n \n     private final ResourceRestClient resourceRestClient = new ResourceRestClient();\n \n-    private Map<Long, String> anys = new HashMap<>();\n+    private Map<String, String> anys = new HashMap<>();\n \n-    private final AjaxDropDownChoicePanel<Long> provision;\n+    private final AjaxDropDownChoicePanel<String> provision;\n \n     public VirSchemaDetails(final String id,\n             final PageReference pageReference,\n@@ -59,15 +59,14 @@ public VirSchemaDetails(final String id,\n         final AjaxDropDownChoicePanel<String> resource = new AjaxDropDownChoicePanel<>(\n                 \"resource\", getString(\"resource\"), new PropertyModel<String>(schemaTO, \"resource\"));\n         resource.setChoices(CollectionUtils.collect(resourceRestClient.list(),\n-                EntityTOUtils.<String, ResourceTO>keyTransformer(),\n-                new ArrayList<String>()));\n+                EntityTOUtils.<ResourceTO>keyTransformer(), new ArrayList<String>()));\n \n         resource.setOutputMarkupId(true);\n         resource.addRequiredLabel();\n         schemaForm.add(resource);\n \n         provision = new AjaxDropDownChoicePanel<>(\n-                \"provision\", getString(\"provision\"), new PropertyModel<Long>(schemaTO, \"provision\"));\n+                \"provision\", getString(\"provision\"), new PropertyModel<String>(schemaTO, \"provision\"));\n \n         provision.setChoices(new ArrayList<>(anys.keySet()));\n         provision.setChoiceRenderer(new AnyTypeRenderer());\n@@ -98,14 +97,14 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     }\n                 }\n                 provision.setChoices(new ArrayList<>(anys.keySet()));\n-                provision.setModelObject(0L);\n+                provision.setModelObject(null);\n                 provision.setVisible(true);\n                 target.add(provision);\n             }\n         });\n     }\n \n-    private class AnyTypeRenderer extends ChoiceRenderer<Long> {\n+    private class AnyTypeRenderer extends ChoiceRenderer<String> {\n \n         private static final long serialVersionUID = 2840364232128308553L;\n \n@@ -114,12 +113,12 @@ private class AnyTypeRenderer extends ChoiceRenderer<Long> {\n         }\n \n         @Override\n-        public Object getDisplayValue(final Long object) {\n+        public Object getDisplayValue(final String object) {\n             return anys.get(object);\n         }\n \n         @Override\n-        public String getIdValue(final Long object, final int index) {\n+        public String getIdValue(final String object, final int index) {\n             return String.valueOf(object != null ? object : 0L);\n         }\n     }"},{"sha":"1b6de2c5da48576fa4788c1e22d866b451ca62dc","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AbstractSearchPanel.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -61,7 +61,7 @@ public abstract class AbstractSearchPanel extends Panel {\n \n     protected IModel<List<SearchClause.Type>> types;\n \n-    protected IModel<Map<Long, String>> groupNames;\n+    protected IModel<Map<String, String>> groupNames;\n \n     protected IModel<List<String>> roleNames;\n \n@@ -168,8 +168,7 @@ protected List<String> load() {\n                 return CollectionUtils.collect(\n                         schemaRestClient.getSchemas(SchemaType.PLAIN, anyTypeRestClient.read(type).getClasses().\n                                 toArray(new String[] {})),\n-                        EntityTOUtils.<String, AbstractSchemaTO>keyTransformer(),\n-                        new ArrayList<String>());\n+                        EntityTOUtils.<AbstractSchemaTO>keyTransformer(), new ArrayList<String>());\n             }\n         };\n \n@@ -180,8 +179,7 @@ protected List<String> load() {\n             @Override\n             protected List<String> load() {\n                 return CollectionUtils.collect(resourceRestClient.list(),\n-                        EntityTOUtils.<String, ResourceTO>keyTransformer(),\n-                        new ArrayList<String>());\n+                        EntityTOUtils.<ResourceTO>keyTransformer(), new ArrayList<String>());\n             }\n         };\n     }"},{"sha":"f67e32bc58d83787b9b978b90de2840a2a483d41","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AnyObjectSearchPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -74,15 +74,15 @@ protected List<SearchClause.Type> load() {\n             }\n         };\n \n-        this.groupNames = new LoadableDetachableModel<Map<Long, String>>() {\n+        this.groupNames = new LoadableDetachableModel<Map<String, String>>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n-            protected Map<Long, String> load() {\n+            protected Map<String, String> load() {\n                 List<GroupTO> groupTOs = groupRestClient.list(\"/\", -1, -1, new SortParam<>(\"name\", true), null);\n \n-                final Map<Long, String> result = new HashMap<>(groupTOs.size());\n+                final Map<String, String> result = new HashMap<>(groupTOs.size());\n                 for (GroupTO group : groupTOs) {\n                     result.put(group.getKey(), group.getName());\n                 }"},{"sha":"17b8aa016f0083222eaa3292f5c368954ada4637","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AnySelectionDirectoryPanel.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnySelectionDirectoryPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -33,6 +33,7 @@\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.BooleanPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.TokenColumn;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n@@ -72,7 +73,9 @@ protected List<IColumn<T, String>> getColumns() {\n         for (String name : prefMan.getList(getRequest(), getPrefDetailsView())) {\n             final Field field = ReflectionUtils.findField(AnyObjectTO.class, name);\n \n-            if (reference == UserTO.class && \"token\".equalsIgnoreCase(name)) {\n+            if (\"key\".equalsIgnoreCase(name)) {\n+                columns.add(new KeyPropertyColumn<T>(new ResourceModel(name, name), name, name));\n+            } else if (reference == UserTO.class && \"token\".equalsIgnoreCase(name)) {\n                 columns.add(new TokenColumn<T>(new ResourceModel(name, name), name));\n             } else if (field != null\n                     && (field.getType().equals(Boolean.class) || field.getType().equals(boolean.class))) {"},{"sha":"d91aa28e9b85fec12d2b2b676f7e13e01105460d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/GroupSearchPanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FGroupSearchPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -65,13 +65,13 @@ protected List<SearchClause.Type> load() {\n             }\n         };\n \n-        this.groupNames = new LoadableDetachableModel<Map<Long, String>>() {\n+        this.groupNames = new LoadableDetachableModel<Map<String, String>>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n-            protected Map<Long, String> load() {\n-                return Collections.<Long, String>emptyMap();\n+            protected Map<String, String> load() {\n+                return Collections.<String, String>emptyMap();\n             }\n         };\n     }"},{"sha":"05c5157e176316b9c6ea2150109adaf168be0321","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchClausePanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClausePanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -70,7 +70,7 @@ public class SearchClausePanel extends FieldPanel<SearchClause> {\n \n     private final IModel<List<String>> dnames;\n \n-    private final IModel<Map<Long, String>> groupNames;\n+    private final IModel<Map<String, String>> groupNames;\n \n     private final IModel<List<String>> roleNames;\n \n@@ -96,7 +96,7 @@ public SearchClausePanel(\n             final IModel<List<SearchClause.Type>> types,\n             final IModel<List<String>> anames,\n             final IModel<List<String>> dnames,\n-            final IModel<Map<Long, String>> groupNames,\n+            final IModel<Map<String, String>> groupNames,\n             final IModel<List<String>> roleNames,\n             final IModel<List<String>> resourceNames\n     ) {\n@@ -190,7 +190,7 @@ protected List<String> load() {\n \n                     case GROUP_MEMBERSHIP:\n                         final List<String> groups = CollectionUtils.collect(groupNames.getObject().keySet(),\n-                                StringValueTransformer.<Long>stringValueTransformer(), new ArrayList<String>());\n+                                StringValueTransformer.<String>stringValueTransformer(), new ArrayList<String>());\n \n                         Collections.sort(groups);\n                         return groups;"},{"sha":"83960e16666f1867a654c4df83e1dec01fe4bce5","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchUtils.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchUtils.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -176,16 +176,16 @@ public static String buildFIQL(final List<SearchClause> clauses, final AbstractF\n \n                 switch (clause.getType()) {\n                     case GROUP_MEMBERSHIP:\n-                        Long groupId = NumberUtils.toLong(clause.getProperty().split(\" \")[0]);\n+                        String groupKey = clause.getProperty().split(\" \")[0];\n \n                         if (builder instanceof UserFiqlSearchConditionBuilder) {\n                             condition = clause.getComparator() == SearchClause.Comparator.EQUALS\n-                                    ? ((UserFiqlSearchConditionBuilder) builder).inGroups(groupId)\n-                                    : ((UserFiqlSearchConditionBuilder) builder).notInGroups(groupId);\n+                                    ? ((UserFiqlSearchConditionBuilder) builder).inGroups(groupKey)\n+                                    : ((UserFiqlSearchConditionBuilder) builder).notInGroups(groupKey);\n                         } else {\n                             condition = clause.getComparator() == SearchClause.Comparator.EQUALS\n-                                    ? ((AnyObjectFiqlSearchConditionBuilder) builder).inGroups(groupId)\n-                                    : ((AnyObjectFiqlSearchConditionBuilder) builder).notInGroups(groupId);\n+                                    ? ((AnyObjectFiqlSearchConditionBuilder) builder).inGroups(groupKey)\n+                                    : ((AnyObjectFiqlSearchConditionBuilder) builder).notInGroups(groupKey);\n                         }\n                         break;\n \n@@ -271,11 +271,11 @@ public static String buildFIQL(final List<SearchClause> clauses, final AbstractF\n                                     break;\n                                 case EQUALS:\n                                     condition = ((UserFiqlSearchConditionBuilder) builder).\n-                                            inRelationships(Long.parseLong(value));\n+                                            inRelationships(value);\n                                     break;\n                                 case NOT_EQUALS:\n                                     condition = ((UserFiqlSearchConditionBuilder) builder).\n-                                            notInRelationships(Long.parseLong(value));\n+                                            notInRelationships(value);\n                                     break;\n                                 default:\n                                     break;\n@@ -292,11 +292,11 @@ public static String buildFIQL(final List<SearchClause> clauses, final AbstractF\n                                     break;\n                                 case EQUALS:\n                                     condition = ((AnyObjectFiqlSearchConditionBuilder) builder).\n-                                            inRelationships(Long.parseLong(value));\n+                                            inRelationships(value);\n                                     break;\n                                 case NOT_EQUALS:\n                                     condition = ((AnyObjectFiqlSearchConditionBuilder) builder).\n-                                            notInRelationships(Long.parseLong(value));\n+                                            notInRelationships(value);\n                                     break;\n                                 default:\n                                     break;"},{"sha":"2eaad2f96f98a5bb01532e7e6a61ac73a76c73ba","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AbstractAnyRestClient.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAbstractAnyRestClient.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -47,12 +47,12 @@\n     public abstract List<T> search(\n             String realm, String fiql, int page, int size, final SortParam<String> sort, final String type);\n \n-    public abstract T read(final Long key);\n+    public abstract T read(final String key);\n \n-    public abstract ProvisioningResult<T> delete(String etag, Long key);\n+    public abstract ProvisioningResult<T> delete(String etag, String key);\n \n     protected <E extends AnyService<T, ?>> ProvisioningResult<T> delete(\n-            final Class<E> serviceClass, final Class<T> objectType, final String etag, final Long key) {\n+            final Class<E> serviceClass, final Class<T> objectType, final String etag, final String key) {\n         ProvisioningResult<T> result;\n         synchronized (this) {\n             final E service = getService(etag, serviceClass);\n@@ -67,7 +67,7 @@ public abstract List<T> search(\n \n     protected abstract Class<? extends AnyService<?, ?>> getAnyServiceClass();\n \n-    public BulkActionResult unlink(final String etag, final long key, final List<StatusBean> statuses) {\n+    public BulkActionResult unlink(final String etag, final String key, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n             AnyService<?, ?> service = getService(etag, getAnyServiceClass());\n@@ -84,7 +84,7 @@ public BulkActionResult unlink(final String etag, final long key, final List<Sta\n         return result;\n     }\n \n-    public BulkActionResult link(final String etag, final long key, final List<StatusBean> statuses) {\n+    public BulkActionResult link(final String etag, final String key, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n             AnyService<?, ?> service = getService(etag, getAnyServiceClass());\n@@ -104,7 +104,7 @@ public BulkActionResult link(final String etag, final long key, final List<Statu\n         return result;\n     }\n \n-    public BulkActionResult deprovision(final String etag, final long key, final List<StatusBean> statuses) {\n+    public BulkActionResult deprovision(final String etag, final String key, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n             AnyService<?, ?> service = getService(etag, getAnyServiceClass());\n@@ -121,7 +121,7 @@ public BulkActionResult deprovision(final String etag, final long key, final Lis\n         return result;\n     }\n \n-    public BulkActionResult provision(final String etag, final long key, final List<StatusBean> statuses) {\n+    public BulkActionResult provision(final String etag, final String key, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n             AnyService<?, ?> service = getService(etag, getAnyServiceClass());\n@@ -141,7 +141,7 @@ public BulkActionResult provision(final String etag, final long key, final List<\n         return result;\n     }\n \n-    public BulkActionResult unassign(final String etag, final long key, final List<StatusBean> statuses) {\n+    public BulkActionResult unassign(final String etag, final String key, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n             AnyService<?, ?> service = getService(etag, getAnyServiceClass());\n@@ -158,7 +158,7 @@ public BulkActionResult unassign(final String etag, final long key, final List<S\n         return result;\n     }\n \n-    public BulkActionResult assign(final String etag, final long key, final List<StatusBean> statuses) {\n+    public BulkActionResult assign(final String etag, final String key, final List<StatusBean> statuses) {\n         BulkActionResult result;\n         synchronized (this) {\n             AnyService<?, ?> service = getService(etag, getAnyServiceClass());"},{"sha":"1160fe796eb5654b076398a68afd2b2553db3154","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AnyObjectRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -81,7 +81,7 @@ public List<AnyObjectTO> search(final String realm, final String fiql, final int\n     }\n \n     @Override\n-    public AnyObjectTO read(final Long key) {\n+    public AnyObjectTO read(final String key) {\n         return getService(AnyObjectService.class).read(key);\n     }\n \n@@ -103,7 +103,7 @@ public ProvisioningResult<AnyObjectTO> update(final String etag, final AnyObject\n     }\n \n     @Override\n-    public ProvisioningResult<AnyObjectTO> delete(final String etag, final Long key) {\n+    public ProvisioningResult<AnyObjectTO> delete(final String etag, final String key) {\n         return delete(AnyObjectService.class, AnyObjectTO.class, etag, key);\n     }\n "},{"sha":"f9e293b40f926f1e82a97ace5ad8463c515061c5","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ConnectorRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConnectorRestClient.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -71,7 +71,7 @@ public ConnInstanceTO create(final ConnInstanceTO connectorTO) {\n      * @param key the id\n      * @return ConnInstanceTO\n      */\n-    public ConnInstanceTO read(final Long key) {\n+    public ConnInstanceTO read(final String key) {\n         ConnInstanceTO connectorTO = null;\n \n         try {\n@@ -91,7 +91,7 @@ public void update(final ConnInstanceTO connectorTO) {\n         getService(ConnectorService.class).update(connectorTO);\n     }\n \n-    public ConnInstanceTO delete(final Long key) {\n+    public ConnInstanceTO delete(final String key) {\n         ConnInstanceTO connectorTO = getService(ConnectorService.class).\n                 read(key, SyncopeConsoleSession.get().getLocale().toString());\n         getService(ConnectorService.class).delete(key);"},{"sha":"1bb0ad91a154010494821c8e995531e7d374ee26","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ExecutionRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FExecutionRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FExecutionRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FExecutionRestClient.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -24,9 +24,9 @@\n \n public interface ExecutionRestClient {\n \n-    void startExecution(long executionCollectorKey, Date start);\n+    void startExecution(String executionCollectorKey, Date start);\n \n-    void deleteExecution(long executionKeyI);\n+    void deleteExecution(String executionKey);\n \n     List<ExecTO> listRecentExecutions(final int max);\n }"},{"sha":"ff5e08e7ec054b766c46c033f1722f20020f1a5b","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/GroupRestClient.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FGroupRestClient.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -20,7 +20,6 @@\n \n import java.util.List;\n import javax.ws.rs.core.GenericType;\n-\n import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.patch.GroupPatch;\n import org.apache.syncope.common.lib.to.BulkAction;\n@@ -53,8 +52,9 @@ public int count(final String realm, final String type) {\n     }\n \n     @Override\n-    public List<GroupTO> list(final String realm, final int page, final int size, final SortParam<String> sort,\n-            final String type) {\n+    public List<GroupTO> list(\n+            final String realm, final int page, final int size, final SortParam<String> sort, final String type) {\n+\n         return getService(GroupService.class).\n                 list(new AnyListQuery.Builder().realm(realm).page(page).size(size).\n                         orderBy(toOrderBy(sort)).details(false).build()).\n@@ -86,7 +86,7 @@ public ProvisioningResult<GroupTO> create(final GroupTO groupTO) {\n     }\n \n     @Override\n-    public GroupTO read(final Long key) {\n+    public GroupTO read(final String key) {\n         return getService(GroupService.class).read(key);\n     }\n \n@@ -102,7 +102,7 @@ public ProvisioningResult<GroupTO> update(final String etag, final GroupPatch pa\n     }\n \n     @Override\n-    public ProvisioningResult<GroupTO> delete(final String etag, final Long key) {\n+    public ProvisioningResult<GroupTO> delete(final String etag, final String key) {\n         return delete(GroupService.class, GroupTO.class, etag, key);\n     }\n "},{"sha":"f5b2e30b0c75eddcfdebecb8218a8144bb104dd6","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/NotificationRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FNotificationRestClient.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -39,7 +39,7 @@ public List<NotificationTO> getAllNotifications() {\n         return getService(NotificationService.class).list();\n     }\n \n-    public NotificationTO read(final Long key) {\n+    public NotificationTO read(final String key) {\n         return getService(NotificationService.class).read(key);\n     }\n \n@@ -51,7 +51,7 @@ public void update(final NotificationTO notificationTO) {\n         getService(NotificationService.class).update(notificationTO);\n     }\n \n-    public void delete(final Long key) {\n+    public void delete(final String key) {\n         getService(NotificationService.class).delete(key);\n     }\n "},{"sha":"c5e8e364353dab760cbbaa472fbfa2d55a3da620","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/PolicyRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -31,7 +31,7 @@ public class PolicyRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -1392090291817187902L;\n \n-    public <T extends AbstractPolicyTO> T getPolicy(final Long key) {\n+    public <T extends AbstractPolicyTO> T getPolicy(final String key) {\n         T policy = null;\n         try {\n             policy = getService(PolicyService.class).read(key);\n@@ -62,7 +62,7 @@ public <T extends AbstractPolicyTO> void updatePolicy(final T policy) {\n         getService(PolicyService.class).update(policy);\n     }\n \n-    public void delete(final Long id, final Class<? extends AbstractPolicyTO> policyClass) {\n-        getService(PolicyService.class).delete(id);\n+    public void delete(final String key, final Class<? extends AbstractPolicyTO> policyClass) {\n+        getService(PolicyService.class).delete(key);\n     }\n }"},{"sha":"743ebfb9f14493237b774c7740e6a10ee0d630bc","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ReportRestClient.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -31,7 +31,7 @@ public class ReportRestClient extends BaseRestClient implements ExecutionRestCli\n \n     private static final long serialVersionUID = 1644689667998953604L;\n \n-    public ReportTO read(final Long reportKey) {\n+    public ReportTO read(final String reportKey) {\n         return getService(ReportService.class).read(reportKey);\n     }\n \n@@ -52,17 +52,17 @@ public void update(final ReportTO reportTO) {\n      *\n      * @param reportKey report to delete\n      */\n-    public void delete(final long reportKey) {\n+    public void delete(final String reportKey) {\n         getService(ReportService.class).delete(reportKey);\n     }\n \n     @Override\n-    public void startExecution(final long reportKey, final Date start) {\n+    public void startExecution(final String reportKey, final Date start) {\n         getService(ReportService.class).execute(new ExecuteQuery.Builder().key(reportKey).startAt(start).build());\n     }\n \n     @Override\n-    public void deleteExecution(final long reportExecKey) {\n+    public void deleteExecution(final String reportExecKey) {\n         getService(ReportService.class).deleteExecution(reportExecKey);\n     }\n \n@@ -71,7 +71,7 @@ public List<ExecTO> listRecentExecutions(final int max) {\n         return getService(ReportService.class).listRecentExecutions(max);\n     }\n \n-    public Response exportExecutionResult(final long executionId, final ReportExecExportFormat fmt) {\n-        return getService(ReportService.class).exportExecutionResult(executionId, fmt);\n+    public Response exportExecutionResult(final String executionKey, final ReportExecExportFormat fmt) {\n+        return getService(ReportService.class).exportExecutionResult(executionKey, fmt);\n     }\n }"},{"sha":"fceef65eb338a391ce52d202e053e01bb85508e3","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ResourceRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -39,7 +39,7 @@ public class ResourceRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -6898907679835668987L;\n \n-    public ConnObjectTO readConnObject(final String resource, final String anyTypeKey, final Long anyKey) {\n+    public ConnObjectTO readConnObject(final String resource, final String anyTypeKey, final String anyKey) {\n         return getService(ResourceService.class).readConnObject(resource, anyTypeKey, anyKey);\n     }\n \n@@ -97,7 +97,7 @@ public BulkActionResult bulkAction(final BulkAction action) {\n \n     public BulkActionResult bulkAssociationAction(\n             final String resourceName, final String anyTypeName,\n-            final ResourceDeassociationAction action, final List<Long> anyKeys) {\n+            final ResourceDeassociationAction action, final List<String> anyKeys) {\n \n         ResourceDeassociationPatch patch = new ResourceDeassociationPatch();\n         patch.setKey(resourceName);"},{"sha":"d6d50819fbfbe6af909d236ff5027f027831dc77","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/SchemaRestClient.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -77,8 +77,7 @@ public List<String> getSchemaNames(final SchemaType schemaType) {\n \n         try {\n             CollectionUtils.collect(getSchemas(schemaType),\n-                    EntityTOUtils.<String, AbstractSchemaTO>keyTransformer(),\n-                    schemaNames);\n+                    EntityTOUtils.<AbstractSchemaTO>keyTransformer(), schemaNames);\n         } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all user schema names\", e);\n         }"},{"sha":"2eb2691eaad18014021892fd25eda4cc65e796bd","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/SecurityQuestionRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSecurityQuestionRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSecurityQuestionRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSecurityQuestionRestClient.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -38,7 +38,7 @@ public void update(final SecurityQuestionTO securityQuestionTO) {\n         getService(SecurityQuestionService.class).update(securityQuestionTO);\n     }\n \n-    public void delete(final Long securityQuestionKey) {\n+    public void delete(final String securityQuestionKey) {\n         getService(SecurityQuestionService.class).delete(securityQuestionKey);\n     }\n "},{"sha":"2a494cd2f41caf1d9f474eae337d80e4f9b2c73e","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/TaskRestClient.java","status":"modified","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -55,13 +55,13 @@ public int count(final String resource, final TaskType kind) {\n                 build()).getTotalCount();\n     }\n \n-    public int count(final AnyTypeKind anyTypeKind, final Long anyTypeKey, final TaskType kind) {\n+    public int count(final AnyTypeKind anyTypeKind, final String anyTypeKey, final TaskType kind) {\n         return getService(TaskService.class).list(\n                 new TaskQuery.Builder(kind).anyTypeKind(anyTypeKind).anyTypeKey(anyTypeKey).page(1).size(1).\n                 build()).getTotalCount();\n     }\n \n-    public int countExecutions(final Long taskKey) {\n+    public int countExecutions(final String taskKey) {\n         return getService(TaskService.class).\n                 listExecutions(new TaskExecQuery.Builder().key(taskKey).page(1).size(1).build()).getTotalCount();\n     }\n@@ -78,7 +78,7 @@ public List<PropagationTaskTO> listPropagationTasks(\n     }\n \n     public List<PropagationTaskTO> listPropagationTasks(\n-            final AnyTypeKind anyTypeKind, final Long anyTypeKey,\n+            final AnyTypeKind anyTypeKind, final String anyTypeKey,\n             final int page, final int size, final SortParam<String> sort) {\n \n         return getService(TaskService.class).\n@@ -91,9 +91,9 @@ public List<PropagationTaskTO> listPropagationTasks(\n \n     @SuppressWarnings(\"unchecked\")\n     public <T extends AbstractTaskTO> List<T> listNotificationTasks(\n-            final Long notification,\n+            final String notification,\n             final AnyTypeKind anyTypeKind,\n-            final Long anyTypeKey,\n+            final String anyTypeKey,\n             final int page,\n             final int size,\n             final SortParam<String> sort) {\n@@ -139,9 +139,9 @@ public <T extends AbstractTaskTO> List<T> list(\n                 getResult();\n     }\n \n-    public List<ExecTO> listExecutions(final Long taskId, final int page, final int size) {\n+    public List<ExecTO> listExecutions(final String taskKey, final int page, final int size) {\n         return getService(TaskService.class).\n-                listExecutions(new TaskExecQuery.Builder().key(taskId).page(page).size(size).build()).getResult();\n+                listExecutions(new TaskExecQuery.Builder().key(taskKey).page(page).size(size).build()).getResult();\n     }\n \n     private TaskType getTaskType(final Class<?> reference) {\n@@ -160,35 +160,35 @@ private TaskType getTaskType(final Class<?> reference) {\n         return result;\n     }\n \n-    public PropagationTaskTO readPropagationTask(final Long taskKey) {\n+    public PropagationTaskTO readPropagationTask(final String taskKey) {\n         return getService(TaskService.class).read(taskKey, false);\n     }\n \n-    public NotificationTaskTO readNotificationTask(final Long taskKey) {\n+    public NotificationTaskTO readNotificationTask(final String taskKey) {\n         return getService(TaskService.class).read(taskKey, false);\n     }\n \n-    public <T extends SchedTaskTO> T readSchedTask(final Class<T> reference, final Long taskKey) {\n+    public <T extends SchedTaskTO> T readSchedTask(final Class<T> reference, final String taskKey) {\n         return getService(TaskService.class).read(taskKey, false);\n     }\n \n-    public void delete(final Long taskKey, final Class<? extends AbstractTaskTO> taskToClass) {\n+    public void delete(final String taskKey, final Class<? extends AbstractTaskTO> taskToClass) {\n         getService(TaskService.class).delete(taskKey);\n     }\n \n     @Override\n-    public void startExecution(final long taskKey, final Date start) {\n+    public void startExecution(final String taskKey, final Date start) {\n         startExecution(taskKey, start, false);\n     }\n \n-    public void startExecution(final long taskKey, final Date start, final boolean dryRun) {\n+    public void startExecution(final String taskKey, final Date start, final boolean dryRun) {\n         getService(TaskService.class).execute(\n                 new ExecuteQuery.Builder().key(taskKey).startAt(start).dryRun(dryRun).build());\n     }\n \n     @Override\n-    public void deleteExecution(final long taskExecId) {\n-        getService(TaskService.class).deleteExecution(taskExecId);\n+    public void deleteExecution(final String taskExecKey) {\n+        getService(TaskService.class).deleteExecution(taskExecKey);\n     }\n \n     @Override"},{"sha":"dce489c981c4de72758f5fcf7942116cc96974df","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/UserRestClient.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FUserRestClient.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -83,12 +83,12 @@ public ProvisioningResult<UserTO> update(final String etag, final UserPatch user\n     }\n \n     @Override\n-    public ProvisioningResult<UserTO> delete(final String etag, final Long key) {\n+    public ProvisioningResult<UserTO> delete(final String etag, final String key) {\n         return delete(UserService.class, UserTO.class, etag, key);\n     }\n \n     @Override\n-    public UserTO read(final Long key) {\n+    public UserTO read(final String key) {\n         return getService(UserService.class).read(key);\n     }\n \n@@ -109,14 +109,14 @@ public List<UserTO> search(\n                         orderBy(toOrderBy(sort)).details(false).build()).getResult();\n     }\n \n-    public ProvisioningResult<UserTO> mustChangePassword(final String etag, final boolean value, final Long key) {\n+    public ProvisioningResult<UserTO> mustChangePassword(final String etag, final boolean value, final String key) {\n         final UserPatch userPatch = new UserPatch();\n         userPatch.setKey(key);\n         userPatch.setMustChangePassword(new BooleanReplacePatchItem.Builder().value(value).build());\n         return update(etag, userPatch);\n     }\n \n-    public void suspend(final String etag, final long userKey, final List<StatusBean> statuses) {\n+    public void suspend(final String etag, final String userKey, final List<StatusBean> statuses) {\n         StatusPatch statusPatch = StatusUtils.buildStatusPatch(statuses, false);\n         statusPatch.setKey(userKey);\n         statusPatch.setType(StatusPatchType.SUSPEND);\n@@ -127,7 +127,7 @@ public void suspend(final String etag, final long userKey, final List<StatusBean\n         }\n     }\n \n-    public void reactivate(final String etag, final long userKey, final List<StatusBean> statuses) {\n+    public void reactivate(final String etag, final String userKey, final List<StatusBean> statuses) {\n         StatusPatch statusPatch = StatusUtils.buildStatusPatch(statuses, true);\n         statusPatch.setKey(userKey);\n         statusPatch.setType(StatusPatchType.REACTIVATE);"},{"sha":"811e3a29316259ed88a8a33524821d7180fec13e","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/AnyPropagationTaskDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTaskDirectoryPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -33,13 +33,13 @@ public abstract class AnyPropagationTaskDirectoryPanel extends PropagationTaskDi\n \n     private final AnyTypeKind anyTypeKind;\n \n-    private final Long anyTypeKey;\n+    private final String anyTypeKey;\n \n     protected AnyPropagationTaskDirectoryPanel(\n             final BaseModal<?> baseModal,\n             final MultilevelPanel multiLevelPanelRef,\n             final AnyTypeKind anyTypeKind,\n-            final Long anyTypeKey,\n+            final String anyTypeKey,\n             final PageReference pageRef) {\n \n         super(baseModal, multiLevelPanelRef, null, pageRef);"},{"sha":"5cfa7d5c1bc480248f6208e2145d0df7608b17a4","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/AnyPropagationTasks.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FAnyPropagationTasks.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -35,7 +35,7 @@ public class AnyPropagationTasks extends AbstractPropagationTasks {\n     public <T extends AnyTO> AnyPropagationTasks(\n             final BaseModal<?> baseModal,\n             final AnyTypeKind anyTypeKind,\n-            final Long anyTypeKey,\n+            final String anyTypeKey,\n             final PageReference pageReference) {\n \n         super(BaseModal.CONTENT_ID);"},{"sha":"03d62e7f4bbd51dba0660b6c504cd0ce64da20cc","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/NotificationTaskDirectoryPanel.java","status":"modified","additions":10,"deletions":11,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FNotificationTaskDirectoryPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -49,26 +49,24 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n-/**\n- * Tasks page.\n- */\n public abstract class NotificationTaskDirectoryPanel\n         extends TaskDirectoryPanel<NotificationTaskTO> implements ModalPanel<NotificationTaskTO> {\n \n     private static final long serialVersionUID = 4984337552918213290L;\n \n-    private final Long notification;\n+    private final String notification;\n \n     private final AnyTypeKind anyTypeKind;\n \n-    private final Long anyTypeKey;\n+    private final String anyTypeKey;\n \n     protected NotificationTaskDirectoryPanel(\n-            final Long notification,\n+            final String notification,\n             final AnyTypeKind anyTypeKind,\n-            final Long anyTypeKey,\n+            final String anyTypeKey,\n             final MultilevelPanel multiLevelPanelRef,\n             final PageReference pageRef) {\n+\n         super(null, multiLevelPanelRef, pageRef);\n         this.notification = notification;\n         this.anyTypeKind = anyTypeKind;\n@@ -201,17 +199,18 @@ public class NotificationTasksProvider extends TaskDataProvider<NotificationTask\n \n         private static final long serialVersionUID = 4725679400450513556L;\n \n-        private final Long notification;\n+        private final String notification;\n \n         private final AnyTypeKind anyTypeKind;\n \n-        private final Long anyTypeKey;\n+        private final String anyTypeKey;\n \n         public NotificationTasksProvider(\n-                final Long notification,\n+                final String notification,\n                 final AnyTypeKind anyTypeKind,\n-                final Long anyTypeKey,\n+                final String anyTypeKey,\n                 final int paginatorRows) {\n+\n             super(paginatorRows, TaskType.PROPAGATION, restClient);\n             this.notification = notification;\n             this.anyTypeKind = anyTypeKind;"},{"sha":"da36a28ef64f99ef0e2103dbe1ff867c7b1ead9c","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/PropagationTaskDirectoryPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FPropagationTaskDirectoryPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -32,6 +32,7 @@\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n@@ -72,7 +73,7 @@ protected PropagationTaskDirectoryPanel(\n     protected List<IColumn<PropagationTaskTO, String>> getColumns() {\n         final List<IColumn<PropagationTaskTO, String>> columns = new ArrayList<>();\n \n-        columns.add(new PropertyColumn<PropagationTaskTO, String>(\n+        columns.add(new KeyPropertyColumn<PropagationTaskTO>(\n                 new StringResourceModel(\"key\", this, null), \"key\", \"key\"));\n \n         columns.add(new PropertyColumn<PropagationTaskTO, String>(new StringResourceModel("},{"sha":"6d1554c874360f978870458ebceac972d50f9acb","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/ProvisioningTaskDirectoryPanel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FProvisioningTaskDirectoryPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -24,6 +24,7 @@\n import java.util.List;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.to.AbstractProvisioningTaskTO;\n import org.apache.syncope.common.lib.to.PullTaskTO;\n@@ -67,9 +68,9 @@ protected void initResultTable() {\n \n     @Override\n     protected List<IColumn<T, String>> getFieldColumns() {\n-        final List<IColumn<T, String>> columns = new ArrayList<>();\n+        List<IColumn<T, String>> columns = new ArrayList<>();\n \n-        columns.add(new PropertyColumn<T, String>(\n+        columns.add(new KeyPropertyColumn<T>(\n                 new StringResourceModel(\"key\", this, null), \"key\", \"key\"));\n \n         columns.add(new PropertyColumn<T, String>("},{"sha":"ac8f21031ac3531c2b41e55be5f501d300d2a483","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskDirectoryPanel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskDirectoryPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -32,6 +32,7 @@\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink.ActionType;\n@@ -98,7 +99,7 @@ protected SchedTaskDirectoryPanel(\n     protected List<IColumn<T, String>> getFieldColumns() {\n         final List<IColumn<T, String>> columns = new ArrayList<>();\n \n-        columns.add(new PropertyColumn<T, String>(\n+        columns.add(new KeyPropertyColumn<T>(\n                 new StringResourceModel(\"key\", this, null), \"key\", \"key\"));\n \n         columns.add(new PropertyColumn<T, String>(\n@@ -195,7 +196,7 @@ public void onClick(final AjaxRequestTarget target, final T ignore) {\n                             @Override\n                             public void onClick(final AjaxRequestTarget target, final T ignore) {\n                                 final T clone = SerializationUtils.clone(model.getObject());\n-                                clone.setKey(0L);\n+                                clone.setKey(null);\n                                 send(SchedTaskDirectoryPanel.this, Broadcast.EXACT,\n                                         new AjaxWizard.EditItemActionEvent<>(clone, target));\n                             }"},{"sha":"1f2e693355cf4ead21e1d10381533a486b1e4179","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/SchedTaskWizardBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FSchedTaskWizardBuilder.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -86,7 +86,7 @@ public SchedTaskWizardBuilder(final T taskTO, final PageReference pageRef) {\n \n     @Override\n     protected Serializable onApplyInternal(final SchedTaskTO modelObject) {\n-        if (modelObject.getKey() == null || modelObject.getKey() == 0L) {\n+        if (modelObject.getKey() == null) {\n             taskRestClient.create(modelObject);\n         } else {\n             taskRestClient.update(modelObject);\n@@ -167,7 +167,7 @@ public Profile(final SchedTaskTO taskTO) {\n                     new PropertyModel<String>(taskTO, \"jobDelegateClassName\"), false);\n             jobDelegateClassName.setChoices(taskJobClasses.getObject());\n             jobDelegateClassName.addRequiredLabel();\n-            jobDelegateClassName.setEnabled(taskTO.getKey() == null || taskTO.getKey() == 0L);\n+            jobDelegateClassName.setEnabled(taskTO.getKey() == null);\n             jobDelegateClassName.setStyleSheet(\"ui-widget-content ui-corner-all long_dynamicsize\");\n             add(jobDelegateClassName);\n "},{"sha":"84025e05ac61a7a3eb891046b559587b32a29839","filename":"client/console/src/main/java/org/apache/syncope/client/console/tasks/TaskExecutions.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskExecutions.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -36,6 +36,7 @@\n import org.apache.syncope.client.console.tasks.TaskExecutions.TaskExecProvider;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -90,7 +91,7 @@ protected void resultTableCustomChanges(final AjaxDataTablePanel.Builder<ExecTO,\n     protected List<IColumn<ExecTO, String>> getColumns() {\n         final List<IColumn<ExecTO, String>> columns = new ArrayList<>();\n \n-        columns.add(new PropertyColumn<ExecTO, String>(new ResourceModel(\"key\"), \"key\", \"key\"));\n+        columns.add(new KeyPropertyColumn<ExecTO>(new ResourceModel(\"key\"), \"key\", \"key\"));\n \n         columns.add(new DatePropertyColumn<ExecTO>(new ResourceModel(\"start\"), \"start\", \"start\"));\n \n@@ -184,11 +185,11 @@ protected class TaskExecProvider extends DirectoryDataProvider<ExecTO> {\n \n         private final SortableDataProviderComparator<ExecTO> comparator;\n \n-        private final Long taskId;\n+        private final String taskKey;\n \n-        public TaskExecProvider(final Long taskId, final int paginatorRows) {\n+        public TaskExecProvider(final String taskKey, final int paginatorRows) {\n             super(paginatorRows);\n-            this.taskId = taskId;\n+            this.taskKey = taskKey;\n             comparator = new SortableDataProviderComparator<>(this);\n         }\n \n@@ -199,14 +200,14 @@ public SortableDataProviderComparator<ExecTO> getComparator() {\n         @Override\n         public Iterator<ExecTO> iterator(final long first, final long count) {\n             final int page = ((int) first / paginatorRows);\n-            List<ExecTO> list = taskRestClient.listExecutions(taskId, (page < 0 ? 0 : page) + 1, paginatorRows);\n+            List<ExecTO> list = taskRestClient.listExecutions(taskKey, (page < 0 ? 0 : page) + 1, paginatorRows);\n             Collections.sort(list, comparator);\n             return list.iterator();\n         }\n \n         @Override\n         public long size() {\n-            return taskRestClient.countExecutions(taskId);\n+            return taskRestClient.countExecutions(taskKey);\n         }\n \n         @Override"},{"sha":"a3b7e30b751ac34fd523e85812ed3d5d108c2d49","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/Topology.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopology.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -210,7 +210,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n \n         // required to retrieve parent positions\n         final Map<String, TopologyNode> servers = new HashMap<>();\n-        final Map<Long, TopologyNode> connectors = new HashMap<>();\n+        final Map<String, TopologyNode> connectors = new HashMap<>();\n         // -----------------------------------------\n \n         // -----------------------------------------\n@@ -338,7 +338,7 @@ protected void populateItem(final ListItem<ConnInstanceTO> item) {\n                         topologynode.setX(x);\n                         topologynode.setY(y);\n \n-                        connectors.put(Long.class.cast(topologynode.getKey()), topologynode);\n+                        connectors.put(String.class.cast(topologynode.getKey()), topologynode);\n                         item.add(topologyNodePanel(\"conn\", topologynode));\n \n                         // Update connections\n@@ -366,7 +366,7 @@ protected void populateItem(final ListItem<ConnInstanceTO> item) {\n         // -----------------------------------------\n         // Add Resources\n         // -----------------------------------------\n-        final List<Long> connToBeProcessed = new ArrayList<>();\n+        final List<String> connToBeProcessed = new ArrayList<>();\n         for (ResourceTO resourceTO : resModel.getObject()) {\n             final TopologyNode topologynode = new TopologyNode(\n                     resourceTO.getKey(), resourceTO.getKey(), TopologyNode.Kind.RESOURCE);\n@@ -387,16 +387,16 @@ protected void populateItem(final ListItem<ConnInstanceTO> item) {\n             }\n         }\n \n-        final ListView<Long> resources = new ListView<Long>(\"resources\", connToBeProcessed) {\n+        final ListView<String> resources = new ListView<String>(\"resources\", connToBeProcessed) {\n \n             private static final long serialVersionUID = 697862187148836038L;\n \n             @Override\n-            protected void populateItem(final ListItem<Long> item) {\n-                final Long connectorId = item.getModelObject();\n+            protected void populateItem(final ListItem<String> item) {\n+                final String connectorKey = item.getModelObject();\n \n                 final ListView<TopologyNode> innerListView = new ListView<TopologyNode>(\"resources\",\n-                        new ArrayList<>(connections.get(connectorId).values())) {\n+                        new ArrayList<>(connections.get(connectorKey).values())) {\n \n                     private static final long serialVersionUID = 1L;\n \n@@ -405,7 +405,7 @@ protected void populateItem(final ListItem<Long> item) {\n                     @Override\n                     protected void populateItem(final ListItem<TopologyNode> item) {\n                         final TopologyNode topologynode = item.getModelObject();\n-                        final TopologyNode parent = connectors.get(connectorId);\n+                        final TopologyNode parent = connectors.get(connectorKey);\n \n                         // Set position\n                         int kx = size >= 16 ? 800 : (48 * size);"},{"sha":"2f405c7ee6c6eb9659153cad03f64769331a33ff","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyTogglePanel.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -181,7 +181,7 @@ private Fragment getConnectorFragment(final TopologyNode node, final PageReferen\n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 try {\n-                    connectorRestClient.delete(Long.class.cast(node.getKey()));\n+                    connectorRestClient.delete(String.class.cast(node.getKey()));\n                     target.appendJavaScript(String.format(\"jsPlumb.remove('%s');\", node.getKey()));\n                     info(getString(Constants.OPERATION_SUCCEEDED));\n                 } catch (SyncopeClientException e) {\n@@ -201,7 +201,7 @@ public void onClick(final AjaxRequestTarget target) {\n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n                 final ResourceTO modelObject = new ResourceTO();\n-                modelObject.setConnector(Long.class.cast(node.getKey()));\n+                modelObject.setConnector(String.class.cast(node.getKey()));\n                 modelObject.setConnectorDisplayName(node.getDisplayName());\n \n                 final IModel<ResourceTO> model = new CompoundPropertyModel<>(modelObject);\n@@ -227,7 +227,7 @@ public void onClick(final AjaxRequestTarget target) {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                final ConnInstanceTO modelObject = connectorRestClient.read(Long.class.cast(node.getKey()));\n+                final ConnInstanceTO modelObject = connectorRestClient.read(String.class.cast(node.getKey()));\n \n                 final IModel<ConnInstanceTO> model = new CompoundPropertyModel<>(modelObject);\n                 modal.setFormModel(model);"},{"sha":"dbb30bca8bbdcb66be51bc96155a2d757dd09fab","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyWebSocketBehavior.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyWebSocketBehavior.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyWebSocketBehavior.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyWebSocketBehavior.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -51,9 +51,9 @@ public class TopologyWebSocketBehavior extends WebSocketBehavior {\n \n     private final Set<String> runningResCheck = new HashSet<>();\n \n-    private final Map<Long, String> connectors = new HashMap<>();\n+    private final Map<String, String> connectors = new HashMap<>();\n \n-    private final Set<Long> runningConnCheck = new HashSet<>();\n+    private final Set<String> runningConnCheck = new HashSet<>();\n \n     private final ConnectorRestClient connectorRestClient = new ConnectorRestClient();\n \n@@ -66,7 +66,7 @@ protected void onMessage(final WebSocketRequestHandler handler, final TextMessag\n \n             switch (Topology.SupportedOperation.valueOf(obj.get(\"kind\").asText())) {\n                 case CHECK_CONNECTOR:\n-                    final Long ckey = obj.get(\"target\").asLong();\n+                    final String ckey = obj.get(\"target\").asText();\n \n                     if (connectors.containsKey(ckey)) {\n                         handler.push(connectors.get(ckey));\n@@ -122,13 +122,13 @@ protected void onMessage(final WebSocketRequestHandler handler, final TextMessag\n \n     class ConnCheck implements Runnable {\n \n-        private final Long key;\n+        private final String key;\n \n         private final Application application;\n \n         private final Session session;\n \n-        ConnCheck(final Long key) {\n+        ConnCheck(final String key) {\n             this.key = key;\n             this.application = Application.get();\n             this.session = Session.exists() ? Session.get() : null;"},{"sha":"281189ac2e7f74eb032defd5e2c9cc504a10e65e","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/KeyPropertyColumn.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FKeyPropertyColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FKeyPropertyColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FKeyPropertyColumn.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.IModel;\n+import org.springframework.beans.BeanWrapper;\n+import org.springframework.beans.BeanWrapperImpl;\n+\n+/**\n+ * Format column's UUID value.\n+ */\n+public class KeyPropertyColumn<T> extends PropertyColumn<T, String> {\n+\n+    private static final long serialVersionUID = 3527840552172947705L;\n+\n+    public KeyPropertyColumn(final IModel<String> displayModel, final String sortProperty,\n+            final String propertyExpression) {\n+\n+        super(displayModel, sortProperty, propertyExpression);\n+    }\n+\n+    @Override\n+    public void populateItem(final Item<ICellPopulator<T>> item, final String componentId, final IModel<T> rowModel) {\n+        BeanWrapper bwi = new BeanWrapperImpl(rowModel.getObject());\n+        Object obj = bwi.getPropertyValue(getPropertyExpression());\n+\n+        item.add(new Label(componentId, StringUtils.EMPTY));\n+        item.add(new AttributeModifier(\"title\", obj.toString()));\n+        item.add(new AttributeModifier(\"class\", \"fa fa-key\"));\n+        item.add(new AttributeModifier(\"style\", \"display: table-cell; text-align: center;\"));\n+    }\n+\n+    @Override\n+    public String getCssClass() {\n+        return \"keyColumn\";\n+    }\n+\n+}"},{"sha":"2b05c1b1e3b596d4e8fc7f71cfd6a81712158785","filename":"client/console/src/main/java/org/apache/syncope/client/console/wicket/markup/html/form/PolicyRenderer.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FPolicyRenderer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FPolicyRenderer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FPolicyRenderer.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -22,24 +22,24 @@\n import org.apache.wicket.markup.html.form.ChoiceRenderer;\n import org.apache.wicket.model.IModel;\n \n-public class PolicyRenderer extends ChoiceRenderer<Long> {\n+public class PolicyRenderer extends ChoiceRenderer<String> {\n \n     private static final long serialVersionUID = 8060500161321947000L;\n \n-    private final IModel<Map<Long, String>> policies;\n+    private final IModel<Map<String, String>> policies;\n \n-    public PolicyRenderer(final IModel<Map<Long, String>> policies) {\n+    public PolicyRenderer(final IModel<Map<String, String>> policies) {\n         super();\n         this.policies = policies;\n     }\n \n     @Override\n-    public Object getDisplayValue(final Long object) {\n+    public Object getDisplayValue(final String object) {\n         return policies.getObject().get(object);\n     }\n \n     @Override\n-    public String getIdValue(final Long object, final int index) {\n+    public String getIdValue(final String object, final int index) {\n         return String.valueOf(object != null ? object : 0L);\n     }\n }"},{"sha":"743d321361476cfb0b33833626c0f10526d8389a","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/ReconciliationWidget.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FReconciliationWidget.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -101,7 +101,7 @@ public class ReconciliationWidget extends BaseWidget {\n \n     private static final int ROWS = 10;\n \n-    private final Long reconciliationReportKey;\n+    private final String reconciliationReportKey;\n \n     private final BaseModal<Any> detailsModal = new BaseModal<>(\"detailsModal\");\n \n@@ -292,7 +292,7 @@ public boolean evaluate(final ExecTO exec) {\n             }\n         }\n \n-        return Pair.of(beans, report);\n+        return Pair.of(beans, report == null ? new ReconciliationReport(new Date()) : report);\n     }\n \n     @Override"},{"sha":"f0fde29fa6c643549d89a1c066e8a250eab1ff43","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/reconciliation/Any.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FAny.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FAny.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FAny.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -28,7 +28,7 @@ public class Any extends AbstractBaseBean {\n \n     private String type;\n \n-    private long key;\n+    private String key;\n \n     private String name;\n \n@@ -44,11 +44,11 @@ public void setType(final String type) {\n         this.type = type;\n     }\n \n-    public long getKey() {\n+    public String getKey() {\n         return key;\n     }\n \n-    public void setKey(final long key) {\n+    public void setKey(final String key) {\n         this.key = key;\n     }\n "},{"sha":"dc86a7b518fff7d4c8b1bd6c9248668f986c9e0f","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/reconciliation/ReconciliationReportParser.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FReconciliationReportParser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FReconciliationReportParser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FReconciliationReportParser.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -64,7 +64,7 @@ public static ReconciliationReport parse(final Date run, final InputStream in) t\n                     case \"user\":\n                         user = new Any();\n                         user.setType(AnyTypeKind.USER.name());\n-                        user.setKey(Long.valueOf(streamReader.getAttributeValue(\"\", \"key\")));\n+                        user.setKey(streamReader.getAttributeValue(\"\", \"key\"));\n                         user.setName(streamReader.getAttributeValue(\"\", \"username\"));\n                         report.getUsers().getAnys().add(user);\n                         break;\n@@ -78,7 +78,7 @@ public static ReconciliationReport parse(final Date run, final InputStream in) t\n                     case \"group\":\n                         group = new Any();\n                         group.setType(AnyTypeKind.GROUP.name());\n-                        group.setKey(Long.valueOf(streamReader.getAttributeValue(\"\", \"key\")));\n+                        group.setKey(streamReader.getAttributeValue(\"\", \"key\"));\n                         group.setName(streamReader.getAttributeValue(\"\", \"groupName\"));\n                         report.getGroups().getAnys().add(group);\n                         break;\n@@ -94,7 +94,7 @@ public static ReconciliationReport parse(final Date run, final InputStream in) t\n                     case \"anyObject\":\n                         anyObject = new Any();\n                         anyObject.setType(lastAnyType);\n-                        anyObject.setKey(Long.valueOf(streamReader.getAttributeValue(\"\", \"key\")));\n+                        anyObject.setKey(streamReader.getAttributeValue(\"\", \"key\"));\n                         final String anyType = lastAnyType;\n                         IterableUtils.find(report.getAnyObjects(), new Predicate<Anys>() {\n "},{"sha":"b95983e56d3012f0c514e3b4e7d265da5f99f7ac","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AbstractAttrs.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAbstractAttrs.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -53,7 +53,7 @@ public AbstractAttrs(final AnyTO entityTO) {\n \n     protected Set<String> getAllAuxClasses() {\n         final List<MembershipTO> memberships;\n-        final List<Long> dyngroups;\n+        final List<String> dyngroups;\n         if (entityTO instanceof UserTO) {\n             memberships = UserTO.class.cast(entityTO).getMemberships();\n             dyngroups = UserTO.class.cast(entityTO).getDynGroups();\n@@ -62,7 +62,7 @@ protected Set<String> getAllAuxClasses() {\n             dyngroups = AnyObjectTO.class.cast(entityTO).getDynGroups();\n         } else {\n             memberships = Collections.<MembershipTO>emptyList();\n-            dyngroups = Collections.<Long>emptyList();\n+            dyngroups = Collections.<String>emptyList();\n         }\n \n         final List<GroupTO> groups = new ArrayList<>();\n@@ -75,10 +75,10 @@ public GroupTO transform(final MembershipTO input) {\n             }\n         }, groups);\n \n-        CollectionUtils.collect(dyngroups, new Transformer<Long, GroupTO>() {\n+        CollectionUtils.collect(dyngroups, new Transformer<String, GroupTO>() {\n \n             @Override\n-            public GroupTO transform(final Long input) {\n+            public GroupTO transform(final String input) {\n                 return groupRestClient.read(input);\n             }\n         }, groups);"},{"sha":"6198ce39021c101d144e91ebc1c4d68e309cf8bf","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyObjectWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyObjectWizardBuilder.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -52,7 +52,7 @@ protected Serializable onApplyInternal(final AnyHandler<AnyObjectTO> modelObject\n \n         final ProvisioningResult<AnyObjectTO> actual;\n \n-        if (inner.getKey() == null || inner.getKey() == 0) {\n+        if (inner.getKey() == null) {\n             actual = anyObjectRestClient.create(AnyObjectTO.class.cast(inner));\n         } else {\n             final AnyObjectPatch patch = AnyOperations.diff(inner, getOriginalItem().getInnerObject(), false);"},{"sha":"ae5b657c292de45abb6a37b38b337a558e752d9a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -105,7 +105,7 @@ protected WizardModel buildModelSteps(final AnyHandler<T> modelObject, final Wiz\n \n     protected AnyWizardBuilder<T> addOptionalDetailsPanel(\n             final AnyHandler<T> modelObject, final WizardModel wizardModel) {\n-        if (modelObject.getInnerObject().getKey() != null && modelObject.getInnerObject().getKey() > 0) {\n+        if (modelObject.getInnerObject().getKey() != null) {\n             wizardModel.add(new Details<>(\n                     modelObject, new ListModel<>(Collections.<StatusBean>emptyList()), pageRef, true));\n         }"},{"sha":"47e66696597c7ec50f71298b176d95d25fa271a9","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/AuxClasses.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAuxClasses.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -57,14 +57,14 @@ public <T extends AnyTO> AuxClasses(final T entityTO, final String... anyTypeCla\n             fragment = new Fragment(\"groups\", \"groupsFragment\", this);\n \n             final List<MembershipTO> memberships;\n-            final List<Long> dyngroups;\n+            final List<String> dyngroups;\n \n             if (entityTO instanceof GroupableTO) {\n                 memberships = GroupableTO.class.cast(entityTO).getMemberships();\n                 dyngroups = GroupableTO.class.cast(entityTO).getDynGroups();\n             } else {\n                 memberships = Collections.<MembershipTO>emptyList();\n-                dyngroups = Collections.<Long>emptyList();\n+                dyngroups = Collections.<String>emptyList();\n             }\n \n             final AjaxPalettePanel.Builder<MembershipTO> builder = new AjaxPalettePanel.Builder<MembershipTO>().\n@@ -116,22 +116,22 @@ public List<MembershipTO> execute(final String filter) {\n                         public MembershipTO transform(final GroupTO input) {\n                             final MembershipTO membershipTO = new MembershipTO();\n                             membershipTO.setGroupName(input.getName());\n-                            membershipTO.setRightKey(input.getKey() == null ? 0L : input.getKey());\n+                            membershipTO.setRightKey(input.getKey() == null ? null : input.getKey());\n                             membershipTO.setRightType(input.getType());\n-                            membershipTO.setLeftKey(entityTO.getKey() == null ? 0L : entityTO.getKey());\n+                            membershipTO.setLeftKey(entityTO.getKey() == null ? null : entityTO.getKey());\n                             membershipTO.setLeftType(entityTO.getType());\n                             return membershipTO;\n                         }\n                     }, new ArrayList<MembershipTO>());\n                 }\n             }).hideLabel().setOutputMarkupId(true));\n \n-            final ArrayList<String> dynamics = CollectionUtils.collect(dyngroups, new Transformer<Long, String>() {\n+            List<String> dynamics = CollectionUtils.collect(dyngroups, new Transformer<String, String>() {\n \n                 @Override\n-                public String transform(final Long input) {\n+                public String transform(final String input) {\n                     final GroupTO groupTO = groupRestClient.read(input);\n-                    return String.format(\"[%d] %s\", groupTO.getKey(), groupTO.getName());\n+                    return String.format(\"[%s] %s\", groupTO.getKey(), groupTO.getName());\n                 }\n             }, new ArrayList<String>());\n "},{"sha":"b5e8374a1829890f619ef8565179a3dcccc39f4e","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/DerAttrs.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -60,8 +60,7 @@ public <T extends AnyTO> DerAttrs(final T entityTO, final String... anyTypeClass\n             @Override\n             protected List<AttrTO> load() {\n                 List<String> anyTypeClasses = CollectionUtils.collect(anyTypeClassRestClient.list(getAllAuxClasses()),\n-                        EntityTOUtils.<String, AnyTypeClassTO>keyTransformer(),\n-                        new ArrayList<>(Arrays.asList(anyTypeClass)));\n+                        EntityTOUtils.<AnyTypeClassTO>keyTransformer(), new ArrayList<>(Arrays.asList(anyTypeClass)));\n \n                 List<DerSchemaTO> derSchemas = Collections.emptyList();\n                 if (!anyTypeClasses.isEmpty()) {"},{"sha":"e45afa432cc07bb00aa7506cd8eebc1a6c5c2bda","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/GroupWizardBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FGroupWizardBuilder.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -71,7 +71,7 @@ protected Serializable onApplyInternal(final AnyHandler<GroupTO> modelObject) {\n                 ? GroupHandler.class.cast(modelObject).fillDynamicConditions()\n                 : modelObject.getInnerObject();\n \n-        if (toBeProcessed.getKey() == null || toBeProcessed.getKey() == 0) {\n+        if (toBeProcessed.getKey() == null) {\n             actual = groupRestClient.create(toBeProcessed);\n         } else {\n             final GroupPatch patch = AnyOperations.diff(toBeProcessed, getOriginalItem().getInnerObject(), false);\n@@ -94,7 +94,7 @@ protected GroupWizardBuilder addOptionalDetailsPanel(\n                 GroupHandler.class.cast(modelObject),\n                 new ListModel<>(Collections.<StatusBean>emptyList()),\n                 false, pageRef,\n-                modelObject.getInnerObject().getKey() != null && modelObject.getInnerObject().getKey() > 0));\n+                modelObject.getInnerObject().getKey() != null));\n         return this;\n     }\n }"},{"sha":"2f0d03e1f4ea9c19f85f9ddf6aa9e08f528681f6","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Ownership.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FOwnership.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -200,7 +200,7 @@ public String getObject() {\n                     if (userTO == null) {\n                         return StringUtils.EMPTY;\n                     } else {\n-                        return String.format(\"[%d] %s\", userTO.getKey(), userTO.getUsername());\n+                        return String.format(\"[%s] %s\", userTO.getKey(), userTO.getUsername());\n                     }\n                 }\n             }\n@@ -212,7 +212,7 @@ public void setObject(final String object) {\n                 } else {\n                     final Matcher matcher = owner.matcher(object);\n                     if (matcher.matches()) {\n-                        groupHandler.getInnerObject().setUserOwner(Long.parseLong(matcher.group(1)));\n+                        groupHandler.getInnerObject().setUserOwner(matcher.group(1));\n                     }\n                 }\n             }\n@@ -248,7 +248,7 @@ public String getObject() {\n                     if (groupTO == null) {\n                         return StringUtils.EMPTY;\n                     } else {\n-                        return String.format(\"[%d] %s\", groupTO.getKey(), groupTO.getName());\n+                        return String.format(\"[%s] %s\", groupTO.getKey(), groupTO.getName());\n                     }\n                 }\n             }\n@@ -260,7 +260,7 @@ public void setObject(final String object) {\n                 } else {\n                     final Matcher matcher = owner.matcher(object);\n                     if (matcher.matches()) {\n-                        groupHandler.getInnerObject().setGroupOwner(Long.parseLong(matcher.group(1)));\n+                        groupHandler.getInnerObject().setGroupOwner(matcher.group(1));\n                     }\n                 }\n             }"},{"sha":"6c17cdd68e0973470e44e8efbc0823d61686c845","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/PlainAttrs.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FPlainAttrs.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -81,8 +81,7 @@ public <T extends AnyTO> PlainAttrs(\n             @Override\n             protected List<AttrTO> load() {\n                 setPlainSchemas(CollectionUtils.collect(anyTypeClassRestClient.list(getAllAuxClasses()),\n-                        EntityTOUtils.<String, AnyTypeClassTO>keyTransformer(),\n-                        new ArrayList<>(Arrays.asList(anyTypeClass))));\n+                        EntityTOUtils.<AnyTypeClassTO>keyTransformer(), new ArrayList<>(Arrays.asList(anyTypeClass))));\n                 setAttrs();\n                 return new ArrayList<>(entityTO.getPlainAttrs());\n             }"},{"sha":"88b1bc51ac47e0f1b77d9223c18400d6fd6104f3","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Relationships.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRelationships.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -226,8 +226,7 @@ public Specification() {\n \n             final ArrayList<String> availableRels = CollectionUtils.collect(\n                     SyncopeConsoleSession.get().getService(RelationshipTypeService.class).list(),\n-                    EntityTOUtils.<String, RelationshipTypeTO>keyTransformer(),\n-                    new ArrayList<String>());\n+                    EntityTOUtils.<RelationshipTypeTO>keyTransformer(), new ArrayList<String>());\n \n             final AjaxDropDownChoicePanel<String> type = new AjaxDropDownChoicePanel<>(\n                     \"type\", \"type\", new PropertyModel<String>(rel, \"type\"));"},{"sha":"e014c7ba1eeb32c3ecc6e586c2b63b5cf558a208","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Resources.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FResources.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -53,7 +53,7 @@ public void setObject(final List<String> object) {\n                 entityTO.getResources().addAll(object);\n             }\n         }, new ListModel<>(CollectionUtils.collect(new ResourceRestClient().list(),\n-                        EntityTOUtils.<String, ResourceTO>keyTransformer(),\n-                        new ArrayList<String>()))).hideLabel().setOutputMarkupId(true));\n+                        EntityTOUtils.<ResourceTO>keyTransformer(), new ArrayList<String>()))).\n+                hideLabel().setOutputMarkupId(true));\n     }\n }"},{"sha":"594ea4441e832b4325105cb0c62a697403edca05","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Roles.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -39,8 +39,7 @@ public <T extends AnyTO> Roles(final UserTO entityTO) {\n         this.setOutputMarkupId(true);\n \n         final ArrayList<String> allRoles = CollectionUtils.collect(new RoleRestClient().getAll(),\n-                EntityTOUtils.<String, RoleTO>keyTransformer(),\n-                new ArrayList<String>());\n+                EntityTOUtils.<RoleTO>keyTransformer(), new ArrayList<String>());\n \n         add(new AjaxPalettePanel.Builder<String>().build(\"roles\",\n                 new PropertyModel<List<String>>(entityTO, \"roles\"),"},{"sha":"fab7acef3691e8ea658e369bc0d24d75043a8219","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/StatusPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -186,7 +186,7 @@ public Map<String, StatusBean> getInitialStatusBeanMap() {\n     }\n \n     private Pair<ConnObjectTO, ConnObjectTO> getConnObjectTO(\n-            final Long anyKey, final String resourceName, final List<Pair<ConnObjectTO, ConnObjectWrapper>> objects) {\n+            final String anyKey, final String resourceName, final List<Pair<ConnObjectTO, ConnObjectWrapper>> objects) {\n \n         for (Pair<ConnObjectTO, ConnObjectWrapper> object : objects) {\n             if (anyKey.equals(object.getRight().getAny().getKey())"},{"sha":"eb1d4908a54e0a11d48c0ae43527a1563e2f8e41","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/UserWizardBuilder.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FUserWizardBuilder.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -63,7 +63,7 @@ protected Serializable onApplyInternal(final AnyHandler<UserTO> modelObject) {\n \n         final UserTO inner = modelObject.getInnerObject();\n \n-        if (inner.getKey() == null || inner.getKey() == 0) {\n+        if (inner.getKey() == null) {\n             actual = userRestClient.create(inner, StringUtils.isNotBlank(inner.getPassword()));\n         } else {\n             final UserPatch patch = AnyOperations.diff(inner, getOriginalItem().getInnerObject(), false);\n@@ -86,9 +86,10 @@ protected Serializable onApplyInternal(final AnyHandler<UserTO> modelObject) {\n     @Override\n     protected UserWizardBuilder addOptionalDetailsPanel(\n             final AnyHandler<UserTO> modelObject, final WizardModel wizardModel) {\n+\n         wizardModel.add(new UserDetails(\n                 modelObject, statusModel, false, false, pageRef,\n-                modelObject.getInnerObject().getKey() != null && modelObject.getInnerObject().getKey() > 0));\n+                modelObject.getInnerObject().getKey() != null));\n         return this;\n     }\n "},{"sha":"f5dab1634ccf243bfe769816545b33fc8ccf477d","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -58,8 +58,7 @@ public <T extends AnyTO> VirAttrs(final T entityTO, final String... anyTypeClass\n             @Override\n             protected List<AttrTO> load() {\n                 List<String> anyTypeClasses = CollectionUtils.collect(anyTypeClassRestClient.list(getAllAuxClasses()),\n-                        EntityTOUtils.<String, AnyTypeClassTO>keyTransformer(),\n-                        new ArrayList<>(Arrays.asList(anyTypeClass)));\n+                        EntityTOUtils.<AnyTypeClassTO>keyTransformer(), new ArrayList<>(Arrays.asList(anyTypeClass)));\n \n                 List<VirSchemaTO> virSchemas = Collections.emptyList();\n                 if (!anyTypeClasses.isEmpty()) {"},{"sha":"a64705fa5e0930cc2ab879fba2626586dbb6244c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ConnectorDetailsPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FConnectorDetailsPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -73,7 +73,7 @@ public String transform(final ConnBundleTO input) {\n         }, new ArrayList<String>()));\n         bundleName.addRequiredLabel();\n         bundleName.setOutputMarkupId(true);\n-        bundleName.setEnabled(connInstanceTO.getKey() == null || connInstanceTO.getKey() == 0);\n+        bundleName.setEnabled(connInstanceTO.getKey() == null);\n         bundleName.getField().setOutputMarkupId(true);\n         add(bundleName);\n "},{"sha":"c5a81bcc50cef9d3722aaecd145c5f68adf862fb","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ProvisionWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -77,7 +77,7 @@ public String transform(final ProvisionTO provisionTO) {\n             final List<String> res = new ArrayList<>();\n \n             CollectionUtils.filter(CollectionUtils.collect(new AnyTypeRestClient().list(),\n-                    EntityTOUtils.<String, AnyTypeTO>keyTransformer(), res),\n+                    EntityTOUtils.<AnyTypeTO>keyTransformer(), res),\n                     new Predicate<String>() {\n \n                 @Override"},{"sha":"ab200e0586beb8a1f6c9ab2a1315720dc339baa0","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceConnConfPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceConnConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceConnConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceConnConfPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -96,7 +96,7 @@ public int compare(final ConnConfProperty left, final ConnConfProperty right) {\n     protected final List<ConnConfProperty> getConnProperties(final ResourceTO resourceTO) {\n         List<ConnConfProperty> props = new ArrayList<>();\n \n-        if (resourceTO.getConnector() != null && resourceTO.getConnector() > 0) {\n+        if (resourceTO.getConnector() != null) {\n             for (ConnConfProperty property : restClient.read(resourceTO.getConnector()).getConf()) {\n                 if (property.isOverridable()) {\n                     props.add(property);"},{"sha":"46f1b4da4b11c5a5612a5c77204f0bc202195f11","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceMappingPanel.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -152,7 +152,7 @@ public ResourceMappingPanel(final String id, final ResourceTO resourceTO, final\n         this.mappingContainer.setOutputMarkupId(true);\n         add(this.mappingContainer);\n \n-        if (resourceTO.getConnector() != null && resourceTO.getConnector() > 0) {\n+        if (resourceTO.getConnector() != null) {\n             schemaNames = getSchemaNames(resourceTO.getConnector(), resourceTO.getConfOverride());\n             setEnabled();\n         } else {\n@@ -469,7 +469,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n             }\n         };\n         addMappingBtn.setDefaultFormProcessing(false);\n-        addMappingBtn.setEnabled(resourceTO.getConnector() != null && resourceTO.getConnector() > 0);\n+        addMappingBtn.setEnabled(resourceTO.getConnector() != null);\n         mappingContainer.add(addMappingBtn);\n     }\n \n@@ -479,9 +479,9 @@ protected void onBeforeRender() {\n         passwordLabel.setVisible(AnyTypeKind.USER.name().equals(this.provisionTO.getAnyType()));\n     }\n \n-    private List<String> getSchemaNames(final Long connectorId, final Set<ConnConfProperty> conf) {\n+    private List<String> getSchemaNames(final String connectorKey, final Set<ConnConfProperty> conf) {\n         final ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n-        connInstanceTO.setKey(connectorId);\n+        connInstanceTO.setKey(connectorKey);\n         connInstanceTO.getConf().addAll(conf);\n \n         // SYNCOPE-156: use provided info to give schema names (and type!) by ObjectClass"},{"sha":"a6e447053283e3eff8616d41d7c79e10ba3825f4","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -95,7 +95,7 @@ public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionT\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final ProvisionTO provisionTO) {\n                         final ProvisionTO clone = SerializationUtils.clone(provisionTO);\n-                        clone.setKey(0L);\n+                        clone.setKey(null);\n                         clone.setAnyType(null);\n                         clone.setObjectClass(null);\n                         send(pageRef.getPage(), Broadcast.DEPTH, new AjaxWizard.NewItemActionEvent<>(clone, target));"},{"sha":"f3ff8f5152ffc32e6876cd7a4d2a452ed9945333","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceSecurityPanel.java","status":"modified","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceSecurityPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceSecurityPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceSecurityPanel.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -41,41 +41,41 @@ public class ResourceSecurityPanel extends WizardStep {\n \n     private final PolicyRestClient policyRestClient = new PolicyRestClient();\n \n-    private final IModel<Map<Long, String>> passwordPolicies = new LoadableDetachableModel<Map<Long, String>>() {\n+    private final IModel<Map<String, String>> passwordPolicies = new LoadableDetachableModel<Map<String, String>>() {\n \n         private static final long serialVersionUID = 5275935387613157437L;\n \n         @Override\n-        protected Map<Long, String> load() {\n-            Map<Long, String> res = new HashMap<>();\n+        protected Map<String, String> load() {\n+            Map<String, String> res = new HashMap<>();\n             for (AbstractPolicyTO policyTO : policyRestClient.getPolicies(PolicyType.PASSWORD)) {\n                 res.put(policyTO.getKey(), policyTO.getDescription());\n             }\n             return res;\n         }\n     };\n \n-    private final IModel<Map<Long, String>> accountPolicies = new LoadableDetachableModel<Map<Long, String>>() {\n+    private final IModel<Map<String, String>> accountPolicies = new LoadableDetachableModel<Map<String, String>>() {\n \n         private static final long serialVersionUID = -2012833443695917883L;\n \n         @Override\n-        protected Map<Long, String> load() {\n-            Map<Long, String> res = new HashMap<>();\n+        protected Map<String, String> load() {\n+            Map<String, String> res = new HashMap<>();\n             for (AbstractPolicyTO policyTO : policyRestClient.getPolicies(PolicyType.ACCOUNT)) {\n                 res.put(policyTO.getKey(), policyTO.getDescription());\n             }\n             return res;\n         }\n     };\n \n-    private final IModel<Map<Long, String>> pullPolicies = new LoadableDetachableModel<Map<Long, String>>() {\n+    private final IModel<Map<String, String>> pullPolicies = new LoadableDetachableModel<Map<String, String>>() {\n \n         private static final long serialVersionUID = -2012833443695917883L;\n \n         @Override\n-        protected Map<Long, String> load() {\n-            Map<Long, String> res = new HashMap<>();\n+        protected Map<String, String> load() {\n+            Map<String, String> res = new HashMap<>();\n             for (AbstractPolicyTO policyTO : policyRestClient.getPolicies(PolicyType.PULL)) {\n                 res.put(policyTO.getKey(), policyTO.getDescription());\n             }\n@@ -95,10 +95,10 @@ public ResourceSecurityPanel(final ResourceTO resourceTO) {\n         // -------------------------------\n         // Password policy selection\n         // -------------------------------\n-        AjaxDropDownChoicePanel<Long> passwordPolicy = new AjaxDropDownChoicePanel<>(\n+        AjaxDropDownChoicePanel<String> passwordPolicy = new AjaxDropDownChoicePanel<>(\n                 \"passwordPolicy\",\n                 new ResourceModel(\"passwordPolicy\", \"passwordPolicy\").getObject(),\n-                new PropertyModel<Long>(resourceTO, \"passwordPolicy\"),\n+                new PropertyModel<String>(resourceTO, \"passwordPolicy\"),\n                 false);\n         passwordPolicy.setChoiceRenderer(new PolicyRenderer(passwordPolicies));\n         passwordPolicy.setChoices(new ArrayList<>(passwordPolicies.getObject().keySet()));\n@@ -109,10 +109,10 @@ public ResourceSecurityPanel(final ResourceTO resourceTO) {\n         // -------------------------------\n         // Account policy selection\n         // -------------------------------\n-        AjaxDropDownChoicePanel<Long> accountPolicy = new AjaxDropDownChoicePanel<>(\n+        AjaxDropDownChoicePanel<String> accountPolicy = new AjaxDropDownChoicePanel<>(\n                 \"accountPolicy\",\n                 new ResourceModel(\"accountPolicy\", \"accountPolicy\").getObject(),\n-                new PropertyModel<Long>(resourceTO, \"accountPolicy\"),\n+                new PropertyModel<String>(resourceTO, \"accountPolicy\"),\n                 false);\n         accountPolicy.setChoiceRenderer(new PolicyRenderer(accountPolicies));\n         accountPolicy.setChoices(new ArrayList<>(accountPolicies.getObject().keySet()));\n@@ -123,10 +123,10 @@ public ResourceSecurityPanel(final ResourceTO resourceTO) {\n         // -------------------------------\n         // Pull policy selection\n         // -------------------------------\n-        AjaxDropDownChoicePanel<Long> pullPolicy = new AjaxDropDownChoicePanel<>(\n+        AjaxDropDownChoicePanel<String> pullPolicy = new AjaxDropDownChoicePanel<>(\n                 \"pullPolicy\",\n                 new ResourceModel(\"pullPolicy\", \"pullPolicy\").getObject(),\n-                new PropertyModel<Long>(resourceTO, \"pullPolicy\"),\n+                new PropertyModel<String>(resourceTO, \"pullPolicy\"),\n                 false);\n         pullPolicy.setChoiceRenderer(new PolicyRenderer(pullPolicies));\n         pullPolicy.setChoices(new ArrayList<>(pullPolicies.getObject().keySet()));"},{"sha":"851ba8e9bdf6aa316814c46ec5eb1e63ae026745","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -725,4 +725,8 @@ div#userFilter  #warning{\n \n div#userFilter  #check {\n   margin: 1px 0 5px 8px;\n+}\n+\n+.keyColumn {\n+  width: 20px;\n }\n\\ No newline at end of file"},{"sha":"c5676a95bfd160e82d43e608ee622dc784415e49","filename":"client/console/src/main/resources/console.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -30,7 +30,7 @@ rootPath=/syncope/rest/\n \n activitiModelerDirectory=${activiti-modeler.directory}\n \n-reconciliationReportKey=1\n+reconciliationReportKey=c3520ad9-179f-49e7-b315-d684d216dd97\n \n page.dashboard=org.apache.syncope.client.console.pages.Dashboard\n page.realms=org.apache.syncope.client.console.pages.Realms"},{"sha":"6b583cc073f349c1f671bcdcd88d70cfbb101c40","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.properties?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -42,7 +42,7 @@ dropDownChoiceField.nullValid=Choose one\n DateTimeField$HoursValidator=Hour value must be in range (1, 12)\n error=Error\n generic_error=An error occurred during the operation\n-id=Id\n+id=Key\n name=Name\n palette.available=Available\n palette.selected=Selected"},{"sha":"0858a0da15f959f93c600d5c37163c079d047921","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_it.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_it.properties?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -41,7 +41,7 @@ dropDownChoiceField.nullValid=Seleziona\n DateTimeField$HoursValidator=L'ora deve essere nell'intervallo (1,12)\n error=Errore\n generic_error=Si \\u00e8 verificato un errore durante l'operazione\n-id=Id\n+id=Chiave\n name=Nome\n palette.available=Opzioni\n palette.selected=Selezione"},{"sha":"8dd50daed7fd722e2d6ac0fdd978ab8a9b54deda","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_pt_BR.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_pt_BR.properties?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -41,7 +41,7 @@ dropDownChoiceField.nullValid=Escolha um\n DateTimeField$HoursValidator=O seu valor precisa estar entre (1, 12)\n error=Erro\n generic_error=Um erro ocorreu durante a opera\\u00e7\\u00e3o\n-id=Id\n+id=Key\n name=Nome\n palette.available=Dispon\\u00ed\\u00advel\n palette.selected=Selecionado"},{"sha":"1bb9e3245d96d3c95fe150b977c1e7a515c1d26e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/SyncopeConsoleApplication_ru.properties","status":"modified","additions":53,"deletions":53,"changes":106,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication_ru.properties?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -14,110 +14,110 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-# users=Пользователи\n+# users=\\u00d0\\u009f\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00b7\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d0\\u00b8\n users=\\u041f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u0438\n-# groups=Группы\n+# groups=\\u00d0\\u0093\\u00d1\\u0080\\u00d1\\u0083\\u00d0\\u00bf\\u00d0\\u00bf\\u00d1\\u008b\n groups=\\u0413\\u0440\\u0443\\u043f\\u043f\\u044b\n-# configuration=Конфигурация\n+# configuration=\\u00d0\\u009a\\u00d0\\u00be\\u00d0\\u00bd\\u00d1\\u0084\\u00d0\\u00b8\\u00d0\\u00b3\\u00d1\\u0083\\u00d1\\u0080\\u00d0\\u00b0\\u00d1\\u0086\\u00d0\\u00b8\\u00d1\\u008f\n configuration=\\u041a\\u043e\\u043d\\u0444\\u0438\\u0433\\u0443\\u0440\\u0430\\u0446\\u0438\\u044f\n-# resources=Ресурсы\n+# resources=\\u00d0\\u00a0\\u00d0\\u00b5\\u00d1\\u0081\\u00d1\\u0083\\u00d1\\u0080\\u00d1\\u0081\\u00d1\\u008b\n resources=\\u0420\\u0435\\u0441\\u0443\\u0440\\u0441\\u044b\n-# connectors=Коннекторы\n+# connectors=\\u00d0\\u009a\\u00d0\\u00be\\u00d0\\u00bd\\u00d0\\u00bd\\u00d0\\u00b5\\u00d0\\u00ba\\u00d1\\u0082\\u00d0\\u00be\\u00d1\\u0080\\u00d1\\u008b\n connectors=\\u041a\\u043e\\u043d\\u043d\\u0435\\u043a\\u0442\\u043e\\u0440\\u044b\n-# reports=Отчеты\n+# reports=\\u00d0\\u009e\\u00d1\\u0082\\u00d1\\u0087\\u00d0\\u00b5\\u00d1\\u0082\\u00d1\\u008b\n reports=\\u041e\\u0442\\u0447\\u0435\\u0442\\u044b\n-# tasks=Задачи\n+# tasks=\\u00d0\\u0097\\u00d0\\u00b0\\u00d0\\u00b4\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b8\n tasks=\\u0417\\u0430\\u0434\\u0430\\u0447\\u0438\n-# logout=Выйти\n+# logout=\\u00d0\\u0092\\u00d1\\u008b\\u00d0\\u00b9\\u00d1\\u0082\\u00d0\\u00b8\n logout=\\u0412\\u044b\\u0439\\u0442\\u0438\n-# schema=Атрибут\n+# schema=\\u00d0\\u0090\\u00d1\\u0082\\u00d1\\u0080\\u00d0\\u00b8\\u00d0\\u00b1\\u00d1\\u0083\\u00d1\\u0082\n schema=\\u0410\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\n-# operation_succeeded=Операция выполнена успешно\n+# operation_succeeded=\\u00d0\\u009e\\u00d0\\u00bf\\u00d0\\u00b5\\u00d1\\u0080\\u00d0\\u00b0\\u00d1\\u0086\\u00d0\\u00b8\\u00d1\\u008f \\u00d0\\u00b2\\u00d1\\u008b\\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00bd\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b0 \\u00d1\\u0083\\u00d1\\u0081\\u00d0\\u00bf\\u00d0\\u00b5\\u00d1\\u0088\\u00d0\\u00bd\\u00d0\\u00be\n operation_succeeded=\\u041e\\u043f\\u0435\\u0440\\u0430\\u0446\\u0438\\u044f \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0430 \\u0443\\u0441\\u043f\\u0435\\u0448\\u043d\\u043e\n-# operation_error=Во время выполнения запроса произошла ошибка\n+# operation_error=\\u00d0\\u0092\\u00d0\\u00be \\u00d0\\u00b2\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00bc\\u00d1\\u008f \\u00d0\\u00b2\\u00d1\\u008b\\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00bd\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f \\u00d0\\u00b7\\u00d0\\u00b0\\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00be\\u00d1\\u0081\\u00d0\\u00b0 \\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00b8\\u00d0\\u00b7\\u00d0\\u00be\\u00d1\\u0088\\u00d0\\u00bb\\u00d0\\u00b0 \\u00d0\\u00be\\u00d1\\u0088\\u00d0\\u00b8\\u00d0\\u00b1\\u00d0\\u00ba\\u00d0\\u00b0\n operation_error=\\u0412\\u043e \\u0432\\u0440\\u0435\\u043c\\u044f \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u044f \\u0437\\u0430\\u043f\\u0440\\u043e\\u0441\\u0430 \\u043f\\u0440\\u043e\\u0438\\u0437\\u043e\\u0448\\u043b\\u0430 \\u043e\\u0448\\u0438\\u0431\\u043a\\u0430\n-# alert=Предупреждение:\n+# alert=\\u00d0\\u009f\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00b4\\u00d1\\u0083\\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00b6\\u00d0\\u00b4\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5:\n alert=\\u041f\\u0440\\u0435\\u0434\\u0443\\u043f\\u0440\\u0435\\u0436\\u0434\\u0435\\u043d\\u0438\\u0435:\n-# confirmDelete=Вы действительно хотите удалить выбранные объекты?\n+# confirmDelete=\\u00d0\\u0092\\u00d1\\u008b \\u00d0\\u00b4\\u00d0\\u00b5\\u00d0\\u00b9\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b2\\u00d0\\u00b8\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00bd\\u00d0\\u00be \\u00d1\\u0085\\u00d0\\u00be\\u00d1\\u0082\\u00d0\\u00b8\\u00d1\\u0082\\u00d0\\u00b5 \\u00d1\\u0083\\u00d0\\u00b4\\u00d0\\u00b0\\u00d0\\u00bb\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00b2\\u00d1\\u008b\\u00d0\\u00b1\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00bd\\u00d1\\u008b\\u00d0\\u00b5 \\u00d0\\u00be\\u00d0\\u00b1\\u00d1\\u008a\\u00d0\\u00b5\\u00d0\\u00ba\\u00d1\\u0082\\u00d1\\u008b?\n confirmDelete=\\u0412\\u044b \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e \\u0445\\u043e\\u0442\\u0438\\u0442\\u0435 \\u0443\\u0434\\u0430\\u043b\\u0438\\u0442\\u044c \\u0432\\u044b\\u0431\\u0440\\u0430\\u043d\\u043d\\u044b\\u0435 \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u044b?\n-# confirmUnlink=Вы действительно хотите удалить связь между выбранными объектами и ресурсом?\n+# confirmUnlink=\\u00d0\\u0092\\u00d1\\u008b \\u00d0\\u00b4\\u00d0\\u00b5\\u00d0\\u00b9\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b2\\u00d0\\u00b8\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00bd\\u00d0\\u00be \\u00d1\\u0085\\u00d0\\u00be\\u00d1\\u0082\\u00d0\\u00b8\\u00d1\\u0082\\u00d0\\u00b5 \\u00d1\\u0083\\u00d0\\u00b4\\u00d0\\u00b0\\u00d0\\u00bb\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c \\u00d1\\u0081\\u00d0\\u00b2\\u00d1\\u008f\\u00d0\\u00b7\\u00d1\\u008c \\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00b6\\u00d0\\u00b4\\u00d1\\u0083 \\u00d0\\u00b2\\u00d1\\u008b\\u00d0\\u00b1\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00bd\\u00d1\\u008b\\u00d0\\u00bc\\u00d0\\u00b8 \\u00d0\\u00be\\u00d0\\u00b1\\u00d1\\u008a\\u00d0\\u00b5\\u00d0\\u00ba\\u00d1\\u0082\\u00d0\\u00b0\\u00d0\\u00bc\\u00d0\\u00b8 \\u00d0\\u00b8 \\u00d1\\u0080\\u00d0\\u00b5\\u00d1\\u0081\\u00d1\\u0083\\u00d1\\u0080\\u00d1\\u0081\\u00d0\\u00be\\u00d0\\u00bc?\n confirmUnlink=\\u0412\\u044b \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e \\u0445\\u043e\\u0442\\u0438\\u0442\\u0435 \\u0443\\u0434\\u0430\\u043b\\u0438\\u0442\\u044c \\u0441\\u0432\\u044f\\u0437\\u044c \\u043c\\u0435\\u0436\\u0434\\u0443 \\u0432\\u044b\\u0431\\u0440\\u0430\\u043d\\u043d\\u044b\\u043c\\u0438 \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u0430\\u043c\\u0438 \\u0438 \\u0440\\u0435\\u0441\\u0443\\u0440\\u0441\\u043e\\u043c?\n-# confirmUnassign=Вы действительно хотите удалить назначение ресурса для выбранных объектов?\n+# confirmUnassign=\\u00d0\\u0092\\u00d1\\u008b \\u00d0\\u00b4\\u00d0\\u00b5\\u00d0\\u00b9\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b2\\u00d0\\u00b8\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00bd\\u00d0\\u00be \\u00d1\\u0085\\u00d0\\u00be\\u00d1\\u0082\\u00d0\\u00b8\\u00d1\\u0082\\u00d0\\u00b5 \\u00d1\\u0083\\u00d0\\u00b4\\u00d0\\u00b0\\u00d0\\u00bb\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00bd\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00bd\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5 \\u00d1\\u0080\\u00d0\\u00b5\\u00d1\\u0081\\u00d1\\u0083\\u00d1\\u0080\\u00d1\\u0081\\u00d0\\u00b0 \\u00d0\\u00b4\\u00d0\\u00bb\\u00d1\\u008f \\u00d0\\u00b2\\u00d1\\u008b\\u00d0\\u00b1\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00bd\\u00d1\\u008b\\u00d1\\u0085 \\u00d0\\u00be\\u00d0\\u00b1\\u00d1\\u008a\\u00d0\\u00b5\\u00d0\\u00ba\\u00d1\\u0082\\u00d0\\u00be\\u00d0\\u00b2?\n confirmUnassign=\\u0412\\u044b \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e \\u0445\\u043e\\u0442\\u0438\\u0442\\u0435 \\u0443\\u0434\\u0430\\u043b\\u0438\\u0442\\u044c \\u043d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0435 \\u0440\\u0435\\u0441\\u0443\\u0440\\u0441\\u0430 \\u0434\\u043b\\u044f \\u0432\\u044b\\u0431\\u0440\\u0430\\u043d\\u043d\\u044b\\u0445 \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u043e\\u0432?\n-# confirmDeprovision=Вы действительно хотите отозвать выбранные объекты?\n+# confirmDeprovision=\\u00d0\\u0092\\u00d1\\u008b \\u00d0\\u00b4\\u00d0\\u00b5\\u00d0\\u00b9\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b2\\u00d0\\u00b8\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00bd\\u00d0\\u00be \\u00d1\\u0085\\u00d0\\u00be\\u00d1\\u0082\\u00d0\\u00b8\\u00d1\\u0082\\u00d0\\u00b5 \\u00d0\\u00be\\u00d1\\u0082\\u00d0\\u00be\\u00d0\\u00b7\\u00d0\\u00b2\\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00b2\\u00d1\\u008b\\u00d0\\u00b1\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00bd\\u00d1\\u008b\\u00d0\\u00b5 \\u00d0\\u00be\\u00d0\\u00b1\\u00d1\\u008a\\u00d0\\u00b5\\u00d0\\u00ba\\u00d1\\u0082\\u00d1\\u008b?\n confirmDeprovision=\\u0412\\u044b \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e \\u0445\\u043e\\u0442\\u0438\\u0442\\u0435 \\u043e\\u0442\\u043e\\u0437\\u0432\\u0430\\u0442\\u044c \\u0432\\u044b\\u0431\\u0440\\u0430\\u043d\\u043d\\u044b\\u0435 \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u044b?\n-# confirmProvision=Вы действительно хотите предоставить выбранные объекты?\n+# confirmProvision=\\u00d0\\u0092\\u00d1\\u008b \\u00d0\\u00b4\\u00d0\\u00b5\\u00d0\\u00b9\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b2\\u00d0\\u00b8\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00bd\\u00d0\\u00be \\u00d1\\u0085\\u00d0\\u00be\\u00d1\\u0082\\u00d0\\u00b8\\u00d1\\u0082\\u00d0\\u00b5 \\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00be\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b0\\u00d0\\u00b2\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00b2\\u00d1\\u008b\\u00d0\\u00b1\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00bd\\u00d1\\u008b\\u00d0\\u00b5 \\u00d0\\u00be\\u00d0\\u00b1\\u00d1\\u008a\\u00d0\\u00b5\\u00d0\\u00ba\\u00d1\\u0082\\u00d1\\u008b?\n confirmProvision=\\u0412\\u044b \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e \\u0445\\u043e\\u0442\\u0438\\u0442\\u0435 \\u043f\\u0440\\u0435\\u0434\\u043e\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044c \\u0432\\u044b\\u0431\\u0440\\u0430\\u043d\\u043d\\u044b\\u0435 \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u044b?\n \n-# unauthorizedInstantiationException=Ошибка авторизации\n+# unauthorizedInstantiationException=\\u00d0\\u009e\\u00d1\\u0088\\u00d0\\u00b8\\u00d0\\u00b1\\u00d0\\u00ba\\u00d0\\u00b0 \\u00d0\\u00b0\\u00d0\\u00b2\\u00d1\\u0082\\u00d0\\u00be\\u00d1\\u0080\\u00d0\\u00b8\\u00d0\\u00b7\\u00d0\\u00b0\\u00d1\\u0086\\u00d0\\u00b8\\u00d0\\u00b8\n unauthorizedInstantiationException=\\u041e\\u0448\\u0438\\u0431\\u043a\\u0430 \\u0430\\u0432\\u0442\\u043e\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438.\n-# accessControlException=Ошибка авторизации при взаимодействии с ядром Syncope\n+# accessControlException=\\u00d0\\u009e\\u00d1\\u0088\\u00d0\\u00b8\\u00d0\\u00b1\\u00d0\\u00ba\\u00d0\\u00b0 \\u00d0\\u00b0\\u00d0\\u00b2\\u00d1\\u0082\\u00d0\\u00be\\u00d1\\u0080\\u00d0\\u00b8\\u00d0\\u00b7\\u00d0\\u00b0\\u00d1\\u0086\\u00d0\\u00b8\\u00d0\\u00b8 \\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b8 \\u00d0\\u00b2\\u00d0\\u00b7\\u00d0\\u00b0\\u00d0\\u00b8\\u00d0\\u00bc\\u00d0\\u00be\\u00d0\\u00b4\\u00d0\\u00b5\\u00d0\\u00b9\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b2\\u00d0\\u00b8\\u00d0\\u00b8 \\u00d1\\u0081 \\u00d1\\u008f\\u00d0\\u00b4\\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00bc Syncope\n accessControlException=\\u041e\\u0448\\u0438\\u0431\\u043a\\u0430 \\u0430\\u0432\\u0442\\u043e\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438 \\u043f\\u0440\\u0438 \\u0432\\u0437\\u0430\\u0438\\u043c\\u043e\\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0438 \\u0441 \\u044f\\u0434\\u0440\\u043e\\u043c Syncope.\n-# restClientException=Ошибка взаимодействия с ядром Syncope\n+# restClientException=\\u00d0\\u009e\\u00d1\\u0088\\u00d0\\u00b8\\u00d0\\u00b1\\u00d0\\u00ba\\u00d0\\u00b0 \\u00d0\\u00b2\\u00d0\\u00b7\\u00d0\\u00b0\\u00d0\\u00b8\\u00d0\\u00bc\\u00d0\\u00be\\u00d0\\u00b4\\u00d0\\u00b5\\u00d0\\u00b9\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b2\\u00d0\\u00b8\\u00d1\\u008f \\u00d1\\u0081 \\u00d1\\u008f\\u00d0\\u00b4\\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00bc Syncope\n restClientException=\\u041e\\u0448\\u0438\\u0431\\u043a\\u0430 \\u0432\\u0437\\u0430\\u0438\\u043c\\u043e\\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f \\u0441 \\u044f\\u0434\\u0440\\u043e\\u043c Syncope\n-# pageExpiredException=Время действия сессии истекло, пожалуйста, выполните повторный вход\n+# pageExpiredException=\\u00d0\\u0092\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00bc\\u00d1\\u008f \\u00d0\\u00b4\\u00d0\\u00b5\\u00d0\\u00b9\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b2\\u00d0\\u00b8\\u00d1\\u008f \\u00d1\\u0081\\u00d0\\u00b5\\u00d1\\u0081\\u00d1\\u0081\\u00d0\\u00b8\\u00d0\\u00b8 \\u00d0\\u00b8\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00ba\\u00d0\\u00bb\\u00d0\\u00be, \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00b6\\u00d0\\u00b0\\u00d0\\u00bb\\u00d1\\u0083\\u00d0\\u00b9\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b0, \\u00d0\\u00b2\\u00d1\\u008b\\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u0082\\u00d0\\u00b5 \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00b2\\u00d1\\u0082\\u00d0\\u00be\\u00d1\\u0080\\u00d0\\u00bd\\u00d1\\u008b\\u00d0\\u00b9 \\u00d0\\u00b2\\u00d1\\u0085\\u00d0\\u00be\\u00d0\\u00b4\n pageExpiredException=\\u0412\\u0440\\u0435\\u043c\\u044f \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f \\u0441\\u0435\\u0441\\u0441\\u0438\\u0438 \\u0438\\u0441\\u0442\\u0435\\u043a\\u043b\\u043e, \\u043f\\u043e\\u0436\\u0430\\u043b\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u0435 \\u043f\\u043e\\u0432\\u0442\\u043e\\u0440\\u043d\\u044b\\u0439 \\u0432\\u0445\\u043e\\u0434\n-# dropDownChoiceField.nullValid=Выберите значение\n+# dropDownChoiceField.nullValid=\\u00d0\\u0092\\u00d1\\u008b\\u00d0\\u00b1\\u00d0\\u00b5\\u00d1\\u0080\\u00d0\\u00b8\\u00d1\\u0082\\u00d0\\u00b5 \\u00d0\\u00b7\\u00d0\\u00bd\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5\n dropDownChoiceField.nullValid=\\u0412\\u044b\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\\u0438\\u0435\n-# DateTimeField$HoursValidator=Часы должны быть указаны в диапазоне (1, 12)\n+# DateTimeField$HoursValidator=\\u00d0\\u00a7\\u00d0\\u00b0\\u00d1\\u0081\\u00d1\\u008b \\u00d0\\u00b4\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00b6\\u00d0\\u00bd\\u00d1\\u008b \\u00d0\\u00b1\\u00d1\\u008b\\u00d1\\u0082\\u00d1\\u008c \\u00d1\\u0083\\u00d0\\u00ba\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00b0\\u00d0\\u00bd\\u00d1\\u008b \\u00d0\\u00b2 \\u00d0\\u00b4\\u00d0\\u00b8\\u00d0\\u00b0\\u00d0\\u00bf\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00be\\u00d0\\u00bd\\u00d0\\u00b5 (1, 12)\n DateTimeField$HoursValidator=\\u0427\\u0430\\u0441\\u044b \\u0434\\u043e\\u043b\\u0436\\u043d\\u044b \\u0431\\u044b\\u0442\\u044c \\u0443\\u043a\\u0430\\u0437\\u0430\\u043d\\u044b \\u0432 \\u0434\\u0438\\u0430\\u043f\\u0430\\u0437\\u043e\\u043d\\u0435 (1, 12)\n-# error=Ошибка\n+# error=\\u00d0\\u009e\\u00d1\\u0088\\u00d0\\u00b8\\u00d0\\u00b1\\u00d0\\u00ba\\u00d0\\u00b0\n error=\\u041e\\u0448\\u0438\\u0431\\u043a\\u0430\n-# generic_error=Во время выполнения операции произошла ошибка\n+# generic_error=\\u00d0\\u0092\\u00d0\\u00be \\u00d0\\u00b2\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00bc\\u00d1\\u008f \\u00d0\\u00b2\\u00d1\\u008b\\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00bd\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f \\u00d0\\u00be\\u00d0\\u00bf\\u00d0\\u00b5\\u00d1\\u0080\\u00d0\\u00b0\\u00d1\\u0086\\u00d0\\u00b8\\u00d0\\u00b8 \\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00b8\\u00d0\\u00b7\\u00d0\\u00be\\u00d1\\u0088\\u00d0\\u00bb\\u00d0\\u00b0 \\u00d0\\u00be\\u00d1\\u0088\\u00d0\\u00b8\\u00d0\\u00b1\\u00d0\\u00ba\\u00d0\\u00b0\n generic_error=\\u0412\\u043e \\u0432\\u0440\\u0435\\u043c\\u044f \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u044f \\u043e\\u043f\\u0435\\u0440\\u0430\\u0446\\u0438\\u0438 \\u043f\\u0440\\u043e\\u0438\\u0437\\u043e\\u0448\\u043b\\u0430 \\u043e\\u0448\\u0438\\u0431\\u043a\\u0430\n-# id=№\n-id=Id\n-# name=Название\n+# id=\\u00e2\\u0084\\u0096\n+id=Key\n+# name=\\u00d0\\u009d\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5\n name=\\u041d\\u0430\\u0437\\u0432\\u0430\\u043d\\u0438\\u0435\n-# palette.available=Доступно\n+# palette.available=\\u00d0\\u0094\\u00d0\\u00be\\u00d1\\u0081\\u00d1\\u0082\\u00d1\\u0083\\u00d0\\u00bf\\u00d0\\u00bd\\u00d0\\u00be\n palette.available=\\u0414\\u043e\\u0441\\u0442\\u0443\\u043f\\u043d\\u043e\n-# palette.selected=Выбрано\n+# palette.selected=\\u00d0\\u0092\\u00d1\\u008b\\u00d0\\u00b1\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00be\n palette.selected=\\u0412\\u044b\\u0431\\u0440\\u0430\\u043d\\u043e\n-# jexl_info=Это поле должно содержать JEXL выражение, например:\n+# jexl_info=\\u00d0\\u00ad\\u00d1\\u0082\\u00d0\\u00be \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00b5 \\u00d0\\u00b4\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00b6\\u00d0\\u00bd\\u00d0\\u00be \\u00d1\\u0081\\u00d0\\u00be\\u00d0\\u00b4\\u00d0\\u00b5\\u00d1\\u0080\\u00d0\\u00b6\\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u008c JEXL \\u00d0\\u00b2\\u00d1\\u008b\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00b6\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5, \\u00d0\\u00bd\\u00d0\\u00b0\\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b8\\u00d0\\u00bc\\u00d0\\u00b5\\u00d1\\u0080:\n jexl_info=\\u042d\\u0442\\u043e \\u043f\\u043e\\u043b\\u0435 \\u0434\\u043e\\u043b\\u0436\\u043d\\u043e \\u0441\\u043e\\u0434\\u0435\\u0440\\u0436\\u0430\\u0442\\u044c JEXL \\u0432\\u044b\\u0440\\u0430\\u0436\\u0435\\u043d\\u0438\\u0435, \\u043d\\u0430\\u043f\\u0440\\u0438\\u043c\\u0435\\u0440:\n jexl_ex1=surname + ',' + firstname\n jexl_ex2='new.' + surname\n-# jexl_syntax_url=Справка по JEXL\n+# jexl_syntax_url=\\u00d0\\u00a1\\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00b2\\u00d0\\u00ba\\u00d0\\u00b0 \\u00d0\\u00bf\\u00d0\\u00be JEXL\n jexl_syntax_url=\\u0421\\u043f\\u0440\\u0430\\u0432\\u043a\\u0430 \\u043f\\u043e JEXL\n-# create=Создать\n+# create=\\u00d0\\u00a1\\u00d0\\u00be\\u00d0\\u00b7\\u00d0\\u00b4\\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u008c\n create=\\u0421\\u043e\\u0437\\u0434\\u0430\\u0442\\u044c\n-# key=Идентификатор\n+# key=\\u00d0\\u0098\\u00d0\\u00b4\\u00d0\\u00b5\\u00d0\\u00bd\\u00d1\\u0082\\u00d0\\u00b8\\u00d1\\u0084\\u00d0\\u00b8\\u00d0\\u00ba\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00be\\u00d1\\u0080\n key=\\u0418\\u0434\\u0435\\u043d\\u0442\\u0438\\u0444\\u0438\\u043a\\u0430\\u0442\\u043e\\u0440\n-# types=Типы объектов\n+# types=\\u00d0\\u00a2\\u00d0\\u00b8\\u00d0\\u00bf\\u00d1\\u008b \\u00d0\\u00be\\u00d0\\u00b1\\u00d1\\u008a\\u00d0\\u00b5\\u00d0\\u00ba\\u00d1\\u0082\\u00d0\\u00be\\u00d0\\u00b2\n types=\\u0422\\u0438\\u043f\\u044b \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u043e\\u0432\n-# dashboard=Панель\n+# dashboard=\\u00d0\\u009f\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b5\\u00d0\\u00bb\\u00d1\\u008c\n dashboard=\\u041f\\u0430\\u043d\\u0435\\u043b\\u044c\n-# realms=Области\n+# realms=\\u00d0\\u009e\\u00d0\\u00b1\\u00d0\\u00bb\\u00d0\\u00b0\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b8\n realms=\\u041e\\u0431\\u043b\\u0430\\u0441\\u0442\\u0438\n-# topology=Топология\n+# topology=\\u00d0\\u00a2\\u00d0\\u00be\\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00be\\u00d0\\u00b3\\u00d0\\u00b8\\u00d1\\u008f\n topology=\\u0422\\u043e\\u043f\\u043e\\u043b\\u043e\\u0433\\u0438\\u044f\n-# roles=Роли\n+# roles=\\u00d0\\u00a0\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00b8\n roles=\\u0420\\u043e\\u043b\\u0438\n-# policies=Политики\n+# policies=\\u00d0\\u009f\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00b8\\u00d1\\u0082\\u00d0\\u00b8\\u00d0\\u00ba\\u00d0\\u00b8\n policies=\\u041f\\u043e\\u043b\\u0438\\u0442\\u0438\\u043a\\u0438\n-# securityQuestions=Контрольные вопросы\n+# securityQuestions=\\u00d0\\u009a\\u00d0\\u00be\\u00d0\\u00bd\\u00d1\\u0082\\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00bd\\u00d1\\u008b\\u00d0\\u00b5 \\u00d0\\u00b2\\u00d0\\u00be\\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00be\\u00d1\\u0081\\u00d1\\u008b\n securityQuestions=\\u041a\\u043e\\u043d\\u0442\\u0440\\u043e\\u043b\\u044c\\u043d\\u044b\\u0435 \\u0432\\u043e\\u043f\\u0440\\u043e\\u0441\\u044b\n-# workflow=Процесс согласования\n+# workflow=\\u00d0\\u009f\\u00d1\\u0080\\u00d0\\u00be\\u00d1\\u0086\\u00d0\\u00b5\\u00d1\\u0081\\u00d1\\u0081 \\u00d1\\u0081\\u00d0\\u00be\\u00d0\\u00b3\\u00d0\\u00bb\\u00d0\\u00b0\\u00d1\\u0081\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f\n workflow=\\u041f\\u0440\\u043e\\u0446\\u0435\\u0441\\u0441 \\u0441\\u043e\\u0433\\u043b\\u0430\\u0441\\u043e\\u0432\\u0430\\u043d\\u0438\\u044f\n-# logs=Логирование\n+# logs=\\u00d0\\u009b\\u00d0\\u00be\\u00d0\\u00b3\\u00d0\\u00b8\\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b5\n logs=\\u041b\\u043e\\u0433\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d\\u0438\\u0435\n-# layouts=Разметка\n+# layouts=\\u00d0\\u00a0\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00bc\\u00d0\\u00b5\\u00d1\\u0082\\u00d0\\u00ba\\u00d0\\u00b0\n layouts=\\u0420\\u0430\\u0437\\u043c\\u0435\\u0442\\u043a\\u0430\n-# notifications=Уведомления\n+# notifications=\\u00d0\\u00a3\\u00d0\\u00b2\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00be\\u00d0\\u00bc\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f\n notifications=\\u0423\\u0432\\u0435\\u0434\\u043e\\u043c\\u043b\\u0435\\u043d\\u0438\\u044f\n-# parameters=Параметры\n+# parameters=\\u00d0\\u009f\\u00d0\\u00b0\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00bc\\u00d0\\u00b5\\u00d1\\u0082\\u00d1\\u0080\\u00d1\\u008b\n parameters=\\u041f\\u0430\\u0440\\u0430\\u043c\\u0435\\u0442\\u0440\\u044b\n-# extensions=Расширения\n+# extensions=\\u00d0\\u00a0\\u00d0\\u00b0\\u00d1\\u0081\\u00d1\\u0088\\u00d0\\u00b8\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f\n extensions=\\u0420\\u0430\\u0441\\u0448\\u0438\\u0440\\u0435\\u043d\\u0438\\u044f\n-#NavigatorLabel=Строки ${from}-${to} из ${of}\n+#NavigatorLabel=\\u00d0\\u00a1\\u00d1\\u0082\\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00ba\\u00d0\\u00b8 ${from}-${to} \\u00d0\\u00b8\\u00d0\\u00b7 ${of}\n NavigatorLabel=\\u0421\\u0442\\u0440\\u043e\\u043a\\u0438 ${from}-${to} \\u0438\\u0437 ${of}\n-# displayRows=Показать по:\n+# displayRows=\\u00d0\\u009f\\u00d0\\u00be\\u00d0\\u00ba\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00bf\\u00d0\\u00be:\n displayRows=\\u041f\\u043e\\u043a\\u0430\\u0437\\u0430\\u0442\\u044c \\u043f\\u043e:\n-# OrderByLink.CSS.ascending=сортировка_по_возрастанию sorting_asc\n+# OrderByLink.CSS.ascending=\\u00d1\\u0081\\u00d0\\u00be\\u00d1\\u0080\\u00d1\\u0082\\u00d0\\u00b8\\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00ba\\u00d0\\u00b0_\\u00d0\\u00bf\\u00d0\\u00be_\\u00d0\\u00b2\\u00d0\\u00be\\u00d0\\u00b7\\u00d1\\u0080\\u00d0\\u00b0\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008e sorting_asc\n OrderByLink.CSS.ascending=\\u0441\\u043e\\u0440\\u0442\\u0438\\u0440\\u043e\\u0432\\u043a\\u0430_\\u043f\\u043e_\\u0432\\u043e\\u0437\\u0440\\u0430\\u0441\\u0442\\u0430\\u043d\\u0438\\u044e\n-# OrderByLink.CSS.descending=сортировка_по_убыванию sorting_desc\n+# OrderByLink.CSS.descending=\\u00d1\\u0081\\u00d0\\u00be\\u00d1\\u0080\\u00d1\\u0082\\u00d0\\u00b8\\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00ba\\u00d0\\u00b0_\\u00d0\\u00bf\\u00d0\\u00be_\\u00d1\\u0083\\u00d0\\u00b1\\u00d1\\u008b\\u00d0\\u00b2\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008e sorting_desc\n OrderByLink.CSS.descending=\\u0441\\u043e\\u0440\\u0442\\u0438\\u0440\\u043e\\u0432\\u043a\\u0430_\\u043f\\u043e_\\u0443\\u0431\\u044b\\u0432\\u0430\\u043d\\u0438\\u044e\n-# OrderByLink.CSS.none=Сортировка\n+# OrderByLink.CSS.none=\\u00d0\\u00a1\\u00d0\\u00be\\u00d1\\u0080\\u00d1\\u0082\\u00d0\\u00b8\\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00ba\\u00d0\\u00b0\n OrderByLink.CSS.none=\\u0441\\u043e\\u0440\\u0442\\u0438\\u0440\\u043e\\u0432\\u043a\\u0430\n-# entitlements=Полномочия\n+# entitlements=\\u00d0\\u009f\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00bd\\u00d0\\u00be\\u00d0\\u00bc\\u00d0\\u00be\\u00d1\\u0087\\u00d0\\u00b8\\u00d1\\u008f\n entitlements=\\u041f\\u043e\\u043b\\u043d\\u043e\\u043c\\u043e\\u0447\\u0438\\u044f"},{"sha":"6f9dee97ba4e4ea8112e7dd85d8cdb1cca36b806","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/DirectoryPanel.properties","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.properties?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -19,10 +19,8 @@ displayRows=Display rows\n mustChangePassword=Must Change Password\n firstname=Firstname\n surname=Surname\n-userId=User Id\n edit=Edit\n delete=Delete\n-id=Id\n status=Status\n token=Token\n username=Username"},{"sha":"1087e6cd7e6414a7ad36bd8e533f36015f4462fd","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/DirectoryPanel_it.properties","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel_it.properties?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -19,13 +19,11 @@ displayRows=display rows\n mustChangePassword=Deve Cambiare Password\n firstname=Nome\n surname=Cognome\n-userId=User Id\n edit=Edit\n delete=Rimuovi\n-id=Id\n status=Stato\n token=Token\n-username=Username\n+username=Nome utente\n creationDate=Data Creazione\n tokenValued=Valorizzato\n tokenNotValued=Non valorizzato"},{"sha":"4f013ddf4dd530592e2e53b385fcc971ae5d3976","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/DirectoryPanel_pt_BR.properties","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel_pt_BR.properties?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -19,10 +19,8 @@ displayRows=Mostrar linhas\n mustChangePassword=Must Change Password\n firstname=Nome\n surname=Sobrenome\n-userId=Identificador do Usu\\u00e1rio\n edit=Alterar\n delete=Excluir\n-id=Identificador\n status=Estatus\n token=Token\n username=Nome de Usu\\u00e1rio"},{"sha":"72f0e3309dd3c950d54f0da29965ef070921bd10","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/DirectoryPanel_ru.properties","status":"modified","additions":23,"deletions":27,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel_ru.properties?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -15,56 +15,52 @@\n # specific language governing permissions and limitations\n # under the License.\n #\n-# displayRows=Показать по\n+# displayRows=\\u00d0\\u009f\\u00d0\\u00be\\u00d0\\u00ba\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00bf\\u00d0\\u00be\n displayRows=\\u041f\\u043e\\u043a\\u0430\\u0437\\u0430\\u0442\\u044c \\u043f\\u043e\n \n-# mustChangePassword=Требуется сменить пароль\n+# mustChangePassword=\\u00d0\\u00a2\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00b1\\u00d1\\u0083\\u00d0\\u00b5\\u00d1\\u0082\\u00d1\\u0081\\u00d1\\u008f \\u00d1\\u0081\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00bf\\u00d0\\u00b0\\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\n mustChangePassword=\\u0422\\u0440\\u0435\\u0431\\u0443\\u0435\\u0442\\u0441\\u044f \\u0441\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c \\u043f\\u0430\\u0440\\u043e\\u043b\\u044c\n-# firstname=Имя\n+# firstname=\\u00d0\\u0098\\u00d0\\u00bc\\u00d1\\u008f\n firstname=\\u0418\\u043c\\u044f\n-# surname=Фамилия\n+# surname=\\u00d0\\u00a4\\u00d0\\u00b0\\u00d0\\u00bc\\u00d0\\u00b8\\u00d0\\u00bb\\u00d0\\u00b8\\u00d1\\u008f\n surname=\\u0424\\u0430\\u043c\\u0438\\u043b\\u0438\\u044f\n-# userId=Учетная запись пользователя\n-userId=\\u0423\\u0447\\u0435\\u0442\\u043d\\u0430\\u044f \\u0437\\u0430\\u043f\\u0438\\u0441\\u044c \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f\n-# edit=Изменить\n+# edit=\\u00d0\\u0098\\u00d0\\u00b7\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c\n edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c\n-# delete=Удалить\n+# delete=\\u00d0\\u00a3\\u00d0\\u00b4\\u00d0\\u00b0\\u00d0\\u00bb\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c\n delete=\\u0423\\u0434\\u0430\\u043b\\u0438\\u0442\\u044c\n-# id=Id\n-id=Id\n-# status=Статус\n+# status=\\u00d0\\u00a1\\u00d1\\u0082\\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u0083\\u00d1\\u0081\n status=\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\n-# token=Токен\n+# token=\\u00d0\\u00a2\\u00d0\\u00be\\u00d0\\u00ba\\u00d0\\u00b5\\u00d0\\u00bd\n token=\\u0422\\u043e\\u043a\\u0435\\u043d\n-# username=Имя пользователя\n+# username=\\u00d0\\u0098\\u00d0\\u00bc\\u00d1\\u008f \\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u008c\\u00d0\\u00b7\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d1\\u008f\n username=\\u0418\\u043c\\u044f \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f\n-# creationDate=Дата создания\n+# creationDate=\\u00d0\\u0094\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b0 \\u00d1\\u0081\\u00d0\\u00be\\u00d0\\u00b7\\u00d0\\u00b4\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f\n creationDate=\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043e\\u0437\\u0434\\u0430\\u043d\\u0438\\u044f\n-# tokenValued=Назначен\n+# tokenValued=\\u00d0\\u009d\\u00d0\\u00b0\\u00d0\\u00b7\\u00d0\\u00bd\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b5\\u00d0\\u00bd\n tokenValued=\\u041d\\u0430\\u0437\\u043d\\u0430\\u0447\\u0435\\u043d\n-# tokenNotValued=Отсутствует\n+# tokenNotValued=\\u00d0\\u009e\\u00d1\\u0082\\u00d1\\u0081\\u00d1\\u0083\\u00d1\\u0082\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b2\\u00d1\\u0083\\u00d0\\u00b5\\u00d1\\u0082\n tokenNotValued=\\u041e\\u0442\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442\n \n-# subject=Тема\n+# subject=\\u00d0\\u00a2\\u00d0\\u00b5\\u00d0\\u00bc\\u00d0\\u00b0\n subject=\\u0422\\u0435\\u043c\\u0430\n-# recipients=Получатели\n+# recipients=\\u00d0\\u009f\\u00d0\\u00be\\u00d0\\u00bb\\u00d1\\u0083\\u00d1\\u0087\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b5\\u00d0\\u00bb\\u00d0\\u00b8\n recipients=\\u041f\\u043e\\u043b\\u0443\\u0447\\u0430\\u0442\\u0435\\u043b\\u0438\n \n-# any.edit=Изменить ${anyTO.type} ${anyTO.key}\n+# any.edit=\\u00d0\\u0098\\u00d0\\u00b7\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c ${anyTO.type} ${anyTO.key}\n any.edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c ${anyTO.type} ${anyTO.key}\n-# any.new=Создать ${anyTO.type}\n+# any.new=\\u00d0\\u00a1\\u00d0\\u00be\\u00d0\\u00b7\\u00d0\\u00b4\\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u008c ${anyTO.type}\n any.new=\\u0421\\u043e\\u0437\\u0434\\u0430\\u0442\\u044c ${anyTO.type}\n-# any.finish=Сохранить ${anyTO.type}\n+# any.finish=\\u00d0\\u00a1\\u00d0\\u00be\\u00d1\\u0085\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c ${anyTO.type}\n any.finish=\\u0421\\u043e\\u0445\\u0440\\u0430\\u043d\\u0438\\u0442\\u044c ${anyTO.type}\n-# any.cancel=Отменить ${anyTO.type}\n+# any.cancel=\\u00d0\\u009e\\u00d1\\u0082\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c ${anyTO.type}\n any.cancel=\\u041e\\u0442\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c ${anyTO.type}\n-# any.attr.display=Показывать атрибуты\n+# any.attr.display=\\u00d0\\u009f\\u00d0\\u00be\\u00d0\\u00ba\\u00d0\\u00b0\\u00d0\\u00b7\\u00d1\\u008b\\u00d0\\u00b2\\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u0080\\u00d0\\u00b8\\u00d0\\u00b1\\u00d1\\u0083\\u00d1\\u0082\\u00d1\\u008b\n any.attr.display=\\u041f\\u043e\\u043a\\u0430\\u0437\\u044b\\u0432\\u0430\\u0442\\u044c \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u044b\n-# bulk.action=Массовое действие\n+# bulk.action=\\u00d0\\u009c\\u00d0\\u00b0\\u00d1\\u0081\\u00d1\\u0081\\u00d0\\u00be\\u00d0\\u00b2\\u00d0\\u00be\\u00d0\\u00b5 \\u00d0\\u00b4\\u00d0\\u00b5\\u00d0\\u00b9\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b2\\u00d0\\u00b8\\u00d0\\u00b5\n bulk.action=\\u041c\\u0430\\u0441\\u0441\\u043e\\u0432\\u043e\\u0435 \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\n-# any.propagation.tasks=Задачи выполнения действий для ${type} ${key}\n+# any.propagation.tasks=\\u00d0\\u0097\\u00d0\\u00b0\\u00d0\\u00b4\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b8 \\u00d0\\u00b2\\u00d1\\u008b\\u00d0\\u00bf\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00bd\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f \\u00d0\\u00b4\\u00d0\\u00b5\\u00d0\\u00b9\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b2\\u00d0\\u00b8\\u00d0\\u00b9 \\u00d0\\u00b4\\u00d0\\u00bb\\u00d1\\u008f ${type} ${key}\n any.propagation.tasks=\\u0417\\u0430\\u0434\\u0430\\u0447\\u0438 \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0435\\u043d\\u0438\\u044f \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0439 \\u0434\\u043b\\u044f ${type} ${key}\n-# any.notification.tasks=Задачи отправки уведомлений для ${type} ${key}\n+# any.notification.tasks=\\u00d0\\u0097\\u00d0\\u00b0\\u00d0\\u00b4\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b8 \\u00d0\\u00be\\u00d1\\u0082\\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00b2\\u00d0\\u00ba\\u00d0\\u00b8 \\u00d1\\u0083\\u00d0\\u00b2\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00be\\u00d0\\u00bc\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b9 \\u00d0\\u00b4\\u00d0\\u00bb\\u00d1\\u008f ${type} ${key}\n any.notification.tasks=\\u0417\\u0430\\u0434\\u0430\\u0447\\u0438 \\u043e\\u0442\\u043f\\u0440\\u0430\\u0432\\u043a\\u0438 \\u0443\\u0432\\u0435\\u0434\\u043e\\u043c\\u043b\\u0435\\u043d\\u0438\\u0439 \\u0434\\u043b\\u044f ${type} ${key}\n-# notification.tasks=Задачи отправки уведомлений ${key}\n+# notification.tasks=\\u00d0\\u0097\\u00d0\\u00b0\\u00d0\\u00b4\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b8 \\u00d0\\u00be\\u00d1\\u0082\\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b0\\u00d0\\u00b2\\u00d0\\u00ba\\u00d0\\u00b8 \\u00d1\\u0083\\u00d0\\u00b2\\u00d0\\u00b5\\u00d0\\u00b4\\u00d0\\u00be\\u00d0\\u00bc\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d0\\u00b9 ${key}\n notification.tasks=\\u0417\\u0430\\u0434\\u0430\\u0447\\u0438 \\u043e\\u0442\\u043f\\u0440\\u0430\\u0432\\u043a\\u0438 \\u0443\\u0432\\u0435\\u0434\\u043e\\u043c\\u043b\\u0435\\u043d\\u0438\\u0439 ${key}"},{"sha":"0d7b3df9339c368f3e4aa66d10bde1f16fd93fb5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TaskDirectoryPanel.properties","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel.properties?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -17,8 +17,6 @@\n profile=Profile\n executions=Executions\n title=Task\n-\n-key=Id\n start=Start date\n end=End date\n latestExecStatus=Last execution status"},{"sha":"6ed659d3c021cd35222d8be79636fbd83e7c47ee","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TaskDirectoryPanel_it.properties","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel_it.properties?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -17,8 +17,6 @@\n profile=Profilo\n executions=Esecuzioni\n title=Task\n-\n-key=Id\n start=Data di avvio\n end=Data di conclusione\n latestExecStatus=Stato ultima esecuzione"},{"sha":"63f89353fcd50b3d8c5cd900f1d3aace36e70044","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TaskDirectoryPanel_pt_BR.properties","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel_pt_BR.properties?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -17,8 +17,6 @@\n profile=Profilo\n executions=Esecuzioni\n title=Task\n-\n-key=Id\n start=Data inicial\n end=Data Final\n latestExecStatus=Stato ultima esecuzione"},{"sha":"4edfdb1795d9d5eaae9e47d8b7cec793232a40c1","filename":"client/console/src/main/resources/org/apache/syncope/client/console/tasks/TaskDirectoryPanel_ru.properties","status":"modified","additions":7,"deletions":10,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftasks%2FTaskDirectoryPanel_ru.properties?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -15,21 +15,18 @@\n # specific language governing permissions and limitations\n # under the License.\n #\n-# profile=Профиль\n+# profile=\\u00d0\\u009f\\u00d1\\u0080\\u00d0\\u00be\\u00d1\\u0084\\u00d0\\u00b8\\u00d0\\u00bb\\u00d1\\u008c\n profile=\\u041f\\u0440\\u043e\\u0444\\u0438\\u043b\\u044c\n-# executions=Запуски задачи\n+# executions=\\u00d0\\u0097\\u00d0\\u00b0\\u00d0\\u00bf\\u00d1\\u0083\\u00d1\\u0081\\u00d0\\u00ba\\u00d0\\u00b8 \\u00d0\\u00b7\\u00d0\\u00b0\\u00d0\\u00b4\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b8\n executions=\\u0417\\u0430\\u043f\\u0443\\u0441\\u043a\\u0438 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\n-# title=Задача\n+# title=\\u00d0\\u0097\\u00d0\\u00b0\\u00d0\\u00b4\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b0\n title=\\u0417\\u0430\\u0434\\u0430\\u0447\\u0430\n-\n-# key=Идентификатор\n-key=\\u0418\\u0434\\u0435\\u043d\\u0442\\u0438\\u0444\\u0438\\u043a\\u0430\\u0442\\u043e\\u0440\n-# start=Дата начала\n+# start=\\u00d0\\u0094\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b0 \\u00d0\\u00bd\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b0\\u00d0\\u00bb\\u00d0\\u00b0\n start=\\u0414\\u0430\\u0442\\u0430 \\u043d\\u0430\\u0447\\u0430\\u043b\\u0430\n-# end=Дата окончания\n+# end=\\u00d0\\u0094\\u00d0\\u00b0\\u00d1\\u0082\\u00d0\\u00b0 \\u00d0\\u00be\\u00d0\\u00ba\\u00d0\\u00be\\u00d0\\u00bd\\u00d1\\u0087\\u00d0\\u00b0\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u008f\n end=\\u0414\\u0430\\u0442\\u0430 \\u043e\\u043a\\u043e\\u043d\\u0447\\u0430\\u043d\\u0438\\u044f\n-# latestExecStatus=Статус предыдущего запуска\n+# latestExecStatus=\\u00d0\\u00a1\\u00d1\\u0082\\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u0083\\u00d1\\u0081 \\u00d0\\u00bf\\u00d1\\u0080\\u00d0\\u00b5\\u00d0\\u00b4\\u00d1\\u008b\\u00d0\\u00b4\\u00d1\\u0083\\u00d1\\u0089\\u00d0\\u00b5\\u00d0\\u00b3\\u00d0\\u00be \\u00d0\\u00b7\\u00d0\\u00b0\\u00d0\\u00bf\\u00d1\\u0083\\u00d1\\u0081\\u00d0\\u00ba\\u00d0\\u00b0\n latestExecStatus=\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u043f\\u0440\\u0435\\u0434\\u044b\\u0434\\u0443\\u0449\\u0435\\u0433\\u043e \\u0437\\u0430\\u043f\\u0443\\u0441\\u043a\\u0430\n \n-# task.view=Запуски задачи\n+# task.view=\\u00d0\\u0097\\u00d0\\u00b0\\u00d0\\u00bf\\u00d1\\u0083\\u00d1\\u0081\\u00d0\\u00ba\\u00d0\\u00b8 \\u00d0\\u00b7\\u00d0\\u00b0\\u00d0\\u00b4\\u00d0\\u00b0\\u00d1\\u0087\\u00d0\\u00b8\n task.view=\\u0417\\u0430\\u043f\\u0443\\u0441\\u043a\\u0438 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438 '${key}'"},{"sha":"08bf3dc1f2af1d8cee620cff4e161a77caf54d17","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/AnyOperations.java","status":"modified","additions":23,"deletions":24,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAnyOperations.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -37,7 +37,6 @@\n import org.apache.syncope.common.lib.patch.RelationshipPatch;\n import org.apache.syncope.common.lib.patch.AbstractReplacePatchItem;\n import org.apache.syncope.common.lib.patch.BooleanReplacePatchItem;\n-import org.apache.syncope.common.lib.patch.LongReplacePatchItem;\n import org.apache.syncope.common.lib.patch.StringPatchItem;\n import org.apache.syncope.common.lib.patch.StringReplacePatchItem;\n import org.apache.syncope.common.lib.patch.UserPatch;\n@@ -175,10 +174,10 @@ public static AnyObjectPatch diff(\n         diff(updated, original, result, incremental);\n \n         // 1. relationships\n-        Map<Pair<String, Long>, RelationshipTO> updatedRels = updated.getRelationshipMap();\n-        Map<Pair<String, Long>, RelationshipTO> originalRels = original.getRelationshipMap();\n+        Map<Pair<String, String>, RelationshipTO> updatedRels = updated.getRelationshipMap();\n+        Map<Pair<String, String>, RelationshipTO> originalRels = original.getRelationshipMap();\n \n-        for (Map.Entry<Pair<String, Long>, RelationshipTO> entry : updatedRels.entrySet()) {\n+        for (Map.Entry<Pair<String, String>, RelationshipTO> entry : updatedRels.entrySet()) {\n             if (!originalRels.containsKey(entry.getKey())) {\n                 result.getRelationships().add(new RelationshipPatch.Builder().\n                         operation(PatchOperation.ADD_REPLACE).\n@@ -187,26 +186,26 @@ public static AnyObjectPatch diff(\n         }\n \n         if (!incremental) {\n-            for (Pair<String, Long> key : CollectionUtils.subtract(originalRels.keySet(), updatedRels.keySet())) {\n+            for (Pair<String, String> key : CollectionUtils.subtract(originalRels.keySet(), updatedRels.keySet())) {\n                 result.getRelationships().add(new RelationshipPatch.Builder().\n                         operation(PatchOperation.DELETE).\n                         relationshipTO(originalRels.get(key)).build());\n             }\n         }\n \n         // 2. memberships\n-        Map<Long, MembershipTO> updatedMembs = updated.getMembershipMap();\n-        Map<Long, MembershipTO> originalMembs = original.getMembershipMap();\n+        Map<String, MembershipTO> updatedMembs = updated.getMembershipMap();\n+        Map<String, MembershipTO> originalMembs = original.getMembershipMap();\n \n-        for (Map.Entry<Long, MembershipTO> entry : updatedMembs.entrySet()) {\n+        for (Map.Entry<String, MembershipTO> entry : updatedMembs.entrySet()) {\n             if (!originalMembs.containsKey(entry.getKey())) {\n                 result.getMemberships().add(new MembershipPatch.Builder().\n                         operation(PatchOperation.ADD_REPLACE).membershipTO(entry.getValue()).build());\n             }\n         }\n \n         if (!incremental) {\n-            for (Long key : CollectionUtils.subtract(originalMembs.keySet(), updatedMembs.keySet())) {\n+            for (String key : CollectionUtils.subtract(originalMembs.keySet(), updatedMembs.keySet())) {\n                 result.getMemberships().add(new MembershipPatch.Builder().\n                         operation(PatchOperation.DELETE).membershipTO(originalMembs.get(key)).build());\n             }\n@@ -246,8 +245,8 @@ public static UserPatch diff(final UserTO updated, final UserTO original, final\n         } else if (!updated.getSecurityQuestion().equals(original.getSecurityQuestion())\n                 || StringUtils.isNotBlank(updated.getSecurityAnswer())) {\n \n-            result.setSecurityQuestion(\n-                    new LongReplacePatchItem.Builder().value(updated.getSecurityQuestion()).build());\n+            result.setSecurityQuestion(new StringReplacePatchItem.Builder().\n+                    value(updated.getSecurityQuestion()).build());\n             result.setSecurityAnswer(\n                     new StringReplacePatchItem.Builder().value(updated.getSecurityAnswer()).build());\n         }\n@@ -269,10 +268,10 @@ public static UserPatch diff(final UserTO updated, final UserTO original, final\n         }\n \n         // 5. relationships\n-        Map<Pair<String, Long>, RelationshipTO> updatedRels = updated.getRelationshipMap();\n-        Map<Pair<String, Long>, RelationshipTO> originalRels = original.getRelationshipMap();\n+        Map<Pair<String, String>, RelationshipTO> updatedRels = updated.getRelationshipMap();\n+        Map<Pair<String, String>, RelationshipTO> originalRels = original.getRelationshipMap();\n \n-        for (Map.Entry<Pair<String, Long>, RelationshipTO> entry : updatedRels.entrySet()) {\n+        for (Map.Entry<Pair<String, String>, RelationshipTO> entry : updatedRels.entrySet()) {\n             if (!originalRels.containsKey(entry.getKey())) {\n                 result.getRelationships().add(new RelationshipPatch.Builder().\n                         operation(PatchOperation.ADD_REPLACE).\n@@ -281,26 +280,26 @@ public static UserPatch diff(final UserTO updated, final UserTO original, final\n         }\n \n         if (!incremental) {\n-            for (Pair<String, Long> key : CollectionUtils.subtract(originalRels.keySet(), updatedRels.keySet())) {\n+            for (Pair<String, String> key : CollectionUtils.subtract(originalRels.keySet(), updatedRels.keySet())) {\n                 result.getRelationships().add(new RelationshipPatch.Builder().\n                         operation(PatchOperation.DELETE).\n                         relationshipTO(originalRels.get(key)).build());\n             }\n         }\n \n         // 6. memberships\n-        Map<Long, MembershipTO> updatedMembs = updated.getMembershipMap();\n-        Map<Long, MembershipTO> originalMembs = original.getMembershipMap();\n+        Map<String, MembershipTO> updatedMembs = updated.getMembershipMap();\n+        Map<String, MembershipTO> originalMembs = original.getMembershipMap();\n \n-        for (Map.Entry<Long, MembershipTO> entry : updatedMembs.entrySet()) {\n+        for (Map.Entry<String, MembershipTO> entry : updatedMembs.entrySet()) {\n             if (!originalMembs.containsKey(entry.getKey())) {\n                 result.getMemberships().add(new MembershipPatch.Builder().\n                         operation(PatchOperation.ADD_REPLACE).membershipTO(entry.getValue()).build());\n             }\n         }\n \n         if (!incremental) {\n-            for (Long key : CollectionUtils.subtract(originalMembs.keySet(), updatedMembs.keySet())) {\n+            for (String key : CollectionUtils.subtract(originalMembs.keySet(), updatedMembs.keySet())) {\n                 result.getMemberships().add(new MembershipPatch.Builder().\n                         operation(PatchOperation.DELETE).membershipTO(originalMembs.get(key)).build());\n             }\n@@ -326,10 +325,10 @@ public static GroupPatch diff(final GroupTO updated, final GroupTO original, fin\n         result.setName(replacePatchItem(updated.getName(), original.getName(), new StringReplacePatchItem()));\n \n         // 2. ownership\n-        result.setUserOwner(replacePatchItem(\n-                updated.getUserOwner(), original.getUserOwner(), new LongReplacePatchItem()));\n-        result.setGroupOwner(replacePatchItem(\n-                updated.getGroupOwner(), original.getGroupOwner(), new LongReplacePatchItem()));\n+        result.setUserOwner(\n+                replacePatchItem(updated.getUserOwner(), original.getUserOwner(), new StringReplacePatchItem()));\n+        result.setGroupOwner(replacePatchItem(updated.getGroupOwner(), original.getGroupOwner(),\n+                new StringReplacePatchItem()));\n \n         // 3. dynamic membership\n         result.setUDynMembershipCond(updated.getUDynMembershipCond());\n@@ -382,7 +381,7 @@ private static Collection<AttrTO> patch(final Map<String, AttrTO> attrs, final S\n \n     private static <T extends AnyTO, K extends AnyPatch> void patch(final T to, final K patch, final T result) {\n         // check same key\n-        if (to.getKey() == null || to.getKey() != patch.getKey()) {\n+        if (to.getKey() == null || !to.getKey().equals(patch.getKey())) {\n             throw new IllegalArgumentException(\n                     to.getClass().getSimpleName() + \" and \" + patch.getClass().getSimpleName()\n                     + \" keys must be the same\");"},{"sha":"a715992e2b3dc9ce56248f1e5a9d7b73c2be9b13","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/EntityTOUtils.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FEntityTOUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FEntityTOUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FEntityTOUtils.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -41,11 +41,11 @@ public final class EntityTOUtils {\n         ANY_FIELDS = Collections.unmodifiableList(anyFields);\n     }\n \n-    public static <KEY, E extends EntityTO<KEY>> Transformer<E, KEY> keyTransformer() {\n-        return new Transformer<E, KEY>() {\n+    public static <E extends EntityTO> Transformer<E, String> keyTransformer() {\n+        return new Transformer<E, String>() {\n \n             @Override\n-            public KEY transform(final E input) {\n+            public String transform(final E input) {\n                 return input.getKey();\n             }\n         };"},{"sha":"b084eb9ba6d9ef614c4d2e5a187c6b94592ffa14","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/SyncopeConstants.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FSyncopeConstants.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -58,6 +58,10 @@ public final class SyncopeConstants {\n             + \"@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$\",\n             Pattern.CASE_INSENSITIVE);\n \n+    public static final String UUID_REGEX = \"[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\";\n+\n+    public static final Pattern UUID_PATTERN = Pattern.compile(UUID_REGEX);\n+\n     private SyncopeConstants() {\n         // private constructor for utility class\n     }"},{"sha":"8282427be411de75b53ebc5691636a2f7e3c8558","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/AbstractReplacePatchItem.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAbstractReplacePatchItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAbstractReplacePatchItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAbstractReplacePatchItem.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -30,7 +30,7 @@\n  * @param <T> {@code String}, {@code Long} or {@code Boolean}\n  */\n @XmlType\n-@XmlSeeAlso({ BooleanReplacePatchItem.class, LongReplacePatchItem.class, StringReplacePatchItem.class })\n+@XmlSeeAlso({ BooleanReplacePatchItem.class, StringReplacePatchItem.class })\n public abstract class AbstractReplacePatchItem<T> extends AbstractPatchItem<T> {\n \n     private static final long serialVersionUID = 2027599764019829563L;"},{"sha":"3ec141d7cde791fb43a63a4feca8279762c910bf","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/AnyPatch.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAnyPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAnyPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAnyPatch.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -34,7 +34,7 @@ public abstract class AnyPatch extends AbstractBaseBean {\n \n     private static final long serialVersionUID = -7445489774552440544L;\n \n-    private long key;\n+    private String key;\n \n     private StringReplacePatchItem realm;\n \n@@ -46,12 +46,12 @@ public abstract class AnyPatch extends AbstractBaseBean {\n \n     private final Set<StringPatchItem> resources = new HashSet<>();\n \n-    public long getKey() {\n+    public String getKey() {\n         return key;\n     }\n \n     @PathParam(\"key\")\n-    public void setKey(final long key) {\n+    public void setKey(final String key) {\n         this.key = key;\n     }\n "},{"sha":"56efe7ee6680dcf8241377f0e23d2a50e7d09f72","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/AssociationPatch.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAssociationPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAssociationPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAssociationPatch.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -29,16 +29,16 @@ public class AssociationPatch extends PasswordPatch {\n \n     private static final long serialVersionUID = 6295778399633883767L;\n \n-    private long key;\n+    private String key;\n \n     private ResourceAssociationAction action;\n \n-    public long getKey() {\n+    public String getKey() {\n         return key;\n     }\n \n     @PathParam(\"key\")\n-    public void setKey(final long key) {\n+    public void setKey(final String key) {\n         this.key = key;\n     }\n "},{"sha":"e5271e0cecc67442bdb2690400914ac87a1d60d9","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/DeassociationPatch.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FDeassociationPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FDeassociationPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FDeassociationPatch.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -35,18 +35,18 @@ public class DeassociationPatch extends AbstractBaseBean {\n \n     private static final long serialVersionUID = 6295778399633883767L;\n \n-    private long key;\n+    private String key;\n \n     private ResourceDeassociationAction action;\n \n     private final List<String> resources = new ArrayList<>();\n \n-    public long getKey() {\n+    public String getKey() {\n         return key;\n     }\n \n     @PathParam(\"key\")\n-    public void setKey(final long key) {\n+    public void setKey(final String key) {\n         this.key = key;\n     }\n "},{"sha":"29353ffa43c94fb1d6d36d6d7ad1444ccb59c8ec","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/GroupPatch.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FGroupPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FGroupPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FGroupPatch.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -42,9 +42,9 @@ public class GroupPatch extends AnyPatch {\n \n     private StringReplacePatchItem name;\n \n-    private LongReplacePatchItem userOwner;\n+    private StringReplacePatchItem userOwner;\n \n-    private LongReplacePatchItem groupOwner;\n+    private StringReplacePatchItem groupOwner;\n \n     private String udynMembershipCond;\n \n@@ -62,19 +62,19 @@ public void setName(final StringReplacePatchItem name) {\n         this.name = name;\n     }\n \n-    public LongReplacePatchItem getUserOwner() {\n+    public StringReplacePatchItem getUserOwner() {\n         return userOwner;\n     }\n \n-    public void setUserOwner(final LongReplacePatchItem userOwner) {\n+    public void setUserOwner(final StringReplacePatchItem userOwner) {\n         this.userOwner = userOwner;\n     }\n \n-    public LongReplacePatchItem getGroupOwner() {\n+    public StringReplacePatchItem getGroupOwner() {\n         return groupOwner;\n     }\n \n-    public void setGroupOwner(final LongReplacePatchItem groupOwner) {\n+    public void setGroupOwner(final StringReplacePatchItem groupOwner) {\n         this.groupOwner = groupOwner;\n     }\n "},{"sha":"233d5bdaadf4fda28c57cc98d02fc06a485ce5fb","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/ResourceDeassociationPatch.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FResourceDeassociationPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FResourceDeassociationPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FResourceDeassociationPatch.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -41,7 +41,7 @@ public class ResourceDeassociationPatch extends AbstractBaseBean {\n \n     private ResourceDeassociationAction action;\n \n-    private final List<Long> anyKyes = new ArrayList<>();\n+    private final List<String> anyKyes = new ArrayList<>();\n \n     public String getKey() {\n         return key;\n@@ -73,7 +73,7 @@ public void setAction(final ResourceDeassociationAction action) {\n     @XmlElementWrapper(name = \"anyKyes\")\n     @XmlElement(name = \"key\")\n     @JsonProperty(\"anyKyes\")\n-    public List<Long> getAnyKyes() {\n+    public List<String> getAnyKyes() {\n         return anyKyes;\n     }\n "},{"sha":"b7d9c1e7e8e6b41e9a153b5f91cfddadf3cc6af1","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/StatusPatch.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FStatusPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FStatusPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FStatusPatch.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -32,7 +32,7 @@ public class StatusPatch extends PasswordPatch {\n     /**\n      * Key of user to for which status update is requested.\n      */\n-    private long key;\n+    private String key;\n \n     private StatusPatchType type;\n \n@@ -41,12 +41,12 @@ public class StatusPatch extends PasswordPatch {\n      */\n     private String token;\n \n-    public long getKey() {\n+    public String getKey() {\n         return key;\n     }\n \n     @PathParam(\"key\")\n-    public void setKey(final long key) {\n+    public void setKey(final String key) {\n         this.key = key;\n     }\n "},{"sha":"5dc50f1d673e4badc78e1e73e3100be91f383c22","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/UserPatch.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FUserPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FUserPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FUserPatch.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -36,7 +36,7 @@ public class UserPatch extends AnyPatch {\n \n     private PasswordPatch password;\n \n-    private LongReplacePatchItem securityQuestion;\n+    private StringReplacePatchItem securityQuestion;\n \n     private StringReplacePatchItem securityAnswer;\n \n@@ -64,11 +64,11 @@ public void setPassword(final PasswordPatch password) {\n         this.password = password;\n     }\n \n-    public LongReplacePatchItem getSecurityQuestion() {\n+    public StringReplacePatchItem getSecurityQuestion() {\n         return securityQuestion;\n     }\n \n-    public void setSecurityQuestion(final LongReplacePatchItem securityQuestion) {\n+    public void setSecurityQuestion(final StringReplacePatchItem securityQuestion) {\n         this.securityQuestion = securityQuestion;\n     }\n "},{"sha":"bc41628e6600593ee4ed17aeed13f35aeb96354b","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/policy/AbstractPolicyTO.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractPolicyTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -29,29 +29,32 @@\n import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.syncope.common.lib.to.EntityTO;\n \n @XmlRootElement(name = \"abstractPolicy\")\n @XmlType\n @XmlSeeAlso({ AccountPolicyTO.class, PasswordPolicyTO.class, PullPolicyTO.class })\n @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n-public abstract class AbstractPolicyTO extends AbstractBaseBean {\n+public abstract class AbstractPolicyTO extends AbstractBaseBean implements EntityTO {\n \n     private static final long serialVersionUID = -2903888572649721035L;\n \n-    private long key;\n+    private String key;\n \n     private String description;\n \n     private final List<String> usedByResources = new ArrayList<>();\n \n     private final List<String> usedByRealms = new ArrayList<>();\n \n-    public long getKey() {\n+    @Override\n+    public String getKey() {\n         return key;\n     }\n \n     @PathParam(\"key\")\n-    public void setKey(final long key) {\n+    @Override\n+    public void setKey(final String key) {\n         this.key = key;\n     }\n "},{"sha":"59bcfe3430f7989a6265d660427490d0cb417554","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/search/AnyObjectFiqlSearchConditionBuilder.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAnyObjectFiqlSearchConditionBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAnyObjectFiqlSearchConditionBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAnyObjectFiqlSearchConditionBuilder.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -53,25 +53,25 @@ public AnyObjectProperty is(final String property) {\n         return newBuilderInstance().is(property);\n     }\n \n-    public CompleteCondition inGroups(final Long group, final Long... moreGroups) {\n+    public CompleteCondition inGroups(final String group, final String... moreGroups) {\n         return newBuilderInstance().\n                 is(SpecialAttr.GROUPS.toString()).\n                 inGroups(group, moreGroups);\n     }\n \n-    public CompleteCondition notInGroups(final Long group, final Long... moreGroups) {\n+    public CompleteCondition notInGroups(final String group, final String... moreGroups) {\n         return newBuilderInstance().\n                 is(SpecialAttr.GROUPS.toString()).\n                 notInGroups(group, moreGroups);\n     }\n \n-    public CompleteCondition inRelationships(final Long anyType, final Long... moreAnyTypes) {\n+    public CompleteCondition inRelationships(final String anyType, final String... moreAnyTypes) {\n         return newBuilderInstance().\n                 is(SpecialAttr.RELATIONSHIPS.toString()).\n                 inRelationships(anyType, moreAnyTypes);\n     }\n \n-    public CompleteCondition notInRelationships(final Long anyType, final Long... moreAnyTypes) {\n+    public CompleteCondition notInRelationships(final String anyType, final String... moreAnyTypes) {\n         return newBuilderInstance().\n                 is(SpecialAttr.RELATIONSHIPS.toString()).\n                 notInRelationships(anyType, moreAnyTypes);\n@@ -120,25 +120,25 @@ public AnyObjectProperty is(final String property) {\n         }\n \n         @Override\n-        public CompleteCondition inGroups(final Long group, final Long... moreGroups) {\n+        public CompleteCondition inGroups(final String group, final String... moreGroups) {\n             this.result = SpecialAttr.GROUPS.toString();\n             return condition(FiqlParser.EQ, group, (Object[]) moreGroups);\n         }\n \n         @Override\n-        public CompleteCondition notInGroups(final Long group, final Long... moreGroups) {\n+        public CompleteCondition notInGroups(final String group, final String... moreGroups) {\n             this.result = SpecialAttr.GROUPS.toString();\n             return condition(FiqlParser.NEQ, group, (Object[]) moreGroups);\n         }\n \n         @Override\n-        public CompleteCondition inRelationships(final Long anyObject, final Long... moreAnyObjects) {\n+        public CompleteCondition inRelationships(final String anyObject, final String... moreAnyObjects) {\n             this.result = SpecialAttr.RELATIONSHIPS.toString();\n             return condition(FiqlParser.EQ, anyObject, (Object[]) moreAnyObjects);\n         }\n \n         @Override\n-        public CompleteCondition notInRelationships(final Long group, final Long... moreRelationships) {\n+        public CompleteCondition notInRelationships(final String group, final String... moreRelationships) {\n             this.result = SpecialAttr.RELATIONSHIPS.toString();\n             return condition(FiqlParser.NEQ, group, (Object[]) moreRelationships);\n         }"},{"sha":"9d320133fc3e2c2508408e013a877e0b73040298","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/search/AnyObjectProperty.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAnyObjectProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAnyObjectProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FAnyObjectProperty.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -22,13 +22,13 @@\n \n public interface AnyObjectProperty extends SyncopeProperty {\n \n-    CompleteCondition inGroups(Long group, Long... moreGroups);\n+    CompleteCondition inGroups(String group, String... moreGroups);\n \n-    CompleteCondition notInGroups(Long group, Long... moreGroups);\n+    CompleteCondition notInGroups(String group, String... moreGroups);\n \n-    CompleteCondition inRelationships(Long anyObject, Long... moreAnyObjects);\n+    CompleteCondition inRelationships(String anyObject, String... moreAnyObjects);\n \n-    CompleteCondition notInRelationships(Long anyObject, Long... moreAnyObjects);\n+    CompleteCondition notInRelationships(String anyObject, String... moreAnyObjects);\n \n     CompleteCondition inRelationshipTypes(String type, String... moreTypes);\n "},{"sha":"4cd5f0d8f7b5cd414b9cbbe0d196980f4a7c5560","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/search/UserFiqlSearchConditionBuilder.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FUserFiqlSearchConditionBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FUserFiqlSearchConditionBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FUserFiqlSearchConditionBuilder.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -38,25 +38,25 @@ public UserProperty is(final String property) {\n         return newBuilderInstance().is(property);\n     }\n \n-    public CompleteCondition inGroups(final Long group, final Long... moreGroups) {\n+    public CompleteCondition inGroups(final String group, final String... moreGroups) {\n         return newBuilderInstance().\n                 is(SpecialAttr.GROUPS.toString()).\n                 inGroups(group, moreGroups);\n     }\n \n-    public CompleteCondition notInGroups(final Long group, final Long... moreGroups) {\n+    public CompleteCondition notInGroups(final String group, final String... moreGroups) {\n         return newBuilderInstance().\n                 is(SpecialAttr.GROUPS.toString()).\n                 notInGroups(group, moreGroups);\n     }\n \n-    public CompleteCondition inRelationships(final Long anyType, final Long... moreAnyTypes) {\n+    public CompleteCondition inRelationships(final String anyType, final String... moreAnyTypes) {\n         return newBuilderInstance().\n                 is(SpecialAttr.RELATIONSHIPS.toString()).\n                 inRelationships(anyType, moreAnyTypes);\n     }\n \n-    public CompleteCondition notInRelationships(final Long anyType, final Long... moreAnyTypes) {\n+    public CompleteCondition notInRelationships(final String anyType, final String... moreAnyTypes) {\n         return newBuilderInstance().\n                 is(SpecialAttr.RELATIONSHIPS.toString()).\n                 notInRelationships(anyType, moreAnyTypes);\n@@ -117,25 +117,25 @@ public UserProperty is(final String property) {\n         }\n \n         @Override\n-        public CompleteCondition inGroups(final Long group, final Long... moreGroups) {\n+        public CompleteCondition inGroups(final String group, final String... moreGroups) {\n             this.result = SpecialAttr.GROUPS.toString();\n             return condition(FiqlParser.EQ, group, (Object[]) moreGroups);\n         }\n \n         @Override\n-        public CompleteCondition notInGroups(final Long group, final Long... moreGroups) {\n+        public CompleteCondition notInGroups(final String group, final String... moreGroups) {\n             this.result = SpecialAttr.GROUPS.toString();\n             return condition(FiqlParser.NEQ, group, (Object[]) moreGroups);\n         }\n \n         @Override\n-        public CompleteCondition inRelationships(final Long anyObject, final Long... moreAnyObjects) {\n+        public CompleteCondition inRelationships(final String anyObject, final String... moreAnyObjects) {\n             this.result = SpecialAttr.RELATIONSHIPS.toString();\n             return condition(FiqlParser.EQ, anyObject, (Object[]) moreAnyObjects);\n         }\n \n         @Override\n-        public CompleteCondition notInRelationships(final Long anyObject, final Long... moreAnyObjects) {\n+        public CompleteCondition notInRelationships(final String anyObject, final String... moreAnyObjects) {\n             this.result = SpecialAttr.RELATIONSHIPS.toString();\n             return condition(FiqlParser.NEQ, anyObject, (Object[]) moreAnyObjects);\n         }"},{"sha":"4c717f9a2be43b22b25fe6fdb1ea4ca01aa21966","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/search/UserProperty.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FUserProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FUserProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fsearch%2FUserProperty.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -22,13 +22,13 @@\n \n public interface UserProperty extends SyncopeProperty {\n \n-    CompleteCondition inGroups(Long group, Long... moreGroups);\n+    CompleteCondition inGroups(String group, String... moreGroups);\n \n-    CompleteCondition notInGroups(Long group, Long... moreGroups);\n+    CompleteCondition notInGroups(String group, String... moreGroups);\n \n-    CompleteCondition inRelationships(Long anyObject, Long... moreAnyObjects);\n+    CompleteCondition inRelationships(String anyObject, String... moreAnyObjects);\n \n-    CompleteCondition notInRelationships(Long anyObject, Long... moreAnyObjects);\n+    CompleteCondition notInRelationships(String anyObject, String... moreAnyObjects);\n \n     CompleteCondition inRelationshipTypes(String type, String... moreTypes);\n "},{"sha":"2917c98ce55d582f5ee96c3b668e549297996dc9","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractSchemaTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractSchemaTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -29,7 +29,7 @@\n @XmlType\n @XmlSeeAlso({ PlainSchemaTO.class, DerSchemaTO.class, VirSchemaTO.class })\n @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n-public abstract class AbstractSchemaTO extends AbstractBaseBean implements EntityTO<String> {\n+public abstract class AbstractSchemaTO extends AbstractBaseBean implements EntityTO {\n \n     private static final long serialVersionUID = 4088388951694301759L;\n "},{"sha":"65603f722ac36c2651c1e18a8b358a6ce709769a","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractTaskTO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractTaskTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -34,24 +34,24 @@\n @XmlType\n @XmlSeeAlso({ PropagationTaskTO.class, SchedTaskTO.class, NotificationTaskTO.class })\n @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n-public abstract class AbstractTaskTO extends AbstractStartEndBean implements EntityTO<Long> {\n+public abstract class AbstractTaskTO extends AbstractStartEndBean implements EntityTO {\n \n     private static final long serialVersionUID = 386450127003321197L;\n \n-    private Long key;\n+    private String key;\n \n     private String latestExecStatus;\n \n     private final List<ExecTO> executions = new ArrayList<>();\n \n     @Override\n-    public Long getKey() {\n+    public String getKey() {\n         return key;\n     }\n \n     @PathParam(\"key\")\n     @Override\n-    public void setKey(final Long key) {\n+    public void setKey(final String key) {\n         this.key = key;\n     }\n "},{"sha":"f652d76020f3c0933d39ac5eb828254b2559dcf3","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AnyObjectTO.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyObjectTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyObjectTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyObjectTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -41,7 +41,7 @@ public class AnyObjectTO extends AnyTO implements RelatableTO, GroupableTO {\n \n     private final List<MembershipTO> memberships = new ArrayList<>();\n \n-    private final List<Long> dynGroups = new ArrayList<>();\n+    private final List<String> dynGroups = new ArrayList<>();\n \n     @XmlElementWrapper(name = \"relationships\")\n     @XmlElement(name = \"relationship\")\n@@ -53,8 +53,8 @@ public List<RelationshipTO> getRelationships() {\n \n     @JsonIgnore\n     @Override\n-    public Map<Pair<String, Long>, RelationshipTO> getRelationshipMap() {\n-        Map<Pair<String, Long>, RelationshipTO> result = new HashMap<>(getRelationships().size());\n+    public Map<Pair<String, String>, RelationshipTO> getRelationshipMap() {\n+        Map<Pair<String, String>, RelationshipTO> result = new HashMap<>(getRelationships().size());\n         for (RelationshipTO relationship : getRelationships()) {\n             result.put(Pair.of(relationship.getType(), relationship.getRightKey()), relationship);\n         }\n@@ -73,8 +73,8 @@ public List<MembershipTO> getMemberships() {\n \n     @JsonIgnore\n     @Override\n-    public Map<Long, MembershipTO> getMembershipMap() {\n-        Map<Long, MembershipTO> result = new HashMap<>(getMemberships().size());\n+    public Map<String, MembershipTO> getMembershipMap() {\n+        Map<String, MembershipTO> result = new HashMap<>(getMemberships().size());\n         for (MembershipTO membership : getMemberships()) {\n             result.put(membership.getRightKey(), membership);\n         }\n@@ -87,7 +87,7 @@ public Map<Long, MembershipTO> getMembershipMap() {\n     @XmlElement(name = \"role\")\n     @JsonProperty(\"dynGroups\")\n     @Override\n-    public List<Long> getDynGroups() {\n+    public List<String> getDynGroups() {\n         return dynGroups;\n     }\n }"},{"sha":"4651835e567682abe5d2808a6e27c8638fd8c2b5","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -38,11 +38,11 @@\n @XmlType\n @XmlSeeAlso({ UserTO.class, GroupTO.class, AnyObjectTO.class })\n @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY, property = \"@class\")\n-public abstract class AnyTO extends ConnObjectTO implements EntityTO<Long> {\n+public abstract class AnyTO extends ConnObjectTO implements EntityTO {\n \n     private static final long serialVersionUID = -754311920679872084L;\n \n-    private Long key;\n+    private String key;\n \n     private String type;\n \n@@ -59,12 +59,12 @@ public abstract class AnyTO extends ConnObjectTO implements EntityTO<Long> {\n     private final Set<String> resources = new HashSet<>();\n \n     @Override\n-    public Long getKey() {\n+    public String getKey() {\n         return key;\n     }\n \n     @Override\n-    public void setKey(final Long key) {\n+    public void setKey(final String key) {\n         this.key = key;\n     }\n "},{"sha":"d68a7fed0b658d9d0cd4e03edf2d1703f13e93d2","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTypeClassTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeClassTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeClassTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeClassTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -30,7 +30,7 @@\n \n @XmlRootElement(name = \"anyTypeClass\")\n @XmlType\n-public class AnyTypeClassTO extends AbstractBaseBean implements EntityTO<String> {\n+public class AnyTypeClassTO extends AbstractBaseBean implements EntityTO {\n \n     private static final long serialVersionUID = -591757688607551266L;\n "},{"sha":"07827cb4d41d7f595b6a855dd3f77273a85b9f7f","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTypeTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -31,7 +31,7 @@\n \n @XmlRootElement(name = \"anyType\")\n @XmlType\n-public class AnyTypeTO extends AbstractBaseBean implements EntityTO<String> {\n+public class AnyTypeTO extends AbstractBaseBean implements EntityTO {\n \n     private static final long serialVersionUID = 6771657557616874373L;\n "},{"sha":"4f9135521da167e0ee0bed34883372abc54b91c2","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ConnInstanceTO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnInstanceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnInstanceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnInstanceTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -37,11 +37,11 @@\n \n @XmlRootElement(name = \"connInstance\")\n @XmlType\n-public class ConnInstanceTO extends AbstractBaseBean implements EntityTO<Long> {\n+public class ConnInstanceTO extends AbstractBaseBean implements EntityTO {\n \n     private static final long serialVersionUID = 2707778645445168671L;\n \n-    private Long key;\n+    private String key;\n \n     private String location;\n \n@@ -62,13 +62,13 @@ public class ConnInstanceTO extends AbstractBaseBean implements EntityTO<Long> {\n     private ConnPoolConfTO poolConf;\n \n     @Override\n-    public Long getKey() {\n+    public String getKey() {\n         return key;\n     }\n \n     @PathParam(\"key\")\n     @Override\n-    public void setKey(final Long key) {\n+    public void setKey(final String key) {\n         this.key = key;\n     }\n "},{"sha":"8994cf83f01b753480112ed8d8eddb7d40873af3","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/DomainTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDomainTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDomainTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDomainTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -25,7 +25,7 @@\n \n @XmlRootElement(name = \"domain\")\n @XmlType\n-public class DomainTO extends AbstractBaseBean implements EntityTO<String> {\n+public class DomainTO extends AbstractBaseBean implements EntityTO {\n \n     private static final long serialVersionUID = -7938075259986084934L;\n "},{"sha":"c07749ff6ad6d16a59bf0759a69679e1fba46e26","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/EntityTO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FEntityTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FEntityTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FEntityTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -20,9 +20,9 @@\n \n import java.io.Serializable;\n \n-public interface EntityTO<KEY> extends Serializable {\n+public interface EntityTO extends Serializable {\n \n-    KEY getKey();\n+    String getKey();\n \n-    void setKey(KEY key);\n+    void setKey(String key);\n }"},{"sha":"323658ef411abdf7b03da98f4d43e8e16c10ebea","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ExecTO.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FExecTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FExecTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FExecTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -24,15 +24,15 @@\n \n @XmlRootElement(name = \"exec\")\n @XmlType()\n-public class ExecTO extends AbstractStartEndBean implements EntityTO<Long> {\n+public class ExecTO extends AbstractStartEndBean implements EntityTO {\n \n     private static final long serialVersionUID = -4621191979198357081L;\n \n-    private Long key;\n+    private String key;\n \n     private JobType jobType;\n \n-    private Long refKey;\n+    private String refKey;\n \n     private String refDesc;\n \n@@ -41,12 +41,12 @@ public class ExecTO extends AbstractStartEndBean implements EntityTO<Long> {\n     private String message;\n \n     @Override\n-    public Long getKey() {\n+    public String getKey() {\n         return key;\n     }\n \n     @Override\n-    public void setKey(final Long key) {\n+    public void setKey(final String key) {\n         this.key = key;\n     }\n \n@@ -58,11 +58,11 @@ public void setJobType(final JobType jobType) {\n         this.jobType = jobType;\n     }\n \n-    public Long getRefKey() {\n+    public String getRefKey() {\n         return refKey;\n     }\n \n-    public void setRefKey(final Long refKey) {\n+    public void setRefKey(final String refKey) {\n         this.refKey = refKey;\n     }\n "},{"sha":"0ae088553997ed92caaa55e265b72e49626a8627","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/GroupTO.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -42,9 +42,9 @@ public class GroupTO extends AnyTO {\n \n     private String name;\n \n-    private Long userOwner;\n+    private String userOwner;\n \n-    private Long groupOwner;\n+    private String groupOwner;\n \n     private String udynMembershipCond;\n \n@@ -72,19 +72,19 @@ public void setName(final String name) {\n         this.name = name;\n     }\n \n-    public Long getUserOwner() {\n+    public String getUserOwner() {\n         return userOwner;\n     }\n \n-    public void setUserOwner(final Long userOwner) {\n+    public void setUserOwner(final String userOwner) {\n         this.userOwner = userOwner;\n     }\n \n-    public Long getGroupOwner() {\n+    public String getGroupOwner() {\n         return groupOwner;\n     }\n \n-    public void setGroupOwner(final Long groupOwner) {\n+    public void setGroupOwner(final String groupOwner) {\n         this.groupOwner = groupOwner;\n     }\n "},{"sha":"7b6a824427921592b225bf0a8d9150b09dc2ab3e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/GroupableTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupableTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupableTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupableTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -23,9 +23,9 @@\n \n public interface GroupableTO {\n \n-    Map<Long, MembershipTO> getMembershipMap();\n+    Map<String, MembershipTO> getMembershipMap();\n \n     List<MembershipTO> getMemberships();\n \n-    List<Long> getDynGroups();\n+    List<String> getDynGroups();\n }"},{"sha":"69a339cbdee61f578baa75cabd114968e8ec2fbf","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/JobTO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FJobTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FJobTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FJobTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -32,7 +32,7 @@ public class JobTO extends AbstractBaseBean {\n \n     private JobType type;\n \n-    private Long refKey;\n+    private String refKey;\n \n     private String refDesc;\n \n@@ -52,11 +52,11 @@ public void setType(final JobType type) {\n         this.type = type;\n     }\n \n-    public Long getRefKey() {\n+    public String getRefKey() {\n         return refKey;\n     }\n \n-    public void setRefKey(final Long refKey) {\n+    public void setRefKey(final String refKey) {\n         this.refKey = refKey;\n     }\n "},{"sha":"bf258671e69671c7774141429dab15eeccb5d1bd","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/MailTemplateTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMailTemplateTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMailTemplateTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMailTemplateTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -25,7 +25,7 @@\n \n @XmlRootElement(name = \"mailTemplate\")\n @XmlType\n-public class MailTemplateTO extends AbstractBaseBean implements EntityTO<String> {\n+public class MailTemplateTO extends AbstractBaseBean implements EntityTO {\n \n     private static final long serialVersionUID = 8389755049666062735L;\n "},{"sha":"84ba6fb5b8b8cdacb1c85c3e547361a6da2dcfce","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/MappingItemTO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingItemTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingItemTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingItemTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -31,11 +31,11 @@\n \n @XmlRootElement(name = \"mappingItem\")\n @XmlType\n-public class MappingItemTO extends AbstractBaseBean implements EntityTO<Long> {\n+public class MappingItemTO extends AbstractBaseBean implements EntityTO {\n \n     private static final long serialVersionUID = 2983498836767176862L;\n \n-    private Long key;\n+    private String key;\n \n     /**\n      * Attribute schema to be mapped. Consider that we can associate tha same attribute schema more than once, with\n@@ -92,12 +92,12 @@ public void setExtAttrName(final String extAttrName) {\n     }\n \n     @Override\n-    public Long getKey() {\n+    public String getKey() {\n         return key;\n     }\n \n     @Override\n-    public void setKey(final Long key) {\n+    public void setKey(final String key) {\n         this.key = key;\n     }\n "},{"sha":"6ded46b52e4e3b5b67bf4f89285b9790d67e2062","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/MembershipTO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -32,18 +32,18 @@ public static class Builder {\n \n         private final MembershipTO instance = new MembershipTO();\n \n-        public Builder left(final String leftType, final long leftKey) {\n+        public Builder left(final String leftType, final String leftKey) {\n             instance.setLeftType(leftType);\n             instance.setLeftKey(leftKey);\n             return this;\n         }\n \n-        public Builder group(final long groupKey) {\n+        public Builder group(final String groupKey) {\n             instance.setRightKey(groupKey);\n             return this;\n         }\n \n-        public Builder group(final long groupKey, final String groupName) {\n+        public Builder group(final String groupKey, final String groupName) {\n             instance.setRightKey(groupKey);\n             instance.setGroupName(groupName);\n             return this;"},{"sha":"6f4a73c2142593f407fa5f5ccd9dc5c47380f014","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/NotificationTO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -37,11 +37,11 @@\n \n @XmlRootElement(name = \"notification\")\n @XmlType\n-public class NotificationTO extends AbstractBaseBean implements EntityTO<Long> {\n+public class NotificationTO extends AbstractBaseBean implements EntityTO {\n \n     private static final long serialVersionUID = -6145117115632592612L;\n \n-    private Long key;\n+    private String key;\n \n     private final List<String> events = new ArrayList<>();\n \n@@ -91,13 +91,13 @@ public List<String> getStaticRecipients() {\n     }\n \n     @Override\n-    public Long getKey() {\n+    public String getKey() {\n         return key;\n     }\n \n     @PathParam(\"key\")\n     @Override\n-    public void setKey(final Long key) {\n+    public void setKey(final String key) {\n         this.key = key;\n     }\n "},{"sha":"ce74be2d1d32ad6f7515fea2b25f35701b4e8ef9","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/NotificationTaskTO.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -21,7 +21,6 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import java.util.HashSet;\n import java.util.Set;\n-\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n@@ -35,11 +34,11 @@ public class NotificationTaskTO extends AbstractTaskTO {\n \n     private static final long serialVersionUID = 371671242591093846L;\n \n-    private Long notification;\n+    private String notification;\n \n     private AnyTypeKind anyTypeKind;\n \n-    private Long anyKey;\n+    private String anyKey;\n \n     private final Set<String> recipients = new HashSet<>();\n \n@@ -55,11 +54,11 @@ public class NotificationTaskTO extends AbstractTaskTO {\n \n     private TraceLevel traceLevel;\n \n-    public Long getNotification() {\n+    public String getNotification() {\n         return notification;\n     }\n \n-    public void setNotification(final Long notification) {\n+    public void setNotification(final String notification) {\n         this.notification = notification;\n     }\n \n@@ -71,11 +70,11 @@ public void setAnyTypeKind(final AnyTypeKind anyTypeKind) {\n         this.anyTypeKind = anyTypeKind;\n     }\n \n-    public Long getAnyKey() {\n+    public String getAnyKey() {\n         return anyKey;\n     }\n \n-    public void setAnyKey(final Long anyKey) {\n+    public void setAnyKey(final String anyKey) {\n         this.anyKey = anyKey;\n     }\n "},{"sha":"b7dae9c8d58084bde83c223bc6a13229129a92ab","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ProvisionTO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisionTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisionTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisionTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -29,11 +29,11 @@\n \n @XmlRootElement(name = \"provision\")\n @XmlType\n-public class ProvisionTO extends AbstractBaseBean implements EntityTO<Long> {\n+public class ProvisionTO extends AbstractBaseBean implements EntityTO {\n \n     private static final long serialVersionUID = 8298910216218007927L;\n \n-    private Long key;\n+    private String key;\n \n     private String anyType;\n \n@@ -48,12 +48,12 @@ public class ProvisionTO extends AbstractBaseBean implements EntityTO<Long> {\n     private final List<String> virSchemas = new ArrayList<>();\n \n     @Override\n-    public Long getKey() {\n+    public String getKey() {\n         return key;\n     }\n \n     @Override\n-    public void setKey(final Long key) {\n+    public void setKey(final String key) {\n         this.key = key;\n     }\n "},{"sha":"c685b4a8b052015315398a13278dd295c2a85718","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/RealmTO.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -35,21 +35,21 @@\n \n @XmlRootElement(name = \"realm\")\n @XmlType\n-public class RealmTO extends AbstractBaseBean implements EntityTO<Long> {\n+public class RealmTO extends AbstractBaseBean implements EntityTO {\n \n     private static final long serialVersionUID = 516330662956254391L;\n \n-    private Long key;\n+    private String key;\n \n     private String name;\n \n-    private long parent;\n+    private String parent;\n \n     private String fullPath;\n \n-    private Long accountPolicy;\n+    private String accountPolicy;\n \n-    private Long passwordPolicy;\n+    private String passwordPolicy;\n \n     private final Set<String> actionsClassNames = new HashSet<>();\n \n@@ -58,12 +58,12 @@ public class RealmTO extends AbstractBaseBean implements EntityTO<Long> {\n     private final Map<String, AnyTO> templates = new HashMap<>();\n \n     @Override\n-    public Long getKey() {\n+    public String getKey() {\n         return key;\n     }\n \n     @Override\n-    public void setKey(final Long key) {\n+    public void setKey(final String key) {\n         this.key = key;\n     }\n \n@@ -75,11 +75,11 @@ public void setName(final String name) {\n         this.name = name;\n     }\n \n-    public long getParent() {\n+    public String getParent() {\n         return parent;\n     }\n \n-    public void setParent(final long parent) {\n+    public void setParent(final String parent) {\n         this.parent = parent;\n     }\n \n@@ -92,19 +92,19 @@ public void setFullPath(final String fullPath) {\n         this.fullPath = fullPath;\n     }\n \n-    public Long getAccountPolicy() {\n+    public String getAccountPolicy() {\n         return accountPolicy;\n     }\n \n-    public void setAccountPolicy(final Long accountPolicy) {\n+    public void setAccountPolicy(final String accountPolicy) {\n         this.accountPolicy = accountPolicy;\n     }\n \n-    public Long getPasswordPolicy() {\n+    public String getPasswordPolicy() {\n         return passwordPolicy;\n     }\n \n-    public void setPasswordPolicy(final Long passwordPolicy) {\n+    public void setPasswordPolicy(final String passwordPolicy) {\n         this.passwordPolicy = passwordPolicy;\n     }\n "},{"sha":"1914c13e9265b13efdfd88fad8748625ca69ad8b","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/RelatableTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelatableTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelatableTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelatableTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -24,7 +24,7 @@\n \n public interface RelatableTO {\n \n-    Map<Pair<String, Long>, RelationshipTO> getRelationshipMap();\n+    Map<Pair<String, String>, RelationshipTO> getRelationshipMap();\n \n     List<RelationshipTO> getRelationships();\n }"},{"sha":"29326c254500623892abb9b4d15bfd1fd2fc905e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/RelationshipTO.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -37,13 +37,13 @@ public Builder type(final String type) {\n             return this;\n         }\n \n-        public Builder left(final String leftType, final long leftKey) {\n+        public Builder left(final String leftType, final String leftKey) {\n             instance.setLeftType(leftType);\n             instance.setLeftKey(leftKey);\n             return this;\n         }\n \n-        public Builder right(final String rightType, final long rightKey) {\n+        public Builder right(final String rightType, final String rightKey) {\n             instance.setRightType(rightType);\n             instance.setRightKey(rightKey);\n             return this;\n@@ -58,11 +58,11 @@ public RelationshipTO build() {\n \n     private String leftType;\n \n-    private long leftKey;\n+    private String leftKey;\n \n     private String rightType;\n \n-    private long rightKey;\n+    private String rightKey;\n \n     public String getType() {\n         return type;\n@@ -80,11 +80,11 @@ public void setLeftType(final String leftType) {\n         this.leftType = leftType;\n     }\n \n-    public long getLeftKey() {\n+    public String getLeftKey() {\n         return leftKey;\n     }\n \n-    public void setLeftKey(final long leftKey) {\n+    public void setLeftKey(final String leftKey) {\n         this.leftKey = leftKey;\n     }\n \n@@ -96,11 +96,11 @@ public void setRightType(final String rightType) {\n         this.rightType = rightType;\n     }\n \n-    public long getRightKey() {\n+    public String getRightKey() {\n         return rightKey;\n     }\n \n-    public void setRightKey(final long rightKey) {\n+    public void setRightKey(final String rightKey) {\n         this.rightKey = rightKey;\n     }\n "},{"sha":"d5eba4060e48648d5126bd56e0e89a6074205b8e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/RelationshipTypeTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTypeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTypeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTypeTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -25,7 +25,7 @@\n \n @XmlRootElement(name = \"relationshipType\")\n @XmlType\n-public class RelationshipTypeTO extends AbstractBaseBean implements EntityTO<String> {\n+public class RelationshipTypeTO extends AbstractBaseBean implements EntityTO {\n \n     private static final long serialVersionUID = -1884088415277925817L;\n "},{"sha":"73b16f765c0c7d0c2076db416a8f3de11a1d3353","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ReportTO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -31,11 +31,11 @@\n \n @XmlRootElement(name = \"report\")\n @XmlType\n-public class ReportTO extends AbstractStartEndBean implements EntityTO<Long> {\n+public class ReportTO extends AbstractStartEndBean implements EntityTO {\n \n     private static final long serialVersionUID = 5274568072084814410L;\n \n-    private Long key;\n+    private String key;\n \n     private String name;\n \n@@ -56,13 +56,13 @@ public class ReportTO extends AbstractStartEndBean implements EntityTO<Long> {\n     private String template;\n \n     @Override\n-    public Long getKey() {\n+    public String getKey() {\n         return key;\n     }\n \n     @PathParam(\"key\")\n     @Override\n-    public void setKey(final Long key) {\n+    public void setKey(final String key) {\n         this.key = key;\n     }\n "},{"sha":"1731d4c5d7c77a051136da65efed308692dc0092","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ReportTemplateTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTemplateTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTemplateTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTemplateTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -25,7 +25,7 @@\n \n @XmlRootElement(name = \"reportTemplate\")\n @XmlType\n-public class ReportTemplateTO extends AbstractBaseBean implements EntityTO<String> {\n+public class ReportTemplateTO extends AbstractBaseBean implements EntityTO {\n \n     private static final long serialVersionUID = 7776679004906244896L;\n "},{"sha":"c132a7c81feb4a2c6b1dc52c1079260758494095","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ResourceTO.java","status":"modified","additions":14,"deletions":13,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -32,13 +32,14 @@\n import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.Predicate;\n+import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.types.ConnectorCapability;\n import org.apache.syncope.common.lib.types.TraceLevel;\n \n @XmlRootElement(name = \"resource\")\n @XmlType\n-public class ResourceTO extends AbstractAnnotatedBean implements EntityTO<String> {\n+public class ResourceTO extends AbstractBaseBean implements EntityTO {\n \n     private static final long serialVersionUID = -9193551354041698963L;\n \n@@ -47,7 +48,7 @@ public class ResourceTO extends AbstractAnnotatedBean implements EntityTO<String\n     /**\n      * The resource type is identified by the associated connector.\n      */\n-    private Long connector;\n+    private String connector;\n \n     /**\n      * Convenience information: display name for the connector id.\n@@ -70,11 +71,11 @@ public class ResourceTO extends AbstractAnnotatedBean implements EntityTO<String\n \n     private TraceLevel pullTraceLevel = TraceLevel.ALL;\n \n-    private Long passwordPolicy;\n+    private String passwordPolicy;\n \n-    private Long accountPolicy;\n+    private String accountPolicy;\n \n-    private Long pullPolicy;\n+    private String pullPolicy;\n \n     private final Set<ConnConfProperty> confOverride = new HashSet<>();\n \n@@ -103,11 +104,11 @@ public void setEnforceMandatoryCondition(final boolean enforceMandatoryCondition\n         this.enforceMandatoryCondition = enforceMandatoryCondition;\n     }\n \n-    public Long getConnector() {\n+    public String getConnector() {\n         return connector;\n     }\n \n-    public void setConnector(final Long connector) {\n+    public void setConnector(final String connector) {\n         this.connector = connector;\n     }\n \n@@ -159,27 +160,27 @@ public void setUpdateTraceLevel(final TraceLevel updateTraceLevel) {\n         this.updateTraceLevel = updateTraceLevel;\n     }\n \n-    public Long getPasswordPolicy() {\n+    public String getPasswordPolicy() {\n         return passwordPolicy;\n     }\n \n-    public void setPasswordPolicy(final Long passwordPolicy) {\n+    public void setPasswordPolicy(final String passwordPolicy) {\n         this.passwordPolicy = passwordPolicy;\n     }\n \n-    public Long getAccountPolicy() {\n+    public String getAccountPolicy() {\n         return accountPolicy;\n     }\n \n-    public void setAccountPolicy(final Long accountPolicy) {\n+    public void setAccountPolicy(final String accountPolicy) {\n         this.accountPolicy = accountPolicy;\n     }\n \n-    public Long getPullPolicy() {\n+    public String getPullPolicy() {\n         return pullPolicy;\n     }\n \n-    public void setPullPolicy(final Long pullPolicy) {\n+    public void setPullPolicy(final String pullPolicy) {\n         this.pullPolicy = pullPolicy;\n     }\n "},{"sha":"cbb8784df57d1a2b266abb4dc1c26cece94bd494","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/RoleTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRoleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRoleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRoleTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -32,7 +32,7 @@\n \n @XmlRootElement(name = \"role\")\n @XmlType\n-public class RoleTO extends AbstractBaseBean implements EntityTO<String> {\n+public class RoleTO extends AbstractBaseBean implements EntityTO {\n \n     private static final long serialVersionUID = 4560822655754800031L;\n "},{"sha":"bf3d221617d9c8a0e43b546788f11fa47683e18c","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/SecurityQuestionTO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSecurityQuestionTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSecurityQuestionTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSecurityQuestionTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -25,22 +25,22 @@\n \n @XmlRootElement(name = \"securityQuestion\")\n @XmlType\n-public class SecurityQuestionTO extends AbstractBaseBean implements EntityTO<Long> {\n+public class SecurityQuestionTO extends AbstractBaseBean implements EntityTO {\n \n     private static final long serialVersionUID = 5969810939993556530L;\n \n-    private Long key;\n+    private String key;\n \n     private String content;\n \n     @Override\n-    public Long getKey() {\n+    public String getKey() {\n         return key;\n     }\n \n     @PathParam(\"key\")\n     @Override\n-    public void setKey(final Long key) {\n+    public void setKey(final String key) {\n         this.key = key;\n     }\n "},{"sha":"77fd1c9fcb2fb669adeb55bb60f24536f243c064","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/UserTO.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -60,7 +60,7 @@ public class UserTO extends AnyTO implements RelatableTO, GroupableTO {\n \n     private Integer failedLogins;\n \n-    private Long securityQuestion;\n+    private String securityQuestion;\n \n     private String securityAnswer;\n \n@@ -70,7 +70,7 @@ public class UserTO extends AnyTO implements RelatableTO, GroupableTO {\n \n     private final List<MembershipTO> memberships = new ArrayList<>();\n \n-    private final List<Long> dynGroups = new ArrayList<>();\n+    private final List<String> dynGroups = new ArrayList<>();\n \n     @Override\n     public String getType() {\n@@ -156,11 +156,11 @@ public void setLastLoginDate(final Date lastLoginDate) {\n         this.lastLoginDate = lastLoginDate;\n     }\n \n-    public Long getSecurityQuestion() {\n+    public String getSecurityQuestion() {\n         return securityQuestion;\n     }\n \n-    public void setSecurityQuestion(final Long securityQuestion) {\n+    public void setSecurityQuestion(final String securityQuestion) {\n         this.securityQuestion = securityQuestion;\n     }\n \n@@ -190,8 +190,8 @@ public List<RelationshipTO> getRelationships() {\n \n     @JsonIgnore\n     @Override\n-    public Map<Pair<String, Long>, RelationshipTO> getRelationshipMap() {\n-        Map<Pair<String, Long>, RelationshipTO> result = new HashMap<>(getRelationships().size());\n+    public Map<Pair<String, String>, RelationshipTO> getRelationshipMap() {\n+        Map<Pair<String, String>, RelationshipTO> result = new HashMap<>(getRelationships().size());\n         for (RelationshipTO relationship : getRelationships()) {\n             result.put(Pair.of(relationship.getType(), relationship.getRightKey()), relationship);\n         }\n@@ -208,8 +208,8 @@ public List<MembershipTO> getMemberships() {\n \n     @JsonIgnore\n     @Override\n-    public Map<Long, MembershipTO> getMembershipMap() {\n-        Map<Long, MembershipTO> result = new HashMap<>(getMemberships().size());\n+    public Map<String, MembershipTO> getMembershipMap() {\n+        Map<String, MembershipTO> result = new HashMap<>(getMemberships().size());\n         for (MembershipTO membership : getMemberships()) {\n             result.put(membership.getRightKey(), membership);\n         }\n@@ -222,7 +222,7 @@ public Map<Long, MembershipTO> getMembershipMap() {\n     @XmlElement(name = \"role\")\n     @JsonProperty(\"dynGroups\")\n     @Override\n-    public List<Long> getDynGroups() {\n+    public List<String> getDynGroups() {\n         return dynGroups;\n     }\n "},{"sha":"2d0710a9925d9445ad05d91059554afcd182a73f","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/VirSchemaTO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FVirSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FVirSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FVirSchemaTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -29,7 +29,7 @@ public class VirSchemaTO extends AbstractSchemaTO {\n \n     private String resource;\n \n-    private long provision;\n+    private String provision;\n \n     private String extAttrName;\n \n@@ -49,11 +49,11 @@ public void setResource(final String resource) {\n         this.resource = resource;\n     }\n \n-    public long getProvision() {\n+    public String getProvision() {\n         return provision;\n     }\n \n-    public void setProvision(final long provision) {\n+    public void setProvision(final String provision) {\n         this.provision = provision;\n     }\n "},{"sha":"97be8311e0e09534648fb5e24e38986c51495e46","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/WorkflowFormTO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowFormTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowFormTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowFormTO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -38,7 +38,7 @@ public class WorkflowFormTO extends AbstractBaseBean {\n \n     private static final long serialVersionUID = -7044543391316529128L;\n \n-    private long userKey;\n+    private String userKey;\n \n     private String taskId;\n \n@@ -54,11 +54,11 @@ public class WorkflowFormTO extends AbstractBaseBean {\n \n     private final List<WorkflowFormPropertyTO> properties = new ArrayList<>();\n \n-    public long getUserKey() {\n+    public String getUserKey() {\n         return userKey;\n     }\n \n-    public void setUserKey(final long userKey) {\n+    public void setUserKey(final String userKey) {\n         this.userKey = userKey;\n     }\n "},{"sha":"556a25fb0b597bcd4b4f2f336384150628e336b4","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/ClientExceptionType.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FClientExceptionType.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -30,6 +30,7 @@ public enum ClientExceptionType {\n     DataIntegrityViolation(Response.Status.CONFLICT),\n     EntityExists(Response.Status.CONFLICT),\n     GenericPersistence(Response.Status.BAD_REQUEST),\n+    HasChildren(Response.Status.BAD_REQUEST),\n     InvalidSecurityAnswer(Response.Status.BAD_REQUEST),\n     InvalidEntity(Response.Status.BAD_REQUEST),\n     InvalidLogger(Response.Status.BAD_REQUEST),"},{"sha":"a0ef7462fe7726615791d0030dfccd6f323dda63","filename":"common/lib/src/test/java/org/apache/syncope/common/lib/JSONTest.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJSONTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJSONTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJSONTest.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -24,6 +24,7 @@\n import com.fasterxml.jackson.databind.ObjectMapper;\n import java.io.IOException;\n import java.io.StringWriter;\n+import java.util.UUID;\n import org.apache.syncope.common.lib.patch.PasswordPatch;\n import org.apache.syncope.common.lib.patch.StringPatchItem;\n import org.apache.syncope.common.lib.patch.StringReplacePatchItem;\n@@ -70,7 +71,7 @@ public void reportletConfImplementations() throws IOException {\n     @Test\n     public void patch() throws IOException {\n         UserPatch patch = new UserPatch();\n-        patch.setKey(12L);\n+        patch.setKey(UUID.randomUUID().toString());\n         patch.setUsername(new StringReplacePatchItem.Builder().value(\"newusername\").build());\n         assertNotNull(patch.getUsername().getValue());\n         patch.setPassword(new PasswordPatch.Builder()."},{"sha":"9312543906900e34225888cf00e39a27bc1702ff","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/RESTHeaders.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FRESTHeaders.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FRESTHeaders.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FRESTHeaders.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -25,10 +25,6 @@ public final class RESTHeaders {\n \n     public static final String DOMAIN = \"X-Syncope-Domain\";\n \n-    public static final String USER_KEY = \"X-Syncope-User-Key\";\n-\n-    public static final String USERNAME = \"X-Syncope-Username\";\n-\n     public static final String OWNED_ENTITLEMENTS = \"X-Syncope-Entitlements\";\n \n     public static final String RESOURCE_KEY = \"X-Syncope-Key\";"},{"sha":"73d0bb3868dfaefa4ecc3bd56a8d945cdd2fde9f","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/AbstractQuery.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAbstractQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAbstractQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAbstractQuery.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -92,11 +92,11 @@ public void setSize(final Integer size) {\n         this.size = size;\n     }\n \n-    @QueryParam(JAXRSService.PARAM_ORDERBY)\n     public String getOrderBy() {\n         return orderBy;\n     }\n \n+    @QueryParam(JAXRSService.PARAM_ORDERBY)\n     public void setOrderBy(final String orderBy) {\n         this.orderBy = orderBy;\n     }"},{"sha":"10e36bc7f9c2542aefe7a17d6806f2e118cf3747","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/BulkExecDeleteQuery.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FBulkExecDeleteQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FBulkExecDeleteQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FBulkExecDeleteQuery.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -32,7 +32,7 @@ public static class Builder {\n \n         private final BulkExecDeleteQuery instance = new BulkExecDeleteQuery();\n \n-        public Builder key(final long key) {\n+        public Builder key(final String key) {\n             instance.setKey(key);\n             return this;\n         }\n@@ -62,7 +62,7 @@ public BulkExecDeleteQuery build() {\n         }\n     }\n \n-    private Long key;\n+    private String key;\n \n     private Date startedBefore;\n \n@@ -72,13 +72,13 @@ public BulkExecDeleteQuery build() {\n \n     private Date endedAfter;\n \n-    public Long getKey() {\n+    public String getKey() {\n         return key;\n     }\n \n     @NotNull\n     @PathParam(\"key\")\n-    public void setKey(final Long key) {\n+    public void setKey(final String key) {\n         this.key = key;\n     }\n "},{"sha":"1b1f5caed699aeee9ee0e18ebb5690b468d99088","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/ExecuteQuery.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FExecuteQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FExecuteQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FExecuteQuery.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -33,7 +33,7 @@ public static class Builder {\n \n         private final ExecuteQuery instance = new ExecuteQuery();\n \n-        public Builder key(final long key) {\n+        public Builder key(final String key) {\n             instance.setKey(key);\n             return this;\n         }\n@@ -53,19 +53,19 @@ public ExecuteQuery build() {\n         }\n     }\n \n-    private Long key;\n+    private String key;\n \n     private Date startAt;\n \n     private Boolean dryRun;\n \n-    public Long getKey() {\n+    public String getKey() {\n         return key;\n     }\n \n     @NotNull\n     @PathParam(\"key\")\n-    public void setKey(final Long key) {\n+    public void setKey(final String key) {\n         this.key = key;\n     }\n "},{"sha":"f7a96929d4481a940a640df4a397bcb63dccb17f","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/TaskExecQuery.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FTaskExecQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FTaskExecQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FTaskExecQuery.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -32,21 +32,21 @@ protected TaskExecQuery newInstance() {\n             return new TaskExecQuery();\n         }\n \n-        public Builder key(final Long key) {\n+        public Builder key(final String key) {\n             getInstance().setKey(key);\n             return this;\n         }\n     }\n \n-    private Long key;\n+    private String key;\n \n-    public Long getKey() {\n+    public String getKey() {\n         return key;\n     }\n \n     @NotNull\n     @PathParam(\"key\")\n-    public void setKey(final Long key) {\n+    public void setKey(final String key) {\n         this.key = key;\n     }\n "},{"sha":"c869a15bcff6fbf27b80bd3b5a36a0d03686d060","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/TaskQuery.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FTaskQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FTaskQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FTaskQuery.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -56,7 +56,7 @@ public Builder resource(final String resource) {\n             }\n         }\n \n-        public Builder notification(final Long notification) {\n+        public Builder notification(final String notification) {\n             switch (getInstance().getType()) {\n                 case NOTIFICATION:\n                     getInstance().setNotification(notification);\n@@ -79,7 +79,7 @@ public Builder anyTypeKind(final AnyTypeKind anyTypeKind) {\n             }\n         }\n \n-        public Builder anyTypeKey(final Long anyTypeKey) {\n+        public Builder anyTypeKey(final String anyTypeKey) {\n             switch (getInstance().getType()) {\n                 case PROPAGATION:\n                 case NOTIFICATION:\n@@ -110,11 +110,11 @@ public TaskQuery build() {\n \n     private String resource;\n \n-    private Long notification;\n+    private String notification;\n \n     private AnyTypeKind anyTypeKind;\n \n-    private Long anyTypeKey;\n+    private String anyTypeKey;\n \n     private Boolean details;\n \n@@ -137,12 +137,12 @@ public void setResource(final String resource) {\n         this.resource = resource;\n     }\n \n-    public Long getNotification() {\n+    public String getNotification() {\n         return notification;\n     }\n \n     @QueryParam(JAXRSService.PARAM_NOTIFICATION)\n-    public void setNotification(final Long notification) {\n+    public void setNotification(final String notification) {\n         this.notification = notification;\n     }\n \n@@ -155,13 +155,13 @@ public void setAnyTypeKind(final AnyTypeKind anyTypeKind) {\n         this.anyTypeKind = anyTypeKind;\n     }\n \n-    public Long getAnyTypeKey() {\n+    public String getAnyTypeKey() {\n         return anyTypeKey;\n     }\n \n     @Min(1)\n     @QueryParam(JAXRSService.PARAM_ANYTYPE_KEY)\n-    public void setAnyTypeKey(final Long anyTypeKey) {\n+    public void setAnyTypeKey(final String anyTypeKey) {\n         this.anyTypeKey = anyTypeKey;\n     }\n "},{"sha":"56d3bfd708ea887e25bcf78f23696231e003d3aa","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AnyService.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAnyService.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -55,7 +55,7 @@\n     @GET\n     @Path(\"{key}/{schemaType}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Set<AttrTO> read(@NotNull @PathParam(\"key\") Long key, @NotNull @PathParam(\"schemaType\") SchemaType schemaType);\n+    Set<AttrTO> read(@NotNull @PathParam(\"key\") String key, @NotNull @PathParam(\"schemaType\") SchemaType schemaType);\n \n     /**\n      * Reads the attribute, owned by the given any object, for the given schema type and schema.\n@@ -69,7 +69,7 @@\n     @Path(\"{key}/{schemaType}/{schema}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     AttrTO read(\n-            @NotNull @PathParam(\"key\") Long key,\n+            @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"schemaType\") SchemaType schemaType,\n             @NotNull @PathParam(\"schema\") String schema);\n \n@@ -82,7 +82,7 @@ AttrTO read(\n     @GET\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    TO read(@NotNull @PathParam(\"key\") Long key);\n+    TO read(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Returns a paged list of any objects matching the given query.\n@@ -133,7 +133,7 @@ AttrTO read(\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response update(\n-            @NotNull @PathParam(\"key\") Long key,\n+            @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"schemaType\") SchemaType schemaType,\n             @NotNull AttrTO attrTO);\n \n@@ -162,7 +162,7 @@ Response update(\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     void delete(\n-            @NotNull @PathParam(\"key\") Long key,\n+            @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"schemaType\") SchemaType schemaType,\n             @NotNull @PathParam(\"schema\") String schema);\n \n@@ -177,7 +177,7 @@ void delete(\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    Response delete(@NotNull @PathParam(\"key\") Long key);\n+    Response delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Executes resource-related operations on given any object."},{"sha":"d0806488e8d72a2618f3b12b0b98f40be9fdbc8e","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ConnectorService.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FConnectorService.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -84,7 +84,7 @@ List<ConnIdObjectClassTO> buildObjectClassInfo(\n     @GET\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    ConnInstanceTO read(@NotNull @PathParam(\"key\") Long key, @QueryParam(\"lang\") String lang);\n+    ConnInstanceTO read(@NotNull @PathParam(\"key\") String key, @QueryParam(\"lang\") String lang);\n \n     /**\n      * Returns connector instance for matching resource.\n@@ -138,7 +138,7 @@ ConnInstanceTO readByResource(\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") Long key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Checks whether the connection to resource could be established."},{"sha":"3baf31096c5f90eaead4ca0cd80f446029ca01a6","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/NotificationService.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FNotificationService.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -50,7 +50,7 @@ public interface NotificationService extends JAXRSService {\n     @GET\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    NotificationTO read(@NotNull @PathParam(\"key\") Long key);\n+    NotificationTO read(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Returns a list of all notifications.\n@@ -88,7 +88,7 @@ public interface NotificationService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") Long key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Returns details about notification job."},{"sha":"2177d5115a4e445b7e083be200804a616eb8f869","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/PolicyService.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FPolicyService.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -50,7 +50,7 @@ public interface PolicyService extends JAXRSService {\n     @GET\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    <T extends AbstractPolicyTO> T read(@NotNull @PathParam(\"key\") Long key);\n+    <T extends AbstractPolicyTO> T read(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Returns a list of policies of the matching type.\n@@ -90,6 +90,6 @@ public interface PolicyService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") Long key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n \n }"},{"sha":"75e7a1bde9af27cb233461d102df3f95ec5596ec","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/RealmService.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FRealmService.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -81,9 +81,9 @@ public interface RealmService extends JAXRSService {\n     void update(@NotNull RealmTO realmTO);\n \n     /**\n-     * Deletes the notification matching the given key.\n+     * Deletes the realm under the given path.\n      *\n-     * @param fullPath key for notification to be deleted\n+     * @param fullPath realm path\n      */\n     @DELETE\n     @Path(\"{fullPath:.*}\")"},{"sha":"2fceb88f9355a23581e227d0b06ac9b71eef9afb","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ReportService.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FReportService.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -58,7 +58,7 @@ public interface ReportService extends JAXRSService {\n     @GET\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    ReportTO read(@NotNull @PathParam(\"key\") Long key);\n+    ReportTO read(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Returns a list of all existing reports.\n@@ -96,7 +96,7 @@ public interface ReportService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") Long key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Returns the list of recently completed report executions, ordered by end date descendent.\n@@ -116,7 +116,7 @@ public interface ReportService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"executions/{executionKey}\")\n-    void deleteExecution(@NotNull @PathParam(\"executionKey\") Long executionKey);\n+    void deleteExecution(@NotNull @PathParam(\"executionKey\") String executionKey);\n \n     /**\n      * Deletes the report executions belonging matching the given query.\n@@ -151,7 +151,7 @@ public interface ReportService extends JAXRSService {\n     @Path(\"executions/{executionKey}/stream\")\n     @Consumes({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     Response exportExecutionResult(\n-            @NotNull @PathParam(\"executionKey\") Long executionKey,\n+            @NotNull @PathParam(\"executionKey\") String executionKey,\n             @QueryParam(\"format\") ReportExecExportFormat fmt);\n \n     /**\n@@ -172,5 +172,5 @@ Response exportExecutionResult(\n      */\n     @POST\n     @Path(\"jobs/{key}\")\n-    void actionJob(@NotNull @PathParam(\"key\") Long key, @QueryParam(\"action\") JobAction action);\n+    void actionJob(@NotNull @PathParam(\"key\") String key, @QueryParam(\"action\") JobAction action);\n }"},{"sha":"6fa1e82d3039dac58c8cf8a333e7afb3eec74fef","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ResourceService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FResourceService.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -59,7 +59,7 @@ public interface ResourceService extends JAXRSService {\n     ConnObjectTO readConnObject(\n             @NotNull @PathParam(\"key\") String key,\n             @NotNull @PathParam(\"anyTypeKey\") String anyTypeKey,\n-            @NotNull @PathParam(\"anyKey\") Long anyKey);\n+            @NotNull @PathParam(\"anyKey\") String anyKey);\n \n     /**\n      * Returns a paged list of connector objects from external resource, for the given type, matching"},{"sha":"08ebbfe58ea3efca05ed9aa9c586d71efd243c9e","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SecurityQuestionService.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSecurityQuestionService.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -56,7 +56,7 @@ public interface SecurityQuestionService extends JAXRSService {\n     @GET\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    SecurityQuestionTO read(@NotNull @PathParam(\"key\") Long key);\n+    SecurityQuestionTO read(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Creates a new security question.\n@@ -85,7 +85,7 @@ public interface SecurityQuestionService extends JAXRSService {\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") Long key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Ask for security question configured for the user matching the given username, if any."},{"sha":"c1727d313841089580300ccc896ba19bae4c5896","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/TaskService.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FTaskService.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -65,7 +65,7 @@ public interface TaskService extends JAXRSService {\n     @Path(\"{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n     <T extends AbstractTaskTO> T read(\n-            @NotNull @PathParam(\"key\") Long key,\n+            @NotNull @PathParam(\"key\") String key,\n             @QueryParam(JAXRSService.PARAM_DETAILS) @DefaultValue(\"true\") boolean details);\n \n     /**\n@@ -106,7 +106,7 @@ <T extends AbstractTaskTO> T read(\n      */\n     @DELETE\n     @Path(\"{key}\")\n-    void delete(@NotNull @PathParam(\"key\") Long key);\n+    void delete(@NotNull @PathParam(\"key\") String key);\n \n     /**\n      * Returns a paged list of task executions matching the given query.\n@@ -137,7 +137,7 @@ <T extends AbstractTaskTO> T read(\n      */\n     @DELETE\n     @Path(\"executions/{executionKey}\")\n-    void deleteExecution(@NotNull @PathParam(\"executionKey\") Long executionKey);\n+    void deleteExecution(@NotNull @PathParam(\"executionKey\") String executionKey);\n \n     /**\n      * Deletes the task executions belonging matching the given query.\n@@ -191,5 +191,5 @@ <T extends AbstractTaskTO> T read(\n      */\n     @POST\n     @Path(\"jobs/{key}\")\n-    void actionJob(@NotNull @PathParam(\"key\") Long key, @QueryParam(\"action\") JobAction action);\n+    void actionJob(@NotNull @PathParam(\"key\") String key, @QueryParam(\"action\") JobAction action);\n }"},{"sha":"d443e354afe6b5a68daa5ff0d6e08d184628e724","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserService.java","status":"modified","additions":0,"deletions":22,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserService.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -23,10 +23,8 @@\n import javax.ws.rs.Consumes;\n import javax.ws.rs.DefaultValue;\n import javax.ws.rs.GET;\n-import javax.ws.rs.OPTIONS;\n import javax.ws.rs.POST;\n import javax.ws.rs.Path;\n-import javax.ws.rs.PathParam;\n import javax.ws.rs.Produces;\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n@@ -43,26 +41,6 @@\n @Path(\"users\")\n public interface UserService extends AnyService<UserTO, UserPatch> {\n \n-    /**\n-     * Gives the username for the provided user key.\n-     *\n-     * @param key user key\n-     * @return Response object featuring HTTP header with username matching the given key\n-     */\n-    @OPTIONS\n-    @Path(\"{key}/username\")\n-    Response getUsername(@NotNull @PathParam(\"key\") Long key);\n-\n-    /**\n-     * Gives the user key for the provided username.\n-     *\n-     * @param username username\n-     * @return Response object featuring HTTP header with key matching the given username\n-     */\n-    @OPTIONS\n-    @Path(\"{username}/key\")\n-    Response getUserKey(@NotNull @PathParam(\"username\") String username);\n-\n     /**\n      * Returns a paged list of existing users matching the given query.\n      *"},{"sha":"a4ecc467643fd878059af1abb1f13328bd365b80","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/UserWorkflowService.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FUserWorkflowService.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -55,7 +55,7 @@ public interface UserWorkflowService extends JAXRSService {\n     @GET\n     @Path(\"forms/{userKey}\")\n     @Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })\n-    WorkflowFormTO getFormForUser(@NotNull @PathParam(\"userKey\") Long userKey);\n+    WorkflowFormTO getFormForUser(@NotNull @PathParam(\"userKey\") String userKey);\n \n     /**\n      * Claims the form for the given task id."},{"sha":"e1b778ea231f7cf86b48cbe13cd27d2a92f44923","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AbstractAnyLogic.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractAnyLogic.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -82,7 +82,7 @@ private List<LogicActions> getActions(final Realm realm) {\n     }\n \n     protected Pair<TO, List<LogicActions>> beforeCreate(final TO input) {\n-        Realm realm = realmDAO.find(input.getRealm());\n+        Realm realm = realmDAO.findByFullPath(input.getRealm());\n         if (realm == null) {\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidRealm);\n             sce.getElements().add(input.getRealm());\n@@ -115,7 +115,7 @@ protected Pair<TO, List<LogicActions>> beforeCreate(final TO input) {\n     }\n \n     protected Pair<P, List<LogicActions>> beforeUpdate(final P input, final String realmPath) {\n-        Realm realm = realmDAO.find(realmPath);\n+        Realm realm = realmDAO.findByFullPath(realmPath);\n         if (realm == null) {\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidRealm);\n             sce.getElements().add(realmPath);\n@@ -135,7 +135,7 @@ protected Pair<P, List<LogicActions>> beforeUpdate(final P input, final String r\n     }\n \n     protected Pair<TO, List<LogicActions>> beforeDelete(final TO input) {\n-        Realm realm = realmDAO.find(input.getRealm());\n+        Realm realm = realmDAO.findByFullPath(input.getRealm());\n         if (realm == null) {\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidRealm);\n             sce.getElements().add(input.getRealm());\n@@ -205,7 +205,7 @@ protected Set<String> getEffectiveRealms(\n         return effective;\n     }\n \n-    protected void securityChecks(final Set<String> effectiveRealms, final String realm, final Long key) {\n+    protected void securityChecks(final Set<String> effectiveRealms, final String realm, final String key) {\n         if (!IterableUtils.matchesAny(effectiveRealms, new Predicate<String>() {\n \n             @Override\n@@ -224,15 +224,15 @@ public boolean evaluate(final String ownedRealm) {\n         }\n     }\n \n-    public abstract TO read(Long key);\n+    public abstract TO read(String key);\n \n     public abstract int count(String realm);\n \n     public abstract ProvisioningResult<TO> create(TO anyTO, boolean nullPriorityAsync);\n \n     public abstract ProvisioningResult<TO> update(P anyPatch, boolean nullPriorityAsync);\n \n-    public abstract ProvisioningResult<TO> delete(Long key, boolean nullPriorityAsync);\n+    public abstract ProvisioningResult<TO> delete(String key, boolean nullPriorityAsync);\n \n     public abstract List<TO> list(\n             int page, int size, List<OrderByClause> orderBy,"},{"sha":"ac4af1cefe01b55e71b22063845266df3ce88102","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AbstractJobLogic.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractJobLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractJobLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractJobLogic.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -42,7 +42,7 @@\n     @Autowired\n     protected SchedulerFactoryBean scheduler;\n \n-    protected abstract Triple<JobType, Long, String> getReference(final JobKey jobKey);\n+    protected abstract Triple<JobType, String, String> getReference(final JobKey jobKey);\n \n     protected List<JobTO> listJobs() {\n         List<JobTO> jobTOs = new ArrayList<>();\n@@ -53,7 +53,7 @@ protected List<JobTO> listJobs() {\n \n                 JobTO jobTO = new JobTO();\n \n-                Triple<JobType, Long, String> reference = getReference(jobKey);\n+                Triple<JobType, String, String> reference = getReference(jobKey);\n                 if (reference != null) {\n                     jobTOs.add(jobTO);\n "},{"sha":"577455bc069264c7efef2abf0f9ec86e85fdd992","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AbstractResourceAssociator.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractResourceAssociator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractResourceAssociator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractResourceAssociator.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -24,19 +24,19 @@\n \n public abstract class AbstractResourceAssociator<A extends AnyTO> extends AbstractLogic<A> {\n \n-    public abstract A unlink(Long key, Collection<String> resources);\n+    public abstract A unlink(String key, Collection<String> resources);\n \n-    public abstract A link(Long key, Collection<String> resources);\n+    public abstract A link(String key, Collection<String> resources);\n \n     public abstract ProvisioningResult<A> unassign(\n-            Long key, Collection<String> resources, boolean nullPriorityAsync);\n+            String key, Collection<String> resources, boolean nullPriorityAsync);\n \n     public abstract ProvisioningResult<A> assign(\n-            Long key, Collection<String> resources, boolean changepwd, String password, boolean nullPriorityAsync);\n+            String key, Collection<String> resources, boolean changepwd, String password, boolean nullPriorityAsync);\n \n     public abstract ProvisioningResult<A> deprovision(\n-            Long key, Collection<String> resources, boolean nullPriorityAsync);\n+            String key, Collection<String> resources, boolean nullPriorityAsync);\n \n     public abstract ProvisioningResult<A> provision(\n-            Long key, Collection<String> resources, boolean changepwd, String password, boolean nullPriorityAsync);\n+            String key, Collection<String> resources, boolean changepwd, String password, boolean nullPriorityAsync);\n }"},{"sha":"d6dafda90d16cdac5c5247d21d037eaee866c58d","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AnyObjectLogic.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyObjectLogic.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -73,7 +73,7 @@ public class AnyObjectLogic extends AbstractAnyLogic<AnyObjectTO, AnyObjectPatch\n \n     @Transactional(readOnly = true)\n     @Override\n-    public AnyObjectTO read(final Long key) {\n+    public AnyObjectTO read(final String key) {\n         return binder.getAnyObjectTO(key);\n     }\n \n@@ -146,7 +146,7 @@ public ProvisioningResult<AnyObjectTO> create(final AnyObjectTO anyObjectTO, fin\n                 before.getLeft().getRealm());\n         securityChecks(effectiveRealms, before.getLeft().getRealm(), null);\n \n-        Pair<Long, List<PropagationStatus>> created = provisioningManager.create(before.getLeft(), nullPriorityAsync);\n+        Pair<String, List<PropagationStatus>> created = provisioningManager.create(before.getLeft(), nullPriorityAsync);\n \n         return after(binder.getAnyObjectTO(created.getKey()), created.getRight(), before.getRight());\n     }\n@@ -167,13 +167,13 @@ public ProvisioningResult<AnyObjectTO> update(\n                 realm);\n         securityChecks(effectiveRealms, realm, before.getLeft().getKey());\n \n-        Pair<Long, List<PropagationStatus>> updated = provisioningManager.update(anyObjectPatch, nullPriorityAsync);\n+        Pair<String, List<PropagationStatus>> updated = provisioningManager.update(anyObjectPatch, nullPriorityAsync);\n \n         return after(binder.getAnyObjectTO(updated.getKey()), updated.getRight(), before.getRight());\n     }\n \n     @Override\n-    public ProvisioningResult<AnyObjectTO> delete(final Long key, final boolean nullPriorityAsync) {\n+    public ProvisioningResult<AnyObjectTO> delete(final String key, final boolean nullPriorityAsync) {\n         AnyObjectTO anyObject = binder.getAnyObjectTO(key);\n         Pair<AnyObjectTO, List<LogicActions>> before = beforeDelete(anyObject);\n \n@@ -191,7 +191,7 @@ public ProvisioningResult<AnyObjectTO> delete(final Long key, final boolean null\n     }\n \n     @Override\n-    public AnyObjectTO unlink(final Long key, final Collection<String> resources) {\n+    public AnyObjectTO unlink(final String key, final Collection<String> resources) {\n         // security checks\n         AnyObjectTO anyObjectTO = binder.getAnyObjectTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n@@ -213,7 +213,7 @@ public StringPatchItem transform(final String resource) {\n     }\n \n     @Override\n-    public AnyObjectTO link(final Long key, final Collection<String> resources) {\n+    public AnyObjectTO link(final String key, final Collection<String> resources) {\n         // security checks\n         AnyObjectTO anyObjectTO = binder.getAnyObjectTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n@@ -236,7 +236,7 @@ public StringPatchItem transform(final String resource) {\n \n     @Override\n     public ProvisioningResult<AnyObjectTO> unassign(\n-            final Long key, final Collection<String> resources, final boolean nullPriorityAsync) {\n+            final String key, final Collection<String> resources, final boolean nullPriorityAsync) {\n \n         // security checks\n         AnyObjectTO anyObjectTO = binder.getAnyObjectTO(key);\n@@ -260,7 +260,7 @@ public StringPatchItem transform(final String resource) {\n \n     @Override\n     public ProvisioningResult<AnyObjectTO> assign(\n-            final Long key,\n+            final String key,\n             final Collection<String> resources,\n             final boolean changepwd,\n             final String password,\n@@ -288,7 +288,7 @@ public StringPatchItem transform(final String resource) {\n \n     @Override\n     public ProvisioningResult<AnyObjectTO> deprovision(\n-            final Long key, final Collection<String> resources, final boolean nullPriorityAsync) {\n+            final String key, final Collection<String> resources, final boolean nullPriorityAsync) {\n \n         // security checks\n         AnyObjectTO anyObjectTO = binder.getAnyObjectTO(key);\n@@ -307,7 +307,7 @@ public ProvisioningResult<AnyObjectTO> deprovision(\n \n     @Override\n     public ProvisioningResult<AnyObjectTO> provision(\n-            final Long key,\n+            final String key,\n             final Collection<String> resources,\n             final boolean changePwd,\n             final String password,\n@@ -332,12 +332,12 @@ public ProvisioningResult<AnyObjectTO> provision(\n     protected AnyObjectTO resolveReference(final Method method, final Object... args)\n             throws UnresolvedReferenceException {\n \n-        Long key = null;\n+        String key = null;\n \n         if (ArrayUtils.isNotEmpty(args)) {\n             for (int i = 0; key == null && i < args.length; i++) {\n-                if (args[i] instanceof Long) {\n-                    key = (Long) args[i];\n+                if (args[i] instanceof String) {\n+                    key = (String) args[i];\n                 } else if (args[i] instanceof AnyObjectTO) {\n                     key = ((AnyObjectTO) args[i]).getKey();\n                 } else if (args[i] instanceof AnyObjectPatch) {\n@@ -346,7 +346,7 @@ protected AnyObjectTO resolveReference(final Method method, final Object... args\n             }\n         }\n \n-        if ((key != null) && !key.equals(0L)) {\n+        if (key != null) {\n             try {\n                 return binder.getAnyObjectTO(key);\n             } catch (Throwable ignore) {"},{"sha":"2a5e89bf79da379e5a4fae101b533c64dc729efe","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AnyTypeLogic.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyTypeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyTypeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAnyTypeLogic.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -75,7 +75,7 @@ public AnyTypeTO transform(final AnyType input) {\n     public AnyTypeTO create(final AnyTypeTO anyTypeTO) {\n         if (StringUtils.isBlank(anyTypeTO.getKey())) {\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.RequiredValuesMissing);\n-            sce.getElements().add(AnyType.class.getSimpleName() + \" name\");\n+            sce.getElements().add(AnyType.class.getSimpleName() + \" key\");\n             throw sce;\n         }\n         if (anyTypeDAO.find(anyTypeTO.getKey()) != null) {\n@@ -117,12 +117,12 @@ public AnyTypeTO delete(final String key) {\n         AnyTypeTO deleted = binder.getAnyTypeTO(anyType);\n         try {\n             anyTypeDAO.delete(key);\n+            EntitlementsHolder.getInstance().removeFor(deleted.getKey());\n         } catch (IllegalArgumentException e) {\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.InvalidAnyType);\n             sce.getElements().add(e.getMessage());\n             throw sce;\n         }\n-        EntitlementsHolder.getInstance().removeFor(deleted.getKey());\n         return deleted;\n     }\n "},{"sha":"8f7ec57b7d0f323b6d384ee54a95db9656bd588f","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ConnectorLogic.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConnectorLogic.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -108,7 +108,7 @@ public ConnInstanceTO update(final ConnInstanceTO connInstanceTO) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.CONNECTOR_DELETE + \"')\")\n-    public ConnInstanceTO delete(final Long key) {\n+    public ConnInstanceTO delete(final String key) {\n         ConnInstance connInstance = connInstanceDAO.find(key);\n         if (connInstance == null) {\n             throw new NotFoundException(\"Connector '\" + key + \"'\");\n@@ -155,7 +155,7 @@ public ConnInstanceTO transform(final ConnInstance connInstance) {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.CONNECTOR_READ + \"')\")\n     @Transactional(readOnly = true)\n-    public ConnInstanceTO read(final Long key, final String lang) {\n+    public ConnInstanceTO read(final String key, final String lang) {\n         CurrentLocale.set(StringUtils.isBlank(lang) ? Locale.ENGLISH : new Locale(lang));\n \n         ConnInstance connInstance = connInstanceDAO.find(key);\n@@ -262,19 +262,19 @@ public void reload() {\n     protected ConnInstanceTO resolveReference(final Method method, final Object... args)\n             throws UnresolvedReferenceException {\n \n-        Long key = null;\n+        String key = null;\n \n         if (ArrayUtils.isNotEmpty(args)) {\n             for (int i = 0; key == null && i < args.length; i++) {\n-                if (args[i] instanceof Long) {\n-                    key = (Long) args[i];\n+                if (args[i] instanceof String) {\n+                    key = (String) args[i];\n                 } else if (args[i] instanceof ConnInstanceTO) {\n                     key = ((ConnInstanceTO) args[i]).getKey();\n                 }\n             }\n         }\n \n-        if ((key != null) && !key.equals(0L)) {\n+        if (key != null) {\n             try {\n                 return binder.getConnInstanceTO(connInstanceDAO.find(key));\n             } catch (Throwable ignore) {"},{"sha":"232010e3bbfab81013c12633c1503a7af341b881","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/GroupLogic.java","status":"modified","additions":16,"deletions":16,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FGroupLogic.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -81,7 +81,7 @@ public class GroupLogic extends AbstractAnyLogic<GroupTO, GroupPatch> {\n     protected GroupProvisioningManager provisioningManager;\n \n     @Override\n-    protected void securityChecks(final Set<String> effectiveRealms, final String realm, final Long key) {\n+    protected void securityChecks(final Set<String> effectiveRealms, final String realm, final String key) {\n         if (!IterableUtils.matchesAny(effectiveRealms, new Predicate<String>() {\n \n             @Override\n@@ -97,15 +97,15 @@ public boolean evaluate(final String ownedRealm) {\n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.GROUP_READ + \"')\")\n     @Transactional(readOnly = true)\n     @Override\n-    public GroupTO read(final Long key) {\n+    public GroupTO read(final String key) {\n         return binder.getGroupTO(key);\n     }\n \n     @PreAuthorize(\"isAuthenticated() and not(hasRole('\" + StandardEntitlement.ANONYMOUS + \"'))\")\n     @Transactional(readOnly = true)\n     public List<GroupTO> own() {\n         return CollectionUtils.collect(\n-                userDAO.findAllGroups(userDAO.find(AuthContextUtils.getUsername())),\n+                userDAO.findAllGroups(userDAO.findByUsername(AuthContextUtils.getUsername())),\n                 new Transformer<Group, GroupTO>() {\n \n             @Override\n@@ -182,7 +182,7 @@ public ProvisioningResult<GroupTO> create(final GroupTO groupTO, final boolean n\n                 before.getLeft().getRealm());\n         securityChecks(effectiveRealms, before.getLeft().getRealm(), null);\n \n-        Pair<Long, List<PropagationStatus>> created =\n+        Pair<String, List<PropagationStatus>> created =\n                 provisioningManager.create(before.getLeft(), nullPriorityAsync);\n \n         return after(binder.getGroupTO(created.getKey()), created.getRight(), before.getRight());\n@@ -201,14 +201,14 @@ public ProvisioningResult<GroupTO> update(final GroupPatch groupPatch, final boo\n             securityChecks(effectiveRealms, before.getLeft().getRealm().getValue(), before.getLeft().getKey());\n         }\n \n-        Pair<Long, List<PropagationStatus>> updated = provisioningManager.update(groupPatch, nullPriorityAsync);\n+        Pair<String, List<PropagationStatus>> updated = provisioningManager.update(groupPatch, nullPriorityAsync);\n \n         return after(binder.getGroupTO(updated.getKey()), updated.getRight(), before.getRight());\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.GROUP_DELETE + \"')\")\n     @Override\n-    public ProvisioningResult<GroupTO> delete(final Long key, final boolean nullPriorityAsync) {\n+    public ProvisioningResult<GroupTO> delete(final String key, final boolean nullPriorityAsync) {\n         GroupTO group = binder.getGroupTO(key);\n         Pair<GroupTO, List<LogicActions>> before = beforeDelete(group);\n \n@@ -240,7 +240,7 @@ public String transform(final Group group) {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.GROUP_UPDATE + \"')\")\n     @Override\n-    public GroupTO unlink(final Long key, final Collection<String> resources) {\n+    public GroupTO unlink(final String key, final Collection<String> resources) {\n         // security checks\n         GroupTO group = binder.getGroupTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n@@ -263,7 +263,7 @@ public StringPatchItem transform(final String resource) {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.GROUP_UPDATE + \"')\")\n     @Override\n-    public GroupTO link(final Long key, final Collection<String> resources) {\n+    public GroupTO link(final String key, final Collection<String> resources) {\n         // security checks\n         GroupTO group = binder.getGroupTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n@@ -287,7 +287,7 @@ public StringPatchItem transform(final String resource) {\n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.GROUP_UPDATE + \"')\")\n     @Override\n     public ProvisioningResult<GroupTO> unassign(\n-            final Long key, final Collection<String> resources, final boolean nullPriorityAsync) {\n+            final String key, final Collection<String> resources, final boolean nullPriorityAsync) {\n \n         // security checks\n         GroupTO group = binder.getGroupTO(key);\n@@ -312,7 +312,7 @@ public StringPatchItem transform(final String resource) {\n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.GROUP_UPDATE + \"')\")\n     @Override\n     public ProvisioningResult<GroupTO> assign(\n-            final Long key,\n+            final String key,\n             final Collection<String> resources,\n             final boolean changepwd,\n             final String password,\n@@ -341,7 +341,7 @@ public StringPatchItem transform(final String resource) {\n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.GROUP_UPDATE + \"')\")\n     @Override\n     public ProvisioningResult<GroupTO> deprovision(\n-            final Long key, final Collection<String> resources, final boolean nullPriorityAsync) {\n+            final String key, final Collection<String> resources, final boolean nullPriorityAsync) {\n \n         // security checks\n         GroupTO group = binder.getGroupTO(key);\n@@ -361,7 +361,7 @@ public ProvisioningResult<GroupTO> deprovision(\n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.GROUP_UPDATE + \"')\")\n     @Override\n     public ProvisioningResult<GroupTO> provision(\n-            final Long key,\n+            final String key,\n             final Collection<String> resources,\n             final boolean changePwd,\n             final String password,\n@@ -384,12 +384,12 @@ public ProvisioningResult<GroupTO> provision(\n \n     @Override\n     protected GroupTO resolveReference(final Method method, final Object... args) throws UnresolvedReferenceException {\n-        Long key = null;\n+        String key = null;\n \n         if (ArrayUtils.isNotEmpty(args)) {\n             for (int i = 0; key == null && i < args.length; i++) {\n-                if (args[i] instanceof Long) {\n-                    key = (Long) args[i];\n+                if (args[i] instanceof String) {\n+                    key = (String) args[i];\n                 } else if (args[i] instanceof GroupTO) {\n                     key = ((GroupTO) args[i]).getKey();\n                 } else if (args[i] instanceof GroupPatch) {\n@@ -398,7 +398,7 @@ protected GroupTO resolveReference(final Method method, final Object... args) th\n             }\n         }\n \n-        if ((key != null) && !key.equals(0L)) {\n+        if (key != null) {\n             try {\n                 return binder.getGroupTO(key);\n             } catch (Throwable ignore) {"},{"sha":"95597f0a2ae0cc797510738d8cab08cabdee1eab","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/NotificationLogic.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FNotificationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FNotificationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FNotificationLogic.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -51,7 +51,7 @@ public class NotificationLogic extends AbstractJobLogic<NotificationTO> {\n     private NotificationDataBinder binder;\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.NOTIFICATION_READ + \"')\")\n-    public NotificationTO read(final Long key) {\n+    public NotificationTO read(final String key) {\n         Notification notification = notificationDAO.find(key);\n         if (notification == null) {\n             LOG.error(\"Could not find notification '\" + key + \"'\");\n@@ -93,7 +93,7 @@ public NotificationTO update(final NotificationTO notificationTO) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.NOTIFICATION_DELETE + \"')\")\n-    public NotificationTO delete(final Long key) {\n+    public NotificationTO delete(final String key) {\n         Notification notification = notificationDAO.find(key);\n         if (notification == null) {\n             LOG.error(\"Could not find notification '\" + key + \"'\");\n@@ -107,9 +107,9 @@ public NotificationTO delete(final Long key) {\n     }\n \n     @Override\n-    protected Triple<JobType, Long, String> getReference(final JobKey jobKey) {\n+    protected Triple<JobType, String, String> getReference(final JobKey jobKey) {\n         return JobManager.NOTIFICATION_JOB.equals(jobKey)\n-                ? Triple.of(JobType.NOTIFICATION, 0L, NotificationJob.class.getSimpleName())\n+                ? Triple.of(JobType.NOTIFICATION, (String) null, NotificationJob.class.getSimpleName())\n                 : null;\n     }\n \n@@ -127,19 +127,19 @@ public void actionJob(final JobAction action) {\n     protected NotificationTO resolveReference(final Method method, final Object... args)\n             throws UnresolvedReferenceException {\n \n-        Long key = null;\n+        String key = null;\n \n         if (ArrayUtils.isNotEmpty(args)) {\n             for (int i = 0; key == null && i < args.length; i++) {\n-                if (args[i] instanceof Long) {\n-                    key = (Long) args[i];\n+                if (args[i] instanceof String) {\n+                    key = (String) args[i];\n                 } else if (args[i] instanceof NotificationTO) {\n                     key = ((NotificationTO) args[i]).getKey();\n                 }\n             }\n         }\n \n-        if ((key != null) && !key.equals(0L)) {\n+        if (key != null) {\n             try {\n                 return binder.getNotificationTO(notificationDAO.find(key));\n             } catch (Throwable ignore) {"},{"sha":"0cffd0c329d164c8f58ea1be7ba571d1a5b0fc3a","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/PolicyLogic.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FPolicyLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FPolicyLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FPolicyLogic.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -88,7 +88,7 @@ public T transform(final Policy input) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.POLICY_READ + \"')\")\n-    public <T extends AbstractPolicyTO> T read(final Long key) {\n+    public <T extends AbstractPolicyTO> T read(final String key) {\n         Policy policy = policyDAO.find(key);\n         if (policy == null) {\n             throw new NotFoundException(\"Policy \" + key + \" not found\");\n@@ -98,7 +98,7 @@ public <T extends AbstractPolicyTO> T read(final Long key) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.POLICY_DELETE + \"')\")\n-    public <T extends AbstractPolicyTO> T delete(final Long key) {\n+    public <T extends AbstractPolicyTO> T delete(final String key) {\n         Policy policy = policyDAO.find(key);\n         if (policy == null) {\n             throw new NotFoundException(\"Policy \" + key + \" not found\");\n@@ -114,19 +114,19 @@ public <T extends AbstractPolicyTO> T delete(final Long key) {\n     protected AbstractPolicyTO resolveReference(final Method method, final Object... args)\n             throws UnresolvedReferenceException {\n \n-        Long key = null;\n+        String key = null;\n \n         if (ArrayUtils.isNotEmpty(args)) {\n             for (int i = 0; key == null && i < args.length; i++) {\n-                if (args[i] instanceof Long) {\n-                    key = (Long) args[i];\n+                if (args[i] instanceof String) {\n+                    key = (String) args[i];\n                 } else if (args[i] instanceof AbstractPolicyTO) {\n                     key = ((AbstractPolicyTO) args[i]).getKey();\n                 }\n             }\n         }\n \n-        if ((key != null) && !key.equals(0L)) {\n+        if (key != null) {\n             try {\n                 return binder.getPolicyTO(policyDAO.find(key));\n             } catch (Throwable ignore) {"},{"sha":"2b78a3e8ffd6d9b174a4ec2061c95f21861b88a9","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/RealmLogic.java","status":"modified","additions":18,"deletions":7,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRealmLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRealmLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FRealmLogic.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -26,12 +26,14 @@\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.core.persistence.api.dao.AnySearchDAO;\n+import org.apache.syncope.core.persistence.api.dao.DuplicateException;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n import org.apache.syncope.core.persistence.api.dao.search.AnyCond;\n@@ -57,7 +59,7 @@ public class RealmLogic extends AbstractTransactionalLogic<RealmTO> {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.REALM_LIST + \"')\")\n     public List<RealmTO> list(final String fullPath) {\n-        Realm realm = realmDAO.find(fullPath);\n+        Realm realm = realmDAO.findByFullPath(fullPath);\n         if (realm == null) {\n             LOG.error(\"Could not find realm '\" + fullPath + \"'\");\n \n@@ -75,12 +77,17 @@ public RealmTO transform(final Realm input) {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.REALM_CREATE + \"')\")\n     public RealmTO create(final String parentPath, final RealmTO realmTO) {\n+        String fullPath = StringUtils.appendIfMissing(parentPath, \"/\") + realmTO.getName();\n+        if (realmDAO.findByFullPath(fullPath) != null) {\n+            throw new DuplicateException(fullPath);\n+        }\n+\n         return binder.getRealmTO(realmDAO.save(binder.create(parentPath, realmTO)));\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.REALM_UPDATE + \"')\")\n     public RealmTO update(final RealmTO realmTO) {\n-        Realm realm = realmDAO.find(realmTO.getFullPath());\n+        Realm realm = realmDAO.findByFullPath(realmTO.getFullPath());\n         if (realm == null) {\n             LOG.error(\"Could not find realm '\" + realmTO.getFullPath() + \"'\");\n \n@@ -95,17 +102,21 @@ public RealmTO update(final RealmTO realmTO) {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.REALM_DELETE + \"')\")\n     public RealmTO delete(final String fullPath) {\n-        Realm realm = realmDAO.find(fullPath);\n+        Realm realm = realmDAO.findByFullPath(fullPath);\n         if (realm == null) {\n             LOG.error(\"Could not find realm '\" + fullPath + \"'\");\n \n             throw new NotFoundException(fullPath);\n         }\n \n+        if (!realmDAO.findChildren(realm).isEmpty()) {\n+            throw SyncopeClientException.build(ClientExceptionType.HasChildren);\n+        }\n+\n         Set<String> adminRealms = Collections.singleton(realm.getFullPath());\n-        AnyCond idCond = new AnyCond(AttributeCond.Type.ISNOTNULL);\n-        idCond.setSchema(\"id\");\n-        SearchCond allMatchingCond = SearchCond.getLeafCond(idCond);\n+        AnyCond keyCond = new AnyCond(AttributeCond.Type.ISNOTNULL);\n+        keyCond.setSchema(\"key\");\n+        SearchCond allMatchingCond = SearchCond.getLeafCond(keyCond);\n         int users = searchDAO.count(adminRealms, allMatchingCond, AnyTypeKind.USER);\n         int groups = searchDAO.count(adminRealms, allMatchingCond, AnyTypeKind.GROUP);\n         int anyObjects = searchDAO.count(adminRealms, allMatchingCond, AnyTypeKind.ANY_OBJECT);\n@@ -141,7 +152,7 @@ protected RealmTO resolveReference(final Method method, final Object... args)\n \n         if (fullPath != null) {\n             try {\n-                return binder.getRealmTO(realmDAO.find(fullPath));\n+                return binder.getRealmTO(realmDAO.findByFullPath(fullPath));\n             } catch (Throwable e) {\n                 LOG.debug(\"Unresolved reference\", e);\n                 throw new UnresolvedReferenceException(e);"},{"sha":"9a57a59e97876da10179625620cd90e46ffff54c","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ReportLogic.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReportLogic.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -146,7 +146,7 @@ public ReportTO transform(final Report input) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.REPORT_READ + \"')\")\n-    public ReportTO read(final Long key) {\n+    public ReportTO read(final String key) {\n         Report report = reportDAO.find(key);\n         if (report == null) {\n             throw new NotFoundException(\"Report \" + key);\n@@ -155,7 +155,7 @@ public ReportTO read(final Long key) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.REPORT_EXECUTE + \"')\")\n-    public ExecTO execute(final Long key, final Date startAt) {\n+    public ExecTO execute(final String key, final Date startAt) {\n         Report report = reportDAO.find(key);\n         if (report == null) {\n             throw new NotFoundException(\"Report \" + key);\n@@ -194,7 +194,7 @@ public ExecTO execute(final Long key, final Date startAt) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.REPORT_READ + \"')\")\n-    public ReportExec getReportExec(final Long executionKey) {\n+    public ReportExec getReportExec(final String executionKey) {\n         ReportExec reportExec = reportExecDAO.find(executionKey);\n         if (reportExec == null) {\n             throw new NotFoundException(\"Report execution \" + executionKey);\n@@ -280,7 +280,7 @@ public void exportExecutionResult(final OutputStream os, final ReportExec report\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.REPORT_DELETE + \"')\")\n-    public ReportTO delete(final Long key) {\n+    public ReportTO delete(final String key) {\n         Report report = reportDAO.find(key);\n         if (report == null) {\n             throw new NotFoundException(\"Report \" + key);\n@@ -304,7 +304,7 @@ public ExecTO transform(final ReportExec reportExec) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.REPORT_DELETE + \"')\")\n-    public ExecTO deleteExecution(final Long executionKey) {\n+    public ExecTO deleteExecution(final String executionKey) {\n         ReportExec reportExec = reportExecDAO.find(executionKey);\n         if (reportExec == null) {\n             throw new NotFoundException(\"Report execution \" + executionKey);\n@@ -317,7 +317,7 @@ public ExecTO deleteExecution(final Long executionKey) {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.REPORT_DELETE + \"')\")\n     public BulkActionResult deleteExecutions(\n-            final Long key,\n+            final String key,\n             final Date startedBefore, final Date startedAfter, final Date endedBefore, final Date endedAfter) {\n \n         Report report = reportDAO.find(key);\n@@ -341,8 +341,8 @@ public BulkActionResult deleteExecutions(\n     }\n \n     @Override\n-    protected Triple<JobType, Long, String> getReference(final JobKey jobKey) {\n-        Long key = JobNamer.getReportKeyFromJobName(jobKey.getName());\n+    protected Triple<JobType, String, String> getReference(final JobKey jobKey) {\n+        String key = JobNamer.getReportKeyFromJobName(jobKey.getName());\n \n         Report report = reportDAO.find(key);\n         return report == null\n@@ -357,7 +357,7 @@ public List<JobTO> listJobs() {\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.REPORT_EXECUTE + \"')\")\n-    public void actionJob(final Long key, final JobAction action) {\n+    public void actionJob(final String key, final JobAction action) {\n         Report report = reportDAO.find(key);\n         if (report == null) {\n             throw new NotFoundException(\"Report \" + key);\n@@ -370,21 +370,21 @@ public void actionJob(final Long key, final JobAction action) {\n     protected ReportTO resolveReference(final Method method, final Object... args)\n             throws UnresolvedReferenceException {\n \n-        Long key = null;\n+        String key = null;\n \n         if (ArrayUtils.isNotEmpty(args) && (\"create\".equals(method.getName())\n                 || \"update\".equals(method.getName())\n                 || \"delete\".equals(method.getName()))) {\n             for (int i = 0; key == null && i < args.length; i++) {\n-                if (args[i] instanceof Long) {\n-                    key = (Long) args[i];\n+                if (args[i] instanceof String) {\n+                    key = (String) args[i];\n                 } else if (args[i] instanceof ReportTO) {\n                     key = ((ReportTO) args[i]).getKey();\n                 }\n             }\n         }\n \n-        if ((key != null) && !key.equals(0L)) {\n+        if (key != null) {\n             try {\n                 return binder.getReportTO(reportDAO.find(key));\n             } catch (Throwable ignore) {"},{"sha":"5c2dad47d0498b3fd04784de537337cfc509c263","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ResourceLogic.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -114,12 +114,12 @@ public class ResourceLogic extends AbstractTransactionalLogic<ResourceTO> {\n     public ResourceTO create(final ResourceTO resourceTO) {\n         if (StringUtils.isBlank(resourceTO.getKey())) {\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.RequiredValuesMissing);\n-            sce.getElements().add(\"Resource name\");\n+            sce.getElements().add(\"Resource key\");\n             throw sce;\n         }\n \n         if (resourceDAO.find(resourceTO.getKey()) != null) {\n-            throw new DuplicateException(\"Resource '\" + resourceTO.getKey() + \"'\");\n+            throw new DuplicateException(resourceTO.getKey());\n         }\n \n         ExternalResource resource = null;\n@@ -215,7 +215,7 @@ private Triple<ExternalResource, AnyType, Provision> connObjectInit(\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.RESOURCE_GET_CONNOBJECT + \"')\")\n     @Transactional(readOnly = true)\n-    public ConnObjectTO readConnObject(final String key, final String anyTypeKey, final Long anyKey) {\n+    public ConnObjectTO readConnObject(final String key, final String anyTypeKey, final String anyKey) {\n         Triple<ExternalResource, AnyType, Provision> init = connObjectInit(key, anyTypeKey);\n \n         // 1. find any"},{"sha":"2eb14c570262bf3ac78b225904796e7b9077e016","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/SchemaLogic.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSchemaLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSchemaLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSchemaLogic.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -30,6 +30,7 @@\n import org.apache.syncope.common.lib.to.DerSchemaTO;\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.VirSchemaTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n@@ -150,6 +151,8 @@ public <T extends AbstractSchemaTO> List<T> list(\n \n         List<AnyTypeClass> classes = new ArrayList<>(anyTypeClasses == null ? 0 : anyTypeClasses.size());\n         if (anyTypeClasses != null) {\n+            anyTypeClasses.remove(AnyTypeKind.USER.name());\n+            anyTypeClasses.remove(AnyTypeKind.GROUP.name());\n             for (String anyTypeClass : anyTypeClasses) {\n                 AnyTypeClass clazz = anyTypeClassDAO.find(anyTypeClass);\n                 if (clazz == null) {"},{"sha":"3f13a292e17ffbb241c0e0de55b8a57529cebc14","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/SecurityQuestionLogic.java","status":"modified","additions":20,"deletions":20,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSecurityQuestionLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSecurityQuestionLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSecurityQuestionLogic.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -53,20 +53,20 @@ public List<SecurityQuestionTO> list() {\n         return CollectionUtils.collect(securityQuestionDAO.findAll(),\n                 new Transformer<SecurityQuestion, SecurityQuestionTO>() {\n \n-                    @Override\n-                    public SecurityQuestionTO transform(final SecurityQuestion input) {\n-                        return binder.getSecurityQuestionTO(input);\n-                    }\n-                }, new ArrayList<SecurityQuestionTO>());\n+            @Override\n+            public SecurityQuestionTO transform(final SecurityQuestion input) {\n+                return binder.getSecurityQuestionTO(input);\n+            }\n+        }, new ArrayList<SecurityQuestionTO>());\n     }\n \n     @PreAuthorize(\"isAuthenticated()\")\n-    public SecurityQuestionTO read(final Long securityQuestionId) {\n-        SecurityQuestion securityQuestion = securityQuestionDAO.find(securityQuestionId);\n+    public SecurityQuestionTO read(final String key) {\n+        SecurityQuestion securityQuestion = securityQuestionDAO.find(key);\n         if (securityQuestion == null) {\n-            LOG.error(\"Could not find security question '\" + securityQuestionId + \"'\");\n+            LOG.error(\"Could not find security question '\" + key + \"'\");\n \n-            throw new NotFoundException(String.valueOf(securityQuestionId));\n+            throw new NotFoundException(String.valueOf(key));\n         }\n \n         return binder.getSecurityQuestionTO(securityQuestion);\n@@ -93,25 +93,25 @@ public SecurityQuestionTO update(final SecurityQuestionTO securityQuestionTO) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.SECURITY_QUESTION_DELETE + \"')\")\n-    public SecurityQuestionTO delete(final Long securityQuestionId) {\n-        SecurityQuestion securityQuestion = securityQuestionDAO.find(securityQuestionId);\n+    public SecurityQuestionTO delete(final String key) {\n+        SecurityQuestion securityQuestion = securityQuestionDAO.find(key);\n         if (securityQuestion == null) {\n-            LOG.error(\"Could not find security question '\" + securityQuestionId + \"'\");\n+            LOG.error(\"Could not find security question '\" + key + \"'\");\n \n-            throw new NotFoundException(String.valueOf(securityQuestionId));\n+            throw new NotFoundException(String.valueOf(key));\n         }\n \n         SecurityQuestionTO deleted = binder.getSecurityQuestionTO(securityQuestion);\n-        securityQuestionDAO.delete(securityQuestionId);\n+        securityQuestionDAO.delete(key);\n         return deleted;\n     }\n \n     @PreAuthorize(\"isAnonymous() or hasRole('\" + StandardEntitlement.ANONYMOUS + \"')\")\n-    public SecurityQuestionTO read(final String username) {\n+    public SecurityQuestionTO readForUsername(final String username) {\n         if (username == null) {\n             throw new NotFoundException(\"Null username\");\n         }\n-        User user = userDAO.find(username);\n+        User user = userDAO.findByUsername(username);\n         if (user == null) {\n             throw new NotFoundException(\"User \" + username);\n         }\n@@ -129,19 +129,19 @@ public SecurityQuestionTO read(final String username) {\n     protected SecurityQuestionTO resolveReference(final Method method, final Object... args)\n             throws UnresolvedReferenceException {\n \n-        Long key = null;\n+        String key = null;\n \n         if (ArrayUtils.isNotEmpty(args)) {\n             for (int i = 0; key == null && i < args.length; i++) {\n-                if (args[i] instanceof Long) {\n-                    key = (Long) args[i];\n+                if (args[i] instanceof String) {\n+                    key = (String) args[i];\n                 } else if (args[i] instanceof SecurityQuestionTO) {\n                     key = ((SecurityQuestionTO) args[i]).getKey();\n                 }\n             }\n         }\n \n-        if ((key != null) && !key.equals(0L)) {\n+        if (key != null) {\n             try {\n                 return binder.getSecurityQuestionTO(securityQuestionDAO.find(key));\n             } catch (Throwable ignore) {"},{"sha":"9d88b435aad29f2413c5d8ebeba3dea62807957d","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/TaskLogic.java","status":"modified","additions":18,"deletions":18,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -149,9 +149,9 @@ public <T extends SchedTaskTO> T updateSchedTask(final SchedTaskTO taskTO) {\n     public int count(\n             final TaskType type,\n             final String resource,\n-            final Long notification,\n+            final String notification,\n             final AnyTypeKind anyTypeKind,\n-            final Long anyTypeKey) {\n+            final String anyTypeKey) {\n \n         return taskDAO.count(\n                 type, resourceDAO.find(resource), notificationDAO.find(notification), anyTypeKind, anyTypeKey);\n@@ -162,9 +162,9 @@ public int count(\n     public <T extends AbstractTaskTO> List<T> list(\n             final TaskType type,\n             final String resource,\n-            final Long notification,\n+            final String notification,\n             final AnyTypeKind anyTypeKind,\n-            final Long anyTypeKey,\n+            final String anyTypeKey,\n             final int page,\n             final int size,\n             final List<OrderByClause> orderByClauses,\n@@ -182,7 +182,7 @@ public T transform(final Task task) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.TASK_READ + \"')\")\n-    public <T extends AbstractTaskTO> T read(final Long key, final boolean details) {\n+    public <T extends AbstractTaskTO> T read(final String key, final boolean details) {\n         Task task = taskDAO.find(key);\n         if (task == null) {\n             throw new NotFoundException(\"Task \" + key);\n@@ -191,7 +191,7 @@ public <T extends AbstractTaskTO> T read(final Long key, final boolean details)\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.TASK_EXECUTE + \"')\")\n-    public ExecTO execute(final Long key, final Date startAt, final boolean dryRun) {\n+    public ExecTO execute(final String key, final Date startAt, final boolean dryRun) {\n         Task task = taskDAO.find(key);\n         if (task == null) {\n             throw new NotFoundException(\"Task \" + key);\n@@ -255,7 +255,7 @@ public ExecTO execute(final Long key, final Date startAt, final boolean dryRun)\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.TASK_DELETE + \"')\")\n-    public <T extends AbstractTaskTO> T delete(final Long key) {\n+    public <T extends AbstractTaskTO> T delete(final String key) {\n         Task task = taskDAO.find(key);\n         if (task == null) {\n             throw new NotFoundException(\"Task \" + key);\n@@ -276,13 +276,13 @@ public <T extends AbstractTaskTO> T delete(final Long key) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.TASK_READ + \"')\")\n-    public int countExecutions(final Long key) {\n+    public int countExecutions(final String key) {\n         return taskExecDAO.count(key);\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.TASK_READ + \"')\")\n     public List<ExecTO> listExecutions(\n-            final Long key, final int page, final int size, final List<OrderByClause> orderByClauses) {\n+            final String key, final int page, final int size, final List<OrderByClause> orderByClauses) {\n \n         Task task = taskDAO.find(key);\n         if (task == null) {\n@@ -311,7 +311,7 @@ public ExecTO transform(final TaskExec taskExec) {\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.TASK_DELETE + \"')\")\n-    public ExecTO deleteExecution(final Long execKey) {\n+    public ExecTO deleteExecution(final String execKey) {\n         TaskExec taskExec = taskExecDAO.find(execKey);\n         if (taskExec == null) {\n             throw new NotFoundException(\"Task execution \" + execKey);\n@@ -324,7 +324,7 @@ public ExecTO deleteExecution(final Long execKey) {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.TASK_DELETE + \"')\")\n     public BulkActionResult deleteExecutions(\n-            final Long key,\n+            final String key,\n             final Date startedBefore, final Date startedAfter, final Date endedBefore, final Date endedAfter) {\n \n         Task task = taskDAO.find(key);\n@@ -348,8 +348,8 @@ public BulkActionResult deleteExecutions(\n     }\n \n     @Override\n-    protected Triple<JobType, Long, String> getReference(final JobKey jobKey) {\n-        Long key = JobNamer.getTaskKeyFromJobName(jobKey.getName());\n+    protected Triple<JobType, String, String> getReference(final JobKey jobKey) {\n+        String key = JobNamer.getTaskKeyFromJobName(jobKey.getName());\n \n         Task task = taskDAO.find(key);\n         return task == null || !(task instanceof SchedTask)\n@@ -364,7 +364,7 @@ public List<JobTO> listJobs() {\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.TASK_EXECUTE + \"')\")\n-    public void actionJob(final Long key, final JobAction action) {\n+    public void actionJob(final String key, final JobAction action) {\n         Task task = taskDAO.find(key);\n         if (task == null) {\n             throw new NotFoundException(\"Task \" + key);\n@@ -377,21 +377,21 @@ public void actionJob(final Long key, final JobAction action) {\n     protected AbstractTaskTO resolveReference(final Method method, final Object... args)\n             throws UnresolvedReferenceException {\n \n-        Long key = null;\n+        String key = null;\n \n         if (ArrayUtils.isNotEmpty(args)\n                 && !\"deleteExecution\".equals(method.getName()) && !\"readExecution\".equals(method.getName())) {\n \n             for (int i = 0; key == null && i < args.length; i++) {\n-                if (args[i] instanceof Long) {\n-                    key = (Long) args[i];\n+                if (args[i] instanceof String) {\n+                    key = (String) args[i];\n                 } else if (args[i] instanceof AbstractTaskTO) {\n                     key = ((AbstractTaskTO) args[i]).getKey();\n                 }\n             }\n         }\n \n-        if ((key != null) && !key.equals(0L)) {\n+        if (key != null) {\n             try {\n                 final Task task = taskDAO.find(key);\n                 return binder.getTaskTO(task, taskUtilsFactory.getInstance(task), false);"},{"sha":"34ab391b947bea436687d7d81297a1ddc6ffba0d","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/UserLogic.java","status":"modified","additions":17,"deletions":32,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserLogic.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -86,18 +86,6 @@ public class UserLogic extends AbstractAnyLogic<UserTO, UserPatch> {\n     @Autowired\n     protected SyncopeLogic syncopeLogic;\n \n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.USER_READ + \"')\")\n-    @Transactional(readOnly = true)\n-    public String getUsername(final Long key) {\n-        return binder.getUserTO(key).getUsername();\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + StandardEntitlement.USER_READ + \"')\")\n-    @Transactional(readOnly = true)\n-    public Long getKey(final String username) {\n-        return binder.getUserTO(username).getKey();\n-    }\n-\n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.USER_LIST + \"')\")\n     @Transactional(readOnly = true)\n     @Override\n@@ -136,7 +124,7 @@ public Pair<String, UserTO> readSelf() {\n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.USER_READ + \"')\")\n     @Transactional(readOnly = true)\n     @Override\n-    public UserTO read(final Long key) {\n+    public UserTO read(final String key) {\n         return binder.returnUserTO(binder.getUserTO(key));\n     }\n \n@@ -206,7 +194,7 @@ protected ProvisioningResult<UserTO> doCreate(\n             securityChecks(effectiveRealms, before.getLeft().getRealm(), null);\n         }\n \n-        Pair<Long, List<PropagationStatus>> created =\n+        Pair<String, List<PropagationStatus>> created =\n                 provisioningManager.create(before.getLeft(), storePassword, nullPriorityAsync);\n \n         return after(binder.returnUserTO(binder.getUserTO(created.getKey())), created.getRight(), before.getRight());\n@@ -241,15 +229,15 @@ protected ProvisioningResult<UserTO> doUpdate(\n             securityChecks(effectiveRealms, before.getLeft().getRealm().getValue(), before.getLeft().getKey());\n         }\n \n-        Pair<Long, List<PropagationStatus>> updated = provisioningManager.update(before.getLeft(), nullPriorityAsync);\n+        Pair<String, List<PropagationStatus>> updated = provisioningManager.update(before.getLeft(), nullPriorityAsync);\n \n         return after(binder.returnUserTO(binder.getUserTO(updated.getKey())), updated.getRight(), before.getRight());\n     }\n \n-    protected Pair<Long, List<PropagationStatus>> setStatusOnWfAdapter(\n+    protected Pair<String, List<PropagationStatus>> setStatusOnWfAdapter(\n             final StatusPatch statusPatch, final boolean nullPriorityAsync) {\n \n-        Pair<Long, List<PropagationStatus>> updated;\n+        Pair<String, List<PropagationStatus>> updated;\n \n         switch (statusPatch.getType()) {\n             case SUSPEND:\n@@ -279,7 +267,7 @@ public ProvisioningResult<UserTO> status(final StatusPatch statusPatch, final bo\n                 toUpdate.getRealm());\n         securityChecks(effectiveRealms, toUpdate.getRealm(), toUpdate.getKey());\n \n-        Pair<Long, List<PropagationStatus>> updated = setStatusOnWfAdapter(statusPatch, nullPriorityAsync);\n+        Pair<String, List<PropagationStatus>> updated = setStatusOnWfAdapter(statusPatch, nullPriorityAsync);\n \n         return after(\n                 binder.returnUserTO(binder.getUserTO(updated.getKey())),\n@@ -302,7 +290,7 @@ public void requestPasswordReset(final String username, final String securityAns\n             throw new NotFoundException(\"Null username\");\n         }\n \n-        User user = userDAO.find(username);\n+        User user = userDAO.findByUsername(username);\n         if (user == null) {\n             throw new NotFoundException(\"User \" + username);\n         }\n@@ -334,7 +322,7 @@ public ProvisioningResult<UserTO> selfDelete(final boolean nullPriorityAsync) {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.USER_DELETE + \"')\")\n     @Override\n-    public ProvisioningResult<UserTO> delete(final Long key, final boolean nullPriorityAsync) {\n+    public ProvisioningResult<UserTO> delete(final String key, final boolean nullPriorityAsync) {\n         UserTO userTO = binder.getUserTO(key);\n         return doDelete(userTO, false, nullPriorityAsync);\n     }\n@@ -379,7 +367,7 @@ public String transform(final Group group) {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.USER_UPDATE + \"')\")\n     @Override\n-    public UserTO unlink(final Long key, final Collection<String> resources) {\n+    public UserTO unlink(final String key, final Collection<String> resources) {\n         // security checks\n         UserTO user = binder.getUserTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n@@ -402,7 +390,7 @@ public StringPatchItem transform(final String resource) {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.USER_UPDATE + \"')\")\n     @Override\n-    public UserTO link(final Long key, final Collection<String> resources) {\n+    public UserTO link(final String key, final Collection<String> resources) {\n         // security checks\n         UserTO user = binder.getUserTO(key);\n         Set<String> effectiveRealms = getEffectiveRealms(\n@@ -426,7 +414,7 @@ public StringPatchItem transform(final String resource) {\n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.USER_UPDATE + \"')\")\n     @Override\n     public ProvisioningResult<UserTO> unassign(\n-            final Long key, final Collection<String> resources, final boolean nullPriorityAsync) {\n+            final String key, final Collection<String> resources, final boolean nullPriorityAsync) {\n \n         // security checks\n         UserTO user = binder.getUserTO(key);\n@@ -451,7 +439,7 @@ public StringPatchItem transform(final String resource) {\n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.USER_UPDATE + \"')\")\n     @Override\n     public ProvisioningResult<UserTO> assign(\n-            final Long key,\n+            final String key,\n             final Collection<String> resources,\n             final boolean changepwd,\n             final String password,\n@@ -485,7 +473,7 @@ public StringPatchItem transform(final String resource) {\n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.USER_UPDATE + \"')\")\n     @Override\n     public ProvisioningResult<UserTO> deprovision(\n-            final Long key, final Collection<String> resources, final boolean nullPriorityAsync) {\n+            final String key, final Collection<String> resources, final boolean nullPriorityAsync) {\n \n         // security checks\n         UserTO user = binder.getUserTO(key);\n@@ -505,7 +493,7 @@ public ProvisioningResult<UserTO> deprovision(\n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.USER_UPDATE + \"')\")\n     @Override\n     public ProvisioningResult<UserTO> provision(\n-            final Long key,\n+            final String key,\n             final Collection<String> resources,\n             final boolean changePwd,\n             final String password,\n@@ -533,9 +521,7 @@ protected UserTO resolveReference(final Method method, final Object... args) thr\n \n         if (!\"confirmPasswordReset\".equals(method.getName()) && ArrayUtils.isNotEmpty(args)) {\n             for (int i = 0; key == null && i < args.length; i++) {\n-                if (args[i] instanceof Long) {\n-                    key = (Long) args[i];\n-                } else if (args[i] instanceof String) {\n+                if (args[i] instanceof String) {\n                     key = (String) args[i];\n                 } else if (args[i] instanceof UserTO) {\n                     key = ((UserTO) args[i]).getKey();\n@@ -545,10 +531,9 @@ protected UserTO resolveReference(final Method method, final Object... args) thr\n             }\n         }\n \n-        if ((key != null) && !key.equals(0L)) {\n+        if (key instanceof String) {\n             try {\n-                return binder.returnUserTO(key instanceof Long\n-                        ? binder.getUserTO((Long) key) : binder.getUserTO((String) key));\n+                return binder.getUserTO((String) key);\n             } catch (Throwable ignore) {\n                 LOG.debug(\"Unresolved reference\", ignore);\n                 throw new UnresolvedReferenceException(ignore);"},{"sha":"41b89ca21063e55ac17eb7a31b082743f9f34243","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/UserWorkflowLogic.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserWorkflowLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserWorkflowLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserWorkflowLogic.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -66,7 +66,7 @@ public WorkflowFormTO claimForm(final String taskId) {\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.USER_UPDATE + \"')\")\n     public UserTO executeWorkflowTask(final UserTO userTO, final String taskId) {\n-        WorkflowResult<Long> updated = uwfAdapter.execute(userTO, taskId);\n+        WorkflowResult<String> updated = uwfAdapter.execute(userTO, taskId);\n \n         UserPatch userPatch = new UserPatch();\n         userPatch.setKey(userTO.getKey());\n@@ -84,7 +84,7 @@ public UserTO executeWorkflowTask(final UserTO userTO, final String taskId) {\n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.WORKFLOW_FORM_READ + \"') and hasRole('\"\n             + StandardEntitlement.USER_READ + \"')\")\n     @Transactional(rollbackFor = { Throwable.class })\n-    public WorkflowFormTO getFormForUser(final Long key) {\n+    public WorkflowFormTO getFormForUser(final String key) {\n         User user = userDAO.authFind(key);\n         return uwfAdapter.getForm(user.getWorkflowId());\n     }"},{"sha":"726b865fff294153e37acd2cbbd7079b1b1c6a15","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/GroupReportlet.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FGroupReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FGroupReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FGroupReportlet.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -175,8 +175,8 @@ private void doExtract(final ContentHandler handler, final List<Group> groups) t\n                 String value = null;\n                 switch (feature) {\n                     case key:\n-                        type = ReportXMLConst.XSD_LONG;\n-                        value = String.valueOf(group.getKey());\n+                        type = ReportXMLConst.XSD_STRING;\n+                        value = group.getKey();\n                         break;\n \n                     case name:\n@@ -185,13 +185,13 @@ private void doExtract(final ContentHandler handler, final List<Group> groups) t\n                         break;\n \n                     case groupOwner:\n-                        type = ReportXMLConst.XSD_LONG;\n-                        value = String.valueOf(group.getGroupOwner());\n+                        type = ReportXMLConst.XSD_STRING;\n+                        value = group.getGroupOwner().getKey();\n                         break;\n \n                     case userOwner:\n-                        type = ReportXMLConst.XSD_LONG;\n-                        value = String.valueOf(group.getUserOwner());\n+                        type = ReportXMLConst.XSD_STRING;\n+                        value = group.getUserOwner().getKey();\n                         break;\n \n                     default:\n@@ -221,8 +221,8 @@ private void doExtract(final ContentHandler handler, final List<Group> groups) t\n                 for (UMembership memb : groupDAO.findUMemberships(group)) {\n                     atts.clear();\n \n-                    atts.addAttribute(\"\", \"\", \"key\", ReportXMLConst.XSD_LONG,\n-                            String.valueOf(memb.getLeftEnd().getKey()));\n+                    atts.addAttribute(\"\", \"\", \"key\", ReportXMLConst.XSD_STRING,\n+                            memb.getLeftEnd().getKey());\n                     atts.addAttribute(\"\", \"\", \"username\", ReportXMLConst.XSD_STRING,\n                             String.valueOf(memb.getLeftEnd().getUsername()));\n "},{"sha":"2fb56da453f322a57e777ab02e1c14538f6d1b21","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/ReconciliationReportlet.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReconciliationReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReconciliationReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReconciliationReportlet.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -135,8 +135,8 @@ private void doExtract(\n             String value = null;\n             switch (feature) {\n                 case key:\n-                    type = ReportXMLConst.XSD_LONG;\n-                    value = String.valueOf(any.getKey());\n+                    type = ReportXMLConst.XSD_STRING;\n+                    value = any.getKey();\n                     break;\n \n                 case username:\n@@ -154,8 +154,8 @@ private void doExtract(\n                     break;\n \n                 case workflowId:\n-                    type = ReportXMLConst.XSD_LONG;\n-                    value = String.valueOf(any.getWorkflowId());\n+                    type = ReportXMLConst.XSD_STRING;\n+                    value = any.getWorkflowId();\n                     break;\n \n                 case status:\n@@ -421,7 +421,7 @@ protected void doExtract(final ReportletConf conf, final ContentHandler handler)\n         for (AnyType anyType : anyTypeDAO.findAll()) {\n             if (!anyType.equals(anyTypeDAO.findUser()) && !anyType.equals(anyTypeDAO.findGroup())) {\n                 AnyTypeCond anyTypeCond = new AnyTypeCond();\n-                anyTypeCond.setAnyTypeName(anyType.getKey());\n+                anyTypeCond.setAnyTypeKey(anyType.getKey());\n                 SearchCond cond = StringUtils.isBlank(this.conf.getAnyObjectMatchingCond())\n                         ? SearchCond.getLeafCond(anyTypeCond)\n                         : SearchCond.getAndCond("},{"sha":"8b140246f0695dff9c194c576fe55a91c6ad5b7c","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/ReportJob.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReportJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReportJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReportJob.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -37,7 +37,7 @@ public class ReportJob extends AbstractInterruptableJob {\n     /**\n      * Key, set by the caller, for identifying the report to be executed.\n      */\n-    private Long reportKey;\n+    private String reportKey;\n \n     @Autowired\n     private ReportJobDelegate delegate;\n@@ -47,7 +47,7 @@ public class ReportJob extends AbstractInterruptableJob {\n      *\n      * @param reportKey to be set\n      */\n-    public void setReportKey(final Long reportKey) {\n+    public void setReportKey(final String reportKey) {\n         this.reportKey = reportKey;\n     }\n "},{"sha":"2d040d90bc1e0188bd1adbf117065ceb27868d51","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/ReportJobDelegate.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReportJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReportJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FReportJobDelegate.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -75,7 +75,7 @@ public class ReportJobDelegate {\n     private ImplementationLookup implementationLookup;\n \n     @Transactional\n-    public void execute(final Long reportKey) throws JobExecutionException {\n+    public void execute(final String reportKey) throws JobExecutionException {\n         Report report = reportDAO.find(reportKey);\n         if (report == null) {\n             throw new JobExecutionException(\"Report \" + reportKey + \" not found\");"},{"sha":"38fba8a97f986686b8399b3d6d44882b371287f1","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/report/UserReportlet.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FUserReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FUserReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Freport%2FUserReportlet.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -187,8 +187,8 @@ private void doExtract(final ContentHandler handler, final List<User> users) thr\n                 String value = null;\n                 switch (feature) {\n                     case key:\n-                        type = ReportXMLConst.XSD_LONG;\n-                        value = String.valueOf(user.getKey());\n+                        type = ReportXMLConst.XSD_STRING;\n+                        value = user.getKey();\n                         break;\n \n                     case username:\n@@ -197,8 +197,8 @@ private void doExtract(final ContentHandler handler, final List<User> users) thr\n                         break;\n \n                     case workflowId:\n-                        type = ReportXMLConst.XSD_LONG;\n-                        value = String.valueOf(user.getWorkflowId());\n+                        type = ReportXMLConst.XSD_STRING;\n+                        value = user.getWorkflowId();\n                         break;\n \n                     case status:\n@@ -260,7 +260,7 @@ private void doExtract(final ContentHandler handler, final List<User> users) thr\n                     atts.clear();\n \n                     atts.addAttribute(\"\", \"\", \"anyObjectKey\",\n-                            ReportXMLConst.XSD_LONG, String.valueOf(rel.getRightKey()));\n+                            ReportXMLConst.XSD_STRING, rel.getRightKey());\n                     handler.startElement(\"\", \"\", \"relationship\", atts);\n \n                     if (conf.getFeatures().contains(Feature.resources)) {\n@@ -282,7 +282,7 @@ private void doExtract(final ContentHandler handler, final List<User> users) thr\n                     atts.clear();\n \n                     atts.addAttribute(\"\", \"\", \"groupKey\",\n-                            ReportXMLConst.XSD_LONG, String.valueOf(memb.getRightKey()));\n+                            ReportXMLConst.XSD_STRING, memb.getRightKey());\n                     atts.addAttribute(\"\", \"\", \"groupName\", ReportXMLConst.XSD_STRING, memb.getGroupName());\n                     handler.startElement(\"\", \"\", \"membership\", atts);\n "},{"sha":"b6d78fd78e1f7f80771b0da87b99a73a8db5ee88","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AnyDAO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -27,11 +27,11 @@\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n import org.apache.syncope.core.persistence.api.entity.Schema;\n \n-public interface AnyDAO<A extends Any<?>> extends DAO<A, Long> {\n+public interface AnyDAO<A extends Any<?>> extends DAO<A> {\n \n-    A authFind(Long key);\n+    A authFind(String key);\n \n-    A find(Long key);\n+    A find(String key);\n \n     A findByWorkflowId(String workflowId);\n \n@@ -78,7 +78,7 @@\n \n     A save(A any);\n \n-    void delete(Long key);\n+    void delete(String key);\n \n     void delete(A any);\n "},{"sha":"bdf964299ab159bd9a0f4982ebfeec0034db35d2","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AnyObjectDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyObjectDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyObjectDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyObjectDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -48,7 +48,7 @@ public interface AnyObjectDAO extends AnyDAO<AnyObject> {\n \n     Collection<Group> findAllGroups(AnyObject anyObject);\n \n-    Collection<Long> findAllGroupKeys(AnyObject anyObject);\n+    Collection<String> findAllGroupKeys(AnyObject anyObject);\n \n     Collection<ExternalResource> findAllResources(AnyObject anyObject);\n "},{"sha":"b93ca497d55d1eab4f091bf8c6037059f3fa3869","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AnySearchDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnySearchDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -25,7 +25,7 @@\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.persistence.api.entity.Any;\n \n-public interface AnySearchDAO extends DAO<Any<?>, Long> {\n+public interface AnySearchDAO extends DAO<Any<?>> {\n \n     /**\n      * @param adminRealms realms for which the caller owns the proper entitlement(s)"},{"sha":"3b57b0185223d59eff9ddb35ee3f8be1fca9e8e4","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AnyTypeClassDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyTypeClassDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyTypeClassDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyTypeClassDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -21,7 +21,7 @@\n import java.util.List;\n import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n \n-public interface AnyTypeClassDAO extends DAO<AnyTypeClass, String> {\n+public interface AnyTypeClassDAO extends DAO<AnyTypeClass> {\n \n     AnyTypeClass find(String key);\n "},{"sha":"1c07bcee71c60f3a71569d039ce63e6e6ee3b0fc","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/AnyTypeDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyTypeDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyTypeDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FAnyTypeDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -22,7 +22,7 @@\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n \n-public interface AnyTypeDAO extends DAO<AnyType, String> {\n+public interface AnyTypeDAO extends DAO<AnyType> {\n \n     AnyType find(String key);\n "},{"sha":"681ee67e3edeb8ae58d36dd56b0338d213b7c1cf","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/ConfDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConfDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConfDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConfDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -21,7 +21,7 @@\n import org.apache.syncope.core.persistence.api.entity.conf.CPlainAttr;\n import org.apache.syncope.core.persistence.api.entity.conf.Conf;\n \n-public interface ConfDAO extends DAO<Conf, Long> {\n+public interface ConfDAO extends DAO<Conf> {\n \n     CPlainAttr find(String key);\n "},{"sha":"a7ba370727f53574d12819889145a3ad862e2c2c","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/ConnInstanceDAO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConnInstanceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConnInstanceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FConnInstanceDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -21,13 +21,13 @@\n import java.util.List;\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n \n-public interface ConnInstanceDAO extends DAO<ConnInstance, Long> {\n+public interface ConnInstanceDAO extends DAO<ConnInstance> {\n \n-    ConnInstance find(Long key);\n+    ConnInstance find(String key);\n \n     List<ConnInstance> findAll();\n \n     ConnInstance save(ConnInstance connector);\n \n-    void delete(Long key);\n+    void delete(String key);\n }"},{"sha":"04ea153c248a61a2d72ee7c0be1b8727ac8f7d0e","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/DAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -20,7 +20,7 @@\n \n import org.apache.syncope.core.persistence.api.entity.Entity;\n \n-public interface DAO<E extends Entity<KEY>, KEY> {\n+public interface DAO<E extends Entity> {\n \n     void refresh(E entity);\n "},{"sha":"5bc1e6d49dfdc8cec5d6cc1677fd32413279cd36","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/DomainDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDomainDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDomainDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FDomainDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -21,7 +21,7 @@\n import java.util.List;\n import org.apache.syncope.core.persistence.api.entity.Domain;\n \n-public interface DomainDAO extends DAO<Domain, String> {\n+public interface DomainDAO extends DAO<Domain> {\n \n     Domain find(String key);\n "},{"sha":"94914a9a92c569697fad9cd73b6455d718188c02","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/ExternalResourceDAO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FExternalResourceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FExternalResourceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FExternalResourceDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -25,13 +25,13 @@\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.resource.Provision;\n \n-public interface ExternalResourceDAO extends DAO<ExternalResource, String> {\n+public interface ExternalResourceDAO extends DAO<ExternalResource> {\n \n     int count();\n \n     ExternalResource find(String key);\n \n-    Provision findProvision(Long key);\n+    Provision findProvision(String key);\n \n     List<Provision> findProvisionsByAuxClass(AnyTypeClass anyTypeClass);\n "},{"sha":"f0a5b08df3e177b0de105d144d12613b420de91d","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/GroupDAO.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FGroupDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FGroupDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FGroupDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -35,11 +35,13 @@ public interface GroupDAO extends AnyDAO<Group> {\n \n     Map<String, Integer> countByRealm();\n \n-    Group find(String name);\n+    Group findByName(String name);\n \n-    List<Group> findOwnedByUser(Long userKey);\n+    Group authFindByName(String name);\n \n-    List<Group> findOwnedByGroup(Long groupKey);\n+    List<Group> findOwnedByUser(String userKey);\n+\n+    List<Group> findOwnedByGroup(String groupKey);\n \n     List<AMembership> findAMemberships(Group group);\n \n@@ -52,7 +54,7 @@ public interface GroupDAO extends AnyDAO<Group> {\n      * @return map containing pairs with any object key and operations to be performed on those resources (DELETE,\n      * typically).\n      */\n-    Map<Long, PropagationByResource> findAnyObjectsWithTransitiveResources(Long groupKey);\n+    Map<String, PropagationByResource> findAnyObjectsWithTransitiveResources(String groupKey);\n \n     /**\n      * Finds users having resources assigned exclusively because of memberships of the given group.\n@@ -61,7 +63,7 @@ public interface GroupDAO extends AnyDAO<Group> {\n      * @return map containing pairs with user key and operations to be performed on those resources (DELETE,\n      * typically).\n      */\n-    Map<Long, PropagationByResource> findUsersWithTransitiveResources(Long groupKey);\n+    Map<String, PropagationByResource> findUsersWithTransitiveResources(String groupKey);\n \n     List<TypeExtension> findTypeExtensions(AnyTypeClass anyTypeClass);\n "},{"sha":"55a5db7e73d37ccb6cd6614b520f800768b62a8b","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/LoggerDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FLoggerDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FLoggerDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FLoggerDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -22,7 +22,7 @@\n import org.apache.syncope.common.lib.types.LoggerType;\n import org.apache.syncope.core.persistence.api.entity.Logger;\n \n-public interface LoggerDAO extends DAO<Logger, String> {\n+public interface LoggerDAO extends DAO<Logger> {\n \n     Logger find(String key);\n "},{"sha":"9f409185f2b8f7b5f047bbf1714762d1d1c6037c","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/MailTemplateDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FMailTemplateDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FMailTemplateDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FMailTemplateDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -21,7 +21,7 @@\n import java.util.List;\n import org.apache.syncope.core.persistence.api.entity.MailTemplate;\n \n-public interface MailTemplateDAO extends DAO<MailTemplate, String> {\n+public interface MailTemplateDAO extends DAO<MailTemplate> {\n \n     MailTemplate find(String key);\n "},{"sha":"569e6db1963645e3ffca0b379a758995b3f4a7d7","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/NotificationDAO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FNotificationDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FNotificationDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FNotificationDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -22,15 +22,15 @@\n import org.apache.syncope.core.persistence.api.entity.MailTemplate;\n import org.apache.syncope.core.persistence.api.entity.Notification;\n \n-public interface NotificationDAO extends DAO<Notification, Long> {\n+public interface NotificationDAO extends DAO<Notification> {\n \n-    Notification find(Long key);\n+    Notification find(String key);\n \n     List<Notification> findByTemplate(MailTemplate template);\n \n     List<Notification> findAll();\n \n     Notification save(Notification notification);\n \n-    void delete(Long key);\n+    void delete(String key);\n }"},{"sha":"204aade529a08dd1bb0db7b5aca332e86456da48","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/PlainAttrDAO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPlainAttrDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPlainAttrDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPlainAttrDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -20,11 +20,11 @@\n \n import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n \n-public interface PlainAttrDAO extends DAO<PlainAttr<?>, Long> {\n+public interface PlainAttrDAO extends DAO<PlainAttr<?>> {\n \n-    <T extends PlainAttr<?>> T find(Long key, Class<T> reference);\n+    <T extends PlainAttr<?>> T find(String key, Class<T> reference);\n \n-    <T extends PlainAttr<?>> void delete(Long key, Class<T> reference);\n+    <T extends PlainAttr<?>> void delete(String key, Class<T> reference);\n \n     <T extends PlainAttr<?>> void delete(T attr);\n }"},{"sha":"36a2b92a546d22512e6979461593fec3077cb882","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/PlainAttrValueDAO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPlainAttrValueDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPlainAttrValueDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPlainAttrValueDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -21,15 +21,15 @@\n import java.util.List;\n import org.apache.syncope.core.persistence.api.entity.PlainAttrValue;\n \n-public interface PlainAttrValueDAO extends DAO<PlainAttrValue, Long> {\n+public interface PlainAttrValueDAO extends DAO<PlainAttrValue> {\n \n-    <T extends PlainAttrValue> T find(Long key, Class<T> reference);\n+    <T extends PlainAttrValue> T find(String key, Class<T> reference);\n \n     <T extends PlainAttrValue> List<T> findAll(Class<T> reference);\n \n     <T extends PlainAttrValue> T save(T attributeValue);\n \n-    <T extends PlainAttrValue> void delete(Long key, Class<T> reference);\n+    <T extends PlainAttrValue> void delete(String key, Class<T> reference);\n \n     <T extends PlainAttrValue> void delete(T attributeValue);\n }"},{"sha":"245758b5b65870ae54e5bbfb7c1cc71f79787e36","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/PolicyDAO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPolicyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPolicyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FPolicyDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -23,9 +23,9 @@\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.Policy;\n \n-public interface PolicyDAO extends DAO<Policy, Long> {\n+public interface PolicyDAO extends DAO<Policy> {\n \n-    <T extends Policy> T find(Long key);\n+    <T extends Policy> T find(String key);\n \n     <T extends Policy> List<T> find(Class<T> reference);\n "},{"sha":"42bd7b94e368cce3a4c79e8f32455273a6585921","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/RealmDAO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRealmDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRealmDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRealmDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -23,15 +23,15 @@\n import org.apache.syncope.core.persistence.api.entity.Policy;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n \n-public interface RealmDAO extends DAO<Realm, Long> {\n+public interface RealmDAO extends DAO<Realm> {\n \n     Pattern PATH_PATTERN = Pattern.compile(\"^(/[A-Za-z0-9]+)+\");\n \n     Realm getRoot();\n \n-    Realm find(Long key);\n+    Realm find(String key);\n \n-    Realm find(String fullPath);\n+    Realm findByFullPath(String fullPath);\n \n     <T extends Policy> List<Realm> findByPolicy(T policy);\n \n@@ -47,5 +47,5 @@ public interface RealmDAO extends DAO<Realm, Long> {\n \n     void delete(Realm realm);\n \n-    void delete(Long key);\n+    void delete(String key);\n }"},{"sha":"5388e1b289280c4acb43f43da9a9da566fa47cff","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/RelationshipTypeDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRelationshipTypeDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRelationshipTypeDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRelationshipTypeDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -21,7 +21,7 @@\n import java.util.List;\n import org.apache.syncope.core.persistence.api.entity.RelationshipType;\n \n-public interface RelationshipTypeDAO extends DAO<RelationshipType, String> {\n+public interface RelationshipTypeDAO extends DAO<RelationshipType> {\n \n     RelationshipType find(String key);\n "},{"sha":"89f07ff641bf95f0c2750f3269783799ef675a08","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/ReportDAO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -22,17 +22,17 @@\n import org.apache.syncope.core.persistence.api.entity.Report;\n import org.apache.syncope.core.persistence.api.entity.ReportTemplate;\n \n-public interface ReportDAO extends DAO<Report, Long> {\n+public interface ReportDAO extends DAO<Report> {\n \n-    Report find(Long key);\n+    Report find(String key);\n \n     List<Report> findByTemplate(ReportTemplate template);\n \n     List<Report> findAll();\n \n     Report save(Report report);\n \n-    void delete(Long key);\n+    void delete(String key);\n \n     void delete(Report report);\n }"},{"sha":"f4c1fcf3cb07e17797e092b5c7d27f103ae474f8","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/ReportExecDAO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportExecDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportExecDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportExecDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -23,9 +23,9 @@\n import org.apache.syncope.core.persistence.api.entity.Report;\n import org.apache.syncope.core.persistence.api.entity.ReportExec;\n \n-public interface ReportExecDAO extends DAO<ReportExec, Long> {\n+public interface ReportExecDAO extends DAO<ReportExec> {\n \n-    ReportExec find(Long key);\n+    ReportExec find(String key);\n \n     List<ReportExec> findRecent(int max);\n \n@@ -37,7 +37,7 @@ public interface ReportExecDAO extends DAO<ReportExec, Long> {\n \n     ReportExec save(ReportExec execution);\n \n-    void delete(Long key);\n+    void delete(String key);\n \n     void delete(ReportExec execution);\n }"},{"sha":"3274660c2aad9d9a626f3c83df1a41ce482e93c1","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/ReportTemplateDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportTemplateDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportTemplateDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FReportTemplateDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -21,7 +21,7 @@\n import java.util.List;\n import org.apache.syncope.core.persistence.api.entity.ReportTemplate;\n \n-public interface ReportTemplateDAO extends DAO<ReportTemplate, String> {\n+public interface ReportTemplateDAO extends DAO<ReportTemplate> {\n \n     ReportTemplate find(String key);\n "},{"sha":"c5ff0e8d1b6afa314bbc4321f5c010dcecdaa6b9","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/RoleDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRoleDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRoleDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FRoleDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -23,7 +23,7 @@\n import org.apache.syncope.core.persistence.api.entity.Role;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n \n-public interface RoleDAO extends DAO<Role, String> {\n+public interface RoleDAO extends DAO<Role> {\n \n     int count();\n "},{"sha":"6a51d79dfde0f3f2d32f692f594c4c6968417d49","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/SchemaDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FSchemaDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -23,7 +23,7 @@\n import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n import org.apache.syncope.core.persistence.api.entity.Schema;\n \n-public interface SchemaDAO<S extends Schema> extends DAO<S, String> {\n+public interface SchemaDAO<S extends Schema> extends DAO<S> {\n \n     S find(String name);\n "},{"sha":"a632292d62913d357533380dd6cf7778ad46034d","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/SecurityQuestionDAO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FSecurityQuestionDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FSecurityQuestionDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FSecurityQuestionDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -21,14 +21,14 @@\n import java.util.List;\n import org.apache.syncope.core.persistence.api.entity.user.SecurityQuestion;\n \n-public interface SecurityQuestionDAO extends DAO<SecurityQuestion, Long> {\n+public interface SecurityQuestionDAO extends DAO<SecurityQuestion> {\n \n-    SecurityQuestion find(Long key);\n+    SecurityQuestion find(String key);\n \n     List<SecurityQuestion> findAll();\n \n     SecurityQuestion save(SecurityQuestion securityQuestion);\n \n-    void delete(Long key);\n+    void delete(String key);\n \n }"},{"sha":"c39bf94b1b0878a29e829197cf8150639f6ec347","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/TaskDAO.java","status":"modified","additions":16,"deletions":6,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -26,26 +26,36 @@\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.api.entity.task.Task;\n \n-public interface TaskDAO extends DAO<Task, Long> {\n+public interface TaskDAO extends DAO<Task> {\n \n     Class<? extends Task> getEntityReference(TaskType type);\n \n-    <T extends Task> T find(Long key);\n+    <T extends Task> T find(String key);\n \n     <T extends Task> List<T> findToExec(TaskType type);\n \n     <T extends Task> List<T> findAll(TaskType type);\n \n     <T extends Task> List<T> findAll(\n-            TaskType type, ExternalResource resource, Notification notification, AnyTypeKind anyTypeKind, Long anyKey,\n-            int page, int itemsPerPage, List<OrderByClause> orderByClauses);\n+            TaskType type,\n+            ExternalResource resource,\n+            Notification notification,\n+            AnyTypeKind anyTypeKind,\n+            String anyKey,\n+            int page,\n+            int itemsPerPage,\n+            List<OrderByClause> orderByClauses);\n \n     int count(\n-            TaskType type, ExternalResource resource, Notification notification, AnyTypeKind anyTypeKind, Long anyKey);\n+            TaskType type,\n+            ExternalResource resource,\n+            Notification notification,\n+            AnyTypeKind anyTypeKind,\n+            String anyKey);\n \n     <T extends Task> T save(T task);\n \n-    void delete(Long key);\n+    void delete(String key);\n \n     void delete(Task task);\n "},{"sha":"703ad74f81516995373cc5dbd7c762e71fdebf45","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/TaskExecDAO.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskExecDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskExecDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FTaskExecDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -24,9 +24,9 @@\n import org.apache.syncope.core.persistence.api.entity.task.Task;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n \n-public interface TaskExecDAO extends DAO<TaskExec, Long> {\n+public interface TaskExecDAO extends DAO<TaskExec> {\n \n-    TaskExec find(Long key);\n+    TaskExec find(String key);\n \n     List<TaskExec> findRecent(int max);\n \n@@ -37,15 +37,15 @@ public interface TaskExecDAO extends DAO<TaskExec, Long> {\n     <T extends Task> List<TaskExec> findAll(\n             T task, Date startedBefore, Date startedAfter, Date endedBefore, Date endedAfter);\n \n-    int count(Long taskKey);\n+    int count(String taskKey);\n \n     <T extends Task> List<TaskExec> findAll(T task, int page, int itemsPerPage, List<OrderByClause> orderByClauses);\n \n     TaskExec save(TaskExec execution);\n \n-    void saveAndAdd(Long taskId, TaskExec execution);\n+    void saveAndAdd(String taskKey, TaskExec execution);\n \n-    void delete(Long key);\n+    void delete(String key);\n \n     void delete(TaskExec execution);\n }"},{"sha":"dce9a1ea1d979414d654bd4bd5f1f1397c06c78c","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/UserDAO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2FUserDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -36,9 +36,9 @@ public interface UserDAO extends AnyDAO<User> {\n \n     Map<String, Integer> countByStatus();\n \n-    User authFind(String username);\n+    User authFindByUsername(String username);\n \n-    User find(String username);\n+    User findByUsername(String username);\n \n     User findByToken(String token);\n \n@@ -52,7 +52,7 @@ public interface UserDAO extends AnyDAO<User> {\n \n     Collection<Group> findAllGroups(User user);\n \n-    Collection<Long> findAllGroupKeys(User user);\n+    Collection<String> findAllGroupKeys(User user);\n \n     Collection<ExternalResource> findAllResources(User user);\n "},{"sha":"5072fc17c33b68002a9aa48e43630e671136a8ab","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/search/AnyTypeCond.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FAnyTypeCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FAnyTypeCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FAnyTypeCond.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -22,19 +22,19 @@ public class AnyTypeCond extends AbstractSearchCond {\n \n     private static final long serialVersionUID = 4298076973281246633L;\n \n-    private String anyTypeName;\n+    private String anyTypeKey;\n \n-    public String getAnyTypeName() {\n-        return anyTypeName;\n+    public String getAnyTypeKey() {\n+        return anyTypeKey;\n     }\n \n-    public void setAnyTypeName(final String anyTypeName) {\n-        this.anyTypeName = anyTypeName;\n+    public void setAnyTypeKey(final String anyTypeKey) {\n+        this.anyTypeKey = anyTypeKey;\n     }\n \n     @Override\n     public boolean isValid() {\n-        return anyTypeName != null;\n+        return anyTypeKey != null;\n     }\n \n }"},{"sha":"7f9bca5b50ccfd0fbe1e21d0680b95244f799354","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/search/MembershipCond.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FMembershipCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FMembershipCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FMembershipCond.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -22,13 +22,13 @@ public class MembershipCond extends AbstractSearchCond {\n \n     private static final long serialVersionUID = -728155256293925989L;\n \n-    private Long groupKey;\n+    private String groupKey;\n \n-    public Long getGroupKey() {\n+    public String getGroupKey() {\n         return groupKey;\n     }\n \n-    public void setGroupKey(final Long groupKey) {\n+    public void setGroupKey(final String groupKey) {\n         this.groupKey = groupKey;\n     }\n "},{"sha":"587634f33cbdac949ddf145321a9552a6feeeaa5","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/search/RelationshipCond.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FRelationshipCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FRelationshipCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FRelationshipCond.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -22,13 +22,13 @@ public class RelationshipCond extends AbstractSearchCond {\n \n     private static final long serialVersionUID = 6865985945516722103L;\n \n-    private Long anyObjectKey;\n+    private String anyObjectKey;\n \n-    public Long getAnyObjectKey() {\n+    public String getAnyObjectKey() {\n         return anyObjectKey;\n     }\n \n-    public void setAnyObjectKey(final Long anyObjectKey) {\n+    public void setAnyObjectKey(final String anyObjectKey) {\n         this.anyObjectKey = anyObjectKey;\n     }\n "},{"sha":"a20f3e6c3d3b1c5e186f84b0ffe23ec17511830e","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/search/ResourceCond.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FResourceCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FResourceCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FResourceCond.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -25,18 +25,18 @@ public class ResourceCond extends AbstractSearchCond {\n \n     private static final long serialVersionUID = 466054166309460002L;\n \n-    private String resourceName;\n+    private String resourceKey;\n \n-    public String getResourceName() {\n-        return resourceName;\n+    public String getResourceKey() {\n+        return resourceKey;\n     }\n \n-    public void setResourceName(final String resourceName) {\n-        this.resourceName = resourceName;\n+    public void setResourceKey(final String resourceKey) {\n+        this.resourceKey = resourceKey;\n     }\n \n     @Override\n     public final boolean isValid() {\n-        return resourceName != null;\n+        return resourceKey != null;\n     }\n }"},{"sha":"5b4b9267d8b5508fabcec500d48f2b296ccb7156","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/dao/search/SearchCond.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FSearchCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FSearchCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fdao%2Fsearch%2FSearchCond.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -313,7 +313,7 @@ public String hasAnyTypeCond() {\n             case LEAF:\n             case NOT_LEAF:\n                 if (anyTypeCond != null) {\n-                    anyTypeName = anyTypeCond.getAnyTypeName();\n+                    anyTypeName = anyTypeCond.getAnyTypeKey();\n                 }\n                 break;\n "},{"sha":"7792b4142a4cd961d3f9c77861a7364f818bf1ed","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/AnnotatedEntity.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnnotatedEntity.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnnotatedEntity.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnnotatedEntity.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -20,7 +20,7 @@\n \n import java.util.Date;\n \n-public interface AnnotatedEntity<KEY> extends Entity<KEY> {\n+public interface AnnotatedEntity extends Entity {\n \n     Date getCreationDate();\n "},{"sha":"b1580e3d8966bc967e4478048724017f1487a24a","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Any.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAny.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAny.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAny.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -21,7 +21,7 @@\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import java.util.List;\n \n-public interface Any<P extends PlainAttr<?>> extends AnnotatedEntity<Long> {\n+public interface Any<P extends PlainAttr<?>> extends AnnotatedEntity {\n \n     AnyType getType();\n "},{"sha":"ba3180c768f6e8400cc4af43cbce8e04e6d6ec83","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/AnyAbout.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnyAbout.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnyAbout.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnyAbout.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.core.persistence.api.entity;\n \n-public interface AnyAbout extends Entity<Long> {\n+public interface AnyAbout extends Entity {\n \n     Notification getNotification();\n "},{"sha":"25aa66626ad3e634176e4b4b4ee5fad01c85eadc","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/AnyTemplate.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnyTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnyTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnyTemplate.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -20,7 +20,7 @@\n \n import org.apache.syncope.common.lib.to.AnyTO;\n \n-public interface AnyTemplate extends Entity<Long> {\n+public interface AnyTemplate extends Entity {\n \n     AnyType getAnyType();\n "},{"sha":"0d89facbdbe8ce8a4f8eeaeabb9a6aeff2371cb0","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/AnyType.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnyType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnyType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnyType.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -21,9 +21,7 @@\n import java.util.List;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n \n-public interface AnyType extends Entity<String> {\n-\n-    void setKey(String key);\n+public interface AnyType extends ProvidedKeyEntity {\n \n     AnyTypeKind getKind();\n "},{"sha":"c7906df050e9ca670916efb0d1a3a737482449f3","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/AnyTypeClass.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnyTypeClass.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnyTypeClass.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAnyTypeClass.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -20,9 +20,7 @@\n \n import java.util.List;\n \n-public interface AnyTypeClass extends Entity<String> {\n-\n-    void setKey(String key);\n+public interface AnyTypeClass extends ProvidedKeyEntity {\n \n     boolean add(PlainSchema schema);\n "},{"sha":"90650a229ee01a3002b02fc4dd1572f1ac9de165","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/ConnInstance.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FConnInstance.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FConnInstance.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FConnInstance.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -18,13 +18,13 @@\n  */\n package org.apache.syncope.core.persistence.api.entity;\n \n-import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import java.util.List;\n import java.util.Set;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.types.ConnectorCapability;\n+import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n \n-public interface ConnInstance extends Entity<Long> {\n+public interface ConnInstance extends Entity {\n \n     void setConnectorName(String connectorName);\n "},{"sha":"dab10745ecbcd8467e30af407bd6c6e8202c693f","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Domain.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FDomain.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FDomain.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FDomain.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -20,9 +20,7 @@\n \n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n \n-public interface Domain extends Entity<String> {\n-\n-    void setKey(String name);\n+public interface Domain extends ProvidedKeyEntity {\n \n     String getAdminPwd();\n "},{"sha":"c3bcea9faea6343ec840385202c9109e3175b942","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/DynMembership.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FDynMembership.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FDynMembership.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FDynMembership.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -20,7 +20,7 @@\n \n import java.util.List;\n \n-public interface DynMembership<A extends Any<?>> extends Entity<Long> {\n+public interface DynMembership<A extends Any<?>> extends Entity {\n \n     String getFIQLCond();\n "},{"sha":"1f59d0b34cada4270c6f39313145f98b61ad5765","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Entity.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FEntity.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FEntity.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FEntity.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -20,7 +20,7 @@\n \n import java.io.Serializable;\n \n-public interface Entity<KEY> extends Serializable {\n+public interface Entity extends Serializable {\n \n-    KEY getKey();\n+    String getKey();\n }"},{"sha":"29be9ed41fb0eac368706f6008904369035a5cfa","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/EntityFactory.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FEntityFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FEntityFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FEntityFactory.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -1,5 +1,3 @@\n-package org.apache.syncope.core.persistence.api.entity;\n-\n /*\n  * Licensed to the Apache Software Foundation (ASF) under one\n  * or more contributor license agreements. See the NOTICE file\n@@ -18,9 +16,11 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+package org.apache.syncope.core.persistence.api.entity;\n+\n public interface EntityFactory {\n \n-    <KEY, T extends Entity<KEY>> T newEntity(Class<T> reference);\n+    <E extends Entity> E newEntity(Class<E> reference);\n \n     ConnPoolConf newConnPoolConf();\n }"},{"sha":"3f34ae16e080afec57657634664543e1905938c9","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Exec.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FExec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FExec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FExec.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -20,7 +20,7 @@\n \n import java.util.Date;\n \n-public interface Exec extends Entity<Long> {\n+public interface Exec extends Entity {\n \n     /**\n      * Set a message for this execution, taking care of replacing every null character with newline."},{"sha":"85b7d5a51480f699106a17ee4aea605729cb874e","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/LinkingMappingItem.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FLinkingMappingItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FLinkingMappingItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FLinkingMappingItem.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -39,8 +39,8 @@ public LinkingMappingItem(final VirSchema virSchema) {\n     }\n \n     @Override\n-    public Long getKey() {\n-        return -1L;\n+    public String getKey() {\n+        return null;\n     }\n \n     @Override"},{"sha":"875854b38c103542f8220c2a081907ec95aa74dc","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Logger.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FLogger.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FLogger.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FLogger.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -21,7 +21,7 @@\n import org.apache.syncope.common.lib.types.LoggerLevel;\n import org.apache.syncope.common.lib.types.LoggerType;\n \n-public interface Logger extends Entity<String> {\n+public interface Logger extends Entity {\n \n     void setKey(String name);\n "},{"sha":"1218d257790582ca38d28f587b1b067b0f86cc23","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/MailTemplate.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FMailTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FMailTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FMailTemplate.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -18,9 +18,7 @@\n  */\n package org.apache.syncope.core.persistence.api.entity;\n \n-public interface MailTemplate extends Entity<String> {\n-\n-    void setKey(String key);\n+public interface MailTemplate extends ProvidedKeyEntity {\n \n     String getTextTemplate();\n "},{"sha":"38a053f692a9f5d1aeb40b96dcca3b53b2787143","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Notification.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FNotification.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FNotification.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FNotification.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -22,7 +22,7 @@\n import org.apache.syncope.common.lib.types.IntMappingType;\n import org.apache.syncope.common.lib.types.TraceLevel;\n \n-public interface Notification extends Entity<Long> {\n+public interface Notification extends Entity {\n \n     List<String> getEvents();\n "},{"sha":"2e44dcea67f057d7255607d0699b3051d2adcf8b","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/PlainAttr.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPlainAttr.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPlainAttr.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPlainAttr.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -20,7 +20,7 @@\n \n import java.util.List;\n \n-public interface PlainAttr<A extends Any<?>> extends Entity<Long> {\n+public interface PlainAttr<A extends Any<?>> extends Entity {\n \n     A getOwner();\n "},{"sha":"87eac8f844653791ff76692564577967438641d9","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/PlainAttrValue.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPlainAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPlainAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPlainAttrValue.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -21,7 +21,7 @@\n import java.util.Date;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n \n-public interface PlainAttrValue extends Entity<Long> {\n+public interface PlainAttrValue extends Entity {\n \n     PlainAttr<?> getAttr();\n "},{"sha":"85fc90eb15abb9009e7240cadff6ef76ce2928b5","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Policy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPolicy.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.core.persistence.api.entity;\n \n-public interface Policy extends Entity<Long> {\n+public interface Policy extends Entity {\n \n     String getDescription();\n "},{"sha":"ccf23a992d577f29f6306866e77e538a540089e3","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/ProvidedKeyEntity.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FProvidedKeyEntity.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FProvidedKeyEntity.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FProvidedKeyEntity.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.persistence.api.entity;\n+\n+public interface ProvidedKeyEntity extends Entity {\n+\n+    void setKey(String key);\n+\n+}"},{"sha":"c30912d64a077ad943755c162912e808e7d8541e","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Realm.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRealm.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -23,7 +23,7 @@\n import org.apache.syncope.core.persistence.api.entity.policy.AccountPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n \n-public interface Realm extends Entity<Long> {\n+public interface Realm extends Entity {\n \n     String getName();\n "},{"sha":"170ec0d3a22a0d15af9c405f651454bcf4a4288e","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Relationship.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRelationship.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRelationship.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRelationship.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.core.persistence.api.entity;\n \n-public interface Relationship<L extends Any<?>, R extends Any<?>> extends Entity<Long> {\n+public interface Relationship<L extends Any<?>, R extends Any<?>> extends Entity {\n \n     RelationshipType getType();\n "},{"sha":"142a7f6465342e51653b8c10ff3a9edb604dda4d","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/RelationshipType.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRelationshipType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRelationshipType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRelationshipType.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -18,9 +18,7 @@\n  */\n package org.apache.syncope.core.persistence.api.entity;\n \n-public interface RelationshipType extends Entity<String> {\n-\n-    void setKey(String key);\n+public interface RelationshipType extends ProvidedKeyEntity {\n \n     String getDescription();\n "},{"sha":"3e5123351aff476b433077dbaceaf46c36c46b4a","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Report.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FReport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FReport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FReport.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -21,7 +21,7 @@\n import java.util.List;\n import org.apache.syncope.common.lib.report.ReportletConf;\n \n-public interface Report extends Entity<Long> {\n+public interface Report extends Entity {\n \n     String getName();\n "},{"sha":"fc4062faaa3cc3d5e3b9c3961c96aea5488634c2","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/ReportTemplate.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FReportTemplate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FReportTemplate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FReportTemplate.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -18,9 +18,7 @@\n  */\n package org.apache.syncope.core.persistence.api.entity;\n \n-public interface ReportTemplate extends Entity<String> {\n-\n-    void setKey(String key);\n+public interface ReportTemplate extends ProvidedKeyEntity {\n \n     String getFOTemplate();\n "},{"sha":"60d62f146aa8ed28e7de66db195363520e5eb05e","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Role.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FRole.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -22,9 +22,7 @@\n import java.util.List;\n import java.util.Set;\n \n-public interface Role extends Entity<String> {\n-\n-    void setKey(String name);\n+public interface Role extends ProvidedKeyEntity {\n \n     Set<String> getEntitlements();\n "},{"sha":"544408fef05985846b14f8f34a833356263421ae","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Schema.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSchema.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -20,7 +20,7 @@\n \n import org.apache.syncope.common.lib.types.AttrSchemaType;\n \n-public interface Schema extends Entity<String> {\n+public interface Schema extends ProvidedKeyEntity {\n \n     AnyTypeClass getAnyTypeClass();\n \n@@ -36,6 +36,4 @@ public interface Schema extends Entity<String> {\n \n     boolean isUniqueConstraint();\n \n-    void setKey(String name);\n-\n }"},{"sha":"ac5fda00f4921d2ea0ccf271b218811e11176394","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/anyobject/AnyObject.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fanyobject%2FAnyObject.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fanyobject%2FAnyObject.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fanyobject%2FAnyObject.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -27,17 +27,17 @@ public interface AnyObject extends Any<APlainAttr> {\n \n     boolean add(ARelationship relationship);\n \n-    ARelationship getRelationship(RelationshipType relationshipType, Long anyObjectKey);\n+    ARelationship getRelationship(RelationshipType relationshipType, String anyObjectKey);\n \n-    Collection<? extends ARelationship> getRelationships(Long anyObjectKey);\n+    Collection<? extends ARelationship> getRelationships(String anyObjectKey);\n \n     Collection<? extends ARelationship> getRelationships(RelationshipType relationshipType);\n \n     List<? extends ARelationship> getRelationships();\n \n     boolean add(AMembership membership);\n \n-    AMembership getMembership(Long membershipKey);\n+    AMembership getMembership(String membershipKey);\n \n     List<? extends AMembership> getMemberships();\n "},{"sha":"f17a1c21e0508a86c780979c48d45cee3497aab1","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/conf/Conf.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fconf%2FConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fconf%2FConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fconf%2FConf.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -20,10 +20,9 @@\n \n import java.util.List;\n import org.apache.syncope.core.persistence.api.entity.Any;\n+import org.apache.syncope.core.persistence.api.entity.ProvidedKeyEntity;\n \n-public interface Conf extends Any<CPlainAttr> {\n-\n-    void setKey(Long key);\n+public interface Conf extends Any<CPlainAttr>, ProvidedKeyEntity {\n \n     @Override\n     boolean add(CPlainAttr attr);"},{"sha":"effc2f56a5e6bb7790bc53d3e5025176738f4730","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/group/TypeExtension.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FTypeExtension.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FTypeExtension.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fgroup%2FTypeExtension.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -23,7 +23,7 @@\n import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n \n-public interface TypeExtension extends Entity<Long> {\n+public interface TypeExtension extends Entity {\n \n     Group getGroup();\n "},{"sha":"cb16679ff408d9f13ce28e3ae5dec2c3b11a8efe","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/resource/ExternalResource.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FExternalResource.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -24,16 +24,14 @@\n import org.apache.syncope.common.lib.types.ConnectorCapability;\n import org.apache.syncope.common.lib.types.TraceLevel;\n import org.apache.syncope.core.persistence.api.entity.policy.AccountPolicy;\n-import org.apache.syncope.core.persistence.api.entity.AnnotatedEntity;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.ConnInstance;\n+import org.apache.syncope.core.persistence.api.entity.ProvidedKeyEntity;\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n import org.apache.syncope.core.persistence.api.entity.policy.PullPolicy;\n import org.identityconnectors.framework.common.objects.ObjectClass;\n \n-public interface ExternalResource extends AnnotatedEntity<String> {\n-\n-    void setKey(String key);\n+public interface ExternalResource extends ProvidedKeyEntity {\n \n     ConnInstance getConnector();\n "},{"sha":"5c14f1828b404c36651301c19d54188857e6d346","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/resource/Mapping.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FMapping.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FMapping.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FMapping.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -21,7 +21,7 @@\n import java.util.List;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n \n-public interface Mapping extends Entity<Long> {\n+public interface Mapping extends Entity {\n \n     Provision getProvision();\n "},{"sha":"abbf69cb54a1fa14f05e63c404e1712445b6de58","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/resource/MappingItem.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FMappingItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FMappingItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FMappingItem.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -23,7 +23,7 @@\n import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n \n-public interface MappingItem extends Entity<Long> {\n+public interface MappingItem extends Entity {\n \n     Mapping getMapping();\n "},{"sha":"0a898785d385713746d55339b7a3034f7bef7b17","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/resource/Provision.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FProvision.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FProvision.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fresource%2FProvision.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -25,7 +25,7 @@\n import org.identityconnectors.framework.common.objects.ObjectClass;\n import org.identityconnectors.framework.common.objects.SyncToken;\n \n-public interface Provision extends Entity<Long> {\n+public interface Provision extends Entity {\n \n     ExternalResource getResource();\n "},{"sha":"f7d83d155dffb49a20c846baef3cd1dbd129df94","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/NotificationTask.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FNotificationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FNotificationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FNotificationTask.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -29,9 +29,9 @@ public interface NotificationTask extends Task {\n \n     void setNotification(Notification notification);\n \n-    Long getAnyKey();\n+    String getAnyKey();\n \n-    void setAnyKey(Long anyKey);\n+    void setAnyKey(String anyKey);\n \n     AnyTypeKind getAnyTypeKind();\n "},{"sha":"4014fce457b4323bf251b72d66004334c41afb38","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/PropagationTask.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPropagationTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPropagationTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPropagationTask.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -48,9 +48,9 @@ public interface PropagationTask extends Task {\n \n     void setOperation(ResourceOperation operation);\n \n-    Long getAnyKey();\n+    String getAnyKey();\n \n-    void setAnyKey(Long anyKey);\n+    void setAnyKey(String anyKey);\n \n     AnyTypeKind getAnyTypeKind();\n "},{"sha":"8a00d57d2de669e0e752094f2335145519ede5b6","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/PushTaskAnyFilter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTaskAnyFilter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTaskAnyFilter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FPushTaskAnyFilter.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -21,7 +21,7 @@\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n \n-public interface PushTaskAnyFilter extends Entity<Long> {\n+public interface PushTaskAnyFilter extends Entity {\n \n     PushTask getPushTask();\n "},{"sha":"708c2c823ed973d76073395fb144173a947140d8","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/Task.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FTask.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -21,7 +21,7 @@\n import java.util.List;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n \n-public interface Task extends Entity<Long> {\n+public interface Task extends Entity {\n \n     boolean add(TaskExec exec);\n "},{"sha":"c0a1f9ece59a52354716a570a640ef452115039c","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/user/SecurityQuestion.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fuser%2FSecurityQuestion.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fuser%2FSecurityQuestion.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fuser%2FSecurityQuestion.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -20,7 +20,7 @@\n \n import org.apache.syncope.core.persistence.api.entity.Entity;\n \n-public interface SecurityQuestion extends Entity<Long> {\n+public interface SecurityQuestion extends Entity {\n \n     String getContent();\n "},{"sha":"b7e14bfca37aa535f1d0269b57685a180bec6e9f","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/user/User.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Fuser%2FUser.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -107,17 +107,17 @@ public interface User extends Any<UPlainAttr> {\n \n     boolean add(URelationship relationship);\n \n-    URelationship getRelationship(RelationshipType relationshipType, Long anyObjectKey);\n+    URelationship getRelationship(RelationshipType relationshipType, String anyObjectKey);\n \n-    Collection<? extends URelationship> getRelationships(Long anyObjectKey);\n+    Collection<? extends URelationship> getRelationships(String anyObjectKey);\n \n     Collection<? extends URelationship> getRelationships(RelationshipType relationshipType);\n \n     List<? extends URelationship> getRelationships();\n \n     boolean add(UMembership membership);\n \n-    UMembership getMembership(Long groupKey);\n+    UMembership getMembership(String groupKey);\n \n     List<? extends UMembership> getMemberships();\n }"},{"sha":"d5c7bcc6e60e824a5d3c33d025e2b0e3f30accda","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/search/SearchCondVisitor.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondVisitor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondVisitor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondVisitor.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -93,25 +93,25 @@ private SearchCond visitPrimitive(final SearchCondition<SearchBean> sc) {\n                     switch (specialAttrName) {\n                         case TYPE:\n                             AnyTypeCond typeCond = new AnyTypeCond();\n-                            typeCond.setAnyTypeName(value);\n+                            typeCond.setAnyTypeKey(value);\n                             leaf = SearchCond.getLeafCond(typeCond);\n                             break;\n \n                         case RESOURCES:\n                             ResourceCond resourceCond = new ResourceCond();\n-                            resourceCond.setResourceName(value);\n+                            resourceCond.setResourceKey(value);\n                             leaf = SearchCond.getLeafCond(resourceCond);\n                             break;\n \n                         case GROUPS:\n                             MembershipCond groupCond = new MembershipCond();\n-                            groupCond.setGroupKey(Long.valueOf(value));\n+                            groupCond.setGroupKey(value);\n                             leaf = SearchCond.getLeafCond(groupCond);\n                             break;\n \n                         case RELATIONSHIPS:\n                             RelationshipCond relationshipCond = new RelationshipCond();\n-                            relationshipCond.setAnyObjectKey(Long.valueOf(value));\n+                            relationshipCond.setAnyObjectKey(value);\n                             leaf = SearchCond.getLeafCond(relationshipCond);\n                             break;\n "},{"sha":"07c2d29f31dc0efca7dcdc182b1f441dadedffa1","filename":"core/persistence-api/src/test/java/org/apache/syncope/core/persistence/api/search/SearchCondConverterTest.java","status":"modified","additions":10,"deletions":8,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondConverterTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-api%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondConverterTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fsearch%2FSearchCondConverterTest.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -90,11 +90,12 @@ public void isNotNull() {\n \n     @Test\n     public void relationships() {\n-        String fiqlExpression = new UserFiqlSearchConditionBuilder().inRelationships(1L).query();\n-        assertEquals(SpecialAttr.RELATIONSHIPS + \"==1\", fiqlExpression);\n+        String fiqlExpression = new UserFiqlSearchConditionBuilder().\n+                inRelationships(\"ca20ffca-1305-442f-be9a-3723a0cd88ca\").query();\n+        assertEquals(SpecialAttr.RELATIONSHIPS + \"==ca20ffca-1305-442f-be9a-3723a0cd88ca\", fiqlExpression);\n \n         RelationshipCond relationshipCond = new RelationshipCond();\n-        relationshipCond.setAnyObjectKey(1L);\n+        relationshipCond.setAnyObjectKey(\"ca20ffca-1305-442f-be9a-3723a0cd88ca\");\n         SearchCond simpleCond = SearchCond.getLeafCond(relationshipCond);\n \n         assertEquals(simpleCond, SearchCondConverter.convert(fiqlExpression));\n@@ -119,11 +120,12 @@ public void relationshipTypes() {\n \n     @Test\n     public void groups() {\n-        String fiqlExpression = new UserFiqlSearchConditionBuilder().inGroups(1L).query();\n-        assertEquals(SpecialAttr.GROUPS + \"==1\", fiqlExpression);\n+        String fiqlExpression = new UserFiqlSearchConditionBuilder().\n+                inGroups(\"e7ff94e8-19c9-4f0a-b8b7-28327edbf6ed\").query();\n+        assertEquals(SpecialAttr.GROUPS + \"==e7ff94e8-19c9-4f0a-b8b7-28327edbf6ed\", fiqlExpression);\n \n         MembershipCond groupCond = new MembershipCond();\n-        groupCond.setGroupKey(1L);\n+        groupCond.setGroupKey(\"e7ff94e8-19c9-4f0a-b8b7-28327edbf6ed\");\n         SearchCond simpleCond = SearchCond.getLeafCond(groupCond);\n \n         assertEquals(simpleCond, SearchCondConverter.convert(fiqlExpression));\n@@ -147,7 +149,7 @@ public void resources() {\n         assertEquals(SpecialAttr.RESOURCES + \"==resource-ldap\", fiqlExpression);\n \n         ResourceCond resCond = new ResourceCond();\n-        resCond.setResourceName(\"resource-ldap\");\n+        resCond.setResourceKey(\"resource-ldap\");\n         SearchCond simpleCond = SearchCond.getLeafCond(resCond);\n \n         assertEquals(simpleCond, SearchCondConverter.convert(fiqlExpression));\n@@ -171,7 +173,7 @@ public void type() {\n         assertEquals(SpecialAttr.TYPE + \"==PRINTER\", fiqlExpression);\n \n         AnyTypeCond acond = new AnyTypeCond();\n-        acond.setAnyTypeName(\"PRINTER\");\n+        acond.setAnyTypeKey(\"PRINTER\");\n         SearchCond simpleCond = SearchCond.getLeafCond(acond);\n \n         assertEquals(simpleCond, SearchCondConverter.convert(fiqlExpression));"},{"sha":"a902aa7f40e04cd5371dbc042330d02d2ffb758b","filename":"core/persistence-jpa/pom.xml","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fpom.xml?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -55,6 +55,10 @@ under the License.\n       <groupId>org.apache.openjpa</groupId>\n       <artifactId>openjpa-persistence-jdbc</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>com.fasterxml.uuid</groupId>\n+      <artifactId>java-uuid-generator</artifactId>\n+    </dependency>\n     \n     <dependency>\n       <groupId>org.apache.commons</groupId>\n@@ -157,7 +161,7 @@ under the License.\n           </dependency>\n         </dependencies>\n         <configuration>\n-          <persistenceXmlFile>${project.basedir}/src/test/resources/META-INF/persistence-enhance.xml</persistenceXmlFile> \n+          <persistenceXmlFile>${project.basedir}/src/main/resources/persistence-enhance.xml</persistenceXmlFile> \n           <includes>org/apache/syncope/core/persistence/jpa/entity/**/*.class</includes>\n           <connectionDriverName>org.springframework.jdbc.datasource.DriverManagerDataSource</connectionDriverName>\n           <connectionProperties>"},{"sha":"d09b76547c4f1d11ad4c7d66f3ee4516b40b7b96","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractAnyDAO.java","status":"modified","additions":26,"deletions":26,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -63,7 +63,7 @@\n import org.springframework.transaction.annotation.Propagation;\n import org.springframework.transaction.annotation.Transactional;\n \n-public abstract class AbstractAnyDAO<A extends Any<?>> extends AbstractDAO<A, Long> implements AnyDAO<A> {\n+public abstract class AbstractAnyDAO<A extends Any<?>> extends AbstractDAO<A> implements AnyDAO<A> {\n \n     @Autowired\n     protected PlainSchemaDAO plainSchemaDAO;\n@@ -91,7 +91,7 @@ protected AnyUtils getAnyUtils() {\n \n     @Transactional(readOnly = true)\n     @Override\n-    public A authFind(final Long key) {\n+    public A authFind(final String key) {\n         if (key == null) {\n             throw new NotFoundException(\"Null key\");\n         }\n@@ -110,7 +110,7 @@ public A authFind(final Long key) {\n     @Transactional(readOnly = true)\n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public A find(final Long key) {\n+    public A find(final String key) {\n         return (A) entityManager().find(getAnyUtils().anyClass(), key);\n     }\n \n@@ -133,7 +133,7 @@ public A findByWorkflowId(final String workflowId) {\n \n     private Query findByAttrValueQuery(final String entityName) {\n         return entityManager().createQuery(\"SELECT e FROM \" + entityName + \" e\"\n-                + \" WHERE e.attribute.schema.name = :schemaName AND (e.stringValue IS NOT NULL\"\n+                + \" WHERE e.attribute.schema.key = :schemaKey AND (e.stringValue IS NOT NULL\"\n                 + \" AND e.stringValue = :stringValue)\"\n                 + \" OR (e.booleanValue IS NOT NULL AND e.booleanValue = :booleanValue)\"\n                 + \" OR (e.dateValue IS NOT NULL AND e.dateValue = :dateValue)\"\n@@ -143,18 +143,18 @@ private Query findByAttrValueQuery(final String entityName) {\n \n     @Override\n     @SuppressWarnings(\"unchecked\")\n-    public List<A> findByAttrValue(final String schemaName, final PlainAttrValue attrValue) {\n-        PlainSchema schema = plainSchemaDAO.find(schemaName);\n+    public List<A> findByAttrValue(final String schemaKey, final PlainAttrValue attrValue) {\n+        PlainSchema schema = plainSchemaDAO.find(schemaKey);\n         if (schema == null) {\n-            LOG.error(\"Invalid schema name '{}'\", schemaName);\n+            LOG.error(\"Invalid schema name '{}'\", schemaKey);\n             return Collections.<A>emptyList();\n         }\n \n         String entityName = schema.isUniqueConstraint()\n                 ? getAnyUtils().plainAttrUniqueValueClass().getName()\n                 : getAnyUtils().plainAttrValueClass().getName();\n         Query query = findByAttrValueQuery(entityName);\n-        query.setParameter(\"schemaName\", schemaName);\n+        query.setParameter(\"schemaKey\", schemaKey);\n         query.setParameter(\"stringValue\", attrValue.getStringValue());\n         query.setParameter(\"booleanValue\", attrValue.getBooleanValue() == null\n                 ? null\n@@ -179,18 +179,18 @@ public List<A> findByAttrValue(final String schemaName, final PlainAttrValue att\n     }\n \n     @Override\n-    public A findByAttrUniqueValue(final String schemaName, final PlainAttrValue attrUniqueValue) {\n-        PlainSchema schema = plainSchemaDAO.find(schemaName);\n+    public A findByAttrUniqueValue(final String schemaKey, final PlainAttrValue attrUniqueValue) {\n+        PlainSchema schema = plainSchemaDAO.find(schemaKey);\n         if (schema == null) {\n-            LOG.error(\"Invalid schema name '{}'\", schemaName);\n+            LOG.error(\"Invalid schema name '{}'\", schemaKey);\n             return null;\n         }\n         if (!schema.isUniqueConstraint()) {\n-            LOG.error(\"This schema has not unique constraint: '{}'\", schemaName);\n+            LOG.error(\"This schema has not unique constraint: '{}'\", schemaKey);\n             return null;\n         }\n \n-        List<A> result = findByAttrValue(schemaName, attrUniqueValue);\n+        List<A> result = findByAttrValue(schemaKey, attrUniqueValue);\n         return result.isEmpty()\n                 ? null\n                 : result.iterator().next();\n@@ -294,8 +294,8 @@ public int compare(final String t, final String t1) {\n                 // verify schema existence and get schema type\n                 PlainSchema schema = plainSchemaDAO.find(identifiers.get(i));\n                 if (schema == null) {\n-                    LOG.error(\"Invalid schema name '{}'\", identifiers.get(i));\n-                    throw new IllegalArgumentException(\"Invalid schema name \" + identifiers.get(i));\n+                    LOG.error(\"Invalid schema key '{}'\", identifiers.get(i));\n+                    throw new IllegalArgumentException(\"Invalid schema key \" + identifiers.get(i));\n                 }\n \n                 // clear builder\n@@ -304,13 +304,13 @@ public int compare(final String t, final String t1) {\n                 bld.append(\"(\");\n \n                 // set schema name\n-                bld.append(\"s.name = '\").append(identifiers.get(i)).append(\"'\");\n+                bld.append(\"s.key = '\").append(identifiers.get(i)).append(\"'\");\n \n                 bld.append(\" AND \");\n \n-                bld.append(\"s.name = a.schema_name\").append(\" AND \");\n+                bld.append(\"s.key = a.schema_key\").append(\" AND \");\n \n-                bld.append(\"a.id = v.attribute_id\");\n+                bld.append(\"a.key = v.attribute_key\");\n \n                 bld.append(\" AND \");\n \n@@ -346,10 +346,10 @@ public int compare(final String t, final String t1) {\n     }\n \n     @Override\n-    public List<A> findByDerAttrValue(final String schemaName, final String value) {\n-        DerSchema schema = derSchemaDAO.find(schemaName);\n+    public List<A> findByDerAttrValue(final String schemaKey, final String value) {\n+        DerSchema schema = derSchemaDAO.find(schemaKey);\n         if (schema == null) {\n-            LOG.error(\"Invalid schema name '{}'\", schemaName);\n+            LOG.error(\"Invalid schema name '{}'\", schemaKey);\n             return Collections.<A>emptyList();\n         }\n \n@@ -360,10 +360,10 @@ public List<A> findByDerAttrValue(final String schemaName, final String value) {\n         for (String clause : getWhereClause(schema.getExpression(), value)) {\n             if (querystring.length() > 0) {\n                 subquery = true;\n-                querystring.append(\" AND a.owner_id IN ( \");\n+                querystring.append(\" AND a.owner_key IN ( \");\n             }\n \n-            querystring.append(\"SELECT a.owner_id \").\n+            querystring.append(\"SELECT a.owner_key \").\n                     append(\"FROM \").append(getAnyUtils().plainAttrClass().getSimpleName().substring(3)).append(\" a, \").\n                     append(getAnyUtils().plainAttrValueClass().getSimpleName().substring(3)).append(\" v, \").\n                     append(PlainSchema.class.getSimpleName()).append(\" s \").\n@@ -378,7 +378,7 @@ public List<A> findByDerAttrValue(final String schemaName, final String value) {\n \n         List<A> result = new ArrayList<>();\n         for (Object anyKey : query.getResultList()) {\n-            A any = find(Long.parseLong(anyKey.toString()));\n+            A any = find(anyKey.toString());\n             if (!result.contains(any)) {\n                 result.add(any);\n             }\n@@ -405,7 +405,7 @@ public final List<A> findAll() {\n \n     private SearchCond getAllMatchingCond() {\n         AnyCond idCond = new AnyCond(AttributeCond.Type.ISNOTNULL);\n-        idCond.setSchema(\"id\");\n+        idCond.setSchema(\"key\");\n         return SearchCond.getLeafCond(idCond);\n     }\n \n@@ -464,7 +464,7 @@ public A save(final A any) {\n     }\n \n     @Override\n-    public void delete(final Long key) {\n+    public void delete(final String key) {\n         A any = find(key);\n         if (any == null) {\n             return;"},{"sha":"5b16737fb2bf57d89d450721138d104fcd2c465a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -29,7 +29,7 @@\n import org.springframework.orm.jpa.EntityManagerFactoryUtils;\n \n @Configurable\n-public abstract class AbstractDAO<E extends Entity<KEY>, KEY> implements DAO<E, KEY> {\n+public abstract class AbstractDAO<E extends Entity> implements DAO<E> {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(DAO.class);\n "},{"sha":"37dcccfe27ca94b15cf729c7990daaa47fff3ebf","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnyObjectDAO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyObjectDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -184,8 +184,8 @@ public Group transform(final AMembership input) {\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW, readOnly = true)\n     @Override\n-    public Collection<Long> findAllGroupKeys(final AnyObject anyObject) {\n-        return CollectionUtils.collect(findAllGroups(anyObject), EntityUtils.<Long, Group>keyTransformer());\n+    public Collection<String> findAllGroupKeys(final AnyObject anyObject) {\n+        return CollectionUtils.collect(findAllGroups(anyObject), EntityUtils.<Group>keyTransformer());\n     }\n \n     @Transactional(propagation = Propagation.REQUIRES_NEW, readOnly = true)\n@@ -204,7 +204,7 @@ public Collection<ExternalResource> findAllResources(final AnyObject anyObject)\n     @Override\n     public Collection<String> findAllResourceNames(final AnyObject anyObject) {\n         return CollectionUtils.collect(\n-                findAllResources(anyObject), EntityUtils.<String, ExternalResource>keyTransformer());\n+                findAllResources(anyObject), EntityUtils.<ExternalResource>keyTransformer());\n     }\n \n }"},{"sha":"950436028925b74c1ade3e9a9e18b0514ed946d8","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnySearchDAO.java","status":"modified","additions":87,"deletions":89,"changes":176,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnySearchDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -72,9 +72,9 @@\n import org.springframework.util.ReflectionUtils;\n \n @Repository\n-public class JPAAnySearchDAO extends AbstractDAO<Any<?>, Long> implements AnySearchDAO {\n+public class JPAAnySearchDAO extends AbstractDAO<Any<?>> implements AnySearchDAO {\n \n-    private static final String EMPTY_QUERY = \"SELECT any_id FROM user_search_attr WHERE 1=2\";\n+    private static final String EMPTY_QUERY = \"SELECT any_key FROM user_search_attr WHERE 1=2\";\n \n     @Autowired\n     private RealmDAO realmDAO;\n@@ -94,31 +94,35 @@ public class JPAAnySearchDAO extends AbstractDAO<Any<?>, Long> implements AnySea\n     @Autowired\n     private AnyUtilsFactory anyUtilsFactory;\n \n-    private String getAdminRealmsFilter(final Set<String> adminRealms, final SearchSupport svs) {\n-        Set<Long> realmKeys = new HashSet<>();\n+    private String getAdminRealmsFilter(\n+            final Set<String> adminRealms,\n+            final SearchSupport svs,\n+            final List<Object> parameters) {\n+\n+        Set<String> realmKeys = new HashSet<>();\n         for (String realmPath : RealmUtils.normalize(adminRealms)) {\n-            Realm realm = realmDAO.find(realmPath);\n+            Realm realm = realmDAO.findByFullPath(realmPath);\n             if (realm == null) {\n                 LOG.warn(\"Ignoring invalid realm {}\", realmPath);\n             } else {\n                 CollectionUtils.collect(\n-                        realmDAO.findDescendants(realm), EntityUtils.<Long, Realm>keyTransformer(), realmKeys);\n+                        realmDAO.findDescendants(realm), EntityUtils.<Realm>keyTransformer(), realmKeys);\n             }\n         }\n \n         StringBuilder adminRealmFilter = new StringBuilder().\n-                append(\"SELECT any_id FROM \").append(svs.field().name).\n-                append(\" WHERE realm_id IN (SELECT id AS realm_id FROM Realm\");\n+                append(\"SELECT any_key FROM \").append(svs.field().name).\n+                append(\" WHERE realm_key IN (SELECT key AS realm_key FROM Realm\");\n \n         boolean firstRealm = true;\n-        for (Long realmKey : realmKeys) {\n+        for (String realmKey : realmKeys) {\n             if (firstRealm) {\n                 adminRealmFilter.append(\" WHERE\");\n                 firstRealm = false;\n             } else {\n                 adminRealmFilter.append(\" OR\");\n             }\n-            adminRealmFilter.append(\" id = \").append(realmKey);\n+            adminRealmFilter.append(\" key=?\").append(setParameter(parameters, realmKey));\n         }\n \n         adminRealmFilter.append(')');\n@@ -135,13 +139,13 @@ public int count(final Set<String> adminRealms, final SearchCond searchCondition\n         StringBuilder queryString = getQuery(searchCondition, parameters, svs);\n \n         // 2. take into account administrative realms\n-        queryString.insert(0, \"SELECT u.any_id FROM (\");\n-        queryString.append(\") u WHERE any_id IN (\");\n-        queryString.append(getAdminRealmsFilter(adminRealms, svs)).append(')');\n+        queryString.insert(0, \"SELECT u.any_key FROM (\");\n+        queryString.append(\") u WHERE any_key IN (\");\n+        queryString.append(getAdminRealmsFilter(adminRealms, svs, parameters)).append(')');\n \n         // 3. prepare the COUNT query\n-        queryString.insert(0, \"SELECT COUNT(any_id) FROM (\");\n-        queryString.append(\") count_any_id\");\n+        queryString.insert(0, \"SELECT COUNT(any_key) FROM (\");\n+        queryString.append(\") count_any_key\");\n \n         Query countQuery = entityManager().createNativeQuery(queryString.toString());\n         fillWithParameters(countQuery, parameters);\n@@ -209,8 +213,8 @@ public <T extends Any<?>> boolean matches(\n             matches = false;\n         } else {\n             // 2. take into account the passed user\n-            queryString.insert(0, \"SELECT u.any_id FROM (\");\n-            queryString.append(\") u WHERE any_id=?\").append(setParameter(parameters, any.getKey()));\n+            queryString.insert(0, \"SELECT u.any_key FROM (\");\n+            queryString.append(\") u WHERE any_key=?\").append(setParameter(parameters, any.getKey()));\n \n             // 3. prepare the search query\n             Query query = entityManager().createNativeQuery(queryString.toString());\n@@ -250,7 +254,7 @@ private void fillWithParameters(final Query query, final List<Object> parameters\n     }\n \n     private StringBuilder buildSelect(final OrderBySupport orderBySupport) {\n-        final StringBuilder select = new StringBuilder(\"SELECT u.any_id\");\n+        final StringBuilder select = new StringBuilder(\"SELECT u.any_key\");\n \n         for (OrderBySupport.Item obs : orderBySupport.items) {\n             select.append(',').append(obs.select);\n@@ -275,15 +279,15 @@ private StringBuilder buildWhere(final OrderBySupport orderBySupport, final AnyT\n         }\n         where.append(\" WHERE \");\n         for (SearchSupport.SearchView searchView : orderBySupport.views) {\n-            where.append(\"u.any_id=\").append(searchView.alias).append(\".any_id AND \");\n+            where.append(\"u.any_key=\").append(searchView.alias).append(\".any_key AND \");\n         }\n \n         for (OrderBySupport.Item obs : orderBySupport.items) {\n             if (StringUtils.isNotBlank(obs.where)) {\n                 where.append(obs.where).append(\" AND \");\n             }\n         }\n-        where.append(\"u.any_id IN (\");\n+        where.append(\"u.any_key IN (\");\n \n         return where;\n     }\n@@ -312,8 +316,7 @@ private OrderBySupport parseOrderBy(final AnyTypeKind type, final SearchSupport\n         for (OrderByClause clause : orderByClauses) {\n             OrderBySupport.Item obs = new OrderBySupport.Item();\n \n-            // Manage difference among external key attribute and internal JPA @Id\n-            String fieldName = \"key\".equals(clause.getField()) ? \"id\" : clause.getField();\n+            String fieldName = clause.getField();\n \n             Field anyField = ReflectionUtils.findField(attrUtils.anyClass(), fieldName);\n             if (anyField == null) {\n@@ -327,7 +330,7 @@ private OrderBySupport parseOrderBy(final AnyTypeKind type, final SearchSupport\n                                 append(\" AS \").append(fieldName).toString();\n                         obs.where = new StringBuilder().\n                                 append(svs.uniqueAttr().alias).\n-                                append(\".schema_name='\").append(fieldName).append(\"'\").toString();\n+                                append(\".schema_key='\").append(fieldName).append(\"'\").toString();\n                         obs.orderBy = fieldName + \" \" + clause.getDirection().name();\n                     } else {\n                         orderBySupport.views.add(svs.attr());\n@@ -337,7 +340,7 @@ private OrderBySupport parseOrderBy(final AnyTypeKind type, final SearchSupport\n                                 append(\" AS \").append(fieldName).toString();\n                         obs.where = new StringBuilder().\n                                 append(svs.attr().alias).\n-                                append(\".schema_name='\").append(fieldName).append(\"'\").toString();\n+                                append(\".schema_key='\").append(fieldName).append(\"'\").toString();\n                         obs.orderBy = fieldName + \" \" + clause.getDirection().name();\n                     }\n                 }\n@@ -380,7 +383,7 @@ private <T extends Any<?>> List<T> doSearch(final Set<String> adminRealms,\n             queryString.append(')').append(buildWhere(orderBySupport, typeKind));\n         }\n         queryString.\n-                append(getAdminRealmsFilter(adminRealms, svs)).append(')').\n+                append(getAdminRealmsFilter(adminRealms, svs, parameters)).append(')').\n                 append(buildOrderBy(orderBySupport));\n \n         // 3. prepare the search query\n@@ -400,17 +403,17 @@ private <T extends Any<?>> List<T> doSearch(final Set<String> adminRealms,\n         List<T> result = new ArrayList<>();\n \n         for (Object anyKey : query.getResultList()) {\n-            long actualKey = anyKey instanceof Object[]\n-                    ? ((Number) ((Object[]) anyKey)[0]).longValue()\n-                    : ((Number) anyKey).longValue();\n+            String actualKey = anyKey instanceof Object[]\n+                    ? (String) ((Object[]) anyKey)[0]\n+                    : ((String) anyKey);\n \n             T any = typeKind == AnyTypeKind.USER\n                     ? (T) userDAO.find(actualKey)\n                     : typeKind == AnyTypeKind.GROUP\n                             ? (T) groupDAO.find(actualKey)\n                             : (T) anyObjectDAO.find(actualKey);\n             if (any == null) {\n-                LOG.error(\"Could not find {} with id {}, even though returned by the native query\",\n+                LOG.error(\"Could not find {} with key {}, even though returned by the native query\",\n                         typeKind, actualKey);\n             } else if (!result.contains(any)) {\n                 result.add(any);\n@@ -464,14 +467,14 @@ private StringBuilder getQuery(final SearchCond nodeCond, final List<Object> par\n \n             case AND:\n                 query.append(getQuery(nodeCond.getLeftNodeCond(), parameters, svs)).\n-                        append(\" AND any_id IN ( \").\n+                        append(\" AND any_key IN ( \").\n                         append(getQuery(nodeCond.getRightNodeCond(), parameters, svs)).\n                         append(\")\");\n                 break;\n \n             case OR:\n                 query.append(getQuery(nodeCond.getLeftNodeCond(), parameters, svs)).\n-                        append(\" OR any_id IN ( \").\n+                        append(\" OR any_key IN ( \").\n                         append(getQuery(nodeCond.getRightNodeCond(), parameters, svs)).\n                         append(\")\");\n                 break;\n@@ -485,36 +488,36 @@ private StringBuilder getQuery(final SearchCond nodeCond, final List<Object> par\n     private String getQuery(final AnyTypeCond cond, final boolean not, final List<Object> parameters,\n             final SearchSupport svs) {\n \n-        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \").\n-                append(svs.field().name).append(\" WHERE type_name\");\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_key FROM \").\n+                append(svs.field().name).append(\" WHERE type_key\");\n \n         if (not) {\n             query.append(\"<>\");\n         } else {\n             query.append('=');\n         }\n \n-        query.append('?').append(setParameter(parameters, cond.getAnyTypeName()));\n+        query.append('?').append(setParameter(parameters, cond.getAnyTypeKey()));\n \n         return query.toString();\n     }\n \n     private String getQuery(final RelationshipTypeCond cond, final boolean not, final List<Object> parameters,\n             final SearchSupport svs) {\n \n-        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \").\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_key FROM \").\n                 append(svs.field().name).append(\" WHERE \");\n \n         if (not) {\n-            query.append(\"any_id NOT IN (\");\n+            query.append(\"any_key NOT IN (\");\n         } else {\n-            query.append(\"any_id IN (\");\n+            query.append(\"any_key IN (\");\n         }\n \n-        query.append(\"SELECT any_id \").append(\"FROM \").\n+        query.append(\"SELECT any_key \").append(\"FROM \").\n                 append(svs.relationship().name).\n                 append(\" WHERE type=?\").append(setParameter(parameters, cond.getRelationshipTypeKey())).\n-                append(\" UNION SELECT right_any_id AS any_id FROM \").\n+                append(\" UNION SELECT right_any_key AS any_key FROM \").\n                 append(svs.relationship().name).\n                 append(\" WHERE type=?\").append(setParameter(parameters, cond.getRelationshipTypeKey())).\n                 append(')');\n@@ -525,18 +528,18 @@ private String getQuery(final RelationshipTypeCond cond, final boolean not, fina\n     private String getQuery(final RelationshipCond cond, final boolean not, final List<Object> parameters,\n             final SearchSupport svs) {\n \n-        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \").\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_key FROM \").\n                 append(svs.field().name).append(\" WHERE \");\n \n         if (not) {\n-            query.append(\"any_id NOT IN (\");\n+            query.append(\"any_key NOT IN (\");\n         } else {\n-            query.append(\"any_id IN (\");\n+            query.append(\"any_key IN (\");\n         }\n \n-        query.append(\"SELECT DISTINCT any_id \").append(\"FROM \").\n+        query.append(\"SELECT DISTINCT any_key \").append(\"FROM \").\n                 append(svs.relationship().name).append(\" WHERE \").\n-                append(\"right_any_id=?\").append(setParameter(parameters, cond.getAnyObjectKey())).\n+                append(\"right_any_key=?\").append(setParameter(parameters, cond.getAnyObjectKey())).\n                 append(')');\n \n         return query.toString();\n@@ -545,29 +548,29 @@ private String getQuery(final RelationshipCond cond, final boolean not, final Li\n     private String getQuery(final MembershipCond cond, final boolean not, final List<Object> parameters,\n             final SearchSupport svs) {\n \n-        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \").\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_key FROM \").\n                 append(svs.field().name).append(\" WHERE \");\n \n         if (not) {\n-            query.append(\"any_id NOT IN (\");\n+            query.append(\"any_key NOT IN (\");\n         } else {\n-            query.append(\"any_id IN (\");\n+            query.append(\"any_key IN (\");\n         }\n \n-        query.append(\"SELECT DISTINCT any_id \").append(\"FROM \").\n+        query.append(\"SELECT DISTINCT any_key \").append(\"FROM \").\n                 append(svs.membership().name).append(\" WHERE \").\n-                append(\"group_id=?\").append(setParameter(parameters, cond.getGroupKey())).\n+                append(\"group_key=?\").append(setParameter(parameters, cond.getGroupKey())).\n                 append(')');\n \n         if (not) {\n-            query.append(\"AND any_id NOT IN (\");\n+            query.append(\"AND any_key NOT IN (\");\n         } else {\n-            query.append(\"OR any_id IN (\");\n+            query.append(\"OR any_key IN (\");\n         }\n \n-        query.append(\"SELECT DISTINCT any_id \").append(\"FROM \").\n+        query.append(\"SELECT DISTINCT any_key \").append(\"FROM \").\n                 append(svs.dyngroupmembership().name).append(\" WHERE \").\n-                append(\"group_id=?\").append(setParameter(parameters, cond.getGroupKey())).\n+                append(\"group_key=?\").append(setParameter(parameters, cond.getGroupKey())).\n                 append(')');\n \n         return query.toString();\n@@ -576,29 +579,29 @@ private String getQuery(final MembershipCond cond, final boolean not, final List\n     private String getQuery(final RoleCond cond, final boolean not, final List<Object> parameters,\n             final SearchSupport svs) {\n \n-        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \").\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_key FROM \").\n                 append(svs.field().name).append(\" WHERE \");\n \n         if (not) {\n-            query.append(\"any_id NOT IN (\");\n+            query.append(\"any_key NOT IN (\");\n         } else {\n-            query.append(\"any_id IN (\");\n+            query.append(\"any_key IN (\");\n         }\n \n-        query.append(\"SELECT DISTINCT any_id \").append(\"FROM \").\n+        query.append(\"SELECT DISTINCT any_key \").append(\"FROM \").\n                 append(svs.role().name).append(\" WHERE \").\n-                append(\"role_name=?\").append(setParameter(parameters, cond.getRoleKey())).\n+                append(\"role_key=?\").append(setParameter(parameters, cond.getRoleKey())).\n                 append(')');\n \n         if (not) {\n-            query.append(\"AND any_id NOT IN (\");\n+            query.append(\"AND any_key NOT IN (\");\n         } else {\n-            query.append(\"OR any_id IN (\");\n+            query.append(\"OR any_key IN (\");\n         }\n \n-        query.append(\"SELECT DISTINCT any_id \").append(\"FROM \").\n+        query.append(\"SELECT DISTINCT any_key \").append(\"FROM \").\n                 append(svs.dynrolemembership().name).append(\" WHERE \").\n-                append(\"role_name=?\").append(setParameter(parameters, cond.getRoleKey())).\n+                append(\"role_key=?\").append(setParameter(parameters, cond.getRoleKey())).\n                 append(')');\n \n         return query.toString();\n@@ -607,25 +610,25 @@ private String getQuery(final RoleCond cond, final boolean not, final List<Objec\n     private String getQuery(final ResourceCond cond, final boolean not, final List<Object> parameters,\n             final SearchSupport svs) {\n \n-        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \").\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_key FROM \").\n                 append(svs.field().name).append(\" WHERE \");\n \n         if (not) {\n-            query.append(\"any_id NOT IN (\");\n+            query.append(\"any_key NOT IN (\");\n         } else {\n-            query.append(\"any_id IN (\");\n+            query.append(\"any_key IN (\");\n         }\n \n-        query.append(\"SELECT DISTINCT any_id FROM \").\n+        query.append(\"SELECT DISTINCT any_key FROM \").\n                 append(svs.resource().name).\n-                append(\" WHERE resource_name=?\").\n-                append(setParameter(parameters, cond.getResourceName()));\n+                append(\" WHERE resource_key=?\").\n+                append(setParameter(parameters, cond.getResourceKey()));\n \n         if (svs.anyTypeKind() == AnyTypeKind.USER) {\n-            query.append(\" UNION SELECT DISTINCT any_id FROM \").\n+            query.append(\" UNION SELECT DISTINCT any_key FROM \").\n                     append(svs.groupResource().name).\n-                    append(\" WHERE resource_name=?\").\n-                    append(setParameter(parameters, cond.getResourceName()));\n+                    append(\" WHERE resource_key=?\").\n+                    append(setParameter(parameters, cond.getResourceKey()));\n         }\n \n         query.append(')');\n@@ -634,21 +637,21 @@ private String getQuery(final ResourceCond cond, final boolean not, final List<O\n     }\n \n     private String getQuery(final AssignableCond cond, final List<Object> parameters, final SearchSupport svs) {\n-        Realm realm = realmDAO.find(cond.getRealmFullPath());\n+        Realm realm = realmDAO.findByFullPath(cond.getRealmFullPath());\n         if (realm == null) {\n             return EMPTY_QUERY;\n         }\n \n-        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \").\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_key FROM \").\n                 append(svs.field().name).append(\" WHERE (\");\n         if (cond.isFromGroup()) {\n             for (Realm current = realm; current.getParent() != null; current = current.getParent()) {\n-                query.append(\"realm_id=?\").append(setParameter(parameters, current.getKey())).append(\" OR \");\n+                query.append(\"realm_key=?\").append(setParameter(parameters, current.getKey())).append(\" OR \");\n             }\n-            query.append(\"realm_id=?\").append(setParameter(parameters, realmDAO.getRoot().getKey()));\n+            query.append(\"realm_key=?\").append(setParameter(parameters, realmDAO.getRoot().getKey()));\n         } else {\n             for (Realm current : realmDAO.findDescendants(realm)) {\n-                query.append(\"realm_id=?\").append(setParameter(parameters, current.getKey())).append(\" OR \");\n+                query.append(\"realm_key=?\").append(setParameter(parameters, current.getKey())).append(\" OR \");\n             }\n             query.setLength(query.length() - 4);\n         }\n@@ -772,18 +775,18 @@ private String getQuery(final AttributeCond cond, final boolean not, final List<\n             return EMPTY_QUERY;\n         }\n \n-        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \");\n+        StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_key FROM \");\n         switch (cond.getType()) {\n             case ISNOTNULL:\n                 query.append(svs.field().name).\n-                        append(\" WHERE any_id NOT IN (SELECT any_id FROM \").\n+                        append(\" WHERE any_key NOT IN (SELECT any_key FROM \").\n                         append(svs.nullAttr().name).\n-                        append(\" WHERE schema_name='\").append(schema.getKey()).append(\"')\");\n+                        append(\" WHERE schema_key='\").append(schema.getKey()).append(\"')\");\n                 break;\n \n             case ISNULL:\n                 query.append(svs.nullAttr().name).\n-                        append(\" WHERE schema_name='\").append(schema.getKey()).append(\"'\");\n+                        append(\" WHERE schema_key='\").append(schema.getKey()).append(\"'\");\n                 break;\n \n             default:\n@@ -792,7 +795,7 @@ private String getQuery(final AttributeCond cond, final boolean not, final List<\n                 } else {\n                     query.append(svs.attr().name);\n                 }\n-                query.append(\" WHERE schema_name='\").append(schema.getKey());\n+                query.append(\" WHERE schema_key='\").append(schema.getKey());\n                 fillAttributeQuery(query, attrValue, schema, cond, not, parameters, svs);\n         }\n \n@@ -805,11 +808,6 @@ private String getQuery(final AnyCond cond, final boolean not, final List<Object\n \n         AnyUtils attrUtils = anyUtilsFactory.getInstance(svs.anyTypeKind());\n \n-        // Keeps track of difference between entity's getKey() and JPA @Id fields\n-        if (\"key\".equals(cond.getSchema())) {\n-            cond.setSchema(\"id\");\n-        }\n-\n         Field anyField = ReflectionUtils.findField(attrUtils.anyClass(), cond.getSchema());\n         if (anyField == null) {\n             LOG.warn(\"Ignoring invalid schema '{}'\", cond.getSchema());\n@@ -851,11 +849,11 @@ private String getQuery(final AnyCond cond, final boolean not, final List<Object\n \n             if (relMethod != null) {\n                 if (Long.class.isAssignableFrom(relMethod.getReturnType())) {\n-                    cond.setSchema(cond.getSchema() + \"_id\");\n+                    cond.setSchema(cond.getSchema() + \"_key\");\n                     schema.setType(AttrSchemaType.Long);\n                 }\n                 if (String.class.isAssignableFrom(relMethod.getReturnType())) {\n-                    cond.setSchema(cond.getSchema() + \"_name\");\n+                    cond.setSchema(cond.getSchema() + \"_key\");\n                     schema.setType(AttrSchemaType.String);\n                 }\n             }\n@@ -874,7 +872,7 @@ private String getQuery(final AnyCond cond, final boolean not, final List<Object\n             }\n         }\n \n-        final StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_id FROM \").\n+        final StringBuilder query = new StringBuilder(\"SELECT DISTINCT any_key FROM \").\n                 append(svs.field().name).append(\" WHERE \");\n \n         fillAttributeQuery(query, attrValue, schema, cond, not, parameters, svs);"},{"sha":"695dfa7c1122be8b212988512a4f28d23059718f","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnyTypeClassDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyTypeClassDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyTypeClassDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyTypeClassDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -40,7 +40,7 @@\n import org.springframework.stereotype.Repository;\n \n @Repository\n-public class JPAAnyTypeClassDAO extends AbstractDAO<AnyTypeClass, String> implements AnyTypeClassDAO {\n+public class JPAAnyTypeClassDAO extends AbstractDAO<AnyTypeClass> implements AnyTypeClassDAO {\n \n     @Autowired\n     private AnyTypeDAO anyTypeDAO;"},{"sha":"477b6556184a83038c8a5169a48cbe1757713bb0","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAAnyTypeDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyTypeDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyTypeDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAAnyTypeDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -29,7 +29,7 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Repository\n-public class JPAAnyTypeDAO extends AbstractDAO<AnyType, String> implements AnyTypeDAO {\n+public class JPAAnyTypeDAO extends AbstractDAO<AnyType> implements AnyTypeDAO {\n \n     @Transactional(readOnly = true)\n     @Override"},{"sha":"07e18e27f3c5510efe430627d299028b1adf5ea0","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAConfDAO.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConfDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConfDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConfDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -33,7 +33,9 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Repository\n-public class JPAConfDAO extends AbstractDAO<Conf, Long> implements ConfDAO {\n+public class JPAConfDAO extends AbstractDAO<Conf> implements ConfDAO {\n+\n+    private static final String KEY = \"cd64d66f-6fff-4008-b966-a06b1cc1436d\";\n \n     @Autowired\n     private PlainSchemaDAO schemaDAO;\n@@ -43,10 +45,10 @@ public class JPAConfDAO extends AbstractDAO<Conf, Long> implements ConfDAO {\n \n     @Override\n     public Conf get() {\n-        Conf instance = entityManager().find(JPAConf.class, 1L);\n+        Conf instance = entityManager().find(JPAConf.class, KEY);\n         if (instance == null) {\n             instance = new JPAConf();\n-            instance.setKey(1L);\n+            instance.setKey(KEY);\n \n             instance = entityManager().merge(instance);\n         }"},{"sha":"91cf1dd2bb626a0f323c1465e81a0197c09f3202","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAConnInstanceDAO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConnInstanceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConnInstanceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAConnInstanceDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -34,7 +34,7 @@\n import org.springframework.stereotype.Repository;\n \n @Repository\n-public class JPAConnInstanceDAO extends AbstractDAO<ConnInstance, Long> implements ConnInstanceDAO {\n+public class JPAConnInstanceDAO extends AbstractDAO<ConnInstance> implements ConnInstanceDAO {\n \n     @Autowired\n     private ExternalResourceDAO resourceDAO;\n@@ -43,7 +43,7 @@ public class JPAConnInstanceDAO extends AbstractDAO<ConnInstance, Long> implemen\n     private ConnectorRegistry connRegistry;\n \n     @Override\n-    public ConnInstance find(final Long key) {\n+    public ConnInstance find(final String key) {\n         return entityManager().find(JPAConnInstance.class, key);\n     }\n \n@@ -70,7 +70,7 @@ public ConnInstance save(final ConnInstance connector) {\n     }\n \n     @Override\n-    public void delete(final Long key) {\n+    public void delete(final String key) {\n         ConnInstance connInstance = find(key);\n         if (connInstance == null) {\n             return;"},{"sha":"f8add11924e98cf0e22e43a94ede899eef2b347d","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPADerSchemaDAO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADerSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADerSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADerSchemaDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -33,7 +33,7 @@\n import org.springframework.stereotype.Repository;\n \n @Repository\n-public class JPADerSchemaDAO extends AbstractDAO<DerSchema, String> implements DerSchemaDAO {\n+public class JPADerSchemaDAO extends AbstractDAO<DerSchema> implements DerSchemaDAO {\n \n     @Autowired\n     private ExternalResourceDAO resourceDAO;\n@@ -49,7 +49,7 @@ public List<DerSchema> findByAnyTypeClasses(final Collection<AnyTypeClass> anyTy\n                 append(JPADerSchema.class.getSimpleName()).\n                 append(\" e WHERE \");\n         for (AnyTypeClass anyTypeClass : anyTypeClasses) {\n-            queryString.append(\"e.anyTypeClass.name='\").append(anyTypeClass.getKey()).append(\"' OR \");\n+            queryString.append(\"e.anyTypeClass.key='\").append(anyTypeClass.getKey()).append(\"' OR \");\n         }\n \n         TypedQuery<DerSchema> query = entityManager().createQuery("},{"sha":"ec026ff54bdfda45fbc0b39b83b2705d2de583ca","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPADomainDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADomainDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADomainDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPADomainDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -27,7 +27,7 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Repository\n-public class JPADomainDAO extends AbstractDAO<Domain, String> implements DomainDAO {\n+public class JPADomainDAO extends AbstractDAO<Domain> implements DomainDAO {\n \n     @Transactional(readOnly = true)\n     @Override"},{"sha":"1c56720b57179a617832812ab1e6760ec33b8fec","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAExternalResourceDAO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAExternalResourceDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAExternalResourceDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAExternalResourceDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -55,7 +55,7 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Repository\n-public class JPAExternalResourceDAO extends AbstractDAO<ExternalResource, String> implements ExternalResourceDAO {\n+public class JPAExternalResourceDAO extends AbstractDAO<ExternalResource> implements ExternalResourceDAO {\n \n     @Autowired\n     private TaskDAO taskDAO;\n@@ -91,7 +91,7 @@ public ExternalResource find(final String name) {\n     }\n \n     @Override\n-    public Provision findProvision(final Long key) {\n+    public Provision findProvision(final String key) {\n         return entityManager().find(JPAProvision.class, key);\n     }\n \n@@ -176,11 +176,11 @@ public void deleteMapping(final String intAttrName, final IntMappingType intMapp\n         query.setParameter(\"intAttrName\", intAttrName);\n         query.setParameter(\"intMappingType\", intMappingType);\n \n-        Set<Long> itemKeys = new HashSet<>();\n+        Set<String> itemKeys = new HashSet<>();\n         for (MappingItem item : query.getResultList()) {\n             itemKeys.add(item.getKey());\n         }\n-        for (Long itemKey : itemKeys) {\n+        for (String itemKey : itemKeys) {\n             MappingItem item = entityManager().find(JPAMappingItem.class, itemKey);\n             if (item != null) {\n                 item.getMapping().getItems().remove(item);"},{"sha":"3ec6d5a17a3e34f0a9af6aecd5d548f428863ec3","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAGroupDAO.java","status":"modified","additions":28,"deletions":11,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAGroupDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -43,6 +43,7 @@\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.security.DelegatedAdministrationException;\n import org.apache.syncope.core.persistence.api.dao.AnyObjectDAO;\n+import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.search.AssignableCond;\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.persistence.api.entity.Any;\n@@ -115,7 +116,7 @@ public boolean evaluate(final String realm) {\n     }\n \n     @Override\n-    public Group find(final String name) {\n+    public Group findByName(final String name) {\n         TypedQuery<Group> query = entityManager().createQuery(\n                 \"SELECT e FROM \" + JPAGroup.class.getSimpleName() + \" e WHERE e.name = :name\", Group.class);\n         query.setParameter(\"name\", name);\n@@ -130,18 +131,34 @@ public Group find(final String name) {\n         return result;\n     }\n \n+    @Override\n+    public Group authFindByName(final String name) {\n+        if (name == null) {\n+            throw new NotFoundException(\"Null name\");\n+        }\n+\n+        Group group = findByName(name);\n+        if (group == null) {\n+            throw new NotFoundException(\"Group \" + name);\n+        }\n+\n+        securityChecks(group);\n+\n+        return group;\n+    }\n+\n     @Transactional(readOnly = true)\n     @Override\n-    public List<Group> findOwnedByUser(final Long userKey) {\n+    public List<Group> findOwnedByUser(final String userKey) {\n         User owner = userDAO.find(userKey);\n         if (owner == null) {\n             return Collections.<Group>emptyList();\n         }\n \n         StringBuilder queryString = new StringBuilder(\"SELECT e FROM \").append(JPAGroup.class.getSimpleName()).\n                 append(\" e WHERE e.userOwner=:owner \");\n-        for (Long groupKey : userDAO.findAllGroupKeys(owner)) {\n-            queryString.append(\"OR e.groupOwner.id=\").append(groupKey).append(' ');\n+        for (String groupKey : userDAO.findAllGroupKeys(owner)) {\n+            queryString.append(\"OR e.groupOwner.key='\").append(groupKey).append(\"' \");\n         }\n \n         TypedQuery<Group> query = entityManager().createQuery(queryString.toString(), Group.class);\n@@ -152,8 +169,8 @@ public List<Group> findOwnedByUser(final Long userKey) {\n \n     @Transactional(readOnly = true)\n     @Override\n-    public List<Group> findOwnedByGroup(final Long groupId) {\n-        Group owner = find(groupId);\n+    public List<Group> findOwnedByGroup(final String groupKey) {\n+        Group owner = find(groupKey);\n         if (owner == null) {\n             return Collections.<Group>emptyList();\n         }\n@@ -241,7 +258,7 @@ public void delete(final Group group) {\n     }\n \n     private void populateTransitiveResources(\n-            final Group group, final Any<?> any, final Map<Long, PropagationByResource> result) {\n+            final Group group, final Any<?> any, final Map<String, PropagationByResource> result) {\n \n         PropagationByResource propByRes = new PropagationByResource();\n         for (ExternalResource resource : group.getResources()) {\n@@ -257,10 +274,10 @@ private void populateTransitiveResources(\n \n     @Transactional(readOnly = true)\n     @Override\n-    public Map<Long, PropagationByResource> findAnyObjectsWithTransitiveResources(final Long groupKey) {\n+    public Map<String, PropagationByResource> findAnyObjectsWithTransitiveResources(final String groupKey) {\n         Group group = authFind(groupKey);\n \n-        Map<Long, PropagationByResource> result = new HashMap<>();\n+        Map<String, PropagationByResource> result = new HashMap<>();\n \n         for (AMembership membership : findAMemberships(group)) {\n             populateTransitiveResources(group, membership.getLeftEnd(), result);\n@@ -271,10 +288,10 @@ public Map<Long, PropagationByResource> findAnyObjectsWithTransitiveResources(fi\n \n     @Transactional(readOnly = true)\n     @Override\n-    public Map<Long, PropagationByResource> findUsersWithTransitiveResources(final Long groupKey) {\n+    public Map<String, PropagationByResource> findUsersWithTransitiveResources(final String groupKey) {\n         Group group = authFind(groupKey);\n \n-        Map<Long, PropagationByResource> result = new HashMap<>();\n+        Map<String, PropagationByResource> result = new HashMap<>();\n \n         for (UMembership membership : findUMemberships(group)) {\n             populateTransitiveResources(group, membership.getLeftEnd(), result);"},{"sha":"6e4f414adf1c960a88fc29bf1710bd6bb4f3f735","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPALoggerDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPALoggerDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPALoggerDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPALoggerDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -28,7 +28,7 @@\n import org.springframework.stereotype.Repository;\n \n @Repository\n-public class JPALoggerDAO extends AbstractDAO<Logger, String> implements LoggerDAO {\n+public class JPALoggerDAO extends AbstractDAO<Logger> implements LoggerDAO {\n \n     @Override\n     public Logger find(final String key) {"},{"sha":"428e4e89cccffdf78b1e916b0049045a1da2a571","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAMailTemplateDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAMailTemplateDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAMailTemplateDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAMailTemplateDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -26,7 +26,7 @@\n import org.springframework.stereotype.Repository;\n \n @Repository\n-public class JPAMailTemplateDAO extends AbstractDAO<MailTemplate, String> implements MailTemplateDAO {\n+public class JPAMailTemplateDAO extends AbstractDAO<MailTemplate> implements MailTemplateDAO {\n \n     @Override\n     public MailTemplate find(final String key) {"},{"sha":"f9cf72ed0717dd9e46dd93e48e6cdc8976749ca5","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPANotificationDAO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPANotificationDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPANotificationDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPANotificationDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -36,14 +36,14 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Repository\n-public class JPANotificationDAO extends AbstractDAO<Notification, Long> implements NotificationDAO {\n+public class JPANotificationDAO extends AbstractDAO<Notification> implements NotificationDAO {\n \n     @Autowired\n     private TaskDAO taskDAO;\n \n     @Transactional(readOnly = true)\n     @Override\n-    public Notification find(final Long key) {\n+    public Notification find(final String key) {\n         return entityManager().find(JPANotification.class, key);\n     }\n \n@@ -71,7 +71,7 @@ public Notification save(final Notification notification) {\n     }\n \n     @Override\n-    public void delete(final Long key) {\n+    public void delete(final String key) {\n         Notification notification = find(key);\n         if (notification == null) {\n             return;"},{"sha":"3e8a38c5b995dadf8f4358804a0bab5692dd53ea","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAPlainAttrDAO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainAttrDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainAttrDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainAttrDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -33,7 +33,7 @@\n import org.springframework.stereotype.Repository;\n \n @Repository\n-public class JPAPlainAttrDAO extends AbstractDAO<PlainAttr<?>, Long> implements PlainAttrDAO {\n+public class JPAPlainAttrDAO extends AbstractDAO<PlainAttr<?>> implements PlainAttrDAO {\n \n     public <T extends PlainAttr<?>> Class<? extends AbstractPlainAttr<?>> getEntityReference(\n             final Class<T> reference) {\n@@ -50,12 +50,12 @@ public <T extends PlainAttr<?>> Class<? extends AbstractPlainAttr<?>> getEntityR\n     }\n \n     @Override\n-    public <T extends PlainAttr<?>> T find(final Long key, final Class<T> reference) {\n+    public <T extends PlainAttr<?>> T find(final String key, final Class<T> reference) {\n         return reference.cast(entityManager().find(getEntityReference(reference), key));\n     }\n \n     @Override\n-    public <T extends PlainAttr<?>> void delete(final Long key, final Class<T> reference) {\n+    public <T extends PlainAttr<?>> void delete(final String key, final Class<T> reference) {\n         T attribute = find(key, reference);\n         if (attribute == null) {\n             return;"},{"sha":"8e10858a990f4299fac6f595bb919ef8e3e0aa5e","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAPlainAttrValueDAO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainAttrValueDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainAttrValueDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainAttrValueDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -43,7 +43,7 @@\n import org.springframework.stereotype.Repository;\n \n @Repository\n-public class JPAPlainAttrValueDAO extends AbstractDAO<PlainAttrValue, Long> implements PlainAttrValueDAO {\n+public class JPAPlainAttrValueDAO extends AbstractDAO<PlainAttrValue> implements PlainAttrValueDAO {\n \n     @SuppressWarnings(\"unchecked\")\n     private <T extends PlainAttrValue> Class<? extends AbstractPlainAttrValue> getEntityReference(\n@@ -71,7 +71,7 @@ private <T extends PlainAttrValue> Class<? extends AbstractPlainAttrValue> getEn\n     }\n \n     @Override\n-    public <T extends PlainAttrValue> T find(final Long key, final Class<T> reference) {\n+    public <T extends PlainAttrValue> T find(final String key, final Class<T> reference) {\n         return reference.cast(entityManager().find(getEntityReference(reference), key));\n     }\n \n@@ -88,8 +88,8 @@ public <T extends PlainAttrValue> T save(final T attributeValue) {\n     }\n \n     @Override\n-    public <T extends PlainAttrValue> void delete(final Long id, final Class<T> reference) {\n-        T attributeValue = find(id, reference);\n+    public <T extends PlainAttrValue> void delete(final String key, final Class<T> reference) {\n+        T attributeValue = find(key, reference);\n         if (attributeValue == null) {\n             return;\n         }"},{"sha":"5b79d532b072fbfbc47507cc4f6604f2ceaa8e18","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAPlainSchemaDAO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainSchemaDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainSchemaDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPlainSchemaDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -36,7 +36,7 @@\n import org.springframework.stereotype.Repository;\n \n @Repository\n-public class JPAPlainSchemaDAO extends AbstractDAO<PlainSchema, String> implements PlainSchemaDAO {\n+public class JPAPlainSchemaDAO extends AbstractDAO<PlainSchema> implements PlainSchemaDAO {\n \n     @Autowired\n     private PlainAttrDAO plainAttrDAO;\n@@ -55,7 +55,7 @@ public List<PlainSchema> findByAnyTypeClasses(final Collection<AnyTypeClass> any\n                 append(JPAPlainSchema.class.getSimpleName()).\n                 append(\" e WHERE \");\n         for (AnyTypeClass anyTypeClass : anyTypeClasses) {\n-            queryString.append(\"e.anyTypeClass.name='\").append(anyTypeClass.getKey()).append(\"' OR \");\n+            queryString.append(\"e.anyTypeClass.key='\").append(anyTypeClass.getKey()).append(\"' OR \");\n         }\n \n         TypedQuery<PlainSchema> query = entityManager().createQuery("},{"sha":"4c76f449b36e9b67c204918d03029486caabbbc1","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAPolicyDAO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPolicyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPolicyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAPolicyDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -38,7 +38,7 @@\n import org.springframework.stereotype.Repository;\n \n @Repository\n-public class JPAPolicyDAO extends AbstractDAO<Policy, Long> implements PolicyDAO {\n+public class JPAPolicyDAO extends AbstractDAO<Policy> implements PolicyDAO {\n \n     @Autowired\n     private RealmDAO realmDAO;\n@@ -57,7 +57,7 @@ private <T extends Policy> Class<? extends AbstractPolicy> getEntityReference(fi\n \n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public <T extends Policy> T find(final Long key) {\n+    public <T extends Policy> T find(final String key) {\n         return (T) entityManager().find(AbstractPolicy.class, key);\n     }\n "},{"sha":"b2cd657ac8d2b0f55700e273fd122915c0b1f931","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPARealmDAO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARealmDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARealmDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARealmDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -42,7 +42,7 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Repository\n-public class JPARealmDAO extends AbstractDAO<Realm, Long> implements RealmDAO {\n+public class JPARealmDAO extends AbstractDAO<Realm> implements RealmDAO {\n \n     @Autowired\n     private RoleDAO roleDAO;\n@@ -63,13 +63,13 @@ public Realm getRoot() {\n     }\n \n     @Override\n-    public Realm find(final Long key) {\n+    public Realm find(final String key) {\n         return entityManager().find(JPARealm.class, key);\n     }\n \n     @Transactional(readOnly = true)\n     @Override\n-    public Realm find(final String fullPath) {\n+    public Realm findByFullPath(final String fullPath) {\n         if (SyncopeConstants.ROOT_REALM.equals(fullPath)) {\n             return getRoot();\n         }\n@@ -202,7 +202,7 @@ public void delete(final Realm realm) {\n     }\n \n     @Override\n-    public void delete(final Long key) {\n+    public void delete(final String key) {\n         Realm realm = find(key);\n         if (realm == null) {\n             return;"},{"sha":"4af6c98cf83af6206b07f4fce47da04b30aeebcd","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPARelationshipTypeDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARelationshipTypeDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARelationshipTypeDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARelationshipTypeDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -35,7 +35,7 @@\n import org.springframework.stereotype.Repository;\n \n @Repository\n-public class JPARelationshipTypeDAO extends AbstractDAO<RelationshipType, String> implements RelationshipTypeDAO {\n+public class JPARelationshipTypeDAO extends AbstractDAO<RelationshipType> implements RelationshipTypeDAO {\n \n     @Override\n     public RelationshipType find(final String key) {"},{"sha":"959eac2bae5e3fe0e955d6715c1d6e7d29f69c99","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAReportDAO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAReportDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAReportDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAReportDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -28,11 +28,11 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Repository\n-public class JPAReportDAO extends AbstractDAO<Report, Long> implements ReportDAO {\n+public class JPAReportDAO extends AbstractDAO<Report> implements ReportDAO {\n \n     @Transactional(readOnly = true)\n     @Override\n-    public Report find(final Long key) {\n+    public Report find(final String key) {\n         return entityManager().find(JPAReport.class, key);\n     }\n \n@@ -62,7 +62,7 @@ public Report save(final Report report) {\n     }\n \n     @Override\n-    public void delete(final Long key) {\n+    public void delete(final String key) {\n         Report report = find(key);\n         if (report == null) {\n             return;"},{"sha":"d5b801eba87637c1c174ce245963f32f7a1fc3b1","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAReportExecDAO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAReportExecDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAReportExecDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAReportExecDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -29,10 +29,10 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Repository\n-public class JPAReportExecDAO extends AbstractDAO<ReportExec, Long> implements ReportExecDAO {\n+public class JPAReportExecDAO extends AbstractDAO<ReportExec> implements ReportExecDAO {\n \n     @Override\n-    public ReportExec find(final Long key) {\n+    public ReportExec find(final String key) {\n         return entityManager().find(JPAReportExec.class, key);\n     }\n \n@@ -115,7 +115,7 @@ public ReportExec save(final ReportExec execution) {\n     }\n \n     @Override\n-    public void delete(final Long key) {\n+    public void delete(final String key) {\n         ReportExec execution = find(key);\n         if (execution == null) {\n             return;"},{"sha":"fbecc7e71ec312e9974a84ea19983d15bdc3efd9","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPAReportTemplateDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAReportTemplateDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAReportTemplateDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPAReportTemplateDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -26,7 +26,7 @@\n import org.springframework.stereotype.Repository;\n \n @Repository\n-public class JPAReportTemplateDAO extends AbstractDAO<ReportTemplate, String> implements ReportTemplateDAO {\n+public class JPAReportTemplateDAO extends AbstractDAO<ReportTemplate> implements ReportTemplateDAO {\n \n     @Override\n     public ReportTemplate find(final String key) {"},{"sha":"fc917123987cb60a7fcb7b0ab14ea47b469dbab7","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPARoleDAO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARoleDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARoleDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPARoleDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -35,7 +35,7 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Repository\n-public class JPARoleDAO extends AbstractDAO<Role, String> implements RoleDAO {\n+public class JPARoleDAO extends AbstractDAO<Role> implements RoleDAO {\n \n     @Autowired\n     private AnySearchDAO searchDAO;"},{"sha":"c9b18ece2a384ec9138d02b4a751ae1f85b40696","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPASecurityQuestionDAO.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPASecurityQuestionDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPASecurityQuestionDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPASecurityQuestionDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -29,13 +29,13 @@\n import org.springframework.stereotype.Repository;\n \n @Repository\n-public class JPASecurityQuestionDAO extends AbstractDAO<SecurityQuestion, Long> implements SecurityQuestionDAO {\n+public class JPASecurityQuestionDAO extends AbstractDAO<SecurityQuestion> implements SecurityQuestionDAO {\n \n     @Autowired\n     private UserDAO userDAO;\n \n     @Override\n-    public SecurityQuestion find(final Long key) {\n+    public SecurityQuestion find(final String key) {\n         return entityManager().find(JPASecurityQuestion.class, key);\n     }\n \n@@ -52,7 +52,7 @@ public SecurityQuestion save(final SecurityQuestion securityQuestion) {\n     }\n \n     @Override\n-    public void delete(final Long key) {\n+    public void delete(final String key) {\n         SecurityQuestion securityQuestion = find(key);\n         if (securityQuestion == null) {\n             return;"},{"sha":"414a171dacff8bc5d5333a443b4cb667dc4bc37b","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPATaskDAO.java","status":"modified","additions":14,"deletions":10,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -42,7 +42,7 @@\n import org.springframework.util.ReflectionUtils;\n \n @Repository\n-public class JPATaskDAO extends AbstractDAO<Task, Long> implements TaskDAO {\n+public class JPATaskDAO extends AbstractDAO<Task> implements TaskDAO {\n \n     @Override\n     public Class<? extends Task> getEntityReference(final TaskType type) {\n@@ -78,7 +78,7 @@ public Class<? extends Task> getEntityReference(final TaskType type) {\n     @Transactional(readOnly = true)\n     @SuppressWarnings(\"unchecked\")\n     @Override\n-    public <T extends Task> T find(final Long key) {\n+    public <T extends Task> T find(final String key) {\n         return (T) entityManager().find(AbstractTask.class, key);\n     }\n \n@@ -87,9 +87,9 @@ private <T extends Task> StringBuilder buildFindAllQuery(final TaskType type) {\n                 append(getEntityReference(type).getSimpleName()).\n                 append(\" t WHERE \");\n         if (type == TaskType.SCHEDULED) {\n-            builder.append(\"t.id NOT IN (SELECT t.id FROM \").append(JPAPushTask.class.getSimpleName()).append(\" t) \").\n+            builder.append(\"t.key NOT IN (SELECT t.key FROM \").append(JPAPushTask.class.getSimpleName()).append(\" t) \").\n                     append(\"AND \").\n-                    append(\"t.id NOT IN (SELECT t.id FROM \").append(JPAPullTask.class.getSimpleName()).append(\" t)\");\n+                    append(\"t.key NOT IN (SELECT t.key FROM \").append(JPAPullTask.class.getSimpleName()).append(\" t)\");\n         } else {\n             builder.append(\"1=1\");\n         }\n@@ -107,7 +107,7 @@ public <T extends Task> List<T> findToExec(final TaskType type) {\n         } else {\n             queryString.append(\"t.executions IS EMPTY \");\n         }\n-        queryString.append(\"ORDER BY t.id DESC\");\n+        queryString.append(\"ORDER BY t.key DESC\");\n \n         Query query = entityManager().createQuery(queryString.toString());\n         return query.getResultList();\n@@ -124,7 +124,7 @@ private StringBuilder buildFindAllQuery(\n             final ExternalResource resource,\n             final Notification notification,\n             final AnyTypeKind anyTypeKind,\n-            final Long anyKey) {\n+            final String anyKey) {\n \n         if (resource != null\n                 && type != TaskType.PROPAGATION && type != TaskType.PUSH && type != TaskType.PULL) {\n@@ -136,6 +136,10 @@ private StringBuilder buildFindAllQuery(\n             throw new IllegalArgumentException(type + \" is not related to users, groups or any objects\");\n         }\n \n+        if (notification != null && type != TaskType.NOTIFICATION) {\n+            throw new IllegalArgumentException(type + \" is not related to notifications\");\n+        }\n+\n         StringBuilder queryString = buildFindAllQuery(type);\n \n         if (resource != null) {\n@@ -164,7 +168,7 @@ private String toOrderByStatement(\n         }\n \n         if (statement.length() == 0) {\n-            statement.append(\"ORDER BY t.id DESC\");\n+            statement.append(\"ORDER BY t.key DESC\");\n         } else {\n             statement.insert(0, \"ORDER BY \");\n         }\n@@ -178,7 +182,7 @@ public <T extends Task> List<T> findAll(\n             final ExternalResource resource,\n             final Notification notification,\n             final AnyTypeKind anyTypeKind,\n-            final Long anyKey,\n+            final String anyKey,\n             final int page,\n             final int itemsPerPage,\n             final List<OrderByClause> orderByClauses) {\n@@ -215,7 +219,7 @@ public int count(\n             final ExternalResource resource,\n             final Notification notification,\n             final AnyTypeKind anyTypeKind,\n-            final Long anyKey) {\n+            final String anyKey) {\n \n         StringBuilder queryString = buildFindAllQuery(type, resource, notification, anyTypeKind, anyKey);\n \n@@ -242,7 +246,7 @@ public <T extends Task> T save(final T task) {\n     }\n \n     @Override\n-    public void delete(final Long id) {\n+    public void delete(final String id) {\n         Task task = find(id);\n         if (task == null) {\n             return;"},{"sha":"e4c97a65412d8ce624a2a6e9464b35cddfc72b3f","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/JPATaskExecDAO.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskExecDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/550ee4f4c9d52cacf879303f29905212a5f4d2c3/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskExecDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FJPATaskExecDAO.java?ref=550ee4f4c9d52cacf879303f29905212a5f4d2c3","patch":"@@ -34,13 +34,13 @@\n import org.springframework.util.ReflectionUtils;\n \n @Repository\n-public class JPATaskExecDAO extends AbstractDAO<TaskExec, Long> implements TaskExecDAO {\n+public class JPATaskExecDAO extends AbstractDAO<TaskExec> implements TaskExecDAO {\n \n     @Autowired\n     private TaskDAO taskDAO;\n \n     @Override\n-    public TaskExec find(final Long key) {\n+    public TaskExec find(final String key) {\n         return entityManager().find(JPATaskExec.class, key);\n     }\n \n@@ -117,9 +117,9 @@ public <T extends Task> List<TaskExec> findAll(\n     }\n \n     @Override\n-    public int count(final Long taskKey) {\n+    public int count(final String taskKey) {\n         Query countQuery = entityManager().createNativeQuery(\n-                \"SELECT COUNT(e.id) FROM \" + JPATaskExec.TABLE + \" e WHERE e.task_id=?1\");\n+                \"SELECT COUNT(e.key) FROM \" + JPATaskExec.TABLE + \" e WHERE e.task_key=?1\");\n         countQuery.setParameter(1, taskKey);\n \n         return ((Number) countQuery.getSingleResult()).intValue();\n@@ -136,7 +136,7 @@ private String toOrderByStatement(final List<OrderByClause> orderByClauses) {\n         }\n \n         if (statement.length() == 0) {\n-            statement.append(\"ORDER BY e.id DESC\");\n+            statement.append(\"ORDER BY e.key DESC\");\n         } else {\n             statement.insert(0, \"ORDER BY \");\n         }\n@@ -171,15 +171,15 @@ public TaskExec save(final TaskExec execution) {\n \n     @Override\n     @Transactional(rollbackFor = { Throwable.class })\n-    public void saveAndAdd(final Long taskId, final TaskExec execution) {\n-        Task task = taskDAO.find(taskId);\n+    public void saveAndAdd(final String taskKey, final TaskExec execution) {\n+        Task task = taskDAO.find(taskKey);\n         task.add(execution);\n         taskDAO.save(task);\n     }\n \n     @Override\n-    public void delete(final Long id) {\n-        TaskExec execution = find(id);\n+    public void delete(final String key) {\n+        TaskExec execution = find(key);\n         if (execution == null) {\n             return;\n         }"}]}