{"sha":"03d5364b14bb911358f8b468924e304576ff99da","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjAzZDUzNjRiMTRiYjkxMTM1OGY4YjQ2ODkyNGUzMDQ1NzZmZjk5ZGE=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-06-14T15:37:22Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2017-06-14T15:38:08Z"},"message":"[SYNCOPE-1067] provides the possibility to select for a dynamic realms and manage object inside it","tree":{"sha":"de62309433290f811ca271f0671b02bf17b6ee76","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/de62309433290f811ca271f0671b02bf17b6ee76"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/03d5364b14bb911358f8b468924e304576ff99da","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/03d5364b14bb911358f8b468924e304576ff99da","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/03d5364b14bb911358f8b468924e304576ff99da","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/03d5364b14bb911358f8b468924e304576ff99da/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"a21329eeabb33f5e2690f54ac30a6c34ecfa00c5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a21329eeabb33f5e2690f54ac30a6c34ecfa00c5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a21329eeabb33f5e2690f54ac30a6c34ecfa00c5"}],"stats":{"total":357,"additions":291,"deletions":66},"files":[{"sha":"4bc4b7b2e36bc5df711212fb1474766e2bc68a09","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyDirectoryPanel.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyDirectoryPanel.java?ref=03d5364b14bb911358f8b468924e304576ff99da","patch":"@@ -43,6 +43,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n import org.apache.syncope.client.console.wizards.any.StatusPanel;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n@@ -91,7 +92,8 @@ protected AnyDirectoryPanel(final String id, final Builder<A, E> builder) {\n \n     protected AnyDirectoryPanel(final String id, final Builder<A, E> builder, final boolean wizardInModal) {\n         super(id, builder, wizardInModal);\n-        if (SyncopeConsoleSession.get().owns(String.format(\"%s_CREATE\", builder.type), builder.realm)) {\n+        if (SyncopeConsoleSession.get().owns(String.format(\"%s_CREATE\", builder.type), builder.realm)\n+                && builder.realm.startsWith(SyncopeConstants.ROOT_REALM)) {\n             MetaDataRoleAuthorizationStrategy.authorizeAll(addAjaxLink, RENDER);\n         } else {\n             MetaDataRoleAuthorizationStrategy.unauthorizeAll(addAjaxLink, RENDER);\n@@ -176,7 +178,7 @@ public interface AnyDirectoryPanelBuilder extends Serializable {\n         /**\n          * Realm related to current panel.\n          */\n-        protected String realm = \"/\";\n+        protected String realm = SyncopeConstants.ROOT_REALM;\n \n         /**\n          * Any type related to current panel."},{"sha":"75803d9cf0e40a783dc085a0a7e0edc83524775f","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyObjectDirectoryPanel.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyObjectDirectoryPanel.java?ref=03d5364b14bb911358f8b468924e304576ff99da","patch":"@@ -40,6 +40,7 @@\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.types.AnyEntitlement;\n@@ -172,7 +173,7 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n \n             @Override\n             protected boolean statusCondition(final AnyObjectTO modelObject) {\n-                return addAjaxLink.isVisibleInHierarchy();\n+                return addAjaxLink.isVisibleInHierarchy() && realm.startsWith(SyncopeConstants.ROOT_REALM);\n             }\n         }, ActionType.CLONE, AnyEntitlement.CREATE.getFor(type)).setRealm(realm);\n \n@@ -250,6 +251,11 @@ public void onClick(final AjaxRequestTarget target, final AnyObjectTO ignore) {\n                 }\n                 ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n+\n+            @Override\n+            protected boolean statusCondition(final AnyObjectTO modelObject) {\n+                return realm.startsWith(SyncopeConstants.ROOT_REALM);\n+            }\n         }, ActionType.DELETE, AnyEntitlement.DELETE.getFor(type), true).setRealm(realm);\n \n         return panel;"},{"sha":"4b8f9decf00a2a944143461c617d2f7c47ed93c0","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyPanel.java","status":"modified","additions":51,"deletions":17,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyPanel.java?ref=03d5364b14bb911358f8b468924e304576ff99da","patch":"@@ -22,6 +22,7 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.client.console.layout.AnyObjectFormLayoutInfo;\n import org.apache.syncope.client.console.layout.FormLayoutInfoUtils;\n@@ -37,6 +38,7 @@\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n@@ -148,21 +150,32 @@ public void onEvent(final IEvent<?> event) {\n         if (event.getPayload() instanceof SearchClausePanel.SearchEvent) {\n             final AjaxRequestTarget target = SearchClausePanel.SearchEvent.class.cast(event.getPayload()).getTarget();\n \n+            final String precond;\n+\n+            if (realmTO.getFullPath().startsWith(SyncopeConstants.ROOT_REALM)) {\n+                precond = StringUtils.EMPTY;\n+            } else {\n+                precond = String.format(\"$dynRealms=~%s;\", realmTO.getKey());\n+            }\n+\n             switch (anyTypeTO.getKind()) {\n                 case USER:\n-                    UserDirectoryPanel.class.cast(AnyPanel.this.directoryPanel).search(SearchUtils.buildFIQL(\n-                            AnyPanel.this.searchPanel.getModel().getObject(),\n-                            SyncopeClient.getUserSearchConditionBuilder()), target);\n+                    UserDirectoryPanel.class.cast(AnyPanel.this.directoryPanel).search(\n+                            precond + SearchUtils.buildFIQL(\n+                                    AnyPanel.this.searchPanel.getModel().getObject(),\n+                                    SyncopeClient.getUserSearchConditionBuilder()), target);\n                     break;\n                 case GROUP:\n-                    GroupDirectoryPanel.class.cast(AnyPanel.this.directoryPanel).search(SearchUtils.buildFIQL(\n-                            AnyPanel.this.searchPanel.getModel().getObject(),\n-                            SyncopeClient.getGroupSearchConditionBuilder()), target);\n+                    GroupDirectoryPanel.class.cast(AnyPanel.this.directoryPanel).search(\n+                            precond + SearchUtils.buildFIQL(\n+                                    AnyPanel.this.searchPanel.getModel().getObject(),\n+                                    SyncopeClient.getGroupSearchConditionBuilder()), target);\n                     break;\n                 case ANY_OBJECT:\n-                    AnyObjectDirectoryPanel.class.cast(AnyPanel.this.directoryPanel).search(SearchUtils.buildFIQL(\n-                            AnyPanel.this.searchPanel.getModel().getObject(),\n-                            SyncopeClient.getAnyObjectSearchConditionBuilder(anyTypeTO.getKey())), target);\n+                    AnyObjectDirectoryPanel.class.cast(AnyPanel.this.directoryPanel).search(\n+                            precond + SearchUtils.buildFIQL(\n+                                    AnyPanel.this.searchPanel.getModel().getObject(),\n+                                    SyncopeClient.getAnyObjectSearchConditionBuilder(anyTypeTO.getKey())), target);\n                     break;\n                 default:\n             }\n@@ -212,16 +225,30 @@ private AbstractSearchPanel getSearchPanel(final String id) {\n \n     protected Panel getDirectoryPanel(final String id) {\n         final Panel panel;\n-        final String fiql;\n+        String fiql;\n+\n+        final String realm;\n+        final String dynRealm;\n+        if (realmTO.getFullPath().startsWith(SyncopeConstants.ROOT_REALM)) {\n+            realm = realmTO.getFullPath();\n+            dynRealm = null;\n+        } else {\n+            realm = SyncopeConstants.ROOT_REALM;\n+            dynRealm = realmTO.getKey();\n+        }\n+\n         switch (anyTypeTO.getKind()) {\n             case USER:\n-                fiql = SyncopeClient.getUserSearchConditionBuilder().is(\"key\").notNullValue().query();\n+                fiql = dynRealm == null\n+                        ? SyncopeClient.getUserSearchConditionBuilder().is(\"key\").notNullValue().query()\n+                        : SyncopeClient.getUserSearchConditionBuilder().inDynRealms(dynRealm).query();\n+\n                 final UserTO userTO = new UserTO();\n                 userTO.setRealm(realmTO.getFullPath());\n                 panel = new UserDirectoryPanel.Builder(\n                         anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n                         anyTypeTO.getKey(),\n-                        pageRef).setRealm(realmTO.getFullPath()).setFiltered(true).\n+                        pageRef).setRealm(dynRealm != null ? dynRealm : realm).setFiltered(true).\n                         setFiql(fiql).setWizardInModal(true).addNewItemPanelBuilder(FormLayoutInfoUtils.instantiate(\n                         userTO,\n                         anyTypeTO.getClasses(),\n@@ -231,13 +258,16 @@ protected Panel getDirectoryPanel(final String id) {\n                 break;\n \n             case GROUP:\n-                fiql = SyncopeClient.getGroupSearchConditionBuilder().is(\"key\").notNullValue().query();\n+                fiql = dynRealm == null\n+                        ? SyncopeClient.getGroupSearchConditionBuilder().is(\"key\").notNullValue().query()\n+                        : SyncopeClient.getGroupSearchConditionBuilder().inDynRealms(dynRealm).query();\n+\n                 final GroupTO groupTO = new GroupTO();\n                 groupTO.setRealm(realmTO.getFullPath());\n                 panel = new GroupDirectoryPanel.Builder(\n                         anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n                         anyTypeTO.getKey(),\n-                        pageRef).setRealm(realmTO.getFullPath()).setFiltered(true).\n+                        pageRef).setRealm(dynRealm != null ? dynRealm : realm).setFiltered(true).\n                         setFiql(fiql).setWizardInModal(true).addNewItemPanelBuilder(FormLayoutInfoUtils.instantiate(\n                         groupTO,\n                         anyTypeTO.getClasses(),\n@@ -247,15 +277,19 @@ protected Panel getDirectoryPanel(final String id) {\n                 break;\n \n             case ANY_OBJECT:\n-                fiql = SyncopeClient.getAnyObjectSearchConditionBuilder(anyTypeTO.getKey()).is(\"key\").notNullValue().\n-                        query();\n+                fiql = dynRealm == null\n+                        ? SyncopeClient.getAnyObjectSearchConditionBuilder(anyTypeTO.getKey()).is(\"key\").notNullValue()\n+                        .query()\n+                        : SyncopeClient.getAnyObjectSearchConditionBuilder(anyTypeTO.getKey()).inDynRealms(dynRealm)\n+                        .query();\n+\n                 final AnyObjectTO anyObjectTO = new AnyObjectTO();\n                 anyObjectTO.setRealm(realmTO.getFullPath());\n                 anyObjectTO.setType(anyTypeTO.getKey());\n                 panel = new AnyObjectDirectoryPanel.Builder(\n                         anyTypeClassRestClient.list(anyTypeTO.getClasses()),\n                         anyTypeTO.getKey(),\n-                        pageRef).setRealm(realmTO.getFullPath()).setFiltered(true).\n+                        pageRef).setRealm(dynRealm != null ? dynRealm : realm).setFiltered(true).\n                         setFiql(fiql).setWizardInModal(true).addNewItemPanelBuilder(FormLayoutInfoUtils.instantiate(\n                         anyObjectTO,\n                         anyTypeTO.getClasses(),"},{"sha":"0191c3ee989f869997b8addb84a63b4fd5dd3b55","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/GroupDirectoryPanel.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FGroupDirectoryPanel.java?ref=03d5364b14bb911358f8b468924e304576ff99da","patch":"@@ -48,6 +48,7 @@\n import org.apache.syncope.client.console.wizards.any.GroupWrapper;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n@@ -270,6 +271,11 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                 send(GroupDirectoryPanel.this, Broadcast.EXACT,\n                         new AjaxWizard.NewItemActionEvent<>(new GroupWrapper(clone), target));\n             }\n+\n+            @Override\n+            protected boolean statusCondition(final GroupTO modelObject) {\n+                return realm.startsWith(SyncopeConstants.ROOT_REALM);\n+            }\n         }, ActionType.CLONE, StandardEntitlement.GROUP_CREATE).setRealm(realm);\n \n         panel.add(new ActionLink<GroupTO>() {\n@@ -410,6 +416,11 @@ public void onClick(final AjaxRequestTarget target, final GroupTO ignore) {\n                 }\n                 ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n+\n+            @Override\n+            protected boolean statusCondition(final GroupTO modelObject) {\n+                return realm.startsWith(SyncopeConstants.ROOT_REALM);\n+            }\n         }, ActionType.DELETE, StandardEntitlement.GROUP_DELETE, true).setRealm(realm);\n \n         return panel;"},{"sha":"17338c1dc655d58e5a8383d0e32276fe6864678a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":36,"deletions":32,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=03d5364b14bb911358f8b468924e304576ff99da","patch":"@@ -43,6 +43,7 @@\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionsPanel;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.ConnObjectPanel;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.common.lib.to.PropagationStatus;\n@@ -83,8 +84,8 @@ public Realm(final String id, final RealmTO realmTO, final PageReference pageRef\n \n         setPageRef(pageRef);\n \n-        AjaxBootstrapTabbedPanel<ITab> tabbedPanel =\n-                new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageRef));\n+        AjaxBootstrapTabbedPanel<ITab> tabbedPanel\n+                = new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageRef));\n         tabbedPanel.setSelectedTab(selectedIndex);\n         addInnerObject(tabbedPanel);\n         this.wizardBuilder = new RealmWizardBuilder(pageRef);\n@@ -112,46 +113,49 @@ private List<ITab> buildTabList(final PageReference pageRef) {\n             public Panel getPanel(final String panelId) {\n                 final ActionsPanel<RealmTO> actionPanel = new ActionsPanel<>(\"actions\", null);\n \n-                actionPanel.add(new ActionLink<RealmTO>(realmTO) {\n+                if (realmTO.getFullPath().startsWith(SyncopeConstants.ROOT_REALM)) {\n \n-                    private static final long serialVersionUID = 2802988981431379827L;\n+                    actionPanel.add(new ActionLink<RealmTO>(realmTO) {\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final RealmTO ignore) {\n-                        onClickCreate(target);\n-                    }\n-                }, ActionLink.ActionType.CREATE, StandardEntitlement.REALM_CREATE).hideLabel();\n+                        private static final long serialVersionUID = 2802988981431379827L;\n \n-                actionPanel.add(new ActionLink<RealmTO>(realmTO) {\n+                        @Override\n+                        public void onClick(final AjaxRequestTarget target, final RealmTO ignore) {\n+                            onClickCreate(target);\n+                        }\n+                    }, ActionLink.ActionType.CREATE, StandardEntitlement.REALM_CREATE).hideLabel();\n \n-                    private static final long serialVersionUID = 2802988981431379828L;\n+                    actionPanel.add(new ActionLink<RealmTO>(realmTO) {\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final RealmTO ignore) {\n-                        onClickEdit(target, realmTO);\n-                    }\n-                }, ActionLink.ActionType.EDIT, StandardEntitlement.REALM_UPDATE).hideLabel();\n+                        private static final long serialVersionUID = 2802988981431379828L;\n \n-                actionPanel.add(new ActionLink<RealmTO>(realmTO) {\n+                        @Override\n+                        public void onClick(final AjaxRequestTarget target, final RealmTO ignore) {\n+                            onClickEdit(target, realmTO);\n+                        }\n+                    }, ActionLink.ActionType.EDIT, StandardEntitlement.REALM_UPDATE).hideLabel();\n \n-                    private static final long serialVersionUID = 2802988981431379827L;\n+                    actionPanel.add(new ActionLink<RealmTO>(realmTO) {\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final RealmTO ignore) {\n-                        onClickTemplate(target);\n-                    }\n-                }, ActionLink.ActionType.TEMPLATE, StandardEntitlement.REALM_UPDATE).hideLabel();\n+                        private static final long serialVersionUID = 2802988981431379827L;\n \n-                actionPanel.add(new ActionLink<RealmTO>(realmTO) {\n+                        @Override\n+                        public void onClick(final AjaxRequestTarget target, final RealmTO ignore) {\n+                            onClickTemplate(target);\n+                        }\n+                    }, ActionLink.ActionType.TEMPLATE, StandardEntitlement.REALM_UPDATE).hideLabel();\n \n-                    private static final long serialVersionUID = 2802988981431379829L;\n+                    actionPanel.add(new ActionLink<RealmTO>(realmTO) {\n \n-                    @Override\n-                    public void onClick(final AjaxRequestTarget target, final RealmTO ignore) {\n-                        onClickDelete(target, realmTO);\n-                    }\n-                }, ActionLink.ActionType.DELETE, StandardEntitlement.REALM_DELETE, true).hideLabel();\n+                        private static final long serialVersionUID = 2802988981431379829L;\n \n+                        @Override\n+                        public void onClick(final AjaxRequestTarget target, final RealmTO ignore) {\n+                            onClickDelete(target, realmTO);\n+                        }\n+                    }, ActionLink.ActionType.DELETE, StandardEntitlement.REALM_DELETE, true).hideLabel();\n+                }\n+                \n                 RealmDetails panel = new RealmDetails(panelId, realmTO, actionPanel, false);\n                 panel.setContentEnabled(false);\n                 actionPanel.setEnabled(true);\n@@ -165,8 +169,8 @@ public boolean isVisible() {\n             }\n         });\n \n-        final Triple<UserFormLayoutInfo, GroupFormLayoutInfo, Map<String, AnyObjectFormLayoutInfo>> formLayoutInfo =\n-                FormLayoutInfoUtils.fetch(anyTypeTOs);\n+        final Triple<UserFormLayoutInfo, GroupFormLayoutInfo, Map<String, AnyObjectFormLayoutInfo>> formLayoutInfo\n+                = FormLayoutInfoUtils.fetch(anyTypeTOs);\n \n         Collections.sort(anyTypeTOs, new AnyTypeComparator());\n         for (final AnyTypeTO anyTypeTO : anyTypeTOs) {"},{"sha":"2204289f0ef8ce078c8d95f247bc62291218b5f8","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmChoicePanel.java","status":"modified","additions":137,"deletions":6,"changes":143,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.java?ref=03d5364b14bb911358f8b468924e304576ff99da","patch":"@@ -39,12 +39,15 @@\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.to.DynRealmTO;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.link.AbstractLink;\n@@ -61,7 +64,9 @@ public class RealmChoicePanel extends Panel {\n \n     private final PageReference pageRef;\n \n-    private final LoadableDetachableModel<List<Pair<String, RealmTO>>> ldm;\n+    private final LoadableDetachableModel<List<Pair<String, RealmTO>>> realmTree;\n+\n+    private final LoadableDetachableModel<List<DynRealmTO>> dynRealmTree;\n \n     private final WebMarkupContainer container;\n \n@@ -77,11 +82,11 @@ public RealmChoicePanel(final String id, final PageReference pageRef) {\n         tree = new HashMap<>();\n \n         RealmTO fakeRootRealm = new RealmTO();\n-        fakeRootRealm.setName(\"/\");\n-        fakeRootRealm.setFullPath(\"/\");\n+        fakeRootRealm.setName(SyncopeConstants.ROOT_REALM);\n+        fakeRootRealm.setFullPath(SyncopeConstants.ROOT_REALM);\n         model = Model.of(fakeRootRealm);\n \n-        ldm = new LoadableDetachableModel<List<Pair<String, RealmTO>>>() {\n+        realmTree = new LoadableDetachableModel<List<Pair<String, RealmTO>>>() {\n \n             private static final long serialVersionUID = -7688359318035249200L;\n \n@@ -111,7 +116,31 @@ protected List<Pair<String, RealmTO>> load() {\n             }\n         };\n \n-        container = new WebMarkupContainer(\"container\", ldm);\n+        dynRealmTree = new LoadableDetachableModel<List<DynRealmTO>>() {\n+\n+            private static final long serialVersionUID = 5275935387613157437L;\n+\n+            @Override\n+            protected List<DynRealmTO> load() {\n+                final List<DynRealmTO> dynRealms = realmRestClient.listDynReams();\n+                dynRealms.sort(new Comparator<DynRealmTO>() {\n+\n+                    @Override\n+                    public int compare(final DynRealmTO left, final DynRealmTO right) {\n+                        if (left == null) {\n+                            return -1;\n+                        } else if (right == null) {\n+                            return 1;\n+                        } else {\n+                            return left.getKey().compareTo(right.getKey());\n+                        }\n+                    }\n+                });\n+                return dynRealms;\n+            }\n+        };\n+\n+        container = new WebMarkupContainer(\"container\", realmTree);\n         container.setOutputMarkupId(true);\n         add(container);\n \n@@ -121,6 +150,17 @@ protected List<Pair<String, RealmTO>> load() {\n     }\n \n     public final void reloadRealmTree() {\n+        final Label realmLabel = new Label(\"realmLabel\", new Model<String>());\n+        realmLabel.setOutputMarkupId(true);\n+\n+        container.addOrReplace(realmLabel);\n+\n+        if (model.getObject().getFullPath().startsWith(SyncopeConstants.ROOT_REALM)) {\n+            realmLabel.setDefaultModel(new ResourceModel(\"realmLabel\", \"Realm\"));\n+        } else {\n+            realmLabel.setDefaultModel(new ResourceModel(\"dynRealmLabel\", \"Dynamic Realm\"));\n+        }\n+\n         final Label label = new Label(\"realm\", model.getObject().getFullPath());\n         label.setOutputMarkupId(true);\n         container.addOrReplace(label);\n@@ -134,7 +174,32 @@ public final void reloadRealmTree() {\n             protected List<AbstractLink> newSubMenuButtons(final String buttonMarkupId) {\n                 List<AbstractLink> links = new ArrayList<>();\n \n-                for (Pair<String, RealmTO> link : ldm.getObject()) {\n+                links.add(new BootstrapAjaxLink<String>(\n+                        ButtonList.getButtonMarkupId(),\n+                        new Model<String>(),\n+                        Buttons.Type.Link,\n+                        new ResourceModel(\"realms\", \"Realms\")) {\n+\n+                    private static final long serialVersionUID = -7978723352517770744L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+\n+                    }\n+\n+                    @Override\n+                    public boolean isEnabled() {\n+                        return false;\n+                    }\n+\n+                    @Override\n+                    protected void onComponentTag(final ComponentTag tag) {\n+                        tag.put(\"class\", \"panel box box-primary box-header with-border\");\n+                        tag.put(\"style\", \"margin: 20px 5px 0px 5px; width: 90%\");\n+                    }\n+                });\n+\n+                for (Pair<String, RealmTO> link : realmTree.getObject()) {\n                     final RealmTO realmTO = link.getValue();\n                     links.add(new BootstrapAjaxLink<String>(\n                             ButtonList.getButtonMarkupId(),\n@@ -148,6 +213,7 @@ protected List<AbstractLink> newSubMenuButtons(final String buttonMarkupId) {\n                         public void onClick(final AjaxRequestTarget target) {\n                             model.setObject(realmTO);\n                             label.setDefaultModelObject(model.getObject().getFullPath());\n+                            realmLabel.setDefaultModel(new ResourceModel(\"realmLabel\", \"Realm\"));\n                             target.add(label);\n                             send(pageRef.getPage(), Broadcast.EXACT, new ChosenRealm<>(realmTO, target));\n                         }\n@@ -164,6 +230,71 @@ public boolean evaluate(final String availableRealm) {\n                         }\n                     });\n                 }\n+\n+                if (!dynRealmTree.getObject().isEmpty()) {\n+                    links.add(new BootstrapAjaxLink<String>(\n+                            ButtonList.getButtonMarkupId(),\n+                            new Model<String>(),\n+                            Buttons.Type.Link,\n+                            new ResourceModel(\"dynrealms\", \"Dynamic Realms\")) {\n+\n+                        private static final long serialVersionUID = -7978723352517770744L;\n+\n+                        @Override\n+                        public void onClick(final AjaxRequestTarget target) {\n+\n+                        }\n+\n+                        @Override\n+                        public boolean isEnabled() {\n+                            return false;\n+                        }\n+\n+                        @Override\n+                        protected void onComponentTag(final ComponentTag tag) {\n+                            tag.put(\"class\", \"panel box box-primary box-header with-border\");\n+                            tag.put(\"style\", \"margin: 20px 5px 0px 5px; width: 90%\");\n+                        }\n+                    });\n+\n+                    for (DynRealmTO dynRealmTO : dynRealmTree.getObject()) {\n+                        final RealmTO realmTO = new RealmTO();\n+                        realmTO.setKey(dynRealmTO.getKey());\n+                        realmTO.setName(dynRealmTO.getKey());\n+                        realmTO.setFullPath(dynRealmTO.getKey());\n+\n+                        links.add(new BootstrapAjaxLink<String>(\n+                                ButtonList.getButtonMarkupId(),\n+                                new Model<String>(),\n+                                Buttons.Type.Link,\n+                                new Model<>(realmTO.getKey())) {\n+\n+                            private static final long serialVersionUID = -7978723352517770644L;\n+\n+                            @Override\n+                            public void onClick(final AjaxRequestTarget target) {\n+                                model.setObject(realmTO);\n+                                label.setDefaultModelObject(realmTO.getKey());\n+                                realmLabel.setDefaultModel(new ResourceModel(\"dynRealmLabel\", \"Dynamic Realm\"));\n+                                target.add(label);\n+                                send(pageRef.getPage(), Broadcast.EXACT, new ChosenRealm<>(realmTO, target));\n+                            }\n+\n+                            @Override\n+                            public boolean isEnabled() {\n+                                return IterableUtils.matchesAny(availableRealms, new Predicate<String>() {\n+\n+                                    @Override\n+                                    public boolean evaluate(final String availableRealm) {\n+                                        return \"/\".equals(availableRealm)\n+                                                || realmTO.getKey().equals(availableRealm);\n+                                    }\n+                                });\n+                            }\n+                        });\n+                    }\n+                }\n+\n                 return links;\n             }\n         };"},{"sha":"717a955aa67f927f1ecb57c8cdaa82ffa91573b0","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/UserDirectoryPanel.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FUserDirectoryPanel.java?ref=03d5364b14bb911358f8b468924e304576ff99da","patch":"@@ -42,6 +42,7 @@\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n import org.apache.syncope.client.console.wizards.any.AnyWrapper;\n import org.apache.syncope.client.console.wizards.any.UserWrapper;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -198,9 +199,8 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n \n             @Override\n             protected boolean statusCondition(final UserTO modelObject) {\n-                return addAjaxLink.isVisibleInHierarchy();\n+                return addAjaxLink.isVisibleInHierarchy() && realm.startsWith(SyncopeConstants.ROOT_REALM);\n             }\n-\n         }, ActionType.CLONE, StandardEntitlement.USER_CREATE).setRealm(realm);\n \n         panel.add(new ActionLink<UserTO>() {\n@@ -310,7 +310,7 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                     utilityModal.show(true);\n                 }\n             }, ActionType.PROPAGATION_TASKS, StandardEntitlement.TASK_LIST);\n-            \n+\n             panel.add(new ActionLink<UserTO>() {\n \n                 private static final long serialVersionUID = -7978723352517770644L;\n@@ -343,6 +343,11 @@ public void onClick(final AjaxRequestTarget target, final UserTO ignore) {\n                 }\n                 ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n+\n+            @Override\n+            protected boolean statusCondition(final UserTO modelObject) {\n+                return realm.startsWith(SyncopeConstants.ROOT_REALM);\n+            }\n         }, ActionType.DELETE, StandardEntitlement.USER_DELETE, true).setRealm(realm);\n \n         return panel;"},{"sha":"3855d31c8003300196c412627ac244b1b9ec8564","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/RealmRestClient.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java?ref=03d5364b14bb911358f8b468924e304576ff99da","patch":"@@ -18,11 +18,15 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n+import static org.apache.syncope.client.console.rest.BaseRestClient.getService;\n+\n import java.util.List;\n import javax.ws.rs.core.GenericType;\n import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.lib.to.DynRealmTO;\n import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.rest.api.service.DynRealmService;\n import org.apache.syncope.common.rest.api.service.RealmService;\n \n /**\n@@ -36,6 +40,14 @@ public List<RealmTO> list() {\n         return getService(RealmService.class).list();\n     }\n \n+    public List<DynRealmTO> listDynReams() {\n+        return getService(DynRealmService.class).list();\n+    }\n+\n+    public DynRealmTO readDynReams(final String key) {\n+        return getService(DynRealmService.class).read(key);\n+    }\n+\n     public ProvisioningResult<RealmTO> create(final String parentPath, final RealmTO realmTO) {\n         final Response response = getService(RealmService.class).create(parentPath, realmTO);\n         return response.readEntity(new GenericType<ProvisioningResult<RealmTO>>() {"},{"sha":"5b81fc209a0caea2fe907123e0817240a8f25b77","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=03d5364b14bb911358f8b468924e304576ff99da","patch":"@@ -1141,6 +1141,10 @@ ul.menu i {\n   width: 35px;\n }\n \n+div#inline-actions ul.menu i, div#tablehandling ul.menu i {\n+  width: auto !important;\n+}\n+\n .toggle-menu ul.menu li a {\n   padding: 0px;\n   text-align: left;"},{"sha":"4cfe42dbe8386753e98d770be2bf83819f3f32c1","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Realms.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.properties?ref=03d5364b14bb911358f8b468924e304576ff99da","patch":"@@ -18,3 +18,7 @@ any.realm.new=New Realm\n any.realm.edit=Edit Realm ${fullPath}\n inner.template.edit=Edit ${left} template for '${right.fullPath}' \n afterObj=Object Link\n+realmLabel=Realm\n+dynRealmLabel=Dynamic Realm\n+realms=Realms\n+dynrealms=Dynamic Realms"},{"sha":"c2f149c58677e9f4f6e27f61aded687cc77c1193","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Realms_it.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms_it.properties?ref=03d5364b14bb911358f8b468924e304576ff99da","patch":"@@ -18,3 +18,7 @@ any.realm.new=New Realm\n any.realm.edit=Edit Realm ${fullPath}\n inner.template.edit=Modifica ${left} template per '${right.fullPath}' \n afterObj=Object Link\n+realmLabel=Realm\n+dynRealmLabel=Realm Dinamico\n+realms=Realm\n+dynrealms=Realm Dinamici"},{"sha":"4cfe42dbe8386753e98d770be2bf83819f3f32c1","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Realms_pt_BR.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms_pt_BR.properties?ref=03d5364b14bb911358f8b468924e304576ff99da","patch":"@@ -18,3 +18,7 @@ any.realm.new=New Realm\n any.realm.edit=Edit Realm ${fullPath}\n inner.template.edit=Edit ${left} template for '${right.fullPath}' \n afterObj=Object Link\n+realmLabel=Realm\n+dynRealmLabel=Dynamic Realm\n+realms=Realms\n+dynrealms=Dynamic Realms"},{"sha":"d1d026042ec3557bfc07f0bcf7f05f4faed7c926","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Realms_ru.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms_ru.properties?ref=03d5364b14bb911358f8b468924e304576ff99da","patch":"@@ -19,3 +19,7 @@ any.realm.new=\\u0421\\u043e\\u0437\\u0434\\u0430\\u0442\\u044c \\u043e\\u0431\\u043b\\u043\n any.realm.edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c \\u043e\\u0431\\u043b\\u0430\\u0441\\u0442\\u044c ${fullPath}\n inner.template.edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c ${left} \\u0448\\u0430\\u0431\\u043b\\u043e\\u043d \\u0434\\u043b\\u044f '${right.fullPath}'\n afterObj=\\u0421\\u0432\\u044f\\u0437\\u044c \\u043e\\u0431\\u044a\\u0435\\u043a\\u0442\\u043e\\u0432\n+realmLabel=Realm\n+dynRealmLabel=Dynamic Realm\n+realms=Realms\n+dynrealms=Dynamic Realms"},{"sha":"9933477eb7330bbca552e74f08810bf28f318680","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmChoicePanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d5364b14bb911358f8b468924e304576ff99da/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmChoicePanel.html?ref=03d5364b14bb911358f8b468924e304576ff99da","patch":"@@ -20,7 +20,7 @@\n   <wicket:panel>\n     <div wicket:id=\"container\" class=\"realm-header\">\n       <div class=\"realm-label\">\n-        Realm: <label wicket:id=\"realm\"/>\n+        <label wicket:id=\"realmLabel\"/>: <label wicket:id=\"realm\"/>\n       </div>\n       <div class=\"realm-choice\">\n         <button wicket:id=\"realms\"></button>"},{"sha":"26eabdbbf34884ba74b7108a1b7b0dc1b6b32dbc","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RealmsITCase.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d5364b14bb911358f8b468924e304576ff99da/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d5364b14bb911358f8b468924e304576ff99da/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java?ref=03d5364b14bb911358f8b468924e304576ff99da","patch":"@@ -66,7 +66,7 @@ public void create() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n \n         TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:btn\", Constants.ON_CLICK);\n-        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:4:button\",\n+        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:5:button\",\n                 Constants.ON_CLICK);\n \n         TESTER.assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/testRealm\");\n@@ -104,7 +104,7 @@ public void update() {\n     @Test\n     public void addUserTemplate() {\n         TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:btn\", Constants.ON_CLICK);\n-        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:3:button\",\n+        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:4:button\",\n                 Constants.ON_CLICK);\n \n         TESTER.assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/odd\");\n@@ -154,7 +154,7 @@ public void addUserTemplate() {\n     @Test\n     public void verifyPropagation() {\n         TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:btn\", Constants.ON_CLICK);\n-        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:2:button\",\n+        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:3:button\",\n                 Constants.ON_CLICK);\n \n         TESTER.clickLink("},{"sha":"77d479e31b021cabbac3ccc09ed30a1ed64dee76","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/UsersITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/03d5364b14bb911358f8b468924e304576ff99da/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/03d5364b14bb911358f8b468924e304576ff99da/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java?ref=03d5364b14bb911358f8b468924e304576ff99da","patch":"@@ -164,7 +164,7 @@ public void editUser() {\n     public void editUserMembership() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n         TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:btn\", Constants.ON_CLICK);\n-        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:1:button\",\n+        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:2:button\",\n                 Constants.ON_CLICK);\n \n         TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");"}]}