{"sha":"ef300e1289e66cc3bde726819a21f9686b1fcafa","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmVmMzAwZTEyODllNjZjYzNiZGU3MjY4MTlhMjFmOTY4NmIxZmNhZmE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-11-23T14:58:56Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-11-23T17:16:55Z"},"message":"Adjusting platform info with latest changes WRT persistence.properties","tree":{"sha":"45fc7731966767e2b2a40eb3eab46a4372c07c03","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/45fc7731966767e2b2a40eb3eab46a4372c07c03"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ef300e1289e66cc3bde726819a21f9686b1fcafa","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ef300e1289e66cc3bde726819a21f9686b1fcafa","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ef300e1289e66cc3bde726819a21f9686b1fcafa","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ef300e1289e66cc3bde726819a21f9686b1fcafa/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"9ae2e69cbcba4c246de31711159172dc9136ba3a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9ae2e69cbcba4c246de31711159172dc9136ba3a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9ae2e69cbcba4c246de31711159172dc9136ba3a"}],"stats":{"total":378,"additions":270,"deletions":108},"files":[{"sha":"e277b9da02ff94ff976b8d42793638934671b296","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/info/Info.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ef300e1289e66cc3bde726819a21f9686b1fcafa/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ef300e1289e66cc3bde726819a21f9686b1fcafa/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java?ref=ef300e1289e66cc3bde726819a21f9686b1fcafa","patch":"@@ -73,9 +73,9 @@ public void selfRegistrationAllowed() {\n     public void provisioningManager() {\n         try {\n             infoResultManager.printProvisioningManager(\n-                    platformInfo.getAnyObjectProvisioningManager(),\n-                    platformInfo.getUserProvisioningManager(),\n-                    platformInfo.getGroupProvisioningManager());\n+                    platformInfo.getProvisioningInfo().getAnyObjectProvisioningManager(),\n+                    platformInfo.getProvisioningInfo().getUserProvisioningManager(),\n+                    platformInfo.getProvisioningInfo().getGroupProvisioningManager());\n         } catch (final Exception ex) {\n             LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());\n@@ -234,7 +234,7 @@ public void passwordGenerator() {\n \n     public void virAttrCache() {\n         try {\n-            infoResultManager.printVirtualAttributeCacheClass(platformInfo.getVirAttrCache());\n+            infoResultManager.printVirtualAttributeCacheClass(platformInfo.getProvisioningInfo().getVirAttrCache());\n         } catch (final Exception ex) {\n             LOG.error(\"Information error\", ex);\n             infoResultManager.genericError(ex.getMessage());"},{"sha":"805c8c72b7391c452c25db8d5e5a85075b5a5aaa","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/info/PlatformInfo.java","status":"modified","additions":207,"deletions":88,"changes":295,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ef300e1289e66cc3bde726819a21f9686b1fcafa/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FPlatformInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ef300e1289e66cc3bde726819a21f9686b1fcafa/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FPlatformInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FPlatformInfo.java?ref=ef300e1289e66cc3bde726819a21f9686b1fcafa","patch":"@@ -38,37 +38,216 @@ public class PlatformInfo implements Serializable {\n \n     private static final long serialVersionUID = -7941853999417673827L;\n \n-    private String version;\n+    @XmlRootElement(name = \"provisioningInfo\")\n+    @XmlType\n+    public class ProvisioningInfo implements Serializable {\n \n-    private String buildNumber;\n+        private static final long serialVersionUID = 533340357732839568L;\n \n-    private boolean selfRegAllowed;\n+        private String propagationTaskExecutor;\n \n-    private boolean pwdResetAllowed;\n+        private String virAttrCache;\n \n-    private boolean pwdResetRequiringSecurityQuestions;\n+        private String anyObjectProvisioningManager;\n \n-    private final Set<String> connIdLocations = new HashSet<>();\n+        private String userProvisioningManager;\n \n-    private String propagationTaskExecutor;\n+        private String groupProvisioningManager;\n \n-    private String anyObjectWorkflowAdapter;\n+        public String getPropagationTaskExecutor() {\n+            return propagationTaskExecutor;\n+        }\n \n-    private String userWorkflowAdapter;\n+        public void setPropagationTaskExecutor(final String propagationTaskExecutor) {\n+            this.propagationTaskExecutor = propagationTaskExecutor;\n+        }\n \n-    private String groupWorkflowAdapter;\n+        public String getVirAttrCache() {\n+            return virAttrCache;\n+        }\n \n-    private String anyObjectProvisioningManager;\n+        public void setVirAttrCache(final String virAttrCache) {\n+            this.virAttrCache = virAttrCache;\n+        }\n \n-    private String userProvisioningManager;\n+        public String getAnyObjectProvisioningManager() {\n+            return anyObjectProvisioningManager;\n+        }\n \n-    private String groupProvisioningManager;\n+        public void setAnyObjectProvisioningManager(final String anyObjectProvisioningManager) {\n+            this.anyObjectProvisioningManager = anyObjectProvisioningManager;\n+        }\n \n-    private String virAttrCache;\n+        public String getUserProvisioningManager() {\n+            return userProvisioningManager;\n+        }\n \n-    private String passwordGenerator;\n+        public void setUserProvisioningManager(final String userProvisioningManager) {\n+            this.userProvisioningManager = userProvisioningManager;\n+        }\n+\n+        public String getGroupProvisioningManager() {\n+            return groupProvisioningManager;\n+        }\n+\n+        public void setGroupProvisioningManager(final String groupProvisioningManager) {\n+            this.groupProvisioningManager = groupProvisioningManager;\n+        }\n+    }\n+\n+    @XmlRootElement(name = \"workflowInfo\")\n+    @XmlType\n+    public class WorkflowInfo implements Serializable {\n+\n+        private static final long serialVersionUID = 6736937721099195324L;\n+\n+        private String anyObjectWorkflowAdapter;\n+\n+        private String userWorkflowAdapter;\n+\n+        private String groupWorkflowAdapter;\n+\n+        public String getAnyObjectWorkflowAdapter() {\n+            return anyObjectWorkflowAdapter;\n+        }\n+\n+        public void setAnyObjectWorkflowAdapter(final String anyObjectWorkflowAdapter) {\n+            this.anyObjectWorkflowAdapter = anyObjectWorkflowAdapter;\n+        }\n+\n+        public String getUserWorkflowAdapter() {\n+            return userWorkflowAdapter;\n+        }\n+\n+        public void setUserWorkflowAdapter(final String userWorkflowAdapter) {\n+            this.userWorkflowAdapter = userWorkflowAdapter;\n+        }\n+\n+        public String getGroupWorkflowAdapter() {\n+            return groupWorkflowAdapter;\n+        }\n+\n+        public void setGroupWorkflowAdapter(final String groupWorkflowAdapter) {\n+            this.groupWorkflowAdapter = groupWorkflowAdapter;\n+        }\n+    }\n+\n+    @XmlRootElement(name = \"persistenceInfo\")\n+    @XmlType\n+    public class PersistenceInfo implements Serializable {\n+\n+        private static final long serialVersionUID = 2902980556801069487L;\n+\n+        private String entityFactory;\n+\n+        private String plainSchemaDAO;\n+\n+        private String plainAttrDAO;\n+\n+        private String plainAttrValueDAO;\n+\n+        private String anySearchDAO;\n+\n+        private String userDAO;\n+\n+        private String groupDAO;\n+\n+        private String anyObjectDAO;\n+\n+        private String confDAO;\n+\n+        public String getEntityFactory() {\n+            return entityFactory;\n+        }\n+\n+        public void setEntityFactory(final String entityFactory) {\n+            this.entityFactory = entityFactory;\n+        }\n+\n+        public String getPlainSchemaDAO() {\n+            return plainSchemaDAO;\n+        }\n+\n+        public void setPlainSchemaDAO(final String plainSchemaDAO) {\n+            this.plainSchemaDAO = plainSchemaDAO;\n+        }\n+\n+        public String getPlainAttrDAO() {\n+            return plainAttrDAO;\n+        }\n+\n+        public void setPlainAttrDAO(final String plainAttrDAO) {\n+            this.plainAttrDAO = plainAttrDAO;\n+        }\n+\n+        public String getPlainAttrValueDAO() {\n+            return plainAttrValueDAO;\n+        }\n+\n+        public void setPlainAttrValueDAO(final String plainAttrValueDAO) {\n+            this.plainAttrValueDAO = plainAttrValueDAO;\n+        }\n+\n+        public String getAnySearchDAO() {\n+            return anySearchDAO;\n+        }\n+\n+        public void setAnySearchDAO(final String anySearchDAO) {\n+            this.anySearchDAO = anySearchDAO;\n+        }\n+\n+        public String getUserDAO() {\n+            return userDAO;\n+        }\n+\n+        public void setUserDAO(final String userDAO) {\n+            this.userDAO = userDAO;\n+        }\n+\n+        public String getGroupDAO() {\n+            return groupDAO;\n+        }\n+\n+        public void setGroupDAO(final String groupDAO) {\n+            this.groupDAO = groupDAO;\n+        }\n+\n+        public String getAnyObjectDAO() {\n+            return anyObjectDAO;\n+        }\n+\n+        public void setAnyObjectDAO(final String anyObjectDAO) {\n+            this.anyObjectDAO = anyObjectDAO;\n+        }\n+\n+        public String getConfDAO() {\n+            return confDAO;\n+        }\n+\n+        public void setConfDAO(final String confDAO) {\n+            this.confDAO = confDAO;\n+        }\n+    }\n+\n+    private String version;\n+\n+    private String buildNumber;\n+\n+    private final ProvisioningInfo provisioningInfo = new ProvisioningInfo();\n+\n+    private final WorkflowInfo workflowInfo = new WorkflowInfo();\n+\n+    private final PersistenceInfo persistenceInfo = new PersistenceInfo();\n+\n+    private boolean selfRegAllowed;\n+\n+    private boolean pwdResetAllowed;\n+\n+    private boolean pwdResetRequiringSecurityQuestions;\n \n-    private String anySearchDAO;\n+    private final Set<String> connIdLocations = new HashSet<>();\n+\n+    private String passwordGenerator;\n \n     private final List<String> anyTypes = new ArrayList<>();\n \n@@ -90,6 +269,18 @@ public String getBuildNumber() {\n         return buildNumber;\n     }\n \n+    public ProvisioningInfo getProvisioningInfo() {\n+        return provisioningInfo;\n+    }\n+\n+    public WorkflowInfo getWorkflowInfo() {\n+        return workflowInfo;\n+    }\n+\n+    public PersistenceInfo getPersistenceInfo() {\n+        return persistenceInfo;\n+    }\n+\n     public boolean isSelfRegAllowed() {\n         return selfRegAllowed;\n     }\n@@ -109,38 +300,6 @@ public Set<String> getConnIdLocations() {\n         return connIdLocations;\n     }\n \n-    public String getPropagationTaskExecutor() {\n-        return propagationTaskExecutor;\n-    }\n-\n-    public String getAnyObjectWorkflowAdapter() {\n-        return anyObjectWorkflowAdapter;\n-    }\n-\n-    public String getUserWorkflowAdapter() {\n-        return userWorkflowAdapter;\n-    }\n-\n-    public String getGroupWorkflowAdapter() {\n-        return groupWorkflowAdapter;\n-    }\n-\n-    public String getAnyObjectProvisioningManager() {\n-        return anyObjectProvisioningManager;\n-    }\n-\n-    public String getUserProvisioningManager() {\n-        return userProvisioningManager;\n-    }\n-\n-    public String getGroupProvisioningManager() {\n-        return groupProvisioningManager;\n-    }\n-\n-    public String getVirAttrCache() {\n-        return virAttrCache;\n-    }\n-\n     public String getPasswordGenerator() {\n         return passwordGenerator;\n     }\n@@ -149,14 +308,6 @@ public void setPasswordGenerator(final String passwordGenerator) {\n         this.passwordGenerator = passwordGenerator;\n     }\n \n-    public String getAnySearchDAO() {\n-        return anySearchDAO;\n-    }\n-\n-    public void setAnySearchDAO(final String anySearchDAO) {\n-        this.anySearchDAO = anySearchDAO;\n-    }\n-\n     @XmlElementWrapper(name = \"anyTypes\")\n     @XmlElement(name = \"anyType\")\n     @JsonProperty(\"anyTypes\")\n@@ -223,36 +374,4 @@ public void setPwdResetAllowed(final boolean pwdResetAllowed) {\n     public void setPwdResetRequiringSecurityQuestions(final boolean pwdResetRequiringSecurityQuestions) {\n         this.pwdResetRequiringSecurityQuestions = pwdResetRequiringSecurityQuestions;\n     }\n-\n-    public void setPropagationTaskExecutor(final String propagationTaskExecutor) {\n-        this.propagationTaskExecutor = propagationTaskExecutor;\n-    }\n-\n-    public void setAnyObjectWorkflowAdapter(final String anyObjectWorkflowAdapter) {\n-        this.anyObjectWorkflowAdapter = anyObjectWorkflowAdapter;\n-    }\n-\n-    public void setUserWorkflowAdapter(final String userWorkflowAdapter) {\n-        this.userWorkflowAdapter = userWorkflowAdapter;\n-    }\n-\n-    public void setGroupWorkflowAdapter(final String groupWorkflowAdapter) {\n-        this.groupWorkflowAdapter = groupWorkflowAdapter;\n-    }\n-\n-    public void setAnyObjectProvisioningManager(final String anyObjectProvisioningManager) {\n-        this.anyObjectProvisioningManager = anyObjectProvisioningManager;\n-    }\n-\n-    public void setUserProvisioningManager(final String userProvisioningManager) {\n-        this.userProvisioningManager = userProvisioningManager;\n-    }\n-\n-    public void setGroupProvisioningManager(final String groupProvisioningManager) {\n-        this.groupProvisioningManager = groupProvisioningManager;\n-    }\n-\n-    public void setVirAttrCache(final String virAttrCache) {\n-        this.virAttrCache = virAttrCache;\n-    }\n }"},{"sha":"f5eee14e7d9844c277cb7acb9349d4f359b9e32a","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/SyncopeLogic.java","status":"modified","additions":52,"deletions":9,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ef300e1289e66cc3bde726819a21f9686b1fcafa/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ef300e1289e66cc3bde726819a21f9686b1fcafa/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java?ref=ef300e1289e66cc3bde726819a21f9686b1fcafa","patch":"@@ -57,6 +57,9 @@\n import org.apache.syncope.core.persistence.api.dao.GroupDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.NotificationDAO;\n+import org.apache.syncope.core.persistence.api.dao.PlainAttrDAO;\n+import org.apache.syncope.core.persistence.api.dao.PlainAttrValueDAO;\n+import org.apache.syncope.core.persistence.api.dao.PlainSchemaDAO;\n import org.apache.syncope.core.persistence.api.dao.PolicyDAO;\n import org.apache.syncope.core.persistence.api.dao.RoleDAO;\n import org.apache.syncope.core.persistence.api.dao.SecurityQuestionDAO;\n@@ -70,6 +73,7 @@\n import org.apache.syncope.core.persistence.api.dao.search.SearchCond;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n+import org.apache.syncope.core.persistence.api.entity.EntityFactory;\n import org.apache.syncope.core.persistence.api.entity.group.Group;\n import org.apache.syncope.core.persistence.api.entity.group.TypeExtension;\n import org.apache.syncope.core.persistence.api.entity.policy.AccountPolicy;\n@@ -185,6 +189,18 @@ public class SyncopeLogic extends AbstractLogic<EntityTO> {\n     @Autowired\n     private PasswordGenerator passwordGenerator;\n \n+    @Autowired\n+    private EntityFactory entityFactory;\n+\n+    @Autowired\n+    private PlainSchemaDAO plainSchemaDAO;\n+\n+    @Autowired\n+    private PlainAttrDAO plainAttrDAO;\n+\n+    @Autowired\n+    private PlainAttrValueDAO plainAttrValueDAO;\n+\n     @Autowired\n     private AnySearchDAO anySearchDAO;\n \n@@ -216,17 +232,44 @@ public PlatformInfo platform() {\n                             map(URI::toASCIIString).collect(Collectors.toList()));\n                 }\n \n-                PLATFORM_INFO.setPropagationTaskExecutor(AopUtils.getTargetClass(propagationTaskExecutor).getName());\n-                PLATFORM_INFO.setAnyObjectWorkflowAdapter(AopUtils.getTargetClass(awfAdapter).getName());\n-                PLATFORM_INFO.setUserWorkflowAdapter(AopUtils.getTargetClass(uwfAdapter).getName());\n-                PLATFORM_INFO.setGroupWorkflowAdapter(AopUtils.getTargetClass(gwfAdapter).getName());\n+                PLATFORM_INFO.getWorkflowInfo().\n+                        setAnyObjectWorkflowAdapter(AopUtils.getTargetClass(awfAdapter).getName());\n+                PLATFORM_INFO.getWorkflowInfo().\n+                        setUserWorkflowAdapter(AopUtils.getTargetClass(uwfAdapter).getName());\n+                PLATFORM_INFO.getWorkflowInfo().\n+                        setGroupWorkflowAdapter(AopUtils.getTargetClass(gwfAdapter).getName());\n+\n+                PLATFORM_INFO.getProvisioningInfo().\n+                        setAnyObjectProvisioningManager(AopUtils.getTargetClass(aProvisioningManager).getName());\n+                PLATFORM_INFO.getProvisioningInfo().\n+                        setUserProvisioningManager(AopUtils.getTargetClass(uProvisioningManager).getName());\n+                PLATFORM_INFO.getProvisioningInfo().\n+                        setGroupProvisioningManager(AopUtils.getTargetClass(gProvisioningManager).getName());\n+                PLATFORM_INFO.getProvisioningInfo().\n+                        setPropagationTaskExecutor(AopUtils.getTargetClass(propagationTaskExecutor).getName());\n+                PLATFORM_INFO.getProvisioningInfo().\n+                        setVirAttrCache(AopUtils.getTargetClass(virAttrCache).getName());\n \n-                PLATFORM_INFO.setAnyObjectProvisioningManager(AopUtils.getTargetClass(aProvisioningManager).getName());\n-                PLATFORM_INFO.setUserProvisioningManager(AopUtils.getTargetClass(uProvisioningManager).getName());\n-                PLATFORM_INFO.setGroupProvisioningManager(AopUtils.getTargetClass(gProvisioningManager).getName());\n-                PLATFORM_INFO.setVirAttrCache(AopUtils.getTargetClass(virAttrCache).getName());\n                 PLATFORM_INFO.setPasswordGenerator(AopUtils.getTargetClass(passwordGenerator).getName());\n-                PLATFORM_INFO.setAnySearchDAO(AopUtils.getTargetClass(anySearchDAO).getName());\n+\n+                PLATFORM_INFO.getPersistenceInfo().\n+                        setEntityFactory(AopUtils.getTargetClass(entityFactory).getName());\n+                PLATFORM_INFO.getPersistenceInfo().\n+                        setPlainSchemaDAO(AopUtils.getTargetClass(plainSchemaDAO).getName());\n+                PLATFORM_INFO.getPersistenceInfo().\n+                        setPlainAttrDAO(AopUtils.getTargetClass(plainAttrDAO).getName());\n+                PLATFORM_INFO.getPersistenceInfo().\n+                        setPlainAttrValueDAO(AopUtils.getTargetClass(plainAttrValueDAO).getName());\n+                PLATFORM_INFO.getPersistenceInfo().\n+                        setAnySearchDAO(AopUtils.getTargetClass(anySearchDAO).getName());\n+                PLATFORM_INFO.getPersistenceInfo().\n+                        setUserDAO(AopUtils.getTargetClass(userDAO).getName());\n+                PLATFORM_INFO.getPersistenceInfo().\n+                        setGroupDAO(AopUtils.getTargetClass(groupDAO).getName());\n+                PLATFORM_INFO.getPersistenceInfo().\n+                        setAnyObjectDAO(AopUtils.getTargetClass(anyObjectDAO).getName());\n+                PLATFORM_INFO.getPersistenceInfo().\n+                        setConfDAO(AopUtils.getTargetClass(confDAO).getName());\n \n                 Arrays.stream(ImplementationType.values()).\n                         forEach(type -> {"},{"sha":"8f3b5ef5b8caa0b82c96b8a5b374d2cf6f9abb39","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/rest/CamelRoutesRestClient.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ef300e1289e66cc3bde726819a21f9686b1fcafa/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FCamelRoutesRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ef300e1289e66cc3bde726819a21f9686b1fcafa/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FCamelRoutesRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FCamelRoutesRestClient.java?ref=ef300e1289e66cc3bde726819a21f9686b1fcafa","patch":"@@ -46,11 +46,12 @@ public void update(final AnyTypeKind anyTypeKind, final CamelRouteTO routeTO) {\n \n     public boolean isCamelEnabledFor(final AnyTypeKind anyTypeKind) {\n         return anyTypeKind == AnyTypeKind.USER\n-                ? SyncopeConsoleSession.get().getPlatformInfo().getUserProvisioningManager().contains(\"Camel\")\n+                ? SyncopeConsoleSession.get().getPlatformInfo().\n+                        getProvisioningInfo().getUserProvisioningManager().contains(\"Camel\")\n                 : anyTypeKind == AnyTypeKind.ANY_OBJECT\n-                        ? SyncopeConsoleSession.get().getPlatformInfo().\n+                        ? SyncopeConsoleSession.get().getPlatformInfo().getProvisioningInfo().\n                                 getAnyObjectProvisioningManager().contains(\"Camel\")\n-                        : SyncopeConsoleSession.get().getPlatformInfo().\n+                        : SyncopeConsoleSession.get().getPlatformInfo().getProvisioningInfo().\n                                 getGroupProvisioningManager().contains(\"Camel\");\n \n     }"},{"sha":"8ff1763a1660ec4dce04e7c4fbcb46b8506dde02","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/ElasticsearchDetector.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ef300e1289e66cc3bde726819a21f9686b1fcafa/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FElasticsearchDetector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ef300e1289e66cc3bde726819a21f9686b1fcafa/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FElasticsearchDetector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FElasticsearchDetector.java?ref=ef300e1289e66cc3bde726819a21f9686b1fcafa","patch":"@@ -23,7 +23,6 @@\n public class ElasticsearchDetector {\n \n     public static boolean isElasticSearchEnabled(final SyncopeService syncopeService) {\n-        return syncopeService.platform().getAnySearchDAO().contains(\"Elasticsearch\");\n+        return syncopeService.platform().getPersistenceInfo().getAnySearchDAO().contains(\"Elasticsearch\");\n     }\n-\n }"},{"sha":"803c252a6d31b36a2eeea45601809366f2cc562f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/FlowableDetector.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ef300e1289e66cc3bde726819a21f9686b1fcafa/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FFlowableDetector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ef300e1289e66cc3bde726819a21f9686b1fcafa/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FFlowableDetector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FFlowableDetector.java?ref=ef300e1289e66cc3bde726819a21f9686b1fcafa","patch":"@@ -23,6 +23,6 @@\n public class FlowableDetector {\n \n     public static boolean isFlowableEnabledForUserWorkflow(final SyncopeService syncopeService) {\n-        return syncopeService.platform().getUserWorkflowAdapter().contains(\"Flowable\");\n+        return syncopeService.platform().getWorkflowInfo().getUserWorkflowAdapter().contains(\"Flowable\");\n     }\n }"},{"sha":"8112cf84fcbfc25c78d26ca26723801630bba9a5","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/CamelRouteITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ef300e1289e66cc3bde726819a21f9686b1fcafa/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FCamelRouteITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ef300e1289e66cc3bde726819a21f9686b1fcafa/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FCamelRouteITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FCamelRouteITCase.java?ref=ef300e1289e66cc3bde726819a21f9686b1fcafa","patch":"@@ -40,7 +40,7 @@ public class CamelRouteITCase extends AbstractITCase {\n \n     @BeforeEach\n     public void check() {\n-        assumeTrue(syncopeService.platform().getUserProvisioningManager().contains(\"Camel\"));\n+        assumeTrue(syncopeService.platform().getProvisioningInfo().getUserProvisioningManager().contains(\"Camel\"));\n     }\n \n     @Test"}]}