{"sha":"4f6fa1a252f399b225df4c7a73c66201b1ffbd51","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjRmNmZhMWEyNTJmMzk5YjIyNWRmNGM3YTczYzY2MjAxYjFmZmJkNTE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-03-01T16:21:15Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-03-02T11:13:41Z"},"message":"Adding pagination support to sample groovy script for usage with Scripted REST connector","tree":{"sha":"a1cf092580bae5c4de77c645210b81492224c24b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a1cf092580bae5c4de77c645210b81492224c24b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4f6fa1a252f399b225df4c7a73c66201b1ffbd51","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4f6fa1a252f399b225df4c7a73c66201b1ffbd51","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4f6fa1a252f399b225df4c7a73c66201b1ffbd51","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4f6fa1a252f399b225df4c7a73c66201b1ffbd51/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"e073cc43225bbeb4c8ea670750b8f5a0829d6676","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/e073cc43225bbeb4c8ea670750b8f5a0829d6676","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/e073cc43225bbeb4c8ea670750b8f5a0829d6676"}],"stats":{"total":40,"additions":37,"deletions":3},"files":[{"sha":"ba7a2e80a0093664e4b7ea42cf14503a253e36a5","filename":"fit/core-reference/src/test/resources/rest/SearchScript.groovy","status":"modified","additions":37,"deletions":3,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4f6fa1a252f399b225df4c7a73c66201b1ffbd51/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frest%2FSearchScript.groovy","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4f6fa1a252f399b225df4c7a73c66201b1ffbd51/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frest%2FSearchScript.groovy","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Frest%2FSearchScript.groovy?ref=4f6fa1a252f399b225df4c7a73c66201b1ffbd51","patch":"@@ -22,6 +22,7 @@ import com.fasterxml.jackson.databind.node.ObjectNode\n import javax.ws.rs.core.Response\n import org.apache.cxf.jaxrs.client.WebClient\n import org.identityconnectors.common.security.GuardedString\n+import org.identityconnectors.framework.common.objects.OperationOptions;\n \n // Parameters:\n // The connector sends the following:\n@@ -66,6 +67,24 @@ def buildConnectorObject(node) {\n \n log.info(\"Entering \" + action + \" Script\");\n \n+// ----------------\n+// Manage pagination\n+// ----------------\n+def offset = options[OperationOptions.OP_PAGED_RESULTS_COOKIE] == null\n+? 0\n+: options[OperationOptions.OP_PAGED_RESULTS_COOKIE].toInteger();\n+ \n+def pageSize = options[OperationOptions.OP_PAGE_SIZE] == null \n+? 100\n+: options[OperationOptions.OP_PAGE_SIZE].toInteger();\n+\n+def limit = offset + pageSize;\n+\n+log.ok(\"pagedResultsCookie: \" + offset);\n+log.ok(\"pageSize: \" + pageSize);\n+log.ok(\"limit: \" + limit);\n+// ----------------\n+\n WebClient webClient = client;\n ObjectMapper mapper = new ObjectMapper();\n \n@@ -76,10 +95,11 @@ case \"__ACCOUNT__\":\n   if (query == null || (!query.get(\"left\").equals(\"__UID__\") && !query.get(\"conditionType\").equals(\"EQUALS\"))) {\n     webClient.path(\"/users\");\n     Response response = webClient.get();    \n-    ArrayNode node = mapper.readTree(response.getEntity());\n+    ArrayNode nodes = mapper.readTree(response.getEntity());\n     \n-    for (i = 0; i < node.size(); i++) {\n-      result.add(buildConnectorObject(node.get(i)));\n+    // beware: this is not enforcing any server-side pagination feature\n+    for (i = offset; i < (limit < nodes.size() ? limit: nodes.size()); i++) {\n+      result.add(buildConnectorObject(nodes.get(i)));\n     }\n   } else {\n     webClient.path(\"/users/\" + query.get(\"right\"));\n@@ -98,4 +118,18 @@ default:\n   result;\n }\n \n+// ----------------\n+// Return paged result cookie\n+// ----------------\n+def pagedResultCookieLine = [:]\n+if (pageSize > result.size()) {\n+  // no more results\n+  pagedResultCookieLine.put(OperationOptions.OP_PAGED_RESULTS_COOKIE, null);\n+} else {\n+  pagedResultCookieLine.put(OperationOptions.OP_PAGED_RESULTS_COOKIE, \"\" + limit);\n+}\n+ \n+result.add(pagedResultCookieLine);\n+// ----------------\n+\n return result;"}]}