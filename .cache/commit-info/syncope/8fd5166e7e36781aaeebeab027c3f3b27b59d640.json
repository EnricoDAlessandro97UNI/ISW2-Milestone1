{"sha":"8fd5166e7e36781aaeebeab027c3f3b27b59d640","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjhmZDUxNjZlN2UzNjc4MWFhZWViZWFiMDI3YzNmM2IyN2I1OWQ2NDA=","commit":{"author":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2014-05-26T14:07:59Z"},"committer":{"name":"Andrea Patricelli","email":"andreapatricelli@apache.org","date":"2014-05-26T14:07:59Z"},"message":"[SYNCOPE-493] added mapping purpose NONE, changed console layout of mapping purpose\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1597590 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4d731339d2b24f415fa7c365efa27f4a6d1c8a64","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4d731339d2b24f415fa7c365efa27f4a6d1c8a64"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/8fd5166e7e36781aaeebeab027c3f3b27b59d640","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8fd5166e7e36781aaeebeab027c3f3b27b59d640","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8fd5166e7e36781aaeebeab027c3f3b27b59d640","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8fd5166e7e36781aaeebeab027c3f3b27b59d640/comments","author":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"committer":{"login":"andrea-patricelli","id":3763111,"node_id":"MDQ6VXNlcjM3NjMxMTE=","avatar_url":"https://avatars.githubusercontent.com/u/3763111?v=4","gravatar_id":"","url":"https://api.github.com/users/andrea-patricelli","html_url":"https://github.com/andrea-patricelli","followers_url":"https://api.github.com/users/andrea-patricelli/followers","following_url":"https://api.github.com/users/andrea-patricelli/following{/other_user}","gists_url":"https://api.github.com/users/andrea-patricelli/gists{/gist_id}","starred_url":"https://api.github.com/users/andrea-patricelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrea-patricelli/subscriptions","organizations_url":"https://api.github.com/users/andrea-patricelli/orgs","repos_url":"https://api.github.com/users/andrea-patricelli/repos","events_url":"https://api.github.com/users/andrea-patricelli/events{/privacy}","received_events_url":"https://api.github.com/users/andrea-patricelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"beff6f316b183e32bb6325d91e4f0f40e27d0b47","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/beff6f316b183e32bb6325d91e4f0f40e27d0b47","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/beff6f316b183e32bb6325d91e4f0f40e27d0b47"}],"stats":{"total":423,"additions":400,"deletions":23},"files":[{"sha":"5716c8968dd5a8beffb0cc72f99d33cb82f1a1e4","filename":"common/src/main/java/org/apache/syncope/common/to/MappingItemTO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8fd5166e7e36781aaeebeab027c3f3b27b59d640/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMappingItemTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8fd5166e7e36781aaeebeab027c3f3b27b59d640/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMappingItemTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FMappingItemTO.java?ref=8fd5166e7e36781aaeebeab027c3f3b27b59d640","patch":"@@ -65,7 +65,7 @@ public class MappingItemTO extends AbstractBaseBean {\n     private String mandatoryCondition = \"false\";\r\n \r\n     /**\r\n-     * Mapping purposes: SYNCHRONIZATION, PROPAGATION, BOTH.\r\n+     * Mapping purposes: SYNCHRONIZATION, PROPAGATION, BOTH, NONE.\r\n      */\r\n     private MappingPurpose purpose;\r\n \r"},{"sha":"a2435cbad1ca72c6c6dcfd37bbf5b107cb5fe2fc","filename":"common/src/main/java/org/apache/syncope/common/types/MappingPurpose.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8fd5166e7e36781aaeebeab027c3f3b27b59d640/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FMappingPurpose.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8fd5166e7e36781aaeebeab027c3f3b27b59d640/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FMappingPurpose.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FMappingPurpose.java?ref=8fd5166e7e36781aaeebeab027c3f3b27b59d640","patch":"@@ -22,6 +22,7 @@ public enum MappingPurpose {\n \n     BOTH,\n     SYNCHRONIZATION,\n-    PROPAGATION\n+    PROPAGATION,\n+    NONE\n \n }"},{"sha":"1f2ca265df12ceaa5cc01de1ee71814419a1b54c","filename":"console/src/main/java/org/apache/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8fd5166e7e36781aaeebeab027c3f3b27b59d640/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8fd5166e7e36781aaeebeab027c3f3b27b59d640/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=8fd5166e7e36781aaeebeab027c3f3b27b59d640","patch":"@@ -81,7 +81,7 @@ public ResourceModalPage(final PageReference pageRef, final ModalWindow window,\n         //--------------------------------\n \n         //--------------------------------\n-        // Resource mapping panel\n+        // Resource connector configuration panel\n         //--------------------------------\n         form.add(new ResourceConnConfPanel(\"connconf\", resourceTO, createFlag));\n         //--------------------------------"},{"sha":"10efbf1f79676b28260d300b12534062b6609f4a","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourceMappingPanel.java","status":"modified","additions":14,"deletions":15,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8fd5166e7e36781aaeebeab027c3f3b27b59d640/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8fd5166e7e36781aaeebeab027c3f3b27b59d640/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java?ref=8fd5166e7e36781aaeebeab027c3f3b27b59d640","patch":"@@ -44,6 +44,7 @@\n import org.apache.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.console.wicket.markup.html.form.FieldPanel;\n+import org.apache.syncope.console.wicket.markup.html.form.MappingPurposePanel;\n import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.attributes.AjaxCallListener;\n@@ -212,11 +213,18 @@ public int compare(final MappingItemTO left, final MappingItemTO right) {\n                 } else if (left.getPurpose() != MappingPurpose.BOTH && right.getPurpose() == MappingPurpose.BOTH) {\n                     compared = 1;\n                 } else if (left.getPurpose() == MappingPurpose.PROPAGATION\n-                        && right.getPurpose() == MappingPurpose.SYNCHRONIZATION) {\n+                        && (right.getPurpose() == MappingPurpose.SYNCHRONIZATION || right.getPurpose()\n+                        == MappingPurpose.NONE)) {\n                     compared = -1;\n                 } else if (left.getPurpose() == MappingPurpose.SYNCHRONIZATION\n                         && right.getPurpose() == MappingPurpose.PROPAGATION) {\n                     compared = 1;\n+                } else if (left.getPurpose() == MappingPurpose.SYNCHRONIZATION\n+                        && right.getPurpose() == MappingPurpose.NONE) {\n+                    compared = -1;\n+                } else if (left.getPurpose() == MappingPurpose.NONE\n+                        && right.getPurpose() != MappingPurpose.NONE) {\n+                    compared = 1;\n                 } else if (left.isAccountid()) {\n                     compared = -1;\n                 } else if (right.isAccountid()) {\n@@ -411,22 +419,13 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     password.setVisible(false);\n                 }\n \n-                final AjaxDropDownChoicePanel<MappingPurpose> purpose =\n-                        new AjaxDropDownChoicePanel<MappingPurpose>(\"purpose\",\n-                                new ResourceModel(\"purpose\", \"purpose\").getObject(),\n-                                new PropertyModel<MappingPurpose>(mapItem, \"purpose\"),\n-                                false);\n-                purpose.setChoices(Arrays.asList(MappingPurpose.values()));\n-                purpose.setStyleSheet(FIELD_STYLE);\n-                purpose.setRequired(true);\n-                purpose.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+                final WebMarkupContainer purpose = new WebMarkupContainer(\"purpose\");\n+                purpose.setOutputMarkupId(Boolean.TRUE);\n \n-                    private static final long serialVersionUID = -1107858522700306810L;\n+                final MappingPurposePanel panel = new MappingPurposePanel(\"purposeActions\",\n+                        new PropertyModel<MappingPurpose>(mapItem, \"purpose\"), purpose);\n \n-                    @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                    }\n-                });\n+                purpose.add(panel);\n \n                 item.add(purpose);\n "},{"sha":"278c3e4e0348d324367f1dadad7822db13207fb6","filename":"console/src/main/java/org/apache/syncope/console/wicket/markup/html/form/MappingPurposePanel.java","status":"added","additions":131,"deletions":0,"changes":131,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8fd5166e7e36781aaeebeab027c3f3b27b59d640/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMappingPurposePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8fd5166e7e36781aaeebeab027c3f3b27b59d640/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMappingPurposePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMappingPurposePanel.java?ref=8fd5166e7e36781aaeebeab027c3f3b27b59d640","patch":"@@ -0,0 +1,131 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.console.wicket.markup.html.form;\n+\n+import org.apache.syncope.common.types.MappingPurpose;\n+import org.apache.wicket.AttributeModifier;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+\n+public class MappingPurposePanel extends Panel {\n+\n+    private static final long serialVersionUID = 322966537010107771L;\n+\n+    private final AjaxLink<Void> propagation;\n+\n+    private final AjaxLink<Void> synchronization;\n+\n+    private final AjaxLink<Void> both;\n+\n+    private final AjaxLink<Void> none;\n+\n+    public MappingPurposePanel(final String componentId, final IModel<MappingPurpose> model, final WebMarkupContainer container) {\n+        super(componentId, model);\n+\n+        propagation = new AjaxLink<Void>(\"propagationPurposeLink\") {\n+\n+            private static final long serialVersionUID = -6957616042924610305L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                model.setObject(MappingPurpose.PROPAGATION);\n+                setOpacity(MappingPurpose.PROPAGATION);\n+                target.add(container);\n+            }\n+        };\n+\n+        synchronization = new AjaxLink<Void>(\"synchronizationPurposeLink\") {\n+\n+                    private static final long serialVersionUID = -6957616042924610305L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target) {\n+                        model.setObject(MappingPurpose.SYNCHRONIZATION);\n+                        setOpacity(MappingPurpose.SYNCHRONIZATION);\n+                        target.add(container);\n+                    }\n+                };\n+\n+        both = new AjaxLink<Void>(\"bothPurposeLink\") {\n+\n+            private static final long serialVersionUID = -6957616042924610305L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                model.setObject(MappingPurpose.BOTH);\n+                setOpacity(MappingPurpose.BOTH);\n+                target.add(container);\n+            }\n+        };\n+\n+        none = new AjaxLink<Void>(\"nonePurposeLink\") {\n+\n+            private static final long serialVersionUID = -6957616042924610305L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                model.setObject(MappingPurpose.NONE);\n+                setOpacity(MappingPurpose.NONE);\n+                target.add(container);\n+            }\n+        };\n+\n+        add(propagation);\n+        add(synchronization);\n+        add(both);\n+        add(none);\n+\n+        setOpacity(model.getObject());\n+    }\n+\n+    private void setOpacity(final MappingPurpose mappingPurpose) {\n+        switch (mappingPurpose) {\n+            case PROPAGATION:\n+                propagation.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 1;\")));\n+                synchronization.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                both.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                none.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                break;\n+            case SYNCHRONIZATION:\n+                synchronization.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 1;\")));\n+                propagation.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                both.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                none.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                break;\n+            case BOTH:\n+                both.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 1;\")));\n+                propagation.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                synchronization.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                none.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                break;\n+            case NONE:\n+                none.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 1;\")));\n+                synchronization.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                propagation.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                both.add(new AttributeModifier(\"style\", new Model<String>(\"opacity: 0.3;\")));\n+                break;\n+            default:\n+            // do nothing\n+        }\n+    }\n+}"},{"sha":"e394644a9b790987cffb6ce36df686b54fc4502c","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/ResourceMappingPanel.html","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8fd5166e7e36781aaeebeab027c3f3b27b59d640/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8fd5166e7e36781aaeebeab027c3f3b27b59d640/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.html?ref=8fd5166e7e36781aaeebeab027c3f3b27b59d640","patch":"@@ -83,7 +83,9 @@\n               <span wicket:id=\"password\">[password]</span>\n             </td>\n             <td align=\"center\" valign=\"middle\">\n-              <span wicket:id=\"purpose\">[purpose]</span>\n+              <span wicket:id=\"purpose\">\n+                <span wicket:id=\"purposeActions\">[purpose]</span>\n+              </span>\n             </td>\n           </tr>\n         </tbody>"},{"sha":"963a087fc51c82b1d7f19e19250cee087d88b517","filename":"console/src/main/resources/org/apache/syncope/console/wicket/markup/html/form/MappingPurposePanel.html","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8fd5166e7e36781aaeebeab027c3f3b27b59d640/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMappingPurposePanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8fd5166e7e36781aaeebeab027c3f3b27b59d640/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMappingPurposePanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMappingPurposePanel.html?ref=8fd5166e7e36781aaeebeab027c3f3b27b59d640","patch":"@@ -0,0 +1,31 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+\n+    <a href=\"#\" wicket:id=\"propagationPurposeLink\"><img id=\"action\" src=\"img/actions/propagation-icon.png\" alt=\"Propagation icon\"  title=\"Propagation\"/></a>\n+\n+    <a href=\"#\" wicket:id=\"synchronizationPurposeLink\"><img id=\"action\" src=\"img/actions/synchronization-icon.png\" alt=\"Synchronization icon\"  title=\"Synchronization\"/></a>\n+\n+    <a href=\"#\" wicket:id=\"bothPurposeLink\"><img id=\"action\" src=\"img/actions/both-icon.png\" alt=\"Both icon\"  title=\"Both\"/></a>\n+\n+    <a href=\"#\" wicket:id=\"nonePurposeLink\"><img id=\"action\" src=\"img/actions/none-icon.png\" alt=\"None icon\"  title=\"None\"/></a>\n+\n+  </wicket:panel>\n+</html>"},{"sha":"0f98eec8f41d3011586f7d420194c3c0cb5b7727","filename":"console/src/main/webapp/img/actions/both-icon.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8fd5166e7e36781aaeebeab027c3f3b27b59d640/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fboth-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8fd5166e7e36781aaeebeab027c3f3b27b59d640/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fboth-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fboth-icon.png?ref=8fd5166e7e36781aaeebeab027c3f3b27b59d640"},{"sha":"cc49adbb3bf8c90e4e43961c77b5c319022591a9","filename":"console/src/main/webapp/img/actions/none-icon.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8fd5166e7e36781aaeebeab027c3f3b27b59d640/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fnone-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8fd5166e7e36781aaeebeab027c3f3b27b59d640/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fnone-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fnone-icon.png?ref=8fd5166e7e36781aaeebeab027c3f3b27b59d640"},{"sha":"d7fa5e91e7ffe991cf1ec8bb90cc685ea7fa627f","filename":"console/src/main/webapp/img/actions/propagation-icon.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8fd5166e7e36781aaeebeab027c3f3b27b59d640/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fpropagation-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8fd5166e7e36781aaeebeab027c3f3b27b59d640/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fpropagation-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fpropagation-icon.png?ref=8fd5166e7e36781aaeebeab027c3f3b27b59d640"},{"sha":"394b9078658bba8fb3c4044c93f7ddb0f0753871","filename":"console/src/main/webapp/img/actions/synchronization-icon.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8fd5166e7e36781aaeebeab027c3f3b27b59d640/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fsynchronization-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8fd5166e7e36781aaeebeab027c3f3b27b59d640/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fsynchronization-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Factions%2Fsynchronization-icon.png?ref=8fd5166e7e36781aaeebeab027c3f3b27b59d640"},{"sha":"19f303f1b8cdcec052d8b0e9ba5344f4170594a5","filename":"core/src/main/java/org/apache/syncope/core/util/AttributableUtil.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8fd5166e7e36781aaeebeab027c3f3b27b59d640/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8fd5166e7e36781aaeebeab027c3f3b27b59d640/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FAttributableUtil.java?ref=8fd5166e7e36781aaeebeab027c3f3b27b59d640","patch":"@@ -235,21 +235,29 @@ public <T extends AbstractMappingItem> List<T> getMappingItems(\n         switch (purpose) {\n             case SYNCHRONIZATION:\n                 for (T item : items) {\n-                    if (MappingPurpose.PROPAGATION != item.getPurpose()) {\n+                    if (MappingPurpose.PROPAGATION != item.getPurpose() && MappingPurpose.NONE != item.getPurpose()) {\n                         result.add(item);\n                     }\n                 }\n                 break;\n \n             case PROPAGATION:\n                 for (T item : items) {\n-                    if (MappingPurpose.SYNCHRONIZATION != item.getPurpose()) {\n+                    if (MappingPurpose.SYNCHRONIZATION != item.getPurpose() && MappingPurpose.NONE != item.getPurpose()) {\n                         result.add(item);\n                     }\n                 }\n                 break;\n \n             case BOTH:\n+                for (T item : items) {\n+                    if (MappingPurpose.NONE != item.getPurpose()) {\n+                        result.add(item);\n+                    }\n+                }\n+                break;\n+\n+            case NONE:\n             default:\n                 result.addAll(items);\n         }"},{"sha":"54d30b35fc3885135f4ada467a85591bce19e19b","filename":"core/src/test/java/org/apache/syncope/core/rest/AbstractTest.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8fd5166e7e36781aaeebeab027c3f3b27b59d640/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8fd5166e7e36781aaeebeab027c3f3b27b59d640/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAbstractTest.java?ref=8fd5166e7e36781aaeebeab027c3f3b27b59d640","patch":"@@ -133,6 +133,8 @@ public abstract class AbstractTest {\n     protected static final String RESOURCE_NAME_DELETE = \"ws-target-resource-delete\";\n \n     protected static final String RESOURCE_NAME_UPDATE = \"ws-target-resource-update\";\n+    \n+    protected static final String RESOURCE_NAME_CREATE_NONE = \"ws-target-resource-create-none\";\n \n     protected static String ANONYMOUS_UNAME;\n "},{"sha":"3208c2e332c360f5de8c3bcbde01039b4da47ef5","filename":"core/src/test/java/org/apache/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8fd5166e7e36781aaeebeab027c3f3b27b59d640/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8fd5166e7e36781aaeebeab027c3f3b27b59d640/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=8fd5166e7e36781aaeebeab027c3f3b27b59d640","patch":"@@ -543,4 +543,44 @@ public void anonymous() {\n                 getService(ResourceService.class);\n         assertFalse(anonymous.list().isEmpty());\n     }\n+\n+    @Test\n+    public void issueSYNCOPE493() {\n+        // create resource with attribute mapping set to NONE and check its propagation\n+        String resourceName = RESOURCE_NAME_CREATE_NONE;\n+        ResourceTO resourceTO = new ResourceTO();\n+        resourceTO.setName(resourceName);\n+        resourceTO.setConnectorId(102L);\n+\n+        MappingTO umapping = new MappingTO();\n+\n+        MappingItemTO item = new MappingItemTO();\n+        item.setIntMappingType(IntMappingType.UserId);\n+        item.setAccountid(true);\n+        item.setPurpose(MappingPurpose.PROPAGATION);\n+        umapping.setAccountIdItem(item);\n+\n+        MappingItemTO item2 = new MappingItemTO();\n+        item2.setIntMappingType(IntMappingType.UserSchema);\n+        item2.setAccountid(false);\n+        item2.setIntAttrName(\"gender\");\n+        item2.setExtAttrName(\"gender\");\n+        item2.setPurpose(MappingPurpose.NONE);\n+        umapping.addItem(item2);\n+\n+        resourceTO.setUmapping(umapping);\n+\n+        Response response = resourceService.create(resourceTO);\n+        ResourceTO actual = getObject(response.getLocation(), ResourceService.class, ResourceTO.class);\n+\n+        assertNotNull(actual);\n+        assertNotNull(actual.getUmapping());\n+        assertNotNull(actual.getUmapping().getItems());\n+        assertEquals(MappingPurpose.PROPAGATION, actual.getUmapping().getAccountIdItem().getPurpose());\n+        for (MappingItemTO itemTO : actual.getUmapping().getItems()) {\n+            if (\"gender\".equals(itemTO.getIntAttrName())) {\n+                assertEquals(MappingPurpose.NONE, itemTO.getPurpose());\n+            }\n+        }\n+    }\n }"},{"sha":"0df4aaf5de655f7123d0e9e00eb9a00be349d335","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":85,"deletions":0,"changes":85,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8fd5166e7e36781aaeebeab027c3f3b27b59d640/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8fd5166e7e36781aaeebeab027c3f3b27b59d640/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=8fd5166e7e36781aaeebeab027c3f3b27b59d640","patch":"@@ -28,6 +28,7 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.security.AccessControlException;\n+import java.util.Collection;\n import java.util.List;\n import javax.ws.rs.core.Response;\n import org.apache.commons.io.IOUtils;\n@@ -48,7 +49,12 @@\n import org.apache.syncope.common.types.SchemaType;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.reqres.BulkActionResult;\n+import org.apache.syncope.common.to.MappingItemTO;\n+import org.apache.syncope.common.to.MappingTO;\n+import org.apache.syncope.common.to.ResourceTO;\n+import org.apache.syncope.common.types.MappingPurpose;\n import org.apache.syncope.common.types.ResourceAssociationActionType;\n import org.apache.syncope.common.types.ResourceDeassociationActionType;\n import org.identityconnectors.framework.common.objects.Name;\n@@ -719,4 +725,83 @@ public void issueSYNCOPE455() {\n         assertNull(getLdapRemoteObject(parentRemoteObject.getAttrMap().get(Name.NAME).getValues().get(0)));\n         assertNull(getLdapRemoteObject(childRemoteObject.getAttrMap().get(Name.NAME).getValues().get(0)));\n     }\n+\n+    @Test\n+    public void issueSYNCOPE493() {\n+        // 1.  create role and check that title is propagated on resource with mapping for title set to BOTH\n+        RoleTO roleTO = buildBasicRoleTO(\"issueSYNCOPE493-Role\");\n+        roleTO.getResources().add(RESOURCE_NAME_LDAP);\n+        roleTO.getRAttrTemplates().add(\"title\");\n+        roleTO.getAttrs().add(attributeTO(\"title\", \"TITLE\"));\n+\n+        roleTO = createRole(roleTO);\n+        assertTrue(roleTO.getResources().contains(RESOURCE_NAME_LDAP));\n+\n+        ConnObjectTO actual = resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE,\n+                roleTO.getId());\n+        assertNotNull(actual);\n+\n+        // check if mapping attribute with purpose BOTH has really been propagated\n+        assertNotNull(actual.getAttrMap().get(\"description\"));\n+        assertEquals(\"TITLE\", actual.getAttrMap().get(\"description\").getValues().get(0));\n+\n+        // 2.  update resource LDAP\n+        ResourceTO ldap = resourceService.read(RESOURCE_NAME_LDAP);\n+        assertNotNull(ldap);\n+\n+        MappingTO ldapNewRMapping = ldap.getRmapping();\n+        // change purpose from BOTH to NONE\n+        for (MappingItemTO itemTO : ldapNewRMapping.getItems()) {\n+            if (\"title\".equals(itemTO.getIntAttrName())) {\n+                itemTO.setPurpose(MappingPurpose.NONE);\n+            }\n+        }\n+\n+        ldap.setRmapping(ldapNewRMapping);\n+        ldap.setUmapping(ldap.getUmapping());\n+\n+        resourceService.update(RESOURCE_NAME_LDAP, ldap);\n+        ResourceTO newLdap = resourceService.read(ldap.getName());\n+        assertNotNull(newLdap);\n+\n+        // check for existence\n+        Collection<MappingItemTO> mapItems = newLdap.getRmapping().getItems();\n+        assertNotNull(mapItems);\n+        assertEquals(4, mapItems.size());\n+\n+        // 3.  update role and check that title han not been propagated, external attribute description must not be present\n+        // in role mapping\n+        RoleMod roleMod = new RoleMod();\n+        roleMod.setId(roleTO.getId());\n+\n+        AttributeMod attr = attributeMod(\"title\", \"TITLENEW\");\n+        attr.getValuesToBeRemoved().add(\"TITLE\");\n+        roleMod.getAttrsToUpdate().add(attr);\n+        roleTO = updateRole(roleMod);\n+        assertNotNull(roleTO);\n+        assertEquals(1, roleTO.getPropagationStatusTOs().size());\n+        assertTrue(roleTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+        // check update on Syncope\n+        assertEquals(\"TITLENEW\", roleTO.getAttrMap().get(\"title\").getValues().get(0));\n+\n+        final ConnObjectTO newRole = resourceService.getConnectorObject(RESOURCE_NAME_LDAP, AttributableType.ROLE,\n+                roleTO.getId());\n+\n+        // due to NONE mapping for attribute title external attribute description must not be present\n+        assertNull(newRole.getAttrMap().get(\"description\"));\n+\n+        // 4.  restore resource LDAP mapping\n+        ldapNewRMapping = newLdap.getRmapping();\n+        // restore purpose from NONE to BOTH\n+        for (MappingItemTO itemTO : ldapNewRMapping.getItems()) {\n+            if (\"title\".equals(itemTO.getIntAttrName())) {\n+                itemTO.setPurpose(MappingPurpose.BOTH);\n+            }\n+        }\n+\n+        newLdap.setRmapping(ldapNewRMapping);\n+        newLdap.setUmapping(newLdap.getUmapping());\n+\n+        resourceService.update(RESOURCE_NAME_LDAP, newLdap);\n+    }\n }"},{"sha":"d7347feb653bcc1c6e2991302eef253c836163dc","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":76,"deletions":1,"changes":77,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8fd5166e7e36781aaeebeab027c3f3b27b59d640/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8fd5166e7e36781aaeebeab027c3f3b27b59d640/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=8fd5166e7e36781aaeebeab027c3f3b27b59d640","patch":"@@ -72,6 +72,7 @@\n \n import java.io.IOException;\n import java.io.InputStream;\n+import java.util.Collection;\n import javax.naming.NamingException;\n import javax.ws.rs.core.EntityTag;\n import javax.xml.ws.WebServiceException;\n@@ -81,6 +82,8 @@\n import org.apache.syncope.common.mod.ResourceAssociationMod;\n import org.apache.syncope.common.services.UserService;\n import org.apache.syncope.common.reqres.PagedResult;\n+import org.apache.syncope.common.to.MappingTO;\n+import org.apache.syncope.common.types.MappingPurpose;\n import org.apache.syncope.common.types.Preference;\n import org.apache.syncope.common.types.RESTHeaders;\n import org.apache.syncope.common.types.ResourceAssociationActionType;\n@@ -1833,7 +1836,7 @@ public void issueSYNCOPE402() {\n         userMod.getResourcesToAdd().add(RESOURCE_NAME_WS1);\n         userMod.getResourcesToAdd().add(RESOURCE_NAME_TESTDB);\n         userTO = updateUser(userMod);\n-        \n+\n         List<PropagationStatus> propagationStatuses = userTO.getPropagationStatusTOs();\n         PropagationStatus ws1PropagationStatus = null;\n         if (propagationStatuses != null) {\n@@ -2216,4 +2219,76 @@ public void issueSYNCOPE454() throws NamingException {\n                 \"password123\",\n                 connObject.getAttrMap().get(Name.NAME).getValues().get(0)));\n     }\n+\n+    @Test\n+    public void issueSYNCOPE493() {\n+        // 1.  create user and check that firstname is not propagated on resource with mapping for firstname set to NONE\n+        UserTO userTO = getUniqueSampleTO(\"issueSYNCOPE493@test.org\");\n+        userTO.getResources().add(RESOURCE_NAME_WS1);\n+        userTO = createUser(userTO);\n+        assertNotNull(userTO);\n+        assertEquals(1, userTO.getPropagationStatusTOs().size());\n+        assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+\n+        final ConnObjectTO actual = resourceService.getConnectorObject(RESOURCE_NAME_WS1, AttributableType.USER, userTO.\n+                getId());\n+        assertNotNull(actual);\n+        // check if mapping attribute with purpose NONE really hasn't been propagated\n+        assertNull(actual.getAttrMap().get(\"NAME\"));\n+\n+        // 2.  update resource ws-target-resource-1\n+        ResourceTO ws1 = resourceService.read(RESOURCE_NAME_WS1);\n+        assertNotNull(ws1);\n+\n+        MappingTO ws1NewUMapping = ws1.getUmapping();\n+        // change purpose from NONE to BOTH\n+        for (MappingItemTO itemTO : ws1NewUMapping.getItems()) {\n+            if (\"firstname\".equals(itemTO.getIntAttrName())) {\n+                itemTO.setPurpose(MappingPurpose.BOTH);\n+            }\n+        }\n+\n+        ws1.setUmapping(ws1NewUMapping);\n+        ws1.setRmapping(ws1.getRmapping());\n+\n+        resourceService.update(RESOURCE_NAME_WS1, ws1);\n+        ResourceTO newWs1 = resourceService.read(ws1.getName());\n+        assertNotNull(newWs1);\n+\n+        // check for existence\n+        Collection<MappingItemTO> mapItems = newWs1.getUmapping().getItems();\n+        assertNotNull(mapItems);\n+        assertEquals(7, mapItems.size());\n+\n+        // 3.  update user and check firstname propagation        \n+        UserMod userMod = new UserMod();\n+        userMod.setId(userTO.getId());\n+        userMod.setPwdPropRequest(new StatusMod());\n+        userMod.getAttrsToUpdate().add(attributeMod(\"firstname\", \"firstnameNew\"));\n+\n+        userTO = updateUser(userMod);\n+        assertNotNull(userTO);\n+        assertEquals(1, userTO.getPropagationStatusTOs().size());\n+        assertTrue(userTO.getPropagationStatusTOs().get(0).getStatus().isSuccessful());\n+\n+        final ConnObjectTO newUser = resourceService.getConnectorObject(RESOURCE_NAME_WS1, AttributableType.USER,\n+                userTO.getId());\n+\n+        assertNotNull(newUser.getAttrMap().get(\"NAME\"));\n+        assertEquals(\"firstnameNew\", newUser.getAttrMap().get(\"NAME\").getValues().get(0));\n+\n+        // 4.  restore resource ws-target-resource-1 mapping\n+        ws1NewUMapping = newWs1.getUmapping();\n+        // restore purpose from BOTH to NONE\n+        for (MappingItemTO itemTO : ws1NewUMapping.getItems()) {\n+            if (\"firstname\".equals(itemTO.getIntAttrName())) {\n+                itemTO.setPurpose(MappingPurpose.NONE);\n+            }\n+        }\n+\n+        newWs1.setUmapping(ws1NewUMapping);\n+        newWs1.setRmapping(newWs1.getRmapping());\n+\n+        resourceService.update(RESOURCE_NAME_WS1, newWs1);\n+    }\n }"},{"sha":"c151d0c18af0b4d8b6aab9fdbe4ae859c7f09651","filename":"core/src/test/resources/content.xml","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/8fd5166e7e36781aaeebeab027c3f3b27b59d640/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/8fd5166e7e36781aaeebeab027c3f3b27b59d640/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=8fd5166e7e36781aaeebeab027c3f3b27b59d640","patch":"@@ -600,7 +600,10 @@ under the License.\n   <UMappingItem id=\"336\" mapping_id=\"15\"\n                 extAttrName=\"type\" intAttrName=\"type\" intMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                 accountid=\"0\" password=\"0\" purpose=\"PROPAGATION\"/>\n-\n+  <UMappingItem id=\"337\" mapping_id=\"15\"\n+                extAttrName=\"name\" intAttrName=\"firstname\" intMappingType=\"UserSchema\" mandatoryCondition=\"false\"\n+                accountid=\"0\" password=\"0\" purpose=\"NONE\"/>\n+  \n   <UMapping id=\"12\" resource_name=\"ws-target-resource-list-mappings-1\"/>\n   <UMappingItem id=\"103\" mapping_id=\"12\"\n                 extAttrName=\"__NAME__\" intAttrName=\"email\" intMappingType=\"UserSchema\" mandatoryCondition=\"true\""}]}