{"sha":"3c36fe10e73bc14fb4512a88127d8b2d11919bee","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjNjMzZmZTEwZTczYmMxNGZiNDUxMmE4ODEyN2Q4YjJkMTE5MTliZWU=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-28T16:21:15Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-10-28T16:21:15Z"},"message":"Fixed SYNCOPE-595 and SYNCOPE-583, SYNCOPE-158","tree":{"sha":"c9b59e954dcffeab7d70affdcd1777fb8226a441","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c9b59e954dcffeab7d70affdcd1777fb8226a441"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3c36fe10e73bc14fb4512a88127d8b2d11919bee","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3c36fe10e73bc14fb4512a88127d8b2d11919bee","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3c36fe10e73bc14fb4512a88127d8b2d11919bee","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3c36fe10e73bc14fb4512a88127d8b2d11919bee/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"207d93c7ceadd2d3a6798308558a81e69c6ce24e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/207d93c7ceadd2d3a6798308558a81e69c6ce24e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/207d93c7ceadd2d3a6798308558a81e69c6ce24e"}],"stats":{"total":831,"additions":815,"deletions":16},"files":[{"sha":"acc8aa503a3dd24be4e91aeeb07d174ddc1f674a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/AbstractEntitlementCommand.java","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FAbstractEntitlementCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FAbstractEntitlementCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FAbstractEntitlementCommand.java?ref=3c36fe10e73bc14fb4512a88127d8b2d11919bee","patch":"@@ -0,0 +1,27 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.entitlement;\n+\n+public class AbstractEntitlementCommand {\n+\n+    protected final EntitlementSyncopeOperations entitlementSyncopeOperations = new EntitlementSyncopeOperations();\n+\n+    protected final EntitlementResultManager entitlementResultManager = new EntitlementResultManager();\n+\n+}"},{"sha":"5ca478cf993d16da4944b2b837b8e609ffa1d717","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementCommand.java","status":"added","additions":121,"deletions":0,"changes":121,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementCommand.java?ref=3c36fe10e73bc14fb4512a88127d8b2d11919bee","patch":"@@ -0,0 +1,121 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.entitlement;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.cli.Command;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.commands.AbstractCommand;\n+\n+@Command(name = \"entitlement\")\n+public class EntitlementCommand extends AbstractCommand {\n+\n+    private static final String HELP_MESSAGE = \"Usage: entitlement [options]\\n\"\n+            + \"  Options:\\n\"\n+            + \"    --help \\n\"\n+            + \"    --list\\n\"\n+            + \"    --list-role\\n\"\n+            + \"       Syntax: --list-role {ENTITLEMENT-NAME}\\n\"\n+            + \"    --read-by-username\\n\"\n+            + \"       Syntax: --read-by-username {USERNAME}\\n\"\n+            + \"    --read-by-userid\\n\"\n+            + \"       Syntax: --read-by-userid {USERID}\\n\"\n+            + \"    --search-by-role\\n\"\n+            + \"       Syntax: --search-by-role {ROLE-ID}\";\n+\n+    @Override\n+    public void execute(final Input input) {\n+        if (StringUtils.isBlank(input.getOption())) {\n+            input.setOption(EntitlementOptions.HELP.getOptionName());\n+        }\n+\n+        switch (EntitlementOptions.fromName(input.getOption())) {\n+            case LIST:\n+                new EntitlementList().list();\n+                break;\n+            case READ_BY_USERNAME:\n+                new EntitlementReadByUsername(input).read();\n+                break;\n+            case READ_BY_USERID:\n+                new EntitlementReadByUserId(input).read();\n+                break;\n+            case SEARCH_BY_ROLE:\n+                new EntitlementSearchByRole(input).search();\n+                break;\n+            case LIST_ROLE:\n+                new EntitlementListRole(input).list();\n+                break;\n+            case HELP:\n+                System.out.println(HELP_MESSAGE);\n+                break;\n+            default:\n+                new EntitlementResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n+        }\n+    }\n+\n+    @Override\n+    public String getHelpMessage() {\n+        return HELP_MESSAGE;\n+    }\n+\n+    private enum EntitlementOptions {\n+\n+        HELP(\"--help\"),\n+        LIST(\"--list\"),\n+        READ_BY_USERNAME(\"--read-by-username\"),\n+        READ_BY_USERID(\"--read-by-userid\"),\n+        SEARCH_BY_ROLE(\"--search-by-role\"),\n+        LIST_ROLE(\"--list-role\");\n+\n+        private final String optionName;\n+\n+        EntitlementOptions(final String optionName) {\n+            this.optionName = optionName;\n+        }\n+\n+        public String getOptionName() {\n+            return optionName;\n+        }\n+\n+        public boolean equalsOptionName(final String otherName) {\n+            return (otherName == null) ? false : optionName.equals(otherName);\n+        }\n+\n+        public static EntitlementOptions fromName(final String name) {\n+            EntitlementOptions optionToReturn = HELP;\n+            for (final EntitlementOptions option : EntitlementOptions.values()) {\n+                if (option.equalsOptionName(name)) {\n+                    optionToReturn = option;\n+                }\n+            }\n+            return optionToReturn;\n+        }\n+\n+        public static List<String> toList() {\n+            final List<String> options = new ArrayList<>();\n+            for (final EntitlementOptions value : values()) {\n+                options.add(value.getOptionName());\n+            }\n+            return options;\n+        }\n+    }\n+\n+}"},{"sha":"d0c532cbab2a0df1d33d8b8385e8f31ac24ea57e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementList.java","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementList.java?ref=3c36fe10e73bc14fb4512a88127d8b2d11919bee","patch":"@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.entitlement;\n+\n+public class EntitlementList extends AbstractEntitlementCommand {\n+\n+    public void list() {\n+        entitlementResultManager.toView(entitlementSyncopeOperations.list());\n+    }\n+}"},{"sha":"f65757c69c55e92cb79ec52f9668c69e4e7765d1","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementListRole.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementListRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementListRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementListRole.java?ref=3c36fe10e73bc14fb4512a88127d8b2d11919bee","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.entitlement;\n+\n+import java.util.Set;\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.RoleTO;\n+\n+public class EntitlementListRole extends AbstractEntitlementCommand {\n+\n+    private static final String READ_HELP_MESSAGE = \"entitlement --list-role {ENTITLEMENT-NAME}\";\n+\n+    private final Input input;\n+\n+    public EntitlementListRole(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void list() {\n+        if (input.getParameters().length == 1) {\n+            try {\n+                final Set<RoleTO> roleTOs = entitlementSyncopeOperations.rolePerEntitlements(input.firstParameter());\n+                if (!entitlementSyncopeOperations.exists(input.firstParameter())) {\n+                    entitlementResultManager.notFoundError(\"Entitlement\", input.firstParameter());\n+                } else if (roleTOs != null && !roleTOs.isEmpty()) {\n+                    entitlementResultManager.rolesToView(roleTOs);\n+                } else {\n+                    entitlementResultManager.generic(\"No roles found for entitlement \" + input.firstParameter());\n+                }\n+            } catch (final SyncopeClientException | WebServiceException ex) {\n+                if (ex.getMessage().startsWith(\"NotFound\")) {\n+                    entitlementResultManager.notFoundError(\"User\", input.firstParameter());\n+                } else {\n+                    entitlementResultManager.generic(\"Error: \" + ex.getMessage());\n+                }\n+            } catch (final NumberFormatException ex) {\n+                entitlementResultManager.numberFormatException(\"user\", input.firstParameter());\n+            }\n+        } else {\n+            entitlementResultManager.commandOptionError(READ_HELP_MESSAGE);\n+        }\n+    }\n+\n+}"},{"sha":"99f630532712254a85829fd269bc092e8d07acca","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementReadByUserId.java","status":"renamed","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUserId.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUserId.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUserId.java?ref=3c36fe10e73bc14fb4512a88127d8b2d11919bee","patch":"@@ -16,38 +16,38 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.cli.commands.question;\n+package org.apache.syncope.client.cli.commands.entitlement;\n \n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n import org.apache.syncope.common.lib.SyncopeClientException;\n \n-public class QuestionReadByUser extends AbstractQuestionCommand {\n+public class EntitlementReadByUserId extends AbstractEntitlementCommand {\n \n-    private static final String READ_HELP_MESSAGE = \"question --read-by-user {USERNAME}\";\n+    private static final String READ_HELP_MESSAGE = \"entitlement --read-by-userid {USER-ID}\";\n \n     private final Input input;\n \n-    public QuestionReadByUser(final Input input) {\n+    public EntitlementReadByUserId(final Input input) {\n         this.input = input;\n     }\n \n     public void read() {\n         if (input.getParameters().length == 1) {\n             try {\n-                questionResultManager.printQuestion(questionSyncopeOperations.readByUser(input.firstParameter()));\n+                entitlementResultManager.toView(\n+                        entitlementSyncopeOperations.userIdEntitlements(input.firstParameter()));\n             } catch (final SyncopeClientException | WebServiceException ex) {\n                 if (ex.getMessage().startsWith(\"NotFound\")) {\n-                    questionResultManager.notFoundError(\"Security question\", input.firstParameter());\n+                    entitlementResultManager.notFoundError(\"User\", input.firstParameter());\n                 } else {\n-                    questionResultManager.generic(\"Error: \" + ex.getMessage());\n+                    entitlementResultManager.generic(\"Error: \" + ex.getMessage());\n                 }\n             } catch (final NumberFormatException ex) {\n-                questionResultManager.numberFormatException(\"security question\", input.firstParameter());\n+                entitlementResultManager.numberFormatException(\"user\", input.firstParameter());\n             }\n         } else {\n-            questionResultManager.commandOptionError(READ_HELP_MESSAGE);\n+            entitlementResultManager.commandOptionError(READ_HELP_MESSAGE);\n         }\n     }\n-\n }","previous_filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionReadByUser.java"},{"sha":"bfcec00719dff4893eabf777be48fffc15e1b776","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementReadByUsername.java","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUsername.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUsername.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementReadByUsername.java?ref=3c36fe10e73bc14fb4512a88127d8b2d11919bee","patch":"@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.entitlement;\n+\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+\n+public class EntitlementReadByUsername extends AbstractEntitlementCommand {\n+\n+    private static final String READ_HELP_MESSAGE = \"entitlement --read-by-username {USERNAME}\";\n+\n+    private final Input input;\n+\n+    public EntitlementReadByUsername(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void read() {\n+        if (input.getParameters().length == 1) {\n+            try {\n+                entitlementResultManager.toView(\n+                        entitlementSyncopeOperations.usernameEntitlements(input.firstParameter()));\n+            } catch (final SyncopeClientException | WebServiceException ex) {\n+                if (ex.getMessage().startsWith(\"NotFound\")) {\n+                    entitlementResultManager.notFoundError(\"User\", input.firstParameter());\n+                } else {\n+                    entitlementResultManager.generic(\"Error: \" + ex.getMessage());\n+                }\n+            } catch (final NumberFormatException ex) {\n+                entitlementResultManager.numberFormatException(\"user\", input.firstParameter());\n+            }\n+        } else {\n+            entitlementResultManager.commandOptionError(READ_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"01585d2f753a58bfdc5a21b43f9c11e08f52ab5c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementResultManager.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementResultManager.java?ref=3c36fe10e73bc14fb4512a88127d8b2d11919bee","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.entitlement;\n+\n+import java.util.List;\n+import java.util.Set;\n+import org.apache.syncope.client.cli.commands.CommonsResultManager;\n+import org.apache.syncope.common.lib.to.RoleTO;\n+\n+public class EntitlementResultManager extends CommonsResultManager {\n+\n+    public void toView(final Set<String> entitlements) {\n+        for (final String entitlement : entitlements) {\n+            System.out.println(\"- \" + entitlement);\n+        }\n+    }\n+\n+    public void rolesToView(final Set<RoleTO> roles) {\n+        for (final RoleTO role : roles) {\n+            printRole(role);\n+        }\n+    }\n+\n+    private void printRole(final RoleTO roleTO) {\n+        System.out.println(\" > ROLE ID: \" + roleTO.getKey());\n+        System.out.println(\"    name: \" + roleTO.getName());\n+        System.out.println(\"    REALMS: \");\n+        printRealms(roleTO.getRealms());\n+        System.out.println(\"\");\n+    }\n+\n+    private void printRealms(final List<String> realms) {\n+        for (final String realm : realms) {\n+            System.out.println(\"       - \" + realm);\n+        }\n+    }\n+\n+}"},{"sha":"6d756f0660465c42cf87ae21c830eef83896dbd1","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementSearchByRole.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSearchByRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSearchByRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSearchByRole.java?ref=3c36fe10e73bc14fb4512a88127d8b2d11919bee","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.entitlement;\n+\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+\n+public class EntitlementSearchByRole extends AbstractEntitlementCommand {\n+\n+    private static final String READ_HELP_MESSAGE = \"entitlement --search-by-role {ROLE-ID}\";\n+\n+    private final Input input;\n+\n+    public EntitlementSearchByRole(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void search() {\n+        if (input.getParameters().length == 1) {\n+            try {\n+                entitlementResultManager.toView(\n+                        entitlementSyncopeOperations.entitlementsPerRole(input.firstParameter()));\n+            } catch (final SyncopeClientException | WebServiceException ex) {\n+                if (ex.getMessage().startsWith(\"NotFound\")) {\n+                    entitlementResultManager.notFoundError(\"User\", input.firstParameter());\n+                } else {\n+                    entitlementResultManager.generic(\"Error: \" + ex.getMessage());\n+                }\n+            } catch (final NumberFormatException ex) {\n+                entitlementResultManager.numberFormatException(\"user\", input.firstParameter());\n+            }\n+        } else {\n+            entitlementResultManager.commandOptionError(READ_HELP_MESSAGE);\n+        }\n+    }\n+    \n+}"},{"sha":"17c8eeeed00d97242a96a48eb745a6c2b0a23805","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementSyncopeOperations.java","status":"added","additions":74,"deletions":0,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSyncopeOperations.java?ref=3c36fe10e73bc14fb4512a88127d8b2d11919bee","patch":"@@ -0,0 +1,74 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.entitlement;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.TreeSet;\n+import org.apache.syncope.client.cli.commands.role.RoleSyncopeOperations;\n+import org.apache.syncope.client.cli.commands.user.UserSyncopeOperations;\n+import org.apache.syncope.common.lib.to.RoleTO;\n+import org.apache.syncope.common.lib.to.UserTO;\n+import org.apache.syncope.common.lib.types.Entitlement;\n+\n+public class EntitlementSyncopeOperations {\n+\n+    private final UserSyncopeOperations userSyncopeOperations = new UserSyncopeOperations();\n+\n+    private final RoleSyncopeOperations roleSyncopeOperations = new RoleSyncopeOperations();\n+\n+    public Set<String> list() {\n+        return Entitlement.values();\n+    }\n+    \n+    public boolean exists(final String entitlement) {\n+        return list().contains(entitlement);\n+    }\n+\n+    public Set<String> usernameEntitlements(final String username) {\n+        final Set<String> entitlements = new TreeSet<>();\n+        final UserTO userTO = userSyncopeOperations.read(userSyncopeOperations.getIdFromUsername(username));\n+        for (final Long role : userTO.getRoles()) {\n+            entitlements.addAll(roleSyncopeOperations.read(String.valueOf(role)).getEntitlements());\n+        }\n+        return entitlements;\n+    }\n+\n+    public Set<String> userIdEntitlements(final String userId) {\n+        final Set<String> entitlements = new TreeSet<>();\n+        final UserTO userTO = userSyncopeOperations.read(userId);\n+        for (final Long role : userTO.getRoles()) {\n+            entitlements.addAll(roleSyncopeOperations.read(String.valueOf(role)).getEntitlements());\n+        }\n+        return entitlements;\n+    }\n+\n+    public Set<String> entitlementsPerRole(final String roleId) {\n+        return roleSyncopeOperations.read(roleId).getEntitlements();\n+    }\n+\n+    public Set<RoleTO> rolePerEntitlements(final String entitlement) {\n+        final Set<RoleTO> roles = new HashSet<>();\n+        for (final RoleTO role : roleSyncopeOperations.list()) {\n+            role.getEntitlements().contains(entitlement);\n+            roles.add(role);\n+        }\n+        return roles;\n+    }\n+}"},{"sha":"4d48b8d10a0ae57651d3da15ba47bfea5f1a520f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/question/QuestionCommand.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fquestion%2FQuestionCommand.java?ref=3c36fe10e73bc14fb4512a88127d8b2d11919bee","patch":"@@ -34,8 +34,6 @@ public class QuestionCommand extends AbstractCommand {\n             + \"    --list \\n\"\n             + \"    --read \\n\"\n             + \"       Syntax: --read {QUESTION-ID} {QUESTION-ID} [...]\\n\"\n-            + \"    --read-by-user \\n\"\n-            + \"       Syntax: --read-by-user {USERNAME}\\n\"\n             + \"    --delete \\n\"\n             + \"       Syntax: --delete {QUESTION-ID} {QUESTION-ID} [...]\";\n \n@@ -52,9 +50,6 @@ public void execute(final Input input) {\n             case READ:\n                 new QuestionRead(input).read();\n                 break;\n-            case READ_BY_USER:\n-                new QuestionReadByUser(input).read();\n-                break;\n             case DELETE:\n                 break;\n             case HELP:\n@@ -75,7 +70,6 @@ private enum QuestionOptions {\n         HELP(\"--help\"),\n         LIST(\"--list\"),\n         READ(\"--read\"),\n-        READ_BY_USER(\"--read-by-user\"),\n         DELETE(\"--delete\");\n \n         private final String optionName;"},{"sha":"c48eb8cda14e7db86bc027850ac61111d1dacfbb","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/self/AbstractWorkflowCommand.java","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FAbstractWorkflowCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FAbstractWorkflowCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FAbstractWorkflowCommand.java?ref=3c36fe10e73bc14fb4512a88127d8b2d11919bee","patch":"@@ -0,0 +1,27 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.self;\n+\n+public class AbstractWorkflowCommand {\n+\n+    protected final WorkflowResultManager workflowResultManager = new WorkflowResultManager();\n+\n+    protected final WorkflowSyncopeOperations workflowSyncopeOperations = new WorkflowSyncopeOperations();\n+\n+}"},{"sha":"c40dda96b80d354074840a0a95246a612394335b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/self/WorkflowCommand.java","status":"added","additions":104,"deletions":0,"changes":104,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowCommand.java?ref=3c36fe10e73bc14fb4512a88127d8b2d11919bee","patch":"@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.self;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.cli.Command;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.commands.AbstractCommand;\n+\n+@Command(name = \"workflow\")\n+public class WorkflowCommand extends AbstractCommand {\n+\n+    private static final String HELP_MESSAGE = \"Usage: workflow [options]\\n\"\n+            + \"  Options:\\n\"\n+            + \"    --help \\n\"\n+            + \"    --export-diagram {ANY-TYPE-KIND}\\n\"\n+            + \"        Any type kind: ANY_OBJECT / USER / GROUP\\n\"\n+            + \"    --export-definition {ANY-TYPE-KIND}\\n\"\n+            + \"        Any type kind: ANY_OBJECT / USER / GROUP\";\n+\n+    @Override\n+    public void execute(final Input input) {\n+        if (StringUtils.isBlank(input.getOption())) {\n+            input.setOption(UserWorkflowOptions.HELP.getOptionName());\n+        }\n+\n+        switch (UserWorkflowOptions.fromName(input.getOption())) {\n+            case EXPORT_DIAGRAM:\n+                new WorkflowExportDiagram(input).export();\n+                break;\n+            case EXPORT_DEFINITION:\n+                new WorkflowExportDefinition(input).export();\n+                break;\n+            case HELP:\n+                System.out.println(HELP_MESSAGE);\n+                break;\n+            default:\n+                new WorkflowResultManager().defaultError(input.getOption(), HELP_MESSAGE);\n+        }\n+    }\n+\n+    @Override\n+    public String getHelpMessage() {\n+        return HELP_MESSAGE;\n+    }\n+\n+    private enum UserWorkflowOptions {\n+\n+        HELP(\"--help\"),\n+        EXPORT_DIAGRAM(\"--export-diagram\"),\n+        EXPORT_DEFINITION(\"--export-definition\");\n+\n+        private final String optionName;\n+\n+        UserWorkflowOptions(final String optionName) {\n+            this.optionName = optionName;\n+        }\n+\n+        public String getOptionName() {\n+            return optionName;\n+        }\n+\n+        public boolean equalsOptionName(final String otherName) {\n+            return (otherName == null) ? false : optionName.equals(otherName);\n+        }\n+\n+        public static UserWorkflowOptions fromName(final String name) {\n+            UserWorkflowOptions optionToReturn = HELP;\n+            for (final UserWorkflowOptions option : UserWorkflowOptions.values()) {\n+                if (option.equalsOptionName(name)) {\n+                    optionToReturn = option;\n+                }\n+            }\n+            return optionToReturn;\n+        }\n+\n+        public static List<String> toList() {\n+            final List<String> options = new ArrayList<>();\n+            for (final UserWorkflowOptions value : values()) {\n+                options.add(value.getOptionName());\n+            }\n+            return options;\n+        }\n+    }\n+\n+}"},{"sha":"89443dada3c10c4ebf38c6686f0857583b10a131","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/self/WorkflowExportDefinition.java","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDefinition.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDefinition.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDefinition.java?ref=3c36fe10e73bc14fb4512a88127d8b2d11919bee","patch":"@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.self;\n+\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.util.CommandUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+\n+public class WorkflowExportDefinition extends AbstractWorkflowCommand {\n+\n+    private static final String EXPORT_HELP_MESSAGE = \"workflow --export-definition {ANY-TYPE-KIND}\\n\";\n+\n+    private final Input input;\n+\n+    public WorkflowExportDefinition(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void export() {\n+        if (input.parameterNumber() == 1) {\n+            try {\n+                final AnyTypeKind anyTypeKind = AnyTypeKind.valueOf(input.firstParameter());\n+                System.out.println(\" > > > > \" + workflowSyncopeOperations.exportDefinition(anyTypeKind).getEntity());\n+            } catch (final SyncopeClientException | WebServiceException ex) {\n+                if (ex.getMessage().startsWith(\"NotFound\")) {\n+                    workflowResultManager.notFoundError(\"Workflow\", input.firstParameter());\n+                } else {\n+                    workflowResultManager.generic(ex.getMessage());\n+                }\n+            } catch (final IllegalArgumentException ex) {\n+                workflowResultManager.typeNotValidError(\n+                        \"workflow\", input.firstParameter(), CommandUtils.fromEnumToArray(AnyTypeKind.class));\n+            }\n+        } else {\n+            workflowResultManager.commandOptionError(EXPORT_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"f65bf2fe8097bde91def9cd556f86d3a6f4cf11c","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/self/WorkflowExportDiagram.java","status":"added","additions":68,"deletions":0,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDiagram.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDiagram.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowExportDiagram.java?ref=3c36fe10e73bc14fb4512a88127d8b2d11919bee","patch":"@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.self;\n+\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import javax.ws.rs.core.Response;\n+import javax.xml.ws.WebServiceException;\n+import org.apache.cxf.helpers.IOUtils;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.client.cli.util.CommandUtils;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+\n+public class WorkflowExportDiagram extends AbstractWorkflowCommand {\n+\n+    private static final String EXPORT_HELP_MESSAGE = \"workflow --export-diagram {ANY-TYPE-KIND}\\n\";\n+\n+    private final Input input;\n+\n+    public WorkflowExportDiagram(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void export() {\n+        if (input.parameterNumber() == 1) {\n+            try {\n+                final AnyTypeKind anyTypeKind = AnyTypeKind.valueOf(input.firstParameter());\n+                final Response response = workflowSyncopeOperations.exportDiagram(anyTypeKind);\n+                final byte[] diagram = IOUtils.readBytesFromStream((InputStream) response.getEntity());\n+                final FileOutputStream fos = new FileOutputStream(\"/tmp/diagram.png\");\n+                fos.write(diagram);\n+                fos.close();\n+                workflowResultManager.generic(\"Diagram created: /tmp/diagram.png\");\n+            } catch (final SyncopeClientException | WebServiceException ex) {\n+                if (ex.getMessage().startsWith(\"NotFound\")) {\n+                    workflowResultManager.notFoundError(\"Workflow\", input.firstParameter());\n+                } else {\n+                    workflowResultManager.generic(ex.getMessage());\n+                }\n+            } catch (final IllegalArgumentException ex) {\n+                workflowResultManager.typeNotValidError(\n+                        \"workflow\", input.firstParameter(), CommandUtils.fromEnumToArray(AnyTypeKind.class));\n+            } catch (final IOException ex) {\n+\n+            }\n+        } else {\n+            workflowResultManager.commandOptionError(EXPORT_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"2737a6a2ae100001394daf97bd6b924926223281","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/self/WorkflowResultManager.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowResultManager.java?ref=3c36fe10e73bc14fb4512a88127d8b2d11919bee","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.self;\n+\n+import java.util.List;\n+import org.apache.syncope.client.cli.commands.CommonsResultManager;\n+import org.apache.syncope.common.lib.to.WorkflowFormTO;\n+\n+public class WorkflowResultManager extends CommonsResultManager {\n+\n+    public void toView(final List<WorkflowFormTO> workflowFormTOs) {\n+        for (final WorkflowFormTO workflowFormTO : workflowFormTOs) {\n+            printQuestion(workflowFormTO);\n+        }\n+    }\n+\n+    public void printQuestion(final WorkflowFormTO workflowFormTO) {\n+        System.out.println(\" > WORKFLOW FORM ID: \" + workflowFormTO.getKey());\n+        System.out.println(\"    description: \" + workflowFormTO.getDescription());\n+        System.out.println(\"\");\n+    }\n+}"},{"sha":"2add12d7accdc6f4eb6fe95aca669679ea20e8cb","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/self/WorkflowSyncopeOperations.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3c36fe10e73bc14fb4512a88127d8b2d11919bee/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fself%2FWorkflowSyncopeOperations.java?ref=3c36fe10e73bc14fb4512a88127d8b2d11919bee","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.self;\n+\n+import javax.ws.rs.core.Response;\n+import org.apache.cxf.jaxrs.client.WebClient;\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.rest.api.RESTHeaders;\n+import org.apache.syncope.common.rest.api.service.WorkflowService;\n+\n+public class WorkflowSyncopeOperations {\n+\n+    private final WorkflowService workflowService = SyncopeServices.get(WorkflowService.class);\n+\n+    public Response exportDiagram(final AnyTypeKind anyTypeKind) {\n+        WebClient.client(workflowService).accept(RESTHeaders.MEDIATYPE_IMAGE_PNG);\n+        return workflowService.exportDiagram(anyTypeKind);\n+    }\n+\n+    public Response exportDefinition(final AnyTypeKind anyTypeKind) {\n+        return workflowService.exportDefinition(anyTypeKind);\n+    }\n+\n+}"}]}