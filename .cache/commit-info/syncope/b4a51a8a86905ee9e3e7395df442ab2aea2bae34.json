{"sha":"b4a51a8a86905ee9e3e7395df442ab2aea2bae34","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmI0YTUxYThhODY5MDVlZTllM2U3Mzk1ZGY0NDJhYjJhZWEyYmFlMzQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-11-16T14:21:52Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-11-16T14:21:52Z"},"message":"[SYNCOPE-732] Implementation completed","tree":{"sha":"c37a34107cfddaa537802c5521c2e195a694614f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c37a34107cfddaa537802c5521c2e195a694614f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b4a51a8a86905ee9e3e7395df442ab2aea2bae34","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b4a51a8a86905ee9e3e7395df442ab2aea2bae34","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b4a51a8a86905ee9e3e7395df442ab2aea2bae34","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"4eaee19ae66b0cb11775f900466d953f1bf5f592","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4eaee19ae66b0cb11775f900466d953f1bf5f592","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4eaee19ae66b0cb11775f900466d953f1bf5f592"}],"stats":{"total":697,"additions":512,"deletions":185},"files":[{"sha":"797678f0513dab2df3a4c38e88c11bc7098c669a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/entitlement/EntitlementSyncopeOperations.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fentitlement%2FEntitlementSyncopeOperations.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.client.cli.commands.entitlement;\n \n import java.util.HashSet;\n-import java.util.List;\n import java.util.Set;\n import java.util.TreeSet;\n import org.apache.syncope.client.cli.SyncopeServices;\n@@ -38,7 +37,7 @@ public class EntitlementSyncopeOperations {\n \n     private final RoleSyncopeOperations roleSyncopeOperations = new RoleSyncopeOperations();\n \n-    public List<String> list() {\n+    public Set<String> list() {\n         return syncopeTO.getEntitlements();\n     }\n "},{"sha":"bdb430f949024254bb9889cb8ce05396b26c154a","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/info/Info.java","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfo.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -101,7 +101,7 @@ public void accountRules() {\n         }\n     }\n \n-    public void connidLocation() {\n+    public void connidLocations() {\n         try {\n             infoResultManager.printConnidLocations(syncopeTO.getConnIdLocations());\n         } catch (final Exception ex) {\n@@ -110,6 +110,15 @@ public void connidLocation() {\n         }\n     }\n \n+    public void reconciliationFilterBuilders() {\n+        try {\n+            infoResultManager.printReconciliationFilterBuilders(syncopeTO.getReconciliationFilterBuilders());\n+        } catch (final Exception ex) {\n+            LOG.error(\"Information error\", ex);\n+            infoResultManager.genericError(ex.getMessage());\n+        }\n+    }\n+\n     public void logicActions() {\n         try {\n             infoResultManager.printLogicActions(syncopeTO.getLogicActions());"},{"sha":"db2c2835d4020cf491714401f823b8c5e955b8af","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/info/InfoCommand.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoCommand.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -59,7 +59,10 @@ public void execute(final Input input) {\n                 info.accountRules();\n                 break;\n             case CONNID_LOCATION:\n-                info.connidLocation();\n+                info.connidLocations();\n+                break;\n+            case RECONCILIATION_FILTER_BUILDERS:\n+                info.reconciliationFilterBuilders();\n                 break;\n             case LOGIC_ACTIONS:\n                 info.logicActions();\n@@ -128,6 +131,7 @@ private enum Options {\n         WORKFLOW_ADAPTER(\"--workflow-adapter-classes\"),\n         ACCOUNT_RULES(\"--account-rules-classes\"),\n         CONNID_LOCATION(\"--connid-locations\"),\n+        RECONCILIATION_FILTER_BUILDERS(\"--reconciliation-filter-builders\"),\n         LOGIC_ACTIONS(\"--logic-actions\"),\n         MAIL_TEMPLATES(\"--mail-templates\"),\n         MAPPING_ITEM_TRANSFORMERS(\"--mapping-item-transformers\"),"},{"sha":"f5f816f77b8691bcd2f5844561a05b30c46a232b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/info/InfoResultManager.java","status":"modified","additions":22,"deletions":16,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finfo%2FInfoResultManager.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.client.cli.commands.info;\n \n-import java.util.List;\n+import java.util.Collection;\n import org.apache.syncope.client.cli.commands.CommonsResultManager;\n \n public class InfoResultManager extends CommonsResultManager {\n@@ -57,85 +57,91 @@ public void printWorkflowAdapter(final String anyObjectWorkflowAdapter,\n                 \"Group      workflow adapter class: \" + groupWorkflowAdapter);\n     }\n \n-    public void printAccountRules(final List<String> rules) {\n+    public void printAccountRules(final Collection<String> rules) {\n         for (final String accountRule : rules) {\n             genericMessage(\"Account rule: \" + accountRule);\n         }\n     }\n \n-    public void printConnidLocations(final List<String> locations) {\n+    public void printConnidLocations(final Collection<String> locations) {\n         for (final String location : locations) {\n             genericMessage(\"ConnId location: \" + location);\n         }\n     }\n \n-    public void printLogicActions(final List<String> actions) {\n+    public void printReconciliationFilterBuilders(final Collection<String> reconciliationFilterBuilders) {\n+        for (final String reconciliationFilterBuilder : reconciliationFilterBuilders) {\n+            genericMessage(\"Reconciliation filter builder: \" + reconciliationFilterBuilder);\n+        }\n+    }\n+\n+    public void printLogicActions(final Collection<String> actions) {\n         for (final String action : actions) {\n             genericMessage(\"Logic action: \" + action);\n         }\n     }\n \n-    public void printMailTemplates(final List<String> mailTemplates) {\n+    public void printMailTemplates(final Collection<String> mailTemplates) {\n         for (final String template : mailTemplates) {\n             genericMessage(\"Mail template: \" + template);\n         }\n     }\n \n-    public void printMappingItemTransformers(final List<String> transformers) {\n+    public void printMappingItemTransformers(final Collection<String> transformers) {\n         for (final String tranformer : transformers) {\n             genericMessage(\"Mapping item tranformer: \" + tranformer);\n         }\n     }\n \n-    public void printPasswordRules(final List<String> rules) {\n+    public void printPasswordRules(final Collection<String> rules) {\n         for (final String rule : rules) {\n             genericMessage(\"Password rule: \" + rule);\n         }\n     }\n \n-    public void printCorrelationRules(final List<String> rules) {\n+    public void printCorrelationRules(final Collection<String> rules) {\n         for (final String rule : rules) {\n             genericMessage(\"Correlation rule: \" + rule);\n         }\n     }\n \n-    public void printPropagationActions(final List<String> actions) {\n+    public void printPropagationActions(final Collection<String> actions) {\n         for (final String action : actions) {\n             genericMessage(\"Propagation action: \" + action);\n         }\n     }\n \n-    public void printPushActions(final List<String> actions) {\n+    public void printPushActions(final Collection<String> actions) {\n         for (final String action : actions) {\n             genericMessage(\"Push action: \" + action);\n         }\n     }\n \n-    public void printSyncActions(final List<String> actions) {\n+    public void printSyncActions(final Collection<String> actions) {\n         for (final String action : actions) {\n             genericMessage(\"Sync action: \" + action);\n         }\n     }\n \n-    public void printCorrelationActions(final List<String> actions) {\n+    public void printCorrelationActions(final Collection<String> actions) {\n         for (final String action : actions) {\n             genericMessage(\"Push correlation rule: \" + action);\n         }\n     }\n \n-    public void printReportlets(final List<String> reportlets) {\n+    public void printReportlets(final Collection<String> reportlets) {\n         for (final String reportlet : reportlets) {\n             genericMessage(\"Reportlet: \" + reportlet);\n         }\n     }\n \n-    public void printJobs(final List<String> jobs) {\n+    public void printJobs(final Collection<String> jobs) {\n         for (final String job : jobs) {\n             genericMessage(\"Task job: \" + job);\n         }\n     }\n \n-    public void printValidators(final List<String> validators) {\n+    public void printValidators(final Collection<String> validators) {\n         for (final String validator : validators) {\n             genericMessage(\"Validator: \" + validator);\n         }\n@@ -144,7 +150,7 @@ public void printValidators(final List<String> validators) {\n     public void printPasswordGenerator(final String passwordGenerator) {\n         genericMessage(\"Password generator class: \" + passwordGenerator);\n     }\n-    \n+\n     public void printVirtualAttributeCacheClass(final String virAttrCache) {\n         genericMessage(\"Virtual attribute cache class: \" + virAttrCache);\n     }"},{"sha":"4409c35a667c8a3d4220ef30f87f95cb37ebf6e4","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskDetails.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskDetails.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -31,6 +31,7 @@\n import org.apache.syncope.common.lib.to.SchedTaskTO;\n import org.apache.syncope.common.lib.to.SyncTaskTO;\n import org.apache.syncope.common.lib.to.TaskExecTO;\n+import org.apache.syncope.common.lib.types.SyncMode;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -51,8 +52,8 @@ public void details() {\n         if (input.parameterNumber() == 0) {\n             try {\n                 final Map<String, String> details = new LinkedMap<>();\n-                final List<AbstractTaskTO> notificationTaskTOs\n-                        = taskSyncopeOperations.list(TaskType.NOTIFICATION.name());\n+                final List<AbstractTaskTO> notificationTaskTOs =\n+                        taskSyncopeOperations.list(TaskType.NOTIFICATION.name());\n                 final List<AbstractTaskTO> propagationTaskTOs = taskSyncopeOperations.list(TaskType.PROPAGATION.name());\n                 final List<AbstractTaskTO> pushTaskTOs = taskSyncopeOperations.list(TaskType.PUSH.name());\n                 final List<AbstractTaskTO> scheduledTaskTOs = taskSyncopeOperations.list(TaskType.SCHEDULED.name());\n@@ -105,7 +106,7 @@ public void details() {\n                             || ((SyncTaskTO) syncTaskTO).getExecutions().isEmpty()) {\n                         syncNotExecuted++;\n                     }\n-                    if (((SyncTaskTO) syncTaskTO).isFullReconciliation()) {\n+                    if (((SyncTaskTO) syncTaskTO).getSyncMode() == SyncMode.FULL_RECONCILIATION) {\n                         syncFull++;\n                     }\n                 }"},{"sha":"a1fdb0bf6055335ab469de1608ab70bba90c2991","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/task/TaskResultManager.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Ftask%2FTaskResultManager.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -170,8 +170,7 @@ private void printSyncTask(final SyncTaskTO syncTaskTO) {\n         System.out.println(\"     realm destination: \" + syncTaskTO.getDestinationRealm());\n         System.out.println(\"     cron expression: \" + syncTaskTO.getCronExpression());\n         System.out.println(\"     description: \" + syncTaskTO.getDescription());\n-        System.out.println(\"     is full reconciliation: \"\n-                + syncTaskTO.isFullReconciliation());\n+        System.out.println(\"     sync mode: \" + syncTaskTO.getSyncMode());\n         System.out.println(\"     perform create: \" + syncTaskTO.isPerformCreate());\n         System.out.println(\"     perform delete: \" + syncTaskTO.isPerformDelete());\n         System.out.println(\"     perform update: \" + syncTaskTO.isPerformUpdate());"},{"sha":"622a4ca25905fc5fe05127a7df4541c8ccf43f1e","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ConfigurationRestClient.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FConfigurationRestClient.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.rest;\n \n import java.util.List;\n+import java.util.Set;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.AttrLayoutType;\n@@ -82,7 +83,7 @@ public void delete(final String key) {\n         getService(ConfigurationService.class).delete(key);\n     }\n \n-    public List<String> getMailTemplates() {\n+    public Set<String> getMailTemplates() {\n         return SyncopeConsoleSession.get().getSyncopeTO().getMailTemplates();\n     }\n "},{"sha":"a3f44a1317b6434105162034155faa5461b6f84b","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/PolicyRestClient.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FPolicyRestClient.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import java.util.Set;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n import org.apache.syncope.common.lib.types.PolicyType;\n@@ -69,8 +70,8 @@ public void delete(final Long id, final Class<? extends AbstractPolicyTO> policy\n         getService(PolicyService.class).delete(id);\n     }\n \n-    public List<String> getCorrelationRuleClasses() {\n-        List<String> rules = null;\n+    public Set<String> getCorrelationRuleClasses() {\n+        Set<String> rules = null;\n \n         try {\n             rules = SyncopeConsoleSession.get().getSyncopeTO().getSyncCorrelationRules();"},{"sha":"e3bc2befb113420d2cef927dfe6ba814afd553cc","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/ResourceRestClient.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FResourceRestClient.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n+import java.util.ArrayList;\n import java.util.List;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n@@ -39,7 +40,7 @@ public class ResourceRestClient extends BaseRestClient {\n     private static final long serialVersionUID = -6898907679835668987L;\n \n     public List<String> getPropagationActionsClasses() {\n-        return SyncopeConsoleSession.get().getSyncopeTO().getPropagationActions();\n+        return new ArrayList<>(SyncopeConsoleSession.get().getSyncopeTO().getPropagationActions());\n     }\n \n     public List<ResourceTO> getAll() {"},{"sha":"4d5f9fba65666f1d208d9b558dfd35c1305a14de","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/SchemaRestClient.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSchemaRestClient.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -51,10 +51,8 @@ public void filter(\n                 if (!allowed.contains(schema.getKey())) {\n                     itor.remove();\n                 }\n-            } else {\n-                if (allowed.contains(schema.getKey())) {\n-                    itor.remove();\n-                }\n+            } else if (allowed.contains(schema.getKey())) {\n+                itor.remove();\n             }\n         }\n     }\n@@ -197,7 +195,7 @@ public List<String> getAllValidatorClasses() {\n         List<String> response = null;\n \n         try {\n-            response = SyncopeConsoleSession.get().getSyncopeTO().getValidators();\n+            response = new ArrayList<>(SyncopeConsoleSession.get().getSyncopeTO().getValidators());\n         } catch (SyncopeClientException e) {\n             LOG.error(\"While getting all validators\", e);\n         }"},{"sha":"30087ce7cf331c61e1abf7c4ee62b03fa41227f3","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/TaskRestClient.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.rest;\n \n import java.util.List;\n+import java.util.Set;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n@@ -42,15 +43,15 @@ public class TaskRestClient extends BaseRestClient implements ExecutionRestClien\n \n     private static final long serialVersionUID = 6284485820911028843L;\n \n-    public List<String> getJobClasses() {\n+    public Set<String> getJobClasses() {\n         return SyncopeConsoleSession.get().getSyncopeTO().getTaskJobs();\n     }\n \n-    public List<String> getSyncActionsClasses() {\n+    public Set<String> getSyncActionsClasses() {\n         return SyncopeConsoleSession.get().getSyncopeTO().getSyncActions();\n     }\n \n-    public List<String> getPushActionsClasses() {\n+    public Set<String> getPushActionsClasses() {\n         return SyncopeConsoleSession.get().getSyncopeTO().getPushActions();\n     }\n "},{"sha":"312f654679c184ef7e842e6ec2e3cdd5e44b554c","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/SyncTaskTO.java","status":"modified","additions":20,"deletions":9,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncTaskTO.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -28,6 +28,7 @@\n import javax.xml.bind.annotation.XmlType;\n import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n+import org.apache.syncope.common.lib.types.SyncMode;\n \n @XmlRootElement(name = \"syncTask\")\n @XmlType\n@@ -36,13 +37,31 @@ public class SyncTaskTO extends AbstractProvisioningTaskTO {\n \n     private static final long serialVersionUID = -2143537546915809017L;\n \n+    private SyncMode syncMode;\n+\n+    private String reconciliationFilterBuilderClassName;\n+\n     private String destinationRealm;\n \n     @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     @JsonIgnore\n     private final Map<String, AnyTO> templates = new HashMap<>();\n \n-    private boolean fullReconciliation;\n+    public SyncMode getSyncMode() {\n+        return syncMode;\n+    }\n+\n+    public void setSyncMode(final SyncMode syncMode) {\n+        this.syncMode = syncMode;\n+    }\n+\n+    public String getReconciliationFilterBuilderClassName() {\n+        return reconciliationFilterBuilderClassName;\n+    }\n+\n+    public void setReconciliationFilterBuilderClassName(final String reconciliationFilterBuilderClassName) {\n+        this.reconciliationFilterBuilderClassName = reconciliationFilterBuilderClassName;\n+    }\n \n     public String getDestinationRealm() {\n         return destinationRealm;\n@@ -56,12 +75,4 @@ public void setDestinationRealm(final String destinationRealm) {\n     public Map<String, AnyTO> getTemplates() {\n         return templates;\n     }\n-\n-    public boolean isFullReconciliation() {\n-        return fullReconciliation;\n-    }\n-\n-    public void setFullReconciliation(final boolean fullReconciliation) {\n-        this.fullReconciliation = fullReconciliation;\n-    }\n }"},{"sha":"85b75cd6387866bf9c38afd81995af646da44529","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/SyncopeTO.java","status":"modified","additions":41,"deletions":32,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncopeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncopeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSyncopeTO.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -19,8 +19,8 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n-import java.util.ArrayList;\n-import java.util.List;\n+import java.util.HashSet;\n+import java.util.Set;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n@@ -41,7 +41,7 @@ public class SyncopeTO extends AbstractBaseBean {\n \n     private boolean pwdResetRequiringSecurityQuestions;\n \n-    private final List<String> connIdLocations = new ArrayList<>();\n+    private final Set<String> connIdLocations = new HashSet<>();\n \n     private String anyObjectWorkflowAdapter;\n \n@@ -59,33 +59,35 @@ public class SyncopeTO extends AbstractBaseBean {\n \n     private String passwordGenerator;\n \n-    private final List<String> entitlements = new ArrayList<>();\n+    private final Set<String> entitlements = new HashSet<>();\n \n-    private final List<String> reportlets = new ArrayList<>();\n+    private final Set<String> reportlets = new HashSet<>();\n \n-    private final List<String> accountRules = new ArrayList<>();\n+    private final Set<String> accountRules = new HashSet<>();\n \n-    private final List<String> passwordRules = new ArrayList<>();\n+    private final Set<String> passwordRules = new HashSet<>();\n \n-    private final List<String> mappingItemTransformers = new ArrayList<>();\n+    private final Set<String> mappingItemTransformers = new HashSet<>();\n \n-    private final List<String> taskJobs = new ArrayList<>();\n+    private final Set<String> taskJobs = new HashSet<>();\n \n-    private final List<String> logicActions = new ArrayList<>();\n+    private final Set<String> reconciliationFilterBuilders = new HashSet<>();\n \n-    private final List<String> propagationActions = new ArrayList<>();\n+    private final Set<String> logicActions = new HashSet<>();\n \n-    private final List<String> syncActions = new ArrayList<>();\n+    private final Set<String> propagationActions = new HashSet<>();\n \n-    private final List<String> pushActions = new ArrayList<>();\n+    private final Set<String> syncActions = new HashSet<>();\n \n-    private final List<String> syncCorrelationRules = new ArrayList<>();\n+    private final Set<String> pushActions = new HashSet<>();\n \n-    private final List<String> pushCorrelationRules = new ArrayList<>();\n+    private final Set<String> syncCorrelationRules = new HashSet<>();\n \n-    private final List<String> validators = new ArrayList<>();\n+    private final Set<String> pushCorrelationRules = new HashSet<>();\n \n-    private final List<String> mailTemplates = new ArrayList<>();\n+    private final Set<String> validators = new HashSet<>();\n+\n+    private final Set<String> mailTemplates = new HashSet<>();\n \n     public String getVersion() {\n         return version;\n@@ -106,7 +108,7 @@ public boolean isPwdResetRequiringSecurityQuestions() {\n     @XmlElementWrapper(name = \"connIdLocations\")\n     @XmlElement(name = \"connIdLocation\")\n     @JsonProperty(\"connIdLocations\")\n-    public List<String> getConnIdLocations() {\n+    public Set<String> getConnIdLocations() {\n         return connIdLocations;\n     }\n \n@@ -149,98 +151,105 @@ public void setPasswordGenerator(final String passwordGenerator) {\n     @XmlElementWrapper(name = \"entitlements\")\n     @XmlElement(name = \"entitlement\")\n     @JsonProperty(\"entitlements\")\n-    public List<String> getEntitlements() {\n+    public Set<String> getEntitlements() {\n         return entitlements;\n     }\n \n     @XmlElementWrapper(name = \"reportlets\")\n     @XmlElement(name = \"reportlet\")\n     @JsonProperty(\"reportlets\")\n-    public List<String> getReportlets() {\n+    public Set<String> getReportlets() {\n         return reportlets;\n     }\n \n     @XmlElementWrapper(name = \"accountRules\")\n     @XmlElement(name = \"accountRule\")\n     @JsonProperty(\"accountRules\")\n-    public List<String> getAccountRules() {\n+    public Set<String> getAccountRules() {\n         return accountRules;\n     }\n \n     @XmlElementWrapper(name = \"passwordRules\")\n     @XmlElement(name = \"passwordRule\")\n     @JsonProperty(\"passwordRules\")\n-    public List<String> getPasswordRules() {\n+    public Set<String> getPasswordRules() {\n         return passwordRules;\n     }\n \n     @XmlElementWrapper(name = \"mappingItemTransformers\")\n     @XmlElement(name = \"mappingItemTransformer\")\n     @JsonProperty(\"mappingItemTransformers\")\n-    public List<String> getMappingItemTransformers() {\n+    public Set<String> getMappingItemTransformers() {\n         return mappingItemTransformers;\n     }\n \n     @XmlElementWrapper(name = \"taskJobs\")\n     @XmlElement(name = \"taskJob\")\n     @JsonProperty(\"taskJobs\")\n-    public List<String> getTaskJobs() {\n+    public Set<String> getTaskJobs() {\n         return taskJobs;\n     }\n \n+    @XmlElementWrapper(name = \"reconciliationFilterBuilders\")\n+    @XmlElement(name = \"reconciliationFilterBuilder\")\n+    @JsonProperty(\"reconciliationFilterBuilders\")\n+    public Set<String> getReconciliationFilterBuilders() {\n+        return reconciliationFilterBuilders;\n+    }\n+\n     @XmlElementWrapper(name = \"logicActions\")\n     @XmlElement(name = \"logicAction\")\n     @JsonProperty(\"logicActions\")\n-    public List<String> getLogicActions() {\n+    public Set<String> getLogicActions() {\n         return logicActions;\n     }\n \n     @XmlElementWrapper(name = \"propagationActions\")\n     @XmlElement(name = \"propagationAction\")\n     @JsonProperty(\"propagationActions\")\n-    public List<String> getPropagationActions() {\n+    public Set<String> getPropagationActions() {\n         return propagationActions;\n     }\n \n     @XmlElementWrapper(name = \"syncActions\")\n     @XmlElement(name = \"syncAction\")\n     @JsonProperty(\"syncActions\")\n-    public List<String> getSyncActions() {\n+    public Set<String> getSyncActions() {\n         return syncActions;\n     }\n \n     @XmlElementWrapper(name = \"pushActions\")\n     @XmlElement(name = \"pushAction\")\n     @JsonProperty(\"pushActions\")\n-    public List<String> getPushActions() {\n+    public Set<String> getPushActions() {\n         return pushActions;\n     }\n \n     @XmlElementWrapper(name = \"syncCorrelationRules\")\n     @XmlElement(name = \"syncCorrelationRule\")\n     @JsonProperty(\"syncCorrelationRules\")\n-    public List<String> getSyncCorrelationRules() {\n+    public Set<String> getSyncCorrelationRules() {\n         return syncCorrelationRules;\n     }\n \n     @XmlElementWrapper(name = \"pushCorrelationRules\")\n     @XmlElement(name = \"pushCorrelationRule\")\n     @JsonProperty(\"pushCorrelationRules\")\n-    public List<String> getPushCorrelationRules() {\n+    public Set<String> getPushCorrelationRules() {\n         return pushCorrelationRules;\n     }\n \n     @XmlElementWrapper(name = \"validators\")\n     @XmlElement(name = \"validator\")\n     @JsonProperty(\"validators\")\n-    public List<String> getValidators() {\n+    public Set<String> getValidators() {\n         return validators;\n     }\n \n     @XmlElementWrapper(name = \"mailTemplates\")\n     @XmlElement(name = \"mailTemplate\")\n     @JsonProperty(\"mailTemplates\")\n-    public List<String> getMailTemplates() {\n+    public Set<String> getMailTemplates() {\n         return mailTemplates;\n     }\n "},{"sha":"afa9f194559872de79a111d527f6513d533c8a00","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/SyncMode.java","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSyncMode.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSyncMode.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSyncMode.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import javax.xml.bind.annotation.XmlEnum;\n+\n+@XmlEnum\n+public enum SyncMode {\n+    FULL_RECONCILIATION,\n+    FILTERED_RECONCILIATION,\n+    INCREMENTAL;\n+\n+}"},{"sha":"f2a9c3b0335290fe3f2454fdb28ac88b6d8a746b","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/SyncopeLogic.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -136,6 +136,8 @@ public SyncopeTO info() {\n         syncopeTO.getPasswordRules().addAll(implLookup.getClassNames(Type.PASSWORD_RULE));\n         syncopeTO.getMappingItemTransformers().addAll(implLookup.getClassNames(Type.MAPPING_ITEM_TRANSFORMER));\n         syncopeTO.getTaskJobs().addAll(implLookup.getClassNames(Type.TASKJOBDELEGATE));\n+        syncopeTO.getReconciliationFilterBuilders().\n+                addAll(implLookup.getClassNames(Type.RECONCILIATION_FILTER_BUILDER));\n         syncopeTO.getLogicActions().addAll(implLookup.getClassNames(Type.LOGIC_ACTIONS));\n         syncopeTO.getPropagationActions().addAll(implLookup.getClassNames(Type.PROPAGATION_ACTIONS));\n         syncopeTO.getSyncActions().addAll(implLookup.getClassNames(Type.SYNC_ACTIONS));"},{"sha":"3fc4fc4d77206f757287ae18bd3b783086c07c3a","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/init/ClassPathScanImplementationLookup.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -53,6 +53,7 @@\n import org.springframework.core.type.filter.AssignableTypeFilter;\n import org.springframework.stereotype.Component;\n import org.springframework.util.ClassUtils;\n+import org.apache.syncope.core.provisioning.api.sync.ReconciliationFilterBuilder;\n \n /**\n  * Cache class names for all implementations of Syncope interfaces found in classpath, for later usage.\n@@ -93,6 +94,7 @@ public void load() {\n         scanner.addIncludeFilter(new AssignableTypeFilter(PasswordRule.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(MappingItemTransformer.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(SchedTaskJobDelegate.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(ReconciliationFilterBuilder.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(LogicActions.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(PropagationActions.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(SyncActions.class));\n@@ -144,6 +146,10 @@ public void load() {\n                     classNames.get(Type.TASKJOBDELEGATE).add(bd.getBeanClassName());\n                 }\n \n+                if (ReconciliationFilterBuilder.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n+                    classNames.get(Type.RECONCILIATION_FILTER_BUILDER).add(bd.getBeanClassName());\n+                }\n+\n                 if (LogicActions.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n                     classNames.get(Type.LOGIC_ACTIONS).add(bd.getBeanClassName());\n                 }"},{"sha":"6b84c99631fe964eb16a47eef8c9a18e283697e6","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/ImplementationLookup.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2FImplementationLookup.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -35,6 +35,7 @@ enum Type {\n         PASSWORD_RULE,\n         MAPPING_ITEM_TRANSFORMER,\n         TASKJOBDELEGATE,\n+        RECONCILIATION_FILTER_BUILDER,\n         LOGIC_ACTIONS,\n         PROPAGATION_ACTIONS,\n         SYNC_ACTIONS,"},{"sha":"ca0798814d8b3d93374d3996affdc4862abc64bd","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/task/SyncTask.java","status":"modified","additions":9,"deletions":4,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FSyncTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FSyncTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2Ftask%2FSyncTask.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -19,18 +19,23 @@\n package org.apache.syncope.core.persistence.api.entity.task;\n \n import java.util.List;\n+import org.apache.syncope.common.lib.types.SyncMode;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n \n public interface SyncTask extends ProvisioningTask {\n \n-    Realm getDestinatioRealm();\n+    SyncMode getSyncMode();\n \n-    void setDestinationRealm(Realm destinationRealm);\n+    void setSyncMode(SyncMode syncMode);\n+\n+    String getReconciliationFilterBuilderClassName();\n \n-    boolean isFullReconciliation();\n+    void setReconciliationFilterBuilderClassName(String reconciliationFilterBuilderClassName);\n \n-    void setFullReconciliation(boolean condition);\n+    Realm getDestinatioRealm();\n+\n+    void setDestinationRealm(Realm destinationRealm);\n \n     boolean add(AnyTemplateSyncTask template);\n "},{"sha":"935d76c70409b6eac3433c7170c70ea61e5bc35f","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/JPASyncTask.java","status":"modified","additions":30,"deletions":18,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPASyncTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPASyncTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FJPASyncTask.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -22,21 +22,22 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-import javax.persistence.Basic;\n import javax.persistence.CascadeType;\n import javax.persistence.CollectionTable;\n import javax.persistence.Column;\n import javax.persistence.DiscriminatorValue;\n import javax.persistence.ElementCollection;\n import javax.persistence.Entity;\n+import javax.persistence.EnumType;\n+import javax.persistence.Enumerated;\n import javax.persistence.FetchType;\n import javax.persistence.JoinColumn;\n import javax.persistence.ManyToOne;\n import javax.persistence.OneToMany;\n-import javax.validation.constraints.Max;\n-import javax.validation.constraints.Min;\n+import javax.validation.constraints.NotNull;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Predicate;\n+import org.apache.syncope.common.lib.types.SyncMode;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.core.persistence.api.entity.AnyType;\n import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n@@ -51,6 +52,12 @@ public class JPASyncTask extends AbstractProvisioningTask implements SyncTask {\n \n     private static final long serialVersionUID = -4141057723006682563L;\n \n+    @Enumerated(EnumType.STRING)\n+    @NotNull\n+    private SyncMode syncMode;\n+\n+    private String reconciliationFilterBuilderClassName;\n+\n     @ManyToOne(fetch = FetchType.EAGER, optional = false)\n     private JPARealm destinationRealm;\n \n@@ -64,18 +71,33 @@ public class JPASyncTask extends AbstractProvisioningTask implements SyncTask {\n     @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"syncTask\")\n     private List<JPAAnyTemplateSyncTask> templates = new ArrayList<>();\n \n-    @Basic\n-    @Min(0)\n-    @Max(1)\n-    private Integer fullReconciliation;\n-\n     /**\n      * Default constructor.\n      */\n     public JPASyncTask() {\n         super(TaskType.SYNCHRONIZATION, null);\n     }\n \n+    @Override\n+    public SyncMode getSyncMode() {\n+        return syncMode;\n+    }\n+\n+    @Override\n+    public void setSyncMode(final SyncMode syncMode) {\n+        this.syncMode = syncMode;\n+    }\n+\n+    @Override\n+    public String getReconciliationFilterBuilderClassName() {\n+        return reconciliationFilterBuilderClassName;\n+    }\n+\n+    @Override\n+    public void setReconciliationFilterBuilderClassName(final String reconciliationFilterBuilderClassName) {\n+        this.reconciliationFilterBuilderClassName = reconciliationFilterBuilderClassName;\n+    }\n+\n     @Override\n     public Realm getDestinatioRealm() {\n         return destinationRealm;\n@@ -92,16 +114,6 @@ public Set<String> getActionsClassNames() {\n         return actionsClassNames;\n     }\n \n-    @Override\n-    public boolean isFullReconciliation() {\n-        return isBooleanAsInteger(fullReconciliation);\n-    }\n-\n-    @Override\n-    public void setFullReconciliation(final boolean fullReconciliation) {\n-        this.fullReconciliation = getBooleanAsInteger(fullReconciliation);\n-    }\n-\n     @Override\n     public boolean add(final AnyTemplateSyncTask template) {\n         checkType(template, JPAAnyTemplateSyncTask.class);"},{"sha":"72b421e861bf2c38cc6d37e8ebcee2fc87982c3b","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/ProvisioningTaskValidator.java","status":"modified","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FProvisioningTaskValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FProvisioningTaskValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FProvisioningTaskValidator.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -20,11 +20,14 @@\n \n import javax.validation.ConstraintValidatorContext;\n import org.apache.syncope.common.lib.types.EntityViolationType;\n+import org.apache.syncope.common.lib.types.SyncMode;\n import org.apache.syncope.core.persistence.api.entity.task.ProvisioningTask;\n+import org.apache.syncope.core.persistence.api.entity.task.SyncTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPAPushTask;\n import org.apache.syncope.core.persistence.jpa.entity.task.JPASyncTask;\n import org.apache.syncope.core.provisioning.api.sync.PushActions;\n import org.apache.syncope.core.provisioning.api.sync.SyncActions;\n+import org.apache.syncope.core.provisioning.api.sync.ReconciliationFilterBuilder;\n \n public class ProvisioningTaskValidator extends AbstractValidator<ProvisioningTaskCheck, ProvisioningTask> {\n \n@@ -78,6 +81,30 @@ public boolean isValid(final ProvisioningTask task, final ConstraintValidatorCon\n                     }\n                 }\n             }\n+\n+            if (isValid && task instanceof SyncTask\n+                    && ((SyncTask) task).getSyncMode() == SyncMode.FILTERED_RECONCILIATION) {\n+\n+                Class<?> filterBuilderClass = null;\n+                boolean isAssignable = false;\n+                try {\n+                    filterBuilderClass = Class.forName(((SyncTask) task).getReconciliationFilterBuilderClassName());\n+                    isAssignable = ReconciliationFilterBuilder.class.isAssignableFrom(filterBuilderClass);\n+                } catch (Exception e) {\n+                    LOG.error(\"Invalid {} specified\",\n+                            ReconciliationFilterBuilder.class.getName(), SyncActions.class.getName(), e);\n+                    isValid = false;\n+                }\n+\n+                if (filterBuilderClass == null || !isAssignable) {\n+                    isValid = false;\n+\n+                    context.disableDefaultConstraintViolation();\n+                    context.buildConstraintViolationWithTemplate(\n+                            getTemplate(EntityViolationType.InvalidProvisioningTask, \"Invalid class name\")).\n+                            addPropertyNode(\"reconciliationFilterBuilderClassName\").addConstraintViolation();\n+                }\n+            }\n         }\n \n         return isValid;"},{"sha":"05a22ed92541dc64a019b5a784c5fb2fb2f1a39a","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/TaskTest.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FTaskTest.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -33,6 +33,7 @@\n import org.apache.syncope.common.lib.types.MatchingRule;\n import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n+import org.apache.syncope.common.lib.types.SyncMode;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n@@ -217,6 +218,7 @@ public void saveSyncTask() {\n         SyncTask task = entityFactory.newEntity(SyncTask.class);\n         task.setName(\"saveSyncTask\");\n         task.setDescription(\"SyncTask description\");\n+        task.setSyncMode(SyncMode.FULL_RECONCILIATION);\n         task.add(template);\n         task.setCronExpression(\"BLA BLA\");\n         task.setMatchingRule(MatchingRule.UPDATE);\n@@ -274,6 +276,7 @@ public void issueSYNCOPE144() {\n         task.setResource(resource);\n         task.setName(\"issueSYNCOPE144\");\n         task.setDescription(\"issueSYNCOPE144 Description\");\n+        task.setSyncMode(SyncMode.FULL_RECONCILIATION);\n         task.getActionsClassNames().add(SyncActions.class.getName());\n         task.setMatchingRule(MatchingRule.UPDATE);\n         task.setUnmatchingRule(UnmatchingRule.PROVISION);"},{"sha":"73fee53c5012e494fc8f7b510070feff4aa894f4","filename":"core/persistence-jpa/src/test/resources/domains/MasterContent.xml","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fresources%2Fdomains%2FMasterContent.xml?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -967,8 +967,8 @@ under the License.\n         objectClassName=\"__ACCOUNT__\" resource_name=\"ws-target-resource-2\" anyTypeKind=\"USER\" anyKey=\"1\"\n         attributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n   <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"4\" name=\"CSV (update matching; assign unmatching)\" resource_name=\"resource-csv\"\n-        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" fullReconciliation=\"0\"\n-        unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\"/>\n+        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"\n+        syncMode=\"INCREMENTAL\" unmatchingRule=\"ASSIGN\" matchingRule=\"UPDATE\"/>\n   <AnyTemplateSyncTask id=\"41\" syncTask_id=\"4\" anyType_name=\"USER\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[\"csv\"],\"derAttrs\":[{\"schema\":\"cn\",\"readonly\":false,\"values\":[\"\"]}],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"relationships\":[],\"memberships\":[{\"leftType\":null,\"leftKey\":0,\"rightType\":\"GROUP\",\"rightKey\":8,\"groupName\":null}],\"dynGroups\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"type\",\"readonly\":false,\"values\":[\"email == &apos;test8@syncope.apache.org&apos;? &apos;TYPE_8&apos;: &apos;TYPE_OTHER&apos;\"]}]}'/>\n   <AnyTemplateSyncTask id=\"42\" syncTask_id=\"4\" anyType_name=\"GROUP\"\n@@ -980,7 +980,7 @@ under the License.\n         attributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n   <TaskExec id=\"6\" task_id=\"6\" status=\"SUCCESS\"/>\n   <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"7\" name=\"TestDB Task\" resource_name=\"resource-testdb\"\n-        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" fullReconciliation=\"1\"\n+        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" syncMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\"/>\n   <AnyTemplateSyncTask id=\"71\" syncTask_id=\"7\" anyType_name=\"USER\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"relationships\":[],\"memberships\":[],\"dynGroups\":[],\"roles\":[],\"dynRoles\":[],\"plainAttrs\":[{\"schema\":\"type\",\"readonly\":false,\"values\":[\"&apos;type a&apos;\"]},{\"schema\":\"userId\",\"readonly\":false,\"values\":[\"&apos;reconciled@syncope.apache.org&apos;\"]},{\"schema\":\"fullname\",\"readonly\":false,\"values\":[\"&apos;reconciled fullname&apos;\"]},{\"schema\":\"surname\",\"readonly\":false,\"values\":[\"&apos;surname&apos;\"]}]}'/>\n@@ -989,21 +989,21 @@ under the License.\n   <Task DTYPE=\"NotificationTask\" type=\"NOTIFICATION\" id=\"8\" sender=\"admin@prova.org\" subject=\"Notification for SYNCOPE-81\" \n         textBody=\"NOTIFICATION-81\" htmlBody=\"NOTIFICATION-81\" traceLevel=\"ALL\"/>\n   <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"9\" name=\"TestDB2 Task\" resource_name=\"resource-testdb2\"\n-        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" fullReconciliation=\"1\"\n+        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" syncMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\"/>\n   <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"10\" name=\"TestDB Sync Task\" resource_name=\"resource-db-sync\"\n-        destinationRealm_id=\"1\" fullReconciliation=\"1\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n+        destinationRealm_id=\"1\" syncMode=\"FULL_RECONCILIATION\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\"/>\n   <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"11\" name=\"LDAP Sync Task\" resource_name=\"resource-ldap\"\n-        destinationRealm_id=\"1\" fullReconciliation=\"1\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n+        destinationRealm_id=\"1\" syncMode=\"FULL_RECONCILIATION\" performCreate=\"1\" performDelete=\"1\" performUpdate=\"1\" syncStatus=\"0\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\"/>\n   <AnyTemplateSyncTask id=\"1\" syncTask_id=\"11\" anyType_name=\"USER\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[{\"schema\":\"virtualReadOnly\",\"readonly\":true,\"values\":[\"\"]}],\"resources\":[\"resource-ldap\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynGroups\":[],\"plainAttrs\":[]}'/>\n   <AnyTemplateSyncTask id=\"2\" syncTask_id=\"11\" anyType_name=\"GROUP\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"adynMembershipCond\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[{\"schema\":\"show\",\"readonly\":false,\"values\":[\"true\"]}]}'/>\n   <SyncTask_actionsClassNames SyncTask_id=\"11\" actionClassName=\"org.apache.syncope.core.provisioning.java.sync.LDAPMembershipSyncActions\"/>\n   <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"12\" name=\"VirAttrCache test\" resource_name=\"resource-csv\"\n-        destinationRealm_id=\"1\" performCreate=\"0\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"0\" fullReconciliation=\"1\"\n+        destinationRealm_id=\"1\" performCreate=\"0\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"0\" syncMode=\"FULL_RECONCILIATION\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\"/>\n   <Task DTYPE=\"PushTask\" type=\"PUSH\" id=\"13\" name=\"Export on resource-testdb2\" resource_name=\"resource-testdb2\"\n         performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\"         \n@@ -1062,23 +1062,23 @@ under the License.\n   <AnyFilter id=\"231\" anyType_name=\"USER\" pushTask_id=\"23\" filter=\"username==_NO_ONE_\"/>\n   <AnyFilter id=\"232\" anyType_name=\"GROUP\" pushTask_id=\"23\" filter=\"name==citizen\"/>\n   <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"24\" name=\"CSV Task (update matching; provision unmatching)\" resource_name=\"resource-csv\"\n-        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" fullReconciliation=\"0\"\n+        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" syncMode=\"INCREMENTAL\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\"/>\n   <AnyTemplateSyncTask id=\"3\" syncTask_id=\"24\" anyType_name=\"USER\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.UserTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"USER\",\"realm\":null,\"status\":null,\"password\":null,\"token\":null,\"tokenExpireTime\":null,\"username\":null,\"lastLoginDate\":null,\"changePwdDate\":null,\"failedLogins\":null,\"securityQuestion\":null,\"securityAnswer\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[\"resource-testdb\"],\"roles\":[],\"dynRoles\":[],\"relationships\":[],\"memberships\":[],\"dynGroups\":[],\"plainAttrs\":[{\"schema\":\"firstname\",\"readonly\":false,\"values\":[\"\"]},{\"schema\":\"userId\",\"readonly\":false,\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"fullname\",\"readonly\":false,\"values\":[\"&apos;test&apos;\"]},{\"schema\":\"surname\",\"readonly\":false,\"values\":[\"&apos;test&apos;\"]}]}'/>\n   <AnyTemplateSyncTask id=\"4\" syncTask_id=\"24\" anyType_name=\"GROUP\"\n                        template='{\"@class\":\"org.apache.syncope.common.lib.to.GroupTO\",\"creator\":null,\"creationDate\":null,\"lastModifier\":null,\"lastChangeDate\":null,\"key\":0,\"type\":\"GROUP\",\"realm\":null,\"status\":null,\"name\":null,\"userOwner\":null,\"groupOwner\":null,\"adynMembershipCond\":null,\"udynMembershipCond\":null,\"auxClasses\":[],\"derAttrs\":[],\"virAttrs\":[],\"resources\":[],\"plainAttrs\":[]}'/>\n   <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"25\" name=\"CSV (unlink matching; ignore unmatching)\" resource_name=\"resource-csv\"\n-        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" fullReconciliation=\"0\"\n+        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" syncMode=\"INCREMENTAL\"\n         unmatchingRule=\"IGNORE\" matchingRule=\"UNLINK\"/>\n   <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"26\" name=\"CSV (ignore matching; assign unmatching)\" resource_name=\"resource-csv\"\n-        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" fullReconciliation=\"0\"\n+        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"1\" syncMode=\"INCREMENTAL\"\n         unmatchingRule=\"ASSIGN\" matchingRule=\"IGNORE\"/>\n   <Task DTYPE=\"PropagationTask\" type=\"PROPAGATION\" id=\"27\" operation=\"CREATE\"\n         objectClassName=\"__ACCOUNT__\" resource_name=\"resource-testdb\" anyTypeKind=\"USER\" anyKey=\"1\"\n         attributes='[{\"name\":\"__PASSWORD__\",\"value\":[{\"readOnly\":false,\"disposed\":false,\"encryptedBytes\":\"m9nh2US0Sa6m+cXccCq0Xw==\",\"base64SHA1Hash\":\"GFJ69qfjxEOdrmt+9q+0Cw2uz60=\"}]},{\"name\":\"__NAME__\",\"value\":[\"userId\"],\"nameValue\":\"userId\"},{\"name\":\"fullname\",\"value\":[\"fullname\"]},{\"name\":\"type\",\"value\":[\"type\"]}]'/>\n   <Task DTYPE=\"SyncTask\" type=\"SYNCHRONIZATION\" id=\"28\" name=\"Scripted SQL\" resource_name=\"resource-db-scripted\"\n-        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"0\" fullReconciliation=\"0\"\n+        destinationRealm_id=\"1\" performCreate=\"1\" performUpdate=\"1\" performDelete=\"1\" syncStatus=\"0\" syncMode=\"INCREMENTAL\"\n         unmatchingRule=\"PROVISION\" matchingRule=\"UPDATE\"/>\n \n   <Notification id=\"1\" active=\"1\" recipientAttrName=\"email\" recipientAttrType=\"UserPlainSchema\" selfAsRecipient=\"1\" "},{"sha":"7aed2ca07f170c43eb08e6645b9213e75aea1678","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/Connector.java","status":"modified","additions":16,"deletions":1,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2FConnector.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -34,6 +34,7 @@\n import org.identityconnectors.framework.common.objects.SyncToken;\n import org.identityconnectors.framework.common.objects.Uid;\n import org.identityconnectors.framework.common.objects.filter.Filter;\n+import org.apache.syncope.core.provisioning.api.sync.ReconciliationFilterBuilder;\n \n /**\n  * Entry point for making requests on underlying connector bundles.\n@@ -103,7 +104,21 @@ void delete(\n      * @param handler to be used to handle deltas.\n      * @param options ConnId's OperationOptions.\n      */\n-    void getAllObjects(ObjectClass objectClass, SyncResultsHandler handler, OperationOptions options);\n+    void fullReconciliation(ObjectClass objectClass, SyncResultsHandler handler, OperationOptions options);\n+\n+    /**\n+     * Fetches remote objects (for use during filtered reconciliation).\n+     *\n+     * @param objectClass ConnId's object class.\n+     * @param filterBuilder reconciliation filter builder\n+     * @param handler to be used to handle deltas.\n+     * @param options ConnId's OperationOptions.\n+     */\n+    void filteredReconciliation(\n+            ObjectClass objectClass,\n+            ReconciliationFilterBuilder filterBuilder,\n+            SyncResultsHandler handler,\n+            OperationOptions options);\n \n     /**\n      * Sync remote objects from a connector instance."},{"sha":"874215b5c5dc0730c4d09c145ca1c3ecce0d009d","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/sync/ReconciliationFilterBuilder.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FReconciliationFilterBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FReconciliationFilterBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fsync%2FReconciliationFilterBuilder.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.api.sync;\n+\n+import org.identityconnectors.framework.common.objects.filter.Filter;\n+\n+/**\n+ * Interface to be implemented for performing filtered reconciliation of a\n+ * {@link org.apache.syncope.core.persistence.api.entity.task.SyncTask}.\n+ */\n+public interface ReconciliationFilterBuilder {\n+\n+    Filter build();\n+}"},{"sha":"3454985dca583f588b4348606da479e8ab662305","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ConnectorFacadeProxy.java","status":"modified","additions":16,"deletions":3,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FConnectorFacadeProxy.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -66,6 +66,7 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.util.ClassUtils;\n+import org.apache.syncope.core.provisioning.api.sync.ReconciliationFilterBuilder;\n \n public class ConnectorFacadeProxy implements Connector {\n \n@@ -332,10 +333,22 @@ public ConnectorObject getObject(final ObjectClass objectClass, final Uid uid, f\n     }\n \n     @Override\n-    public void getAllObjects(\n-            final ObjectClass objectClass, final SyncResultsHandler handler, final OperationOptions options) {\n+    public void fullReconciliation(\n+            final ObjectClass objectClass,\n+            final SyncResultsHandler handler,\n+            final OperationOptions options) {\n+\n+        filteredReconciliation(objectClass, null, handler, options);\n+    }\n+\n+    @Override\n+    public void filteredReconciliation(\n+            final ObjectClass objectClass,\n+            final ReconciliationFilterBuilder filterBuilder,\n+            final SyncResultsHandler handler,\n+            final OperationOptions options) {\n \n-        search(objectClass, null, new ResultsHandler() {\n+        search(objectClass, filterBuilder == null ? null : filterBuilder.build(), new ResultsHandler() {\n \n             @Override\n             public boolean handle(final ConnectorObject obj) {"},{"sha":"5e69ad65fe51b7706e95a64b137a8244bb9ce9fe","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/TaskDataBinderImpl.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -140,6 +140,9 @@ public boolean evaluate(final AnyFilter anyFilter) {\n             final SyncTask syncTask = (SyncTask) task;\n             final SyncTaskTO syncTaskTO = (SyncTaskTO) taskTO;\n \n+            syncTask.setSyncMode(syncTaskTO.getSyncMode());\n+            syncTask.setReconciliationFilterBuilderClassName(syncTaskTO.getReconciliationFilterBuilderClassName());\n+\n             syncTask.setDestinationRealm(realmDAO.find(syncTaskTO.getDestinationRealm()));\n \n             syncTask.setJobDelegateClassName(SyncJobDelegate.class.getName());\n@@ -175,8 +178,6 @@ public boolean evaluate(final AnyTemplate anyTemplate) {\n                     return syncTaskTO.getTemplates().containsKey(anyTemplate.getAnyType().getKey());\n                 }\n             });\n-\n-            syncTask.setFullReconciliation(syncTaskTO.isFullReconciliation());\n         }\n \n         // 3. fill the remaining fields\n@@ -289,7 +290,9 @@ public <T extends AbstractTaskTO> T getTaskTO(final Task task, final TaskUtils t\n         taskTO.setEndDate(latestExec == null ? null : latestExec.getEndDate());\n \n         for (TaskExec execution : task.getExecs()) {\n-            taskTO.getExecutions().add(getTaskExecTO(execution));\n+            if (execution != null) {\n+                taskTO.getExecutions().add(getTaskExecTO(execution));\n+            }\n         }\n \n         switch (taskUtils.getType()) {"},{"sha":"2c7592806231244d532db962f9024e222204d99c","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/DefaultReconciliationFilterBuilder.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FDefaultReconciliationFilterBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FDefaultReconciliationFilterBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FDefaultReconciliationFilterBuilder.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.java.sync;\n+\n+import static org.identityconnectors.framework.impl.api.local.operations.FilteredResultsHandler.PassThroughFilter;\n+\n+import org.identityconnectors.framework.common.objects.filter.Filter;\n+import org.apache.syncope.core.provisioning.api.sync.ReconciliationFilterBuilder;\n+\n+/**\n+ * Default (pass-through) implementation of {@link ReconciliationFilterBuilder}.\n+ */\n+public abstract class DefaultReconciliationFilterBuilder implements ReconciliationFilterBuilder {\n+\n+    private static final PassThroughFilter PASS_THROUGH = new PassThroughFilter();\n+\n+    @Override\n+    public Filter build() {\n+        return PASS_THROUGH;\n+    }\n+\n+}"},{"sha":"9045e2ab7d493afe1e8350626e8afcac8e44d502","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/DefaultSyncActions.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FDefaultSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FDefaultSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FDefaultSyncActions.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -27,7 +27,7 @@\n import org.quartz.JobExecutionException;\n \n /**\n- * Default (empty) implementation of SyncActions.\n+ * Default (empty) implementation of {@link SyncActions}.\n  */\n public abstract class DefaultSyncActions implements SyncActions {\n "},{"sha":"cf0f020f29bd566177b2881a230f78e5014da07e","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/SyncJobDelegate.java","status":"modified","additions":35,"deletions":26,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncJobDelegate.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -50,6 +50,7 @@\n import org.quartz.JobExecutionException;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.support.AbstractBeanDefinition;\n+import org.apache.syncope.core.provisioning.api.sync.ReconciliationFilterBuilder;\n \n public class SyncJobDelegate extends AbstractProvisioningJobDelegate<SyncTask> {\n \n@@ -166,11 +167,6 @@ protected String doExecuteProvisioning(\n                 }\n \n                 try {\n-                    SyncToken latestSyncToken = null;\n-                    if (!syncTask.isFullReconciliation()) {\n-                        latestSyncToken = connector.getLatestSyncToken(provision.getObjectClass());\n-                    }\n-\n                     Set<MappingItem> linkinMappingItems = new HashSet<>();\n                     for (VirSchema virSchema : virSchemaDAO.findByProvision(provision)) {\n                         linkinMappingItems.add(virSchema.asLinkingMappingItem());\n@@ -179,29 +175,42 @@ protected String doExecuteProvisioning(\n                             provision.getMapping().getItems().iterator(),\n                             linkinMappingItems.iterator());\n \n-                    if (syncTask.isFullReconciliation()) {\n-                        connector.getAllObjects(\n-                                provision.getObjectClass(),\n-                                handler,\n-                                MappingUtils.buildOperationOptions(mapItems));\n-                    } else {\n-                        connector.sync(\n-                                provision.getObjectClass(),\n-                                provision.getSyncToken(),\n-                                handler,\n-                                MappingUtils.buildOperationOptions(mapItems));\n-                    }\n-\n-                    if (!dryRun && !syncTask.isFullReconciliation()) {\n-                        try {\n-                            provision.setSyncToken(latestSyncToken);\n-                            resourceDAO.save(provision.getResource());\n-                        } catch (Exception e) {\n-                            throw new JobExecutionException(\"While updating SyncToken\", e);\n-                        }\n+                    switch (syncTask.getSyncMode()) {\n+                        case INCREMENTAL:\n+                            SyncToken latestSyncToken = connector.getLatestSyncToken(provision.getObjectClass());\n+                            connector.sync(\n+                                    provision.getObjectClass(),\n+                                    provision.getSyncToken(),\n+                                    handler,\n+                                    MappingUtils.buildOperationOptions(mapItems));\n+                            if (!dryRun) {\n+                                provision.setSyncToken(latestSyncToken);\n+                                resourceDAO.save(provision.getResource());\n+                            }\n+                            break;\n+\n+                        case FILTERED_RECONCILIATION:\n+                            ReconciliationFilterBuilder filterBuilder =\n+                                    (ReconciliationFilterBuilder) ApplicationContextProvider.getBeanFactory().\n+                                    createBean(Class.forName(syncTask.getReconciliationFilterBuilderClassName()),\n+                                            AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+                            connector.filteredReconciliation(\n+                                    provision.getObjectClass(),\n+                                    filterBuilder,\n+                                    handler,\n+                                    MappingUtils.buildOperationOptions(mapItems));\n+                            break;\n+\n+                        case FULL_RECONCILIATION:\n+                        default:\n+                            connector.fullReconciliation(\n+                                    provision.getObjectClass(),\n+                                    handler,\n+                                    MappingUtils.buildOperationOptions(mapItems));\n+                            break;\n                     }\n                 } catch (Throwable t) {\n-                    throw new JobExecutionException(\"While syncing on connector\", t);\n+                    throw new JobExecutionException(\"While syncing from connector\", t);\n                 }\n             }\n         }"},{"sha":"f6b5c2dbff0a4c9c63f6763b1fd644c30c19ab79","filename":"fit/core-reference/src/main/java/org/apache/syncope/fit/core/reference/TestReconciliationFilterBuilder.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestReconciliationFilterBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestReconciliationFilterBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FTestReconciliationFilterBuilder.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.fit.core.reference;\n+\n+import org.apache.syncope.core.provisioning.java.sync.DefaultReconciliationFilterBuilder;\n+import org.identityconnectors.framework.common.objects.AttributeBuilder;\n+import org.identityconnectors.framework.common.objects.filter.Filter;\n+import org.identityconnectors.framework.common.objects.filter.FilterBuilder;\n+\n+public class TestReconciliationFilterBuilder extends DefaultReconciliationFilterBuilder {\n+\n+    private static final Filter EQUALS = FilterBuilder.equalTo(AttributeBuilder.build(\"SURNAME\", \"Rossi\"));\n+\n+    @Override\n+    public Filter build() {\n+        return EQUALS;\n+    }\n+\n+}"},{"sha":"5aac6c02b9d100317832f304e6ffab52e7740fc3","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/MultitenancyITCase.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FMultitenancyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FMultitenancyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FMultitenancyITCase.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -49,6 +49,7 @@\n import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.common.lib.types.SyncMode;\n import org.apache.syncope.common.rest.api.service.ConnectorService;\n import org.apache.syncope.common.rest.api.service.DomainService;\n import org.apache.syncope.common.rest.api.service.LoggerService;\n@@ -186,9 +187,9 @@ public void createResourceAndSync() {\n         // create sync task\n         SyncTaskTO task = new SyncTaskTO();\n         task.setName(\"LDAP Sync Task\");\n-        task.setDestinationRealm(\"/\");\n+        task.setDestinationRealm(SyncopeConstants.ROOT_REALM);\n         task.setResource(resource.getKey());\n-        task.setFullReconciliation(true);\n+        task.setSyncMode(SyncMode.FULL_RECONCILIATION);\n         task.setPerformCreate(true);\n \n         response = adminClient.getService(TaskService.class).create(task);"},{"sha":"bf294f60ae8f5f9c948cae87260af675c37c4e0a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/PushTaskITCase.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPushTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPushTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FPushTaskITCase.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -26,7 +26,6 @@\n import static org.junit.Assert.fail;\n \n import java.util.HashSet;\n-import java.util.List;\n import java.util.Set;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.lib.SyncopeClient;\n@@ -67,7 +66,7 @@ public class PushTaskITCase extends AbstractTaskITCase {\n \n     @Test\n     public void getPushActionsClasses() {\n-        List<String> actions = syncopeService.info().getPushActions();\n+        Set<String> actions = syncopeService.info().getPushActions();\n         assertNotNull(actions);\n     }\n "},{"sha":"bed0aa4c29ec506a7c7b3c06a76f75142079175a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/ReportITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FReportITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FReportITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FReportITCase.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -27,6 +27,7 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.util.List;\n+import java.util.Set;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.Response;\n import org.apache.commons.io.IOUtils;\n@@ -53,7 +54,7 @@ private ReportTO createReport(final ReportTO report) {\n \n     @Test\n     public void getReportletClasses() {\n-        List<String> reportlets = syncopeService.info().getReportlets();\n+        Set<String> reportlets = syncopeService.info().getReportlets();\n         assertNotNull(reportlets);\n         assertFalse(reportlets.isEmpty());\n     }"},{"sha":"99be00ab0d54460c69032fc930f1f1124c92f67b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/ResourceITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FResourceITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FResourceITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FResourceITCase.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -103,7 +103,7 @@ private ResourceTO buildResourceTO(final String resourceName) {\n \n     @Test\n     public void getPropagationActionsClasses() {\n-        List<String> actions = syncopeService.info().getPropagationActions();\n+        Set<String> actions = syncopeService.info().getPropagationActions();\n         assertNotNull(actions);\n         assertFalse(actions.isEmpty());\n     }"},{"sha":"614f5d32b8b4dd651e3c035f3014ac2f70ef96a2","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/SchedTaskITCase.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSchedTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSchedTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSchedTaskITCase.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -26,6 +26,7 @@\n import static org.junit.Assert.fail;\n \n import java.util.List;\n+import java.util.Set;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.common.lib.to.AbstractTaskTO;\n@@ -47,7 +48,7 @@ public class SchedTaskITCase extends AbstractTaskITCase {\n \n     @Test\n     public void getJobClasses() {\n-        List<String> jobClasses = syncopeService.info().getTaskJobs();\n+        Set<String> jobClasses = syncopeService.info().getTaskJobs();\n         assertNotNull(jobClasses);\n         assertFalse(jobClasses.isEmpty());\n     }"},{"sha":"7d2d13b3e150aba49e8d37196688a980ee1622a7","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/reference/SyncTaskITCase.java","status":"modified","additions":90,"deletions":33,"changes":123,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b4a51a8a86905ee9e3e7395df442ab2aea2bae34/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2Freference%2FSyncTaskITCase.java?ref=b4a51a8a86905ee9e3e7395df442ab2aea2bae34","patch":"@@ -26,7 +26,6 @@\n import static org.junit.Assert.fail;\n \n import java.util.HashSet;\n-import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n import java.util.Set;\n@@ -59,9 +58,11 @@\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n+import org.apache.syncope.common.lib.types.SyncMode;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.common.rest.api.service.TaskService;\n import org.apache.syncope.core.misc.security.Encryptor;\n@@ -87,7 +88,7 @@ public static void testSyncActionsSetup() {\n \n     @Test\n     public void getSyncActionsClasses() {\n-        List<String> actions = syncopeService.info().getSyncActions();\n+        Set<String> actions = syncopeService.info().getSyncActions();\n         assertNotNull(actions);\n         assertFalse(actions.isEmpty());\n     }\n@@ -110,6 +111,7 @@ public void create() {\n         task.setName(\"Test create Sync\");\n         task.setDestinationRealm(\"/\");\n         task.setResource(RESOURCE_NAME_WS2);\n+        task.setSyncMode(SyncMode.FULL_RECONCILIATION);\n \n         UserTO userTemplate = new UserTO();\n         userTemplate.getResources().add(RESOURCE_NAME_WS2);\n@@ -249,34 +251,42 @@ public boolean evaluate(final AttrTO attributeTO) {\n     @Test\n     public void dryRun() {\n         TaskExecTO execution = execProvisioningTask(taskService, SYNC_TASK_ID, 50, true);\n-        assertEquals(\"Execution of task \" + execution.getTask() + \" failed with message \" + execution.getMessage(),\n+        assertEquals(\n+                \"Execution of task \" + execution.getTask() + \" failed with message \" + execution.getMessage(),\n                 \"SUCCESS\", execution.getStatus());\n     }\n \n     @Test\n     public void reconcileFromDB() {\n-        // update sync task\n-        TaskExecTO execution = execProvisioningTask(taskService, 7L, 50, false);\n-        assertNotNull(execution.getStatus());\n-        assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n+        UserTO userTO = null;\n+        JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n+        try {\n+            TaskExecTO execution = execProvisioningTask(taskService, 7L, 50, false);\n+            assertNotNull(execution.getStatus());\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n-        UserTO userTO = readUser(\"testuser1\");\n-        assertNotNull(userTO);\n-        assertEquals(\"reconciled@syncope.apache.org\", userTO.getPlainAttrMap().get(\"userId\").getValues().get(0));\n-        assertEquals(\"suspended\", userTO.getStatus());\n+            userTO = readUser(\"testuser1\");\n+            assertNotNull(userTO);\n+            assertEquals(\"reconciled@syncope.apache.org\", userTO.getPlainAttrMap().get(\"userId\").getValues().get(0));\n+            assertEquals(\"suspended\", userTO.getStatus());\n \n-        // enable user on external resource\n-        JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n-        jdbcTemplate.execute(\"UPDATE TEST SET STATUS=TRUE\");\n+            // enable user on external resource\n+            jdbcTemplate.execute(\"UPDATE TEST SET status=TRUE WHERE id='testuser1'\");\n \n-        // re-execute the same SyncTask: now user must be active\n-        execution = execProvisioningTask(taskService, 7L, 50, false);\n-        assertNotNull(execution.getStatus());\n-        assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n+            // re-execute the same SyncTask: now user must be active\n+            execution = execProvisioningTask(taskService, 7L, 50, false);\n+            assertNotNull(execution.getStatus());\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n \n-        userTO = readUser(\"testuser1\");\n-        assertNotNull(userTO);\n-        assertEquals(\"active\", userTO.getStatus());\n+            userTO = readUser(\"testuser1\");\n+            assertNotNull(userTO);\n+            assertEquals(\"active\", userTO.getStatus());\n+        } finally {\n+            jdbcTemplate.execute(\"UPDATE TEST SET status=FALSE WHERE id='testUser1'\");\n+            if (userTO != null) {\n+                userService.delete(userTO.getKey());\n+            }\n+        }\n     }\n \n     /**\n@@ -373,11 +383,11 @@ public void reconcileFromScriptedSQL() {\n             MappingItemTO mappingItem = CollectionUtils.find(\n                     provision.getMapping().getItems(), new Predicate<MappingItemTO>() {\n \n-                        @Override\n-                        public boolean evaluate(final MappingItemTO object) {\n-                            return \"location\".equals(object.getIntAttrName());\n-                        }\n-                    });\n+                @Override\n+                public boolean evaluate(final MappingItemTO object) {\n+                    return \"location\".equals(object.getIntAttrName());\n+                }\n+            });\n             assertNotNull(mappingItem);\n             mappingItem.getMappingItemTransformerClassNames().clear();\n             mappingItem.getMappingItemTransformerClassNames().add(PrefixMappingItemTransformer.class.getName());\n@@ -435,6 +445,54 @@ public boolean evaluate(final MappingItemTO object) {\n         }\n     }\n \n+    @Test\n+    public void filteredReconciliation() {\n+        JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n+        SyncTaskTO task = null;\n+        UserTO userTO = null;\n+        try {\n+            // 1. create 2 users on testsync\n+            jdbcTemplate.execute(\"INSERT INTO testsync VALUES (1001, 'user1', 'Doe', 'mail1@apache.org')\");\n+            jdbcTemplate.execute(\"INSERT INTO testsync VALUES (1002, 'user2', 'Rossi', 'mail2@apache.org')\");\n+\n+            // 2. create new sync task for test-db, with reconciliation filter (surname 'Rossi') \n+            task = taskService.read(10L);\n+            task.setSyncMode(SyncMode.FILTERED_RECONCILIATION);\n+            task.setReconciliationFilterBuilderClassName(TestReconciliationFilterBuilder.class.getName());\n+            Response response = taskService.create(task);\n+            task = getObject(response.getLocation(), TaskService.class, SyncTaskTO.class);\n+            assertNotNull(task);\n+            assertEquals(\n+                    TestReconciliationFilterBuilder.class.getName(),\n+                    task.getReconciliationFilterBuilderClassName());\n+\n+            // 3. exec task\n+            TaskExecTO execution = execProvisioningTask(taskService, task.getKey(), 50, false);\n+            assertNotNull(execution.getStatus());\n+            assertEquals(PropagationTaskExecStatus.SUCCESS, PropagationTaskExecStatus.valueOf(execution.getStatus()));\n+\n+            // 4. verify that only enabled user was synchronized\n+            userTO = readUser(\"user2\");\n+            assertNotNull(userTO);\n+\n+            try {\n+                readUser(\"user1\");\n+                fail();\n+            } catch (SyncopeClientException e) {\n+                assertEquals(ClientExceptionType.NotFound, e.getType());\n+            }\n+        } finally {\n+            jdbcTemplate.execute(\"DELETE FROM testsync WHERE id = 1001\");\n+            jdbcTemplate.execute(\"DELETE FROM testsync WHERE id = 1002\");\n+            if (task != null && task.getKey() != 7L) {\n+                taskService.delete(task.getKey());\n+            }\n+            if (userTO != null) {\n+                userService.delete(userTO.getKey());\n+            }\n+        }\n+    }\n+\n     @Test\n     public void issueSYNCOPE68() {\n         //-----------------------------\n@@ -542,14 +600,13 @@ public void issueSYNCOPE258() {\n         task.setDestinationRealm(SyncopeConstants.ROOT_REALM);\n         task.setName(\"Test Sync Rule\");\n         task.setResource(RESOURCE_NAME_WS2);\n-        task.setFullReconciliation(true);\n+        task.setSyncMode(SyncMode.FULL_RECONCILIATION);\n         task.setPerformCreate(true);\n         task.setPerformDelete(true);\n         task.setPerformUpdate(true);\n \n         Response response = taskService.create(task);\n-        SyncTaskTO actual = getObject(response.getLocation(), TaskService.class, SyncTaskTO.class);\n-        assertNotNull(actual);\n+        task = getObject(response.getLocation(), TaskService.class, SyncTaskTO.class);\n \n         UserTO userTO = UserITCase.getUniqueSampleTO(\"s258_1@apache.org\");\n         userTO.getResources().clear();\n@@ -570,9 +627,9 @@ public void issueSYNCOPE258() {\n \n         userService.update(userPatch);\n \n-        execProvisioningTask(taskService, actual.getKey(), 50, false);\n+        execProvisioningTask(taskService, task.getKey(), 50, false);\n \n-        SyncTaskTO executed = taskService.read(actual.getKey());\n+        SyncTaskTO executed = taskService.read(task.getKey());\n         assertEquals(1, executed.getExecutions().size());\n \n         // asser for just one match\n@@ -688,7 +745,7 @@ public void issueSYNCOPE313DB() throws Exception {\n         syncTask.setName(\"DB Sync Task\");\n         syncTask.setPerformCreate(true);\n         syncTask.setPerformUpdate(true);\n-        syncTask.setFullReconciliation(true);\n+        syncTask.setSyncMode(SyncMode.FULL_RECONCILIATION);\n         syncTask.setResource(RESOURCE_NAME_TESTDB);\n         syncTask.getActionsClassNames().add(DBPasswordSyncActions.class.getName());\n         Response taskResponse = taskService.create(syncTask);\n@@ -761,7 +818,7 @@ public void issueSYNCOPE313LDAP() throws Exception {\n         syncTask.setName(\"LDAP Sync Task\");\n         syncTask.setPerformCreate(true);\n         syncTask.setPerformUpdate(true);\n-        syncTask.setFullReconciliation(true);\n+        syncTask.setSyncMode(SyncMode.FULL_RECONCILIATION);\n         syncTask.setResource(RESOURCE_NAME_LDAP);\n         syncTask.getActionsClassNames().add(LDAPPasswordSyncActions.class.getName());\n         Response taskResponse = taskService.create(syncTask);"}]}