{"sha":"6ba3d24a7d06c5e19c1c37ab1d0aebe1e828e90b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjZiYTNkMjRhN2QwNmM1ZTE5YzFjMzdhYjFkMGFlYmUxZTgyOGU5MGI=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-06T09:56:04Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-07-06T09:56:04Z"},"message":"NullPointer fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246334 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a67ac14dc3fd66ee4b22e560d621c52ad191f746","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a67ac14dc3fd66ee4b22e560d621c52ad191f746"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/6ba3d24a7d06c5e19c1c37ab1d0aebe1e828e90b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6ba3d24a7d06c5e19c1c37ab1d0aebe1e828e90b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6ba3d24a7d06c5e19c1c37ab1d0aebe1e828e90b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6ba3d24a7d06c5e19c1c37ab1d0aebe1e828e90b/comments","author":null,"committer":null,"parents":[{"sha":"5ec815bb145306f0852c4eee33b0b68e074cafe7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5ec815bb145306f0852c4eee33b0b68e074cafe7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5ec815bb145306f0852c4eee33b0b68e074cafe7"}],"stats":{"total":30,"additions":10,"deletions":20},"files":[{"sha":"901bcf5c7142f00c28f3b3de69ec583e6dc4d77b","filename":"core/src/main/java/org/syncope/core/persistence/beans/role/RoleSchema.java","status":"modified","additions":6,"deletions":11,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6ba3d24a7d06c5e19c1c37ab1d0aebe1e828e90b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRoleSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6ba3d24a7d06c5e19c1c37ab1d0aebe1e828e90b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRoleSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Frole%2FRoleSchema.java?ref=6ba3d24a7d06c5e19c1c37ab1d0aebe1e828e90b","patch":"@@ -30,19 +30,20 @@\n public class RoleSchema extends AbstractSchema {\n \n     @OneToMany(fetch = FetchType.EAGER, mappedBy = \"schema\")\n-    Set<RoleAttribute> attributes;\n+    private Set<RoleAttribute> attributes;\n     @ManyToMany(mappedBy = \"schemas\")\n-    Set<RoleDerivedSchema> derivedSchemas;\n+    private Set<RoleDerivedSchema> derivedSchemas;\n     /**\n      * All the mappings of the attribute schema.\n      */\n     @OneToMany(cascade = CascadeType.ALL,\n     fetch = FetchType.EAGER, mappedBy = \"roleSchema\")\n-    Set<SchemaMapping> mappings;\n+    private Set<SchemaMapping> mappings;\n \n     public RoleSchema() {\n         attributes = new HashSet<RoleAttribute>();\n         derivedSchemas = new HashSet<RoleDerivedSchema>();\n+        mappings = new HashSet<SchemaMapping>();\n     }\n \n     @Override\n@@ -103,17 +104,11 @@ public void setMappings(Set<SchemaMapping> mappings) {\n \n     @Override\n     public boolean addMapping(SchemaMapping mapping) {\n-        if (this.mappings == null) {\n-            this.mappings = new HashSet<SchemaMapping>();\n-        }\n-        return this.mappings.add(mapping);\n+        return mappings.add(mapping);\n     }\n \n     @Override\n     public boolean removeMapping(SchemaMapping mapping) {\n-        if (this.mappings == null) {\n-            this.mappings = new HashSet<SchemaMapping>();\n-        }\n-        return this.mappings.remove(mapping);\n+        return mappings.remove(mapping);\n     }\n }"},{"sha":"a39a65009af1e2758607b209f92f244b252502cf","filename":"core/src/main/java/org/syncope/core/persistence/beans/user/UserSchema.java","status":"modified","additions":4,"deletions":9,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/6ba3d24a7d06c5e19c1c37ab1d0aebe1e828e90b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUserSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/6ba3d24a7d06c5e19c1c37ab1d0aebe1e828e90b/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUserSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FUserSchema.java?ref=6ba3d24a7d06c5e19c1c37ab1d0aebe1e828e90b","patch":"@@ -30,19 +30,20 @@\n public class UserSchema extends AbstractSchema {\n \n     @OneToMany(fetch = FetchType.EAGER, mappedBy = \"schema\")\n-    Set<UserAttribute> attributes;\n+    private Set<UserAttribute> attributes;\n     @ManyToMany(mappedBy = \"schemas\")\n-    Set<UserDerivedSchema> derivedSchemas;\n+    private Set<UserDerivedSchema> derivedSchemas;\n     /**\n      * All the mappings of the attribute schema.\n      */\n     @OneToMany(cascade = CascadeType.ALL,\n     fetch = FetchType.EAGER, mappedBy = \"userSchema\")\n-    Set<SchemaMapping> mappings;\n+    private Set<SchemaMapping> mappings;\n \n     public UserSchema() {\n         attributes = new HashSet<UserAttribute>();\n         derivedSchemas = new HashSet<UserDerivedSchema>();\n+        mappings = new HashSet<SchemaMapping>();\n     }\n \n     @Override\n@@ -103,17 +104,11 @@ public void setMappings(Set<SchemaMapping> mappings) {\n \n     @Override\n     public boolean addMapping(SchemaMapping mapping) {\n-        if (this.mappings == null) {\n-            this.mappings = new HashSet<SchemaMapping>();\n-        }\n         return this.mappings.add(mapping);\n     }\n \n     @Override\n     public boolean removeMapping(SchemaMapping mapping) {\n-        if (this.mappings == null) {\n-            this.mappings = new HashSet<SchemaMapping>();\n-        }\n         return this.mappings.remove(mapping);\n     }\n }"}]}