{"sha":"f4c717e7d61e20cd205741dea1aad2c920362822","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmY0YzcxN2U3ZDYxZTIwY2QyMDU3NDFkZWExYWFkMmM5MjAzNjI4MjI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-01-04T08:07:24Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-01-05T16:17:29Z"},"message":"[SYNCOPE-882] Log viewer for the admin console","tree":{"sha":"7078dd7cdac692436d1220a4a1050cbe9a7ddd7f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/7078dd7cdac692436d1220a4a1050cbe9a7ddd7f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f4c717e7d61e20cd205741dea1aad2c920362822","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f4c717e7d61e20cd205741dea1aad2c920362822","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f4c717e7d61e20cd205741dea1aad2c920362822","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f4c717e7d61e20cd205741dea1aad2c920362822/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"3684437eb97c46b6e9bacc7fd664321170d28420","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3684437eb97c46b6e9bacc7fd664321170d28420","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3684437eb97c46b6e9bacc7fd664321170d28420"}],"stats":{"total":601,"additions":545,"deletions":56},"files":[{"sha":"255145ffda33aedb217f20a27eb47893ab939601","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=f4c717e7d61e20cd205741dea1aad2c920362822","patch":"@@ -259,7 +259,7 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         });\n         body.add(new Label(\"domain\", SyncopeConsoleSession.get().getDomain()));\n-        body.add(new BookmarkablePageLink<>(\"logout\", Logout.class));\n+        body.add(new BookmarkablePageLink<Page>(\"logout\", Logout.class));\n \n         // set 'active' menu item for everything but extensions\n         // 1. check if current class is set to top-level menu"},{"sha":"c96ee1cbf6e9235649a0db122730bc1848c8a0e3","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/LogViewer.java","status":"added","additions":243,"deletions":0,"changes":243,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogViewer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogViewer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogViewer.java?ref=f4c717e7d61e20cd205741dea1aad2c920362822","patch":"@@ -0,0 +1,243 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import static org.apache.wicket.Component.ENABLE;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import org.apache.commons.collections4.list.SetUniqueList;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.panels.LogStatementPanel;\n+import org.apache.syncope.client.console.rest.LoggerRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.common.lib.log.LogStatementTO;\n+import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.Application;\n+import org.apache.wicket.ThreadContext;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.WebPage;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.util.ListModel;\n+import org.apache.wicket.protocol.ws.WebSocketSettings;\n+import org.apache.wicket.protocol.ws.api.WebSocketBehavior;\n+import org.apache.wicket.protocol.ws.api.WebSocketPushBroadcaster;\n+import org.apache.wicket.protocol.ws.api.event.WebSocketPushPayload;\n+import org.apache.wicket.protocol.ws.api.message.ConnectedMessage;\n+import org.apache.wicket.protocol.ws.api.message.IWebSocketPushMessage;\n+import org.apache.wicket.protocol.ws.api.registry.IKey;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class LogViewer extends WebPage {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(LogViewer.class);\n+\n+    private static final int MAX_STATEMENTS_PER_APPENDER = 50;\n+\n+    private static final long serialVersionUID = -7578329899052708105L;\n+\n+    private final LoggerRestClient restClient = new LoggerRestClient();\n+\n+    private final IModel<Long> lastTimeInMillis = Model.of(0L);\n+\n+    private final WebMarkupContainer stContainer;\n+\n+    private final IModel<List<LogStatementTO>> statementViewModel;\n+\n+    private final ListView<LogStatementTO> statementView;\n+\n+    public LogViewer() {\n+        final WebMarkupContainer viewer = new WebMarkupContainer(\"viewer\");\n+        viewer.setOutputMarkupId(true);\n+        add(viewer);\n+\n+        final AjaxDropDownChoicePanel<String> appenders = new AjaxDropDownChoicePanel<>(\n+                \"appenders\", \"Appender\", new Model<String>(), false);\n+        MetaDataRoleAuthorizationStrategy.authorize(appenders, ENABLE, StandardEntitlement.LOG_READ);\n+        appenders.setChoices(restClient.listMemoryAppenders());\n+        viewer.add(appenders);\n+\n+        stContainer = new WebMarkupContainer(\"stContainer\");\n+        stContainer.setOutputMarkupId(true);\n+        viewer.add(stContainer);\n+\n+        statementViewModel = new ListModel<>(new ArrayList<LogStatementTO>());\n+        statementView = new ListView<LogStatementTO>(\"statements\", statementViewModel) {\n+\n+            private static final long serialVersionUID = -9180479401817023838L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<LogStatementTO> item) {\n+                LogStatementPanel panel = new LogStatementPanel(\"statement\", item.getModelObject());\n+                panel.setOutputMarkupId(true);\n+                item.add(panel);\n+            }\n+        };\n+        statementView.setOutputMarkupId(true);\n+        stContainer.add(statementView);\n+\n+        appenders.getField().add(new AjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                List<LogStatementTO> lastStatements = appenders.getModelObject() == null\n+                        ? new ArrayList<LogStatementTO>()\n+                        : restClient.getLastLogStatements(appenders.getModelObject(), 0);\n+                statementViewModel.setObject(lastStatements);\n+                target.add(stContainer);\n+\n+                lastTimeInMillis.setObject(0L);\n+            }\n+        });\n+\n+        add(new WebSocketBehavior() {\n+\n+            private static final long serialVersionUID = 3507933905864454312L;\n+\n+            @Override\n+            protected void onConnect(final ConnectedMessage message) {\n+                super.onConnect(message);\n+\n+                SyncopeConsoleSession.get().scheduleAtFixedRate(\n+                        new LogStatementUpdater(message, restClient, appenders, lastTimeInMillis),\n+                        0, 10, TimeUnit.SECONDS);\n+            }\n+\n+        });\n+    }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+        if (event.getPayload() instanceof WebSocketPushPayload) {\n+            WebSocketPushPayload wsEvent = (WebSocketPushPayload) event.getPayload();\n+            if (wsEvent.getMessage() instanceof LogViewerMessage) {\n+                List<LogStatementTO> recentLogStatements =\n+                        ((LogViewerMessage) wsEvent.getMessage()).getRecentLogStatements();\n+\n+                if (!recentLogStatements.isEmpty()) {\n+                    // save scroll position\n+                    wsEvent.getHandler().prependJavaScript(\n+                            String.format(\"window.scrollTop = $('#%s').scrollTop();\", stContainer.getMarkupId()));\n+\n+                    int currentSize = statementView.getModelObject().size();\n+                    int recentSize = recentLogStatements.size();\n+\n+                    List<LogStatementTO> newModelObject = SetUniqueList.<LogStatementTO>setUniqueList(\n+                            new ArrayList<LogStatementTO>(MAX_STATEMENTS_PER_APPENDER));\n+                    if (currentSize <= MAX_STATEMENTS_PER_APPENDER - recentSize) {\n+                        newModelObject.addAll(statementView.getModelObject());\n+                    } else {\n+                        newModelObject.addAll(statementView.getModelObject().subList(recentSize, currentSize));\n+                    }\n+                    newModelObject.addAll(recentLogStatements);\n+\n+                    statementViewModel.setObject(newModelObject);\n+                    wsEvent.getHandler().add(LogViewer.this.stContainer);\n+\n+                    // restore scroll position - might not work perfectly if items were removed from the top\n+                    wsEvent.getHandler().appendJavaScript(\n+                            String.format(\"$('#%s').scrollTop(window.scrollTop);\", stContainer.getMarkupId()));\n+                }\n+            }\n+        }\n+    }\n+\n+    private static final class LogStatementUpdater implements Runnable {\n+\n+        private final Application application;\n+\n+        private final SyncopeConsoleSession session;\n+\n+        private final IKey key;\n+\n+        private final LoggerRestClient restClient;\n+\n+        private final AjaxDropDownChoicePanel<String> appenders;\n+\n+        private final IModel<Long> lastTimeInMillis;\n+\n+        LogStatementUpdater(\n+                final ConnectedMessage message,\n+                final LoggerRestClient restClient,\n+                final AjaxDropDownChoicePanel<String> appenders,\n+                final IModel<Long> lastTimeInMillis) {\n+\n+            this.application = message.getApplication();\n+            this.session = SyncopeConsoleSession.get();\n+            this.key = message.getKey();\n+            this.restClient = restClient;\n+            this.appenders = appenders;\n+            this.lastTimeInMillis = lastTimeInMillis;\n+        }\n+\n+        @Override\n+        public void run() {\n+            try {\n+                ThreadContext.setApplication(application);\n+                ThreadContext.setSession(session);\n+\n+                List<LogStatementTO> recentLogStatements = appenders.getModelObject() == null\n+                        ? new ArrayList<LogStatementTO>()\n+                        : restClient.getLastLogStatements(appenders.getModelObject(), lastTimeInMillis.getObject());\n+                if (!recentLogStatements.isEmpty()) {\n+                    lastTimeInMillis.setObject(recentLogStatements.get(recentLogStatements.size() - 1).getTimeMillis());\n+                }\n+\n+                WebSocketSettings settings = WebSocketSettings.Holder.get(application);\n+                WebSocketPushBroadcaster broadcaster = new WebSocketPushBroadcaster(settings.getConnectionRegistry());\n+                broadcaster.broadcast(\n+                        new ConnectedMessage(application, session.getId(), key),\n+                        new LogViewerMessage(recentLogStatements));\n+            } catch (Throwable t) {\n+                LOG.error(\"Unexpected error while checking for recent log statements\", t);\n+            } finally {\n+                ThreadContext.detach();\n+            }\n+        }\n+    }\n+\n+    private static class LogViewerMessage implements IWebSocketPushMessage, Serializable {\n+\n+        private static final long serialVersionUID = 7241149017008105769L;\n+\n+        private final List<LogStatementTO> recentLogStatements;\n+\n+        LogViewerMessage(final List<LogStatementTO> recentLogStatements) {\n+            this.recentLogStatements = recentLogStatements;\n+        }\n+\n+        public List<LogStatementTO> getRecentLogStatements() {\n+            return recentLogStatements;\n+        }\n+\n+    }\n+}"},{"sha":"fef5be55b145241f8079499213d567a943683c82","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractLogsPanel.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractLogsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractLogsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractLogsPanel.java?ref=f4c717e7d61e20cd205741dea1aad2c920362822","patch":"@@ -48,16 +48,18 @@\n \n     private static final long serialVersionUID = -6313532280206208227L;\n \n+    protected WebMarkupContainer loggerContainer;\n+\n     public AbstractLogsPanel(\n             final String id,\n             final PageReference pageRef,\n             final List<LoggerTO> loggerTOs) {\n \n         super(id);\n \n-        WebMarkupContainer container = new WebMarkupContainer(\"loggerContainer\");\n-        container.setOutputMarkupId(true);\n-        add(container);\n+        loggerContainer = new WebMarkupContainer(\"loggerContainer\");\n+        loggerContainer.setOutputMarkupId(true);\n+        add(loggerContainer);\n \n         ListViewPanel.Builder<LoggerTO> builder = new ListViewPanel.Builder<LoggerTO>(LoggerTO.class, pageRef) {\n \n@@ -104,7 +106,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 withChecks(ListViewPanel.CheckAvailability.NONE).\n                 setReuseItem(false);\n \n-        container.add(builder.build(\"logger\"));\n+        loggerContainer.add(builder.build(\"logger\"));\n     }\n \n     protected abstract void update(final LoggerTO loggerTO);"},{"sha":"1fc45a87a99a0523f8718b66480d14a99ec9b881","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/CoreLogPanel.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCoreLogPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCoreLogPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCoreLogPanel.java?ref=f4c717e7d61e20cd205741dea1aad2c920362822","patch":"@@ -19,10 +19,13 @@\n package org.apache.syncope.client.console.panels;\n \n import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.pages.LogViewer;\n import org.apache.syncope.common.lib.log.LoggerTO;\n import org.apache.syncope.common.lib.types.LoggerType;\n import org.apache.syncope.common.rest.api.service.LoggerService;\n import org.apache.wicket.PageReference;\n+import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n+import org.apache.wicket.markup.html.link.PopupSettings;\n \n public class CoreLogPanel extends AbstractLogsPanel<LoggerTO> {\n \n@@ -31,6 +34,9 @@ public class CoreLogPanel extends AbstractLogsPanel<LoggerTO> {\n     public CoreLogPanel(final String id, final PageReference pageReference) {\n         super(id, pageReference, SyncopeConsoleSession.get().getService(LoggerService.class).list(LoggerType.LOG));\n \n+        BookmarkablePageLink<Void> viewer = new BookmarkablePageLink<>(\"viewer\", LogViewer.class);\n+        viewer.setPopupSettings(new PopupSettings().setHeight(600).setWidth(800));\n+        loggerContainer.add(viewer);\n     }\n \n     @Override"},{"sha":"91e0b98446f997f1a370603ab51cb1b880ba3c0b","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ExecMessageModal.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FExecMessageModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FExecMessageModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FExecMessageModal.java?ref=f4c717e7d61e20cd205741dea1aad2c920362822","patch":"@@ -19,16 +19,20 @@\n package org.apache.syncope.client.console.panels;\n \n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.wicket.PageReference;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Panel;\n \n public class ExecMessageModal extends Panel implements ModalPanel {\n \n-    private static final long serialVersionUID = 1L;\n+    private static final long serialVersionUID = -8751533037282034918L;\n \n-    public ExecMessageModal(final PageReference pageRef, final String executionMessage) {\n-        super(BaseModal.CONTENT_ID);\n+    public ExecMessageModal(final String executionMessage) {\n+        this(BaseModal.CONTENT_ID, executionMessage);\n+    }\n+\n+    public ExecMessageModal(final String id, final String executionMessage) {\n+        super(id);\n         add(new Label(\"executionMessage\", executionMessage).setOutputMarkupId(true));\n     }\n+\n }"},{"sha":"abae16b4977b95b8d60fe84aa8c512d7a30f5f98","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/LogStatementPanel.java","status":"added","additions":93,"deletions":0,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLogStatementPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLogStatementPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLogStatementPanel.java?ref=f4c717e7d61e20cd205741dea1aad2c920362822","patch":"@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import com.googlecode.wicket.jquery.core.Options;\n+import com.googlecode.wicket.jquery.ui.JQueryUIBehavior;\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Alert;\n+import de.agilecoders.wicket.core.util.Attributes;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.time.FastDateFormat;\n+import org.apache.syncope.common.lib.log.LogStatementTO;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.Model;\n+\n+public class LogStatementPanel extends Panel {\n+\n+    private static final long serialVersionUID = 1610867968070669922L;\n+\n+    private static final FastDateFormat FORMAT = FastDateFormat.getInstance(\"yyyy-MM-dd'T'HH:mm:ss.SSS\");\n+\n+    private final String labelCssClass;\n+\n+    public LogStatementPanel(final String id, final LogStatementTO statement) {\n+        super(id);\n+\n+        Alert.Type type;\n+        switch (statement.getLevel()) {\n+            case DEBUG:\n+                type = Alert.Type.Success;\n+                break;\n+\n+            case INFO:\n+                type = Alert.Type.Info;\n+                break;\n+\n+            case ERROR:\n+                type = Alert.Type.Danger;\n+                break;\n+\n+            case WARN:\n+                type = Alert.Type.Warning;\n+                break;\n+\n+            default:\n+                type = Alert.Type.Info;\n+        }\n+        labelCssClass = \"label-\" + type.name().toLowerCase();\n+\n+        add(new Label(\"logger\", Model.of(statement.getLoggerName())));\n+        add(new Label(\"instant\", Model.of(FORMAT.format(statement.getTimeMillis()))));\n+        add(new Label(\"message\", Model.of(statement.getMessage())));\n+\n+        WebMarkupContainer collapse = new WebMarkupContainer(\"collapse\");\n+        collapse.setOutputMarkupId(true);\n+        collapse.setOutputMarkupPlaceholderTag(true);\n+        collapse.setVisible(StringUtils.isNotBlank(statement.getStackTrace()));\n+        collapse.add(new JQueryUIBehavior(\n+                \"#\" + collapse.getMarkupId(), \"accordion\", new Options(\"active\", false).set(\"collapsible\", true)));\n+        add(collapse);\n+\n+        Label stacktrace = new Label(\"stacktrace\", Model.of(statement.getStackTrace()));\n+        stacktrace.setOutputMarkupId(true);\n+        collapse.add(stacktrace);\n+    }\n+\n+    @Override\n+    protected void onComponentTag(final ComponentTag tag) {\n+        super.onComponentTag(tag);\n+\n+        checkComponentTag(tag, \"div\");\n+        Attributes.addClass(tag, labelCssClass);\n+    }\n+\n+}"},{"sha":"bc31608afa56b64c879752505fac8801b29aa4e0","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/LoggerRestClient.java","status":"modified","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FLoggerRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FLoggerRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FLoggerRestClient.java?ref=f4c717e7d61e20cd205741dea1aad2c920362822","patch":"@@ -18,13 +18,21 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n+import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.IterableUtils;\n+import org.apache.commons.collections4.Predicate;\n+import org.apache.commons.collections4.Transformer;\n+import org.apache.commons.collections4.TransformerUtils;\n import org.apache.syncope.common.lib.log.EventCategoryTO;\n+import org.apache.syncope.common.lib.log.LogAppender;\n+import org.apache.syncope.common.lib.log.LogStatementTO;\n import org.apache.syncope.common.lib.log.LoggerTO;\n import org.apache.syncope.common.lib.types.AuditLoggerName;\n import org.apache.syncope.common.lib.types.LoggerLevel;\n@@ -36,6 +44,28 @@ public class LoggerRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = 4579786978763032240L;\n \n+    public List<String> listMemoryAppenders() {\n+        return CollectionUtils.collect(getService(LoggerService.class).memoryAppenders(),\n+                new Transformer<LogAppender, String>() {\n+\n+            @Override\n+            public String transform(final LogAppender input) {\n+                return input.getName();\n+            }\n+        }, new ArrayList<String>());\n+    }\n+\n+    public List<LogStatementTO> getLastLogStatements(final String appender, final long lastStatementTime) {\n+        return CollectionUtils.collect(IterableUtils.filteredIterable(\n+                getService(LoggerService.class).getLastLogStatements(appender), new Predicate<LogStatementTO>() {\n+\n+            @Override\n+            public boolean evaluate(final LogStatementTO object) {\n+                return object.getTimeMillis() > lastStatementTime;\n+            }\n+        }), TransformerUtils.<LogStatementTO>nopTransformer(), new ArrayList<LogStatementTO>());\n+    }\n+\n     public List<LoggerTO> listLogs() {\n         return getService(LoggerService.class).list(LoggerType.LOG);\n     }"},{"sha":"30797ae61bcd60b33b027f6971e9b0c146fefcc8","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/JobActionPanel.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobActionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobActionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobActionPanel.java?ref=f4c717e7d61e20cd205741dea1aad2c920362822","patch":"@@ -57,8 +57,13 @@ public class JobActionPanel extends WizardMgtPanel<Serializable> {\n \n     private final BaseModal<Serializable> jobModal;\n \n-    public JobActionPanel(final String id, final JobTO jobTO, final JobWidget widget,\n-            final BaseModal<Serializable> jobModal, final PageReference pageRef) {\n+    public JobActionPanel(\n+            final String id,\n+            final JobTO jobTO,\n+            final JobWidget widget,\n+            final BaseModal<Serializable> jobModal,\n+            final PageReference pageRef) {\n+\n         super(id, true);\n         this.jobModal = jobModal;\n         setOutputMarkupId(true);"},{"sha":"bc9db0d9bd425ebeef2d555269203ce3b669e649","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/JobWidget.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2FJobWidget.java?ref=f4c717e7d61e20cd205741dea1aad2c920362822","patch":"@@ -280,6 +280,10 @@ protected List<IColumn<JobTO, String>> getColumns() {\n \n             columns.add(new PropertyColumn<JobTO, String>(new ResourceModel(\"refDesc\"), \"refDesc\", \"refDesc\"));\n \n+            columns.add(new BooleanPropertyColumn<JobTO>(new ResourceModel(\"scheduled\"), \"scheduled\", \"scheduled\"));\n+\n+            columns.add(new DatePropertyColumn<JobTO>(new ResourceModel(\"start\"), \"start\", \"start\"));\n+\n             columns.add(new AbstractColumn<JobTO, String>(new Model<>(\"\"), \"running\") {\n \n                 private static final long serialVersionUID = -4008579357070833846L;\n@@ -309,10 +313,6 @@ public String getCssClass() {\n \n             });\n \n-            columns.add(new BooleanPropertyColumn<JobTO>(new ResourceModel(\"scheduled\"), \"scheduled\", \"scheduled\"));\n-\n-            columns.add(new DatePropertyColumn<JobTO>(new ResourceModel(\"start\"), \"start\", \"start\"));\n-\n             return columns;\n         }\n \n@@ -412,8 +412,7 @@ public void onClick(final AjaxRequestTarget target, final ExecTO ignore) {\n                                     StringResourceModel stringResourceModel =\n                                             new StringResourceModel(\"execution.view\", JobWidget.this, model);\n                                     detailModal.header(stringResourceModel);\n-                                    detailModal.\n-                                            setContent(new ExecMessageModal(pageRef, model.getObject().getMessage()));\n+                                    detailModal.setContent(new ExecMessageModal(model.getObject().getMessage()));\n                                     detailModal.show(true);\n                                     target.add(detailModal);\n                                 }"},{"sha":"c68b2e4bb5bb9b30997dcb2db81271cb2e5fb69d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/LogViewer.html","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogViewer.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogViewer.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogViewer.html?ref=f4c717e7d61e20cd205741dea1aad2c920362822","patch":"@@ -0,0 +1,34 @@\n+<!DOCTYPE html>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <head>\n+    <title>Apache Syncope - Log Viewer</title>\n+  </head>\n+  <body>\n+    <div wicket:id=\"viewer\" style=\"padding: 5px;\">\n+      <div wicket:id=\"appenders\" style=\"margin-bottom: 10px;\"></div>\n+      <div wicket:id=\"stContainer\" style=\"overflow-y: auto; overflow-x: auto; max-width: 100vw; max-height: 85vh;\">\n+        <div wicket:id=\"statements\">\n+          <div wicket:id=\"statement\"/>\n+        </div>\n+      </div>\n+    </div>\n+  </body>\n+</html>\n\\ No newline at end of file"},{"sha":"ccf729f96afd3921e27c905f37a7deaa7927b75c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/CoreLogPanel.html","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCoreLogPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCoreLogPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCoreLogPanel.html?ref=f4c717e7d61e20cd205741dea1aad2c920362822","patch":"@@ -20,6 +20,11 @@\n   <wicket:panel>\n     <span wicket:id=\"loggerContainer\">\n       <div class=\"logs\">\n+        <div class=\"pull-right\">\n+          <button class=\"btn btn-primary\" wicket:id=\"viewer\">\n+            <span class=\"glyphicon glyphicon-list-alt\"></span> Log Viewer\n+          </button>\n+        </div>\n         <span wicket:id=\"logger\">[logger]</span>\n       </div>\n     </span>"},{"sha":"c2ec0a9c8bd904cf61ac070abc6f35258d66b42e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/LabelPanel.html","status":"modified","additions":3,"deletions":8,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLabelPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLabelPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLabelPanel.html?ref=f4c717e7d61e20cd205741dea1aad2c920362822","patch":"@@ -17,12 +17,7 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <head>\n-    <title>Label  panel</title>\n-  </head>\n-  <body>\n-    <wicket:panel>\n-      <label wicket:id=\"label\" />\n-    </wicket:panel>\n-  </body>\n+  <wicket:panel>\n+    <label wicket:id=\"label\"/>\n+  </wicket:panel>\n </html>"},{"sha":"95d49b026193c0203d7e652d4c9c566004094272","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/LogStatementPanel.html","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLogStatementPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4c717e7d61e20cd205741dea1aad2c920362822/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLogStatementPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FLogStatementPanel.html?ref=f4c717e7d61e20cd205741dea1aad2c920362822","patch":"@@ -0,0 +1,33 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:panel>\n+    <div style=\"padding: 5px; font-family: monospace;\">\n+      [<span wicket:id=\"instant\"></span>]\n+      <span wicket:id=\"logger\"></span><br/>\n+      <span wicket:id=\"message\"></span>\n+      <div wicket:id=\"collapse\">\n+        <span>+ <u>Error Details</u></span>\n+        <div>\n+          <pre wicket:id=\"stacktrace\" style=\"white-space: pre-wrap;max-width: 95vw;\"></pre>\n+        </div>\n+      </div>\n+    </div>\n+  </wicket:panel>\n+</html>"},{"sha":"7d28e1588ddcc1b57d67f64a23a80b036a262dd7","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/log/LogStatementTO.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4c717e7d61e20cd205741dea1aad2c920362822/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLogStatementTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4c717e7d61e20cd205741dea1aad2c920362822/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLogStatementTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLogStatementTO.java?ref=f4c717e7d61e20cd205741dea1aad2c920362822","patch":"@@ -18,10 +18,14 @@\n  */\n package org.apache.syncope.common.lib.log;\n \n-import java.io.Serializable;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.LoggerLevel;\n \n-public class LogStatementTO implements Serializable {\n+@XmlRootElement(name = \"logStatement\")\n+@XmlType\n+public class LogStatementTO extends AbstractBaseBean {\n \n     private static final long serialVersionUID = -2931205859104653385L;\n "},{"sha":"d8a0c6c6f45ca5cd01d846b4d2672a18ec9088d5","filename":"fit/core-reference/src/main/resources/log4j2.xml","status":"modified","additions":26,"deletions":26,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4c717e7d61e20cd205741dea1aad2c920362822/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4c717e7d61e20cd205741dea1aad2c920362822/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Flog4j2.xml?ref=f4c717e7d61e20cd205741dea1aad2c920362822","patch":"@@ -21,7 +21,7 @@ under the License.\n \n   <appenders>\n     \n-    <RollingRandomAccessFile name=\"main\" fileName=\"${log.directory}/core.log\"\n+    <RollingRandomAccessFile name=\"mainFile\" fileName=\"${log.directory}/core.log\"\n                              filePattern=\"${log.directory}/core-%d{yyyy-MM-dd}.log.gz\"\n                              immediateFlush=\"false\" append=\"true\">\n       <PatternLayout>\n@@ -32,9 +32,9 @@ under the License.\n         <SizeBasedTriggeringPolicy size=\"250 MB\"/>\n       </Policies>\n     </RollingRandomAccessFile>\n-    <Memory name=\"mainMemory\" size=\"25\"/>\n+    <Memory name=\"main\" size=\"25\"/>\n \n-    <RollingRandomAccessFile name=\"persistence\" fileName=\"${log.directory}/core-persistence.log\"\n+    <RollingRandomAccessFile name=\"persistenceFile\" fileName=\"${log.directory}/core-persistence.log\"\n                              filePattern=\"${log.directory}/core-persistence-%d{yyyy-MM-dd}.log.gz\"\n                              immediateFlush=\"false\" append=\"true\">\n       <PatternLayout>\n@@ -45,9 +45,9 @@ under the License.\n         <SizeBasedTriggeringPolicy size=\"250 MB\"/>\n       </Policies>\n     </RollingRandomAccessFile>\n-    <Memory name=\"persistenceMemory\" size=\"25\"/>\n+    <Memory name=\"persistence\" size=\"25\"/>\n \n-    <RollingRandomAccessFile name=\"rest\" fileName=\"${log.directory}/core-rest.log\"\n+    <RollingRandomAccessFile name=\"restFile\" fileName=\"${log.directory}/core-rest.log\"\n                              filePattern=\"${log.directory}/core-rest-%d{yyyy-MM-dd}.log.gz\"\n                              immediateFlush=\"false\" append=\"true\">\n       <PatternLayout>\n@@ -58,9 +58,9 @@ under the License.\n         <SizeBasedTriggeringPolicy size=\"250 MB\"/>\n       </Policies>\n     </RollingRandomAccessFile>\n-    <Memory name=\"restMemory\" size=\"25\"/>\n+    <Memory name=\"rest\" size=\"25\"/>\n \n-    <RollingRandomAccessFile name=\"connid\" fileName=\"${log.directory}/core-connid.log\"\n+    <RollingRandomAccessFile name=\"connidFile\" fileName=\"${log.directory}/core-connid.log\"\n                              filePattern=\"${log.directory}/core-connid-%d{yyyy-MM-dd}.log.gz\"\n                              immediateFlush=\"false\" append=\"true\">\n       <PatternLayout>\n@@ -71,87 +71,87 @@ under the License.\n         <SizeBasedTriggeringPolicy size=\"250 MB\"/>\n       </Policies>\n     </RollingRandomAccessFile>\n-    <Memory name=\"connidMemory\" size=\"25\"/>\n+    <Memory name=\"connid\" size=\"25\"/>\n     \n   </appenders>\n   \n   <loggers>\n     \n     <asyncLogger name=\"org.apache.syncope.core.persistence\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"persistenceFile\"/>\n       <appender-ref ref=\"persistence\"/>\n-      <appender-ref ref=\"persistenceMemory\"/>\n     </asyncLogger>\n     <asyncLogger name=\"org.springframework.orm\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"persistenceFile\"/>\n       <appender-ref ref=\"persistence\"/>\n-      <appender-ref ref=\"persistenceMemory\"/>\n     </asyncLogger>\n     \n     <asyncLogger name=\"org.apache.syncope.core.rest\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"restFile\"/>\n       <appender-ref ref=\"rest\"/>\n-      <appender-ref ref=\"restMemory\"/>\n     </asyncLogger>\n     <asyncLogger name=\"org.springframework.web\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"restFile\"/>\n       <appender-ref ref=\"rest\"/>\n-      <appender-ref ref=\"restMemory\"/>\n     </asyncLogger>\n     <asyncLogger name=\"org.apache.http\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"restFile\"/>\n       <appender-ref ref=\"rest\"/>\n-      <appender-ref ref=\"restMemory\"/>\n     </asyncLogger>\n     <asyncLogger name=\"org.apache.cxf\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"restFile\"/>\n       <appender-ref ref=\"rest\"/>\n-      <appender-ref ref=\"restMemory\"/>\n     </asyncLogger>\n     \n     <asyncLogger name=\"org.identityconnectors\" additivity=\"false\" level=\"DEBUG\">\n+      <appender-ref ref=\"connidFile\"/>\n       <appender-ref ref=\"connid\"/>\n-      <appender-ref ref=\"connidMemory\"/>\n     </asyncLogger>\n     <asyncLogger name=\"net.tirasa.connid\" additivity=\"false\" level=\"DEBUG\">\n+      <appender-ref ref=\"connidFile\"/>\n       <appender-ref ref=\"connid\"/>\n-      <appender-ref ref=\"connidMemory\"/>\n     </asyncLogger>\n     <asyncLogger name=\"org.apache.syncope.core.provisioning.api.ConnIdBundleManager\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"connidFile\"/>\n       <appender-ref ref=\"connid\"/>\n-      <appender-ref ref=\"connidMemory\"/>\n     </asyncLogger>\n     \n     <asyncLogger name=\"org.apache.syncope\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"mainFile\"/>\n       <appender-ref ref=\"main\"/>\n-      <appender-ref ref=\"mainMemory\"/>\n     </asyncLogger>\n     <asyncLogger name=\"org.apache.syncope.core.provisioning\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"mainFile\"/>\n       <appender-ref ref=\"main\"/>\n-      <appender-ref ref=\"mainMemory\"/>\n     </asyncLogger>\n     <asyncLogger name=\"org.apache.syncope.core.logic\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"mainFile\"/>\n       <appender-ref ref=\"main\"/>\n-      <appender-ref ref=\"mainMemory\"/>\n     </asyncLogger>\n     <asyncLogger name=\"org.springframework\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"mainFile\"/>\n       <appender-ref ref=\"main\"/>\n-      <appender-ref ref=\"mainMemory\"/>\n     </asyncLogger>\n     <asyncLogger name=\"org.quartz\" additivity=\"false\" level=\"INFO\">\n+      <appender-ref ref=\"mainFile\"/>\n       <appender-ref ref=\"main\"/>\n-      <appender-ref ref=\"mainMemory\"/>\n     </asyncLogger>\n     <asyncLogger name=\"org.activiti\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"mainFile\"/>\n       <appender-ref ref=\"main\"/>\n-      <appender-ref ref=\"mainMemory\"/>\n     </asyncLogger>\n     <asyncLogger name=\"org.apache.camel\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"mainFile\"/>\n       <appender-ref ref=\"main\"/>\n-      <appender-ref ref=\"mainMemory\"/>\n     </asyncLogger>\n     <asyncLogger name=\"io.swagger\" additivity=\"false\" level=\"ERROR\">\n+      <appender-ref ref=\"mainFile\"/>\n       <appender-ref ref=\"main\"/>\n-      <appender-ref ref=\"mainMemory\"/>\n     </asyncLogger>\n     \n     <root level=\"INFO\">\n+      <appender-ref ref=\"mainFile\"/>\n       <appender-ref ref=\"main\"/>\n-      <appender-ref ref=\"mainMemory\"/>\n     </root>\n     \n   </loggers>"},{"sha":"d13982082b2d28c4a782a3a80be92f6d5ef5839f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/cli/CLIITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4c717e7d61e20cd205741dea1aad2c920362822/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4c717e7d61e20cd205741dea1aad2c920362822/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcli%2FCLIITCase.java?ref=f4c717e7d61e20cd205741dea1aad2c920362822","patch":"@@ -316,7 +316,7 @@ public void lastStatements() {\n             PROCESS_BUILDER.command(getCommand(\n                     new LoggerCommand().getClass().getAnnotation(Command.class).name(),\n                     LoggerCommand.LoggerOptions.LAST_STATEMENTS.getOptionName(),\n-                    \"connidMemory\"));\n+                    \"connid\"));\n             process = PROCESS_BUILDER.start();\n             final String result = IOUtils.toString(process.getInputStream(), SyncopeConstants.DEFAULT_CHARSET);\n             assertTrue(result.contains(\"\\\"level\\\" : \\\"DEBUG\\\",\"));"},{"sha":"d5347641c19737817b89d70b85d49f565bfa0054","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/LoggerITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4c717e7d61e20cd205741dea1aad2c920362822/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLoggerITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4c717e7d61e20cd205741dea1aad2c920362822/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLoggerITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FLoggerITCase.java?ref=f4c717e7d61e20cd205741dea1aad2c920362822","patch":"@@ -66,7 +66,7 @@ public void listMemoryAppenders() {\n \n     @Test\n     public void lastStatements() {\n-        Queue<LogStatementTO> statements = loggerService.getLastLogStatements(\"connidMemory\");\n+        Queue<LogStatementTO> statements = loggerService.getLastLogStatements(\"connid\");\n         assertNotNull(statements);\n         assertFalse(statements.isEmpty());\n "},{"sha":"8a35ff051269af4f2a34f2017fd472e3764be718","filename":"ide/eclipse/bundles/org.apache.syncope.ide.eclipse.plugin/pom.xml","status":"modified","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4c717e7d61e20cd205741dea1aad2c920362822/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4c717e7d61e20cd205741dea1aad2c920362822/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ide%2Feclipse%2Fbundles%2Forg.apache.syncope.ide.eclipse.plugin%2Fpom.xml?ref=f4c717e7d61e20cd205741dea1aad2c920362822","patch":"@@ -53,7 +53,29 @@ under the License.\n \n   <build>\n     <outputDirectory>./bin</outputDirectory>\n+\n     <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-clean-plugin</artifactId>\n+        <configuration>\n+          <filesets>\n+            <fileset>\n+              <directory>bin</directory>\n+\t      <includes>\n+\t\t<include>**/*</include>\n+\t      </includes>\n+            </fileset>\n+            <fileset>\n+              <directory>lib</directory>\n+\t      <includes>\n+\t\t<include>**/*</include>\n+\t      </includes>\n+            </fileset>\n+          </filesets>\n+        </configuration>\n+      </plugin>\n+      \n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-dependency-plugin</artifactId>"},{"sha":"eb381512d4de2fb6f669a57fcdc7cd914d08145f","filename":"pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4c717e7d61e20cd205741dea1aad2c920362822/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4c717e7d61e20cd205741dea1aad2c920362822/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=f4c717e7d61e20cd205741dea1aad2c920362822","patch":"@@ -1404,6 +1404,12 @@ under the License.\n           </configuration>\n         </plugin>\n         \n+        <plugin>\n+          <groupId>org.apache.maven.plugins</groupId>\n+          <artifactId>maven-clean-plugin</artifactId>\n+          <version>3.0.0</version>\n+        </plugin>\n+        \n         <plugin>\n           <groupId>org.apache.maven.plugins</groupId>\n           <artifactId>maven-resources-plugin</artifactId>"},{"sha":"236cde995dbcd8c6dee8b2e396b700a5360327ee","filename":"src/main/asciidoc/reference-guide/workingwithapachesyncope/cli/logger.adoc","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f4c717e7d61e20cd205741dea1aad2c920362822/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Flogger.adoc","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f4c717e7d61e20cd205741dea1aad2c920362822/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Flogger.adoc","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/src%2Fmain%2Fasciidoc%2Freference-guide%2Fworkingwithapachesyncope%2Fcli%2Flogger.adoc?ref=f4c717e7d61e20cd205741dea1aad2c920362822","patch":"@@ -26,7 +26,10 @@ This command is meant for tweaking runtime logger configuration.\n Usage: logger [options]\n   Options:\n     --help \n-    --details \n+    --details\n+    --list-memory-appenders\n+    --last-statements\n+       Syntax: --last-statements {APPENDER-NAME}\n     --list \n     --read \n        Syntax: --read {LOG-NAME} {LOG-NAME} [...]\n@@ -47,6 +50,11 @@ Usage: logger [options]\n This option shows a table with some details about logger configuration.\n --list::\n Running the command with this option you will see the table of the loggers configuration.\n+--list-memory-appenders\n+Running the command with this option you will see the table of the memory appenders, whose last statements can be\n+inspected\n+--last-statements\n+The option to get the last statements available for the passed memory appender\n --read::\n The option to read all the information of specified loggers.\n --update::"}]}