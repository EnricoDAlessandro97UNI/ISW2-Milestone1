{"sha":"7a74fa1b19dd9a7b1e809aa6ddf4d432568ff074","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjdhNzRmYTFiMTlkZDlhN2IxZTgwOWFhNmRkZjRkNDMyNTY4ZmYwNzQ=","commit":{"author":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2014-06-11T16:15:42Z"},"committer":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2014-06-11T16:15:42Z"},"message":"[SYNCOPE-313] - Adding an initial way to import hashed passwords into Syncope from an LDAP backend\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1601940 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ced37951fa8a08b354b4bb0804c2c34e3a3f8b1d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ced37951fa8a08b354b4bb0804c2c34e3a3f8b1d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7a74fa1b19dd9a7b1e809aa6ddf4d432568ff074","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7a74fa1b19dd9a7b1e809aa6ddf4d432568ff074","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7a74fa1b19dd9a7b1e809aa6ddf4d432568ff074","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7a74fa1b19dd9a7b1e809aa6ddf4d432568ff074/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"c492831ef7ac5cbbc1c28584e87c10e073a76bbb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c492831ef7ac5cbbc1c28584e87c10e073a76bbb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c492831ef7ac5cbbc1c28584e87c10e073a76bbb"}],"stats":{"total":108,"additions":108,"deletions":0},"files":[{"sha":"3adc9684c7b3054d2d82529b71e69f05c4667dee","filename":"common/src/main/java/org/apache/syncope/common/types/CipherAlgorithm.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7a74fa1b19dd9a7b1e809aa6ddf4d432568ff074/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FCipherAlgorithm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7a74fa1b19dd9a7b1e809aa6ddf4d432568ff074/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FCipherAlgorithm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FCipherAlgorithm.java?ref=7a74fa1b19dd9a7b1e809aa6ddf4d432568ff074","patch":"@@ -23,11 +23,13 @@\n @XmlEnum\r\n public enum CipherAlgorithm {\r\n \r\n+    SHA(\"SHA-1\", false),\r\n     SHA1(\"SHA-1\", false),\r\n     SHA256(\"SHA-256\", false),\r\n     SHA512(\"SHA-512\", false),\r\n     AES(\"AES\", true),\r\n     SMD5(\"S-MD5\", false),\r\n+    SSHA(\"S-SHA-1\", false),\r\n     SSHA1(\"S-SHA-1\", false),\r\n     SSHA256(\"S-SHA-256\", false),\r\n     SSHA512(\"S-SHA-512\", false),\r"},{"sha":"1c83f6e8bd715deab67fdea46839ebab10521cd6","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/user/SyncopeUser.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7a74fa1b19dd9a7b1e809aa6ddf4d432568ff074/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7a74fa1b19dd9a7b1e809aa6ddf4d432568ff074/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2Fuser%2FSyncopeUser.java?ref=7a74fa1b19dd9a7b1e809aa6ddf4d432568ff074","patch":"@@ -259,6 +259,13 @@ public void removeClearPassword() {\n         clearPassword = null;\n     }\n \n+    public void setEncodedPassword(final String password, final CipherAlgorithm cipherAlgoritm, final int historySize) {\n+        // clear password\n+        this.clearPassword = null;\n+        this.password = password;\n+        this.cipherAlgorithm = cipherAlgoritm;\n+    }\n+    \n     public void setPassword(final String password, final CipherAlgorithm cipherAlgoritm, final int historySize) {\n         // clear password\n         this.clearPassword = password;"},{"sha":"53dcd43a7a15ec330b044bfab336865c7da494c1","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/LDAPPasswordSyncActions.java","status":"added","additions":99,"deletions":0,"changes":99,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7a74fa1b19dd9a7b1e809aa6ddf4d432568ff074/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPPasswordSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7a74fa1b19dd9a7b1e809aa6ddf4d432568ff074/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPPasswordSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FLDAPPasswordSyncActions.java?ref=7a74fa1b19dd9a7b1e809aa6ddf4d432568ff074","patch":"@@ -0,0 +1,99 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.sync.impl;\n+\n+import org.apache.syncope.common.to.AbstractAttributableTO;\n+import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.types.CipherAlgorithm;\n+import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n+import org.apache.syncope.core.persistence.dao.UserDAO;\n+import org.apache.syncope.core.sync.DefaultSyncActions;\n+import org.apache.syncope.core.sync.SyncResult;\n+import org.identityconnectors.framework.common.objects.SyncDelta;\n+import org.quartz.JobExecutionException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.crypto.codec.Base64;\n+import org.springframework.security.crypto.codec.Hex;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+/**\n+ * A SyncActions implementation which allows the ability to import passwords from an LDAP backend\n+ * that are hashed.\n+ */\n+public class LDAPPasswordSyncActions extends DefaultSyncActions {\n+    \n+    protected static final Logger LOG = LoggerFactory.getLogger(LDAPPasswordSyncActions.class);\n+\n+    @Autowired\n+    protected UserDAO userDAO;\n+\n+    private String encodedPassword;\n+    private CipherAlgorithm cipher;\n+\n+    @Transactional(readOnly = true)\n+    @Override\n+    public <T extends AbstractAttributableTO> SyncDelta beforeCreate(\n+            final AbstractSyncopeResultHandler<?, ?> handler,\n+            final SyncDelta delta,\n+            final T subject) throws JobExecutionException {\n+        if (subject instanceof UserTO) {\n+            String password = ((UserTO)subject).getPassword();\n+            if (password != null && password.startsWith(\"{\")) {\n+                int closingBracketIndex = password.indexOf('}');\n+                String digest = password.substring(1, password.indexOf('}'));\n+                CipherAlgorithm cipherAlgorithm = CipherAlgorithm.fromString(digest);\n+                if (cipherAlgorithm != null) {\n+                    encodedPassword = password.substring(closingBracketIndex + 1);\n+                    cipher = cipherAlgorithm;\n+                }\n+            }\n+        }\n+        \n+        return delta;\n+    }\n+    \n+    @Transactional(readOnly = true)\n+    @Override\n+    public <T extends AbstractAttributableTO> void after(\n+            final AbstractSyncopeResultHandler<?, ?> handler,\n+            final SyncDelta delta,\n+            final T subject,\n+            final SyncResult result) throws JobExecutionException {\n+\n+        if (subject instanceof UserTO && encodedPassword != null && cipher != null) {\n+            SyncopeUser syncopeUser = userDAO.find(subject.getId());\n+            if (syncopeUser != null) {\n+                byte[] encodedPasswordBytes = Base64.decode(encodedPassword.getBytes());\n+                char[] encodedHex = Hex.encode(encodedPasswordBytes);\n+                String encodedHexStr = new String(encodedHex).toUpperCase();\n+                \n+                /*UserMod userMod = new UserMod();\n+                userMod.setId(subject.getId());\n+                userMod.setPassword(encodedHexStr);\n+                uwfAdapter.update(userMod);*/\n+                syncopeUser.setEncodedPassword(encodedHexStr, cipher, 0);\n+            }\n+            encodedPassword = null;\n+            cipher = null;\n+        }\n+    }\n+    \n+}"}]}