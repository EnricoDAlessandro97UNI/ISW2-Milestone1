{"sha":"3cf1df3f94dda26e259cd89dc900800c6484afa4","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjNjZjFkZjNmOTRkZGEyNmUyNTljZDg5ZGM5MDA4MDBjNjQ4NGFmYTQ=","commit":{"author":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-11-17T16:01:51Z"},"committer":{"name":"massi","email":"massimiliano.perrone@tirasa.net","date":"2015-11-17T16:02:10Z"},"message":"Fixed SYNCOPE-728, added debug setup option. SYNCOPE-158","tree":{"sha":"2d44c6e9c9ad527da1d0180506dbd63125e2b73a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2d44c6e9c9ad527da1d0180506dbd63125e2b73a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3cf1df3f94dda26e259cd89dc900800c6484afa4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3cf1df3f94dda26e259cd89dc900800c6484afa4","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3cf1df3f94dda26e259cd89dc900800c6484afa4","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3cf1df3f94dda26e259cd89dc900800c6484afa4/comments","author":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"committer":{"login":"massx1","id":1792923,"node_id":"MDQ6VXNlcjE3OTI5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/1792923?v=4","gravatar_id":"","url":"https://api.github.com/users/massx1","html_url":"https://github.com/massx1","followers_url":"https://api.github.com/users/massx1/followers","following_url":"https://api.github.com/users/massx1/following{/other_user}","gists_url":"https://api.github.com/users/massx1/gists{/gist_id}","starred_url":"https://api.github.com/users/massx1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massx1/subscriptions","organizations_url":"https://api.github.com/users/massx1/orgs","repos_url":"https://api.github.com/users/massx1/repos","events_url":"https://api.github.com/users/massx1/events{/privacy}","received_events_url":"https://api.github.com/users/massx1/received_events","type":"User","site_admin":false},"parents":[{"sha":"bd910fbee38daf9f1477e08a7aeca1a25dd25620","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bd910fbee38daf9f1477e08a7aeca1a25dd25620","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bd910fbee38daf9f1477e08a7aeca1a25dd25620"}],"stats":{"total":400,"additions":367,"deletions":33},"files":[{"sha":"17abce8cbf46fb51b0a93231be7bba4da0d78efe","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/SyncopeAdm.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeAdm.java?ref=3cf1df3f94dda26e259cd89dc900800c6484afa4","patch":"@@ -52,9 +52,11 @@ public static void main(final String[] args) {\n             System.out.println(helpMessage());\n         } catch (final IllegalArgumentException ex) {\n             LOG.error(\"Error in main\", ex);\n-            RESULT_MANAGER.genericError(ex.getMessage());\n             if (!ex.getMessage().startsWith(\"It seems you\")) {\n+                System.out.println(\"\");\n                 System.out.println(helpMessage());\n+            } else {\n+                RESULT_MANAGER.genericError(ex.getMessage());\n             }\n         } catch (final ProcessingException e) {\n             LOG.error(\"Error in main\", e);"},{"sha":"c3e7062d1f00766be7a4a25d954542f64fcd16c6","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/SyncopeServices.java","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeServices.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeServices.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2FSyncopeServices.java?ref=3cf1df3f94dda26e259cd89dc900800c6484afa4","patch":"@@ -25,6 +25,7 @@\n import org.apache.syncope.client.cli.util.JasyptUtils;\n import org.apache.syncope.client.lib.SyncopeClient;\n import org.apache.syncope.client.lib.SyncopeClientFactoryBean;\n+import org.apache.syncope.common.rest.api.service.SyncopeService;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -57,6 +58,18 @@ public static String getAddress() {\n         return SYNCOPE_ADDRESS;\n     }\n \n+    public static void testUsernameAndPassword(final String username, final String password) {\n+        final Properties properties = new Properties();\n+        try {\n+            properties.load(new FileInputStream(InstallConfigFileTemplate.configurationFilePath()));\n+        } catch (final IOException e) {\n+            LOG.error(\"Error opening properties file\", e);\n+        }\n+        final SyncopeClient syncopeClient = new SyncopeClientFactoryBean()\n+                .setAddress(properties.getProperty(\"syncope.rest.services\")).create(username, password);\n+        syncopeClient.getService(SyncopeService.class).info();\n+    }\n+\n     private SyncopeServices() {\n         // private constructor for static utility class\n     }"},{"sha":"21a5b40c5d9547d484ad6b08bc417d366cdd1e21","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallCommand.java","status":"modified","additions":14,"deletions":3,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallCommand.java?ref=3cf1df3f94dda26e259cd89dc900800c6484afa4","patch":"@@ -36,7 +36,8 @@ public class InstallCommand extends AbstractCommand {\n     private static final String HELP_MESSAGE = \"\\nUsage: install [options]\\n\"\n             + \"  Options:\\n\"\n             + \"    --help \\n\"\n-            + \"    --setup\\n\";\n+            + \"    --setup\\n\"\n+            + \"    --setup-debug\\n\";\n \n     @Override\n     public void execute(final Input input) {\n@@ -45,7 +46,7 @@ public void execute(final Input input) {\n         }\n \n         switch (Options.fromName(input.getOption())) {\n-            case INSTALL:\n+            case SETUP:\n                 try {\n                     new InstallSetup().setup();\n                 } catch (final FileNotFoundException | IllegalAccessException ex) {\n@@ -54,6 +55,15 @@ public void execute(final Input input) {\n                     break;\n                 }\n                 break;\n+            case SETUP_DEBUG:\n+                try {\n+                    new InstallSetupForDebug().setup();\n+                } catch (final FileNotFoundException | IllegalAccessException ex) {\n+                    LOG.error(\"Error installing CLI\", ex);\n+                    installResultManager.genericError(ex.getMessage());\n+                    break;\n+                }\n+                break;\n             case HELP:\n                 System.out.println(HELP_MESSAGE);\n                 break;\n@@ -70,7 +80,8 @@ public String getHelpMessage() {\n     private enum Options {\n \n         HELP(\"--help\"),\n-        INSTALL(\"--setup\");\n+        SETUP(\"--setup\"),\n+        SETUP_DEBUG(\"--setup-debug\");\n \n         private final String optionName;\n "},{"sha":"cb3503222c0d2f607ccb8e1f5b5606ec6798728b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/install/InstallSetupForDebug.java","status":"added","additions":80,"deletions":0,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetupForDebug.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetupForDebug.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Finstall%2FInstallSetupForDebug.java?ref=3cf1df3f94dda26e259cd89dc900800c6484afa4","patch":"@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.install;\n+\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import javax.ws.rs.ProcessingException;\n+import org.apache.syncope.client.cli.SyncopeServices;\n+import org.apache.syncope.client.cli.util.FileSystemUtils;\n+import org.apache.syncope.client.cli.util.JasyptUtils;\n+import org.apache.syncope.common.rest.api.service.SyncopeService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class InstallSetupForDebug {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(InstallSetupForDebug.class);\n+\n+    private final InstallResultManager installResultManager = new InstallResultManager();\n+\n+    public void setup() throws FileNotFoundException, IllegalAccessException {\n+        installResultManager.printWelcome();\n+\n+        System.out.println(\"Path to config files of Syncope CLI client will be: \"\n+                + InstallConfigFileTemplate.dirPath());\n+\n+        if (!FileSystemUtils.exists(InstallConfigFileTemplate.dirPath())) {\n+            throw new FileNotFoundException(\"Directory: \" + InstallConfigFileTemplate.dirPath() + \" does not exists!\");\n+        }\n+\n+        if (!FileSystemUtils.canWrite(InstallConfigFileTemplate.dirPath())) {\n+            throw new IllegalAccessException(\"Permission denied on \" + InstallConfigFileTemplate.dirPath());\n+        }\n+        System.out.println(\"- File system permission checked\");\n+        System.out.println(\"\");\n+\n+        final JasyptUtils jasyptUtils = JasyptUtils.getJasyptUtils();\n+        try {\n+\n+            final String contentCliPropertiesFile = InstallConfigFileTemplate.cliPropertiesFile(\n+                    \"http\",\n+                    \"localhost\",\n+                    \"9080\",\n+                    \"/syncope/rest\",\n+                    \"admin\",\n+                    jasyptUtils.encrypt(\"password\"));\n+            FileSystemUtils.createFileWith(InstallConfigFileTemplate.configurationFilePath(), contentCliPropertiesFile);\n+        } catch (final IOException ex) {\n+            System.out.println(ex.getMessage());\n+        }\n+\n+        try {\n+            final SyncopeService syncopeService = SyncopeServices.get(SyncopeService.class);\n+            final String syncopeVersion = syncopeService.info().getVersion();\n+            installResultManager.installationSuccessful(syncopeVersion);\n+        } catch (final ProcessingException ex) {\n+            LOG.error(\"Error installing CLI\", ex);\n+            installResultManager.manageProcessingException(ex);\n+        } catch (final Exception e) {\n+            LOG.error(\"Error installing CLI\", e);\n+            installResultManager.manageException(e);\n+        }\n+    }\n+}"},{"sha":"eb53ab1b4218a2b5ea2e5a6b372f0a6e5daa4a39","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/AbstractUserCommand.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FAbstractUserCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FAbstractUserCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FAbstractUserCommand.java?ref=3cf1df3f94dda26e259cd89dc900800c6484afa4","patch":"@@ -18,8 +18,15 @@\n  */\n package org.apache.syncope.client.cli.commands.user;\n \n+import org.apache.syncope.client.cli.commands.realm.RealmSyncopeOperations;\n+import org.apache.syncope.client.cli.commands.resource.ResourceSyncopeOperations;\n+\n public abstract class AbstractUserCommand {\n \n+    protected final RealmSyncopeOperations realmSyncopeOperations = new RealmSyncopeOperations();\n+    \n+    protected final ResourceSyncopeOperations resourceSyncopeOperations = new ResourceSyncopeOperations();\n+    \n     protected final UserSyncopeOperations userSyncopeOperations = new UserSyncopeOperations();\n \n     protected final UserResultManager userResultManager = new UserResultManager();"},{"sha":"383262552c9c5796830cd94d5c6825623d73dbe3","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserCommand.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserCommand.java?ref=3cf1df3f94dda26e259cd89dc900800c6484afa4","patch":"@@ -64,6 +64,12 @@ public void execute(final Input input) {\n             case DELETE:\n                 new UserDelete(input).delete();\n                 break;\n+            case DELETE_ALL:\n+                new UserDeleteAll(input).delete();\n+                break;\n+            case DELETE_BY_ATTRIBUTE:\n+                new UserDeleteByAttribute(input).delete();\n+                break;\n             case HELP:\n                 System.out.println(getHelpMessage());\n                 break;\n@@ -88,7 +94,9 @@ private enum UserOptions {\n         SEARCH_BY_ATTRIBUTE(\"--search-by-attribute\"),\n         SEARCH_BY_ROLE(\"--search-by-role\"),\n         SEARCH_BY_RESOURCE(\"--search-by-resource\"),\n-        DELETE(\"--delete\");\n+        DELETE(\"--delete\"),\n+        DELETE_ALL(\"--delete-all\"),\n+        DELETE_BY_ATTRIBUTE(\"--delete-by-attribute\");\n \n         private final String optionName;\n "},{"sha":"2bde1769a4fa631236173817f96597964d0cc98f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserDeleteAll.java","status":"added","additions":94,"deletions":0,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDeleteAll.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDeleteAll.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDeleteAll.java?ref=3cf1df3f94dda26e259cd89dc900800c6484afa4","patch":"@@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.user;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Scanner;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class UserDeleteAll extends AbstractUserCommand {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(UserDeleteAll.class);\n+\n+    private static final String DELETE_ALL_HELP_MESSAGE = \"user --delete-all {REALM}\";\n+\n+    private final Input input;\n+\n+    public UserDeleteAll(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void delete() {\n+        if (input.parameterNumber() == 1) {\n+            try {\n+                final Scanner scanIn = new Scanner(System.in);\n+                System.out.println(\n+                        \"\\nRunning this operation you will delete all the realm users managed by Syncope, \"\n+                        + \"are you sure? [yes/no]\");\n+                final String answer = scanIn.nextLine();\n+                if (\"yes\".equalsIgnoreCase(answer)) {\n+                    System.out.println(\"\\nUsername:\");\n+                    final String username = scanIn.nextLine();\n+                    System.out.println(\"\\nPassword:\");\n+                    final String password = scanIn.nextLine();\n+                    if (userSyncopeOperations.auth(username, password)) {\n+                        System.out.println(\"Deleting process started\");\n+                        final String realm = input.firstParameter();\n+                        if (!realmSyncopeOperations.exists(realm)) {\n+                            userResultManager.notFoundError(\"Realm\", realm);\n+                            return;\n+                        }\n+                        final Map<String, BulkActionResult.Status> results = userSyncopeOperations.deleteAll(realm);\n+                        final Map<String, String> users = new HashMap<>();\n+                        int deletedUsers = 0;\n+                        for (final Map.Entry<String, BulkActionResult.Status> entrySet : results.entrySet()) {\n+                            final String userId = entrySet.getKey();\n+                            final BulkActionResult.Status status = entrySet.getValue();\n+                            if (!BulkActionResult.Status.SUCCESS.equals(status)) {\n+                                users.put(userId, status.name());\n+                            } else {\n+                                deletedUsers++;\n+                            }\n+                        }\n+                        userResultManager.genericMessage(\"Deleted users: \" + deletedUsers);\n+                        if (!users.isEmpty()) {\n+                            userResultManager.printUndeletedUsers(users);\n+                        }\n+                    } else {\n+                        userResultManager.genericError(\"Authentication error\");\n+                    }\n+                } else if (\"no\".equalsIgnoreCase(answer)) {\n+                    userResultManager.genericError(\"Delete all operation skipped\");\n+                } else {\n+                    userResultManager.genericError(\"Invalid parameter, please use [yes/no]\");\n+                }\n+            } catch (final SyncopeClientException ex) {\n+                LOG.error(\"Error deleting user\", ex);\n+                userResultManager.genericError(ex.getMessage());\n+            }\n+        } else {\n+            userResultManager.commandOptionError(DELETE_ALL_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"b559672826f5bfe53ac4e9831da90002e0fe04d5","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserDeleteByAttribute.java","status":"added","additions":84,"deletions":0,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDeleteByAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDeleteByAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserDeleteByAttribute.java?ref=3cf1df3f94dda26e259cd89dc900800c6484afa4","patch":"@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.cli.commands.user;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import javax.xml.ws.WebServiceException;\n+import org.apache.syncope.client.cli.Input;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class UserDeleteByAttribute extends AbstractUserCommand {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(UserDeleteByAttribute.class);\n+\n+    private static final String SEARCH_HELP_MESSAGE = \"user --delete-by-attribute {REALM} {ATTR-NAME}={ATTR-VALUE}\";\n+\n+    private final Input input;\n+\n+    public UserDeleteByAttribute(final Input input) {\n+        this.input = input;\n+    }\n+\n+    public void delete() {\n+        if (input.parameterNumber() == 2) {\n+            final String realm = input.firstParameter();\n+            final Input.PairParameter pairParameter = input.toPairParameter(input.secondParameter());\n+            try {\n+                if (!realmSyncopeOperations.exists(realm)) {\n+                    userResultManager.notFoundError(\"Realm\", realm);\n+                    return;\n+                }\n+                final Map<String, BulkActionResult.Status> results = userSyncopeOperations.deleteByAttribute(\n+                        realm, pairParameter.getKey(), pairParameter.getValue());\n+                final Map<String, String> users = new HashMap<>();\n+                int deletedUsers = 0;\n+                for (final Map.Entry<String, BulkActionResult.Status> entrySet : results.entrySet()) {\n+                    final String userId = entrySet.getKey();\n+                    final BulkActionResult.Status status = entrySet.getValue();\n+                    if (!BulkActionResult.Status.SUCCESS.equals(status)) {\n+                        users.put(userId, status.name());\n+                    } else {\n+                        deletedUsers++;\n+                    }\n+                }\n+                userResultManager.genericMessage(\"Deleted users: \" + deletedUsers);\n+                if (!users.isEmpty()) {\n+                    userResultManager.printUndeletedUsers(users);\n+                }\n+            } catch (final WebServiceException | SyncopeClientException ex) {\n+                LOG.error(\"Error searching user\", ex);\n+                if (ex.getMessage().startsWith(\"NotFound\")) {\n+                    userResultManager.notFoundError(\"User with \" + pairParameter.getKey(), pairParameter.getValue());\n+                } else {\n+                    userResultManager.genericError(ex.getMessage());\n+                }\n+            } catch (final IllegalArgumentException ex) {\n+                LOG.error(\"Error searching user\", ex);\n+                userResultManager.genericError(ex.getMessage());\n+                userResultManager.genericError(SEARCH_HELP_MESSAGE);\n+            }\n+        } else {\n+            userResultManager.commandOptionError(SEARCH_HELP_MESSAGE);\n+        }\n+    }\n+}"},{"sha":"42b5a2308053cff406dd6eddc687306ec263c40e","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserList.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserList.java?ref=3cf1df3f94dda26e259cd89dc900800c6484afa4","patch":"@@ -44,7 +44,7 @@ public void list() {\n             try {\n                 final Scanner scanIn = new Scanner(System.in);\n                 System.out.println(\n-                        \"This operation could be print a lot of information \"\n+                        \"\\nThis operation could be print a lot of information \"\n                         + \"on your screen. Do you want to continue? [yes/no]\");\n                 final String answer = scanIn.nextLine();\n                 if (\"yes\".equalsIgnoreCase(answer)) {"},{"sha":"ccc41dfc310f2a3d617b4a9a51a44d3e6b0d3716","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserResultManager.java","status":"modified","additions":13,"deletions":10,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserResultManager.java?ref=3cf1df3f94dda26e259cd89dc900800c6484afa4","patch":"@@ -18,12 +18,14 @@\n  */\n package org.apache.syncope.client.cli.commands.user;\n \n+import java.util.Arrays;\n+import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n import org.apache.syncope.client.cli.commands.CommonsResultManager;\n+import org.apache.syncope.client.cli.view.Table;\n import org.apache.syncope.common.lib.to.AttrTO;\n-import org.apache.syncope.common.lib.to.PropagationStatus;\n import org.apache.syncope.common.lib.to.RelationshipTO;\n import org.apache.syncope.common.lib.to.UserTO;\n \n@@ -92,20 +94,21 @@ private void printAttributes(final Set<AttrTO> derAttrTOs) {\n             System.out.println(attributeSentence);\n         }\n     }\n-\n-    private void printPropagationStatus(final List<PropagationStatus> propagationStatuses) {\n-        for (final PropagationStatus propagationStatus : propagationStatuses) {\n-            System.out.println(\"       status: \" + propagationStatus.getStatus());\n-            System.out.println(\"       resource: \" + propagationStatus.getResource());\n-            System.out.println(\"       failure reason: \" + propagationStatus.getFailureReason());\n-        }\n-    }\n-\n+    \n     private void printRelationships(final List<RelationshipTO> relationshipTOs) {\n         for (final RelationshipTO relationshipTO : relationshipTOs) {\n             System.out.println(\"       type: \" + relationshipTO.getType());\n         }\n     }\n+    \n+    public void printUndeletedUsers(final Map<String, String> users) {\n+        final Table.TableBuilder tableBuilder\n+                = new Table.TableBuilder(\"Users not deleted\").header(\"user id\").header(\"cause\");\n+        for (final Map.Entry<String, String> entrySet : users.entrySet()) {\n+            tableBuilder.rowValues(new LinkedList(Arrays.asList(entrySet.getKey(), entrySet.getValue())));\n+        }\n+        tableBuilder.build().print();\n+    }\n \n     public void printDetails(final Map<String, String> details) {\n         printDetails(\"users details\", details);"},{"sha":"95ad12795e7687ef33611ebff661d4e2b22a774b","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSearchByAttribute.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByAttribute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByAttribute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByAttribute.java?ref=3cf1df3f94dda26e259cd89dc900800c6484afa4","patch":"@@ -21,7 +21,6 @@\n import java.util.List;\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.realm.RealmSyncopeOperations;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.slf4j.Logger;\n@@ -40,15 +39,14 @@ public UserSearchByAttribute(final Input input) {\n     }\n \n     public void search() {\n-        if (input.parameterNumber() >= 2) {\n+        if (input.parameterNumber() == 2) {\n             final String realm = input.firstParameter();\n             final Input.PairParameter pairParameter = input.toPairParameter(input.secondParameter());\n-            final RealmSyncopeOperations realmSyncopeOperations = new RealmSyncopeOperations();\n             try {\n                 List<UserTO> userTOs;\n                 if (!realmSyncopeOperations.exists(realm)) {\n                     userResultManager.genericMessage(\"Operation performed on root realm because \" + realm\n-                            + \"does not exists\");\n+                            + \" does not exists\");\n                 }\n                 userTOs = userSyncopeOperations.searchByAttribute(\n                         realm, pairParameter.getKey(), pairParameter.getValue());\n@@ -70,6 +68,7 @@ public void search() {\n                 userResultManager.genericError(ex.getMessage());\n                 userResultManager.genericError(SEARCH_HELP_MESSAGE);\n             }\n+        } else {\n             userResultManager.commandOptionError(SEARCH_HELP_MESSAGE);\n         }\n     }"},{"sha":"f258bfd0b45b9b1a6411a5978880b73c20a42cf0","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSearchByResource.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByResource.java?ref=3cf1df3f94dda26e259cd89dc900800c6484afa4","patch":"@@ -21,8 +21,6 @@\n import java.util.List;\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.realm.RealmSyncopeOperations;\n-import org.apache.syncope.client.cli.commands.resource.ResourceSyncopeOperations;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.slf4j.Logger;\n@@ -44,13 +42,11 @@ public void search() {\n         if (input.parameterNumber() == 2) {\n             final String realm = input.firstParameter();\n             final String resource = input.secondParameter();\n-            final RealmSyncopeOperations realmSyncopeOperations = new RealmSyncopeOperations();\n-            final ResourceSyncopeOperations resourceSyncopeOperations = new ResourceSyncopeOperations();\n             try {\n                 List<UserTO> userTOs = null;\n                 if (!realmSyncopeOperations.exists(realm)) {\n                     userResultManager.genericMessage(\"Operation performed on root realm because \" + realm\n-                            + \"does not exists\");\n+                            + \" does not exists\");\n                 }\n                 if (!resourceSyncopeOperations.exists(resource)) {\n                     userResultManager.notFoundError(\"Resource\", resource);"},{"sha":"6a0a523744409e1d30750e77b4dd1e9a09a7236f","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSearchByRole.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByRole.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByRole.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSearchByRole.java?ref=3cf1df3f94dda26e259cd89dc900800c6484afa4","patch":"@@ -21,7 +21,6 @@\n import java.util.List;\n import javax.xml.ws.WebServiceException;\n import org.apache.syncope.client.cli.Input;\n-import org.apache.syncope.client.cli.commands.realm.RealmSyncopeOperations;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.slf4j.Logger;\n@@ -43,12 +42,11 @@ public void search() {\n         if (input.parameterNumber() == 2) {\n             final String realm = input.firstParameter();\n             final String role = input.secondParameter();\n-            final RealmSyncopeOperations realmSyncopeOperations = new RealmSyncopeOperations();\n             try {\n                 List<UserTO> userTOs;\n                 if (!realmSyncopeOperations.exists(realm)) {\n                     userResultManager.genericMessage(\"Operation performed on root realm because \"\n-                            + realm + \"does not exists\");\n+                            + realm + \" does not exists\");\n                 }\n                 userTOs = userSyncopeOperations.searchByRole(realm, input.secondParameter());\n                 if (userTOs == null || userTOs.isEmpty()) {"},{"sha":"aec9271c32c5cbfbd7d283eeb2ed8783c8f78b16","filename":"client/cli/src/main/java/org/apache/syncope/client/cli/commands/user/UserSyncopeOperations.java","status":"modified","additions":43,"deletions":4,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fcli%2Fcommands%2Fuser%2FUserSyncopeOperations.java?ref=3cf1df3f94dda26e259cd89dc900800c6484afa4","patch":"@@ -18,9 +18,13 @@\n  */\n package org.apache.syncope.client.cli.commands.user;\n \n+import java.util.Arrays;\n import java.util.List;\n+import java.util.Map;\n import org.apache.syncope.client.cli.SyncopeServices;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.common.lib.to.BulkAction;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n import org.apache.syncope.common.lib.to.PagedResult;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n@@ -31,6 +35,15 @@ public class UserSyncopeOperations {\n \n     private final UserService userService = SyncopeServices.get(UserService.class);\n \n+    public boolean auth(final String username, final String password) {\n+        try {\n+            SyncopeServices.testUsernameAndPassword(username, password);\n+            return true;\n+        } catch (final Exception e) {\n+            return false;\n+        }\n+    }\n+\n     public List<UserTO> searchByRole(final String realm, final String role) {\n         return userService.search(\n                 SyncopeClient.getAnySearchQueryBuilder().realm(realm).\n@@ -60,15 +73,41 @@ public UserTO read(final String userId) {\n         return userService.read(Long.valueOf(userId));\n     }\n \n-    public void delete(final String userId) {\n-        userService.delete(Long.valueOf(userId));\n-    }\n-\n     public String getUsernameFromId(final String userId) {\n         return userService.getUsername(Long.valueOf(userId)).getHeaderString(RESTHeaders.USERNAME);\n     }\n \n     public String getIdFromUsername(final String username) {\n         return userService.getUserKey(username).getHeaderString(RESTHeaders.USER_KEY);\n     }\n+\n+    public void delete(final String userId) {\n+        userService.delete(Long.valueOf(userId));\n+    }\n+\n+    public Map<String, BulkActionResult.Status> deleteByAttribute(\n+            final String realm, final String attributeName, final String attributeValue) {\n+        final List<UserTO> users = userService.search(\n+                SyncopeClient.getAnySearchQueryBuilder().realm(realm).\n+                fiql(SyncopeClient.getUserSearchConditionBuilder().is(attributeName).equalTo(attributeValue)\n+                        .query()).build()).getResult();\n+        return deleteBulk(users);\n+    }\n+\n+    public Map<String, BulkActionResult.Status> deleteAll(final String realm) {\n+        final AnyListQuery anyListQuery = new AnyListQuery();\n+        anyListQuery.setDetails(false);\n+        anyListQuery.setRealms(Arrays.asList(realm));\n+        return deleteBulk(userService.list(anyListQuery).getResult());\n+    }\n+\n+    private Map<String, BulkActionResult.Status> deleteBulk(final List<UserTO> users) {\n+        final BulkAction bulkAction = new BulkAction();\n+        bulkAction.setType(BulkAction.Type.DELETE);\n+        for (UserTO user : users) {\n+            bulkAction.getTargets().add(String.valueOf(user.getKey()));\n+        }\n+        final BulkActionResult bulkResult = userService.bulk(bulkAction);\n+        return bulkResult.getResults();\n+    }\n }"},{"sha":"0e0700d3b650579e99065aea9223f8ef9442c5bd","filename":"client/cli/src/main/resources/messages.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fmessages.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3cf1df3f94dda26e259cd89dc900800c6484afa4/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fmessages.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fcli%2Fsrc%2Fmain%2Fresources%2Fmessages.properties?ref=3cf1df3f94dda26e259cd89dc900800c6484afa4","patch":"@@ -30,5 +30,5 @@ resource.help.message=\\nUsage: resource [options]\\n  Options:\\n    --help \\n\n role.help.message=\\nUsage: role [options]\\n  Options:\\n    --help \\n    --details \\n    --list \\n    --read \\n       Syntax: --read {ROLE-ID} {ROLE-ID} [...]\\n    --delete \\n       Syntax: --delete {ROLE-ID} {ROLE-ID} [...]\\n\n schema.help.message=\\nUsage: schema [options]\\n  Options:\\n    --help \\n    --details \\n    --list-all\\n    --list-plain\\n    --list-derived\\n    --list-virtual\\n    --read {SCHEMA-TYPE} {SCHEMA-KEY}\\n        Schema type: PLAIN / DERIVED / VIRTUAL\\n    --delete {SCHEMA-TYPE} {SCHEMA-KEY}\\n        Schema type: PLAIN / DERIVED / VIRTUAL\\n\n task.help.message=\\nUsage: task [options]\\n  Options:\\n    --help \\n    --details\\n    --list\\n       Syntax: --list {TASK-TYPE} \\n          Task type: NOTIFICATION / PROPAGATION / PUSH / SCHEDULED / SYNCHRONIZATION\\n    --list-running-jobs \\n    --list-scheduled-jobs \\n    --read \\n       Syntax: --read {TASK-ID} {TASK-ID} [...]\\n    --read-execution \\n       Syntax: --read-execution {TASK-EXEC-ID} {TASK-EXEC-ID} [...]\\n    --delete \\n       Syntax: --delete {TASK-ID} {TASK-ID} [...]\\n    --delete-execution \\n       Syntax: --delete-execution {TASK-EXEC-ID} {TASK-EXEC-ID} [...]\\n    --execute \\n       Syntax: --execute {TASK-ID} {DRY-RUN}\\n          Dry run: true / false\\n\n-user.help.message=\\nUsage: user [options]\\n  Options:\\n    --help \\n    --list \\n    --details \\n    --get-user-key\\n       Syntax: --get-user-key {USERNAME} {USERNAME} [...]\\n    --get-username\\n       Syntax: --get-username {USER-ID} {USER-ID} [...]\\n    --read \\n       Syntax: --read {USER-ID} {USER-ID} [...]\\n    --search-by-attribute \\n       Syntax: --search-by-attribute {REALM} {ATTR-NAME}={ATTR-VALUE}\\n    --search-by-role \\n       Syntax: --search-by-role {REALM} {ROLE-ID}\\n    --search-by-resource \\n       Syntax: --search-by-resource {REALM} {RESOURCE-NAME}\\n    --delete-all\\n    --delete \\n       Syntax: --delete {USER-ID} {USER-ID} [...]\\n\n+user.help.message=\\nUsage: user [options]\\n  Options:\\n    --help \\n    --list \\n    --details \\n    --get-user-key\\n       Syntax: --get-user-key {USERNAME} {USERNAME} [...]\\n    --get-username\\n       Syntax: --get-username {USER-ID} {USER-ID} [...]\\n    --read \\n       Syntax: --read {USER-ID} {USER-ID} [...]\\n    --search-by-attribute \\n       Syntax: --search-by-attribute {REALM} {ATTR-NAME}={ATTR-VALUE}\\n    --search-by-role \\n       Syntax: --search-by-role {REALM} {ROLE-ID}\\n    --search-by-resource \\n       Syntax: --search-by-resource {REALM} {RESOURCE-NAME}\\n    --delete \\n       Syntax: --delete {USER-ID} {USER-ID} [...]\\n    --delete-all \\n       Syntax: --delete-all {REALM}\\n    --delete-by-attribute \\n       Syntax: --delete-by-attribute {REALM} {ATTR-NAME}={ATTR-VALUE}\\n\n workflow.help.message=\\nUsage: workflow [options]\\n  Options:\\n    --help \\n    --export-diagram {ANY-TYPE-KIND}\\n        Any type kind: ANY_OBJECT / USER / GROUP\\n    --export-definition {ANY-TYPE-KIND}\\n        Any type kind: ANY_OBJECT / USER / GROUP\\n"}]}