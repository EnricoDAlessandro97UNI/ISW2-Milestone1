{"sha":"bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJiMmFkNjgzYzI0ZjJhYzBmZmMzOTE1ZTZiNTZmYjVkZmM5Nzg4NWI=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-11-25T13:20:08Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-11-25T13:20:08Z"},"message":"Paginated search added to Users list and Users search\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246652 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"20b6c3d3efadcddbd8d435c1bee98f3b233cff40","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/20b6c3d3efadcddbd8d435c1bee98f3b233cff40"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b/comments","author":null,"committer":null,"parents":[{"sha":"dcfeeccd632c5330690fb459da103046f24eac90","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dcfeeccd632c5330690fb459da103046f24eac90","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dcfeeccd632c5330690fb459da103046f24eac90"}],"stats":{"total":664,"additions":469,"deletions":195},"files":[{"sha":"c606d1c4efcfd5f5b924d0377aa8b142b889d819","filename":"console/src/main/java/org/syncope/console/commons/Constants.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FConstants.java?ref=bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b","patch":"@@ -40,6 +40,9 @@ public final class Constants {\n     public static final String CONF_USERS_PAGINATOR_ROWS =\n             \"users.paginator.rows\";\n \n+    public static final String CONF_USERS_SEARCH_PAGINATOR_ROWS =\n+            \"users.paginator.search.rows\";\n+\n     public static final String CONF_RESOURCES_PAGINATOR_ROWS =\n             \"resources.paginator.rows\";\n "},{"sha":"c0c137b1461048c7e8df54493b443ed41313337d","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":335,"deletions":185,"changes":520,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b","patch":"@@ -19,8 +19,6 @@\n \n import java.util.Arrays;\n import java.util.Collections;\n-import java.util.Comparator;\n-import java.util.Iterator;\n import java.util.List;\n import java.util.StringTokenizer;\n import org.apache.wicket.Page;\n@@ -32,22 +30,14 @@\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table\n-        .AjaxFallbackDefaultDataTable;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.list.PageableListView;\n import org.apache.wicket.markup.html.panel.FeedbackPanel;\n-import org.apache.wicket.markup.repeater.Item;\n-import org.apache.wicket.model.AbstractReadOnlyModel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n@@ -57,6 +47,7 @@\n import org.syncope.client.search.AttributeCond;\n import org.syncope.client.search.MembershipCond;\n import org.syncope.client.search.NodeCond;\n+import org.syncope.client.to.AttributeTO;\n import org.syncope.client.to.ConfigurationTO;\n import org.syncope.client.to.RoleTO;\n import org.syncope.client.to.UserTO;\n@@ -68,8 +59,6 @@\n import org.syncope.console.rest.ConfigurationsRestClient;\n import org.syncope.console.rest.RolesRestClient;\n import org.syncope.console.rest.UsersRestClient;\n-import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n-import org.syncope.console.wicket.markup.html.form.EditLinkPanel;\n import org.syncope.console.wicket.markup.html.form.UpdatingCheckBox;\n import org.syncope.console.wicket.markup.html.form.UpdatingDropDownChoice;\n import org.syncope.console.wicket.markup.html.form.UpdatingTextField;\n@@ -117,6 +106,22 @@ public class Users extends BasePage {\n     List<UserTO> searchMatchedUsers;\n \n     private int paginatorRows;\n+    private int paginatorSearchRows;\n+\n+    int currentViewPage = 1;\n+    int currentSearchPage = 1;\n+\n+    AjaxLink incrementUserViewLink;\n+    AjaxLink decrementUserViewLink;\n+    Label currentPageUserViewLabel;\n+\n+    AjaxLink incrementUserSearchLink;\n+    AjaxLink decrementUserSearchLink;\n+    Label currentPageUserSearchLabel;\n+\n+    List<String> columnsList;\n+\n+    NodeCond nodeCond;\n \n     public Users(PageParameters parameters) {\n         super(parameters);\n@@ -148,37 +153,122 @@ public Users(PageParameters parameters) {\n \n            return;\n         }*/\n-        \n+\n+        //table's columnsList = attributes to view\n+        final IModel columns = new LoadableDetachableModel() {\n+\n+            protected Object load() {\n+                ConfigurationTO configuration = configurationsRestClient\n+                        .readConfiguration(\"users.attributes.view\");\n+                columnsList = new ArrayList<String>();\n+\n+                if (configuration != null && !configuration.getConfValue().equals(\"\")) {\n+                    String conf = configuration.getConfValue();\n+                    StringTokenizer st = new StringTokenizer(conf, \";\");\n+\n+                    while (st.hasMoreTokens()) {\n+                        columnsList.add(st.nextToken());\n+                    }\n+                }\n+\n+                Collections.sort(columnsList);\n+                return columnsList;\n+            }\n+        };\n+\n+       ListView columnsView = new ListView(\"usersSchema\",columns) {\n+\n+            @Override\n+            protected void populateItem(final ListItem item) {\n+                final String name =\n+                        (String) item.getDefaultModelObject();\n+\n+                item.add(new Label(\"attribute\", name));\n+            }\n+        };\n+\n+\n         paginatorRows = utility.getPaginatorRowsToDisplay(Constants\n                     .CONF_USERS_PAGINATOR_ROWS);\n \n-        List<IColumn> columns = new ArrayList<IColumn>();\n+        paginatorSearchRows = utility.getPaginatorRowsToDisplay(Constants\n+                    .CONF_USERS_SEARCH_PAGINATOR_ROWS);\n \n-        columns.add(new PropertyColumn(new Model(getString(\"id\")),\n-                \"id\", \"id\"));\n+        IModel usersModel = new LoadableDetachableModel() {\n \n-        columns.add(new PropertyColumn(new Model(getString(\"status\")),\n-                \"status\", \"status\"));\n+            @Override\n+            protected Object load() {\n \n-        columns.add(new PropertyColumn(new Model(getString(\"token\")),\n-                \"token\", \"token\"));\n+                List<UserTO> list = usersRestClient.getPaginatedUsersList(\n+                        currentViewPage, paginatorRows);\n \n-        columns = addCustomizedUserProperties(columns);\n+                List<UserTO> nextList = usersRestClient.getPaginatedUsersList(\n+                        currentViewPage + 1, paginatorRows);\n \n-        columns.add(new AbstractColumn<UserTO>(new Model<String>(\n-                getString(\"edit\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<UserTO>>\n-                    cellItem, String componentId, IModel<UserTO> model)\n-            {\n-                    final UserTO userTO = model.getObject();\n-                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n+                if(nextList.size() == 0)\n+                    incrementUserViewLink.setVisible(false);\n+                else\n+                    incrementUserViewLink.setVisible(true);\n \n-                        @Override\n+                if(currentViewPage <= 1)\n+                    decrementUserViewLink.setVisible(false);\n+                else\n+                    decrementUserViewLink.setVisible(true);\n+\n+                return list;\n+            }\n+        };\n+\n+        \n+            final PageableListView usersView = new PageableListView(\"results\",\n+                    usersModel, paginatorRows) {\n+\n+            @Override\n+            protected void populateItem(final ListItem item) {\n+\n+                final UserTO userTO = (UserTO) item.getModelObject();\n+\n+                item.add(new Label(\"id\", String.valueOf(userTO.getId())));\n+\n+                item.add(new Label(\"status\", String.valueOf(\n+                        userTO.getStatus())));\n+\n+                if (userTO.getToken() != null && !userTO.getToken().equals(\"\")) {\n+                    item.add(new Label(\"token\", getString(\"tokenValued\")));\n+                } else {\n+                    item.add(new Label(\"token\", getString(\"tokenNotValued\")));\n+                }\n+\n+                item.add(new ListView(\"selectedAttributes\", attributesToDisplay(userTO)) {\n+\n+                    @Override\n+                    protected void populateItem(ListItem item) {\n+                        AttributeWrapper attribute =\n+                                (AttributeWrapper) item.getDefaultModelObject();\n+\n+                        for(String name : columnsList){\n+\n+                             if( name.equalsIgnoreCase(attribute.getKey())) {\n+                                 item.add(new Label(\"name\",attribute.getValue()));\n+                             }\n+                             else if(!name.equalsIgnoreCase(attribute.getKey())) {\n+\n+                             }\n+\n+                        }\n+\n+                    }\n+\n+                });\n+\n+                AjaxLink editLink = new AjaxLink(\"editLink\",\n+                        new Model(getString(\"edit\"))) {\n+\n+                    @Override\n                     public void onClick(AjaxRequestTarget target) {\n+                     final UserTO userTO = (UserTO) item.getDefaultModelObject();\n \n-                        editUserWin.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n+                        editUserWin.setPageCreator(new ModalWindow.PageCreator() {\n \n                             public Page createPage() {\n                                 UserModalPage window = new UserModalPage(\n@@ -188,35 +278,26 @@ public Page createPage() {\n                         });\n \n                         editUserWin.show(target);\n-                        }};\n+                    }\n \n-                EditLinkPanel panel = new EditLinkPanel(componentId, model);\n-                panel.add(editLink);\n+                };\n \n-                cellItem.add(panel);\n-            }\n-        });\n+                item.add(editLink);\n \n-        columns.add(new AbstractColumn<UserTO>(new Model<String>\n-                (getString(\"delete\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<UserTO>>\n-                    cellItem, String componentId, IModel<UserTO> model)\n-            {\n-                    final UserTO userTO = model.getObject();\n+                item.add(new AjaxLink(\"deleteLink\", new Model(\n+                        getString(\"delete\"))) {\n \n-                    AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n-                        usersRestClient.deleteUser(String.valueOf(userTO\n-                                .getId()));\n+                        usersRestClient.deleteUser(String\n+                                .valueOf(userTO.getId()));\n \n                         info(getString(\"operation_succeded\"));\n                         target.addComponent(feedbackPanel);\n \n                         target.addComponent(container);\n                     }\n-\n+                    \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n                         return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n@@ -229,25 +310,49 @@ public CharSequence preDecorateScript(CharSequence script) {\n                             }\n                         };\n                     }\n-                };\n+                });\n+            }\n+        };\n+\n+        final WebMarkupContainer usersTableContainer = new WebMarkupContainer(\n+                \"usersTableContainer\");\n+\n+        usersTableContainer.add(usersView);\n+        usersTableContainer.setOutputMarkupId(true);\n \n-                DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n-                panel.add(deleteLink);\n+        currentPageUserViewLabel = new Label(\"currentPageLabel\",\n+                new Model<String>(String.valueOf(currentViewPage)));\n \n-                cellItem.add(panel);\n+        incrementUserViewLink = new AjaxLink(\"incrementLink\"){\n+\n+            @Override\n+            public void onClick(AjaxRequestTarget target) {\n+                currentViewPage++;\n+                currentPageUserViewLabel.setDefaultModelObject(\n+                        String.valueOf(currentViewPage));\n+                target.addComponent(usersTableContainer);\n             }\n-        });\n+        };\n+\n+       decrementUserViewLink = new AjaxLink(\"decrementLink\"){\n \n+            @Override\n+            public void onClick(AjaxRequestTarget target) {\n+                currentViewPage--;\n+                currentPageUserViewLabel.setDefaultModelObject(\n+                        String.valueOf(currentViewPage));\n+                target.addComponent(usersTableContainer);\n+            }\n+        };\n \n-        final AjaxFallbackDefaultDataTable table =\n-                new AjaxFallbackDefaultDataTable(\"datatable\", columns,\n-                new UsersProvider(), paginatorRows);\n+        //Add to container users' list navigation controls\n+        usersTableContainer.add(incrementUserViewLink);\n+        usersTableContainer.add(currentPageUserViewLabel);\n+        usersTableContainer.add(decrementUserViewLink);\n \n-        container = new WebMarkupContainer(\"container\");\n-        container.add(table);\n-        container.setOutputMarkupId(true);\n+        usersTableContainer.add(columnsView);\n \n-        add(container);\n+        add(usersTableContainer);\n \n         createUserWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         createUserWin.setInitialHeight(WIN_USER_HEIGHT);\n@@ -313,11 +418,10 @@ protected void onUpdate( AjaxRequestTarget target )\n               utility.updatePaginatorRows(Constants.CONF_USERS_PAGINATOR_ROWS,\n                       paginatorRows);\n \n-              table.setRowsPerPage(paginatorRows);\n+              usersView.setRowsPerPage(paginatorRows);\n \n-              target.addComponent(container);\n+              target.addComponent(usersTableContainer);\n             }\n-\n           });\n \n         paginatorForm.add(rowsChooser);\n@@ -344,7 +448,6 @@ public Page createPage() {\n         });\n \n         //TAB 2 - Search section start\n-        \n         final IModel userAttributes = new LoadableDetachableModel() {\n \n             protected Object load() {\n@@ -551,10 +654,45 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n \n         form.add(container);\n \n+       currentPageUserSearchLabel = new Label(\"currentSearchPage\",\n+                new Model<String>(String.valueOf(currentSearchPage)));\n+\n         IModel resultsModel = new LoadableDetachableModel() {\n \n             @Override\n             protected Object load() {\n+\n+                if(nodeCond != null) {\n+\n+                 searchMatchedUsers = usersRestClient.paginatedSearchUsers(\n+                                 nodeCond, currentSearchPage, \n+                                 paginatorSearchRows);\n+\n+                List<UserTO> nextList = usersRestClient.paginatedSearchUsers(\n+                                 nodeCond, currentSearchPage + 1, \n+                                 paginatorSearchRows);\n+\n+                if(nextList.size() == 0)\n+                    incrementUserSearchLink.setVisible(false);\n+                else\n+                    incrementUserSearchLink.setVisible(true);\n+\n+                if(currentSearchPage <= 1)\n+                    decrementUserSearchLink.setVisible(false);\n+                else\n+                    decrementUserSearchLink.setVisible(true);\n+\n+                currentPageUserSearchLabel.setVisible(true);\n+                }\n+\n+                else {\n+\n+                currentPageUserSearchLabel.setVisible(false);\n+                incrementUserSearchLink.setVisible(false);\n+                decrementUserSearchLink.setVisible(false);\n+                \n+                }\n+                \n                 return searchMatchedUsers;\n             }\n         };\n@@ -615,6 +753,33 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n         searchResultsContainer.setOutputMarkupId(true);\n         searchResultsContainer.add(resultsView);\n \n+        incrementUserSearchLink = new AjaxLink(\"incrementLink\"){\n+\n+            @Override\n+            public void onClick(AjaxRequestTarget target) {\n+                currentSearchPage++;\n+                currentPageUserSearchLabel.setDefaultModelObject(\n+                        String.valueOf(currentSearchPage));\n+                target.addComponent(searchResultsContainer);\n+            }\n+        };\n+\n+       decrementUserSearchLink = new AjaxLink(\"decrementLink\"){\n+\n+            @Override\n+            public void onClick(AjaxRequestTarget target) {\n+                currentSearchPage--;\n+                currentPageUserSearchLabel.setDefaultModelObject(\n+                        String.valueOf(currentSearchPage));\n+                target.addComponent(searchResultsContainer);\n+            }\n+        };\n+\n+        //Add to container users'search list navigation controls\n+        searchResultsContainer.add(incrementUserSearchLink);\n+        searchResultsContainer.add(currentPageUserSearchLabel);\n+        searchResultsContainer.add(decrementUserSearchLink);\n+\n         //Display warning message if no serach matches have been found\n         final Label noResults = new Label(\"noResults\",new Model<String>(\"\"));\n         noResults.setOutputMarkupId(true);\n@@ -627,14 +792,14 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n             @Override\n             protected void onSubmit(AjaxRequestTarget target, Form form) {\n \n-                NodeCond nodeCond =\n-                        buildSearchExpression(searchConditionsList);\n+                nodeCond =  buildSearchExpression(searchConditionsList);\n \n                 if (nodeCond != null) {\n \n                     try {\n-                        searchMatchedUsers =\n-                                usersRestClient.searchUsers(nodeCond);\n+                        \n+                         searchMatchedUsers =  usersRestClient.paginatedSearchUsers(\n+                                 nodeCond, currentViewPage = 1, paginatorSearchRows);\n \n                         //Clean the feedback panel if the operation succedes\n                         target.addComponent(form.get(\"feedback\"));\n@@ -661,10 +826,85 @@ protected void onError(AjaxRequestTarget target, Form form) {\n                 target.addComponent(form.get(\"feedback\"));\n             }\n         });\n-        \n-        form.add(searchResultsContainer);\n \n         add(form);\n+\n+        form.add(searchResultsContainer);\n+\n+        Form paginatorSearchForm = new Form(\"PaginatorSearchForm\");\n+\n+        final DropDownChoice rowsSearchChooser = new DropDownChoice(\"rowsSearchChooser\",\n+        new PropertyModel(this,\"paginatorSearchRows\"),utility.paginatorRowsChooser());\n+\n+        rowsChooser.add(new AjaxFormComponentUpdatingBehavior( \"onchange\" ){\n+          protected void onUpdate( AjaxRequestTarget target )\n+            {\n+              utility.updatePaginatorRows(Constants.CONF_USERS_SEARCH_PAGINATOR_ROWS,\n+                      paginatorSearchRows);\n+\n+             //sea.setRowsPerPage(paginatorSearchRows);\n+\n+              target.addComponent(searchResultsContainer);\n+            }\n+          });\n+\n+        paginatorSearchForm.add(rowsSearchChooser);\n+\n+        add(paginatorSearchForm);\n+    }\n+\n+     /**\n+     * Return the user's attributes columnsList to display, ordered\n+     * @param userTO instance\n+     * @return attributes columnsList to view depending the selection\n+     */\n+      public List<AttributeWrapper> attributesToDisplay(UserTO user) {\n+        List<AttributeTO> attributes = user.getAttributes();\n+        List<AttributeWrapper> attributesList = new ArrayList<AttributeWrapper>();\n+\n+        ConfigurationTO configuration =\n+                configurationsRestClient.readConfiguration(\"users.attributes.view\");\n+        columnsList = new ArrayList<String>();\n+\n+        if (configuration != null && !configuration.getConfValue().equals(\"\")) {\n+            String conf = configuration.getConfValue();\n+            StringTokenizer st = new StringTokenizer(conf, \";\");\n+\n+            while (st.hasMoreTokens()) {\n+                columnsList.add(st.nextToken());\n+            }\n+        }\n+\n+        Collections.sort(columnsList);\n+\n+        AttributeWrapper attributeWrapper = null;\n+\n+            boolean found = false;\n+            for (String name : columnsList) {\n+               for (AttributeTO attribute : attributes) {\n+                if (name.equals(attribute.getSchema()) && !found) {\n+                    attributeWrapper = new AttributeWrapper();\n+                    attributeWrapper.setKey(attribute.getSchema());\n+                        for(String value : attribute.getValues()){\n+                            attributeWrapper.setValue(value);\n+                         found=true;\n+                        }\n+                    attributesList.add(attributeWrapper);\n+                }\n+            }\n+               //case the attribute's value is blank\n+               if(!found){\n+               attributeWrapper = new AttributeWrapper();\n+               attributeWrapper.setKey(name);\n+               attributeWrapper.setValue(\"\");\n+\n+               attributesList.add(attributeWrapper);\n+               }\n+               else\n+               found = false;\n+        }\n+\n+        return attributesList;\n     }\n \n     /**\n@@ -824,29 +1064,29 @@ public NodeCond buildSearchExpression(\n         }\n     }\n \n-    private List<IColumn> addCustomizedUserProperties(List<IColumn> columns) {\n-        ConfigurationTO configuration =\n-                        configurationsRestClient.readConfiguration(\n-                        Constants.CONF_USERS_ATTRIBUTES_VIEW);\n-\n-                if (configuration != null\n-                        && configuration.getConfValue() != null) {\n-\n-                    String conf = configuration.getConfValue();\n-                    StringTokenizer st = new StringTokenizer(conf, \";\");\n-\n-                    String columnName = null;\n-                    \n-                    while (st.hasMoreTokens()) {\n-                        columnName = st.nextToken();\n-\n-                        columns.add(new PropertyColumn(new Model(columnName),\n-                        \"attributeMap[\"+columnName+\"]\"));\n-                    }\n-                }\n-\n-                return columns;\n-    }\n+//    private List<IColumn> addCustomizedUserProperties(List<IColumn> columns) {\n+//        ConfigurationTO configuration =\n+//                        configurationsRestClient.readConfiguration(\n+//                        Constants.CONF_USERS_ATTRIBUTES_VIEW);\n+//\n+//                if (configuration != null\n+//                        && configuration.getConfValue() != null) {\n+//\n+//                    String conf = configuration.getConfValue();\n+//                    StringTokenizer st = new StringTokenizer(conf, \";\");\n+//\n+//                    String columnName = null;\n+//\n+//                    while (st.hasMoreTokens()) {\n+//                        columnName = st.nextToken();\n+//\n+//                        columns.add(new PropertyColumn(new Model(columnName),\n+//                        \"attributeMap[\"+columnName+\"]\"));\n+//                    }\n+//                }\n+//\n+//                return columns;\n+//    }\n \n     /**\n      * Wrapper class for displaying attribute\n@@ -872,94 +1112,4 @@ public void setValue(String value) {\n             this.value = value;\n         }\n     }\n-\n-    class UsersProvider extends SortableDataProvider<UserTO> {\n-\n-        private SortableUsersProviderComparator comparator =\n-                new SortableUsersProviderComparator();\n-\n-        public UsersProvider() {\n-            //Default sorting\n-            setSort(\"id\",true);\n-        }\n-\n-        @Override\n-        public Iterator<UserTO> iterator(int first, int count) {\n-            List<UserTO> list = getUsersListDB();\n-\n-            Collections.sort(list, comparator);\n-\n-            return list.subList(first, first+count).iterator();\n-        }\n-\n-        @Override\n-        public int size() {\n-            return getUsersListDB().size();\n-        }\n-\n-        @Override\n-        public IModel<UserTO> model(final UserTO\n-                user) {\n-            return new AbstractReadOnlyModel<UserTO>() {\n-\n-                @Override\n-                public UserTO getObject() {\n-                    return user;\n-                }\n-            };\n-        }\n-\n-        public List<UserTO> getUsersListDB(){\n-        List<UserTO> list = usersRestClient.getAllUsers();\n-\n-        for(UserTO user : list) {\n-\n-            if (user.getToken() != null\n-                        && !user.getToken().equals(\"\")) {\n-                    user.setToken(getString(\"tokenValued\"));\n-                } else {\n-                    user.setToken(getString(\"tokenNotValued\"));\n-                }\n-        }\n-\n-        return list;\n-        }\n-\n-        class SortableUsersProviderComparator implements\n-                Comparator<UserTO>, Serializable {\n-            public int compare(final UserTO o1,\n-                    final UserTO o2) {\n-\n-                String expression = null;\n-\n-//                if(getSort().getProperty().contains(\"attributeMap[\"))\n-//                    expression = getSort().getProperty().substring(13,\n-//                            getSort().getProperty().length()-1);\n-//\n-//                else\n-                    expression = getSort().getProperty();\n-\n-                    PropertyModel<Comparable> model1 =\n-                            new PropertyModel<Comparable>(o1, expression);\n-                    PropertyModel<Comparable> model2 =\n-                            new PropertyModel<Comparable>(o2, expression);\n-\n-                    int result = 1;\n-\n-                    if(model1.getObject() == null && model2.getObject() == null)\n-                        result = 0;\n-                    else if(model1.getObject() == null)\n-                        result = 1;\n-                    else if(model2.getObject() == null)\n-                        result = -1;\n-                    else\n-                        result = ((Comparable)model1.getObject()).compareTo(\n-                                model2.getObject());\n-\n-                    result = getSort().isAscending() ? result : -result;\n-\n-                    return result;\n-            }\n-\t}\n-    }\n }"},{"sha":"4069d5e854fa851fda302f151dee2fa2f12dca28","filename":"console/src/main/java/org/syncope/console/rest/UsersRestClient.java","status":"modified","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUsersRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUsersRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUsersRestClient.java?ref=bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b","patch":"@@ -43,6 +43,18 @@ public List<UserTO> getAllUsers() {\n         return users;\n     }\n \n+    public List<UserTO> getPaginatedUsersList(int page,int size) {\n+        List<UserTO> users = null;\n+        try {\n+            users = Arrays.asList(restClient.getRestTemplate().getForObject(\n+                    restClient.getBaseURL() + \"user/paginatedList/{page}/{size}\",\n+                    UserTO[].class,page,size));\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            e.printStackTrace();\n+        }\n+        return users;\n+    }\n+\n     /**\n      * Create a new user and start off the workflow.\n      * @param userTO instance\n@@ -161,6 +173,23 @@ public List<UserTO> searchUsers(NodeCond nodeSearchCondition)\n         return matchedUsers;\n     }\n \n+    /**\n+     * Search an user by its schema values.\n+     * @param userTO\n+     * @return UserTOs\n+     */\n+    public List<UserTO> paginatedSearchUsers(NodeCond nodeSearchCondition,\n+            int page,int size)\n+            throws HttpServerErrorException {\n+        List<UserTO> matchedUsers = null;\n+\n+        matchedUsers = Arrays.asList(restClient.getRestTemplate().postForObject(\n+                    restClient.getBaseURL() + \"user/paginatedSearch/{page}/{size}\",\n+                    nodeSearchCondition, UserTO[].class,page,size));\n+\n+        return matchedUsers;\n+    }\n+\n     public RestClient getRestClient() {\n         return restClient;\n     }"},{"sha":"03b43c6cd393b520f2a166973b31b02c0d9e6179","filename":"console/src/main/resources/org/syncope/console/pages/Users.html","status":"modified","additions":100,"deletions":10,"changes":110,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.html?ref=bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b","patch":"@@ -104,10 +104,72 @@\n \n                 <h1><wicket:message key=\"users_title\"/></h1>\n \n-                <span wicket:id=\"container\">\n-                    <table class=\"ui-widget ui-widget-content\"\n-                           wicket:id=\"datatable\"/>\n-                </span>\n+                <span wicket:id=\"usersTableContainer\">\n+                            <table id=\"users\" class=\"ui-widget ui-widget-content\">\n+                                <thead>\n+                                    <tr>\n+                                        <td style=\"border-color:transparent\">\n+                                            <div style=\"font-style:oblique\">\n+                                                <wicket:message key=\"navigation\"/>\n+                                                <a wicket:id=\"decrementLink\">\n+                                                     &lt;\n+                                                </a>\n+\n+                                                <span wicket:id=\"currentPageLabel\"/>\n+\n+                                                <a wicket:id=\"incrementLink\">\n+                                                     &gt;\n+                                                </a>\n+                                            </div>\n+                                        </td>\n+                                    </tr>\n+                                    <tr class=\"ui-widget-header\">\n+                                        <th><wicket:message key=\"id\"/></th>\n+                                        <th><wicket:message key=\"status\"/></th>\n+                                        <th><wicket:message key=\"token\"/></th>\n+                                        <th wicket:id=\"usersSchema\">\n+                                            <span wicket:id=\"attribute\"/>\n+                                        </th>\n+                                        <th><wicket:message key=\"edit\"/></th>\n+                                        <th><wicket:message key=\"delete\"/></th>\n+                                    </tr>\n+                                </thead>\n+                                <tbody>\n+                                    <tr wicket:id=\"results\">\n+                                        <td>\n+                                            <span wicket:id=\"id\">\n+                                                [id]\n+                                            </span>\n+                                        </td>\n+                                        <td>\n+                                            <span wicket:id=\"status\">\n+                                                [status]\n+                                            </span>\n+                                        </td>\n+                                        <td>\n+                                            <span wicket:id=\"token\">\n+                                                [token]\n+                                            </span>\n+                                        </td>\n+                                        <td wicket:id=\"selectedAttributes\">\n+                                            <span wicket:id=\"name\">\n+                                                [selected attribute]\n+                                            </span>\n+                                        </td>\n+                                        <td>\n+                                            <a href=\"#\" wicket:id=\"editLink\">\n+                                                <wicket:message key=\"edit\"/>\n+                                            </a>\n+                                        </td>\n+                                        <td>\n+                                            <a href=\"#\" wicket:id=\"deleteLink\">\n+                                                <wicket:message key=\"delete\"/>\n+                                            </a>\n+                                        </td>\n+                                    </tr>\n+                                </tbody>\n+                            </table>\n+                        </span>\n \n                 <span style=\"float:right\">\n                     <form wicket:id=\"PaginatorForm\" style=\"display:inline\">\n@@ -122,11 +184,13 @@ <h1><wicket:message key=\"users_title\"/></h1>\n             <div wicket:id=\"editUserWin\">[Show modal window for editing user]</div>\n             <div wicket:id=\"changeAttributesViewWin\">[Show modal window for editing user]</div>\n \n-            <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"createUserLink\">\n+            <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+               wicket:id=\"createUserLink\">\n                 <wicket:message key=\"create_user\"/>\n             </a>\n \n-            <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"changeAttributesViewLink\">\n+            <a class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+               wicket:id=\"changeAttributesViewLink\">\n                 <wicket:message key=\"change_attributes\"/>\n             </a>\n \n@@ -190,10 +254,12 @@ <h1><wicket:message key=\"search_title\"/></h1>\n                             </tr>\n                         </tbody>\n                     </table>\n+                </div>\n \n                     <input type=\"button\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n                            wicket:id=\"search\"/>\n-\n+                    \n+                    \n                     <!-- SEARCH RESULTS -->\n                     <div class=\"ui-widget\" id=\"users-contain\">\n                         <p>\n@@ -204,6 +270,22 @@ <h1 style=\"display:inline\"><wicket:message key=\"search_results_title\"/></h1>\n                         <span wicket:id=\"searchResultsContainer\">\n                             <table id=\"users\" class=\"ui-widget ui-widget-content\">\n                                 <thead>\n+                                    <tr>\n+                                        <td style=\"border-color:transparent\">\n+                                            <div style=\"font-style:oblique\">\n+                                                <wicket:message key=\"navigation\"/>\n+                                                <a wicket:id=\"decrementLink\">\n+                                                     &lt;\n+                                                </a>\n+\n+                                                <span wicket:id=\"currentSearchPage\"/>\n+\n+                                                <a wicket:id=\"incrementLink\">\n+                                                     &gt;\n+                                                </a>\n+                                            </div>\n+                                        </td>\n+                                    </tr>\n                                     <tr class=\"ui-widget-header\">\n                                         <th><wicket:message key=\"id\"/></th>\n                                 <th><wicket:message key=\"status\"/></th>\n@@ -242,10 +324,18 @@ <h1 style=\"display:inline\"><wicket:message key=\"search_results_title\"/></h1>\n                                 </b>\n                             </span>\n                         </span>\n+                        <div>\n+                            &nbsp;\n+                        </div>\n                     </div>\n+                    </form>\n+                       <span >\n+                            <form wicket:id=\"PaginatorSearchForm\" style=\"display:inline\">\n+                                <label><wicket:message key=\"displayRows\"/></label>\n+                                <select class=\"text ui-widget-content ui-corner-all\"\n+                                        wicket:id=\"rowsSearchChooser\"/>\n+                            </form>\n+                        </span>\n                 </div>\n-            </form>\n         </div>\n-    </div>\n-\n </wicket:extend>\n\\ No newline at end of file"},{"sha":"acde03ab39e90bbd43e4a2ff91ddd98279a02e38","filename":"console/src/main/resources/org/syncope/console/pages/Users.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.properties?ref=bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b","patch":"@@ -30,3 +30,4 @@ search_filter_type=Filter value\n search_filter_name=Filter name\n search_filter_value=Filter value\n search_type_cond=Condition\n+navigation=Pages:"},{"sha":"2f4397618c183f6a97f09db921bd7d5f7ba412c2","filename":"console/src/main/resources/org/syncope/console/pages/Users_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers_it.properties?ref=bb2ad683c24f2ac0ffc3915e6b56fb5dfc97885b","patch":"@@ -29,3 +29,4 @@ search_filter_type=Filtro\n search_filter_name=Nome\n search_filter_value=Valore\n search_type_cond=Condizione\n+navigation=Pagine:"}]}