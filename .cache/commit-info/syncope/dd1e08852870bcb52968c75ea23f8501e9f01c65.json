{"sha":"dd1e08852870bcb52968c75ea23f8501e9f01c65","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRkMWUwODg1Mjg3MGJjYjUyOTY4Yzc1ZWEyM2Y4NTAxZTlmMDFjNjU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-04-02T13:07:30Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2019-04-02T13:07:30Z"},"message":"[SYNCOPE-1410] Allowing Groovy implementations for SAML2SP ext","tree":{"sha":"854669d45d5eb8bb3f9c3007b3e74779bd4a0e8c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/854669d45d5eb8bb3f9c3007b3e74779bd4a0e8c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/dd1e08852870bcb52968c75ea23f8501e9f01c65","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dd1e08852870bcb52968c75ea23f8501e9f01c65","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dd1e08852870bcb52968c75ea23f8501e9f01c65","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dd1e08852870bcb52968c75ea23f8501e9f01c65/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"289aeb35eed92e2cd5e9ce1b20af52d8a6620609","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/289aeb35eed92e2cd5e9ce1b20af52d8a6620609","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/289aeb35eed92e2cd5e9ce1b20af52d8a6620609"}],"stats":{"total":412,"additions":185,"deletions":227},"files":[{"sha":"780ec8c3f675c794a5bbb7eb0f0f5da17d0425aa","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/ImplementationTypesHolder.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FImplementationTypesHolder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FImplementationTypesHolder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FImplementationTypesHolder.java?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -50,8 +50,4 @@ public void putAll(final Map<String, String> value2Class) {\n     public Map<String, String> getValues() {\n         return Collections.unmodifiableMap(values);\n     }\n-\n-//    public String getClass(final String implementationType) {\n-//        return values.get(implementationType);\n-//    }\n }"},{"sha":"0278d89f14a01bf4b9d60a2e86bd37e271bd9371","filename":"ext/oidcclient/client-console/src/main/java/org/apache/syncope/client/console/wizards/OIDCProviderWizardBuilder.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FOIDCProviderWizardBuilder.java?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -71,7 +71,7 @@ public class OIDCProviderWizardBuilder extends AjaxWizardBuilder<OIDCProviderTO>\n \n         @Override\n         protected List<String> load() {\n-            return implRestClient.list(OIDCClientImplementationType.OP_ACTION).stream().\n+            return implRestClient.list(OIDCClientImplementationType.OP_ACTIONS).stream().\n                     map(EntityTO::getKey).sorted().collect(Collectors.toList());\n         }\n     };"},{"sha":"895c3eb00fc14e916056668bd067a26e84b016a3","filename":"ext/oidcclient/common-lib/src/main/java/org/apache/syncope/common/lib/types/OIDCClientImplementationType.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FOIDCClientImplementationType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FOIDCClientImplementationType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FOIDCClientImplementationType.java?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -23,10 +23,10 @@\n \n public final class OIDCClientImplementationType {\n \n-    public static final String OP_ACTION = \"OP_ACTION\";\n+    public static final String OP_ACTIONS = \"OP_ACTIONS\";\n \n     private static final Map<String, String> VALUES = Map.ofEntries(\n-            Pair.of(OP_ACTION, \"org.apache.syncope.core.provisioning.api.OIDCProviderActions\"));\n+            Pair.of(OP_ACTIONS, \"org.apache.syncope.core.provisioning.api.OIDCProviderActions\"));\n \n     public static Map<String, String> values() {\n         return VALUES;"},{"sha":"556ea9749744368fe2567085417da57e2852cc59","filename":"ext/oidcclient/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAOIDCProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Foidcclient%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Foidcclient%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAOIDCProvider.java?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -269,7 +269,7 @@ public void setConnObjectKeyItem(final OIDCProviderItem item) {\n     @Override\n     public boolean add(final Implementation action) {\n         checkType(action, JPAImplementation.class);\n-        checkImplementationType(action, OIDCClientImplementationType.OP_ACTION);\n+        checkImplementationType(action, OIDCClientImplementationType.OP_ACTIONS);\n         return actions.contains((JPAImplementation) action) || actions.add((JPAImplementation) action);\n     }\n "},{"sha":"b38963f36e3d15931362add8a4ab90b34ba9dbc7","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/rest/SAML2IdPsRestClient.java","status":"modified","additions":0,"deletions":9,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSAML2IdPsRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSAML2IdPsRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSAML2IdPsRestClient.java?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -20,7 +20,6 @@\n \n import java.io.InputStream;\n import java.util.List;\n-import java.util.Set;\n import javax.ws.rs.core.MediaType;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.common.lib.to.SAML2IdPTO;\n@@ -34,14 +33,6 @@ public List<SAML2IdPTO> list() {\n         return getService(SAML2IdPService.class).list();\n     }\n \n-    public Set<String> getActionsClasses() {\n-        return getService(SAML2IdPService.class).getActionsClasses();\n-    }\n-\n-    public Set<String> getRequestedAuthnContextProviderClasses() {\n-        return getService(SAML2IdPService.class).getRequestedAuthnContextProviderClasses();\n-    }\n-\n     public void importIdPs(final InputStream input) {\n         SyncopeConsoleSession.get().\n                 getService(MediaType.APPLICATION_XML_TYPE, SAML2IdPService.class).importFromMetadata(input);"},{"sha":"aca0f5e95e9b59d659d1e63408e3667b78e4bf8a","filename":"ext/saml2sp/client-console/src/main/java/org/apache/syncope/client/console/wizards/SAML2IdPWizardBuilder.java","status":"modified","additions":32,"deletions":14,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FSAML2IdPWizardBuilder.java?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -24,11 +24,13 @@\n import java.util.List;\n import java.util.concurrent.Callable;\n import java.util.concurrent.Future;\n+import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.panels.SAML2IdPsDirectoryPanel;\n+import org.apache.syncope.client.console.rest.ImplementationRestClient;\n import org.apache.syncope.client.console.rest.SAML2IdPsRestClient;\n import org.apache.syncope.client.console.wizards.resources.JEXLTransformersTogglePanel;\n import org.apache.syncope.client.console.wizards.resources.ItemTransformersTogglePanel;\n@@ -39,9 +41,11 @@\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.FieldPanel;\n import org.apache.syncope.client.ui.commons.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.ItemTO;\n import org.apache.syncope.common.lib.to.SAML2IdPTO;\n import org.apache.syncope.common.lib.types.SAML2BindingType;\n+import org.apache.syncope.common.lib.types.SAML2SPImplementationType;\n import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.wizard.WizardModel;\n@@ -61,15 +65,29 @@ public class SAML2IdPWizardBuilder extends AjaxWizardBuilder<SAML2IdPTO> {\n \n     private final SAML2IdPsRestClient restClient = new SAML2IdPsRestClient();\n \n+    private final ImplementationRestClient implRestClient = new ImplementationRestClient();\n+\n     private final SAML2IdPsDirectoryPanel directoryPanel;\n \n-    private final IModel<List<String>> actionsClasses = new LoadableDetachableModel<List<String>>() {\n+    private final IModel<List<String>> idpActions = new LoadableDetachableModel<List<String>>() {\n \n         private static final long serialVersionUID = 5275935387613157437L;\n \n         @Override\n         protected List<String> load() {\n-            return new ArrayList<>(restClient.getActionsClasses());\n+            return implRestClient.list(SAML2SPImplementationType.IDP_ACTIONS).stream().\n+                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n+        }\n+    };\n+\n+    private final IModel<List<String>> requestedAuthnContextProviders = new LoadableDetachableModel<List<String>>() {\n+\n+        private static final long serialVersionUID = 4659376149825914247L;\n+\n+        @Override\n+        protected List<String> load() {\n+            return implRestClient.list(SAML2SPImplementationType.REQUESTED_AUTHN_CONTEXT_PROVIDER).stream().\n+                    map(EntityTO::getKey).sorted().collect(Collectors.toList());\n         }\n     };\n \n@@ -159,21 +177,21 @@ private final class IdP extends WizardStep {\n             bindingType.setChoices(Arrays.asList(SAML2BindingType.values()));\n             fields.add(bindingType);\n \n-            AjaxTextFieldPanel requestedAuthnContextProviderClassName = new AjaxTextFieldPanel(\n-                    \"field\", \"requestedAuthnContextProviderClassName\",\n-                    new PropertyModel<>(idpTO, \"requestedAuthnContextProviderClassName\"));\n-            requestedAuthnContextProviderClassName.setChoices(\n-                    new ArrayList<>(restClient.getRequestedAuthnContextProviderClasses()));\n-            fields.add(requestedAuthnContextProviderClassName);\n+            AjaxTextFieldPanel requestedAuthnContextProvider = new AjaxTextFieldPanel(\n+                    \"field\", \"requestedAuthnContextProvider\",\n+                    new PropertyModel<>(idpTO, \"requestedAuthnContextProvider\"));\n+            requestedAuthnContextProvider.setChoices(\n+                    requestedAuthnContextProviders.getObject());\n+            fields.add(requestedAuthnContextProvider);\n \n-            AjaxPalettePanel<String> actionsClassNames = new AjaxPalettePanel.Builder<String>().\n+            AjaxPalettePanel<String> actions = new AjaxPalettePanel.Builder<String>().\n                     setAllowMoveAll(true).setAllowOrder(true).\n-                    setName(new StringResourceModel(\"actionsClassNames\", directoryPanel).getString()).\n+                    setName(new StringResourceModel(\"actions\", directoryPanel).getString()).\n                     build(\"field\",\n-                            new PropertyModel<>(idpTO, \"actionsClassNames\"),\n-                            new ListModel<>(actionsClasses.getObject()));\n-            actionsClassNames.setOutputMarkupId(true);\n-            fields.add(actionsClassNames);\n+                            new PropertyModel<>(idpTO, \"actions\"),\n+                            new ListModel<>(idpActions.getObject()));\n+            actions.setOutputMarkupId(true);\n+            fields.add(actions);\n \n             add(new ListView<Component>(\"fields\", fields) {\n "},{"sha":"79aee53c437e442d8fd9cca9b49f9b6a48107159","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel.properties?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -24,7 +24,7 @@ bindingType=Binding\n html.title=metadata\n createUnmatching=Create unmatching users\n updateMatching=Update matching users\n-actionsClassNames=Actions\n+actions=Actions\n template.title=user template\n selfRegUnmatching=SAML-initiated self-registration\n-requestedAuthnContextProviderClassName=RequestedAuthnContext provider\n+requestedAuthnContextProvider=RequestedAuthnContext provider"},{"sha":"6b5ed3a512bc62bd48ffddba046ecc41d402bf8f","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel_it.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_it.properties?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -24,7 +24,7 @@ bindingType=Binding\n html.title=metadata\n createUnmatching=Create unmatching users\n updateMatching=Update matching users\n-actionsClassNames=Azioni\n+actions=Azioni\n template.title=template utenti\n selfRegUnmatching=SAML-initiated self-registration\n-requestedAuthnContextProviderClassName=RequestedAuthnContext provider\n+requestedAuthnContextProvider=RequestedAuthnContext provider"},{"sha":"cb586cd946be350e4d9b74d51408a459127b23b2","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel_pt_BR.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_pt_BR.properties?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -24,7 +24,7 @@ bindingType=Binding\n html.title=metadata\n createUnmatching=Create unmatching users\n updateMatching=Update matching users\n-actionsClassNames=Actions\n+actions=Actions\n template.title=user template\n selfRegUnmatching=SAML-initiated self-registration\n-requestedAuthnContextProviderClassName=RequestedAuthnContext provider\n+requestedAuthnContextProvider=RequestedAuthnContext provider"},{"sha":"cae8696184bf7a2be100f326291eb3a2ffec4dd3","filename":"ext/saml2sp/client-console/src/main/resources/org/apache/syncope/client/console/panels/SAML2IdPsDirectoryPanel_ru.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSAML2IdPsDirectoryPanel_ru.properties?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -24,7 +24,7 @@ bindingType=Binding\n html.title=metadata\n createUnmatching=Create unmatching users\n updateMatching=Update matching users\n-actionsClassNames=\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f\n+actions=\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f\n template.title=user template\n selfRegUnmatching=SAML-initiated self-registration\n-requestedAuthnContextProviderClassName=RequestedAuthnContext provider\n+requestedAuthnContextProvider=RequestedAuthnContext provider"},{"sha":"13dc87a28f0079aaa584592550ff64ce2edf4edf","filename":"ext/saml2sp/common-lib/src/main/java/org/apache/syncope/common/lib/to/SAML2IdPTO.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -60,9 +60,9 @@ public class SAML2IdPTO implements EntityTO, ItemContainerTO {\n \n     private final List<ItemTO> items = new ArrayList<>();\n \n-    private final List<String> actionsClassNames = new ArrayList<>();\n+    private final List<String> actions = new ArrayList<>();\n \n-    private String requestedAuthnContextProviderClassName;\n+    private String requestedAuthnContextProvider;\n \n     @Override\n     public String getKey() {\n@@ -199,18 +199,18 @@ public boolean remove(final ItemTO item) {\n         return this.items.remove(item);\n     }\n \n-    @XmlElementWrapper(name = \"actionsClassNames\")\n-    @XmlElement(name = \"actionsClassNames\")\n+    @XmlElementWrapper(name = \"actions\")\n+    @XmlElement(name = \"action\")\n     @JsonProperty(\"actions\")\n-    public List<String> getActionsClassNames() {\n-        return actionsClassNames;\n+    public List<String> getActions() {\n+        return actions;\n     }\n \n-    public String getRequestedAuthnContextProviderClassName() {\n-        return requestedAuthnContextProviderClassName;\n+    public String getRequestedAuthnContextProvider() {\n+        return requestedAuthnContextProvider;\n     }\n \n-    public void setRequestedAuthnContextProviderClassName(final String requestedAuthnContextProviderClassName) {\n-        this.requestedAuthnContextProviderClassName = requestedAuthnContextProviderClassName;\n+    public void setRequestedAuthnContextProvider(final String requestedAuthnContextProvider) {\n+        this.requestedAuthnContextProvider = requestedAuthnContextProvider;\n     }\n }"},{"sha":"acda3b3f1c2f721f7711c33664258f74bbb228cb","filename":"ext/saml2sp/common-lib/src/main/java/org/apache/syncope/common/lib/types/SAML2SPImplementationType.java","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSAML2SPImplementationType.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSAML2SPImplementationType.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FSAML2SPImplementationType.java?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.common.lib.types;\n+\n+import java.util.Map;\n+import org.apache.commons.lang3.tuple.Pair;\n+\n+public final class SAML2SPImplementationType {\n+\n+    public static final String IDP_ACTIONS = \"IDP_ACTIONS\";\n+\n+    public static final String REQUESTED_AUTHN_CONTEXT_PROVIDER = \"REQUESTED_AUTHN_CONTEXT_PROVIDER\";\n+\n+    private static final Map<String, String> VALUES = Map.ofEntries(\n+            Pair.of(IDP_ACTIONS,\n+                    \"org.apache.syncope.core.provisioning.api.SAML2IdPActions\"),\n+            Pair.of(REQUESTED_AUTHN_CONTEXT_PROVIDER,\n+                    \"org.apache.syncope.core.provisioning.api.RequestedAuthnContextProvider\"));\n+\n+    public static Map<String, String> values() {\n+        return VALUES;\n+    }\n+\n+    private SAML2SPImplementationType() {\n+        // private constructor for static utility class\n+    }\n+}"},{"sha":"753337d6c7d36db705df3c6499c669f5729ddc24","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/SAML2IdPLogic.java","status":"modified","additions":1,"deletions":16,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2IdPLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2IdPLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2IdPLogic.java?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -26,7 +26,6 @@\n import java.util.ArrayList;\n import java.util.Base64;\n import java.util.List;\n-import java.util.Set;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.syncope.common.lib.SyncopeClientException;\n@@ -35,10 +34,9 @@\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n import org.apache.syncope.common.lib.types.SAML2BindingType;\n import org.apache.syncope.common.lib.types.SAML2SPEntitlement;\n-import org.apache.syncope.core.logic.init.SAML2SPClassPathScanImplementationLookup;\n-import org.apache.syncope.core.logic.saml2.SAML2ReaderWriter;\n import org.apache.syncope.core.logic.saml2.SAML2IdPCache;\n import org.apache.syncope.core.logic.saml2.SAML2IdPEntity;\n+import org.apache.syncope.core.logic.saml2.SAML2ReaderWriter;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.SAML2IdPDAO;\n import org.apache.syncope.core.persistence.api.entity.SAML2IdP;\n@@ -68,22 +66,9 @@ public class SAML2IdPLogic extends AbstractSAML2Logic<SAML2IdPTO> {\n     @Autowired\n     private SAML2IdPDAO idpDAO;\n \n-    @Autowired\n-    private SAML2SPClassPathScanImplementationLookup implLookup;\n-\n     @Autowired\n     private SAML2ReaderWriter saml2rw;\n \n-    @PreAuthorize(\"isAuthenticated()\")\n-    public Set<String> getActionsClasses() {\n-        return implLookup.getActionsClasses();\n-    }\n-\n-    @PreAuthorize(\"isAuthenticated()\")\n-    public Set<String> getRequestedAuthnContextProviderClasses() {\n-        return implLookup.getRequestedAuthnContextProvidersClasses();\n-    }\n-\n     private SAML2IdPTO complete(final SAML2IdP idp, final SAML2IdPTO idpTO) {\n         SAML2IdPEntity idpEntity = cache.get(idpTO.getEntityID());\n         if (idpEntity == null) {"},{"sha":"3977db6804d93ce9ddffcdfcfe2dc80cf688d08b","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/SAML2SPLogic.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -50,6 +50,7 @@\n import org.apache.syncope.core.logic.saml2.SAML2IdPEntity;\n import org.apache.syncope.core.logic.saml2.SAML2UserManager;\n import org.apache.syncope.core.persistence.api.dao.AccessTokenDAO;\n+import org.apache.syncope.core.persistence.api.dao.ImplementationDAO;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.core.persistence.api.dao.SAML2IdPDAO;\n import org.apache.syncope.core.persistence.api.entity.SAML2IdP;\n@@ -98,13 +99,12 @@\n import org.springframework.stereotype.Component;\n import org.apache.syncope.core.provisioning.api.serialization.POJOHelper;\n import org.apache.syncope.core.provisioning.java.DefaultRequestedAuthnContextProvider;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.spring.ImplementationManager;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.security.AuthDataAccessor;\n import org.apache.syncope.core.spring.security.Encryptor;\n import org.apache.syncope.core.spring.security.SecureRandomUtils;\n import org.opensaml.core.xml.schema.XSAny;\n-import org.springframework.beans.factory.support.AbstractBeanDefinition;\n import org.springframework.util.ResourceUtils;\n \n @Component\n@@ -141,6 +141,9 @@ public class SAML2SPLogic extends AbstractSAML2Logic<EntityTO> {\n     @Autowired\n     private AccessTokenDAO accessTokenDAO;\n \n+    @Autowired\n+    private ImplementationDAO implementationDAO;\n+\n     @Autowired\n     private AuthDataAccessor authDataAccessor;\n \n@@ -294,14 +297,12 @@ public SAML2RequestTO createLoginRequest(final String spEntityID, final String i\n         nameIDPolicy.setSPNameQualifier(spEntityID);\n \n         RequestedAuthnContextProvider requestedAuthnContextProvider = new DefaultRequestedAuthnContextProvider();\n-        if (idp.getRequestedAuthnContextProviderClassName() != null) {\n+        if (idp.getRequestedAuthnContextProvider() != null) {\n             try {\n-                Class<?> actionsClass = Class.forName(idp.getRequestedAuthnContextProviderClassName());\n-                requestedAuthnContextProvider = (RequestedAuthnContextProvider) ApplicationContextProvider.\n-                        getBeanFactory().createBean(actionsClass, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, true);\n+                ImplementationManager.build(implementationDAO.find(idp.getRequestedAuthnContextProvider()));\n             } catch (Exception e) {\n                 LOG.warn(\"Cannot instantiate '{}', reverting to {}\",\n-                        idp.getRequestedAuthnContextProviderClassName(),\n+                        idp.getRequestedAuthnContextProvider(),\n                         DefaultRequestedAuthnContextProvider.class.getName(), e);\n             }\n         }"},{"sha":"24ce2a30e8e128417e11b2172cc7643bf4f04b3f","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/init/SAML2SPClassPathScanImplementationLookup.java","status":"removed","additions":0,"deletions":87,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/289aeb35eed92e2cd5e9ce1b20af52d8a6620609/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/289aeb35eed92e2cd5e9ce1b20af52d8a6620609/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPClassPathScanImplementationLookup.java?ref=289aeb35eed92e2cd5e9ce1b20af52d8a6620609","patch":"@@ -1,87 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.logic.init;\n-\n-import java.lang.reflect.Modifier;\n-import java.util.Collections;\n-import java.util.HashSet;\n-import java.util.Set;\n-import org.apache.syncope.core.persistence.api.ImplementationLookup;\n-import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n-import org.apache.syncope.core.provisioning.api.RequestedAuthnContextProvider;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n-import org.springframework.core.type.filter.AssignableTypeFilter;\n-import org.springframework.stereotype.Component;\n-import org.springframework.util.ClassUtils;\n-import org.apache.syncope.core.provisioning.api.SAML2IdPActions;\n-\n-@Component\n-public class SAML2SPClassPathScanImplementationLookup implements SyncopeCoreLoader {\n-\n-    private static final Logger LOG = LoggerFactory.getLogger(ImplementationLookup.class);\n-\n-    private static final String DEFAULT_BASE_PACKAGE = \"org.apache.syncope.core\";\n-\n-    private Set<String> actionsClasses;\n-\n-    private Set<String> requestedAuthnContextProvidersClasses;\n-\n-    @Override\n-    public int getOrder() {\n-        return 999;\n-    }\n-\n-    @Override\n-    public void load() {\n-        actionsClasses = new HashSet<>();\n-        requestedAuthnContextProvidersClasses = new HashSet<>();\n-\n-        ClassPathScanningCandidateComponentProvider scanner = new ClassPathScanningCandidateComponentProvider(false);\n-        scanner.addIncludeFilter(new AssignableTypeFilter(SAML2IdPActions.class));\n-        scanner.addIncludeFilter(new AssignableTypeFilter(RequestedAuthnContextProvider.class));\n-\n-        scanner.findCandidateComponents(DEFAULT_BASE_PACKAGE).forEach(bd -> {\n-            try {\n-                Class<?> clazz = ClassUtils.resolveClassName(bd.getBeanClassName(), ClassUtils.getDefaultClassLoader());\n-                boolean isAbstractClazz = Modifier.isAbstract(clazz.getModifiers());\n-\n-                if (SAML2IdPActions.class.isAssignableFrom(clazz) && !isAbstractClazz) {\n-                    actionsClasses.add(clazz.getName());\n-                } else if (RequestedAuthnContextProvider.class.isAssignableFrom(clazz) && !isAbstractClazz) {\n-                    requestedAuthnContextProvidersClasses.add(clazz.getName());\n-                }\n-            } catch (Throwable t) {\n-                LOG.warn(\"Could not inspect class {}\", bd.getBeanClassName(), t);\n-            }\n-        });\n-\n-        actionsClasses = Collections.unmodifiableSet(actionsClasses);\n-        requestedAuthnContextProvidersClasses = Collections.unmodifiableSet(requestedAuthnContextProvidersClasses);\n-    }\n-\n-    public Set<String> getActionsClasses() {\n-        return actionsClasses;\n-    }\n-\n-    public Set<String> getRequestedAuthnContextProvidersClasses() {\n-        return requestedAuthnContextProvidersClasses;\n-    }\n-}"},{"sha":"445873f1828f9d86cddf7df20ef8a6a7653b2f73","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/init/SAML2SPLoader.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPLoader.java?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -28,7 +28,9 @@\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.PropertyUtils;\n import org.apache.syncope.common.lib.types.EntitlementsHolder;\n+import org.apache.syncope.common.lib.types.ImplementationTypesHolder;\n import org.apache.syncope.common.lib.types.SAML2SPEntitlement;\n+import org.apache.syncope.common.lib.types.SAML2SPImplementationType;\n import org.apache.syncope.core.logic.saml2.SAML2IdPCache;\n import org.apache.syncope.core.logic.saml2.SAML2ReaderWriter;\n import org.apache.syncope.core.persistence.api.SyncopeCoreLoader;\n@@ -90,6 +92,7 @@ public int getOrder() {\n     @Override\n     public void load() {\n         EntitlementsHolder.getInstance().addAll(SAML2SPEntitlement.values());\n+        ImplementationTypesHolder.getInstance().putAll(SAML2SPImplementationType.values());\n \n         Properties props = PropertyUtils.read(getClass(), SAML2SP_LOGIC_PROPERTIES, \"conf.directory\");\n         String confDirectory = props.getProperty(\"conf.directory\");"},{"sha":"8b662174e90c26cea5ef9fdf3f76ebe23e89b09d","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/saml2/SAML2IdPEntity.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2IdPEntity.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2IdPEntity.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2IdPEntity.java?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -158,12 +158,12 @@ public UserTO getUserTemplate() {\n         return idpTO.getUserTemplate();\n     }\n \n-    public List<String> getActionsClassNames() {\n-        return idpTO.getActionsClassNames();\n+    public List<String> getActions() {\n+        return idpTO.getActions();\n     }\n \n-    public String getRequestedAuthnContextProviderClassName() {\n-        return idpTO.getRequestedAuthnContextProviderClassName();\n+    public String getRequestedAuthnContextProvider() {\n+        return idpTO.getRequestedAuthnContextProvider();\n     }\n \n     public Endpoint getSSOLocation(final SAML2BindingType bindingType) {"},{"sha":"bebfc7858e3ba922dfe47f984752d8e51d7c05d4","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/saml2/SAML2UserManager.java","status":"modified","additions":8,"deletions":10,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Fsaml2%2FSAML2UserManager.java?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -38,6 +38,7 @@\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.ParsingValidationException;\n+import org.apache.syncope.core.persistence.api.dao.ImplementationDAO;\n import org.apache.syncope.core.persistence.api.dao.SAML2IdPDAO;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.DerSchema;\n@@ -55,11 +56,10 @@\n import org.apache.syncope.core.provisioning.java.IntAttrNameParser;\n import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.apache.syncope.core.provisioning.java.utils.TemplateUtils;\n-import org.apache.syncope.core.spring.ApplicationContextProvider;\n+import org.apache.syncope.core.spring.ImplementationManager;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.support.AbstractBeanDefinition;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Propagation;\n import org.springframework.transaction.annotation.Transactional;\n@@ -75,6 +75,9 @@ public class SAML2UserManager {\n     @Autowired\n     private UserDAO userDAO;\n \n+    @Autowired\n+    private ImplementationDAO implementationDAO;\n+\n     @Autowired\n     private IntAttrNameParser intAttrNameParser;\n \n@@ -174,16 +177,11 @@ public List<String> findMatchingUser(final String keyValue, final String idpKey)\n \n     private List<SAML2IdPActions> getActions(final SAML2IdPEntity idp) {\n         List<SAML2IdPActions> actions = new ArrayList<>();\n-\n-        idp.getActionsClassNames().forEach(className -> {\n+        idp.getActions().forEach(impl -> {\n             try {\n-                Class<?> actionsClass = Class.forName(className);\n-                SAML2IdPActions idpActions = (SAML2IdPActions) ApplicationContextProvider.getBeanFactory().\n-                        createBean(actionsClass, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, true);\n-\n-                actions.add(idpActions);\n+                actions.add(ImplementationManager.build(implementationDAO.find(impl)));\n             } catch (Exception e) {\n-                LOG.warn(\"Class '{}' not found\", className, e);\n+                LOG.warn(\"While building {}\", impl, e);\n             }\n         });\n "},{"sha":"5acc217c35bb87d6acce8bdb43fb18517e715bc5","filename":"ext/saml2sp/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/SAML2IdP.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSAML2IdP.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSAML2IdP.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSAML2IdP.java?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -72,9 +72,11 @@ public interface SAML2IdP extends Entity {\n \n     List<? extends SAML2IdPItem> getItems();\n \n-    List<String> getActionsClassNames();\n+    boolean add(Implementation action);\n \n-    String getRequestedAuthnContextProviderClassName();\n+    List<? extends Implementation> getActions();\n \n-    void setRequestedAuthnContextProviderClassName(String requestedAuthnContextProviderClassName);\n+    Implementation getRequestedAuthnContextProvider();\n+\n+    void setRequestedAuthnContextProvider(Implementation requestedAuthnContextProvider);\n }"},{"sha":"b393dd9e21bcec3632e1b09431e2765f325d17bc","filename":"ext/saml2sp/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPASAML2IdP.java","status":"modified","additions":28,"deletions":14,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASAML2IdP.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASAML2IdP.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASAML2IdP.java?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -24,19 +24,21 @@\n import javax.persistence.Basic;\n import javax.persistence.Cacheable;\n import javax.persistence.CascadeType;\n-import javax.persistence.CollectionTable;\n import javax.persistence.Column;\n-import javax.persistence.ElementCollection;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n import javax.persistence.JoinColumn;\n+import javax.persistence.JoinTable;\n import javax.persistence.Lob;\n+import javax.persistence.ManyToMany;\n import javax.persistence.OneToMany;\n import javax.persistence.OneToOne;\n import javax.persistence.Table;\n import javax.validation.constraints.NotNull;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.syncope.common.lib.types.SAML2BindingType;\n+import org.apache.syncope.common.lib.types.SAML2SPImplementationType;\n+import org.apache.syncope.core.persistence.api.entity.Implementation;\n import org.apache.syncope.core.persistence.api.entity.SAML2IdP;\n import org.apache.syncope.core.persistence.api.entity.SAML2IdPItem;\n import org.apache.syncope.core.persistence.api.entity.SAML2UserTemplate;\n@@ -86,14 +88,16 @@ public class JPASAML2IdP extends AbstractGeneratedKeyEntity implements SAML2IdP\n     @OneToOne(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER, mappedBy = \"idp\")\n     private JPASAML2UserTemplate userTemplate;\n \n-    @ElementCollection(fetch = FetchType.EAGER)\n-    @Column(name = \"actionClassName\")\n-    @CollectionTable(name = TABLE + \"_actionsClassNames\",\n+    @ManyToMany(fetch = FetchType.EAGER)\n+    @JoinTable(name = \"SAML2IdPAction\",\n             joinColumns =\n-            @JoinColumn(name = \"saml2IdP_id\", referencedColumnName = \"id\"))\n-    private List<String> actionsClassNames = new ArrayList<>();\n+            @JoinColumn(name = \"saml2idp_id\"),\n+            inverseJoinColumns =\n+            @JoinColumn(name = \"implementation_id\"))\n+    private List<JPAImplementation> actions = new ArrayList<>();\n \n-    private String requestedAuthnContextProviderClassName;\n+    @OneToOne\n+    private JPAImplementation requestedAuthnContextProvider;\n \n     @Override\n     public String getEntityID() {\n@@ -219,17 +223,27 @@ public void setConnObjectKeyItem(final SAML2IdPItem item) {\n     }\n \n     @Override\n-    public List<String> getActionsClassNames() {\n-        return actionsClassNames;\n+    public boolean add(final Implementation action) {\n+        checkType(action, JPAImplementation.class);\n+        checkImplementationType(action, SAML2SPImplementationType.IDP_ACTIONS);\n+        return actions.contains((JPAImplementation) action) || actions.add((JPAImplementation) action);\n     }\n \n     @Override\n-    public String getRequestedAuthnContextProviderClassName() {\n-        return requestedAuthnContextProviderClassName;\n+    public List<? extends Implementation> getActions() {\n+        return actions;\n     }\n \n     @Override\n-    public void setRequestedAuthnContextProviderClassName(final String requestedAuthnContextProviderClassName) {\n-        this.requestedAuthnContextProviderClassName = requestedAuthnContextProviderClassName;\n+    public JPAImplementation getRequestedAuthnContextProvider() {\n+        return requestedAuthnContextProvider;\n+    }\n+\n+    @Override\n+    public void setRequestedAuthnContextProvider(final Implementation requestedAuthnContextProvider) {\n+        checkType(requestedAuthnContextProvider, JPAImplementation.class);\n+        checkImplementationType(\n+                requestedAuthnContextProvider, SAML2SPImplementationType.REQUESTED_AUTHN_CONTEXT_PROVIDER);\n+        this.requestedAuthnContextProvider = (JPAImplementation) requestedAuthnContextProvider;\n     }\n }"},{"sha":"48bc77d5467d6af68ef6de0b23429a1321bb2862","filename":"ext/saml2sp/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/SAML2IdPDataBinderImpl.java","status":"modified","additions":31,"deletions":5,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSAML2IdPDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSAML2IdPDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FSAML2IdPDataBinderImpl.java?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -32,8 +32,10 @@\n import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n+import org.apache.syncope.core.persistence.api.dao.ImplementationDAO;\n import org.apache.syncope.core.persistence.api.dao.SAML2IdPDAO;\n import org.apache.syncope.core.persistence.api.entity.Entity;\n+import org.apache.syncope.core.persistence.api.entity.Implementation;\n import org.apache.syncope.core.persistence.api.entity.SAML2EntityFactory;\n import org.apache.syncope.core.persistence.api.entity.SAML2IdP;\n import org.apache.syncope.core.persistence.api.entity.SAML2IdPItem;\n@@ -58,6 +60,9 @@ public class SAML2IdPDataBinderImpl implements SAML2IdPDataBinder {\n     @Autowired\n     private SAML2IdPDAO saml2IdPDAO;\n \n+    @Autowired\n+    private ImplementationDAO implementationDAO;\n+\n     @Autowired\n     private SAML2EntityFactory entityFactory;\n \n@@ -208,10 +213,28 @@ public SAML2IdP update(final SAML2IdP idp, final SAML2IdPTO idpTO) {\n         });\n         populateItems(idpTO, idp, allowedSchemas);\n \n-        idp.getActionsClassNames().clear();\n-        idp.getActionsClassNames().addAll(idpTO.getActionsClassNames());\n+        idpTO.getActions().forEach(action -> {\n+            Implementation implementation = implementationDAO.find(action);\n+            if (implementation == null) {\n+                LOG.debug(\"Invalid \" + Implementation.class.getSimpleName() + \" {}, ignoring...\", action);\n+            } else {\n+                idp.add(implementation);\n+            }\n+        });\n+        // remove all implementations not contained in the TO\n+        idp.getActions().removeIf(impl -> !idpTO.getActions().contains(impl.getKey()));\n \n-        idp.setRequestedAuthnContextProviderClassName(idpTO.getRequestedAuthnContextProviderClassName());\n+        if (idpTO.getRequestedAuthnContextProvider() == null) {\n+            idp.setRequestedAuthnContextProvider(null);\n+        } else {\n+            Implementation implementation = implementationDAO.find(idpTO.getRequestedAuthnContextProvider());\n+            if (implementation == null) {\n+                LOG.debug(\"Invalid \" + Implementation.class.getSimpleName() + \" {}, ignoring...\",\n+                        idpTO.getRequestedAuthnContextProvider());\n+            } else {\n+                idp.setRequestedAuthnContextProvider(implementation);\n+            }\n+        }\n \n         return saml2IdPDAO.save(idp);\n     }\n@@ -258,9 +281,12 @@ public SAML2IdPTO getIdPTO(final SAML2IdP idp) {\n \n         populateItems(idp, idpTO);\n \n-        idpTO.getActionsClassNames().addAll(idp.getActionsClassNames());\n+        idpTO.getActions().addAll(\n+                idp.getActions().stream().map(Entity::getKey).collect(Collectors.toList()));\n \n-        idpTO.setRequestedAuthnContextProviderClassName(idp.getRequestedAuthnContextProviderClassName());\n+        if (idp.getRequestedAuthnContextProvider() != null) {\n+            idpTO.setRequestedAuthnContextProvider(idp.getRequestedAuthnContextProvider().getKey());\n+        }\n \n         return idpTO;\n     }"},{"sha":"9b31c8a489f9c4c9326c5d9778098f65a0d893c2","filename":"ext/saml2sp/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/SAML2IdPService.java","status":"modified","additions":0,"deletions":21,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2IdPService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2IdPService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FSAML2IdPService.java?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -28,7 +28,6 @@\n import io.swagger.v3.oas.annotations.tags.Tag;\n import java.io.InputStream;\n import java.util.List;\n-import java.util.Set;\n import javax.validation.constraints.NotNull;\n import javax.ws.rs.Consumes;\n import javax.ws.rs.DELETE;\n@@ -53,26 +52,6 @@\n @Path(\"saml2sp/identityProviders\")\n public interface SAML2IdPService extends JAXRSService {\n \n-    /**\n-     * Returns the list of available SAML2IdPActions implementations.\n-     *\n-     * @return the list of available SAML2IdPActions implementations\n-     */\n-    @GET\n-    @Path(\"actionsClasses\")\n-    @Produces({ MediaType.APPLICATION_JSON })\n-    Set<String> getActionsClasses();\n-\n-    /**\n-     * Returns the list of available RequestedAuthnContextProviders implementations.\n-     *\n-     * @return the list of available RequestedAuthnContextProviders implementations\n-     */\n-    @GET\n-    @Path(\"requestedAuthnContextProviders\")\n-    @Produces({ MediaType.APPLICATION_JSON })\n-    Set<String> getRequestedAuthnContextProviderClasses();\n-\n     /**\n      * Returns a list of all defined SAML 2.0 Identity Providers.\n      *"},{"sha":"1f2790f20904299d2c88086e87764f3f076b499b","filename":"ext/saml2sp/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SAML2IdPServiceImpl.java","status":"modified","additions":0,"deletions":11,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2IdPServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dd1e08852870bcb52968c75ea23f8501e9f01c65/ext%2Fsaml2sp%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2IdPServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSAML2IdPServiceImpl.java?ref=dd1e08852870bcb52968c75ea23f8501e9f01c65","patch":"@@ -20,7 +20,6 @@\n \n import java.io.InputStream;\n import java.util.List;\n-import java.util.Set;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.to.SAML2IdPTO;\n import org.apache.syncope.common.rest.api.RESTHeaders;\n@@ -35,16 +34,6 @@ public class SAML2IdPServiceImpl extends AbstractServiceImpl implements SAML2IdP\n     @Autowired\n     private SAML2IdPLogic logic;\n \n-    @Override\n-    public Set<String> getActionsClasses() {\n-        return logic.getActionsClasses();\n-    }\n-\n-    @Override\n-    public Set<String> getRequestedAuthnContextProviderClasses() {\n-        return logic.getRequestedAuthnContextProviderClasses();\n-    }\n-\n     @Override\n     public List<SAML2IdPTO> list() {\n         return logic.list();"}]}