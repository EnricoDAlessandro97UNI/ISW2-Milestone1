{"sha":"31dc4a2806628ac45d33fd8cdb39b8ebabc237e7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjMxZGM0YTI4MDY2MjhhYzQ1ZDMzZmQ4Y2RiMzliOGViYWJjMjM3ZTc=","commit":{"author":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2016-07-27T14:46:45Z"},"committer":{"name":"Colm O hEigeartaigh","email":"coheigea@apache.org","date":"2016-07-27T15:21:34Z"},"message":"SYNCOPE-909 - Consolidate update functionality","tree":{"sha":"629d7d8604d14ff7f89283b09b52f2ede6526bb0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/629d7d8604d14ff7f89283b09b52f2ede6526bb0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/31dc4a2806628ac45d33fd8cdb39b8ebabc237e7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/31dc4a2806628ac45d33fd8cdb39b8ebabc237e7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/31dc4a2806628ac45d33fd8cdb39b8ebabc237e7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/31dc4a2806628ac45d33fd8cdb39b8ebabc237e7/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"377ce234bcabd209245e47c706760243c1539db2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/377ce234bcabd209245e47c706760243c1539db2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/377ce234bcabd209245e47c706760243c1539db2"}],"stats":{"total":303,"additions":97,"deletions":206},"files":[{"sha":"b42e34e96bb2bcb2013e74ec2ccf829db1f8d545","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/AnyObjectUpdateProcessor.java","status":"removed","additions":0,"deletions":70,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/377ce234bcabd209245e47c706760243c1539db2/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectUpdateProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/377ce234bcabd209245e47c706760243c1539db2/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectUpdateProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FAnyObjectUpdateProcessor.java?ref=377ce234bcabd209245e47c706760243c1539db2","patch":"@@ -1,70 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.provisioning.camel.processor;\n-\n-import java.util.List;\n-import java.util.Set;\n-import org.apache.camel.Exchange;\n-import org.apache.camel.Processor;\n-import org.apache.commons.lang3.tuple.ImmutablePair;\n-import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n-import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n-import org.apache.syncope.core.provisioning.api.WorkflowResult;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Component;\n-\n-@Component\n-public class AnyObjectUpdateProcessor implements Processor {\n-\n-    @Autowired\n-    protected PropagationManager propagationManager;\n-\n-    @Autowired\n-    protected PropagationTaskExecutor taskExecutor;\n-\n-    @Autowired\n-    protected VirAttrHandler virtAttrHandler;\n-\n-    @SuppressWarnings(\"unchecked\")\n-    @Override\n-    public void process(final Exchange exchange) {\n-        WorkflowResult<String> updated = (WorkflowResult<String>) exchange.getIn().getBody();\n-        AnyObjectPatch anyObjectPatch = exchange.getProperty(\"anyPatch\", AnyObjectPatch.class);\n-        Set<String> excludedResources = exchange.getProperty(\"excludedResources\", Set.class);\n-        Boolean nullPriorityAsync = exchange.getProperty(\"nullPriorityAsync\", Boolean.class);\n-\n-        List<PropagationTask> tasks = propagationManager.getUpdateTasks(\n-                AnyTypeKind.ANY_OBJECT,\n-                updated.getResult(),\n-                false,\n-                null,\n-                updated.getPropByRes(),\n-                anyObjectPatch.getVirAttrs(),\n-                excludedResources);\n-        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n-\n-        exchange.getOut().setBody(new ImmutablePair<>(updated.getResult(), propagationReporter.getStatuses()));\n-    }\n-\n-}"},{"sha":"ebc84a54e152f80d05dd3d2f8447f2c4e0d4900a","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/GroupUpdateProcessor.java","status":"removed","additions":0,"deletions":70,"changes":70,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/377ce234bcabd209245e47c706760243c1539db2/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupUpdateProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/377ce234bcabd209245e47c706760243c1539db2/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupUpdateProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FGroupUpdateProcessor.java?ref=377ce234bcabd209245e47c706760243c1539db2","patch":"@@ -1,70 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.provisioning.camel.processor;\n-\n-import java.util.List;\n-import java.util.Set;\n-import org.apache.camel.Exchange;\n-import org.apache.camel.Processor;\n-import org.apache.commons.lang3.tuple.ImmutablePair;\n-import org.apache.syncope.common.lib.patch.GroupPatch;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n-import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n-import org.apache.syncope.core.provisioning.api.WorkflowResult;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Component;\n-\n-@Component\n-public class GroupUpdateProcessor implements Processor {\n-\n-    @Autowired\n-    protected PropagationManager propagationManager;\n-\n-    @Autowired\n-    protected PropagationTaskExecutor taskExecutor;\n-\n-    @Autowired\n-    protected VirAttrHandler virtAttrHandler;\n-\n-    @SuppressWarnings(\"unchecked\")\n-    @Override\n-    public void process(final Exchange exchange) {\n-        WorkflowResult<String> updated = (WorkflowResult<String>) exchange.getIn().getBody();\n-        GroupPatch groupPatch = exchange.getProperty(\"anyPatch\", GroupPatch.class);\n-        Set<String> excludedResources = exchange.getProperty(\"excludedResources\", Set.class);\n-        Boolean nullPriorityAsync = exchange.getProperty(\"nullPriorityAsync\", Boolean.class);\n-\n-        List<PropagationTask> tasks = propagationManager.getUpdateTasks(\n-                AnyTypeKind.GROUP,\n-                updated.getResult(),\n-                false,\n-                null,\n-                updated.getPropByRes(),\n-                groupPatch.getVirAttrs(),\n-                excludedResources);\n-        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n-\n-        exchange.getOut().setBody(new ImmutablePair<>(updated.getResult(), propagationReporter.getStatuses()));\n-    }\n-\n-}"},{"sha":"aca33719867d6f9701940fddacd674902466449a","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UpdateProcessor.java","status":"added","additions":92,"deletions":0,"changes":92,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/31dc4a2806628ac45d33fd8cdb39b8ebabc237e7/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUpdateProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/31dc4a2806628ac45d33fd8cdb39b8ebabc237e7/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUpdateProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUpdateProcessor.java?ref=31dc4a2806628ac45d33fd8cdb39b8ebabc237e7","patch":"@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.camel.processor;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.apache.camel.Exchange;\n+import org.apache.camel.Processor;\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.common.lib.patch.AnyObjectPatch;\n+import org.apache.syncope.common.lib.patch.AnyPatch;\n+import org.apache.syncope.common.lib.patch.UserPatch;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n+import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n+import org.apache.syncope.core.provisioning.api.WorkflowResult;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n+import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+@Component\n+public class UpdateProcessor implements Processor {\n+\n+    @Autowired\n+    protected PropagationManager propagationManager;\n+\n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n+    @Autowired\n+    protected VirAttrHandler virtAttrHandler;\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public void process(final Exchange exchange) {\n+        if ((exchange.getIn().getBody() instanceof WorkflowResult)) {\n+            Object actual = exchange.getProperty(\"actual\");\n+            Boolean nullPriorityAsync = exchange.getProperty(\"nullPriorityAsync\", Boolean.class);\n+            Set<String> excludedResources = exchange.getProperty(\"excludedResources\", Set.class);\n+            \n+            if (actual instanceof UserPatch) {\n+                WorkflowResult<Pair<UserPatch, Boolean>> updated =\n+                        (WorkflowResult<Pair<UserPatch, Boolean>>) exchange.getIn().getBody();\n+        \n+                List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(updated);\n+                PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n+\n+                exchange.getOut().setBody(new ImmutablePair<>(\n+                        updated.getResult().getKey().getKey(), propagationReporter.getStatuses()));\n+            } else if (actual instanceof AnyPatch) {\n+                WorkflowResult<String> updated = (WorkflowResult<String>) exchange.getIn().getBody();\n+\n+                AnyTypeKind anyTypeKind = AnyTypeKind.GROUP;\n+                if (actual instanceof AnyObjectPatch) {\n+                    anyTypeKind = AnyTypeKind.ANY_OBJECT;\n+                }\n+\n+                List<PropagationTask> tasks = propagationManager.getUpdateTasks(\n+                        anyTypeKind,\n+                        updated.getResult(),\n+                        false,\n+                        null,\n+                        updated.getPropByRes(),\n+                        ((AnyPatch) actual).getVirAttrs(),\n+                        excludedResources);\n+                PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n+\n+                exchange.getOut().setBody(new ImmutablePair<>(updated.getResult(), propagationReporter.getStatuses()));\n+            }\n+        }\n+    }\n+}"},{"sha":"219f6807cd8e0e443d399cd343a057b2a42a2883","filename":"ext/camel/provisioning-camel/src/main/java/org/apache/syncope/core/provisioning/camel/processor/UserUpdateProcessor.java","status":"removed","additions":0,"deletions":61,"changes":61,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/377ce234bcabd209245e47c706760243c1539db2/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserUpdateProcessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/377ce234bcabd209245e47c706760243c1539db2/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserUpdateProcessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2Fprocessor%2FUserUpdateProcessor.java?ref=377ce234bcabd209245e47c706760243c1539db2","patch":"@@ -1,61 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.provisioning.camel.processor;\n-\n-import java.util.List;\n-import org.apache.camel.Exchange;\n-import org.apache.camel.Processor;\n-import org.apache.commons.lang3.tuple.ImmutablePair;\n-import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.common.lib.patch.UserPatch;\n-import org.apache.syncope.core.persistence.api.entity.task.PropagationTask;\n-import org.apache.syncope.core.provisioning.api.VirAttrHandler;\n-import org.apache.syncope.core.provisioning.api.WorkflowResult;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationManager;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n-import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Component;\n-\n-@Component\n-public class UserUpdateProcessor implements Processor {\n-\n-    @Autowired\n-    protected PropagationManager propagationManager;\n-\n-    @Autowired\n-    protected PropagationTaskExecutor taskExecutor;\n-\n-    @Autowired\n-    protected VirAttrHandler virtAttrHandler;\n-\n-    @Override\n-    @SuppressWarnings(\"unchecked\")\n-    public void process(final Exchange exchange) {\n-        WorkflowResult<Pair<UserPatch, Boolean>> updated =\n-                (WorkflowResult<Pair<UserPatch, Boolean>>) exchange.getIn().getBody();\n-        Boolean nullPriorityAsync = exchange.getProperty(\"nullPriorityAsync\", Boolean.class);\n-\n-        List<PropagationTask> tasks = propagationManager.getUserUpdateTasks(updated);\n-        PropagationReporter propagationReporter = taskExecutor.execute(tasks, nullPriorityAsync);\n-\n-        exchange.getOut().setBody(new ImmutablePair<>(\n-                updated.getResult().getKey().getKey(), propagationReporter.getStatuses()));\n-    }\n-}"},{"sha":"5c23f9e99e5c4aed5548f53fa399278f94d3eec6","filename":"ext/camel/provisioning-camel/src/main/resources/anyObjectRoutes.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/31dc4a2806628ac45d33fd8cdb39b8ebabc237e7/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FanyObjectRoutes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/31dc4a2806628ac45d33fd8cdb39b8ebabc237e7/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FanyObjectRoutes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FanyObjectRoutes.xml?ref=31dc4a2806628ac45d33fd8cdb39b8ebabc237e7","patch":"@@ -40,12 +40,12 @@ under the License.\n          \n   <route id=\"updateAnyObject\">\n     <from uri=\"direct:updateAnyObject\"/>\n-    <setProperty propertyName=\"anyPatch\">\n+    <setProperty propertyName=\"actual\">\n       <simple>${body}</simple>\n     </setProperty>\n     <doTry>\n       <bean ref=\"awfAdapter\" method=\"update(${body})\"/>\n-      <process ref=\"anyObjectUpdateProcessor\"/>\n+      <process ref=\"updateProcessor\"/>\n       <to uri=\"direct:updateAnyObjectPort\"/>\n       <doCatch>        \n         <exception>java.lang.RuntimeException</exception>"},{"sha":"c76fa617613c230793a606f612026aab9d6aa819","filename":"ext/camel/provisioning-camel/src/main/resources/groupRoutes.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/31dc4a2806628ac45d33fd8cdb39b8ebabc237e7/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FgroupRoutes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/31dc4a2806628ac45d33fd8cdb39b8ebabc237e7/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FgroupRoutes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FgroupRoutes.xml?ref=31dc4a2806628ac45d33fd8cdb39b8ebabc237e7","patch":"@@ -59,12 +59,12 @@ under the License.\n          \n   <route id=\"updateGroup\">\n     <from uri=\"direct:updateGroup\"/>\n-    <setProperty propertyName=\"anyPatch\">\n+    <setProperty propertyName=\"actual\">\n       <simple>${body}</simple>\n     </setProperty>\n     <doTry>\n       <bean ref=\"gwfAdapter\" method=\"update(${body})\"/>\n-      <process ref=\"groupUpdateProcessor\"/>\n+      <process ref=\"updateProcessor\"/>\n       <to uri=\"direct:updateGroupPort\"/>\n       <doCatch>        \n         <exception>java.lang.RuntimeException</exception>"},{"sha":"aa864630951892e81e29545bb38fc59e35eb3ce0","filename":"ext/camel/provisioning-camel/src/main/resources/userRoutes.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/31dc4a2806628ac45d33fd8cdb39b8ebabc237e7/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FuserRoutes.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/31dc4a2806628ac45d33fd8cdb39b8ebabc237e7/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FuserRoutes.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2FuserRoutes.xml?ref=31dc4a2806628ac45d33fd8cdb39b8ebabc237e7","patch":"@@ -46,7 +46,7 @@ under the License.\n     </setProperty>\n     <doTry>\n       <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n-      <process ref=\"userUpdateProcessor\"/>\n+      <process ref=\"updateProcessor\"/>\n       <to uri=\"direct:updatePort\"/>\n       <doCatch>        \n         <exception>java.lang.RuntimeException</exception>"}]}