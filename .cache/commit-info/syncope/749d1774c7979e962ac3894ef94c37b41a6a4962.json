{"sha":"749d1774c7979e962ac3894ef94c37b41a6a4962","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc0OWQxNzc0Yzc5NzllOTYyYWMzODk0ZWY5NGMzN2I0MWE2YTQ5NjI=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-05-23T13:33:37Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-05-23T13:33:37Z"},"message":"SYNCOPE-68 added incremental diff\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1341859 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2dea4c41f7f8ca39be335ef12798c31475f2a62e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2dea4c41f7f8ca39be335ef12798c31475f2a62e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/749d1774c7979e962ac3894ef94c37b41a6a4962","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/749d1774c7979e962ac3894ef94c37b41a6a4962","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/749d1774c7979e962ac3894ef94c37b41a6a4962","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/749d1774c7979e962ac3894ef94c37b41a6a4962/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"4f6f13ab3738001d7129e2009e50ebed1e201200","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4f6f13ab3738001d7129e2009e50ebed1e201200","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4f6f13ab3738001d7129e2009e50ebed1e201200"}],"stats":{"total":312,"additions":266,"deletions":46},"files":[{"sha":"d3a3ce4eba212454a23bc3da724ef0552ddfa96f","filename":"build-tools/src/main/resources/testdb.sql","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/749d1774c7979e962ac3894ef94c37b41a6a4962/build-tools%2Fsrc%2Fmain%2Fresources%2Ftestdb.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/749d1774c7979e962ac3894ef94c37b41a6a4962/build-tools%2Fsrc%2Fmain%2Fresources%2Ftestdb.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/build-tools%2Fsrc%2Fmain%2Fresources%2Ftestdb.sql?ref=749d1774c7979e962ac3894ef94c37b41a6a4962","patch":"@@ -18,3 +18,12 @@ password VARCHAR(255) NOT NULL,\n status VARCHAR(5));\n \n INSERT INTO test VALUES ('testuser1', 'password', 'false');\n+\n+-- this table must be created in order to provide a specific test for issueSYNCOPE68\n+DROP TABLE test2 IF EXISTS;\n+CREATE TABLE test2 (\n+id VARCHAR(50) PRIMARY KEY,\n+password VARCHAR(255) NOT NULL,\n+status VARCHAR(5));\n+\n+INSERT INTO test2 VALUES ('testuser2', 'password321', 'false');"},{"sha":"565c1bef2700e03a2febd8c2a9e603a4d54170dd","filename":"client/src/main/java/org/apache/syncope/client/util/AttributableOperations.java","status":"modified","additions":42,"deletions":13,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/749d1774c7979e962ac3894ef94c37b41a6a4962/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/749d1774c7979e962ac3894ef94c37b41a6a4962/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java?ref=749d1774c7979e962ac3894ef94c37b41a6a4962","patch":"@@ -99,8 +99,11 @@ private static void populate(final Map<String, AttributeTO> updatedAttrs,\n         }\n     }\n \n-    private static void diff(final AbstractAttributableTO updated, final AbstractAttributableTO original,\n-            final AbstractAttributableMod result) {\n+    private static void diff(\n+            final AbstractAttributableTO updated,\n+            final AbstractAttributableTO original,\n+            final AbstractAttributableMod result,\n+            final boolean incremental) {\n \n         // 1. check same id\n         if (updated.getId() != original.getId()) {\n@@ -114,7 +117,10 @@ private static void diff(final AbstractAttributableTO updated, final AbstractAtt\n \n         Set<String> originalAttrNames = new HashSet<String>(originalAttrs.keySet());\n         originalAttrNames.removeAll(updatedAttrs.keySet());\n-        result.setAttributesToBeRemoved(originalAttrNames);\n+\n+        if (!incremental) {\n+            result.setAttributesToBeRemoved(originalAttrNames);\n+        }\n \n         Set<String> emptyUpdatedAttrs = new HashSet<String>();\n         for (Map.Entry<String, AttributeTO> entry : updatedAttrs.entrySet()) {\n@@ -136,7 +142,10 @@ private static void diff(final AbstractAttributableTO updated, final AbstractAtt\n \n         originalAttrNames = new HashSet<String>(originalAttrs.keySet());\n         originalAttrNames.removeAll(updatedAttrs.keySet());\n-        result.setDerivedAttributesToBeRemoved(originalAttrNames);\n+\n+        if (!incremental) {\n+            result.setDerivedAttributesToBeRemoved(originalAttrNames);\n+        }\n \n         Set<String> updatedAttrNames = new HashSet<String>(updatedAttrs.keySet());\n         updatedAttrNames.removeAll(originalAttrs.keySet());\n@@ -148,7 +157,10 @@ private static void diff(final AbstractAttributableTO updated, final AbstractAtt\n \n         originalAttrNames = new HashSet<String>(originalAttrs.keySet());\n         originalAttrNames.removeAll(updatedAttrs.keySet());\n-        result.setVirtualAttributesToBeRemoved(originalAttrNames);\n+\n+        if (!incremental) {\n+            result.setVirtualAttributesToBeRemoved(originalAttrNames);\n+        }\n \n         populate(updatedAttrs, originalAttrs, result, true);\n \n@@ -160,7 +172,10 @@ private static void diff(final AbstractAttributableTO updated, final AbstractAtt\n         result.setResourcesToBeAdded(updatedRes);\n \n         originalRes.removeAll(updated.getResources());\n-        result.setResourcesToBeRemoved(originalRes);\n+\n+        if (!incremental) {\n+            result.setResourcesToBeRemoved(originalRes);\n+        }\n     }\n \n     /**\n@@ -171,9 +186,21 @@ private static void diff(final AbstractAttributableTO updated, final AbstractAtt\n      * @return UserMod containing differences\n      */\n     public static UserMod diff(final UserTO updated, final UserTO original) {\n+        return diff(updated, original, false);\n+    }\n+\n+    /**\n+     * Calculate modifications needed by first in order to be equal to second.\n+     *\n+     * @param updated updated UserTO\n+     * @param original original UserTO\n+     * @param incremental perform incremental diff (without removing existing info)\n+     * @return UserMod containing differences\n+     */\n+    public static UserMod diff(final UserTO updated, final UserTO original, boolean incremental) {\n         UserMod result = new UserMod();\n \n-        diff(updated, original, result);\n+        diff(updated, original, result, incremental);\n \n         // 1. password\n         if (original.getPassword() != null && !original.getPassword().equals(updated.getPassword())) {\n@@ -196,7 +223,7 @@ public static UserMod diff(final UserTO updated, final UserTO original) {\n             membMod.setRole(entry.getValue().getRoleId());\n \n             if (originalMembs.containsKey(entry.getKey())) {\n-                diff(entry.getValue(), originalMembs.get(entry.getKey()), membMod);\n+                diff(entry.getValue(), originalMembs.get(entry.getKey()), membMod, false);\n             } else {\n                 for (AttributeTO attr : entry.getValue().getAttributes()) {\n \n@@ -232,10 +259,12 @@ public static UserMod diff(final UserTO updated, final UserTO original) {\n             }\n         }\n \n-        Set<Long> originalRoles = new HashSet<Long>(originalMembs.keySet());\n-        originalRoles.removeAll(updatedMembs.keySet());\n-        for (Long roleId : originalRoles) {\n-            result.addMembershipToBeRemoved(originalMembs.get(roleId).getId());\n+        if (!incremental) {\n+            Set<Long> originalRoles = new HashSet<Long>(originalMembs.keySet());\n+            originalRoles.removeAll(updatedMembs.keySet());\n+            for (Long roleId : originalRoles) {\n+                result.addMembershipToBeRemoved(originalMembs.get(roleId).getId());\n+            }\n         }\n \n         return result;\n@@ -251,7 +280,7 @@ public static UserMod diff(final UserTO updated, final UserTO original) {\n     public static RoleMod diff(final RoleTO updated, final RoleTO original) {\n         RoleMod result = new RoleMod();\n \n-        diff(updated, original, result);\n+        diff(updated, original, result, false);\n \n         // 1. inheritance\n         result.setInheritAccountPolicy(updated.isInheritAccountPolicy());"},{"sha":"43b69b17dee74580f0a22cedde6158a5bc96f958","filename":"core/src/main/java/org/apache/syncope/core/util/ConnObjectUtil.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/749d1774c7979e962ac3894ef94c37b41a6a4962/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnObjectUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/749d1774c7979e962ac3894ef94c37b41a6a4962/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnObjectUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FConnObjectUtil.java?ref=749d1774c7979e962ac3894ef94c37b41a6a4962","patch":"@@ -121,7 +121,9 @@ public UserMod getUserMod(final Long userId, final ConnectorObject obj, final Sy\n             }\n         }\n \n-        return AttributableOperations.diff(updated, original);\n+        final UserMod userMod = AttributableOperations.diff(updated, original, true);\n+\n+        return userMod;\n     }\n \n     private UserTO getUserTOFromConnObject(final ConnectorObject obj, final SyncTask syncTask) {"},{"sha":"8544b21c5ee50dd89257dac7b1bb71d1e9ea65b2","filename":"core/src/main/resources/META-INF/orm.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/749d1774c7979e962ac3894ef94c37b41a6a4962/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/749d1774c7979e962ac3894ef94c37b41a6a4962/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml?ref=749d1774c7979e962ac3894ef94c37b41a6a4962","patch":"@@ -41,7 +41,7 @@ under the License.\n     <attributes>\n       <id name=\"id\">\n         <generated-value generator=\"SEQ_SyncopeRole\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_SyncopeRole\" pk-column-value=\"SEQ_SyncopeRole\" initial-value=\"10\"/>\n+        <table-generator name=\"SEQ_SyncopeRole\" pk-column-value=\"SEQ_SyncopeRole\" initial-value=\"100\"/>\n       </id>\n     </attributes>\n   </entity>\n@@ -50,7 +50,7 @@ under the License.\n     <attributes>\n       <id name=\"id\">\n         <generated-value generator=\"SEQ_Membership\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_Membership\" pk-column-value=\"SEQ_Membership\" initial-value=\"10\"/>\n+        <table-generator name=\"SEQ_Membership\" pk-column-value=\"SEQ_Membership\" initial-value=\"100\"/>\n       </id>\n     </attributes>\n   </entity>"},{"sha":"db9e42d5f28206dea0cccff5646174439cfa7781","filename":"core/src/main/resources/META-INF/orm.xml.oracle","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/749d1774c7979e962ac3894ef94c37b41a6a4962/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.oracle","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/749d1774c7979e962ac3894ef94c37b41a6a4962/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.oracle","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Form.xml.oracle?ref=749d1774c7979e962ac3894ef94c37b41a6a4962","patch":"@@ -41,7 +41,7 @@ under the License.\n     <attributes>\n       <id name=\"id\">\n         <generated-value generator=\"SEQ_SyncopeRole\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_SyncopeRole\" pk-column-value=\"SEQ_SyncopeRole\" initial-value=\"10\"/>\n+        <table-generator name=\"SEQ_SyncopeRole\" pk-column-value=\"SEQ_SyncopeRole\" initial-value=\"100\"/>\n       </id>\n     </attributes>\n   </entity>\n@@ -50,7 +50,7 @@ under the License.\n     <attributes>\n       <id name=\"id\">\n         <generated-value generator=\"SEQ_Membership\" strategy=\"TABLE\"/>\n-        <table-generator name=\"SEQ_Membership\" pk-column-value=\"SEQ_Membership\" initial-value=\"10\"/>\n+        <table-generator name=\"SEQ_Membership\" pk-column-value=\"SEQ_Membership\" initial-value=\"100\"/>\n       </id>\n     </attributes>\n   </entity>"},{"sha":"d9454519eb94edad210b9d7e5705c23c96a1c892","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/EntitlementTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/749d1774c7979e962ac3894ef94c37b41a6a4962/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/749d1774c7979e962ac3894ef94c37b41a6a4962/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java?ref=749d1774c7979e962ac3894ef94c37b41a6a4962","patch":"@@ -43,7 +43,7 @@ public class EntitlementTest extends AbstractTest {\n     public void findAll() {\n         List<Entitlement> list = entitlementDAO.findAll();\n         // 69 real entitlements + 9 role entitlements\n-        assertEquals(\"did not get expected number of entitlements \", 78, list.size());\n+        assertEquals(\"did not get expected number of entitlements \", 79, list.size());\n     }\n \n     @Test"},{"sha":"c2553340f299421232a9238a5993858d8331d5ae","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/RoleTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/749d1774c7979e962ac3894ef94c37b41a6a4962/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/749d1774c7979e962ac3894ef94c37b41a6a4962/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleTest.java?ref=749d1774c7979e962ac3894ef94c37b41a6a4962","patch":"@@ -43,7 +43,7 @@ public class RoleTest extends AbstractTest {\n     @Test\n     public void findAll() {\n         List<SyncopeRole> list = roleDAO.findAll();\n-        assertEquals(\"did not get expected number of roles \", 9, list.size());\n+        assertEquals(\"did not get expected number of roles \", 10, list.size());\n     }\n \n     @Test"},{"sha":"65ca9b3621fb4e6d98eb5728ba6a1f6d9776c2e5","filename":"core/src/test/java/org/apache/syncope/core/persistence/dao/TaskTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/749d1774c7979e962ac3894ef94c37b41a6a4962/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/749d1774c7979e962ac3894ef94c37b41a6a4962/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FTaskTest.java?ref=749d1774c7979e962ac3894ef94c37b41a6a4962","patch":"@@ -71,7 +71,7 @@ public void findAll() {\n         assertEquals(1, sclist.size());\n \n         List<SyncTask> sylist = taskDAO.findAll(SyncTask.class);\n-        assertEquals(2, sylist.size());\n+        assertEquals(3, sylist.size());\n \n         ExternalResource resource = resourceDAO.find(\"ws-target-resource-2\");\n         assertNotNull(resource);"},{"sha":"125f5f94e993453328452f7d80079eb98b64e1a3","filename":"core/src/test/java/org/apache/syncope/core/persistence/relationships/ConnInstanceTest.java","status":"modified","additions":13,"deletions":5,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/749d1774c7979e962ac3894ef94c37b41a6a4962/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FConnInstanceTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/749d1774c7979e962ac3894ef94c37b41a6a4962/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FConnInstanceTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Frelationships%2FConnInstanceTest.java?ref=749d1774c7979e962ac3894ef94c37b41a6a4962","patch":"@@ -63,7 +63,7 @@ public void deleteCascade() {\n \n     /**\n      * Connector change used to miss connector bean registration.\n-     * \n+     *\n      * http://code.google.com/p/syncope/issues/detail?id=176\n      */\n     @Test\n@@ -74,8 +74,12 @@ public void issue176() {\n \n         List<ExternalResource> resources = connInstance.getResources();\n         assertNotNull(resources);\n-        assertEquals(1, resources.size());\n-        assertEquals(\"ws-target-resource-nopropagation\", resources.get(0).getName());\n+        assertEquals(4, resources.size());\n+        assertTrue(\n+                \"ws-target-resource-nopropagation\".equalsIgnoreCase(resources.get(0).getName())\n+                || \"ws-target-resource-nopropagation\".equalsIgnoreCase(resources.get(1).getName())\n+                || \"ws-target-resource-nopropagation\".equalsIgnoreCase(resources.get(2).getName())\n+                || \"ws-target-resource-nopropagation\".equalsIgnoreCase(resources.get(3).getName()));\n \n         connInstance.addCapability(ConnectorCapability.SEARCH);\n \n@@ -85,7 +89,11 @@ public void issue176() {\n \n         resources = connInstance.getResources();\n         assertNotNull(resources);\n-        assertEquals(1, resources.size());\n-        assertEquals(\"ws-target-resource-nopropagation\", resources.get(0).getName());\n+        assertEquals(4, resources.size());\n+        assertTrue(\n+                \"ws-target-resource-nopropagation\".equalsIgnoreCase(resources.get(0).getName())\n+                || \"ws-target-resource-nopropagation\".equalsIgnoreCase(resources.get(1).getName())\n+                || \"ws-target-resource-nopropagation\".equalsIgnoreCase(resources.get(2).getName())\n+                || \"ws-target-resource-nopropagation\".equalsIgnoreCase(resources.get(3).getName()));\n     }\n }"},{"sha":"d5d80716c53ab92148376692c44b94a3308c3b29","filename":"core/src/test/java/org/apache/syncope/core/rest/ConnInstanceTestITCase.java","status":"modified","additions":13,"deletions":15,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/749d1774c7979e962ac3894ef94c37b41a6a4962/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/749d1774c7979e962ac3894ef94c37b41a6a4962/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java?ref=749d1774c7979e962ac3894ef94c37b41a6a4962","patch":"@@ -161,10 +161,9 @@ public void create() {\n         // check also for the deletion of the created object\n         try {\n             ConnInstanceTO deletedConn = restTemplate.getForObject(\n-                BASE_URL + \"connector/delete/{connectorId}.json\", \n-                ConnInstanceTO.class, \n-                String.valueOf(actual.getId())\n-            );\n+                    BASE_URL + \"connector/delete/{connectorId}.json\",\n+                    ConnInstanceTO.class,\n+                    String.valueOf(actual.getId()));\n             assertNotNull(deletedConn);\n         } catch (HttpStatusCodeException e) {\n             LOG.error(\"delete failed\", e);\n@@ -175,8 +174,8 @@ public void create() {\n \n         // check the non existence\n         try {\n-            restTemplate.getForObject(BASE_URL + \"connector/read/{connectorId}\", ConnInstanceTO.class, String\n-                    .valueOf(actual.getId()));\n+            restTemplate.getForObject(BASE_URL + \"connector/read/{connectorId}\", ConnInstanceTO.class,\n+                    String.valueOf(actual.getId()));\n         } catch (HttpStatusCodeException e) {\n             assertEquals(e.getStatusCode(), HttpStatus.NOT_FOUND);\n         }\n@@ -228,8 +227,8 @@ public void update() {\n \n         assertNotNull(actual);\n \n-        actual = restTemplate.getForObject(BASE_URL + \"connector/read/{connectorId}\", ConnInstanceTO.class, String\n-                .valueOf(actual.getId()));\n+        actual = restTemplate.getForObject(BASE_URL + \"connector/read/{connectorId}\", ConnInstanceTO.class, String.\n+                valueOf(actual.getId()));\n \n         assertNotNull(actual);\n         assertEquals(actual.getBundleName(), connectorTO.getBundleName());\n@@ -243,16 +242,16 @@ public void issueSYNCOPE10() {\n         // Copy resource and connector in order to create new objects.\n         // ----------------------------------\n         // Retrieve a connector instance template.\n-        ConnInstanceTO connInstanceTO = restTemplate.getForObject(BASE_URL + \"connector/read/{connectorId}\",\n-                ConnInstanceTO.class, 103L);\n+        ConnInstanceTO connInstanceTO =\n+                restTemplate.getForObject(BASE_URL + \"connector/read/{connectorId}\", ConnInstanceTO.class, 103L);\n \n         assertNotNull(connInstanceTO);\n \n         // check for resource\n         List<ResourceTO> resources = Arrays.asList(restTemplate.getForObject(BASE_URL\n                 + \"resource/list.json?connInstanceId=103\", ResourceTO[].class));\n \n-        assertEquals(1, resources.size());\n+        assertEquals(4, resources.size());\n \n         // Retrieve a resource TO template.\n         ResourceTO resourceTO = resources.get(0);\n@@ -268,8 +267,8 @@ public void issueSYNCOPE10() {\n         // ----------------------------------\n         // Create a new connector instance.\n         // ----------------------------------\n-        connInstanceTO = restTemplate.postForObject(BASE_URL + \"connector/create.json\", connInstanceTO,\n-                ConnInstanceTO.class);\n+        connInstanceTO =\n+                restTemplate.postForObject(BASE_URL + \"connector/create.json\", connInstanceTO, ConnInstanceTO.class);\n \n         assertNotNull(connInstanceTO);\n         assertTrue(connInstanceTO.getCapabilities().isEmpty());\n@@ -522,8 +521,7 @@ public void getSchemaNames() {\n         assertNotNull(schemaNames);\n         assertFalse(schemaNames.isEmpty());\n \n-        schemaNames = Arrays.asList(restTemplate\n-                .postForObject(BASE_URL + \"connector/schema/list\", conn, String[].class));\n+        schemaNames = Arrays.asList(restTemplate.postForObject(BASE_URL + \"connector/schema/list\", conn, String[].class));\n         assertNotNull(schemaNames);\n         assertEquals(0, schemaNames.size());\n "},{"sha":"f883d08b106f3d313356e8226ab8feb4db167279","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":120,"deletions":0,"changes":120,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/749d1774c7979e962ac3894ef94c37b41a6a4962/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/749d1774c7979e962ac3894ef94c37b41a6a4962/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=749d1774c7979e962ac3894ef94c37b41a6a4962","patch":"@@ -570,4 +570,124 @@ public void issueSYNCOPE86() {\n         assertNotNull(taskTO);\n         assertEquals(1, taskTO.getExecutions().size());\n     }\n+\n+    @Test\n+    public void issueSYNCOPE68() {\n+        //-----------------------------\n+        // Create a new user ... it should be updated applying sync policy\n+        //-----------------------------\n+        UserTO userTO = new UserTO();\n+        userTO.setPassword(\"password123\");\n+        userTO.setUsername(\"testuser2\");\n+\n+        AttributeTO firstnameTO = new AttributeTO();\n+        firstnameTO.setSchema(\"firstname\");\n+        firstnameTO.addValue(\"testuser2\");\n+        userTO.addAttribute(firstnameTO);\n+\n+        AttributeTO surnameTO = new AttributeTO();\n+        surnameTO.setSchema(\"surname\");\n+        surnameTO.addValue(\"testuser2\");\n+        userTO.addAttribute(surnameTO);\n+\n+        AttributeTO typeTO = new AttributeTO();\n+        typeTO.setSchema(\"type\");\n+        typeTO.addValue(\"a type\");\n+        userTO.addAttribute(typeTO);\n+\n+        AttributeTO fullnameTO = new AttributeTO();\n+        fullnameTO.setSchema(\"fullname\");\n+        fullnameTO.addValue(\"testuser2\");\n+        userTO.addAttribute(fullnameTO);\n+\n+        AttributeTO userIdTO = new AttributeTO();\n+        userIdTO.setSchema(\"userId\");\n+        userIdTO.addValue(\"testuser2@syncope.apache.org\");\n+        userTO.addAttribute(userIdTO);\n+\n+        AttributeTO emailTO = new AttributeTO();\n+        emailTO.setSchema(\"email\");\n+        emailTO.addValue(\"testuser2@syncope.apache.org\");\n+        userTO.addAttribute(emailTO);\n+\n+        userTO.addResource(\"ws-target-resource-nopropagation2\");\n+        userTO.addResource(\"ws-target-resource-nopropagation4\");\n+\n+        MembershipTO membershipTO = new MembershipTO();\n+        membershipTO.setRoleId(7L);\n+\n+        userTO.addMembership(membershipTO);\n+\n+        userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n+        assertNotNull(userTO);\n+        assertEquals(\"testuser2\", userTO.getUsername());\n+        assertEquals(1, userTO.getMemberships().size());\n+        assertEquals(3, userTO.getResources().size());\n+        //-----------------------------\n+\n+        //-----------------------------\n+        //  add user template\n+        //-----------------------------\n+        UserTO template = new UserTO();\n+\n+        membershipTO = new MembershipTO();\n+        membershipTO.setRoleId(10L);\n+\n+        template.addMembership(membershipTO);\n+\n+        template.addResource(\"ws-target-resource-nopropagation4\");\n+        //-----------------------------\n+\n+        // Update sync task\n+        SyncTaskTO task = restTemplate.getForObject(BASE_URL + \"task/read/{taskId}\", SyncTaskTO.class, 9);\n+        assertNotNull(task);\n+\n+        task.setUserTemplate(template);\n+\n+        SyncTaskTO actual = restTemplate.postForObject(BASE_URL + \"task/update/sync\", task, SyncTaskTO.class);\n+        assertNotNull(actual);\n+        assertEquals(task.getId(), actual.getId());\n+        assertFalse(actual.getUserTemplate().getResources().isEmpty());\n+        assertFalse(actual.getUserTemplate().getMemberships().isEmpty());\n+\n+        // read executions before sync (dryrun test could be executed before)\n+        int preSyncSize = actual.getExecutions().size();\n+\n+        TaskExecTO execution =\n+                restTemplate.postForObject(BASE_URL + \"task/execute/{taskId}\", null, TaskExecTO.class, actual.getId());\n+        assertEquals(\"JOB_FIRED\", execution.getStatus());\n+\n+        int i = 0;\n+        int maxit = 20;\n+\n+        // wait for sync completion (executions incremented)\n+        do {\n+            try {\n+                Thread.sleep(1000);\n+            } catch (InterruptedException e) {\n+            }\n+\n+            actual = restTemplate.getForObject(BASE_URL + \"task/read/{taskId}\", SyncTaskTO.class, actual.getId());\n+\n+            assertNotNull(actual);\n+            assertNotNull(actual.getExecutions());\n+\n+            i++;\n+\n+        } while (preSyncSize == actual.getExecutions().size() && i < maxit);\n+\n+        assertEquals(1, actual.getExecutions().size());\n+\n+        final String status = actual.getExecutions().get(0).getStatus();\n+        assertNotNull(status);\n+        assertTrue(PropagationTaskExecStatus.valueOf(status).isSuccessful());\n+\n+        userTO = restTemplate.getForObject(BASE_URL + \"user/readByUsername/{username}.json\", UserTO.class, \"testuser2\");\n+\n+        assertNotNull(userTO);\n+        assertEquals(\"testuser2@syncope.apache.org\", userTO.getAttributeMap().get(\"userId\").getValues().get(0));\n+\n+        assertEquals(2, userTO.getMemberships().size());\n+        assertEquals(4, userTO.getResources().size());\n+    }\n }"},{"sha":"df4e486b79cf01aa96bd4b645886a88ce5b3d92e","filename":"core/src/test/resources/content.xml","status":"modified","additions":59,"deletions":5,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/749d1774c7979e962ac3894ef94c37b41a6a4962/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/749d1774c7979e962ac3894ef94c37b41a6a4962/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=749d1774c7979e962ac3894ef94c37b41a6a4962","patch":"@@ -65,6 +65,10 @@ under the License.\n                inheritVirtualAttributes=\"1\"\n                passwordPolicy_id=\"4\"/>\n   <SyncopeRole id=\"9\" name=\"roleForWorkflowApproval\" parent_id=\"1\"/>\n+  <SyncopeRole id=\"10\"\n+               name=\"managingConsultant\" parent_id=\"6\"\n+               inheritAttributes=\"1\" inheritDerivedAttributes=\"1\" inheritVirtualAttributes=\"1\"\n+               inheritPasswordPolicy=\"1\" inheritAccountPolicy=\"1\"/>\n \n   <Membership id=\"1\" syncopeUser_id=\"1\" syncopeRole_id=\"1\"/>\n   <Membership id=\"2\" syncopeUser_id=\"2\" syncopeRole_id=\"1\"/>\n@@ -235,6 +239,7 @@ under the License.\n   <ConnInstance_capabilities ConnInstance_id=\"101\" capabilities=\"TWO_PHASES_UPDATE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"101\" capabilities=\"TWO_PHASES_DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"101\" capabilities=\"SEARCH\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"101\" capabilities=\"SYNC\"/>\n \n   <ConnInstance id=\"102\" displayName=\"ConnInstance102\"\n                 bundleName=\"org.connid.bundles.soap\"\n@@ -280,6 +285,14 @@ under the License.\n   <ConnInstance_capabilities ConnInstance_id=\"105\" capabilities=\"ONE_PHASE_DELETE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"105\" capabilities=\"SEARCH\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"105\" capabilities=\"ONE_PHASE_CREATE\"/>\n+  \n+  <ConnInstance id=\"106\" displayName=\"H2-test2\"\n+                  bundleName=\"org.connid.bundles.db.table\"\n+                  connectorName=\"org.identityconnectors.databasetable.DatabaseTableConnector\"\n+                  version=\"${connid.db.table.version}\"\n+                  xmlConfiguration=\"%3Cset%3E%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Euser%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Esa%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EenabledStatusValue%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Etrue%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EstatusColumn%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Estatus%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EdisabledStatusValue%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Efalse%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EkeyColumn%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Eid%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EjdbcUrlTemplate%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Ejdbc%3Ah2%3Atcp%3A//localhost%3A9092/testdb%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EpasswordColumn%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Epassword%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EdefaultStatusValue%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Etrue%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Etable%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Etest2%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3Epassword%3C/name%3E%0A++++++%3Ctype%3Eorg.identityconnectors.common.security.GuardedString%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Esa%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EjdbcDriver%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Eorg.h2.Driver%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EcipherAlgorithm%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.String%3C/type%3E%0A++++++%3Crequired%3Etrue%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3EMD5%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%0A++%3Corg.apache.syncope.types.ConnConfProperty%3E%0A++++%3Cschema%3E%0A++++++%3Cname%3EretrievePassword%3C/name%3E%0A++++++%3Ctype%3Ejava.lang.Boolean%3C/type%3E%0A++++++%3Crequired%3Efalse%3C/required%3E%0A++++%3C/schema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Etrue%3C/java.lang.String%3E%0A%3C/values%3E%0A%0A++++%3Coverridable%3Efalse%3C/overridable%3E%0A++%3C/org.apache.syncope.types.ConnConfProperty%3E%0A%3C/set%3E%0A\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"106\" capabilities=\"SEARCH\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"106\" capabilities=\"SYNC\"/>\n     \n   <ExternalResource name=\"ws-target-resource-1\" connector_id=\"100\" forceMandatoryConstraint=\"0\" propagationMode=\"TWO_PHASES\"\n                     propagationPriority=\"0\" propagationPrimary=\"1\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"/>\n@@ -293,24 +306,36 @@ under the License.\n                     propagationPriority=\"2\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"/>\n   <ExternalResource name=\"ws-target-resource-update\" connector_id=\"100\" forceMandatoryConstraint=\"1\" propagationMode=\"TWO_PHASES\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"/>\n-  <ExternalResource name=\"ws-target-resource-nopropagation\" connector_id=\"103\" forceMandatoryConstraint=\"1\" propagationMode=\"TWO_PHASES\"\n-                    propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" passwordPolicy_id=\"4\"/>\n   <ExternalResource name=\"resource-testdb\" connector_id=\"101\" forceMandatoryConstraint=\"1\" propagationMode=\"ONE_PHASE\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"/>\n+  <ExternalResource name=\"resource-testdb2\" connector_id=\"106\" forceMandatoryConstraint=\"1\" propagationMode=\"ONE_PHASE\"\n+                    propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"/>\n   <ExternalResource name=\"resource-csv\" connector_id=\"104\" forceMandatoryConstraint=\"0\" propagationMode=\"ONE_PHASE\" syncPolicy_id=\"3\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"/>\n   <ExternalResource name=\"ws-target-resource-update-resetsynctoken\" connector_id=\"100\" forceMandatoryConstraint=\"1\" propagationMode=\"TWO_PHASES\"\n                     propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" serializedSyncToken=\"%3Corg.identityconnectors.framework.common.objects.SyncToken%2F%3E\"/>\n   <ExternalResource name=\"resource-ldap\" connector_id=\"105\" forceMandatoryConstraint=\"1\" propagationMode=\"ONE_PHASE\"\n                     propagationPriority=\"0\" propagationPrimary=\"1\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\"\n                     accountlink=\"&apos;uid=&apos; + username + &apos;,ou=people,o=isp&apos;\"/>\n-                      \n+  <ExternalResource name=\"ws-target-resource-nopropagation\" connector_id=\"103\" forceMandatoryConstraint=\"1\" propagationMode=\"TWO_PHASES\"\n+                    propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" passwordPolicy_id=\"4\"/>\n+  \n+  <!-- The following three resources has been added to verify the issue SYNCOPE-68 -->\n+  <ExternalResource name=\"ws-target-resource-nopropagation2\" connector_id=\"103\" forceMandatoryConstraint=\"1\" propagationMode=\"TWO_PHASES\"\n+                    propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" />\n+  <ExternalResource name=\"ws-target-resource-nopropagation3\" connector_id=\"103\" forceMandatoryConstraint=\"1\" propagationMode=\"TWO_PHASES\"\n+                    propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" />\n+  <ExternalResource name=\"ws-target-resource-nopropagation4\" connector_id=\"103\" forceMandatoryConstraint=\"1\" propagationMode=\"TWO_PHASES\"\n+                    propagationPriority=\"0\" propagationPrimary=\"0\" createTraceLevel=\"ALL\" deleteTraceLevel=\"ALL\" updateTraceLevel=\"ALL\" syncTraceLevel=\"ALL\" />\n+                    \n   <SyncopeUser_ExternalResource user_id=\"3\" resource_name=\"ws-target-resource-delete\" />\n   <SyncopeRole_ExternalResource role_id=\"3\" resource_name=\"ws-target-resource-list-mappings-1\" />\n   <SyncopeUser_ExternalResource user_id=\"3\" resource_name=\"ws-target-resource-2\" />\n   <SyncopeRole_ExternalResource role_id=\"8\" resource_name=\"ws-target-resource-2\" />\n   <SyncopeRole_ExternalResource role_id=\"3\" resource_name=\"ws-target-resource-list-mappings-2\" />\n   <SyncopeUser_ExternalResource user_id=\"3\" resource_name=\"ws-target-resource-1\" />\n+  <SyncopeRole_ExternalResource role_id=\"7\" resource_name=\"ws-target-resource-nopropagation\" />\n+  <SyncopeRole_ExternalResource role_id=\"10\" resource_name=\"ws-target-resource-nopropagation3\" />\n \n   <SchemaMapping id=\"99\" extAttrName=\"userid\"\n                  resource_name=\"ws-target-resource-1\"\n@@ -396,15 +421,39 @@ under the License.\n                  resource_name=\"ws-target-resource-nopropagation\"\n                  intAttrName=\"fullname\" intMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n                  accountid=\"1\" password=\"0\"/>\n+                 \n+  <SchemaMapping id=\"116\" extAttrName=\"name\"\n+                 resource_name=\"ws-target-resource-nopropagation2\"\n+                 intAttrName=\"fullname\" intMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n+                 accountid=\"1\" password=\"0\"/>\n+                 \n+  <SchemaMapping id=\"117\" extAttrName=\"name\"\n+                 resource_name=\"ws-target-resource-nopropagation3\"\n+                 intAttrName=\"fullname\" intMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n+                 accountid=\"1\" password=\"0\"/>\n+                 \n+  <SchemaMapping id=\"118\" extAttrName=\"name\"\n+                 resource_name=\"ws-target-resource-nopropagation4\"\n+                 intAttrName=\"fullname\" intMappingType=\"UserSchema\" mandatoryCondition=\"true\"\n+                 accountid=\"1\" password=\"0\"/>\n                    \n-  <SchemaMapping id=\"116\" extAttrName=\"ID\"\n+  <SchemaMapping id=\"119\" extAttrName=\"ID\"\n                  resource_name=\"resource-testdb\"\n                  intMappingType=\"Username\" mandatoryCondition=\"true\"\n                  accountid=\"1\" password=\"0\"/>\n-  <SchemaMapping id=\"117\" extAttrName=\"PASSWORD\"\n+  <SchemaMapping id=\"120\" extAttrName=\"PASSWORD\"\n                  resource_name=\"resource-testdb\"\n                  intMappingType=\"Password\" mandatoryCondition=\"true\"\n                  accountid=\"0\" password=\"1\"/>\n+                 \n+  <SchemaMapping id=\"121\" extAttrName=\"ID\"\n+                 resource_name=\"resource-testdb2\"\n+                 intMappingType=\"Username\" mandatoryCondition=\"true\"\n+                 accountid=\"1\" password=\"0\"/>\n+  <SchemaMapping id=\"122\" extAttrName=\"PASSWORD\"\n+                 resource_name=\"resource-testdb2\"\n+                 intMappingType=\"Password\" mandatoryCondition=\"true\"\n+                 accountid=\"0\" password=\"1\"/>\n                    \n   <SchemaMapping id=\"200\" extAttrName=\"id\"\n                  resource_name=\"resource-csv\"\n@@ -494,6 +543,10 @@ under the License.\n         jobClassName=\"org.apache.syncope.core.scheduling.SyncJob\"/>\n   <Task DTYPE=\"NotificationTask\" id=\"8\" sender=\"admin@prova.org\" subject=\"Notification for SYNCOPE-81\" \n         textBody=\"NOTIFICATION-81\" htmlBody=\"NOTIFICATION-81\" traceLevel=\"ALL\"/>\n+  <Task DTYPE=\"SyncTask\" id=\"9\" resource_name=\"resource-testdb2\"\n+        performCreate=\"1\" performUpdate=\"1\" performDelete=\"0\" syncStatus=\"1\" fullReconciliation=\"1\"\n+        jobClassName=\"org.apache.syncope.core.scheduling.SyncJob\"/>\n+        \n   <NotificationTask_Recipients notificationtask_id=\"8\" element=\"recipient@prova.org\"/>\n \n   <!-- Authentication and authorization -->\n@@ -575,6 +628,7 @@ under the License.\n   <Entitlement name=\"ROLE_7\"/>\n   <Entitlement name=\"ROLE_8\"/>\n   <Entitlement name=\"ROLE_9\"/>\n+  <Entitlement name=\"ROLE_10\"/>\n \n   <SyncopeRole_Entitlement entitlement_name=\"base\" role_id=\"1\"/>\n   <SyncopeRole_Entitlement entitlement_name=\"advanced\" role_id=\"1\"/>"}]}