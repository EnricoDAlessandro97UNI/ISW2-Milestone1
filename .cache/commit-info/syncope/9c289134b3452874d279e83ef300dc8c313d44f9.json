{"sha":"9c289134b3452874d279e83ef300dc8c313d44f9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjljMjg5MTM0YjM0NTI4NzRkMjc5ZTgzZWYzMDBkYzhjMzEzZDQ0Zjk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-09-22T08:12:45Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-09-22T08:15:38Z"},"message":"[SYNCOPE-1212] Clearing and refactoring for easier extensions","tree":{"sha":"706d971e63e1a98c33cdc14e50e3603e0fc3eadb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/706d971e63e1a98c33cdc14e50e3603e0fc3eadb"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9c289134b3452874d279e83ef300dc8c313d44f9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9c289134b3452874d279e83ef300dc8c313d44f9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9c289134b3452874d279e83ef300dc8c313d44f9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9c289134b3452874d279e83ef300dc8c313d44f9/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"9e24b8eebdcdf78f55956cab8db99501f0d555a7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9e24b8eebdcdf78f55956cab8db99501f0d555a7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9e24b8eebdcdf78f55956cab8db99501f0d555a7"}],"stats":{"total":303,"additions":207,"deletions":96},"files":[{"sha":"713fee0d1520eee3c94761cfc9e94d9cc9e86923","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/content/ContentLoaderHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FContentLoaderHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FContentLoaderHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fcontent%2FContentLoaderHandler.java?ref=9c289134b3452874d279e83ef300dc8c313d44f9","patch":"@@ -189,7 +189,7 @@ public void startElement(final String uri, final String localName, final String\n         try {\n             jdbcTemplate.update(query.toString(), getParameters(qName, atts));\n         } catch (DataAccessException e) {\n-            LOG.error(\"While trying to perform {}\", query, e);\n+            LOG.error(\"While trying to perform {} with params {}\", query, getParameters(qName, atts), e);\n             if (!continueOnError) {\n                 throw e;\n             }"},{"sha":"dc35f9d9fec06c8b85e4db5e1bd833f2e7a0db93","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/task/AbstractProvisioningTask.java","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractProvisioningTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractProvisioningTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2Ftask%2FAbstractProvisioningTask.java?ref=9c289134b3452874d279e83ef300dc8c313d44f9","patch":"@@ -79,16 +79,6 @@ public abstract class AbstractProvisioningTask extends JPASchedTask implements P\n     @Enumerated(EnumType.STRING)\n     protected MatchingRule matchingRule;\n \n-    @Override\n-    public String getJobDelegateClassName() {\n-        return null;\n-    }\n-\n-    @Override\n-    public void setJobDelegateClassName(final String jobDelegateClassName) {\n-        // fixed, cannot be changed\n-    }\n-\n     @Override\n     public ExternalResource getResource() {\n         return resource;"},{"sha":"6f386926a45098161133bcb7f5d555ecce973d2d","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/RealmPullResultHandler.java","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FRealmPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FRealmPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FRealmPullResultHandler.java?ref=9c289134b3452874d279e83ef300dc8c313d44f9","patch":"@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.api.pushpull;\n+\n+public interface RealmPullResultHandler extends SyncopePullResultHandler {\n+\n+}"},{"sha":"e9942139a2464c90d3b882f43018d92d4373e89f","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/RealmPushResultHandler.java","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FRealmPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FRealmPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FRealmPushResultHandler.java?ref=9c289134b3452874d279e83ef300dc8c313d44f9","patch":"@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.provisioning.api.pushpull;\n+\n+public interface RealmPushResultHandler extends SyncopePushResultHandler {\n+\n+}"},{"sha":"2066cb2d0f2226c54548d715e6fc5891b6e00256","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/TaskDataBinderImpl.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FTaskDataBinderImpl.java?ref=9c289134b3452874d279e83ef300dc8c313d44f9","patch":"@@ -110,7 +110,9 @@ private void fill(final ProvisioningTask task, final AbstractProvisioningTaskTO\n             PushTask pushTask = (PushTask) task;\n             final PushTaskTO pushTaskTO = (PushTaskTO) taskTO;\n \n-            pushTask.setJobDelegateClassName(PushJobDelegate.class.getName());\n+            pushTask.setJobDelegateClassName(pushTaskTO.getJobDelegateClassName() == null\n+                    ? PushJobDelegate.class.getName()\n+                    : pushTaskTO.getJobDelegateClassName());\n \n             pushTask.setSourceRealm(realmDAO.findByFullPath(pushTaskTO.getSourceRealm()));\n \n@@ -148,7 +150,9 @@ private void fill(final ProvisioningTask task, final AbstractProvisioningTaskTO\n \n             pullTask.setDestinationRealm(realmDAO.findByFullPath(pullTaskTO.getDestinationRealm()));\n \n-            pullTask.setJobDelegateClassName(PullJobDelegate.class.getName());\n+            pullTask.setJobDelegateClassName(pullTaskTO.getJobDelegateClassName() == null\n+                    ? PullJobDelegate.class.getName()\n+                    : pullTaskTO.getJobDelegateClassName());\n \n             pullTask.setMatchingRule(pullTaskTO.getMatchingRule() == null\n                     ? MatchingRule.UPDATE : pullTaskTO.getMatchingRule());"},{"sha":"42daca5590c1c0746905cb2ffc7e33712e314980","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/JobManagerImpl.java","status":"modified","additions":14,"deletions":7,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FJobManagerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FJobManagerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FJobManagerImpl.java?ref=9c289134b3452874d279e83ef300dc8c313d44f9","patch":"@@ -46,8 +46,6 @@\n import org.apache.syncope.core.spring.ApplicationContextProvider;\n import org.apache.syncope.core.persistence.api.SyncopeLoader;\n import org.apache.syncope.core.persistence.api.DomainsHolder;\n-import org.apache.syncope.core.provisioning.java.pushpull.PushJobDelegate;\n-import org.apache.syncope.core.provisioning.java.pushpull.PullJobDelegate;\n import org.quartz.CronScheduleBuilder;\n import org.quartz.Job;\n import org.quartz.JobBuilder;\n@@ -69,8 +67,11 @@\n import org.quartz.impl.jdbcjobstore.Constants;\n import org.springframework.jdbc.datasource.DataSourceUtils;\n import org.apache.syncope.core.persistence.api.entity.task.PullTask;\n+import org.apache.syncope.core.provisioning.api.job.SchedTaskJobDelegate;\n import org.apache.syncope.core.provisioning.java.job.notification.NotificationJob;\n import org.apache.syncope.core.provisioning.java.job.report.ReportJob;\n+import org.apache.syncope.core.provisioning.java.pushpull.PullJobDelegate;\n+import org.apache.syncope.core.provisioning.java.pushpull.PushJobDelegate;\n \n public class JobManagerImpl implements JobManager, SyncopeLoader {\n \n@@ -214,11 +215,17 @@ public Map<String, Object> register(final SchedTask task, final Date startAt, fi\n         TaskJob job = createSpringBean(TaskJob.class);\n         job.setTaskKey(task.getKey());\n \n-        String jobDelegateClassName = task instanceof PullTask\n-                ? PullJobDelegate.class.getName()\n-                : task instanceof PushTask\n-                        ? PushJobDelegate.class.getName()\n-                        : task.getJobDelegateClassName();\n+        String jobDelegateClassName = task.getJobDelegateClassName() == null\n+                ? task instanceof PullTask\n+                        ? PullJobDelegate.class.getName()\n+                        : task instanceof PushTask\n+                                ? PushJobDelegate.class.getName()\n+                                : null\n+                : task.getJobDelegateClassName();\n+        if (jobDelegateClassName == null) {\n+            throw new IllegalArgumentException(\"Task \" + task\n+                    + \" does not provide any \" + SchedTaskJobDelegate.class.getSimpleName());\n+        }\n \n         Map<String, Object> jobMap = new HashMap<>();\n         jobMap.put(JobManager.DOMAIN_KEY, AuthContextUtils.getDomain());"},{"sha":"d545994e293fc654db7bcdd008ed9edf97a6a68b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=9c289134b3452874d279e83ef300dc8c313d44f9","patch":"@@ -69,23 +69,23 @@ public abstract class AbstractPullResultHandler extends AbstractSyncopeResultHan\n     protected PullUtils pullUtils;\n \n     @Autowired\n-    private NotificationManager notificationManager;\n+    protected NotificationManager notificationManager;\n \n     @Autowired\n-    private AuditManager auditManager;\n+    protected AuditManager auditManager;\n \n     @Autowired\n-    private ConnObjectUtils connObjectUtils;\n+    protected ConnObjectUtils connObjectUtils;\n \n     @Autowired\n-    private VirSchemaDAO virSchemaDAO;\n+    protected VirSchemaDAO virSchemaDAO;\n \n     @Autowired\n-    private VirAttrCache virAttrCache;\n+    protected VirAttrCache virAttrCache;\n \n-    private SyncopePullExecutor executor;\n+    protected SyncopePullExecutor executor;\n \n-    private Result latestResult;\n+    protected Result latestResult;\n \n     protected abstract String getName(AnyTO anyTO);\n "},{"sha":"cfbd32594a79452302f72fa9f382a92f7648456d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPushResultHandler.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPushResultHandler.java?ref=9c289134b3452874d279e83ef300dc8c313d44f9","patch":"@@ -96,7 +96,7 @@ protected void reportPropagation(final ProvisioningReport result, final Propagat\n         }\n     }\n \n-    private void update(final Any<?> any, final ProvisioningReport result) {\n+    protected void update(final Any<?> any, final ProvisioningReport result) {\n         boolean changepwd;\n         Collection<String> resourceKeys;\n         if (any instanceof User) {\n@@ -241,7 +241,7 @@ public boolean handle(final String anyKey) {\n         }\n     }\n \n-    private void doHandle(final Any<?> any) throws JobExecutionException {\n+    protected void doHandle(final Any<?> any) throws JobExecutionException {\n         AnyUtils anyUtils = anyUtilsFactory.getInstance(any);\n \n         ProvisioningReport result = new ProvisioningReport();\n@@ -473,7 +473,7 @@ private void doHandle(final Any<?> any) throws JobExecutionException {\n         }\n     }\n \n-    private ResourceOperation toResourceOperation(final UnmatchingRule rule) {\n+    protected ResourceOperation toResourceOperation(final UnmatchingRule rule) {\n         switch (rule) {\n             case ASSIGN:\n             case PROVISION:\n@@ -483,7 +483,7 @@ private ResourceOperation toResourceOperation(final UnmatchingRule rule) {\n         }\n     }\n \n-    private ResourceOperation toResourceOperation(final MatchingRule rule) {\n+    protected ResourceOperation toResourceOperation(final MatchingRule rule) {\n         switch (rule) {\n             case UPDATE:\n                 return ResourceOperation.UPDATE;\n@@ -495,7 +495,7 @@ private ResourceOperation toResourceOperation(final MatchingRule rule) {\n         }\n     }\n \n-    private ProvisioningReport.Status toProvisioningReportStatus(final PropagationTaskExecStatus status) {\n+    protected ProvisioningReport.Status toProvisioningReportStatus(final PropagationTaskExecStatus status) {\n         switch (status) {\n             case FAILURE:\n                 return ProvisioningReport.Status.FAILURE;"},{"sha":"8d71a2d5d04b9f987e28dfef591950cd558bb180","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultAnyObjectPullResultHandler.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultAnyObjectPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultAnyObjectPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultAnyObjectPullResultHandler.java?ref=9c289134b3452874d279e83ef300dc8c313d44f9","patch":"@@ -38,7 +38,7 @@\n import org.apache.syncope.core.provisioning.api.pushpull.AnyObjectPullResultHandler;\n import org.springframework.beans.factory.annotation.Autowired;\n \n-public class AnyObjectPullResultHandlerImpl extends AbstractPullResultHandler implements AnyObjectPullResultHandler {\n+public class DefaultAnyObjectPullResultHandler extends AbstractPullResultHandler implements AnyObjectPullResultHandler {\n \n     @Autowired\n     private AnyObjectProvisioningManager anyObjectProvisioningManager;","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AnyObjectPullResultHandlerImpl.java"},{"sha":"3c401ae4d9777df4c8296b2602d484b05f296c87","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultAnyObjectPushResultHandler.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultAnyObjectPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultAnyObjectPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultAnyObjectPushResultHandler.java?ref=9c289134b3452874d279e83ef300dc8c313d44f9","patch":"@@ -28,7 +28,7 @@\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.pushpull.AnyObjectPushResultHandler;\n \n-public class AnyObjectPushResultHandlerImpl extends AbstractPushResultHandler implements AnyObjectPushResultHandler {\n+public class DefaultAnyObjectPushResultHandler extends AbstractPushResultHandler implements AnyObjectPushResultHandler {\n \n     @Override\n     protected AnyUtils getAnyUtils() {","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AnyObjectPushResultHandlerImpl.java"},{"sha":"451659bf455ad97210d9d9612d055e181892309f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultGroupPullResultHandler.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultGroupPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultGroupPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultGroupPullResultHandler.java?ref=9c289134b3452874d279e83ef300dc8c313d44f9","patch":"@@ -41,7 +41,7 @@\n import org.apache.syncope.core.provisioning.api.pushpull.GroupPullResultHandler;\n import org.springframework.beans.factory.annotation.Autowired;\n \n-public class GroupPullResultHandlerImpl extends AbstractPullResultHandler implements GroupPullResultHandler {\n+public class DefaultGroupPullResultHandler extends AbstractPullResultHandler implements GroupPullResultHandler {\n \n     @Autowired\n     private GroupProvisioningManager groupProvisioningManager;","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/GroupPullResultHandlerImpl.java"},{"sha":"993f747bdd09b94cb422c41e9746ab27e63ba9ab","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultGroupPushResultHandler.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultGroupPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultGroupPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultGroupPushResultHandler.java?ref=9c289134b3452874d279e83ef300dc8c313d44f9","patch":"@@ -28,7 +28,7 @@\n import org.apache.syncope.core.provisioning.api.WorkflowResult;\n import org.apache.syncope.core.provisioning.api.pushpull.GroupPushResultHandler;\n \n-public class GroupPushResultHandlerImpl extends AbstractPushResultHandler implements GroupPushResultHandler {\n+public class DefaultGroupPushResultHandler extends AbstractPushResultHandler implements GroupPushResultHandler {\n \n     @Override\n     protected AnyUtils getAnyUtils() {","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/GroupPushResultHandlerImpl.java"},{"sha":"69c06045fdbe275b37e27bd824641cb60110e9b3","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultRealmPullResultHandler.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPullResultHandler.java?ref=9c289134b3452874d279e83ef300dc8c313d44f9","patch":"@@ -46,8 +46,8 @@\n import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n+import org.apache.syncope.core.provisioning.api.pushpull.RealmPullResultHandler;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullExecutor;\n-import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullResultHandler;\n import org.apache.syncope.core.provisioning.java.utils.ConnObjectUtils;\n import org.apache.syncope.core.spring.security.DelegatedAdministrationException;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n@@ -57,9 +57,9 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Transactional(rollbackFor = Throwable.class)\n-public class RealmPullResultHandlerImpl\n+public class DefaultRealmPullResultHandler\n         extends AbstractRealmResultHandler<PullTask, PullActions>\n-        implements SyncopePullResultHandler {\n+        implements RealmPullResultHandler {\n \n     @Autowired\n     private PullUtils pullUtils;","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/RealmPullResultHandlerImpl.java"},{"sha":"104046148de07ec626013fc61d70277f063d0971","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultRealmPushResultHandler.java","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultRealmPushResultHandler.java?ref=9c289134b3452874d279e83ef300dc8c313d44f9","patch":"@@ -45,7 +45,7 @@\n import org.apache.syncope.core.provisioning.api.pushpull.IgnoreProvisionException;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.apache.syncope.core.provisioning.api.pushpull.PushActions;\n-import org.apache.syncope.core.provisioning.api.pushpull.SyncopePushResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.RealmPushResultHandler;\n import org.apache.syncope.core.provisioning.java.job.AfterHandlingJob;\n import org.apache.syncope.core.provisioning.java.utils.MappingUtils;\n import org.identityconnectors.framework.common.objects.AttributeBuilder;\n@@ -57,9 +57,9 @@\n import org.springframework.transaction.annotation.Propagation;\n import org.springframework.transaction.annotation.Transactional;\n \n-public class RealmPushResultHandlerImpl\n+public class DefaultRealmPushResultHandler\n         extends AbstractRealmResultHandler<PushTask, PushActions>\n-        implements SyncopePushResultHandler {\n+        implements RealmPushResultHandler {\n \n     @Autowired\n     private MappingManager mappingManager;","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/RealmPushResultHandlerImpl.java"},{"sha":"83a54016d87c32af3d615ff0d66af3b73f3dc060","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultUserPullResultHandler.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java?ref=9c289134b3452874d279e83ef300dc8c313d44f9","patch":"@@ -38,7 +38,7 @@\n import org.apache.syncope.core.provisioning.api.pushpull.UserPullResultHandler;\n import org.springframework.beans.factory.annotation.Autowired;\n \n-public class UserPullResultHandlerImpl extends AbstractPullResultHandler implements UserPullResultHandler {\n+public class DefaultUserPullResultHandler extends AbstractPullResultHandler implements UserPullResultHandler {\n \n     @Autowired\n     private UserProvisioningManager userProvisioningManager;","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/UserPullResultHandlerImpl.java"},{"sha":"70f3a00327c83bca25189846e48ef1695e178e35","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultUserPushResultHandler.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPushResultHandler.java?ref=9c289134b3452874d279e83ef300dc8c313d44f9","patch":"@@ -35,7 +35,7 @@\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningReport;\n import org.apache.syncope.core.provisioning.api.pushpull.UserPushResultHandler;\n \n-public class UserPushResultHandlerImpl extends AbstractPushResultHandler implements UserPushResultHandler {\n+public class DefaultUserPushResultHandler extends AbstractPushResultHandler implements UserPushResultHandler {\n \n     @Override\n     protected AnyUtils getAnyUtils() {","previous_filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/UserPushResultHandlerImpl.java"},{"sha":"8bfe089595b0a1f9d9ddc0606d3112b9d7591383","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PullJobDelegate.java","status":"modified","additions":60,"deletions":27,"changes":87,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPullJobDelegate.java?ref=9c289134b3452874d279e83ef300dc8c313d44f9","patch":"@@ -49,6 +49,7 @@\n import org.apache.syncope.core.provisioning.api.pushpull.AnyObjectPullResultHandler;\n import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n import org.apache.syncope.core.provisioning.api.pushpull.GroupPullResultHandler;\n+import org.apache.syncope.core.provisioning.api.pushpull.RealmPullResultHandler;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullExecutor;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullResultHandler;\n import org.apache.syncope.core.provisioning.api.pushpull.UserPullResultHandler;\n@@ -60,25 +61,35 @@\n public class PullJobDelegate extends AbstractProvisioningJobDelegate<PullTask> implements SyncopePullExecutor {\n \n     @Autowired\n-    private UserDAO userDAO;\n+    protected UserDAO userDAO;\n \n     @Autowired\n-    private GroupDAO groupDAO;\n+    protected GroupDAO groupDAO;\n \n     @Autowired\n-    private VirSchemaDAO virSchemaDAO;\n+    protected VirSchemaDAO virSchemaDAO;\n \n     @Autowired\n-    private PullUtils pullUtils;\n+    protected PullUtils pullUtils;\n \n-    private final Map<ObjectClass, SyncToken> latestSyncTokens = new HashMap<>();\n+    protected final Map<ObjectClass, SyncToken> latestSyncTokens = new HashMap<>();\n+\n+    protected ProvisioningProfile<PullTask, PullActions> profile;\n+\n+    protected RealmPullResultHandler rhandler;\n+\n+    protected AnyObjectPullResultHandler ahandler;\n+\n+    protected UserPullResultHandler uhandler;\n+\n+    protected GroupPullResultHandler ghandler;\n \n     @Override\n     public void setLatestSyncToken(final ObjectClass objectClass, final SyncToken latestSyncToken) {\n         latestSyncTokens.put(objectClass, latestSyncToken);\n     }\n \n-    private void setGroupOwners(final GroupPullResultHandler ghandler) {\n+    protected void setGroupOwners(final GroupPullResultHandler ghandler) {\n         ghandler.getGroupOwnerMap().entrySet().stream().map(entry -> {\n             Group group = groupDAO.find(entry.getKey());\n             if (group == null) {\n@@ -114,6 +125,42 @@ private void setGroupOwners(final GroupPullResultHandler ghandler) {\n         });\n     }\n \n+    protected RealmPullResultHandler buildRealmHandler() {\n+        RealmPullResultHandler handler = (RealmPullResultHandler) ApplicationContextProvider.getBeanFactory().\n+                createBean(DefaultRealmPullResultHandler.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+        handler.setProfile(profile);\n+        handler.setPullExecutor(this);\n+\n+        return handler;\n+    }\n+\n+    protected AnyObjectPullResultHandler buildAnyObjectHandler() {\n+        AnyObjectPullResultHandler handler = (AnyObjectPullResultHandler) ApplicationContextProvider.getBeanFactory().\n+                createBean(DefaultAnyObjectPullResultHandler.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+        handler.setProfile(profile);\n+        handler.setPullExecutor(this);\n+\n+        return handler;\n+    }\n+\n+    protected UserPullResultHandler buildUserHandler() {\n+        UserPullResultHandler handler = (UserPullResultHandler) ApplicationContextProvider.getBeanFactory().\n+                createBean(DefaultUserPullResultHandler.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+        handler.setProfile(profile);\n+        handler.setPullExecutor(this);\n+\n+        return handler;\n+    }\n+\n+    protected GroupPullResultHandler buildGroupHandler() {\n+        GroupPullResultHandler handler = (GroupPullResultHandler) ApplicationContextProvider.getBeanFactory().\n+                createBean(DefaultGroupPullResultHandler.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+        handler.setProfile(profile);\n+        handler.setPullExecutor(this);\n+\n+        return handler;\n+    }\n+\n     @Override\n     protected String doExecuteProvisioning(\n             final PullTask pullTask,\n@@ -135,7 +182,7 @@ protected String doExecuteProvisioning(\n             }\n         });\n \n-        ProvisioningProfile<PullTask, PullActions> profile = new ProvisioningProfile<>(connector, pullTask);\n+        profile = new ProvisioningProfile<>(connector, pullTask);\n         profile.getActions().addAll(actions);\n         profile.setDryRun(dryRun);\n         profile.setResAct(getPullPolicySpec(pullTask).getConflictResolutionAction());\n@@ -148,16 +195,13 @@ protected String doExecuteProvisioning(\n             }\n         }\n \n-        // First OrgUnits...\n+        // First realms...\n         if (pullTask.getResource().getOrgUnit() != null) {\n             OrgUnit orgUnit = pullTask.getResource().getOrgUnit();\n             OperationOptions options = MappingUtils.buildOperationOptions(\n                     MappingUtils.getPullItems(orgUnit.getItems()).iterator());\n \n-            SyncopePullResultHandler rhandler = (SyncopePullResultHandler) ApplicationContextProvider.getBeanFactory().\n-                    createBean(RealmPullResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n-            rhandler.setProfile(profile);\n-            rhandler.setPullExecutor(this);\n+            rhandler = buildRealmHandler();\n \n             try {\n                 switch (pullTask.getPullMode()) {\n@@ -202,20 +246,9 @@ protected String doExecuteProvisioning(\n         }\n \n         // ...then provisions for any types\n-        AnyObjectPullResultHandler ahandler = (AnyObjectPullResultHandler) ApplicationContextProvider.getBeanFactory().\n-                createBean(AnyObjectPullResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n-        ahandler.setProfile(profile);\n-        ahandler.setPullExecutor(this);\n-\n-        UserPullResultHandler uhandler = (UserPullResultHandler) ApplicationContextProvider.getBeanFactory().\n-                createBean(UserPullResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n-        uhandler.setProfile(profile);\n-        uhandler.setPullExecutor(this);\n-\n-        GroupPullResultHandler ghandler = (GroupPullResultHandler) ApplicationContextProvider.getBeanFactory().\n-                createBean(GroupPullResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n-        ghandler.setProfile(profile);\n-        ghandler.setPullExecutor(this);\n+        ahandler = buildAnyObjectHandler();\n+        uhandler = buildUserHandler();\n+        ghandler = buildGroupHandler();\n \n         for (Provision provision : pullTask.getResource().getProvisions()) {\n             if (provision.getMapping() != null) {\n@@ -303,7 +336,7 @@ protected String doExecuteProvisioning(\n         return result;\n     }\n \n-    private PullPolicySpec getPullPolicySpec(final ProvisioningTask task) {\n+    protected PullPolicySpec getPullPolicySpec(final ProvisioningTask task) {\n         PullPolicySpec pullPolicySpec;\n \n         if (task instanceof PullTask) {"},{"sha":"ad3ccfd9101c9fb88b28d07bbca966177347e402","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/PushJobDelegate.java","status":"modified","additions":56,"deletions":25,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c289134b3452874d279e83ef300dc8c313d44f9/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FPushJobDelegate.java?ref=9c289134b3452874d279e83ef300dc8c313d44f9","patch":"@@ -45,6 +45,7 @@\n import org.apache.syncope.core.provisioning.api.pushpull.GroupPushResultHandler;\n import org.apache.syncope.core.provisioning.api.pushpull.ProvisioningProfile;\n import org.apache.syncope.core.provisioning.api.pushpull.PushActions;\n+import org.apache.syncope.core.provisioning.api.pushpull.RealmPushResultHandler;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePushResultHandler;\n import org.apache.syncope.core.provisioning.api.pushpull.UserPushResultHandler;\n import org.quartz.JobExecutionException;\n@@ -57,27 +58,37 @@ public class PushJobDelegate extends AbstractProvisioningJobDelegate<PushTask> {\n      * User DAO.\n      */\n     @Autowired\n-    private UserDAO userDAO;\n+    protected UserDAO userDAO;\n \n     /**\n      * Search DAO.\n      */\n     @Autowired\n-    private AnySearchDAO searchDAO;\n+    protected AnySearchDAO searchDAO;\n \n     /**\n      * Group DAO.\n      */\n     @Autowired\n-    private GroupDAO groupDAO;\n+    protected GroupDAO groupDAO;\n \n     @Autowired\n-    private AnyObjectDAO anyObjectDAO;\n+    protected AnyObjectDAO anyObjectDAO;\n \n     @Autowired\n-    private RealmDAO realmDAO;\n+    protected RealmDAO realmDAO;\n \n-    private AnyDAO<?> getAnyDAO(final AnyTypeKind anyTypeKind) {\n+    protected ProvisioningProfile<PushTask, PushActions> profile;\n+\n+    protected RealmPushResultHandler rhandler;\n+\n+    protected AnyObjectPushResultHandler ahandler;\n+\n+    protected UserPushResultHandler uhandler;\n+\n+    protected GroupPushResultHandler ghandler;\n+\n+    protected AnyDAO<?> getAnyDAO(final AnyTypeKind anyTypeKind) {\n         AnyDAO<?> result;\n         switch (anyTypeKind) {\n             case USER:\n@@ -96,7 +107,7 @@ private AnyDAO<?> getAnyDAO(final AnyTypeKind anyTypeKind) {\n         return result;\n     }\n \n-    private void doHandle(\n+    protected void doHandle(\n             final List<? extends Any<?>> anys,\n             final SyncopePushResultHandler handler,\n             final ExternalResource resource)\n@@ -112,6 +123,38 @@ private void doHandle(\n         }\n     }\n \n+    protected RealmPushResultHandler buildRealmHandler() {\n+        RealmPushResultHandler handler = (RealmPushResultHandler) ApplicationContextProvider.getBeanFactory().\n+                createBean(DefaultRealmPushResultHandler.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+        handler.setProfile(profile);\n+\n+        return handler;\n+    }\n+\n+    protected AnyObjectPushResultHandler buildAnyObjectHandler() {\n+        AnyObjectPushResultHandler handler = (AnyObjectPushResultHandler) ApplicationContextProvider.getBeanFactory().\n+                createBean(DefaultAnyObjectPushResultHandler.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+        handler.setProfile(profile);\n+\n+        return handler;\n+    }\n+\n+    protected UserPushResultHandler buildUserHandler() {\n+        UserPushResultHandler handler = (UserPushResultHandler) ApplicationContextProvider.getBeanFactory().\n+                createBean(DefaultUserPushResultHandler.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+        handler.setProfile(profile);\n+\n+        return handler;\n+    }\n+\n+    protected GroupPushResultHandler buildGroupHandler() {\n+        GroupPushResultHandler handler = (GroupPushResultHandler) ApplicationContextProvider.getBeanFactory().\n+                createBean(DefaultGroupPushResultHandler.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n+        handler.setProfile(profile);\n+\n+        return handler;\n+    }\n+\n     @Override\n     protected String doExecuteProvisioning(\n             final PushTask pushTask,\n@@ -133,7 +176,7 @@ protected String doExecuteProvisioning(\n             }\n         });\n \n-        ProvisioningProfile<PushTask, PushActions> profile = new ProvisioningProfile<>(connector, pushTask);\n+        profile = new ProvisioningProfile<>(connector, pushTask);\n         profile.getActions().addAll(actions);\n         profile.setDryRun(dryRun);\n         profile.setResAct(null);\n@@ -144,11 +187,9 @@ protected String doExecuteProvisioning(\n             }\n         }\n \n-        // First OrgUnits...\n+        // First realms...\n         if (pushTask.getResource().getOrgUnit() != null) {\n-            SyncopePushResultHandler rhandler = (SyncopePushResultHandler) ApplicationContextProvider.getBeanFactory().\n-                    createBean(RealmPushResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n-            rhandler.setProfile(profile);\n+            rhandler = buildRealmHandler();\n \n             for (Realm realm : realmDAO.findDescendants(profile.getTask().getSourceRealm())) {\n                 // Never push the root realm\n@@ -164,19 +205,9 @@ protected String doExecuteProvisioning(\n         }\n \n         // ...then provisions for any types\n-        AnyObjectPushResultHandler ahandler = (AnyObjectPushResultHandler) ApplicationContextProvider.getBeanFactory().\n-                createBean(AnyObjectPushResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n-        ahandler.setProfile(profile);\n-\n-        UserPushResultHandler uhandler =\n-                (UserPushResultHandler) ApplicationContextProvider.getBeanFactory().\n-                        createBean(UserPushResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n-        uhandler.setProfile(profile);\n-\n-        GroupPushResultHandler ghandler =\n-                (GroupPushResultHandler) ApplicationContextProvider.getBeanFactory().\n-                        createBean(GroupPushResultHandlerImpl.class, AbstractBeanDefinition.AUTOWIRE_BY_NAME, false);\n-        ghandler.setProfile(profile);\n+        ahandler = buildAnyObjectHandler();\n+        uhandler = buildUserHandler();\n+        ghandler = buildGroupHandler();\n \n         for (Provision provision : pushTask.getResource().getProvisions()) {\n             if (provision.getMapping() != null) {"}]}