{"sha":"0f00ecf5740cc4ead8abd034fe53bd94e0a5837f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBmMDBlY2Y1NzQwY2M0ZWFkOGFiZDAzNGZlNTNiZDk0ZTBhNTgzN2Y=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-10-22T13:17:40Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-10-22T13:17:40Z"},"message":"(Fixes issue #56)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246604 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3e3ec4cc7d8924a21d4d674e9b9193fe32eb22fb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/3e3ec4cc7d8924a21d4d674e9b9193fe32eb22fb"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0f00ecf5740cc4ead8abd034fe53bd94e0a5837f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0f00ecf5740cc4ead8abd034fe53bd94e0a5837f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0f00ecf5740cc4ead8abd034fe53bd94e0a5837f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0f00ecf5740cc4ead8abd034fe53bd94e0a5837f/comments","author":null,"committer":null,"parents":[{"sha":"31d3a0e6b95e039056a7a3bbdfabd730d3bfc50b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/31d3a0e6b95e039056a7a3bbdfabd730d3bfc50b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/31d3a0e6b95e039056a7a3bbdfabd730d3bfc50b"}],"stats":{"total":178,"additions":126,"deletions":52},"files":[{"sha":"bcc4a2f2833f02602fd949f9dd42f75ac3cedb30","filename":"console/src/main/java/org/syncope/console/pages/MembershipModalPage.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f00ecf5740cc4ead8abd034fe53bd94e0a5837f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f00ecf5740cc4ead8abd034fe53bd94e0a5837f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java?ref=0f00ecf5740cc4ead8abd034fe53bd94e0a5837f","patch":"@@ -143,11 +143,11 @@ public Serializable getObject() {\n                                                     .getModelObject();\n                                             formatter = new SimpleDateFormat(\n                                                     schemaTO\n-                                                    .getConversionPattern());//Default value:yyyy-MM-dd\n+                                                    .getConversionPattern());\n \n                                             if(!dateValue.equals(\"\"))\n-                                                date = formatter.parse((String)\n-                                                        item.getModelObject());\n+                                                date = formatter\n+                                                        .parse(dateValue);\n                                         } catch (ParseException ex) {\n                                             Logger.getLogger(UserModalPage\n                                                     .class.getName())\n@@ -164,7 +164,7 @@ public void setObject(Serializable object) {\n                                         String val = formatter.format(date);\n                                         item.setModelObject(val);\n                                     }\n-                                }, required);\n+                                }, schemaTO.getConversionPattern(),required);\n                     }\n \n                     item.add(panel);"},{"sha":"6939a05c6787a1ac0e04d1f7527ac4b70b39cabd","filename":"console/src/main/java/org/syncope/console/pages/RoleModalPage.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f00ecf5740cc4ead8abd034fe53bd94e0a5837f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f00ecf5740cc4ead8abd034fe53bd94e0a5837f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java?ref=0f00ecf5740cc4ead8abd034fe53bd94e0a5837f","patch":"@@ -100,7 +100,8 @@ public RoleModalPage(final BasePage basePage, final ModalWindow window,\n if(!createFlag)\n     cloneOldRoleTO(roleTO);\n \n-final ListView roleAttributesView = new ListView(\"roleSchemas\", schemaWrappers) {\n+final ListView roleAttributesView = new ListView(\"roleSchemas\"\n+                                                            , schemaWrappers) {\n \n     @Override\n     protected void populateItem(ListItem item) {\n@@ -156,12 +157,9 @@ public Serializable getObject() {\n                                     try {\n                                         String dateValue = (String) item\n                                                 .getModelObject();\n-                                        formatter = new SimpleDateFormat(\n-                                                schemaTO.getConversionPattern());\n                                         //Default value:yyyy-MM-dd\n                                         if(!dateValue.equals(\"\"))\n-                                            date = formatter.parse((String)\n-                                                    item.getModelObject());\n+                                            date = formatter.parse(dateValue);\n                                     } catch (ParseException ex) {\n                                         Logger.getLogger(\n                                                 RoleModalPage.class.getName())\n@@ -178,9 +176,10 @@ public void setObject(Serializable object) {\n                                     String val = formatter.format(date);\n                                     item.setModelObject(val);\n                                 }\n-                            }, required);\n+                            }, schemaTO.getConversionPattern(),required);\n                 }\n-                //Common other cases : java.lang.String,java.lang.Double,java.lang.Long\n+                /*Common other cases : java.lang.String,java.lang.Double,\n+                java.lang.Long*/\n                 else  {\n                     panel = new AjaxTextFieldPanel(\"panel\", schemaTO.getName(),\n                             new Model() {"},{"sha":"91c2d43cc20e2584d53a545156a0829964f1d699","filename":"console/src/main/java/org/syncope/console/pages/Schema.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f00ecf5740cc4ead8abd034fe53bd94e0a5837f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f00ecf5740cc4ead8abd034fe53bd94e0a5837f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java?ref=0f00ecf5740cc4ead8abd034fe53bd94e0a5837f","patch":"@@ -991,7 +991,8 @@ public void onClick(AjaxRequestTarget target) {\n \n             public Page createPage() {\n                 DerivedSchemaModalPage form = new DerivedSchemaModalPage(Schema.this,\n-                        new ModalWindow(\"createMembershipDerivedSchemaWin\"), null, true);\n+                        new ModalWindow(\"createMembershipDerivedSchemaWin\"),\n+                        null, true);\n                 form.setEntity(DerivedSchemaModalPage.Entity.MEMBERSHIP);\n \n                 return form;\n@@ -1009,7 +1010,8 @@ public Page createPage() {\n      * @param window\n      * @param container\n      */\n-    public void setWindowClosedCallback(ModalWindow window,final WebMarkupContainer container) {\n+    public void setWindowClosedCallback(ModalWindow window,\n+            final WebMarkupContainer container) {\n \n         window.setWindowClosedCallback(\n             new ModalWindow.WindowClosedCallback() {"},{"sha":"bb792d9379c1acb67523461d3dc7effb43092219","filename":"console/src/main/java/org/syncope/console/pages/UserModalPage.java","status":"modified","additions":11,"deletions":14,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f00ecf5740cc4ead8abd034fe53bd94e0a5837f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f00ecf5740cc4ead8abd034fe53bd94e0a5837f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=0f00ecf5740cc4ead8abd034fe53bd94e0a5837f","patch":"@@ -202,19 +202,15 @@ public Serializable getObject() {\n                             DateFormat formatter = new SimpleDateFormat(\n                                     schemaTO.getConversionPattern());\n                             Date date = new Date();\n-\n                             try {\n-                                String dateValue = (String) item.getModelObject();\n-                                formatter = new SimpleDateFormat(\n-                                        schemaTO.getConversionPattern());\n-\n-                                if (!dateValue.equals(\"\")) {\n-                                    date = formatter.parse((String)\n-                                            item.getModelObject());\n-                                }\n-\n+                                String dateValue = (String) item\n+                                        .getModelObject();\n+                                //Default value:yyyy-MM-dd\n+                                if(!dateValue.equals(\"\"))\n+                                    date = formatter.parse(dateValue);\n                             } catch (ParseException ex) {\n-                                Logger.getLogger(UserModalPage.class.getName())\n+                                Logger.getLogger(\n+                                        RoleModalPage.class.getName())\n                                         .log(Level.SEVERE, null, ex);\n                             }\n                             return date;\n@@ -228,7 +224,8 @@ public void setObject(Serializable object) {\n                             String val = formatter.format(date);\n                             item.setModelObject(val);\n                         }\n-                    }, required, schemaTO.isReadonly());\n+                    }, schemaTO.getConversionPattern(),required,\n+                            schemaTO.isReadonly());\n         } else {\n             panel = new AjaxTextFieldPanel(\"panel\",\n                     schemaTO.getName(), new Model() {\n@@ -338,7 +335,7 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n         try {\n             userTO.setResources(getResourcesSet(resourcesPalette\n                     .getModelCollection()));\n-            userTO.setAttributes(getUserAttributesSet());\n+            userTO.setAttributes(getUserAttributesList());\n             userTO.setMemberships(getMembershipsSet());\n \n             if (createFlag) {\n@@ -647,7 +644,7 @@ public void setupMemberships(boolean create, UserTO userTO) {\n  * @param creation flag: true if a new User is being created, false otherwise\n  * @param userTO object\n  */\n-public List<AttributeTO> getUserAttributesSet() {\n+public List<AttributeTO> getUserAttributesList() {\n \n     List<AttributeTO> attributes = new ArrayList<AttributeTO>();\n "},{"sha":"aeae3cbcd369feda8bd0fd91b055847e49d270e8","filename":"console/src/main/java/org/syncope/console/rest/ConfigurationsRestClient.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f00ecf5740cc4ead8abd034fe53bd94e0a5837f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationsRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f00ecf5740cc4ead8abd034fe53bd94e0a5837f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationsRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationsRestClient.java?ref=0f00ecf5740cc4ead8abd034fe53bd94e0a5837f","patch":"@@ -69,7 +69,8 @@ public ConfigurationTO readConfiguration(String confKey) {\n      */\n     public boolean createConfiguration(ConfigurationTO configurationTO) {\n \n-        ConfigurationTO newConfigurationTO = restClient.getRestTemplate().postForObject(\n+        ConfigurationTO newConfigurationTO = restClient.getRestTemplate()\n+                .postForObject(\n                 restClient.getBaseURL() + \"configuration/create\",\n                 configurationTO, ConfigurationTO.class);\n \n@@ -83,7 +84,8 @@ public boolean createConfiguration(ConfigurationTO configurationTO) {\n      */\n     public boolean updateConfiguration(ConfigurationTO configurationTO) {\n \n-        ConfigurationTO newConfigurationTO = restClient.getRestTemplate().postForObject(\n+        ConfigurationTO newConfigurationTO = restClient.getRestTemplate()\n+                .postForObject(\n                 restClient.getBaseURL() + \"configuration/update\",\n                 configurationTO, ConfigurationTO.class);\n \n@@ -94,9 +96,11 @@ public boolean updateConfiguration(ConfigurationTO configurationTO) {\n      * Deelete a configuration by confKey\n      * @throws UnsupportedEncodingException\n      */\n-    public void deleteConfiguration(String confKey) throws UnsupportedEncodingException {\n+    public void deleteConfiguration(String confKey)\n+                                        throws UnsupportedEncodingException {\n         try {\n-            restClient.getRestTemplate().delete( restClient.getBaseURL() + \"configuration/delete/{confKey}.json\",\n+            restClient.getRestTemplate().delete( restClient.getBaseURL()\n+                    + \"configuration/delete/{confKey}.json\",\n                     confKey);\n         } catch (HttpStatusCodeException e) {\n             //assertEquals(e.getStatusCode(), HttpStatus.NOT_FOUND);"},{"sha":"e126e98326111f16061372cf21d2ecd12960be9d","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/DateFieldPanel.java","status":"modified","additions":80,"deletions":20,"changes":100,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f00ecf5740cc4ead8abd034fe53bd94e0a5837f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f00ecf5740cc4ead8abd034fe53bd94e0a5837f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.java?ref=0f00ecf5740cc4ead8abd034fe53bd94e0a5837f","patch":"@@ -15,11 +15,14 @@\n package org.syncope.console.wicket.markup.html.form;\n \n import java.util.Date;\n-import org.apache.wicket.extensions.yui.calendar.DatePicker;\n+import org.apache.wicket.extensions.markup.html.form.DateTextField;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n+import org.apache.wicket.extensions.yui.calendar.DatePicker;\n+import org.apache.wicket.extensions.yui.calendar.DateTimeField;\n import org.apache.wicket.model.Model;\n+import org.apache.wicket.markup.html.panel.Fragment;\n \n /**\n  * DateFieldPanel\n@@ -29,11 +32,12 @@ public class DateFieldPanel extends Panel {\n      * Build a DateFieldPanel.\n      * @param component id\n      * @param label name\n-     * @param IModel<?> object\n+     * @param IModel<Date> date object\n+     * @param schema attribute's date pattern\n      * @param required flag\n      */\n-    public DateFieldPanel(String id, String name ,IModel<?> model,\n-                          boolean required) {\n+    public DateFieldPanel(String id, String name ,IModel<Date> model,\n+                          final String datePattern, boolean required) {\n         super(id, model);\n \n         if (required) {\n@@ -42,25 +46,42 @@ public DateFieldPanel(String id, String name ,IModel<?> model,\n             add(new Label(\"required\", \"\"));\n         }\n \n-        UpdatingTextField dateField = new UpdatingTextField(\"dateField\",\n-                                      model, Date.class);\n-        dateField.setRequired(required);\n-        dateField.setLabel(new Model(name));\n-        dateField.add(new DatePicker());\n+        Fragment datePanel = null;\n+        \n+        if(!datePattern.contains(\"H\")) {\n+            datePanel = new Fragment(\"datePanel\",\"dateField\",this);\n+            \n+            DateTextField field = new DateTextField(\"field\", model,datePattern);\n+            field.add(getDatePicker());\n+\n+            datePanel.add(field);\n+        }\n+\n+        else {\n+            datePanel = new Fragment(\"datePanel\",\"dateTimeField\",this);\n+\n+            DateTimeField field = new DateTimeField(\"field\", model);\n+\n+            field.setRequired(required);\n+            field.setLabel(new Model(name));\n+            \n+            datePanel.add(field);\n+        }\n \n-        add(dateField);\n+        add(datePanel);\n     }\n \n     /**\n      * Build a DateFieldPanel.\n      * @param component id\n      * @param label name\n-     * @param IModel<?> object\n+     * @param IModel<Date> date object\n+     * @param schema attribute's date pattern\n      * @param required flag\n      * @param readonly flag\n      */\n-    public DateFieldPanel(String id, String name ,IModel<?> model, \n-                          boolean required,boolean readonly) {\n+    public DateFieldPanel(String id, String name ,IModel<Date> model,\n+            final String datePattern, boolean required,boolean readonly) {\n         super(id, model);\n \n         if (required) {\n@@ -69,13 +90,52 @@ public DateFieldPanel(String id, String name ,IModel<?> model,\n             add(new Label(\"required\", \"\"));\n         }\n \n-        UpdatingTextField dateField = new UpdatingTextField(\"dateField\",\n-                                      model, Date.class);\n-        dateField.setRequired(required);\n-        dateField.setEnabled(!readonly);\n-        dateField.setLabel(new Model(name));\n-        dateField.add(new DatePicker());\n+        Fragment datePanel = null;\n+\n+        if(!datePattern.contains(\"H\")) {\n+            datePanel = new Fragment(\"datePanel\",\"dateField\",this);\n+\n+            DateTextField field = new DateTextField(\"field\", model,datePattern);\n+            field.add(getDatePicker());\n+\n+            field.setRequired(required);\n+            field.setEnabled(!readonly);\n+            field.setLabel(new Model(name));\n+\n+            datePanel.add(field);\n+        }\n+\n+        else {\n+            datePanel = new Fragment(\"datePanel\",\"dateTimeField\",this);\n+\n+            DateTimeField field = new DateTimeField(\"field\", model);\n+\n+            field.setRequired(required);\n+            field.setEnabled(!readonly);\n+            field.setLabel(new Model(name));\n+\n+            datePanel.add(field);\n+        }\n+\n+        add(datePanel);\n+    }\n+\n+    /**\n+     * Setup a DatePicker component.\n+     */\n+    public DatePicker getDatePicker(){\n+\n+        DatePicker picker = new DatePicker(){\n+\n+            @Override\n+            protected boolean enableMonthYearSelection() {\n+                return true;\n+            }\n+\n+        };\n+\n+        picker.setShowOnFieldClick(true);\n \n-        add(dateField);\n+        return picker;\n     }\n }"},{"sha":"0384dcb1e5ae9a100531bc37e9ae361480401c79","filename":"console/src/main/resources/org/syncope/console/wicket/markup/html/form/DateFieldPanel.html","status":"modified","additions":13,"deletions":1,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0f00ecf5740cc4ead8abd034fe53bd94e0a5837f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0f00ecf5740cc4ead8abd034fe53bd94e0a5837f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateFieldPanel.html?ref=0f00ecf5740cc4ead8abd034fe53bd94e0a5837f","patch":"@@ -15,7 +15,19 @@\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n     \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n <wicket:panel>\n-<input type=\"text\" class=\"text ui-widget-content ui-corner-all\" style=\"margin-bottom:10px;width:45%;padding:.4em;\" wicket:id=\"dateField\"/>\n+\n+<span wicket:id=\"datePanel\"/>\n+\n+<wicket:fragment wicket:id=\"dateField\">\n+    <input type=\"text\" class=\"text ui-widget-content ui-corner-all\"\n+           style=\"margin-bottom:10px;width:80%;padding:.4em;\"\n+           wicket:id=\"field\"/>\n+</wicket:fragment>\n+\n+<wicket:fragment wicket:id=\"dateTimeField\">\n+    <span wicket:id=\"field\"/>\n+</wicket:fragment>\n+\n <span wicket:id=\"required\"/>\n <br/>\n </wicket:panel>\n\\ No newline at end of file"}]}