{"sha":"0eb93961a0798276d3ddf8ae7dec1a4824e24b15","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjBlYjkzOTYxYTA3OTgyNzZkM2RkZjhhZTdkZWMxYTQ4MjRlMjRiMTU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-03-06T17:29:27Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-03-06T17:29:27Z"},"message":"[SYNCOPE-5] Report configuration web interface is drafted (and working)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1297585 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"80c1e3256894f0f49f31d44ca6fa897cead0368d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/80c1e3256894f0f49f31d44ca6fa897cead0368d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0eb93961a0798276d3ddf8ae7dec1a4824e24b15","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0eb93961a0798276d3ddf8ae7dec1a4824e24b15","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0eb93961a0798276d3ddf8ae7dec1a4824e24b15","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"9c3b66a27ee7399b3c3e2f98889fea63747e8a0f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9c3b66a27ee7399b3c3e2f98889fea63747e8a0f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9c3b66a27ee7399b3c3e2f98889fea63747e8a0f"}],"stats":{"total":4783,"additions":2784,"deletions":1999},"files":[{"sha":"8c0cda6e98f254ea9d5a7cd0ef0117ec569a68c6","filename":"client/src/main/java/org/syncope/client/report/AbstractReportletConf.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FAbstractReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FAbstractReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FAbstractReportletConf.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -26,16 +26,21 @@ public abstract class AbstractReportletConf extends AbstractBaseBean implements\n \n     private String name;\n \n+    public AbstractReportletConf() {\n+        this(\"\");\n+        setName(getClass().getName());\n+    }\n+\n     public AbstractReportletConf(final String name) {\n         this.name = name;\n     }\n \n     @Override\n-    public String getName() {\n+    public final String getName() {\n         return name;\n     }\n \n-    public void setName(final String name) {\n+    public final void setName(final String name) {\n         this.name = name;\n     }\n }"},{"sha":"c730eb922f76757c82f23bf69ac1c933e48ff5aa","filename":"client/src/main/java/org/syncope/client/report/ReportletConf.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FReportletConf.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -29,11 +29,4 @@ public interface ReportletConf {\n      * @return name of this reportlet instance\n      */\n     String getName();\n-\n-    /**\n-     * Return Reportlet implementation for this conf.\n-     *\n-     * @return corresponding reportlet class name\n-     */\n-    String getReportletClassName();\n }"},{"sha":"3edc9c493b1f01fdb8cb2d095f4d23f96c635496","filename":"client/src/main/java/org/syncope/client/report/StaticReportletConf.java","status":"added","additions":98,"deletions":0,"changes":98,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FStaticReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FStaticReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FStaticReportletConf.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -0,0 +1,98 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.syncope.client.report;\n+\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import org.syncope.types.TraceLevel;\n+\n+public class StaticReportletConf extends AbstractReportletConf {\n+\n+    private static final long serialVersionUID = -4814950086361753689L;\n+\n+    private String stringField;\n+\n+    private Long longField;\n+\n+    private Double doubleField;\n+\n+    private Date dateField;\n+\n+    private TraceLevel traceLevel;\n+\n+    private List<String> listField;\n+\n+    public StaticReportletConf() {\n+        super();\n+    }\n+\n+    public StaticReportletConf(final String name) {\n+        super(name);\n+        listField = new ArrayList<String>();\n+    }\n+\n+    public Date getDateField() {\n+        return dateField == null ? null : new Date(dateField.getTime());\n+    }\n+\n+    public void setDateField(Date dateField) {\n+        this.dateField = dateField == null ? null : new Date(dateField.getTime());\n+    }\n+\n+    public Double getDoubleField() {\n+        return doubleField;\n+    }\n+\n+    public void setDoubleField(Double doubleField) {\n+        this.doubleField = doubleField;\n+    }\n+\n+    public List<String> getListField() {\n+        return listField;\n+    }\n+\n+    public void setListField(List<String> listField) {\n+        this.listField = listField;\n+    }\n+\n+    public Long getLongField() {\n+        return longField;\n+    }\n+\n+    public void setLongField(Long longField) {\n+        this.longField = longField;\n+    }\n+\n+    public String getStringField() {\n+        return stringField;\n+    }\n+\n+    public void setStringField(String stringField) {\n+        this.stringField = stringField;\n+    }\n+\n+    public TraceLevel getTraceLevel() {\n+        return traceLevel;\n+    }\n+\n+    public void setTraceLevel(TraceLevel traceLevel) {\n+        this.traceLevel = traceLevel;\n+    }\n+}"},{"sha":"dd96fa0b74df883a048a9d1c5ea55726566115d3","filename":"client/src/main/java/org/syncope/client/report/UserReportletConf.java","status":"modified","additions":1,"deletions":8,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FUserReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FUserReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Freport%2FUserReportletConf.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -20,7 +20,6 @@\n \n import java.util.ArrayList;\n import java.util.List;\n-import org.codehaus.jackson.annotate.JsonIgnore;\n import org.syncope.annotation.FormAttributeField;\n import org.syncope.client.search.NodeCond;\n import org.syncope.types.IntMappingType;\n@@ -59,7 +58,7 @@ public enum Feature {\n     private List<Feature> features;\n \n     public UserReportletConf() {\n-        this(UserReportletConf.class.getName());\n+        super();\n     }\n \n     public UserReportletConf(final String name) {\n@@ -71,12 +70,6 @@ public UserReportletConf(final String name) {\n         features = new ArrayList<Feature>();\n     }\n \n-    @JsonIgnore\n-    @Override\n-    public String getReportletClassName() {\n-        return \"org.syncope.core.report.UserReportlet\";\n-    }\n-\n     public List<String> getAttrs() {\n         return attrs;\n     }"},{"sha":"a71ec72ce0ff639fd36dfdd994e2b7d1d8138f34","filename":"client/src/main/java/org/syncope/client/search/MembershipCond.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FMembershipCond.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FMembershipCond.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fsearch%2FMembershipCond.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -25,6 +25,8 @@\n  */\n public class MembershipCond extends AbstractBaseBean {\n \n+    private static final long serialVersionUID = -728155256293925989L;\n+\n     private Long roleId;\n \n     private String roleName;"},{"sha":"d25b440d1d0edc5c66a99d7f81811e5358568d80","filename":"client/src/main/java/org/syncope/client/to/RoleTO.java","status":"modified","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FRoleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FRoleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FRoleTO.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -125,8 +125,8 @@ public boolean isInheritPasswordPolicy() {\n     }\n \n     /**\n-     * Specify if password policy must be inherited.\n-     * In this case eventual passwordPolicy occurrence will be ignored.\n+     * Specify if password policy must be inherited. In this case eventual passwordPolicy occurrence will be ignored.\n+     *\n      * @param inheritPasswordPolicy 'true' to inherit policy, false otherwise.\n      */\n     public void setInheritPasswordPolicy(boolean inheritPasswordPolicy) {\n@@ -146,8 +146,8 @@ public boolean isInheritAccountPolicy() {\n     }\n \n     /**\n-     * Specify if account policy must be inherited.\n-     * In this case eventual accountPolicy occurrence will be ignored.\n+     * Specify if account policy must be inherited. In this case eventual accountPolicy occurrence will be ignored.\n+     *\n      * @param inheritAccountPolicy 'true' to inherit policy, false otherwise.\n      */\n     public void setInheritAccountPolicy(boolean inheritAccountPolicy) {\n@@ -164,9 +164,7 @@ public String getEmpty() {\n \n     public static long fromDisplayName(final String displayName) {\n         long result = 0;\n-        if (displayName != null && !displayName.isEmpty()\n-                && displayName.indexOf(' ') != -1) {\n-\n+        if (displayName != null && !displayName.isEmpty() && displayName.indexOf(' ') != -1) {\n             try {\n                 result = Long.valueOf(displayName.split(\" \")[0]);\n             } catch (NumberFormatException e) {"},{"sha":"7306e1e6fd9069bb47cde5d5dfa01dc2f49f9573","filename":"console/src/main/java/org/syncope/console/commons/SchemaModalPageFactory.java","status":"modified","additions":9,"deletions":15,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSchemaModalPageFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSchemaModalPageFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FSchemaModalPageFactory.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -20,16 +20,12 @@\n \n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.syncope.console.pages.AbstractSchemaModalPage;\n-import org.syncope.console.pages.AbstractSchemaModalPage;\n-import org.syncope.console.pages.BaseModalPage;\n import org.syncope.console.pages.BaseModalPage;\n import org.syncope.console.pages.DerivedSchemaModalPage;\n-import org.syncope.console.pages.DerivedSchemaModalPage;\n import org.syncope.console.pages.SchemaModalPage;\n-import org.syncope.console.pages.SchemaModalPage;\n-import org.syncope.console.pages.VirtualSchemaModalPage;\n import org.syncope.console.pages.VirtualSchemaModalPage;\n import org.syncope.console.rest.SchemaRestClient;\n+import org.syncope.types.AttributableType;\n \n /**\n  * Modal window with Schema form.\n@@ -41,30 +37,28 @@ abstract public class SchemaModalPageFactory extends BaseModalPage {\n     @SpringBean\n     protected SchemaRestClient restClient;\n \n-    public enum Entity {\n-\n-        user, role, membership\n-    };\n-\n     public enum SchemaType {\n \n-        NORMAL, DERIVED, VIRTUAL\n+        NORMAL,\n+        DERIVED,\n+        VIRTUAL\n+\n     };\n \n     public static AbstractSchemaModalPage getSchemaModalPage(\n-            Entity entity, SchemaType schemaType) {\n+            AttributableType entity, SchemaType schemaType) {\n \n         AbstractSchemaModalPage page;\n \n         switch (schemaType) {\n             case DERIVED:\n-                page = new DerivedSchemaModalPage(entity.toString());\n+                page = new DerivedSchemaModalPage(entity);\n                 break;\n             case VIRTUAL:\n-                page = new VirtualSchemaModalPage(entity.toString());\n+                page = new VirtualSchemaModalPage(entity);\n                 break;\n             default:\n-                page = new SchemaModalPage(entity.toString());\n+                page = new SchemaModalPage(entity);\n                 break;\n         }\n "},{"sha":"dbc5d91eb0b02ef491f9f3c63ac4706fef69060c","filename":"console/src/main/java/org/syncope/console/pages/AbstractSchedTaskModalPage.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchedTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchedTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchedTaskModalPage.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -55,15 +55,13 @@ public AbstractSchedTaskModalPage(\n                 taskTO.getCronExpression());\n         form.add(crontab);\n \n-        final AjaxTextFieldPanel lastExec = new AjaxTextFieldPanel(\n-                \"lastExec\", getString(\"lastExec\"), new DateFormatROModel(\n-                new PropertyModel<String>(taskTO, \"lastExec\")), false);\n+        final AjaxTextFieldPanel lastExec = new AjaxTextFieldPanel(\"lastExec\", getString(\"lastExec\"),\n+                new DateFormatROModel(new PropertyModel<String>(taskTO, \"lastExec\")));\n         lastExec.setEnabled(false);\n         profile.add(lastExec);\n \n-        final AjaxTextFieldPanel nextExec = new AjaxTextFieldPanel(\n-                \"nextExec\", getString(\"nextExec\"), new DateFormatROModel(\n-                new PropertyModel<String>(taskTO, \"nextExec\")), false);\n+        final AjaxTextFieldPanel nextExec = new AjaxTextFieldPanel(\"nextExec\", getString(\"nextExec\"),\n+                new DateFormatROModel(new PropertyModel<String>(taskTO, \"nextExec\")));\n         nextExec.setEnabled(false);\n         profile.add(nextExec);\n "},{"sha":"d467f58b5331b716123ba5fb4a07551c385b72cb","filename":"console/src/main/java/org/syncope/console/pages/AbstractSchemaModalPage.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAbstractSchemaModalPage.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -21,8 +21,9 @@\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.syncope.console.rest.SchemaRestClient;\n import org.syncope.client.AbstractBaseBean;\n+import org.syncope.console.rest.SchemaRestClient;\n+import org.syncope.types.AttributableType;\n \n /**\n  * Modal window with Schema form.\n@@ -34,9 +35,9 @@ abstract public class AbstractSchemaModalPage extends BaseModalPage {\n     @SpringBean\n     protected SchemaRestClient restClient;\n \n-    protected String kind;\n+    protected AttributableType kind;\n \n-    public AbstractSchemaModalPage(String kind) {\n+    public AbstractSchemaModalPage(AttributableType kind) {\n         this.kind = kind;\n     }\n \n@@ -46,7 +47,7 @@ abstract public void setSchemaModalPage(\n             AbstractBaseBean schema,\n             final boolean createFlag);\n \n-    public String getKind() {\n+    public AttributableType getKind() {\n         return kind;\n     }\n }"},{"sha":"1f07fb5728bc90f6d55e9584981260f5f9057dc1","filename":"console/src/main/java/org/syncope/console/pages/ApprovalModalPage.java","status":"modified","additions":79,"deletions":122,"changes":201,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FApprovalModalPage.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -59,163 +59,122 @@ public class ApprovalModalPage extends BaseModalPage {\n     @SpringBean\n     private ApprovalRestClient restClient;\n \n-    public ApprovalModalPage(final PageReference callerPageRef,\n-            final ModalWindow window, final WorkflowFormTO formTO) {\n-\n+    public ApprovalModalPage(final PageReference callerPageRef, final ModalWindow window, final WorkflowFormTO formTO) {\n         super();\n \n-        IModel<List<WorkflowFormPropertyTO>> formProps =\n-                new LoadableDetachableModel<List<WorkflowFormPropertyTO>>() {\n+        IModel<List<WorkflowFormPropertyTO>> formProps = new LoadableDetachableModel<List<WorkflowFormPropertyTO>>() {\n \n-                    private static final long serialVersionUID =\n-                            3169142472626817508L;\n+            private static final long serialVersionUID = 3169142472626817508L;\n \n-                    @Override\n-                    protected List<WorkflowFormPropertyTO> load() {\n-                        return formTO.getProperties();\n-                    }\n-                };\n+            @Override\n+            protected List<WorkflowFormPropertyTO> load() {\n+                return formTO.getProperties();\n+            }\n+        };\n \n-        final ListView<WorkflowFormPropertyTO> propView =\n-                new ListView<WorkflowFormPropertyTO>(\"propView\", formProps) {\n+        final ListView<WorkflowFormPropertyTO> propView = new ListView<WorkflowFormPropertyTO>(\"propView\", formProps) {\n \n-                    private static final long serialVersionUID =\n-                            9101744072914090143L;\n+            private static final long serialVersionUID = 9101744072914090143L;\n \n-                    @Override\n-                    protected void populateItem(\n-                            final ListItem<WorkflowFormPropertyTO> item) {\n+            @Override\n+            protected void populateItem(final ListItem<WorkflowFormPropertyTO> item) {\n+                final WorkflowFormPropertyTO prop = item.getModelObject();\n+\n+                Label label = new Label(\"key\", prop.getName() == null ? prop.getId() : prop.getName());\n+                item.add(label);\n+\n+                FieldPanel field;\n+                switch (prop.getType()) {\n+                    case Boolean:\n+                        field = new AjaxDropDownChoicePanel(\"value\", label.getDefaultModelObjectAsString(),\n+                                new Model(Boolean.valueOf(prop.getValue()))).setChoices(Arrays.asList(\n+                                new String[]{\"Yes\", \"No\"}));\n+                        break;\n+\n+                    case Date:\n+                        SimpleDateFormat df =\n+                                StringUtils.isNotBlank(prop.getDatePattern())\n+                                ? new SimpleDateFormat(prop.getDatePattern())\n+                                : new SimpleDateFormat();\n+                        Date parsedDate = null;\n+                        if (StringUtils.isNotBlank(prop.getValue())) {\n+                            try {\n+                                parsedDate = df.parse(prop.getValue());\n+                            } catch (ParseException e) {\n+                                LOG.error(\"Unparsable date: {}\",\n+                                        prop.getValue(), e);\n+                            }\n+                        }\n \n-                        final WorkflowFormPropertyTO prop =\n-                                item.getModelObject();\n+                        field = new DateTimeFieldPanel(\"value\", label.getDefaultModelObjectAsString(),\n+                                new Model(parsedDate), df.toLocalizedPattern());\n+                        break;\n \n-                        Label label = new Label(\"key\",\n-                                prop.getName() == null\n-                                ? prop.getId() : prop.getName());\n-                        item.add(label);\n+                    case Enum:\n+                        MapChoiceRenderer<String, String> enumCR =\n+                                new MapChoiceRenderer<String, String>(prop.getEnumValues());\n \n-                        FieldPanel field = null;\n-                        switch (prop.getType()) {\n-                            case Boolean:\n-                                field = new AjaxDropDownChoicePanel(\"value\",\n-                                        label.getDefaultModelObjectAsString(),\n-                                        new Model(\n-                                        Boolean.valueOf(prop.getValue())),\n-                                        true).setChoices(Arrays.asList(\n-                                        new String[]{\"Yes\", \"No\"}));\n-                                break;\n+                        field = new AjaxDropDownChoicePanel(\"value\", label.getDefaultModelObjectAsString(),\n+                                new Model(prop.getValue())).setChoiceRenderer(enumCR).setChoices(new Model() {\n \n-                            case Date:\n-                                SimpleDateFormat df =\n-                                        StringUtils.isNotBlank(prop.\n-                                        getDatePattern())\n-                                        ? new SimpleDateFormat(prop.\n-                                        getDatePattern())\n-                                        : new SimpleDateFormat();\n-                                Date parsedDate = null;\n-                                if (StringUtils.isNotBlank(prop.getValue())) {\n-                                    try {\n-                                        parsedDate = df.parse(prop.getValue());\n-                                    } catch (ParseException e) {\n-                                        LOG.error(\"Unparsable date: {}\",\n-                                                prop.getValue(), e);\n-                                    }\n-                                }\n-\n-                                field = new DateTimeFieldPanel(\"value\",\n-                                        label.getDefaultModelObjectAsString(),\n-                                        new Model(parsedDate), true,\n-                                        df.toLocalizedPattern());\n-                                break;\n+                            private static final long serialVersionUID = -858521070366432018L;\n \n-                            case Enum:\n-                                MapChoiceRenderer<String, String> enumCR =\n-                                        new MapChoiceRenderer<String, String>(\n-                                        prop.getEnumValues());\n-\n-                                field = new AjaxDropDownChoicePanel(\"value\",\n-                                        label.getDefaultModelObjectAsString(),\n-                                        new Model(prop.getValue()),\n-                                        true).setChoiceRenderer(enumCR).\n-                                        setChoices(new Model() {\n-\n-                                    private static final long serialVersionUID =\n-                                            -858521070366432018L;\n-\n-                                    @Override\n-                                    public Serializable getObject() {\n-                                        return new ArrayList(\n-                                                prop.getEnumValues().\n-                                                keySet());\n-                                    }\n-                                });\n-                                break;\n+                            @Override\n+                            public Serializable getObject() {\n+                                return new ArrayList(prop.getEnumValues().keySet());\n+                            }\n+                        });\n+                        break;\n \n-                            case Long:\n-                                field = new AjaxNumberFieldPanel(\"value\",\n-                                        label.getDefaultModelObjectAsString(),\n-                                        new Model(\n-                                        Long.valueOf(prop.getValue())),\n-                                        Long.class,\n-                                        true);\n-                                break;\n+                    case Long:\n+                        field = new AjaxNumberFieldPanel(\"value\", label.getDefaultModelObjectAsString(),\n+                                new Model(Long.valueOf(prop.getValue())), Long.class);\n+                        break;\n \n-                            case String:\n-                            default:\n-                                field = new AjaxTextFieldPanel(\"value\",\n-                                        PARENT_PATH,\n-                                        new Model(prop.getValue()),\n-                                        true);\n-                                break;\n-                        }\n+                    case String:\n+                    default:\n+                        field = new AjaxTextFieldPanel(\"value\", PARENT_PATH, new Model(prop.getValue()));\n+                        break;\n+                }\n \n-                        field.setReadOnly(!prop.isWritable());\n-                        if (prop.isRequired()) {\n-                            field.addRequiredLabel();\n-                        }\n+                field.setReadOnly(!prop.isWritable());\n+                if (prop.isRequired()) {\n+                    field.addRequiredLabel();\n+                }\n \n-                        item.add(field);\n-                    }\n-                };\n+                item.add(field);\n+            }\n+        };\n \n-        final AjaxButton submit = new IndicatingAjaxButton(\"apply\", new Model(\n-                getString(\"submit\"))) {\n+        final AjaxButton submit = new IndicatingAjaxButton(\"apply\", new Model(getString(\"submit\"))) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form<?> form) {\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n-                Map<String, WorkflowFormPropertyTO> props =\n-                        formTO.getPropertiesAsMap();\n+                Map<String, WorkflowFormPropertyTO> props = formTO.getPropertiesAsMap();\n \n                 for (int i = 0; i < propView.size(); i++) {\n-                    ListItem<WorkflowFormPropertyTO> item =\n-                            (ListItem<WorkflowFormPropertyTO>) propView.get(i);\n-                    String input = ((FieldPanel) item.get(\"value\")).getField().\n-                            getInput();\n+                    ListItem<WorkflowFormPropertyTO> item = (ListItem<WorkflowFormPropertyTO>) propView.get(i);\n+                    String input = ((FieldPanel) item.get(\"value\")).getField().getInput();\n \n                     if (!props.containsKey(item.getModelObject().getId())) {\n-                        props.put(item.getModelObject().getId(),\n-                                new WorkflowFormPropertyTO());\n+                        props.put(item.getModelObject().getId(), new WorkflowFormPropertyTO());\n                     }\n \n                     if (item.getModelObject().isWritable()) {\n                         switch (item.getModelObject().getType()) {\n                             case Boolean:\n-                                props.get(item.getModelObject().getId()).\n-                                        setValue(\n-                                        String.valueOf(input.equals(\"0\")));\n+                                props.get(item.getModelObject().getId()).setValue(String.valueOf(input.equals(\"0\")));\n                                 break;\n \n                             case Date:\n                             case Enum:\n                             case String:\n                             case Long:\n                             default:\n-                                props.get(item.getModelObject().getId()).\n-                                        setValue(input);\n+                                props.get(item.getModelObject().getId()).setValue(input);\n                                 break;\n                         }\n                     }\n@@ -235,9 +194,7 @@ protected void onSubmit(final AjaxRequestTarget target,\n             }\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form<?> form) {\n-\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n                 target.add(feedbackPanel);\n             }\n         };"},{"sha":"a5a2c45e37d3affc975903245c6421daa890e9f3","filename":"console/src/main/java/org/syncope/console/pages/ConfigurationModalPage.java","status":"modified","additions":4,"deletions":7,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -47,7 +47,7 @@ public class ConfigurationModalPage extends BaseModalPage {\n \n     /**\n      * ConfigurationModalPage constructor.\n-     * \n+     *\n      * @param callPageRef base\n      * @param window\n      * @param configurationTO\n@@ -61,16 +61,13 @@ public ConfigurationModalPage(final PageReference callPageRef,\n         Form form = new Form(\"form\", new CompoundPropertyModel(\n                 configurationTO));\n \n-        final AjaxTextFieldPanel key = new AjaxTextFieldPanel(\n-                \"key\", \"key\",\n-                new PropertyModel(configurationTO, \"key\"), false);\n+        final AjaxTextFieldPanel key = new AjaxTextFieldPanel(\"key\", \"key\", new PropertyModel(configurationTO, \"key\"));\n         form.add(key);\n         key.setEnabled(createFlag);\n         key.addRequiredLabel();\n \n-        final AjaxTextFieldPanel value = new AjaxTextFieldPanel(\n-                \"value\", \"value\",\n-                new PropertyModel(configurationTO, \"value\"), false);\n+        final AjaxTextFieldPanel value = new AjaxTextFieldPanel(\"value\", \"value\",\n+                new PropertyModel(configurationTO, \"value\"));\n         form.add(value);\n         value.addRequiredLabel();\n "},{"sha":"b2245ec5db263c53b9880c5feb4b3b5fcba5d5b0","filename":"console/src/main/java/org/syncope/console/pages/ConnectorModalPage.java","status":"modified","additions":69,"deletions":146,"changes":215,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -73,12 +73,10 @@ public class ConnectorModalPage extends BaseModalPage {\n     private static final long serialVersionUID = -2025535531121434050L;\n \n     // GuardedString is not in classpath\n-    private static final String GUARDED_STRING =\n-            \"org.identityconnectors.common.security.GuardedString\";\n+    private static final String GUARDED_STRING = \"org.identityconnectors.common.security.GuardedString\";\n \n     // GuardedByteArray is not in classpath\n-    private static final String GUARDED_BYTE_ARRAY =\n-            \"org.identityconnectors.common.security.GuardedByteArray\";\n+    private static final String GUARDED_BYTE_ARRAY = \"org.identityconnectors.common.security.GuardedByteArray\";\n \n     private static final List<Class> NUMBER = Arrays.asList(new Class[]{\n                 Integer.class,\n@@ -104,79 +102,57 @@ public class ConnectorModalPage extends BaseModalPage {\n \n     private List<ConnConfProperty> properties;\n \n-    public ConnectorModalPage(\n-            final PageReference callerPageRef,\n-            final ModalWindow window,\n+    public ConnectorModalPage(final PageReference callerPageRef, final ModalWindow window,\n             final ConnInstanceTO connectorTO) {\n \n         super();\n \n         selectedCapabilities = new ArrayList(connectorTO.getId() == 0\n-                ? EnumSet.noneOf(ConnectorCapability.class)\n-                : connectorTO.getCapabilities());\n+                ? EnumSet.noneOf(ConnectorCapability.class) : connectorTO.getCapabilities());\n \n         final IModel<List<ConnectorCapability>> capabilities =\n                 new LoadableDetachableModel<List<ConnectorCapability>>() {\n \n-                    private static final long serialVersionUID =\n-                            5275935387613157437L;\n+                    private static final long serialVersionUID = 5275935387613157437L;\n \n                     @Override\n                     protected List<ConnectorCapability> load() {\n                         return Arrays.asList(ConnectorCapability.values());\n                     }\n                 };\n \n-        final IModel<List<ConnBundleTO>> bundles =\n-                new LoadableDetachableModel<List<ConnBundleTO>>() {\n+        final IModel<List<ConnBundleTO>> bundles = new LoadableDetachableModel<List<ConnBundleTO>>() {\n \n-                    private static final long serialVersionUID =\n-                            5275935387613157437L;\n+            private static final long serialVersionUID = 5275935387613157437L;\n \n-                    @Override\n-                    protected List<ConnBundleTO> load() {\n-                        return restClient.getAllBundles();\n-                    }\n-                };\n+            @Override\n+            protected List<ConnBundleTO> load() {\n+                return restClient.getAllBundles();\n+            }\n+        };\n \n         bundleTO = getSelectedBundleTO(bundles.getObject(), connectorTO);\n-        properties = getProperties(bundleTO, connectorTO);\n-\n-        final AjaxTextFieldPanel connectorName = new AjaxTextFieldPanel(\n-                \"connectorName\",\n-                \"connector name\",\n-                new PropertyModel<String>(connectorTO, \"connectorName\"),\n-                false);\n+        properties = fillProperties(bundleTO, connectorTO);\n \n+        final AjaxTextFieldPanel connectorName = new AjaxTextFieldPanel(\"connectorName\", \"connector name\",\n+                new PropertyModel<String>(connectorTO, \"connectorName\"));\n         connectorName.setOutputMarkupId(true);\n         connectorName.setEnabled(false);\n \n-        final AjaxTextFieldPanel displayName = new AjaxTextFieldPanel(\n-                \"displayName\",\n-                \"display name\",\n-                new PropertyModel<String>(connectorTO, \"displayName\"),\n-                false);\n-\n+        final AjaxTextFieldPanel displayName = new AjaxTextFieldPanel(\"displayName\", \"display name\",\n+                new PropertyModel<String>(connectorTO, \"displayName\"));\n         displayName.setOutputMarkupId(true);\n         displayName.addRequiredLabel();\n \n-        final AjaxTextFieldPanel version = new AjaxTextFieldPanel(\n-                \"version\",\n-                \"version\",\n-                new PropertyModel<String>(connectorTO, \"version\"),\n-                false);\n-\n+        final AjaxTextFieldPanel version = new AjaxTextFieldPanel(\"version\", \"version\",\n+                new PropertyModel<String>(connectorTO, \"version\"));\n         displayName.setOutputMarkupId(true);\n         version.setEnabled(false);\n \n-        final AjaxDropDownChoicePanel<ConnBundleTO> bundle =\n-                new AjaxDropDownChoicePanel<ConnBundleTO>(\n-                \"bundle\", \"bundle\", new Model<ConnBundleTO>(bundleTO), false);\n-\n+        final AjaxDropDownChoicePanel<ConnBundleTO> bundle = new AjaxDropDownChoicePanel<ConnBundleTO>(\n+                \"bundle\", \"bundle\", new Model<ConnBundleTO>(bundleTO));\n         bundle.setStyleShet(\"long_dynamicsize\");\n-\n         bundle.setChoices(bundles.getObject());\n-\n         bundle.setChoiceRenderer(new ChoiceRenderer<ConnBundleTO>() {\n \n             private static final long serialVersionUID =\n@@ -188,39 +164,33 @@ public Object getDisplayValue(final ConnBundleTO object) {\n             }\n \n             @Override\n-            public String getIdValue(final ConnBundleTO object,\n-                    final int index) {\n+            public String getIdValue(final ConnBundleTO object, final int index) {\n                 // idValue must include version as well in order to cope\n                 // with multiple version of the same bundle.\n                 return object.getBundleName() + \"#\" + object.getVersion();\n             }\n         });\n-\n         ((DropDownChoice) bundle.getField()).setNullValid(true);\n         bundle.setRequired(true);\n+        bundle.getField().add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-        bundle.getField().add(\n-                new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-\n-                    private static final long serialVersionUID =\n-                            -1107858522700306810L;\n-\n-                    @Override\n-                    protected void onUpdate(final AjaxRequestTarget target) {\n-                        //reset all informations stored in connectorTO\n-                        connectorTO.setConfiguration(\n-                                new HashSet<ConnConfProperty>());\n+            private static final long serialVersionUID =\n+                    -1107858522700306810L;\n \n-                        ((DropDownChoice) bundle.getField()).setNullValid(false);\n-                        target.add(bundle.getField());\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                // reset all information stored in connectorTO\n+                connectorTO.setConfiguration(new HashSet<ConnConfProperty>());\n \n-                        target.add(connectorName);\n-                        target.add(version);\n+                ((DropDownChoice) bundle.getField()).setNullValid(false);\n+                target.add(bundle.getField());\n \n-                        target.add(propertiesContainer);\n-                    }\n-                });\n+                target.add(connectorName);\n+                target.add(version);\n \n+                target.add(propertiesContainer);\n+            }\n+        });\n         bundle.getField().setModel(new IModel<ConnBundleTO>() {\n \n             private static final long serialVersionUID = -3736598995576061229L;\n@@ -236,7 +206,7 @@ public void setObject(final ConnBundleTO object) {\n                     connectorTO.setBundleName(object.getBundleName());\n                     connectorTO.setVersion(object.getVersion());\n                     connectorTO.setConnectorName(object.getConnectorName());\n-                    properties = getProperties(object, connectorTO);\n+                    properties = fillProperties(object, connectorTO);\n                     bundleTO = object;\n                 }\n             }\n@@ -245,25 +215,21 @@ public void setObject(final ConnBundleTO object) {\n             public void detach() {\n             }\n         });\n-\n         bundle.addRequiredLabel();\n         bundle.setEnabled(connectorTO.getId() == 0);\n \n-        final ListView<ConnConfProperty> view = new ListView<ConnConfProperty>(\n-                \"connectorProperties\",\n+        final ListView<ConnConfProperty> view = new ListView<ConnConfProperty>(\"connectorProperties\",\n                 new PropertyModel(this, \"properties\")) {\n \n             private static final long serialVersionUID =\n                     9101744072914090143L;\n \n             @Override\n-            protected void populateItem(\n-                    final ListItem<ConnConfProperty> item) {\n+            protected void populateItem(final ListItem<ConnConfProperty> item) {\n                 final ConnConfProperty property = item.getModelObject();\n \n                 final Label label = new Label(\"connPropAttrSchema\",\n-                        property.getSchema().getDisplayName() == null\n-                        || property.getSchema().getDisplayName().isEmpty()\n+                        property.getSchema().getDisplayName() == null || property.getSchema().getDisplayName().isEmpty()\n                         ? property.getSchema().getName()\n                         : property.getSchema().getDisplayName());\n \n@@ -275,58 +241,35 @@ protected void populateItem(\n \n                 boolean isArray = false;\n \n-                if (GUARDED_STRING.equalsIgnoreCase(\n-                        property.getSchema().getType())\n-                        || GUARDED_BYTE_ARRAY.equalsIgnoreCase(\n-                        property.getSchema().getType())) {\n+                if (GUARDED_STRING.equalsIgnoreCase(property.getSchema().getType())\n+                        || GUARDED_BYTE_ARRAY.equalsIgnoreCase(property.getSchema().getType())) {\n \n-                    field = new AjaxPasswordFieldPanel(\n-                            \"panel\",\n-                            label.getDefaultModelObjectAsString(),\n-                            new Model(),\n-                            true);\n+                    field = new AjaxPasswordFieldPanel(\"panel\", label.getDefaultModelObjectAsString(), new Model());\n \n-                    ((PasswordTextField) field.getField()).setResetPassword(\n-                            false);\n+                    ((PasswordTextField) field.getField()).setResetPassword(false);\n \n                     required = property.getSchema().isRequired();\n \n                 } else {\n                     Class propertySchemaClass;\n \n                     try {\n-                        propertySchemaClass = ClassUtils.forName(\n-                                property.getSchema().getType(),\n+                        propertySchemaClass = ClassUtils.forName(property.getSchema().getType(),\n                                 ClassUtils.getDefaultClassLoader());\n                     } catch (Exception e) {\n                         LOG.error(\"Error parsing attribute type\", e);\n                         propertySchemaClass = String.class;\n                     }\n \n                     if (NUMBER.contains(propertySchemaClass)) {\n-                        field = new AjaxNumberFieldPanel(\n-                                \"panel\",\n-                                label.getDefaultModelObjectAsString(),\n-                                new Model(),\n-                                ClassUtils.resolvePrimitiveIfNecessary(\n-                                propertySchemaClass),\n-                                true);\n+                        field = new AjaxNumberFieldPanel(\"panel\", label.getDefaultModelObjectAsString(), new Model(),\n+                                ClassUtils.resolvePrimitiveIfNecessary(propertySchemaClass));\n \n                         required = property.getSchema().isRequired();\n-                    } else if (Boolean.class.equals(propertySchemaClass)\n-                            || boolean.class.equals(propertySchemaClass)) {\n-                        field = new AjaxCheckBoxPanel(\n-                                \"panel\",\n-                                label.getDefaultModelObjectAsString(),\n-                                new Model(),\n-                                true);\n+                    } else if (Boolean.class.equals(propertySchemaClass) || boolean.class.equals(propertySchemaClass)) {\n+                        field = new AjaxCheckBoxPanel(\"panel\", label.getDefaultModelObjectAsString(), new Model());\n                     } else {\n-\n-                        field = new AjaxTextFieldPanel(\n-                                \"panel\",\n-                                label.getDefaultModelObjectAsString(),\n-                                new Model(),\n-                                true);\n+                        field = new AjaxTextFieldPanel(\"panel\", label.getDefaultModelObjectAsString(), new Model());\n \n                         required = property.getSchema().isRequired();\n                     }\n@@ -345,11 +288,8 @@ protected void populateItem(\n                         property.getValues().add(null);\n                     }\n \n-                    item.add(new MultiValueSelectorPanel<String>(\n-                            \"panel\",\n-                            new PropertyModel<List<String>>(property, \"values\"),\n-                            String.class,\n-                            field));\n+                    item.add(new MultiValueSelectorPanel<String>(\"panel\",\n+                            new PropertyModel<List<String>>(property, \"values\"), field));\n                 } else {\n                     if (required) {\n                         field.addRequiredLabel();\n@@ -359,11 +299,8 @@ protected void populateItem(\n                     item.add(field);\n                 }\n \n-                final AjaxCheckBoxPanel overridable = new AjaxCheckBoxPanel(\n-                        \"connPropAttrOverridable\",\n-                        \"connPropAttrOverridable\",\n-                        new PropertyModel(property, \"overridable\"),\n-                        true);\n+                final AjaxCheckBoxPanel overridable = new AjaxCheckBoxPanel(\"connPropAttrOverridable\",\n+                        \"connPropAttrOverridable\", new PropertyModel(property, \"overridable\"));\n \n                 item.add(overridable);\n                 connectorTO.getConfiguration().add(property);\n@@ -387,12 +324,10 @@ protected void populateItem(\n         final AjaxLink check =\n                 new IndicatingAjaxLink(\"check\", new ResourceModel(\"check\")) {\n \n-                    private static final long serialVersionUID =\n-                            -7978723352517770644L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n-\n                         connectorTO.setBundleName(bundleTO.getBundleName());\n                         connectorTO.setVersion(bundleTO.getVersion());\n \n@@ -408,29 +343,19 @@ public void onClick(final AjaxRequestTarget target) {\n \n         connectorPropForm.add(check);\n \n-        final AjaxButton submit = new IndicatingAjaxButton(\"apply\", new Model(\n-                getString(\"submit\"))) {\n+        final AjaxButton submit = new IndicatingAjaxButton(\"apply\", new Model(getString(\"submit\"))) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form form) {\n-\n-                final ConnInstanceTO conn =\n-                        (ConnInstanceTO) form.getDefaultModelObject();\n+            protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n+                final ConnInstanceTO conn = (ConnInstanceTO) form.getDefaultModelObject();\n \n                 conn.setBundleName(bundleTO.getBundleName());\n \n-                // Set the model object's capabilites to\n-                // capabilitiesPalette's converted Set\n-                if (!selectedCapabilities.isEmpty()) {\n-                    // exception if selectedCapabilities is empy\n-                    conn.setCapabilities(EnumSet.copyOf(selectedCapabilities));\n-                } else {\n-                    conn.setCapabilities(\n-                            EnumSet.noneOf(ConnectorCapability.class));\n-                }\n+                // Set the model object's capabilites to capabilitiesPalette's converted Set\n+                conn.setCapabilities(selectedCapabilities.isEmpty()\n+                        ? EnumSet.noneOf(ConnectorCapability.class) : EnumSet.copyOf(selectedCapabilities));\n                 try {\n                     if (connectorTO.getId() == 0) {\n                         restClient.create(conn);\n@@ -449,8 +374,7 @@ protected void onSubmit(final AjaxRequestTarget target,\n             }\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form form) {\n+            protected void onError(final AjaxRequestTarget target, final Form form) {\n \n                 target.add(feedbackPanel);\n             }\n@@ -476,8 +400,7 @@ protected void onError(final AjaxRequestTarget target,\n         add(connectorForm);\n     }\n \n-    private ConnBundleTO getSelectedBundleTO(\n-            final List<ConnBundleTO> bundles, final ConnInstanceTO connTO) {\n+    private ConnBundleTO getSelectedBundleTO(final List<ConnBundleTO> bundles, final ConnInstanceTO connTO) {\n         // -------------------------------------\n         // Manage bundle and connector beans\n         // -------------------------------------\n@@ -487,9 +410,7 @@ private ConnBundleTO getSelectedBundleTO(\n                 && StringUtils.isNotBlank(connTO.getVersion())) {\n \n             for (ConnBundleTO to : bundles) {\n-                if (to.getVersion().equals(connTO.getVersion())\n-                        && to.getBundleName().equals(connTO.getBundleName())) {\n-\n+                if (to.getVersion().equals(connTO.getVersion()) && to.getBundleName().equals(connTO.getBundleName())) {\n                     connTO.setConnectorName(to.getConnectorName());\n                     connTO.setVersion(to.getVersion());\n \n@@ -501,9 +422,7 @@ private ConnBundleTO getSelectedBundleTO(\n         return null;\n     }\n \n-    private List<ConnConfProperty> getProperties(\n-            final ConnBundleTO bundleTO, final ConnInstanceTO connTO) {\n-\n+    private List<ConnConfProperty> fillProperties(final ConnBundleTO bundleTO, final ConnInstanceTO connTO) {\n         // -------------------------------------\n         // Manage bundle properties\n         // -------------------------------------\n@@ -522,4 +441,8 @@ private List<ConnConfProperty> getProperties(\n \n         return props;\n     }\n+\n+    public List<ConnConfProperty> getProperties() {\n+        return properties;\n+    }\n }"},{"sha":"c9e408cd6633cc6a23c4509f30f34f4508764ada","filename":"console/src/main/java/org/syncope/console/pages/DerivedSchemaModalPage.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDerivedSchemaModalPage.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -31,6 +31,7 @@\n import org.syncope.client.to.DerivedSchemaTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.syncope.types.AttributableType;\n \n /**\n  * Modal window with Schema form.\n@@ -39,7 +40,7 @@ public class DerivedSchemaModalPage extends AbstractSchemaModalPage {\n \n     private static final long serialVersionUID = 6668789770131753386L;\n \n-    public DerivedSchemaModalPage(String kind) {\n+    public DerivedSchemaModalPage(AttributableType kind) {\n         super(kind);\n     }\n \n@@ -58,14 +59,12 @@ public void setSchemaModalPage(\n \n         schemaForm.setModel(new CompoundPropertyModel(schema));\n \n-        final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\n-                \"name\", getString(\"name\"),\n-                new PropertyModel<String>(schema, \"name\"), false);\n+        final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\"name\", getString(\"name\"),\n+                new PropertyModel<String>(schema, \"name\"));\n         name.addRequiredLabel();\n \n-        final AjaxTextFieldPanel expression = new AjaxTextFieldPanel(\n-                \"expression\", getString(\"expression\"),\n-                new PropertyModel<String>(schema, \"expression\"), false);\n+        final AjaxTextFieldPanel expression = new AjaxTextFieldPanel(\"expression\", getString(\"expression\"),\n+                new PropertyModel<String>(schema, \"expression\"));\n         expression.addRequiredLabel();\n \n         name.setEnabled(createFlag);"},{"sha":"b1b42b2b3a9447662013215506f1659ba4e2e113","filename":"console/src/main/java/org/syncope/console/pages/DisplayAttributesModalPage.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -46,6 +46,7 @@\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.PreferenceManager;\n import org.syncope.console.rest.SchemaRestClient;\n+import org.syncope.types.AttributableType;\n \n /**\n  * Modal window with Display attributes form.\n@@ -57,7 +58,7 @@ public class DisplayAttributesModalPage extends BaseModalPage {\n     /**\n      * Max permitted selections.\n      */\n-    private final int MAX_SELECTIONS = 9;\n+    private static final int MAX_SELECTIONS = 9;\n \n     private List<String> ATTRIBUTES_NOTINCLUDED = Arrays.asList(new String[]{\n                 \"attributes\", \"derivedAttributes\", \"virtualAttributes\",\n@@ -109,7 +110,7 @@ protected List<String> load() {\n                 protected List<String> load() {\n \n                     List<String> schemas =\n-                            schemaRestClient.getSchemaNames(\"user\");\n+                            schemaRestClient.getSchemaNames(AttributableType.USER);\n \n                     if (schemas == null) {\n                         schemas = new ArrayList<String>();\n@@ -128,8 +129,7 @@ protected List<String> load() {\n                 @Override\n                 protected List<String> load() {\n \n-                    List<String> schemas =\n-                            schemaRestClient.getDerivedSchemaNames(\"user\");\n+                    List<String> schemas = schemaRestClient.getDerivedSchemaNames(AttributableType.USER);\n \n                     if (schemas == null) {\n                         schemas = new ArrayList<String>();\n@@ -148,8 +148,7 @@ protected List<String> load() {\n                 @Override\n                 protected List<String> load() {\n \n-                    List<String> schemas =\n-                            schemaRestClient.getVirtualSchemaNames(\"user\");\n+                    List<String> schemas = schemaRestClient.getVirtualSchemaNames(AttributableType.USER);\n \n                     if (schemas == null) {\n                         schemas = new ArrayList<String>();"},{"sha":"6e4d636c07e9ca3ed2dd45cbfd02c5b3d99c9b12","filename":"console/src/main/java/org/syncope/console/pages/NotificationModalPage.java","status":"modified","additions":13,"deletions":25,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationModalPage.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -58,53 +58,41 @@ public NotificationModalPage(final PageReference callPageRef,\n                 notificationTO));\n         form.setModel(new CompoundPropertyModel(notificationTO));\n \n-        final AjaxTextFieldPanel sender = new AjaxTextFieldPanel(\n-                \"sender\", getString(\"sender\"),\n-                new PropertyModel<String>(notificationTO, \"sender\"), false);\n+        final AjaxTextFieldPanel sender = new AjaxTextFieldPanel(\"sender\", getString(\"sender\"),\n+                new PropertyModel<String>(notificationTO, \"sender\"));\n         sender.addRequiredLabel();\n         sender.addValidator(EmailAddressValidator.getInstance());\n         form.add(sender);\n \n-        final AjaxTextFieldPanel subject = new AjaxTextFieldPanel(\n-                \"subject\", getString(\"subject\"),\n-                new PropertyModel<String>(notificationTO, \"subject\"), false);\n+        final AjaxTextFieldPanel subject = new AjaxTextFieldPanel(\"subject\", getString(\"subject\"),\n+                new PropertyModel<String>(notificationTO, \"subject\"));\n         subject.addRequiredLabel();\n         form.add(subject);\n \n-        final AjaxDropDownChoicePanel<String> template =\n-                new AjaxDropDownChoicePanel<String>(\"template\",\n-                getString(\"template\"),\n-                new PropertyModel(notificationTO, \"template\"),\n-                false);\n+        final AjaxDropDownChoicePanel<String> template = new AjaxDropDownChoicePanel<String>(\"template\",\n+                getString(\"template\"), new PropertyModel(notificationTO, \"template\"));\n         template.setChoices(restClient.getMailTemplates());\n         template.addRequiredLabel();\n         form.add(template);\n \n-        final AjaxDropDownChoicePanel<TraceLevel> traceLevel =\n-                new AjaxDropDownChoicePanel<TraceLevel>(\"traceLevel\",\n-                getString(\"traceLevel\"),\n-                new PropertyModel(notificationTO, \"traceLevel\"),\n-                false);\n+        final AjaxDropDownChoicePanel<TraceLevel> traceLevel = new AjaxDropDownChoicePanel<TraceLevel>(\"traceLevel\",\n+                getString(\"traceLevel\"), new PropertyModel(notificationTO, \"traceLevel\"));\n         traceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n         traceLevel.addRequiredLabel();\n         form.add(traceLevel);\n \n-        final UserSearchPanel about = new UserSearchPanel(\"about\",\n-                notificationTO.getAbout());\n+        final UserSearchPanel about = new UserSearchPanel(\"about\", notificationTO.getAbout());\n         form.add(about);\n \n-        final AjaxPalettePanel events = new AjaxPalettePanel(\n-                \"events\", new PropertyModel(notificationTO, \"events\"),\n+        final AjaxPalettePanel events = new AjaxPalettePanel(\"events\", new PropertyModel(notificationTO, \"events\"),\n                 new ListModel<String>(restClient.getEvents()));\n         form.add(events);\n \n-        final UserSearchPanel recipients = new UserSearchPanel(\"recipients\",\n-                notificationTO.getRecipients());\n+        final UserSearchPanel recipients = new UserSearchPanel(\"recipients\", notificationTO.getRecipients());\n         form.add(recipients);\n \n-        final AjaxCheckBoxPanel selfAsRecipient = new AjaxCheckBoxPanel(\n-                \"selfAsRecipient\", getString(\"selfAsRecipient\"),\n-                new PropertyModel(notificationTO, \"selfAsRecipient\"), false);\n+        final AjaxCheckBoxPanel selfAsRecipient = new AjaxCheckBoxPanel(\"selfAsRecipient\", getString(\"selfAsRecipient\"),\n+                new PropertyModel(notificationTO, \"selfAsRecipient\"));\n         form.add(selfAsRecipient);\n \n         AjaxButton submit = new IndicatingAjaxButton("},{"sha":"26ec9c3b804755990e826e3a3394885b054a5609","filename":"console/src/main/java/org/syncope/console/pages/NotificationTaskModalPage.java","status":"modified","additions":7,"deletions":11,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FNotificationTaskModalPage.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -33,23 +33,20 @@ public class NotificationTaskModalPage extends TaskModalPage {\n     public NotificationTaskModalPage(final TaskTO taskTO) {\n         super(taskTO);\n \n-        final AjaxTextFieldPanel sender = new AjaxTextFieldPanel(\n-                \"sender\", getString(\"sender\"),\n-                new PropertyModel<String>(taskTO, \"sender\"), false);\n+        final AjaxTextFieldPanel sender = new AjaxTextFieldPanel(\"sender\", getString(\"sender\"),\n+                new PropertyModel<String>(taskTO, \"sender\"));\n         sender.setEnabled(false);\n         profile.add(sender);\n \n         final ListMultipleChoice<String> recipients =\n                 new ListMultipleChoice<String>(\"recipients\",\n-                new ArrayList<String>(((NotificationTaskTO) taskTO).\n-                getRecipients()));\n+                new ArrayList<String>(((NotificationTaskTO) taskTO).getRecipients()));\n         recipients.setMaxRows(5);\n         recipients.setEnabled(false);\n         profile.add(recipients);\n \n-        final AjaxTextFieldPanel subject = new AjaxTextFieldPanel(\n-                \"subject\", getString(\"subject\"),\n-                new PropertyModel<String>(taskTO, \"subject\"), false);\n+        final AjaxTextFieldPanel subject = new AjaxTextFieldPanel(\"subject\", getString(\"subject\"),\n+                new PropertyModel<String>(taskTO, \"subject\"));\n         subject.setEnabled(false);\n         profile.add(subject);\n \n@@ -63,9 +60,8 @@ public NotificationTaskModalPage(final TaskTO taskTO) {\n         htmlBody.setEnabled(false);\n         profile.add(htmlBody);\n \n-        final AjaxTextFieldPanel traceLevel = new AjaxTextFieldPanel(\n-                \"traceLevel\", getString(\"traceLevel\"),\n-                new PropertyModel<String>(taskTO, \"traceLevel\"), false);\n+        final AjaxTextFieldPanel traceLevel = new AjaxTextFieldPanel(\"traceLevel\", getString(\"traceLevel\"),\n+                new PropertyModel<String>(taskTO, \"traceLevel\"));\n         traceLevel.setEnabled(false);\n         profile.add(traceLevel);\n     }"},{"sha":"4d5cd187b02858b6668f03094c3e2346b9a0cca1","filename":"console/src/main/java/org/syncope/console/pages/PolicyModalPage.java","status":"modified","additions":6,"deletions":10,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -60,26 +60,22 @@ public PolicyModalPage(\n         form.setOutputMarkupId(true);\n         add(form);\n \n-        final AjaxTextFieldPanel policyid = new AjaxTextFieldPanel(\n-                \"id\", \"id\",\n-                new PropertyModel<String>(policyTO, \"id\"), false);\n+        final AjaxTextFieldPanel policyid = new AjaxTextFieldPanel(\"id\", \"id\",\n+                new PropertyModel<String>(policyTO, \"id\"));\n         policyid.setEnabled(false);\n         policyid.setStyleShet(\n                 \"ui-widget-content ui-corner-all short_fixedsize\");\n         form.add(policyid);\n \n-        final AjaxTextFieldPanel description = new AjaxTextFieldPanel(\n-                \"description\", \"description\",\n-                new PropertyModel<String>(policyTO, \"description\"), false);\n+        final AjaxTextFieldPanel description = new AjaxTextFieldPanel(\"description\", \"description\",\n+                new PropertyModel<String>(policyTO, \"description\"));\n         description.addRequiredLabel();\n         description.setStyleShet(\n                 \"ui-widget-content ui-corner-all medium_dynamicsize\");\n         form.add(description);\n \n-        final AjaxDropDownChoicePanel<PolicyType> type =\n-                new AjaxDropDownChoicePanel<PolicyType>(\n-                \"type\", \"type\",\n-                new PropertyModel<PolicyType>(policyTO, \"type\"), false);\n+        final AjaxDropDownChoicePanel<PolicyType> type = new AjaxDropDownChoicePanel<PolicyType>(\"type\", \"type\",\n+                new PropertyModel<PolicyType>(policyTO, \"type\"));\n \n         switch (policyTO.getType()) {\n             case GLOBAL_ACCOUNT:"},{"sha":"aee76533dc106d8678962e7d762ddd633dc96194","filename":"console/src/main/java/org/syncope/console/pages/PropagationTaskModalPage.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPropagationTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPropagationTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FPropagationTaskModalPage.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -32,15 +32,13 @@ public class PropagationTaskModalPage extends TaskModalPage {\n     public PropagationTaskModalPage(final TaskTO taskTO) {\n         super(taskTO);\n \n-        final AjaxTextFieldPanel accountId = new AjaxTextFieldPanel(\n-                \"accountId\", getString(\"accountId\"),\n-                new PropertyModel<String>(taskTO, \"accountId\"), false);\n+        final AjaxTextFieldPanel accountId = new AjaxTextFieldPanel(\"accountId\", getString(\"accountId\"),\n+                new PropertyModel<String>(taskTO, \"accountId\"));\n         accountId.setEnabled(false);\n         profile.add(accountId);\n \n-        final AjaxTextFieldPanel resource = new AjaxTextFieldPanel(\n-                \"resource\", getString(\"resource\"),\n-                new PropertyModel<String>(taskTO, \"resource\"), false);\n+        final AjaxTextFieldPanel resource = new AjaxTextFieldPanel(\"resource\", getString(\"resource\"),\n+                new PropertyModel<String>(taskTO, \"resource\"));\n         resource.setEnabled(false);\n         profile.add(resource);\n     }"},{"sha":"eea59cdac7b3d2ba24ca1352157a15cf91528a6f","filename":"console/src/main/java/org/syncope/console/pages/ReportExecResultDownloadModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportExecResultDownloadModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportExecResultDownloadModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportExecResultDownloadModalPage.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -37,7 +37,7 @@ public ReportExecResultDownloadModalPage(final ModalWindow window,\n \n         final AjaxDropDownChoicePanel<ReportExecExportFormat> format =\n                 new AjaxDropDownChoicePanel<ReportExecExportFormat>(\n-                \"format\", \"format\", new Model<ReportExecExportFormat>(), false);\n+                \"format\", \"format\", new Model<ReportExecExportFormat>());\n \n         format.setChoices(Arrays.asList(ReportExecExportFormat.values()));\n "},{"sha":"5c262f15d710a7b3f12f1de13b4eb5d88ff5bbf7","filename":"console/src/main/java/org/syncope/console/pages/ReportModalPage.java","status":"modified","additions":234,"deletions":99,"changes":333,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -25,6 +25,10 @@\n import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.IAjaxCallDecorator;\n+import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n@@ -38,6 +42,7 @@\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.AbstractReadOnlyModel;\n import org.apache.wicket.model.CompoundPropertyModel;\n@@ -48,6 +53,7 @@\n import org.apache.wicket.util.resource.IResourceStream;\n import org.springframework.util.StringUtils;\n import org.springframework.web.client.RestTemplate;\n+import org.syncope.client.report.ReportletConf;\n import org.syncope.client.to.ReportExecTO;\n import org.syncope.client.to.ReportTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n@@ -61,16 +67,27 @@\n import org.syncope.console.wicket.markup.html.form.ActionLink;\n import org.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.syncope.console.wicket.markup.html.form.SingleColumnPalette;\n import org.syncope.types.ReportExecStatus;\n \n public class ReportModalPage extends BaseModalPage {\n \n     private static final long serialVersionUID = -5747628615211127644L;\n \n+    private static final String ADD_BUTTON_ID = \"addButton\";\n+\n+    private static final String EDIT_BUTTON_ID = \"editButton\";\n+\n+    private static final String REMOVE_BUTTON_ID = \"removeButton\";\n+\n     private static final int EXEC_EXPORT_WIN_HEIGHT = 100;\n \n     private static final int EXEC_EXPORT_WIN_WIDTH = 400;\n \n+    private static final int REPORTLET_CONF_WIN_HEIGHT = 500;\n+\n+    private static final int REPORTLET_CONF_WIN_WIDTH = 800;\n+\n     @SpringBean\n     private ReportRestClient restClient;\n \n@@ -88,9 +105,11 @@ public class ReportModalPage extends BaseModalPage {\n \n     private long exportExecId;\n \n-    public ReportModalPage(final ModalWindow window, final ReportTO reportTO,\n-            final PageReference callerPageRef) {\n+    private ReportletConf modalReportletConf;\n+\n+    private String modalReportletConfOldName;\n \n+    public ReportModalPage(final ModalWindow window, final ReportTO reportTO, final PageReference callerPageRef) {\n         this.reportTO = reportTO;\n \n         form = new Form<ReportTO>(\"form\");\n@@ -101,23 +120,17 @@ public ReportModalPage(final ModalWindow window, final ReportTO reportTO,\n         setupExecutions();\n \n         final CrontabContainer crontab = new CrontabContainer(\"crontab\",\n-                new PropertyModel<String>(reportTO, \"cronExpression\"),\n-                reportTO.getCronExpression());\n+                new PropertyModel<String>(reportTO, \"cronExpression\"), reportTO.getCronExpression());\n         form.add(crontab);\n \n-        final IndicatingAjaxButton submit = new IndicatingAjaxButton(\n-                \"apply\", new ResourceModel(\"apply\")) {\n+        final IndicatingAjaxButton submit = new IndicatingAjaxButton(\"apply\", new ResourceModel(\"apply\")) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n-            protected void onSubmit(\n-                    final AjaxRequestTarget target,\n-                    final Form form) {\n-\n+            protected void onSubmit(final AjaxRequestTarget target, final Form form) {\n                 ReportTO reportTO = (ReportTO) form.getModelObject();\n-                reportTO.setCronExpression(\n-                        StringUtils.hasText(reportTO.getCronExpression())\n+                reportTO.setCronExpression(StringUtils.hasText(reportTO.getCronExpression())\n                         ? crontab.getCronExpression() : null);\n \n                 try {\n@@ -138,9 +151,7 @@ protected void onSubmit(\n             }\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form form) {\n-\n+            protected void onError(final AjaxRequestTarget target, final Form form) {\n                 target.add(feedbackPanel);\n             }\n         };\n@@ -158,90 +169,226 @@ protected void onError(final AjaxRequestTarget target,\n     }\n \n     private void setupProfile() {\n-        WebMarkupContainer profile = new WebMarkupContainer(\"profile\");\n+        final WebMarkupContainer profile = new WebMarkupContainer(\"profile\");\n         profile.setOutputMarkupId(true);\n         form.add(profile);\n \n+        final ModalWindow reportletConfWin = new ModalWindow(\"reportletConfWin\");\n+        reportletConfWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        reportletConfWin.setCookieName(\"reportlet-conf-win-modal\");\n+        reportletConfWin.setInitialHeight(REPORTLET_CONF_WIN_HEIGHT);\n+        reportletConfWin.setInitialWidth(REPORTLET_CONF_WIN_WIDTH);\n+        reportletConfWin.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+\n+            private static final long serialVersionUID = 8804221891699487139L;\n+\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                int foundIdx = -1;\n+                if (modalReportletConfOldName != null) {\n+                    for (int i = 0; i < reportTO.getReportletConfs().size() && foundIdx == -1; i++) {\n+                        if (reportTO.getReportletConfs().get(i).getName().equals(modalReportletConfOldName)) {\n+                            foundIdx = i;\n+                        }\n+                    }\n+                }\n+                if (modalReportletConf != null) {\n+                    if (foundIdx == -1) {\n+                        reportTO.addReportletConf(modalReportletConf);\n+                    } else {\n+                        reportTO.getReportletConfs().set(foundIdx, modalReportletConf);\n+                    }\n+                }\n+\n+                target.add(profile);\n+            }\n+        });\n+        add(reportletConfWin);\n+\n         final Label idLabel = new Label(\"idLabel\", new ResourceModel(\"id\"));\n         profile.add(idLabel);\n \n-        final AjaxTextFieldPanel id = new AjaxTextFieldPanel(\n-                \"id\", getString(\"id\"),\n-                new PropertyModel<String>(reportTO, \"id\"), false);\n-\n+        final AjaxTextFieldPanel id = new AjaxTextFieldPanel(\"id\", getString(\"id\"),\n+                new PropertyModel<String>(reportTO, \"id\"));\n         id.setEnabled(false);\n         profile.add(id);\n \n-        final Label nameLabel =\n-                new Label(\"nameLabel\", new ResourceModel(\"name\"));\n+        final Label nameLabel = new Label(\"nameLabel\", new ResourceModel(\"name\"));\n         profile.add(nameLabel);\n \n-        final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\n-                \"name\", getString(\"name\"),\n-                new PropertyModel<String>(reportTO, \"name\"), false);\n-\n-        name.setEnabled(false);\n+        final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\"name\", getString(\"name\"),\n+                new PropertyModel<String>(reportTO, \"name\"));\n         profile.add(name);\n \n-        final AjaxTextFieldPanel lastExec = new AjaxTextFieldPanel(\n-                \"lastExec\", getString(\"lastExec\"), new DateFormatROModel(\n-                new PropertyModel<String>(reportTO, \"lastExec\")), false);\n+        final AjaxTextFieldPanel lastExec = new AjaxTextFieldPanel(\"lastExec\", getString(\"lastExec\"),\n+                new DateFormatROModel(new PropertyModel<String>(reportTO, \"lastExec\")));\n         lastExec.setEnabled(false);\n         profile.add(lastExec);\n \n-        final AjaxTextFieldPanel nextExec = new AjaxTextFieldPanel(\n-                \"nextExec\", getString(\"nextExec\"), new DateFormatROModel(\n-                new PropertyModel<String>(reportTO, \"nextExec\")), false);\n+        final AjaxTextFieldPanel nextExec = new AjaxTextFieldPanel(\"nextExec\", getString(\"nextExec\"),\n+                new DateFormatROModel(new PropertyModel<String>(reportTO, \"nextExec\")));\n         nextExec.setEnabled(false);\n         profile.add(nextExec);\n+\n+        final SingleColumnPalette<ReportletConf> reportlets = new SingleColumnPalette<ReportletConf>(\"reportlets\",\n+                new PropertyModel<List<? extends ReportletConf>>(reportTO, \"reportletConfs\"),\n+                new IChoiceRenderer<ReportletConf>() {\n+\n+                    private static final long serialVersionUID =\n+                            1048000918946220007L;\n+\n+                    @Override\n+                    public Object getDisplayValue(final ReportletConf object) {\n+                        return object.getName();\n+                    }\n+\n+                    @Override\n+                    public String getIdValue(final ReportletConf object, int index) {\n+\n+                        return object.getName();\n+                    }\n+                }, 5, true);\n+        reportlets.setOutputMarkupId(true);\n+        reportlets.addRecordBehavior(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+            }\n+        });\n+        reportlets.addRecordBehavior(new AjaxFormComponentUpdatingBehavior(\"onselect\") {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                if (target.getLastFocusedElementId() != null\n+                        && target.getLastFocusedElementId().startsWith(EDIT_BUTTON_ID)\n+                        && reportlets.getSelectedItem() != null) {\n+\n+                    reportletConfWin.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                        private static final long serialVersionUID = -7834632442532690940L;\n+\n+                        @Override\n+                        public Page createPage() {\n+                            modalReportletConfOldName = reportlets.getSelectedItem().getName();\n+                            modalReportletConf = null;\n+                            return new ReportletConfModalPage(reportlets.getSelectedItem(),\n+                                    reportletConfWin, ReportModalPage.this.getPageReference());\n+                        }\n+                    });\n+                    reportletConfWin.show(target);\n+                }\n+            }\n+        });\n+        reportlets.setAddLink(new AjaxLink(ADD_BUTTON_ID) {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+                reportletConfWin.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                    private static final long serialVersionUID = -7834632442532690940L;\n+\n+                    @Override\n+                    public Page createPage() {\n+                        modalReportletConfOldName = null;\n+                        modalReportletConf = null;\n+                        return new ReportletConfModalPage(null,\n+                                reportletConfWin, ReportModalPage.this.getPageReference());\n+                    }\n+                });\n+                reportletConfWin.show(target);\n+            }\n+        });\n+        reportlets.setEditLink(new AjaxLink(EDIT_BUTTON_ID) {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+            }\n+\n+            @Override\n+            protected IAjaxCallDecorator getAjaxCallDecorator() {\n+                return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+\n+                    private static final long serialVersionUID = -7927968187160354605L;\n+\n+                    @Override\n+                    public CharSequence preDecorateScript(final CharSequence script) {\n+                        return script\n+                                + reportlets.getEditOnClickJS();\n+                    }\n+                };\n+            }\n+        });\n+        reportlets.setRemoveLink(new AjaxLink(REMOVE_BUTTON_ID) {\n+\n+            private static final long serialVersionUID = -7978723352517770644L;\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target) {\n+            }\n+\n+            @Override\n+            protected IAjaxCallDecorator getAjaxCallDecorator() {\n+                return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+\n+                    private static final long serialVersionUID = -7927968187160354605L;\n+\n+                    @Override\n+                    public CharSequence preDecorateScript(final CharSequence script) {\n+                        return \"if (confirm('\" + getString(\"confirmDelete\") + \"')) {\"\n+                                + script\n+                                + reportlets.getRemoveOnClickJS()\n+                                + \"}\";\n+                    }\n+                };\n+            }\n+        });\n+        profile.add(reportlets);\n     }\n \n     private void setupExecutions() {\n-        final WebMarkupContainer executions =\n-                new WebMarkupContainer(\"executions\");\n+        final WebMarkupContainer executions = new WebMarkupContainer(\"executions\");\n         executions.setOutputMarkupId(true);\n         form.add(executions);\n \n-        final ModalWindow reportExecMessageWin = new ModalWindow(\n-                \"reportExecMessageWin\");\n+        final ModalWindow reportExecMessageWin = new ModalWindow(\"reportExecMessageWin\");\n         reportExecMessageWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         reportExecMessageWin.setCookieName(\"report-exec-message-win-modal\");\n         add(reportExecMessageWin);\n \n-        final ModalWindow reportExecExportWin = new ModalWindow(\n-                \"reportExecExportWin\");\n+        final ModalWindow reportExecExportWin = new ModalWindow(\"reportExecExportWin\");\n         reportExecExportWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         reportExecExportWin.setCookieName(\"report-exec-export-win-modal\");\n         reportExecExportWin.setInitialHeight(EXEC_EXPORT_WIN_HEIGHT);\n         reportExecExportWin.setInitialWidth(EXEC_EXPORT_WIN_WIDTH);\n-        reportExecExportWin.setWindowClosedCallback(\n-                new ModalWindow.WindowClosedCallback() {\n+        reportExecExportWin.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n \n-                    private static final long serialVersionUID =\n-                            8804221891699487139L;\n+            private static final long serialVersionUID =\n+                    8804221891699487139L;\n \n-                    @Override\n-                    public void onClose(final AjaxRequestTarget target) {\n-                        AjaxExportDownloadBehavior behavior =\n-                                new AjaxExportDownloadBehavior(\n-                                ReportModalPage.this.exportFormat,\n-                                ReportModalPage.this.exportExecId);\n-                        executions.add(behavior);\n-                        behavior.initiate(target);\n-                    }\n-                });\n+            @Override\n+            public void onClose(final AjaxRequestTarget target) {\n+                AjaxExportDownloadBehavior behavior = new AjaxExportDownloadBehavior(\n+                        ReportModalPage.this.exportFormat, ReportModalPage.this.exportExecId);\n+                executions.add(behavior);\n+                behavior.initiate(target);\n+            }\n+        });\n         add(reportExecExportWin);\n \n         final List<IColumn> columns = new ArrayList<IColumn>();\n         columns.add(new PropertyColumn(new ResourceModel(\"id\"), \"id\", \"id\"));\n-        columns.add(new DatePropertyColumn(\n-                new ResourceModel(\"startDate\"), \"startDate\", \"startDate\"));\n-        columns.add(new DatePropertyColumn(\n-                new ResourceModel(\"endDate\"), \"endDate\", \"endDate\"));\n-        columns.add(new PropertyColumn(\n-                new ResourceModel(\"status\"), \"status\", \"status\"));\n-        columns.add(new AbstractColumn<ReportExecTO>(\n-                new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new DatePropertyColumn(new ResourceModel(\"startDate\"), \"startDate\", \"startDate\"));\n+        columns.add(new DatePropertyColumn(new ResourceModel(\"endDate\"), \"endDate\", \"endDate\"));\n+        columns.add(new PropertyColumn(new ResourceModel(\"status\"), \"status\", \"status\"));\n+        columns.add(new AbstractColumn<ReportExecTO>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -258,28 +405,23 @@ public void populateItem(\n \n                 final ReportExecTO taskExecutionTO = model.getObject();\n \n-                final ActionLinksPanel panel =\n-                        new ActionLinksPanel(componentId, model);\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model);\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n-                        reportExecMessageWin.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n+                        reportExecMessageWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                                    private static final long serialVersionUID =\n-                                            -7834632442532690940L;\n+                            private static final long serialVersionUID = -7834632442532690940L;\n \n-                                    @Override\n-                                    public Page createPage() {\n-                                        return new ExecMessageModalPage(\n-                                                model.getObject().getMessage());\n-                                    }\n-                                });\n+                            @Override\n+                            public Page createPage() {\n+                                return new ExecMessageModalPage(model.getObject().getMessage());\n+                            }\n+                        });\n                         reportExecMessageWin.show(target);\n                     }\n                 }, ActionLink.ActionType.EDIT, \"Reports\", \"read\",\n@@ -295,24 +437,19 @@ public void onClick(final AjaxRequestTarget target) {\n                         reportExecExportWin.setPageCreator(\n                                 new ModalWindow.PageCreator() {\n \n-                                    private static final long serialVersionUID =\n-                                            -7834632442532690940L;\n+                                    private static final long serialVersionUID = -7834632442532690940L;\n \n                                     @Override\n                                     public Page createPage() {\n-                                        ReportModalPage.this.exportExecId =\n-                                                model.getObject().getId();\n+                                        ReportModalPage.this.exportExecId = model.getObject().getId();\n                                         return new ReportExecResultDownloadModalPage(\n-                                                reportExecExportWin,\n-                                                ReportModalPage.this.\n-                                                getPageReference());\n+                                                reportExecExportWin, ReportModalPage.this.getPageReference());\n                                     }\n                                 });\n                         reportExecExportWin.show(target);\n                     }\n                 }, ActionLink.ActionType.EXPORT, \"Reports\", \"read\",\n-                        ReportExecStatus.SUCCESS.name().equals(\n-                        model.getObject().getStatus()));\n+                        ReportExecStatus.SUCCESS.name().equals(model.getObject().getStatus()));\n \n                 panel.add(new ActionLink() {\n \n@@ -322,8 +459,7 @@ public Page createPage() {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n-                            restClient.deleteExecution(\n-                                    taskExecutionTO.getId());\n+                            restClient.deleteExecution(taskExecutionTO.getId());\n \n                             reportTO.removeExecution(taskExecutionTO);\n \n@@ -351,8 +487,13 @@ public void setExportFormat(final String exportFormat) {\n         this.exportFormat = exportFormat;\n     }\n \n-    private class ReportExecutionsProvider\n-            extends SortableDataProvider<ReportExecTO> {\n+    public void setModalReportletConf(final ReportletConf modalReportletConf) {\n+        this.modalReportletConf = modalReportletConf;\n+    }\n+\n+    private static class ReportExecutionsProvider extends SortableDataProvider<ReportExecTO> {\n+\n+        private static final long serialVersionUID = 2118096121691420539L;\n \n         private SortableDataProviderComparator<ReportExecTO> comparator;\n \n@@ -381,13 +522,11 @@ public int size() {\n         }\n \n         @Override\n-        public IModel<ReportExecTO> model(\n-                final ReportExecTO taskExecution) {\n+        public IModel<ReportExecTO> model(final ReportExecTO taskExecution) {\n \n             return new AbstractReadOnlyModel<ReportExecTO>() {\n \n-                private static final long serialVersionUID =\n-                        7485475149862342421L;\n+                private static final long serialVersionUID = 7485475149862342421L;\n \n                 @Override\n                 public ReportExecTO getObject() {\n@@ -397,11 +536,9 @@ public ReportExecTO getObject() {\n         }\n     }\n \n-    private class AjaxExportDownloadBehavior\n-            extends AbstractAjaxDownloadBehavior {\n+    private class AjaxExportDownloadBehavior extends AbstractAjaxDownloadBehavior {\n \n-        private static final long serialVersionUID =\n-                3109256773218160485L;\n+        private static final long serialVersionUID = 3109256773218160485L;\n \n         private final String exportFormat;\n \n@@ -411,9 +548,7 @@ public ReportExecTO getObject() {\n \n         private HttpResourceStream stream;\n \n-        public AjaxExportDownloadBehavior(final String exportFormat,\n-                final long exportExecId) {\n-\n+        public AjaxExportDownloadBehavior(final String exportFormat, final long exportExecId) {\n             this.exportFormat = exportFormat;\n             this.exportExecId = exportExecId;\n         }"},{"sha":"dbad9ebe4ef5fc26a3ced2a599d64d4e9a8ce788","filename":"console/src/main/java/org/syncope/console/pages/ReportletConfModalPage.java","status":"added","additions":348,"deletions":0,"changes":348,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -0,0 +1,348 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.syncope.console.pages;\n+\n+import java.lang.reflect.Field;\n+import java.lang.reflect.ParameterizedType;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.commons.lang.ArrayUtils;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.form.DropDownChoice;\n+import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.model.util.ListModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.springframework.beans.BeanWrapper;\n+import org.springframework.beans.PropertyAccessorFactory;\n+import org.springframework.util.ClassUtils;\n+import org.syncope.annotation.FormAttributeField;\n+import org.syncope.client.SyncopeConstants;\n+import org.syncope.client.report.ReportletConf;\n+import org.syncope.client.search.NodeCond;\n+import org.syncope.console.pages.panels.UserSearchPanel;\n+import org.syncope.console.rest.ReportRestClient;\n+import org.syncope.console.rest.SchemaRestClient;\n+import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxNumberFieldPanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxPalettePanel;\n+import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.syncope.console.wicket.markup.html.form.CheckBoxMultipleChoiceFieldPanel;\n+import org.syncope.console.wicket.markup.html.form.DateTimeFieldPanel;\n+import org.syncope.console.wicket.markup.html.form.FieldPanel;\n+import org.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n+import org.syncope.types.AttributableType;\n+\n+public class ReportletConfModalPage extends BaseModalPage {\n+\n+    private static final long serialVersionUID = 3910027601200382958L;\n+\n+    private static final String[] EXCLUDE_PROPERTIES = new String[]{\n+        \"serialVersionUID\", \"class\", \"name\", \"reportletClassName\"};\n+\n+    @SpringBean\n+    private ReportRestClient restClient;\n+\n+    @SpringBean\n+    private SchemaRestClient schemaRestClient;\n+\n+    private ReportletConf reportletConf;\n+\n+    final AjaxTextFieldPanel name;\n+\n+    private WebMarkupContainer propertiesContainer;\n+\n+    private ListView<String> propView;\n+\n+    public ReportletConfModalPage(final ReportletConf reportletConf,\n+            final ModalWindow window, final PageReference callerPageRef) {\n+\n+        this.reportletConf = reportletConf;\n+\n+        Form form = new Form(\"form\");\n+        add(form);\n+\n+        propertiesContainer = new WebMarkupContainer(\"container\");\n+        propertiesContainer.setOutputMarkupId(true);\n+        form.add(propertiesContainer);\n+\n+        name = new AjaxTextFieldPanel(\"name\", \"name\",\n+                this.reportletConf == null ? new Model() : new PropertyModel<String>(this.reportletConf, \"name\"));\n+        name.setOutputMarkupId(true);\n+        name.addRequiredLabel();\n+        form.add(name);\n+\n+        final AjaxDropDownChoicePanel<String> reportletClass = new AjaxDropDownChoicePanel<String>(\n+                \"reportletClass\", \"reportletClass\", new IModel<String>() {\n+\n+            private static final long serialVersionUID = -2316468110411802130L;\n+\n+            @Override\n+            public String getObject() {\n+                return ReportletConfModalPage.this.reportletConf == null\n+                        ? null : ReportletConfModalPage.this.reportletConf.getClass().getName();\n+            }\n+\n+            @Override\n+            public void setObject(final String object) {\n+                try {\n+                    Class reportletClass = Class.forName(object);\n+                    ReportletConfModalPage.this.reportletConf = (ReportletConf) reportletClass.newInstance();\n+                    propertiesContainer.replace(buildPropView());\n+                } catch (Exception e) {\n+                    LOG.error(\"Cannot find or initialize {}\", object, e);\n+                }\n+            }\n+\n+            @Override\n+            public void detach() {\n+            }\n+        });\n+        reportletClass.setStyleShet(\"long_dynamicsize\");\n+        reportletClass.setChoices(restClient.getReportletConfClasses());\n+        ((DropDownChoice) reportletClass.getField()).setNullValid(true);\n+        reportletClass.addRequiredLabel();\n+        reportletClass.getField().add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+            private static final long serialVersionUID = 5538299138211283825L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                ((DropDownChoice) reportletClass.getField()).setNullValid(false);\n+                target.add(reportletClass.getField());\n+                target.add(propertiesContainer);\n+            }\n+        });\n+        form.add(reportletClass);\n+\n+        propertiesContainer.add(buildPropView());\n+\n+        final AjaxButton submit = new AjaxButton(\"apply\", new ResourceModel(\"apply\")) {\n+\n+            private static final long serialVersionUID = -958724007591692537L;\n+\n+            @Override\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                final BeanWrapper wrapper =\n+                        PropertyAccessorFactory.forBeanPropertyAccess(ReportletConfModalPage.this.reportletConf);\n+                wrapper.setPropertyValue(\"name\", name.getField().getInput());\n+\n+                // Iterate over properties in order to find UserSearchPanel instances and manually update\n+                // this.reportletConf with select search criteria - this is needed because UserSearchPanel\n+                // does not comply with usual Wicket model paradigm.\n+                for (Iterator<Component> itor = ReportletConfModalPage.this.propView.visitChildren(); itor.hasNext();) {\n+                    Component component = itor.next();\n+                    if (component instanceof UserSearchPanel) {\n+                        // using component.getDefaultModelObjectAsString() to fetch field name (set above)\n+                        wrapper.setPropertyValue(component.getDefaultModelObjectAsString(),\n+                                ((UserSearchPanel) component).buildSearchCond());\n+                    }\n+                }\n+\n+                ((ReportModalPage) callerPageRef.getPage()).setModalReportletConf(\n+                        ReportletConfModalPage.this.reportletConf);\n+                window.close(target);\n+            }\n+\n+            @Override\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+                target.add(feedbackPanel);\n+            }\n+        };\n+        form.add(submit);\n+    }\n+\n+    private FieldPanel buildSinglePanel(final Class<?> type, final String fieldName, final String id) {\n+        FieldPanel result = null;\n+        PropertyModel model = new PropertyModel(ReportletConfModalPage.this.reportletConf, fieldName);\n+        if (Boolean.TYPE.equals(type) || Boolean.class.equals(type)) {\n+            result = new AjaxCheckBoxPanel(id, fieldName, model);\n+        } else if (Integer.TYPE.equals(type) || Integer.class.equals(type)\n+                || Long.TYPE.equals(type) || Long.class.equals(type)\n+                || Double.TYPE.equals(type) || Double.class.equals(type)) {\n+\n+            result = new AjaxNumberFieldPanel(id, fieldName, model, ClassUtils.resolvePrimitiveIfNecessary(type));\n+        } else if (Date.class.equals(type)) {\n+            result = new DateTimeFieldPanel(id, fieldName, model, SyncopeConstants.DEFAULT_DATE_PATTERN);\n+        } else if (type.isEnum()) {\n+            result = new AjaxDropDownChoicePanel(id, fieldName, model).setChoices(\n+                    Arrays.asList(type.getEnumConstants()));\n+        }\n+\n+        // treat as String if nothing matched above\n+        if (result == null) {\n+            result = new AjaxTextFieldPanel(id, fieldName, model);\n+        }\n+\n+        return result;\n+    }\n+\n+    private ListView<String> buildPropView() {\n+        LoadableDetachableModel<List<String>> propViewModel = new LoadableDetachableModel<List<String>>() {\n+\n+            private static final long serialVersionUID = 5275935387613157437L;\n+\n+            @Override\n+            protected List<String> load() {\n+                List<String> result = new ArrayList<String>();\n+                if (ReportletConfModalPage.this.reportletConf != null) {\n+                    for (Field field : ReportletConfModalPage.this.reportletConf.getClass().getDeclaredFields()) {\n+                        if (!ArrayUtils.contains(EXCLUDE_PROPERTIES, field.getName())) {\n+                            result.add(field.getName());\n+                        }\n+                    }\n+                }\n+\n+                return result;\n+            }\n+        };\n+\n+        propView = new ListView<String>(\"propView\", propViewModel) {\n+\n+            private static final long serialVersionUID = 9101744072914090143L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<String> item) {\n+                final String fieldName = item.getModelObject();\n+\n+                Label label = new Label(\"key\", fieldName);\n+                item.add(label);\n+\n+                Field field = null;\n+                try {\n+                    field = ReportletConfModalPage.this.reportletConf.getClass().getDeclaredField(fieldName);\n+                } catch (Exception e) {\n+                    LOG.error(\"Could not find field {} in class {}\",\n+                            new Object[]{fieldName, ReportletConfModalPage.this.reportletConf.getClass(), e});\n+                }\n+                if (field == null) {\n+                    return;\n+                }\n+\n+                BeanWrapper wrapper = PropertyAccessorFactory.forBeanPropertyAccess(\n+                        ReportletConfModalPage.this.reportletConf);\n+\n+                Panel panel;\n+\n+                if (NodeCond.class.equals(field.getType())) {\n+                    panel = new UserSearchPanel(\"value\", (NodeCond) wrapper.getPropertyValue(fieldName), false);\n+                    // This is needed in order to manually update this.reportletConf with search panel selections\n+                    panel.setDefaultModel(new Model(fieldName));\n+                } else if (List.class.equals(field.getType())) {\n+                    if (wrapper.getPropertyValue(fieldName) == null) {\n+                        wrapper.setPropertyValue(fieldName, new ArrayList());\n+                    }\n+\n+                    Class listItemType = String.class;\n+                    if (field.getGenericType() instanceof ParameterizedType) {\n+                        listItemType =\n+                                (Class) ((ParameterizedType) field.getGenericType()).getActualTypeArguments()[0];\n+                    }\n+\n+                    FormAttributeField annotation = field.getAnnotation(FormAttributeField.class);\n+\n+                    if (listItemType.equals(String.class) && annotation != null) {\n+                        List<String> choices;\n+                        switch (annotation.schema()) {\n+                            case UserSchema:\n+                                choices = schemaRestClient.getSchemaNames(AttributableType.USER);\n+                                break;\n+\n+                            case UserDerivedSchema:\n+                                choices = schemaRestClient.getDerivedSchemaNames(AttributableType.USER);\n+                                break;\n+\n+                            case UserVirtualSchema:\n+                                choices = schemaRestClient.getVirtualSchemaNames(AttributableType.USER);\n+                                break;\n+\n+                            case RoleSchema:\n+                                choices = schemaRestClient.getSchemaNames(AttributableType.ROLE);\n+                                break;\n+\n+                            case RoleDerivedSchema:\n+                                choices = schemaRestClient.getDerivedSchemaNames(AttributableType.ROLE);\n+                                break;\n+\n+                            case RoleVirtualSchema:\n+                                choices = schemaRestClient.getVirtualSchemaNames(AttributableType.ROLE);\n+                                break;\n+\n+                            case MembershipSchema:\n+                                choices = schemaRestClient.getSchemaNames(AttributableType.MEMBERSHIP);\n+                                break;\n+\n+                            case MembershipDerivedSchema:\n+                                choices = schemaRestClient.getDerivedSchemaNames(AttributableType.MEMBERSHIP);\n+                                break;\n+\n+                            case MembershipVirtualSchema:\n+                                choices = schemaRestClient.getVirtualSchemaNames(AttributableType.MEMBERSHIP);\n+                                break;\n+\n+                            default:\n+                                choices = Collections.EMPTY_LIST;\n+                        }\n+\n+                        panel = new AjaxPalettePanel(\"value\", new PropertyModel<List<String>>(\n+                                ReportletConfModalPage.this.reportletConf, fieldName),\n+                                new ListModel<String>(choices), true);\n+                    } else if (listItemType.isEnum()) {\n+                        panel = new CheckBoxMultipleChoiceFieldPanel(\"value\",\n+                                new PropertyModel(ReportletConfModalPage.this.reportletConf, fieldName),\n+                                new ListModel(Arrays.asList(listItemType.getEnumConstants())));\n+                    } else {\n+                        if (((List) wrapper.getPropertyValue(fieldName)).isEmpty()) {\n+                            ((List) wrapper.getPropertyValue(fieldName)).add(null);\n+                        }\n+\n+                        panel = new MultiValueSelectorPanel(\"value\",\n+                                new PropertyModel<List>(ReportletConfModalPage.this.reportletConf, fieldName),\n+                                buildSinglePanel(field.getType(), fieldName, \"panel\"));\n+                    }\n+                } else {\n+                    panel = buildSinglePanel(field.getType(), fieldName, \"value\");\n+                }\n+\n+                item.add(panel);\n+            }\n+        };\n+\n+        return propView;\n+    }\n+}"},{"sha":"879a03741eacbe495dbec5a11dc7dc1cca83dbf9","filename":"console/src/main/java/org/syncope/console/pages/SchedTaskModalPage.java","status":"modified","additions":9,"deletions":16,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchedTaskModalPage.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -42,25 +42,18 @@ public SchedTaskModalPage(\n \n         super(window, taskTO, callerPageRef);\n \n-        final IModel<List<String>> classNames =\n-                new LoadableDetachableModel<List<String>>() {\n+        final IModel<List<String>> classNames = new LoadableDetachableModel<List<String>>() {\n \n-                    private static final long serialVersionUID =\n-                            5275935387613157437L;\n+            private static final long serialVersionUID = 5275935387613157437L;\n \n-                    @Override\n-                    protected List<String> load() {\n-                        final List<String> classes = new ArrayList<String>(\n-                                taskRestClient.getJobClasses());\n+            @Override\n+            protected List<String> load() {\n+                return taskRestClient.getJobClasses();\n+            }\n+        };\n \n-                        return classes;\n-                    }\n-                };\n-\n-        final AjaxDropDownChoicePanel<String> className =\n-                new AjaxDropDownChoicePanel<String>(\n-                \"jobClassName\", getString(\"class\"),\n-                new PropertyModel(taskTO, \"jobClassName\"), false);\n+        final AjaxDropDownChoicePanel<String> className = new AjaxDropDownChoicePanel<String>(\"jobClassName\",\n+                getString(\"class\"), new PropertyModel(taskTO, \"jobClassName\"));\n         className.setChoices(classNames.getObject());\n         className.addRequiredLabel();\n         className.setEnabled(taskTO.getId() == 0);"},{"sha":"8c6b58b6c8aa76305137d3a7c2e8af6b78040833","filename":"console/src/main/java/org/syncope/console/pages/Schema.java","status":"modified","additions":56,"deletions":89,"changes":145,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -18,7 +18,6 @@\n  */\n package org.syncope.console.pages;\n \n-import org.syncope.console.commons.SchemaModalPageFactory;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Iterator;\n@@ -53,12 +52,14 @@\n import org.syncope.client.to.VirtualSchemaTO;\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.PreferenceManager;\n+import org.syncope.console.commons.SchemaModalPageFactory;\n import org.syncope.console.commons.SelectChoiceRenderer;\n import org.syncope.console.commons.SortableDataProviderComparator;\n import org.syncope.console.rest.SchemaRestClient;\n import org.syncope.console.wicket.markup.html.form.ActionLink;\n import org.syncope.console.wicket.markup.html.form.ActionLink.ActionType;\n import org.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.syncope.types.AttributableType;\n \n /**\n  * Schema WebPage.\n@@ -175,11 +176,6 @@ private enum SchemaVirtualType {\n \n     private int membershipVirPageRows;\n \n-    /*\n-     * Response flag set by the Modal Window after the operation is completed\n-     */\n-    private boolean operationResult = false;\n-\n     public Schema(PageParameters parameters) {\n         super(parameters);\n \n@@ -302,7 +298,7 @@ public Schema(PageParameters parameters) {\n         List<IColumn> rolesColumns = getColumnsForSchema(\n                 roleSchemasContainer,\n                 editRoleSchemaWin,\n-                SchemaModalPageFactory.Entity.role,\n+                AttributableType.ROLE,\n                 SchemaModalPageFactory.SchemaType.NORMAL,\n                 Constants.SCHEMA_FIELDS,\n                 allowedReadRoles,\n@@ -322,7 +318,7 @@ public Schema(PageParameters parameters) {\n         List<IColumn> columnsRolesDer = getColumnsForSchema(\n                 roleDerivedSchemasContainer,\n                 editRoleDerivedSchemaWin,\n-                SchemaModalPageFactory.Entity.role,\n+                AttributableType.ROLE,\n                 SchemaModalPageFactory.SchemaType.DERIVED,\n                 Constants.DERIVED_SCHEMA_FIELDS,\n                 allowedReadRoles,\n@@ -343,7 +339,7 @@ public Schema(PageParameters parameters) {\n         List<IColumn> columnsRolesVir = getColumnsForSchema(\n                 roleVirtualSchemasContainer,\n                 editRoleVirtualSchemaWin,\n-                SchemaModalPageFactory.Entity.role,\n+                AttributableType.ROLE,\n                 SchemaModalPageFactory.SchemaType.VIRTUAL,\n                 Constants.VIRTUAL_SCHEMA_FIELDS,\n                 allowedReadRoles,\n@@ -364,7 +360,7 @@ public Schema(PageParameters parameters) {\n         List<IColumn> userColumns = getColumnsForSchema(\n                 userSchemasContainer,\n                 editUserSchemaWin,\n-                SchemaModalPageFactory.Entity.user,\n+                AttributableType.USER,\n                 SchemaModalPageFactory.SchemaType.NORMAL,\n                 Constants.SCHEMA_FIELDS,\n                 allowedReadRoles,\n@@ -386,7 +382,7 @@ public Schema(PageParameters parameters) {\n         List<IColumn> columnsUsersDer = getColumnsForSchema(\n                 userDerivedSchemasContainer,\n                 editUserDerivedSchemaWin,\n-                SchemaModalPageFactory.Entity.user,\n+                AttributableType.USER,\n                 SchemaModalPageFactory.SchemaType.DERIVED,\n                 Constants.DERIVED_SCHEMA_FIELDS,\n                 allowedReadRoles,\n@@ -407,7 +403,7 @@ public Schema(PageParameters parameters) {\n         List<IColumn> columnsUsersVir = getColumnsForSchema(\n                 userVirtualSchemasContainer,\n                 editUserVirtualSchemaWin,\n-                SchemaModalPageFactory.Entity.user,\n+                AttributableType.USER,\n                 SchemaModalPageFactory.SchemaType.VIRTUAL,\n                 Constants.VIRTUAL_SCHEMA_FIELDS,\n                 allowedReadRoles,\n@@ -428,7 +424,7 @@ public Schema(PageParameters parameters) {\n         List<IColumn> membershipsColumns = getColumnsForSchema(\n                 membershipSchemaContainer,\n                 editMembershipSchemaWin,\n-                SchemaModalPageFactory.Entity.membership,\n+                AttributableType.MEMBERSHIP,\n                 SchemaModalPageFactory.SchemaType.NORMAL,\n                 Constants.SCHEMA_FIELDS,\n                 allowedReadRoles,\n@@ -450,7 +446,7 @@ public Schema(PageParameters parameters) {\n         List<IColumn> columnsMembershipsDer = getColumnsForSchema(\n                 membershipDerivedSchemaContainer,\n                 editMembershipDerivedSchemaWin,\n-                SchemaModalPageFactory.Entity.membership,\n+                AttributableType.MEMBERSHIP,\n                 SchemaModalPageFactory.SchemaType.DERIVED,\n                 Constants.DERIVED_SCHEMA_FIELDS,\n                 allowedReadRoles,\n@@ -473,7 +469,7 @@ public Schema(PageParameters parameters) {\n         List<IColumn> columnsMembershipsVir = getColumnsForSchema(\n                 membershipVirtualSchemaContainer,\n                 editMembershipVirtualSchemaWin,\n-                SchemaModalPageFactory.Entity.membership,\n+                AttributableType.MEMBERSHIP,\n                 SchemaModalPageFactory.SchemaType.VIRTUAL,\n                 Constants.VIRTUAL_SCHEMA_FIELDS,\n                 allowedReadRoles,\n@@ -672,71 +668,71 @@ public Schema(PageParameters parameters) {\n \n         add(getCreateSchemaWindow(\n                 createRoleSchemaWin,\n-                SchemaModalPageFactory.Entity.role,\n+                AttributableType.ROLE,\n                 SchemaModalPageFactory.SchemaType.NORMAL,\n                 \"createRoleSchemaWinLink\",\n                 \"createRoleSchemaWin\",\n                 allowedCreateRoles));\n \n         add(getCreateSchemaWindow(\n                 createRoleDerivedSchemaWin,\n-                SchemaModalPageFactory.Entity.role,\n+                AttributableType.ROLE,\n                 SchemaModalPageFactory.SchemaType.DERIVED,\n                 \"createRoleDerivedSchemaWinLink\",\n                 \"createRoleDerivedSchemaWin\",\n                 allowedCreateRoles));\n \n         add(getCreateSchemaWindow(\n                 createRoleVirtualSchemaWin,\n-                SchemaModalPageFactory.Entity.role,\n+                AttributableType.ROLE,\n                 SchemaModalPageFactory.SchemaType.VIRTUAL,\n                 \"createRoleVirtualSchemaWinLink\",\n                 \"createRoleVirtualSchemaWin\",\n                 allowedCreateRoles));\n \n         add(getCreateSchemaWindow(\n                 createUserSchemaWin,\n-                SchemaModalPageFactory.Entity.user,\n+                AttributableType.USER,\n                 SchemaModalPageFactory.SchemaType.NORMAL,\n                 \"createUserSchemaWinLink\",\n                 \"createUserSchemaModalWin\",\n                 allowedCreateRoles));\n \n         add(getCreateSchemaWindow(\n                 createUserDerivedSchemaWin,\n-                SchemaModalPageFactory.Entity.user,\n+                AttributableType.USER,\n                 SchemaModalPageFactory.SchemaType.DERIVED,\n                 \"createUserDerSchemaWinLink\",\n                 \"createUserDerSchemaModalWin\",\n                 allowedCreateRoles));\n \n         add(getCreateSchemaWindow(\n                 createUserVirtualSchemaWin,\n-                SchemaModalPageFactory.Entity.user,\n+                AttributableType.USER,\n                 SchemaModalPageFactory.SchemaType.VIRTUAL,\n                 \"createUserVirSchemaWinLink\",\n                 \"createUserVirSchemaModalWin\",\n                 allowedCreateRoles));\n \n         add(getCreateSchemaWindow(\n                 createMembershipSchemaWin,\n-                SchemaModalPageFactory.Entity.membership,\n+                AttributableType.MEMBERSHIP,\n                 SchemaModalPageFactory.SchemaType.NORMAL,\n                 \"createMembershipSchemaWinLink\",\n                 \"createMembershipSchemaModalWin\",\n                 allowedCreateRoles));\n \n         add(getCreateSchemaWindow(\n                 createMembershipDerivedSchemaWin,\n-                SchemaModalPageFactory.Entity.membership,\n+                AttributableType.MEMBERSHIP,\n                 SchemaModalPageFactory.SchemaType.DERIVED,\n                 \"createMembershipDerSchemaWinLink\",\n                 \"createMembershipDerivedSchemaWin\",\n                 allowedCreateRoles));\n \n         add(getCreateSchemaWindow(\n                 createMembershipVirtualSchemaWin,\n-                SchemaModalPageFactory.Entity.membership,\n+                AttributableType.MEMBERSHIP,\n                 SchemaModalPageFactory.SchemaType.VIRTUAL,\n                 \"createMembershipVirSchemaWinLink\",\n                 \"createMembershipVirtualSchemaWin\",\n@@ -784,15 +780,15 @@ private List<SchemaTO> getSchemaDB() {\n             List<SchemaTO> list;\n             switch (schemaType) {\n                 case UserSchema:\n-                    list = restClient.getSchemas(\"user\");\n+                    list = restClient.getSchemas(AttributableType.USER);\n                     break;\n \n                 case RoleSchema:\n-                    list = restClient.getSchemas(\"role\");\n+                    list = restClient.getSchemas(AttributableType.ROLE);\n                     break;\n \n                 case MembershipSchema:\n-                    list = restClient.getSchemas(\"membership\");\n+                    list = restClient.getSchemas(AttributableType.MEMBERSHIP);\n                     break;\n \n                 default:\n@@ -846,11 +842,11 @@ private List<DerivedSchemaTO> getDerivedSchemaDB() {\n             List<DerivedSchemaTO> list = null;\n \n             if (schema == SchemaDerivedType.RoleDerivedSchema) {\n-                list = restClient.getDerivedSchemas(\"role\");\n+                list = restClient.getDerivedSchemas(AttributableType.ROLE);\n             } else if (schema == SchemaDerivedType.UserDerivedSchema) {\n-                list = restClient.getDerivedSchemas(\"user\");\n+                list = restClient.getDerivedSchemas(AttributableType.USER);\n             } else if (schema == SchemaDerivedType.MembershipDerivedSchema) {\n-                list = restClient.getDerivedSchemas(\"membership\");\n+                list = restClient.getDerivedSchemas(AttributableType.MEMBERSHIP);\n             }\n \n             return list;\n@@ -900,11 +896,11 @@ private List<VirtualSchemaTO> getVirtualSchemaDB() {\n             List<VirtualSchemaTO> list = null;\n \n             if (schema == SchemaVirtualType.RoleVirtualSchema) {\n-                list = restClient.getVirtualSchemas(\"role\");\n+                list = restClient.getVirtualSchemas(AttributableType.ROLE);\n             } else if (schema == SchemaVirtualType.UserVirtualSchema) {\n-                list = restClient.getVirtualSchemas(\"user\");\n+                list = restClient.getVirtualSchemas(AttributableType.USER);\n             } else if (schema == SchemaVirtualType.MembershipVirtualSchema) {\n-                list = restClient.getVirtualSchemas(\"membership\");\n+                list = restClient.getVirtualSchemas(AttributableType.MEMBERSHIP);\n             }\n \n             return list;\n@@ -914,7 +910,7 @@ private List<VirtualSchemaTO> getVirtualSchemaDB() {\n     private <T extends AbstractSchemaModalPage> List<IColumn> getColumnsForSchema(\n             final WebMarkupContainer webContainer,\n             final ModalWindow modalWindow,\n-            final SchemaModalPageFactory.Entity entity,\n+            final AttributableType attributableType,\n             final SchemaModalPageFactory.SchemaType schemaType,\n             final String[] fields,\n             final String readPermissions,\n@@ -923,15 +919,11 @@ private <T extends AbstractSchemaModalPage> List<IColumn> getColumnsForSchema(\n         List<IColumn> columns = new ArrayList<IColumn>();\n \n         for (String field : fields) {\n-            columns.add(\n-                    new PropertyColumn(new ResourceModel(field),\n-                    field,\n-                    field));\n+            columns.add(new PropertyColumn(new ResourceModel(field), field, field));\n         }\n \n \n-        columns.add(new AbstractColumn<AbstractBaseBean>(\n-                new ResourceModel(\"actions\", \"\")) {\n+        columns.add(new AbstractColumn<AbstractBaseBean>(new ResourceModel(\"actions\", \"\")) {\n \n             private static final long serialVersionUID = 2054811145491901166L;\n \n@@ -948,38 +940,29 @@ public void populateItem(\n \n                 final AbstractBaseBean schemaTO = model.getObject();\n \n-                final ActionLinksPanel panel =\n-                        new ActionLinksPanel(componentId, model);\n+                final ActionLinksPanel panel = new ActionLinksPanel(componentId, model);\n \n                 panel.add(new ActionLink() {\n \n-                    private static final long serialVersionUID =\n-                            -3722207913631435501L;\n+                    private static final long serialVersionUID = -3722207913631435501L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n-                        modalWindow.setPageCreator(\n-                                new ModalWindow.PageCreator() {\n+                        modalWindow.setPageCreator(new ModalWindow.PageCreator() {\n \n-                                    private static final long serialVersionUID =\n-                                            -7834632442532690940L;\n+                            private static final long serialVersionUID = -7834632442532690940L;\n \n-                                    @Override\n-                                    public Page createPage() {\n-                                        AbstractSchemaModalPage page =\n-                                                SchemaModalPageFactory.\n-                                                getSchemaModalPage(entity,\n-                                                schemaType);\n+                            @Override\n+                            public Page createPage() {\n+                                AbstractSchemaModalPage page =\n+                                        SchemaModalPageFactory.getSchemaModalPage(attributableType, schemaType);\n \n-                                        page.setSchemaModalPage(\n-                                                Schema.this.getPageReference(),\n-                                                modalWindow,\n-                                                schemaTO,\n-                                                false);\n+                                page.setSchemaModalPage(Schema.this.getPageReference(), modalWindow,\n+                                        schemaTO, false);\n \n-                                        return page;\n-                                    }\n-                                });\n+                                return page;\n+                            }\n+                        });\n \n                         modalWindow.show(target);\n                     }\n@@ -995,19 +978,13 @@ public void onClick(final AjaxRequestTarget target) {\n \n                         switch (schemaType) {\n                             case DERIVED:\n-                                restClient.deleteDerivedSchema(\n-                                        entity.toString(),\n-                                        ((DerivedSchemaTO) schemaTO).getName());\n+                                restClient.deleteDerivedSchema(attributableType, ((DerivedSchemaTO) schemaTO).getName());\n                                 break;\n                             case VIRTUAL:\n-                                restClient.deleteVirtualSchema(\n-                                        entity.toString(),\n-                                        ((VirtualSchemaTO) schemaTO).getName());\n+                                restClient.deleteVirtualSchema(attributableType, ((VirtualSchemaTO) schemaTO).getName());\n                                 break;\n                             default:\n-                                restClient.deleteSchema(\n-                                        entity.toString(),\n-                                        ((SchemaTO) schemaTO).getName());\n+                                restClient.deleteSchema(attributableType, ((SchemaTO) schemaTO).getName());\n                                 break;\n                         }\n \n@@ -1046,12 +1023,8 @@ private Form getPaginatorForm(\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n-                prefMan.set(getRequest(),\n-                        getResponse(),\n-                        rowsPerPagePrefName,\n-                        String.valueOf(rowChooser.getInput()));\n-                dataTable.setItemsPerPage(\n-                        Integer.parseInt(rowChooser.getInput()));\n+                prefMan.set(getRequest(), getResponse(), rowsPerPagePrefName, String.valueOf(rowChooser.getInput()));\n+                dataTable.setItemsPerPage(Integer.parseInt(rowChooser.getInput()));\n \n                 target.add(webContainer);\n             }\n@@ -1064,7 +1037,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n     private <T extends AbstractSchemaModalPage> AjaxLink getCreateSchemaWindow(\n             final ModalWindow createSchemaWin,\n-            final SchemaModalPageFactory.Entity entity,\n+            final AttributableType attributableType,\n             final SchemaModalPageFactory.SchemaType schemaType,\n             final String winLinkName,\n             final String winName,\n@@ -1079,20 +1052,14 @@ public void onClick(final AjaxRequestTarget target) {\n \n                 createSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                    private static final long serialVersionUID =\n-                            -7834632442532690940L;\n+                    private static final long serialVersionUID = -7834632442532690940L;\n \n                     @Override\n                     public Page createPage() {\n-                        AbstractSchemaModalPage page =\n-                                SchemaModalPageFactory.getSchemaModalPage(\n-                                entity, schemaType);\n-\n-                        page.setSchemaModalPage(\n-                                Schema.this.getPageReference(),\n-                                new ModalWindow(winName),\n-                                null,\n-                                true);\n+                        AbstractSchemaModalPage page = SchemaModalPageFactory.getSchemaModalPage(\n+                                attributableType, schemaType);\n+\n+                        page.setSchemaModalPage(Schema.this.getPageReference(), new ModalWindow(winName), null, true);\n \n                         return page;\n                     }"},{"sha":"6175b9ab41e1046f9c23ea6df0a4139856e947b5","filename":"console/src/main/java/org/syncope/console/pages/SchemaModalPage.java","status":"modified","additions":26,"deletions":36,"changes":62,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchemaModalPage.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -19,32 +19,33 @@\n package org.syncope.console.pages;\n \n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n-import java.util.Arrays;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.autocomplete.AutoCompleteTextField;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.model.CompoundPropertyModel;\n-import org.apache.wicket.model.PropertyModel;\n-import org.apache.wicket.util.string.Strings;\n-import org.syncope.client.to.SchemaTO;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n-import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n+import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.util.string.Strings;\n import org.syncope.client.AbstractBaseBean;\n+import org.syncope.client.to.SchemaTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.syncope.types.AttributableType;\n import org.syncope.types.SchemaType;\n \n /**\n@@ -54,7 +55,7 @@ public class SchemaModalPage extends AbstractSchemaModalPage {\n \n     private static final long serialVersionUID = -5991561277287424057L;\n \n-    public SchemaModalPage(String kind) {\n+    public SchemaModalPage(AttributableType kind) {\n         super(kind);\n     }\n \n@@ -73,15 +74,13 @@ public void setSchemaModalPage(\n         schemaForm.setModel(new CompoundPropertyModel(schema));\n         schemaForm.setOutputMarkupId(Boolean.TRUE);\n \n-        final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\n-                \"name\", getString(\"name\"),\n-                new PropertyModel<String>(schema, \"name\"), true);\n+        final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\"name\", getString(\"name\"),\n+                new PropertyModel<String>(schema, \"name\"));\n         name.addRequiredLabel();\n         name.setEnabled(createFlag);\n \n-        final AjaxTextFieldPanel conversionPattern = new AjaxTextFieldPanel(\n-                \"conversionPattern\", getString(\"conversionPattern\"),\n-                new PropertyModel<String>(schema, \"conversionPattern\"), true);\n+        final AjaxTextFieldPanel conversionPattern = new AjaxTextFieldPanel(\"conversionPattern\",\n+                getString(\"conversionPattern\"), new PropertyModel<String>(schema, \"conversionPattern\"));\n \n         final IModel<List<String>> validatorsList =\n                 new LoadableDetachableModel<List<String>>() {\n@@ -95,27 +94,21 @@ protected List<String> load() {\n                     }\n                 };\n \n-        final AjaxDropDownChoicePanel<String> validatorClass =\n-                new AjaxDropDownChoicePanel<String>(\n-                \"validatorClass\", getString(\"validatorClass\"),\n-                new PropertyModel(schema, \"validatorClass\"), true);\n+        final AjaxDropDownChoicePanel<String> validatorClass = new AjaxDropDownChoicePanel<String>(\"validatorClass\",\n+                getString(\"validatorClass\"), new PropertyModel(schema, \"validatorClass\"));\n \n         ((DropDownChoice) validatorClass.getField()).setNullValid(true);\n         validatorClass.setChoices(validatorsList.getObject());\n \n-        final AjaxDropDownChoicePanel<SchemaType> type =\n-                new AjaxDropDownChoicePanel<SchemaType>(\n-                \"type\", getString(\"type\"),\n-                new PropertyModel(schema, \"type\"), false);\n+        final AjaxDropDownChoicePanel<SchemaType> type = new AjaxDropDownChoicePanel<SchemaType>(\"type\",\n+                getString(\"type\"), new PropertyModel(schema, \"type\"));\n         type.setChoices(Arrays.asList(SchemaType.values()));\n         type.addRequiredLabel();\n \n-        final AjaxTextFieldPanel enumerationValues = new AjaxTextFieldPanel(\n-                \"enumerationValues\", getString(\"enumerationValues\"),\n-                new PropertyModel<String>(schema, \"enumerationValues\"), false);\n+        final AjaxTextFieldPanel enumerationValues = new AjaxTextFieldPanel(\"enumerationValues\",\n+                getString(\"enumerationValues\"), new PropertyModel<String>(schema, \"enumerationValues\"));\n \n-        if (schema != null\n-                && SchemaType.Enum.equals(((SchemaTO) schema).getType())) {\n+        if (schema != null && SchemaType.Enum.equals(((SchemaTO) schema).getType())) {\n             enumerationValues.addRequiredLabel();\n             enumerationValues.setEnabled(Boolean.TRUE);\n         } else {\n@@ -182,17 +175,14 @@ protected void onUpdate(AjaxRequestTarget art) {\n                     }\n                 });\n \n-        final AjaxCheckBoxPanel multivalue = new AjaxCheckBoxPanel(\n-                \"multivalue\", getString(\"multivalue\"),\n-                new PropertyModel<Boolean>(schema, \"multivalue\"), true);\n+        final AjaxCheckBoxPanel multivalue = new AjaxCheckBoxPanel(\"multivalue\", getString(\"multivalue\"),\n+                new PropertyModel<Boolean>(schema, \"multivalue\"));\n \n-        final AjaxCheckBoxPanel readonly = new AjaxCheckBoxPanel(\n-                \"readonly\", getString(\"readonly\"),\n-                new PropertyModel<Boolean>(schema, \"readonly\"), true);\n+        final AjaxCheckBoxPanel readonly = new AjaxCheckBoxPanel(\"readonly\", getString(\"readonly\"),\n+                new PropertyModel<Boolean>(schema, \"readonly\"));\n \n-        final AjaxCheckBoxPanel uniqueConstraint = new AjaxCheckBoxPanel(\n-                \"uniqueConstraint\", getString(\"uniqueConstraint\"),\n-                new PropertyModel<Boolean>(schema, \"uniqueConstraint\"), true);\n+        final AjaxCheckBoxPanel uniqueConstraint = new AjaxCheckBoxPanel(\"uniqueConstraint\",\n+                getString(\"uniqueConstraint\"), new PropertyModel<Boolean>(schema, \"uniqueConstraint\"));\n \n         final AjaxButton submit = new IndicatingAjaxButton(\n                 \"apply\", new ResourceModel(\"submit\")) {"},{"sha":"e7b042e6719f900c6cbb6dd8eb774b5fe4ff7c89","filename":"console/src/main/java/org/syncope/console/pages/SyncTaskModalPage.java","status":"modified","additions":22,"deletions":37,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncTaskModalPage.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -70,66 +70,51 @@ protected List<String> load() {\n                     }\n                 };\n \n-        final AjaxDropDownChoicePanel<String> resource =\n-                new AjaxDropDownChoicePanel<String>(\n-                \"resource\", getString(\"resourceName\"),\n-                new PropertyModel(taskTO, \"resource\"), false);\n+        final AjaxDropDownChoicePanel<String> resource = new AjaxDropDownChoicePanel<String>(\"resource\",\n+                getString(\"resourceName\"), new PropertyModel(taskTO, \"resource\"));\n         resource.setChoices(allResources.getObject());\n         resource.setChoiceRenderer(new SelectChoiceRenderer());\n         resource.addRequiredLabel();\n         resource.setEnabled(taskTO.getId() == 0);\n-        resource.setStyleShet(\n-                \"ui-widget-content ui-corner-all long_dynamicsize\");\n+        resource.setStyleShet(\"ui-widget-content ui-corner-all long_dynamicsize\");\n \n         profile.add(resource);\n \n-        final IModel<List<String>> classNames =\n-                new LoadableDetachableModel<List<String>>() {\n+        final IModel<List<String>> classNames = new LoadableDetachableModel<List<String>>() {\n \n-                    private static final long serialVersionUID =\n-                            5275935387613157437L;\n+            private static final long serialVersionUID = 5275935387613157437L;\n \n-                    @Override\n-                    protected List<String> load() {\n-                        final List<String> classes = new ArrayList<String>(\n-                                taskRestClient.getJobActionsClasses());\n-\n-                        return classes;\n-                    }\n-                };\n+            @Override\n+            protected List<String> load() {\n+                return taskRestClient.getJobActionsClasses();\n+            }\n+        };\n \n-        final AjaxDropDownChoicePanel<String> actionsClassName =\n-                new AjaxDropDownChoicePanel<String>(\n-                \"jobActionsClassName\", getString(\"actionsClass\"),\n-                new PropertyModel(taskTO, \"jobActionsClassName\"), false);\n+        final AjaxDropDownChoicePanel<String> actionsClassName = new AjaxDropDownChoicePanel<String>(\n+                \"jobActionsClassName\", getString(\"actionsClass\"), new PropertyModel(taskTO, \"jobActionsClassName\"));\n         actionsClassName.setChoices(classNames.getObject());\n         actionsClassName.setStyleShet(\n                 \"ui-widget-content ui-corner-all long_dynamicsize\");\n         profile.add(actionsClassName);\n \n-        final AjaxCheckBoxPanel creates = new AjaxCheckBoxPanel(\n-                \"performCreate\", getString(\"creates\"),\n-                new PropertyModel<Boolean>(taskTO, \"performCreate\"), false);\n+        final AjaxCheckBoxPanel creates = new AjaxCheckBoxPanel(\"performCreate\", getString(\"creates\"),\n+                new PropertyModel<Boolean>(taskTO, \"performCreate\"));\n         profile.add(creates);\n \n-        final AjaxCheckBoxPanel updates = new AjaxCheckBoxPanel(\n-                \"performUpdate\", getString(\"updates\"),\n-                new PropertyModel<Boolean>(taskTO, \"performUpdate\"), false);\n+        final AjaxCheckBoxPanel updates = new AjaxCheckBoxPanel(\"performUpdate\", getString(\"updates\"),\n+                new PropertyModel<Boolean>(taskTO, \"performUpdate\"));\n         profile.add(updates);\n \n-        final AjaxCheckBoxPanel deletes = new AjaxCheckBoxPanel(\n-                \"performDelete\", getString(\"updates\"),\n-                new PropertyModel<Boolean>(taskTO, \"performDelete\"), false);\n+        final AjaxCheckBoxPanel deletes = new AjaxCheckBoxPanel(\"performDelete\", getString(\"updates\"),\n+                new PropertyModel<Boolean>(taskTO, \"performDelete\"));\n         profile.add(deletes);\n \n-        final AjaxCheckBoxPanel status = new AjaxCheckBoxPanel(\n-                \"syncStatus\", getString(\"status\"),\n-                new PropertyModel<Boolean>(taskTO, \"syncStatus\"), false);\n+        final AjaxCheckBoxPanel status = new AjaxCheckBoxPanel(\"syncStatus\", getString(\"status\"),\n+                new PropertyModel<Boolean>(taskTO, \"syncStatus\"));\n         profile.add(status);\n \n-        final AjaxCheckBoxPanel fullReconciliation = new AjaxCheckBoxPanel(\n-                \"fullReconciliation\", getString(\"fullReconciliation\"),\n-                new PropertyModel<Boolean>(taskTO, \"fullReconciliation\"), false);\n+        final AjaxCheckBoxPanel fullReconciliation = new AjaxCheckBoxPanel(\"fullReconciliation\",\n+                getString(\"fullReconciliation\"), new PropertyModel<Boolean>(taskTO, \"fullReconciliation\"));\n         profile.add(fullReconciliation);\n     }\n }"},{"sha":"cfbaf6d4a2ffca8f5009b6a5175bd14cecfb3efd","filename":"console/src/main/java/org/syncope/console/pages/TaskModalPage.java","status":"modified","additions":3,"deletions":5,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -109,9 +109,8 @@ public TaskModalPage(final TaskTO taskTO) {\n         final Label idLabel = new Label(\"idLabel\", new ResourceModel(\"id\"));\n         profile.add(idLabel);\n \n-        final AjaxTextFieldPanel id = new AjaxTextFieldPanel(\n-                \"id\", getString(\"id\"),\n-                new PropertyModel<String>(taskTO, \"id\"), false);\n+        final AjaxTextFieldPanel id = new AjaxTextFieldPanel(\"id\", getString(\"id\"),\n+                new PropertyModel<String>(taskTO, \"id\"));\n \n         id.setEnabled(false);\n         profile.add(id);\n@@ -207,8 +206,7 @@ public void onClick(final AjaxRequestTarget target) {\n         executions.add(table);\n     }\n \n-    protected class TaskExecutionsProvider\n-            extends SortableDataProvider<TaskExecTO> {\n+    protected static class TaskExecutionsProvider extends SortableDataProvider<TaskExecTO> {\n \n         private static final long serialVersionUID = 8943636537120648961L;\n "},{"sha":"e62324508b08f41b12aac25cb5dc0763e4929f68","filename":"console/src/main/java/org/syncope/console/pages/UserRequestModalPage.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -35,6 +35,8 @@\n  */\n public class UserRequestModalPage extends UserModalPage {\n \n+    private static final long serialVersionUID = 603212869211672852L;\n+\n     @SpringBean\n     private UserRestClient userRestClient;\n "},{"sha":"d56f696b019b8ac04a254b487bae02e3282091a0","filename":"console/src/main/java/org/syncope/console/pages/VirtualSchemaModalPage.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -20,17 +20,18 @@\n \n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.model.CompoundPropertyModel;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n import org.syncope.client.AbstractBaseBean;\n import org.syncope.client.to.VirtualSchemaTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n+import org.syncope.types.AttributableType;\n \n /**\n  * Modal window with Schema form.\n@@ -39,7 +40,7 @@ public class VirtualSchemaModalPage extends AbstractSchemaModalPage {\n \n     private static final long serialVersionUID = 5979623248182851337L;\n \n-    public VirtualSchemaModalPage(String kind) {\n+    public VirtualSchemaModalPage(AttributableType kind) {\n         super(kind);\n     }\n \n@@ -58,9 +59,8 @@ public void setSchemaModalPage(\n \n         schemaForm.setModel(new CompoundPropertyModel(schema));\n \n-        final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\n-                \"name\", getString(\"name\"),\n-                new PropertyModel<String>(schema, \"name\"), false);\n+        final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\"name\", getString(\"name\"),\n+                new PropertyModel<String>(schema, \"name\"));\n         name.addRequiredLabel();\n \n         name.setEnabled(createFlag);"},{"sha":"7b637c54886dea19c46544c7eb2724ab0bd4bf14","filename":"console/src/main/java/org/syncope/console/pages/panels/AttributesPanel.java","status":"modified","additions":13,"deletions":29,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAttributesPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -18,7 +18,6 @@\n  */\n package org.syncope.console.pages.panels;\n \n-import org.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n@@ -49,6 +48,8 @@\n import org.syncope.console.wicket.markup.html.form.DateTextFieldPanel;\n import org.syncope.console.wicket.markup.html.form.DateTimeFieldPanel;\n import org.syncope.console.wicket.markup.html.form.FieldPanel;\n+import org.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n+import org.syncope.types.AttributableType;\n import org.syncope.types.SchemaType;\n \n public class AttributesPanel extends Panel {\n@@ -79,14 +80,11 @@ public <T extends AbstractAttributableTO> AttributesPanel(\n                     protected Map<String, SchemaTO> load() {\n                         final List<SchemaTO> schemaTOs;\n                         if (entityTO instanceof RoleTO) {\n-                            schemaTOs = schemaRestClient.getSchemas(\n-                                    \"role\");\n+                            schemaTOs = schemaRestClient.getSchemas(AttributableType.ROLE);\n                         } else if (entityTO instanceof UserTO) {\n-                            schemaTOs = schemaRestClient.getSchemas(\n-                                    \"user\");\n+                            schemaTOs = schemaRestClient.getSchemas(AttributableType.USER);\n                         } else {\n-                            schemaTOs = schemaRestClient.getSchemas(\n-                                    \"membership\");\n+                            schemaTOs = schemaRestClient.getSchemas(AttributableType.MEMBERSHIP);\n                         }\n \n                         final Map<String, SchemaTO> schemas =\n@@ -130,7 +128,6 @@ protected void populateItem(final ListItem item) {\n                     item.add(new MultiValueSelectorPanel<String>(\n                             \"panel\",\n                             new PropertyModel(attributeTO, \"values\"),\n-                            String.class,\n                             panel));\n                 }\n             }\n@@ -190,36 +187,26 @@ private FieldPanel getFieldPanel(\n                 ? SchemaType.String : schemaTO.getType();\n         switch (type) {\n             case Boolean:\n-                panel = new AjaxCheckBoxPanel(\n-                        \"panel\", schemaTO.getName(), new Model(), true);\n+                panel = new AjaxCheckBoxPanel(\"panel\", schemaTO.getName(), new Model());\n                 panel.setRequired(required);\n                 break;\n \n             case Date:\n-                final String dataPattern = schemaTO.getConversionPattern() != null\n+                final String dataPattern = schemaTO.getConversionPattern()\n+                        != null\n                         ? schemaTO.getConversionPattern()\n                         : SyncopeConstants.DEFAULT_DATE_PATTERN;\n \n                 if (!dataPattern.contains(\"H\")) {\n \n-                    panel = new DateTextFieldPanel(\n-                            \"panel\",\n-                            schemaTO.getName(),\n-                            new Model(),\n-                            true,\n-                            dataPattern);\n+                    panel = new DateTextFieldPanel(\"panel\", schemaTO.getName(), new Model(), dataPattern);\n \n                     if (required) {\n                         panel.addRequiredLabel();\n                     }\n                 } else {\n \n-                    panel = new DateTimeFieldPanel(\n-                            \"panel\",\n-                            schemaTO.getName(),\n-                            new Model(),\n-                            true,\n-                            dataPattern);\n+                    panel = new DateTimeFieldPanel(\"panel\", schemaTO.getName(), new Model(), dataPattern);\n \n                     if (required) {\n                         panel.addRequiredLabel();\n@@ -230,19 +217,16 @@ private FieldPanel getFieldPanel(\n                 break;\n \n             case Enum:\n-                panel = new AjaxDropDownChoicePanel<String>(\n-                        \"panel\", schemaTO.getName(), new Model(), true);\n-                ((AjaxDropDownChoicePanel) panel).setChoices(\n-                        Arrays.asList(schemaTO.getEnumerationValues().\n+                panel = new AjaxDropDownChoicePanel<String>(\"panel\", schemaTO.getName(), new Model());\n+                ((AjaxDropDownChoicePanel) panel).setChoices(Arrays.asList(schemaTO.getEnumerationValues().\n                         split(Schema.enumValuesSeparator)));\n                 if (required) {\n                     panel.addRequiredLabel();\n                 }\n                 break;\n \n             default:\n-                panel = new AjaxTextFieldPanel(\n-                        \"panel\", schemaTO.getName(), new Model(), true);\n+                panel = new AjaxTextFieldPanel(\"panel\", schemaTO.getName(), new Model());\n                 if (required) {\n                     panel.addRequiredLabel();\n                 }"},{"sha":"5a7a94d3810de6422dcbfe44fb20ab5d87d48a79","filename":"console/src/main/java/org/syncope/console/pages/panels/DerivedAttributesPanel.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FDerivedAttributesPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -46,6 +46,7 @@\n import org.syncope.client.to.UserTO;\n import org.syncope.console.rest.SchemaRestClient;\n import org.syncope.console.wicket.markup.html.form.AjaxDecoratedCheckbox;\n+import org.syncope.types.AttributableType;\n \n public class DerivedAttributesPanel extends Panel {\n \n@@ -75,14 +76,11 @@ public <T extends AbstractAttributableTO> DerivedAttributesPanel(\n                     @Override\n                     protected List<String> load() {\n                         if (entityTO instanceof RoleTO) {\n-                            return schemaRestClient.getDerivedSchemaNames(\n-                                    \"role\");\n+                            return schemaRestClient.getDerivedSchemaNames(AttributableType.ROLE);\n                         } else if (entityTO instanceof UserTO) {\n-                            return schemaRestClient.getDerivedSchemaNames(\n-                                    \"user\");\n+                            return schemaRestClient.getDerivedSchemaNames(AttributableType.USER);\n                         } else {\n-                            return schemaRestClient.getDerivedSchemaNames(\n-                                    \"membership\");\n+                            return schemaRestClient.getDerivedSchemaNames(AttributableType.MEMBERSHIP);\n                         }\n                     }\n                 };\n@@ -177,8 +175,7 @@ public CharSequence preDecorateScript(\n                             protected void onUpdate(\n                                     final AjaxRequestTarget art) {\n \n-                                attributeTO.setSchema(schemaChoice.\n-                                        getModelObject());\n+                                attributeTO.setSchema(schemaChoice.getModelObject());\n                             }\n                         });\n "},{"sha":"d6369092b40e950ee565e2ef67bcdbd73c52f68c","filename":"console/src/main/java/org/syncope/console/pages/panels/PolicyBeanPanel.java","status":"modified","additions":18,"deletions":53,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPolicyBeanPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -42,17 +42,17 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.util.StringUtils;\n import org.syncope.annotation.SchemaList;\n-import org.syncope.client.to.SchemaTO;\n import org.syncope.console.commons.XMLRolesReader;\n import org.syncope.console.rest.SchemaRestClient;\n import org.syncope.console.wicket.markup.html.form.AbstractFieldPanel;\n-import org.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.syncope.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.syncope.console.wicket.markup.html.form.FieldPanel;\n+import org.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n import org.syncope.types.AbstractPolicySpec;\n+import org.syncope.types.AttributableType;\n import org.syncope.types.ConflictResolutionAction;\n \n public class PolicyBeanPanel extends Panel {\n@@ -76,16 +76,7 @@ public class PolicyBeanPanel extends Panel {\n \n                 @Override\n                 protected List<String> load() {\n-                    final List<SchemaTO> schemaTOs;\n-                    schemaTOs = schemaRestClient.getSchemas(\"user\");\n-\n-                    final List<String> schemas = new ArrayList<String>();\n-\n-                    for (SchemaTO schemaTO : schemaTOs) {\n-                        schemas.add(schemaTO.getName());\n-                    }\n-\n-                    return schemas;\n+                    return schemaRestClient.getSchemaNames(AttributableType.USER);\n                 }\n             };\n \n@@ -96,18 +87,15 @@ public PolicyBeanPanel(\n             final String id, final AbstractPolicySpec policy) {\n         super(id);\n \n-        FieldWrapper fieldWrapper = null;\n         final List<FieldWrapper> items = new ArrayList<FieldWrapper>();\n \n-\n         for (Field field : policy.getClass().getDeclaredFields()) {\n             if (!\"serialVersionUID\".equals(field.getName())) {\n-                fieldWrapper = new FieldWrapper();\n+                FieldWrapper fieldWrapper = new FieldWrapper();\n                 fieldWrapper.setName(field.getName());\n                 fieldWrapper.setType(field.getType());\n \n-                final SchemaList schemaList =\n-                        field.getAnnotation(SchemaList.class);\n+                final SchemaList schemaList = field.getAnnotation(SchemaList.class);\n \n                 fieldWrapper.setSchemaList(schemaList);\n \n@@ -137,11 +125,8 @@ protected void populateItem(ListItem<FieldWrapper> item) {\n                                 \"get\" + StringUtils.capitalize(field.getName()),\n                                 new Class[]{});\n \n-                        component = new AjaxDropDownChoicePanel(\n-                                \"field\",\n-                                field.getName(),\n-                                new PropertyModel(policy, field.getName()),\n-                                false);\n+                        component = new AjaxDropDownChoicePanel(\"field\", field.getName(),\n+                                new PropertyModel(policy, field.getName()));\n \n                         ((AjaxDropDownChoicePanel) component).setChoices(\n                                 Arrays.asList(ConflictResolutionAction.values()));\n@@ -156,20 +141,13 @@ protected void populateItem(ListItem<FieldWrapper> item) {\n                                 ConflictResolutionAction.IGNORE));\n \n \n-                    } else if (field.getType().equals(boolean.class)\n-                            || field.getType().equals(Boolean.class)) {\n-\n-                        item.add(new AjaxCheckBoxPanel(\n-                                \"check\",\n-                                field.getName(),\n-                                new PropertyModel(policy, field.getName()),\n-                                false));\n+                    } else if (field.getType().equals(boolean.class) || field.getType().equals(Boolean.class)) {\n+                        item.add(new AjaxCheckBoxPanel(\"check\", field.getName(),\n+                                new PropertyModel(policy, field.getName())));\n \n                         item.add(new Label(\"field\", new Model(null)));\n \n-                    } else if (field.getType().equals(List.class)\n-                            || field.getType().equals(Set.class)) {\n-\n+                    } else if (field.getType().equals(List.class) || field.getType().equals(Set.class)) {\n                         classMethod = policy.getClass().getMethod(\n                                 \"get\" + StringUtils.capitalize(field.getName()),\n                                 new Class[]{});\n@@ -197,18 +175,13 @@ protected void populateItem(ListItem<FieldWrapper> item) {\n                                     new ArrayList<String>(),\n                                     new ArrayList<String>()));\n                         } else {\n-                            final FieldPanel panel = new AjaxTextFieldPanel(\n-                                    \"panel\",\n-                                    field.getName(),\n-                                    new Model(null),\n-                                    true);\n+                            final FieldPanel panel = new AjaxTextFieldPanel(\"panel\", field.getName(), new Model(null));\n \n                             panel.setRequired(true);\n \n                             component = new MultiValueSelectorPanel<String>(\n                                     \"field\",\n                                     new PropertyModel(policy, field.getName()),\n-                                    String.class,\n                                     panel);\n \n                             item.add(component);\n@@ -232,11 +205,8 @@ protected void populateItem(ListItem<FieldWrapper> item) {\n                                 \"get\" + StringUtils.capitalize(field.getName()),\n                                 new Class[]{});\n \n-                        component = new AjaxTextFieldPanel(\n-                                \"field\",\n-                                field.getName(),\n-                                new PropertyModel(policy, field.getName()),\n-                                false);\n+                        component = new AjaxTextFieldPanel(\"field\", field.getName(),\n+                                new PropertyModel(policy, field.getName()));\n \n                         item.add(component);\n \n@@ -247,8 +217,7 @@ protected void populateItem(ListItem<FieldWrapper> item) {\n                                 0,\n                                 0));\n                     } else {\n-                        item.add(new AjaxCheckBoxPanel(\n-                                \"check\", field.getName(), new Model(), false));\n+                        item.add(new AjaxCheckBoxPanel(\"check\", field.getName(), new Model()));\n                         item.add(new Label(\"field\", new Model(null)));\n                     }\n                 } catch (Exception e) {\n@@ -266,11 +235,7 @@ private <T extends Serializable> AjaxCheckBoxPanel getActivationControl(\n             final T defaultModelObject,\n             final T reinitializedValue) {\n \n-        final AjaxCheckBoxPanel check = new AjaxCheckBoxPanel(\n-                \"check\",\n-                \"check\",\n-                new Model(checked),\n-                false);\n+        final AjaxCheckBoxPanel check = new AjaxCheckBoxPanel(\"check\", \"check\", new Model(checked));\n \n         panel.setEnabled(checked);\n \n@@ -295,15 +260,15 @@ protected void onUpdate(AjaxRequestTarget target) {\n         return check;\n     }\n \n-    private class FieldWrapper implements Serializable {\n+    private static class FieldWrapper implements Serializable {\n \n         private static final long serialVersionUID = -6770429509752964215L;\n \n         private Class type;\n \n         private String name;\n \n-        private SchemaList schemaList;\n+        private transient SchemaList schemaList;\n \n         public String getName() {\n             return name;"},{"sha":"2d0c2f2cfbb20228db3a85f04446c376c931c05a","filename":"console/src/main/java/org/syncope/console/pages/panels/ResourceConnConfPanel.java","status":"modified","additions":8,"deletions":30,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceConnConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceConnConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceConnConfPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -187,14 +187,8 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n                         || GUARDED_BYTE_ARRAY.equalsIgnoreCase(\n                         property.getSchema().getType())) {\n \n-                    field = new AjaxPasswordFieldPanel(\n-                            \"panel\",\n-                            label.getDefaultModelObjectAsString(),\n-                            new Model(),\n-                            true);\n-\n-                    ((PasswordTextField) field.getField()).setResetPassword(\n-                            false);\n+                    field = new AjaxPasswordFieldPanel(\"panel\", label.getDefaultModelObjectAsString(), new Model());\n+                    ((PasswordTextField) field.getField()).setResetPassword(false);\n \n                     required = property.getSchema().isRequired();\n \n@@ -211,29 +205,14 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n                     }\n \n                     if (NUMBER.contains(propertySchemaClass)) {\n-                        field = new AjaxNumberFieldPanel(\n-                                \"panel\",\n-                                label.getDefaultModelObjectAsString(),\n-                                new Model(),\n-                                ClassUtils.resolvePrimitiveIfNecessary(\n-                                propertySchemaClass),\n-                                true);\n+                        field = new AjaxNumberFieldPanel(\"panel\", label.getDefaultModelObjectAsString(),\n+                                new Model(), ClassUtils.resolvePrimitiveIfNecessary(propertySchemaClass));\n \n                         required = property.getSchema().isRequired();\n-                    } else if (Boolean.class.equals(propertySchemaClass)\n-                            || boolean.class.equals(propertySchemaClass)) {\n-                        field = new AjaxCheckBoxPanel(\n-                                \"panel\",\n-                                label.getDefaultModelObjectAsString(),\n-                                new Model(),\n-                                true);\n+                    } else if (Boolean.class.equals(propertySchemaClass) || boolean.class.equals(propertySchemaClass)) {\n+                        field = new AjaxCheckBoxPanel(\"panel\", label.getDefaultModelObjectAsString(), new Model());\n                     } else {\n-\n-                        field = new AjaxTextFieldPanel(\n-                                \"panel\",\n-                                label.getDefaultModelObjectAsString(),\n-                                new Model(),\n-                                true);\n+                        field = new AjaxTextFieldPanel(\"panel\", label.getDefaultModelObjectAsString(), new Model());\n \n                         required = property.getSchema().isRequired();\n                     }\n@@ -256,7 +235,6 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n                             new MultiValueSelectorPanel<String>(\n                             \"panel\",\n                             new PropertyModel<List<String>>(property, \"values\"),\n-                            String.class,\n                             field,\n                             true);\n \n@@ -335,7 +313,7 @@ public void onEvent(final IEvent<?> event) {\n             // get configuration properties and send a new event\n             send(getPage(), Broadcast.BREADTH,\n                     new ConnConfModEvent(target, connConfProperties));\n-            \n+\n         } else if (event.getPayload() instanceof MultiValueSelectorEvent) {\n             // multi value connector property change: forward event\n             final AjaxRequestTarget target ="},{"sha":"bd6df91bfba7137689df18ff1da0ca702a5e9148","filename":"console/src/main/java/org/syncope/console/pages/panels/ResourceDetailsPanel.java","status":"modified","additions":31,"deletions":70,"changes":101,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceDetailsPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -82,97 +82,61 @@ protected List<ConnInstanceTO> load() {\n         connInstanceTO =\n                 getConectorInstanceTO(connectors.getObject(), resourceTO);\n \n-        final AjaxTextFieldPanel resourceName = new AjaxTextFieldPanel(\n-                \"name\",\n-                new ResourceModel(\"name\", \"name\").getObject(),\n-                new PropertyModel<String>(resourceTO, \"name\"),\n-                false);\n+        final AjaxTextFieldPanel resourceName = new AjaxTextFieldPanel(\"name\",\n+                new ResourceModel(\"name\", \"name\").getObject(), new PropertyModel<String>(resourceTO, \"name\"));\n \n         resourceName.setEnabled(createFlag);\n         resourceName.addRequiredLabel();\n         add(resourceName);\n \n-        final AjaxCheckBoxPanel forceMandatoryConstraint =\n-                new AjaxCheckBoxPanel(\n-                \"forceMandatoryConstraint\",\n-                new ResourceModel(\n-                \"forceMandatoryConstraint\", \"forceMandatoryConstraint\").\n-                getObject(),\n-                new PropertyModel<Boolean>(resourceTO,\n-                \"forceMandatoryConstraint\"),\n-                false);\n+        final AjaxCheckBoxPanel forceMandatoryConstraint = new AjaxCheckBoxPanel(\"forceMandatoryConstraint\",\n+                new ResourceModel(\"forceMandatoryConstraint\", \"forceMandatoryConstraint\").getObject(),\n+                new PropertyModel<Boolean>(resourceTO, \"forceMandatoryConstraint\"));\n         add(forceMandatoryConstraint);\n \n-        final AjaxCheckBoxPanel propagationPrimary =\n-                new AjaxCheckBoxPanel(\n-                \"propagationPrimary\",\n-                new ResourceModel(\n-                \"propagationPrimary\", \"propagationPrimary\").getObject(),\n-                new PropertyModel<Boolean>(resourceTO,\n-                \"propagationPrimary\"),\n-                false);\n+        final AjaxCheckBoxPanel propagationPrimary = new AjaxCheckBoxPanel(\"propagationPrimary\",\n+                new ResourceModel(\"propagationPrimary\", \"propagationPrimary\").getObject(),\n+                new PropertyModel<Boolean>(resourceTO, \"propagationPrimary\"));\n         add(propagationPrimary);\n \n-        final AjaxNumberFieldPanel propagationPriority =\n-                new AjaxNumberFieldPanel(\n-                \"propagationPriority\",\n-                new ResourceModel(\"propagationPriority\", \"propagationPriority\").\n-                getObject(),\n-                new PropertyModel<Number>(resourceTO, \"propagationPriority\"),\n-                Integer.class,\n-                false);\n+        final AjaxNumberFieldPanel propagationPriority = new AjaxNumberFieldPanel(\"propagationPriority\",\n+                new ResourceModel(\"propagationPriority\", \"propagationPriority\").getObject(),\n+                new PropertyModel<Number>(resourceTO, \"propagationPriority\"), Integer.class);\n         add(propagationPriority);\n \n-        final AjaxDropDownChoicePanel<PropagationMode> propagationMode =\n-                new AjaxDropDownChoicePanel<PropagationMode>(\n-                \"propagationMode\",\n-                new ResourceModel(\"propagationMode\", \"propagationMode\").\n-                getObject(),\n-                new PropertyModel(resourceTO, \"propagationMode\"),\n-                false);\n+        final AjaxDropDownChoicePanel<PropagationMode> propagationMode = new AjaxDropDownChoicePanel<PropagationMode>(\n+                \"propagationMode\", new ResourceModel(\"propagationMode\", \"propagationMode\").getObject(),\n+                new PropertyModel(resourceTO, \"propagationMode\"));\n         propagationMode.setChoices(\n                 Arrays.asList(PropagationMode.values()));\n         add(propagationMode);\n \n-        final AjaxDropDownChoicePanel<TraceLevel> createTraceLevel =\n-                new AjaxDropDownChoicePanel<TraceLevel>(\"createTraceLevel\",\n-                new ResourceModel(\"createTraceLevel\", \"createTraceLevel\").\n-                getObject(),\n-                new PropertyModel(resourceTO, \"createTraceLevel\"),\n-                false);\n+        final AjaxDropDownChoicePanel<TraceLevel> createTraceLevel = new AjaxDropDownChoicePanel<TraceLevel>(\n+                \"createTraceLevel\", new ResourceModel(\"createTraceLevel\", \"createTraceLevel\").getObject(),\n+                new PropertyModel(resourceTO, \"createTraceLevel\"));\n         createTraceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n         add(createTraceLevel);\n \n-        final AjaxDropDownChoicePanel<TraceLevel> updateTraceLevel =\n-                new AjaxDropDownChoicePanel<TraceLevel>(\"updateTraceLevel\",\n-                new ResourceModel(\"updateTraceLevel\", \"updateTraceLevel\").\n-                getObject(),\n-                new PropertyModel(resourceTO, \"updateTraceLevel\"),\n-                false);\n+        final AjaxDropDownChoicePanel<TraceLevel> updateTraceLevel = new AjaxDropDownChoicePanel<TraceLevel>(\n+                \"updateTraceLevel\", new ResourceModel(\"updateTraceLevel\", \"updateTraceLevel\").getObject(),\n+                new PropertyModel(resourceTO, \"updateTraceLevel\"));\n         updateTraceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n         add(updateTraceLevel);\n \n-        final AjaxDropDownChoicePanel<TraceLevel> deleteTraceLevel =\n-                new AjaxDropDownChoicePanel<TraceLevel>(\"deleteTraceLevel\",\n-                new ResourceModel(\"deleteTraceLevel\", \"deleteTraceLevel\").\n-                getObject(),\n-                new PropertyModel(resourceTO, \"deleteTraceLevel\"),\n-                false);\n+        final AjaxDropDownChoicePanel<TraceLevel> deleteTraceLevel = new AjaxDropDownChoicePanel<TraceLevel>(\n+                \"deleteTraceLevel\", new ResourceModel(\"deleteTraceLevel\", \"deleteTraceLevel\").getObject(),\n+                new PropertyModel(resourceTO, \"deleteTraceLevel\"));\n         deleteTraceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n         add(deleteTraceLevel);\n \n-        final AjaxDropDownChoicePanel<TraceLevel> syncTraceLevel =\n-                new AjaxDropDownChoicePanel<TraceLevel>(\"syncTraceLevel\",\n-                new ResourceModel(\"syncTraceLevel\", \"syncTraceLevel\").getObject(),\n-                new PropertyModel(resourceTO, \"syncTraceLevel\"),\n-                false);\n+        final AjaxDropDownChoicePanel<TraceLevel> syncTraceLevel = new AjaxDropDownChoicePanel<TraceLevel>(\n+                \"syncTraceLevel\", new ResourceModel(\"syncTraceLevel\", \"syncTraceLevel\").getObject(),\n+                new PropertyModel(resourceTO, \"syncTraceLevel\"));\n         syncTraceLevel.setChoices(Arrays.asList(TraceLevel.values()));\n         add(syncTraceLevel);\n \n-        final AjaxCheckBoxPanel resetToken = new AjaxCheckBoxPanel(\n-                \"resetToken\",\n-                new ResourceModel(\"resetToken\", \"resetToken\").getObject(),\n-                new Model(null), false);\n+        final AjaxCheckBoxPanel resetToken = new AjaxCheckBoxPanel(\"resetToken\",\n+                new ResourceModel(\"resetToken\", \"resetToken\").getObject(), new Model(null));\n \n         resetToken.getField().add(\n                 new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n@@ -189,12 +153,9 @@ protected void onUpdate(final AjaxRequestTarget art) {\n                 });\n         add(resetToken);\n \n-        final AjaxDropDownChoicePanel<ConnInstanceTO> conn =\n-                new AjaxDropDownChoicePanel<ConnInstanceTO>(\n-                \"connector\",\n-                new ResourceModel(\"connector\", \"connector\").getObject(),\n-                new PropertyModel(this, \"connInstanceTO\"),\n-                false);\n+        final AjaxDropDownChoicePanel<ConnInstanceTO> conn = new AjaxDropDownChoicePanel<ConnInstanceTO>(\n+                \"connector\", new ResourceModel(\"connector\", \"connector\").getObject(),\n+                new PropertyModel(this, \"connInstanceTO\"));\n         conn.setChoices(connectors.getObject());\n         conn.setChoiceRenderer(new ChoiceRenderer(\"displayName\", \"id\"));\n "},{"sha":"5a5741dde3a371cd3453f7190e3f34c3344f2a4b","filename":"console/src/main/java/org/syncope/console/pages/panels/ResourceMappingPanel.java","status":"modified","additions":30,"deletions":69,"changes":99,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -54,8 +54,8 @@\n import org.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.syncope.console.wicket.markup.html.form.FieldPanel;\n-import org.syncope.types.ConnConfProperty;\n import org.syncope.types.AttributableType;\n+import org.syncope.types.ConnConfProperty;\n import org.syncope.types.IntMappingType;\n \n /**\n@@ -164,10 +164,9 @@ public ResourceMappingPanel(\n \n         initResourceSchemaNames();\n \n-        final AjaxTextFieldPanel accountLink = new AjaxTextFieldPanel(\n-                \"accountLink\",\n+        final AjaxTextFieldPanel accountLink = new AjaxTextFieldPanel(\"accountLink\",\n                 new ResourceModel(\"accountLink\", \"accountLink\").getObject(),\n-                new PropertyModel<String>(resourceTO, \"accountLink\"), false);\n+                new PropertyModel<String>(resourceTO, \"accountLink\"));\n         add(accountLink);\n \n         mappingContainer = new WebMarkupContainer(\"mappingContainer\");\n@@ -243,12 +242,8 @@ public CharSequence preDecorateScript(\n                     }\n                 });\n \n-                final AjaxDropDownChoicePanel intAttrNames =\n-                        new AjaxDropDownChoicePanel<String>(\n-                        \"intAttrNames\",\n-                        getString(\"intAttrNames\"),\n-                        new PropertyModel(mappingTO, \"intAttrName\"),\n-                        true);\n+                final AjaxDropDownChoicePanel intAttrNames = new AjaxDropDownChoicePanel<String>(\"intAttrNames\",\n+                        getString(\"intAttrNames\"), new PropertyModel(mappingTO, \"intAttrName\"));\n                 intAttrNames.setChoices(schemaNames);\n                 intAttrNames.setRequired(true);\n                 intAttrNames.setStyleShet(fieldStyle);\n@@ -258,13 +253,9 @@ public CharSequence preDecorateScript(\n                 item.add(intAttrNames);\n \n \n-                final AjaxDropDownChoicePanel typesPanel =\n-                        new AjaxDropDownChoicePanel(\n-                        \"intMappingTypes\",\n-                        new ResourceModel(\"intMappingTypes\", \"intMappingTypes\").\n-                        getObject(),\n-                        new PropertyModel<IntMappingType>(\n-                        mappingTO, \"intMappingType\"), false);\n+                final AjaxDropDownChoicePanel typesPanel = new AjaxDropDownChoicePanel(\"intMappingTypes\",\n+                        new ResourceModel(\"intMappingTypes\", \"intMappingTypes\").getObject(),\n+                        new PropertyModel<IntMappingType>(mappingTO, \"intMappingType\"));\n \n                 typesPanel.getField().add(\n                         new AjaxFormComponentUpdatingBehavior(onchange) {\n@@ -276,8 +267,7 @@ public CharSequence preDecorateScript(\n                             protected void onUpdate(\n                                     final AjaxRequestTarget target) {\n                                 setAttrNames(\n-                                        (IntMappingType) typesPanel.\n-                                        getModelObject(), intAttrNames);\n+                                        (IntMappingType) typesPanel.getModelObject(), intAttrNames);\n                                 target.add(intAttrNames);\n                             }\n                         });\n@@ -287,11 +277,8 @@ protected void onUpdate(\n                 typesPanel.setStyleShet(fieldStyle);\n                 item.add(typesPanel);\n \n-                final AjaxDropDownChoicePanel mappingTypesPanel =\n-                        new AjaxDropDownChoicePanel(\n-                        \"mappingTypes\",\n-                        new ResourceModel(\"mappingTypes\", \"mappingTypes\").\n-                        getObject(), new Model(entity), false);\n+                final AjaxDropDownChoicePanel mappingTypesPanel = new AjaxDropDownChoicePanel(\"mappingTypes\",\n+                        new ResourceModel(\"mappingTypes\", \"mappingTypes\").getObject(), new Model(entity));\n \n                 mappingTypesPanel.setChoices(Arrays.asList(AttributableType.values()));\n                 mappingTypesPanel.setStyleShet(defFieldStyle);\n@@ -309,8 +296,7 @@ protected void onUpdate(\n                                     final AjaxRequestTarget target) {\n \n                                 attrTypes = getAttributeTypes(\n-                                        (AttributableType) mappingTypesPanel.\n-                                        getModelObject());\n+                                        (AttributableType) mappingTypesPanel.getModelObject());\n \n                                 typesPanel.setChoices(attrTypes);\n                                 intAttrNames.setChoices(Collections.EMPTY_LIST);\n@@ -324,24 +310,15 @@ protected void onUpdate(\n                 final FieldPanel extAttrName;\n \n                 if (schemaNames.isEmpty()) {\n-                    extAttrName = new AjaxTextFieldPanel(\n-                            \"extAttrName\",\n-                            new ResourceModel(\"extAttrNames\", \"extAttrNames\").\n-                            getObject(),\n-                            new PropertyModel<String>(mappingTO, \"extAttrName\"),\n-                            true);\n+                    extAttrName = new AjaxTextFieldPanel(\"extAttrName\",\n+                            new ResourceModel(\"extAttrNames\", \"extAttrNames\").getObject(),\n+                            new PropertyModel<String>(mappingTO, \"extAttrName\"));\n \n                 } else {\n-                    extAttrName =\n-                            new AjaxDropDownChoicePanel<String>(\n-                            \"extAttrName\",\n-                            new ResourceModel(\"extAttrNames\", \"extAttrNames\").\n-                            getObject(),\n-                            new PropertyModel(mappingTO, \"extAttrName\"),\n-                            true);\n-                    ((AjaxDropDownChoicePanel) extAttrName).setChoices(\n-                            schemaNames);\n-\n+                    extAttrName = new AjaxDropDownChoicePanel<String>(\"extAttrName\",\n+                            new ResourceModel(\"extAttrNames\", \"extAttrNames\").getObject(),\n+                            new PropertyModel(mappingTO, \"extAttrName\"));\n+                    ((AjaxDropDownChoicePanel) extAttrName).setChoices(schemaNames);\n                 }\n \n                 boolean required = mappingTO != null\n@@ -353,26 +330,19 @@ protected void onUpdate(\n                 extAttrName.setStyleShet(fieldStyle);\n                 item.add(extAttrName);\n \n-                final AjaxTextFieldPanel mandatory =\n-                        new AjaxTextFieldPanel(\n-                        \"mandatoryCondition\",\n-                        new ResourceModel(\n-                        \"mandatoryCondition\", \"mandatoryCondition\").getObject(),\n-                        new PropertyModel(mappingTO, \"mandatoryCondition\"),\n-                        true);\n+                final AjaxTextFieldPanel mandatory = new AjaxTextFieldPanel(\"mandatoryCondition\",\n+                        new ResourceModel(\"mandatoryCondition\", \"mandatoryCondition\").getObject(),\n+                        new PropertyModel(mappingTO, \"mandatoryCondition\"));\n \n-                mandatory.setChoices(\n-                        Arrays.asList(new String[]{\"true\", \"false\"}));\n+                mandatory.setChoices(Arrays.asList(new String[]{\"true\", \"false\"}));\n \n                 mandatory.setStyleShet(shortFieldStyle);\n \n                 item.add(mandatory);\n \n-                final AjaxCheckBoxPanel accountId =\n-                        new AjaxCheckBoxPanel(\n-                        \"accountId\",\n+                final AjaxCheckBoxPanel accountId = new AjaxCheckBoxPanel(\"accountId\",\n                         new ResourceModel(\"accountId\", \"accountId\").getObject(),\n-                        new PropertyModel(mappingTO, \"accountid\"), false);\n+                        new PropertyModel(mappingTO, \"accountid\"));\n \n                 accountId.getField().add(\n                         new AjaxFormComponentUpdatingBehavior(onchange) {\n@@ -395,11 +365,8 @@ protected void onUpdate(\n \n                 item.add(accountId);\n \n-                final AjaxCheckBoxPanel password =\n-                        new AjaxCheckBoxPanel(\n-                        \"password\",\n-                        new ResourceModel(\"password\", \"password\").getObject(),\n-                        new PropertyModel(mappingTO, \"password\"), true);\n+                final AjaxCheckBoxPanel password = new AjaxCheckBoxPanel(\"password\",\n+                        new ResourceModel(\"password\", \"password\").getObject(), new PropertyModel(mappingTO, \"password\"));\n \n                 password.getField().add(\n                         new AjaxFormComponentUpdatingBehavior(onchange) {\n@@ -549,25 +516,19 @@ private void setAttrNames(\n                 case UserSchema:\n                 case RoleSchema:\n                 case MembershipSchema:\n-                    toBeUpdated.setChoices(\n-                            schemaRestClient.getSchemaNames(\n-                            attrType.getAttributableType().toString().toLowerCase()));\n+                    toBeUpdated.setChoices(schemaRestClient.getSchemaNames(attrType.getAttributableType()));\n                     break;\n \n                 case UserDerivedSchema:\n                 case RoleDerivedSchema:\n                 case MembershipDerivedSchema:\n-                    toBeUpdated.setChoices(\n-                            schemaRestClient.getDerivedSchemaNames(\n-                            attrType.getAttributableType().toString().toLowerCase()));\n+                    toBeUpdated.setChoices(schemaRestClient.getDerivedSchemaNames(attrType.getAttributableType()));\n                     break;\n \n                 case UserVirtualSchema:\n                 case RoleVirtualSchema:\n                 case MembershipVirtualSchema:\n-                    toBeUpdated.setChoices(\n-                            schemaRestClient.getVirtualSchemaNames(\n-                            attrType.getAttributableType().toString().toLowerCase()));\n+                    toBeUpdated.setChoices(schemaRestClient.getVirtualSchemaNames(attrType.getAttributableType()));\n                     break;\n \n                 case SyncopeUserId:"},{"sha":"80055901b99fe036e1133df78ad258ab2772d98d","filename":"console/src/main/java/org/syncope/console/pages/panels/ResourceSecurityPanel.java","status":"modified","additions":8,"deletions":21,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceSecurityPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceSecurityPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceSecurityPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -117,13 +117,9 @@ protected Map<Long, String> load() {\n         // -------------------------------\n         // Password policy specification\n         // -------------------------------\n-        final AjaxDropDownChoicePanel<Long> passwordPolicy =\n-                new AjaxDropDownChoicePanel<Long>(\n-                \"passwordPolicy\",\n-                new ResourceModel(\"passwordPolicy\", \"passwordPolicy\").\n-                getObject(),\n-                new PropertyModel(resourceTO, \"passwordPolicy\"),\n-                false);\n+        final AjaxDropDownChoicePanel<Long> passwordPolicy = new AjaxDropDownChoicePanel<Long>(\"passwordPolicy\",\n+                new ResourceModel(\"passwordPolicy\", \"passwordPolicy\").getObject(),\n+                new PropertyModel(resourceTO, \"passwordPolicy\"));\n \n         passwordPolicy.setChoiceRenderer(\n                 new PolicyRenderer(PolicyType.PASSWORD));\n@@ -139,13 +135,9 @@ protected Map<Long, String> load() {\n         // -------------------------------\n         // Account policy specification\n         // -------------------------------\n-        final AjaxDropDownChoicePanel<Long> accountPolicy =\n-                new AjaxDropDownChoicePanel<Long>(\n-                \"accountPolicy\",\n-                new ResourceModel(\"accountPolicy\", \"accountPolicy\").\n-                getObject(),\n-                new PropertyModel(resourceTO, \"accountPolicy\"),\n-                false);\n+        final AjaxDropDownChoicePanel<Long> accountPolicy = new AjaxDropDownChoicePanel<Long>(\"accountPolicy\",\n+                new ResourceModel(\"accountPolicy\", \"accountPolicy\").getObject(),\n+                new PropertyModel(resourceTO, \"accountPolicy\"));\n \n         accountPolicy.setChoiceRenderer(\n                 new PolicyRenderer(PolicyType.ACCOUNT));\n@@ -161,13 +153,8 @@ protected Map<Long, String> load() {\n         // -------------------------------\n         // Sync policy specification\n         // -------------------------------\n-        final AjaxDropDownChoicePanel<Long> syncPolicy =\n-                new AjaxDropDownChoicePanel<Long>(\n-                \"syncPolicy\",\n-                new ResourceModel(\"syncPolicy\", \"syncPolicy\").\n-                getObject(),\n-                new PropertyModel(resourceTO, \"syncPolicy\"),\n-                false);\n+        final AjaxDropDownChoicePanel<Long> syncPolicy = new AjaxDropDownChoicePanel<Long>(\"syncPolicy\",\n+                new ResourceModel(\"syncPolicy\", \"syncPolicy\").getObject(), new PropertyModel(resourceTO, \"syncPolicy\"));\n \n         syncPolicy.setChoiceRenderer(\n                 new PolicyRenderer(PolicyType.SYNC));"},{"sha":"08f96302aee029fb6d0f99c92475622401f2ab36","filename":"console/src/main/java/org/syncope/console/pages/panels/RoleAttributesPanel.java","status":"modified","additions":9,"deletions":19,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleAttributesPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -47,19 +47,15 @@ public RoleAttributesPanel(final String id,\n         //--------------------------------\n         // Attributes panel\n         //--------------------------------\n-        final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\n-                \"name\", \"name\",\n-                new PropertyModel<String>(roleTO, \"name\"), false);\n+        final AjaxTextFieldPanel name = new AjaxTextFieldPanel(\"name\", \"name\",\n+                new PropertyModel<String>(roleTO, \"name\"));\n         name.addRequiredLabel();\n         this.add(name);\n \n         this.add(new AttributesPanel(\"attributes\", roleTO, form, false));\n \n-        final AjaxCheckBoxPanel inhAttributes = new AjaxCheckBoxPanel(\n-                \"inheritAttributes\",\n-                \"inheritAttributes\",\n-                new PropertyModel<Boolean>(roleTO, \"inheritAttributes\"),\n-                false);\n+        final AjaxCheckBoxPanel inhAttributes = new AjaxCheckBoxPanel(\"inheritAttributes\", \"inheritAttributes\",\n+                new PropertyModel<Boolean>(roleTO, \"inheritAttributes\"));\n         this.add(inhAttributes);\n         //--------------------------------\n \n@@ -68,11 +64,8 @@ public RoleAttributesPanel(final String id,\n         //--------------------------------\n         this.add(new DerivedAttributesPanel(\"derivedAttributes\", roleTO));\n \n-        final AjaxCheckBoxPanel inhDerivedAttributes = new AjaxCheckBoxPanel(\n-                \"inheritDerivedAttributes\",\n-                \"inheritDerivedAttributes\",\n-                new PropertyModel<Boolean>(roleTO, \"inheritDerivedAttributes\"),\n-                false);\n+        final AjaxCheckBoxPanel inhDerivedAttributes = new AjaxCheckBoxPanel(\"inheritDerivedAttributes\",\n+                \"inheritDerivedAttributes\", new PropertyModel<Boolean>(roleTO, \"inheritDerivedAttributes\"));\n         inhDerivedAttributes.setOutputMarkupId(true);\n         this.add(inhDerivedAttributes);\n         //--------------------------------\n@@ -83,11 +76,8 @@ public RoleAttributesPanel(final String id,\n         this.add(new VirtualAttributesPanel(\"virtualAttributes\", roleTO,\n                 false));\n \n-        final AjaxCheckBoxPanel inhVirtualAttributes = new AjaxCheckBoxPanel(\n-                \"inheritVirtualAttributes\",\n-                \"inheritVirtualAttributes\",\n-                new PropertyModel<Boolean>(roleTO, \"inheritVirtualAttributes\"),\n-                false);\n+        final AjaxCheckBoxPanel inhVirtualAttributes = new AjaxCheckBoxPanel(\"inheritVirtualAttributes\",\n+                \"inheritVirtualAttributes\", new PropertyModel<Boolean>(roleTO, \"inheritVirtualAttributes\"));\n         inhVirtualAttributes.setOutputMarkupId(true);\n         this.add(inhVirtualAttributes);\n         //--------------------------------\n@@ -123,4 +113,4 @@ public RoleAttributesPanel(final String id,\n     public Palette<String> getEntitlementsPalette() {\n         return this.entitlementsPalette;\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"28cde67b5b3cd0a1dfdf46889cb1e7316d0eea05","filename":"console/src/main/java/org/syncope/console/pages/panels/RoleSecurityPanel.java","status":"modified","additions":15,"deletions":31,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSecurityPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSecurityPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSecurityPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -47,14 +47,14 @@ public class RoleSecurityPanel extends Panel {\n      */\n     protected static final Logger LOG =\n             LoggerFactory.getLogger(RoleSecurityPanel.class);\n-    \n+\n     private static final long serialVersionUID = -7982691107029848579L;\n-    \n+\n     @SpringBean\n     private PolicyRestClient policyRestClient;\n-    \n+\n     IModel<Map<Long, String>> passwordPolicies = null;\n-    \n+\n     IModel<Map<Long, String>> accountPolicies = null;\n \n     public <T extends AbstractAttributableTO> RoleSecurityPanel(\n@@ -103,11 +103,8 @@ protected Map<Long, String> load() {\n         // -------------------------------\n         // Password policy specification\n         // -------------------------------\n-        final AjaxDropDownChoicePanel<Long> passwordPolicy =\n-                new AjaxDropDownChoicePanel<Long>(\n-                \"passwordPolicy\", \"passwordPolicy\",\n-                new PropertyModel(entityTO, \"passwordPolicy\"),\n-                false);\n+        final AjaxDropDownChoicePanel<Long> passwordPolicy = new AjaxDropDownChoicePanel<Long>(\"passwordPolicy\",\n+                \"passwordPolicy\", new PropertyModel(entityTO, \"passwordPolicy\"));\n \n         passwordPolicy.setChoiceRenderer(\n                 new PolicyRenderer(PolicyType.PASSWORD));\n@@ -119,10 +116,8 @@ protected Map<Long, String> load() {\n \n         securityContainer.add(passwordPolicy);\n \n-        final AjaxCheckBoxPanel inhPasswordPolicy = new AjaxCheckBoxPanel(\n-                \"inheritPasswordPolicy\", \"inheritPasswordPolicy\",\n-                new PropertyModel<Boolean>(entityTO, \"inheritPasswordPolicy\"),\n-                false);\n+        final AjaxCheckBoxPanel inhPasswordPolicy = new AjaxCheckBoxPanel(\"inheritPasswordPolicy\",\n+                \"inheritPasswordPolicy\", new PropertyModel<Boolean>(entityTO, \"inheritPasswordPolicy\"));\n \n         passwordPolicy.setReadOnly(inhPasswordPolicy.getModelObject());\n \n@@ -147,29 +142,19 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         // -------------------------------\n         // Account policy specification\n         // -------------------------------\n-        final AjaxDropDownChoicePanel<Long> accountPolicy =\n-                new AjaxDropDownChoicePanel<Long>(\n-                \"accountPolicy\",\n-                \"accountPolicy\",\n-                new PropertyModel(entityTO, \"accountPolicy\"),\n-                false);\n+        final AjaxDropDownChoicePanel<Long> accountPolicy = new AjaxDropDownChoicePanel<Long>(\"accountPolicy\",\n+                \"accountPolicy\", new PropertyModel(entityTO, \"accountPolicy\"));\n \n-        accountPolicy.setChoiceRenderer(\n-                new PolicyRenderer(PolicyType.ACCOUNT));\n+        accountPolicy.setChoiceRenderer(new PolicyRenderer(PolicyType.ACCOUNT));\n \n-        accountPolicy.setChoices(\n-                new ArrayList<Long>(accountPolicies.getObject().keySet()));\n+        accountPolicy.setChoices(new ArrayList<Long>(accountPolicies.getObject().keySet()));\n \n         ((DropDownChoice) accountPolicy.getField()).setNullValid(true);\n \n         securityContainer.add(accountPolicy);\n \n-        final AjaxCheckBoxPanel inhAccountPolicy = new AjaxCheckBoxPanel(\n-                \"inheritAccountPolicy\",\n-                \"inheritAccountPolicy\",\n-                new PropertyModel<Boolean>(entityTO, \"inheritAccountPolicy\"),\n-                false);\n-\n+        final AjaxCheckBoxPanel inhAccountPolicy = new AjaxCheckBoxPanel(\"inheritAccountPolicy\",\n+                \"inheritAccountPolicy\", new PropertyModel<Boolean>(entityTO, \"inheritAccountPolicy\"));\n         accountPolicy.setReadOnly(inhAccountPolicy.getModelObject());\n \n         inhAccountPolicy.getField().add(\n@@ -180,8 +165,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n                     @Override\n                     protected void onUpdate(final AjaxRequestTarget target) {\n-                        accountPolicy.setReadOnly(\n-                                inhAccountPolicy.getModelObject());\n+                        accountPolicy.setReadOnly(inhAccountPolicy.getModelObject());\n                         target.add(accountPolicy);\n                     }\n                 });"},{"sha":"f2453d14b61aee79f37e0171d274152ea517ed6a","filename":"console/src/main/java/org/syncope/console/pages/panels/UserDetailsPanel.java","status":"modified","additions":9,"deletions":17,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserDetailsPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -52,9 +52,8 @@ public <T extends AbstractAttributableTO> UserDetailsPanel(\n         // ------------------------\n         // Username\n         // ------------------------\n-        final FieldPanel username = new AjaxTextFieldPanel(\n-                \"username\", \"username\",\n-                new PropertyModel<String>(userTO, \"username\"), true);\n+        final FieldPanel username = new AjaxTextFieldPanel(\"username\", \"username\",\n+                new PropertyModel<String>(userTO, \"username\"));\n         if (!templateMode) {\n             username.addRequiredLabel();\n         }\n@@ -69,30 +68,23 @@ public <T extends AbstractAttributableTO> UserDetailsPanel(\n                 new ResourceModel(\"confirmPassword\"));\n         final FieldPanel confirmPassword;\n         if (templateMode) {\n-            password = new AjaxTextFieldPanel(\"password\", \"password\",\n-                    new PropertyModel<String>(userTO, \"password\"), true);\n+            password = new AjaxTextFieldPanel(\"password\", \"password\", new PropertyModel<String>(userTO, \"password\"));\n \n             confirmPasswordLabel.setVisible(false);\n-            confirmPassword = new AjaxTextFieldPanel(\"confirmPassword\",\n-                    \"confirmPassword\", new Model<String>(), false);\n+            confirmPassword = new AjaxTextFieldPanel(\"confirmPassword\", \"confirmPassword\", new Model<String>());\n             confirmPassword.setEnabled(false);\n             confirmPassword.setVisible(false);\n         } else {\n-            password = new AjaxPasswordFieldPanel(\"password\", \"password\",\n-                    new PropertyModel<String>(userTO, \"password\"), true);\n+            password = new AjaxPasswordFieldPanel(\"password\", \"password\", new PropertyModel<String>(userTO, \"password\"));\n             password.setRequired(userTO.getId() == 0);\n-            ((PasswordTextField) password.getField()).setResetPassword(\n-                    resetPassword);\n+            ((PasswordTextField) password.getField()).setResetPassword(resetPassword);\n \n-            confirmPassword = new AjaxPasswordFieldPanel(\"confirmPassword\",\n-                    \"confirmPassword\", new Model<String>(), true);\n+            confirmPassword = new AjaxPasswordFieldPanel(\"confirmPassword\", \"confirmPassword\", new Model<String>());\n             if (!resetPassword) {\n-                confirmPassword.getField().setModelObject(\n-                        userTO.getPassword());\n+                confirmPassword.getField().setModelObject(userTO.getPassword());\n             }\n             confirmPassword.setRequired(userTO.getId() == 0);\n-            ((PasswordTextField) confirmPassword.getField()).setResetPassword(\n-                    resetPassword);\n+            ((PasswordTextField) confirmPassword.getField()).setResetPassword(resetPassword);\n \n             form.add(new EqualPasswordInputValidator(\n                     password.getField(), confirmPassword.getField()));"},{"sha":"36b05cb579b03cf0b4ccb0d18e3647f7eec14480","filename":"console/src/main/java/org/syncope/console/pages/panels/UserSearchPanel.java","status":"modified","additions":180,"deletions":251,"changes":431,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -34,6 +34,7 @@\n import org.apache.wicket.markup.html.form.CheckBox;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n import org.apache.wicket.markup.html.form.TextField;\n import org.apache.wicket.markup.html.list.ListItem;\n import org.apache.wicket.markup.html.list.ListView;\n@@ -60,6 +61,7 @@\n import org.syncope.console.rest.ResourceRestClient;\n import org.syncope.console.rest.RoleRestClient;\n import org.syncope.console.rest.SchemaRestClient;\n+import org.syncope.types.AttributableType;\n \n public class UserSearchPanel extends Panel {\n \n@@ -73,8 +75,7 @@ public class UserSearchPanel extends Panel {\n \n     private List<String> ATTRIBUTES_NOTINCLUDED = Arrays.asList(new String[]{\n                 \"attributes\", \"derivedAttributes\", \"virtualAttributes\",\n-                \"serialVersionUID\", \"memberships\", \"resources\", \"password\",\n-                \"propagationStatusMap\"});\n+                \"serialVersionUID\", \"memberships\", \"resources\", \"password\", \"propagationStatusMap\"});\n \n     @SpringBean\n     private SchemaRestClient schemaRestClient;\n@@ -85,130 +86,121 @@ public class UserSearchPanel extends Panel {\n     @SpringBean\n     private ResourceRestClient resourceRestClient;\n \n-    final private IModel<List<String>> dnames =\n-            new LoadableDetachableModel<List<String>>() {\n+    private final boolean required;\n \n-                @Override\n-                protected List<String> load() {\n+    final private IModel<List<String>> dnames = new LoadableDetachableModel<List<String>>() {\n \n-                    final List<String> details = new ArrayList<String>();\n+        private static final long serialVersionUID = 5275935387613157437L;\n \n-                    Class<?> clazz = UserTO.class;\n+        @Override\n+        protected List<String> load() {\n+            final List<String> details = new ArrayList<String>();\n \n-                    // loop on class and all superclasses searching for field\n-                    while (clazz != null && clazz != Object.class) {\n-                        for (Field field : clazz.getDeclaredFields()) {\n-                            if (!ATTRIBUTES_NOTINCLUDED.contains(\n-                                    field.getName())) {\n+            Class<?> clazz = UserTO.class;\n \n-                                details.add(field.getName());\n-                            }\n-                        }\n-                        clazz = clazz.getSuperclass();\n+            // loop on class and all superclasses searching for field\n+            while (clazz != null && clazz != Object.class) {\n+                for (Field field : clazz.getDeclaredFields()) {\n+                    if (!ATTRIBUTES_NOTINCLUDED.contains(field.getName())) {\n+                        details.add(field.getName());\n                     }\n-\n-                    Collections.reverse(details);\n-                    return details;\n                 }\n-            };\n+                clazz = clazz.getSuperclass();\n+            }\n \n-    final private IModel<List<String>> unames =\n-            new LoadableDetachableModel<List<String>>() {\n+            Collections.reverse(details);\n+            return details;\n+        }\n+    };\n \n-                private static final long serialVersionUID =\n-                        5275935387613157437L;\n+    final private IModel<List<String>> unames = new LoadableDetachableModel<List<String>>() {\n \n-                @Override\n-                protected List<String> load() {\n-                    return schemaRestClient.getSchemaNames(\"user\");\n-                }\n-            };\n+        private static final long serialVersionUID = 5275935387613157437L;\n \n-    final private IModel<List<String>> ronames =\n-            new LoadableDetachableModel<List<String>>() {\n+        @Override\n+        protected List<String> load() {\n+            return schemaRestClient.getSchemaNames(AttributableType.USER);\n+        }\n+    };\n \n-                private static final long serialVersionUID =\n-                        5275935387613157437L;\n+    final private IModel<List<String>> roleNames = new LoadableDetachableModel<List<String>>() {\n \n-                @Override\n-                protected List<String> load() {\n-                    List<RoleTO> roleTOs = roleRestClient.getAllRoles();\n+        private static final long serialVersionUID = 5275935387613157437L;\n \n-                    List<String> result = new ArrayList<String>(\n-                            roleTOs.size());\n-                    for (RoleTO role : roleTOs) {\n-                        result.add(role.getDisplayName());\n-                    }\n+        @Override\n+        protected List<String> load() {\n+            List<RoleTO> roleTOs = roleRestClient.getAllRoles();\n \n-                    return result;\n-                }\n-            };\n+            List<String> result = new ArrayList<String>(roleTOs.size());\n+            for (RoleTO role : roleTOs) {\n+                result.add(role.getDisplayName());\n+            }\n \n-    final private IModel<List<String>> renames =\n-            new LoadableDetachableModel<List<String>>() {\n+            return result;\n+        }\n+    };\n \n-                private static final long serialVersionUID =\n-                        5275935387613157437L;\n+    final private IModel<List<String>> resourceNames = new LoadableDetachableModel<List<String>>() {\n \n-                @Override\n-                protected List<String> load() {\n-                    List<ResourceTO> resourceTOs =\n-                            resourceRestClient.getAllResources();\n+        private static final long serialVersionUID = 5275935387613157437L;\n \n-                    List<String> result =\n-                            new ArrayList<String>(resourceTOs.size());\n+        @Override\n+        protected List<String> load() {\n+            List<ResourceTO> resourceTOs = resourceRestClient.getAllResources();\n \n-                    for (ResourceTO resource : resourceTOs) {\n-                        result.add(resource.getName());\n-                    }\n+            List<String> result = new ArrayList<String>(resourceTOs.size());\n \n-                    return result;\n-                }\n-            };\n+            for (ResourceTO resource : resourceTOs) {\n+                result.add(resource.getName());\n+            }\n+\n+            return result;\n+        }\n+    };\n \n     final private IModel<List<AttributeCond.Type>> attributeTypes =\n             new LoadableDetachableModel<List<AttributeCond.Type>>() {\n \n-                private static final long serialVersionUID =\n-                        5275935387613157437L;\n+                private static final long serialVersionUID = 5275935387613157437L;\n \n                 @Override\n                 protected List<AttributeCond.Type> load() {\n                     return Arrays.asList(AttributeCond.Type.values());\n                 }\n             };\n \n-    final private IModel<List<FilterType>> filterTypes =\n-            new LoadableDetachableModel<List<FilterType>>() {\n+    final private IModel<List<FilterType>> filterTypes = new LoadableDetachableModel<List<FilterType>>() {\n \n-                private static final long serialVersionUID =\n-                        5275935387613157437L;\n+        private static final long serialVersionUID = 5275935387613157437L;\n \n-                @Override\n-                protected List<FilterType> load() {\n-                    return Arrays.asList(FilterType.values());\n-                }\n-            };\n+        @Override\n+        protected List<FilterType> load() {\n+            return Arrays.asList(FilterType.values());\n+        }\n+    };\n \n     final FeedbackPanel searchFeedback;\n \n     final List<SearchCondWrapper> searchConditionList;\n \n     public UserSearchPanel(final String id) {\n-        this(id, null);\n+        this(id, null, true);\n     }\n \n-    public UserSearchPanel(final String id, final NodeCond searchCondition) {\n+    public UserSearchPanel(final String id, final NodeCond initCond) {\n+        this(id, initCond, true);\n+    }\n+\n+    public UserSearchPanel(final String id, final NodeCond initNodeCond, final boolean required) {\n         super(id);\n+        this.required = required;\n \n         setOutputMarkupId(true);\n \n-        final WebMarkupContainer searchFormContainer =\n-                new WebMarkupContainer(\"searchFormContainer\");\n+        final WebMarkupContainer searchFormContainer = new WebMarkupContainer(\"searchFormContainer\");\n         searchFormContainer.setOutputMarkupId(true);\n \n-        searchFeedback = new FeedbackPanel(\n-                \"searchFeedback\", new IFeedbackMessageFilter() {\n+        searchFeedback = new FeedbackPanel(\"searchFeedback\", new IFeedbackMessageFilter() {\n \n             private static final long serialVersionUID = 6895024863321391672L;\n \n@@ -220,8 +212,7 @@ public boolean accept(final FeedbackMessage message) {\n                 if (message.getReporter() != null) {\n                     // only accept messages coming from the children\n                     // of the search form container\n-                    result = searchFormContainer.contains(\n-                            message.getReporter(), true);\n+                    result = searchFormContainer.contains(message.getReporter(), true);\n                 } else {\n                     result = false;\n                 }\n@@ -232,61 +223,50 @@ public boolean accept(final FeedbackMessage message) {\n         searchFeedback.setOutputMarkupId(true);\n         add(searchFeedback);\n \n-        if (searchCondition == null) {\n+        if (initNodeCond == null) {\n             searchConditionList = new ArrayList<SearchCondWrapper>();\n             searchConditionList.add(new SearchCondWrapper());\n         } else {\n-            searchConditionList = getSearchCondWrappers(searchCondition);\n+            searchConditionList = getSearchCondWrappers(initNodeCond);\n         }\n-        searchFormContainer.add(new SearchView(\"searchView\",\n-                searchConditionList, searchFormContainer));\n+        searchFormContainer.add(new SearchView(\"searchView\", searchConditionList, searchFormContainer));\n \n-        AjaxButton addAndButton = new IndicatingAjaxButton(\"addAndButton\",\n-                new ResourceModel(\"addAndButton\")) {\n+        AjaxButton addAndButton = new IndicatingAjaxButton(\"addAndButton\", new ResourceModel(\"addAndButton\")) {\n \n             private static final long serialVersionUID = -4804368561204623354L;\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target,\n                     final Form<?> form) {\n \n-                SearchCondWrapper conditionWrapper =\n-                        new SearchCondWrapper();\n+                SearchCondWrapper conditionWrapper = new SearchCondWrapper();\n                 conditionWrapper.setOperationType(OperationType.AND);\n                 searchConditionList.add(conditionWrapper);\n                 target.add(searchFormContainer);\n             }\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form<?> form) {\n-\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n                 target.add(searchFormContainer);\n             }\n         };\n         addAndButton.setDefaultFormProcessing(false);\n         searchFormContainer.add(addAndButton);\n \n-        AjaxButton addOrButton = new IndicatingAjaxButton(\"addOrButton\",\n-                new ResourceModel(\"addOrButton\")) {\n+        AjaxButton addOrButton = new IndicatingAjaxButton(\"addOrButton\", new ResourceModel(\"addOrButton\")) {\n \n             private static final long serialVersionUID = -4804368561204623354L;\n \n             @Override\n-            protected void onSubmit(final AjaxRequestTarget target,\n-                    final Form<?> form) {\n-\n-                SearchCondWrapper conditionWrapper =\n-                        new SearchCondWrapper();\n+            protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                SearchCondWrapper conditionWrapper = new SearchCondWrapper();\n                 conditionWrapper.setOperationType(OperationType.OR);\n                 searchConditionList.add(conditionWrapper);\n                 target.add(searchFormContainer);\n             }\n \n             @Override\n-            protected void onError(final AjaxRequestTarget target,\n-                    final Form<?> form) {\n-\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n                 target.add(searchFormContainer);\n             }\n         };\n@@ -300,13 +280,10 @@ public FeedbackPanel getSearchFeedback() {\n         return searchFeedback;\n     }\n \n-    private List<SearchCondWrapper> getSearchCondWrappers(\n-            final NodeCond searchCond) {\n-\n+    private List<SearchCondWrapper> getSearchCondWrappers(final NodeCond searchCond) {\n         LOG.debug(\"Search condition: {}\", searchCond);\n \n-        List<SearchCondWrapper> wrappers =\n-                new ArrayList<SearchCondWrapper>();\n+        List<SearchCondWrapper> wrappers = new ArrayList<SearchCondWrapper>();\n \n         switch (searchCond.getType()) {\n             case LEAF:\n@@ -316,12 +293,9 @@ private List<SearchCondWrapper> getSearchCondWrappers(\n \n             case AND:\n             case OR:\n-                wrappers.add(getSearchCondWrapper(\n-                        searchCond.getLeftNodeCond()));\n-                SearchCondWrapper wrapper = getSearchCondWrapper(\n-                        searchCond.getRightNodeCond());\n-                wrapper.setOperationType(\n-                        searchCond.getType() == NodeCond.Type.AND\n+                wrappers.add(getSearchCondWrapper(searchCond.getLeftNodeCond()));\n+                SearchCondWrapper wrapper = getSearchCondWrapper(searchCond.getRightNodeCond());\n+                wrapper.setOperationType(searchCond.getType() == NodeCond.Type.AND\n                         ? OperationType.AND : OperationType.OR);\n                 wrappers.add(wrapper);\n                 break;\n@@ -334,28 +308,20 @@ private List<SearchCondWrapper> getSearchCondWrappers(\n         return wrappers;\n     }\n \n-    private SearchCondWrapper getSearchCondWrapper(\n-            final NodeCond searchCond) {\n-\n+    private SearchCondWrapper getSearchCondWrapper(final NodeCond searchCond) {\n         SearchCondWrapper wrapper = new SearchCondWrapper();\n \n         if (searchCond.getSyncopeUserCond() != null) {\n             wrapper.setFilterType(FilterType.ATTRIBUTE);\n-            wrapper.setFilterName(\n-                    searchCond.getSyncopeUserCond().getSchema());\n-            wrapper.setType(\n-                    searchCond.getSyncopeUserCond().getType());\n-            wrapper.setFilterValue(\n-                    searchCond.getSyncopeUserCond().getExpression());\n+            wrapper.setFilterName(searchCond.getSyncopeUserCond().getSchema());\n+            wrapper.setType(searchCond.getSyncopeUserCond().getType());\n+            wrapper.setFilterValue(searchCond.getSyncopeUserCond().getExpression());\n         }\n         if (searchCond.getAttributeCond() != null) {\n             wrapper.setFilterType(FilterType.ATTRIBUTE);\n-            wrapper.setFilterName(\n-                    searchCond.getAttributeCond().getSchema());\n-            wrapper.setType(\n-                    searchCond.getAttributeCond().getType());\n-            wrapper.setFilterValue(\n-                    searchCond.getAttributeCond().getExpression());\n+            wrapper.setFilterName(searchCond.getAttributeCond().getSchema());\n+            wrapper.setType(searchCond.getAttributeCond().getType());\n+            wrapper.setFilterValue(searchCond.getAttributeCond().getExpression());\n         }\n         if (searchCond.getMembershipCond() != null) {\n             wrapper.setFilterType(FilterType.MEMBERSHIP);\n@@ -366,12 +332,10 @@ private SearchCondWrapper getSearchCondWrapper(\n         }\n         if (searchCond.getResourceCond() != null) {\n             wrapper.setFilterType(FilterType.RESOURCE);\n-            wrapper.setFilterName(searchCond.getResourceCond().\n-                    getResourceName());\n+            wrapper.setFilterName(searchCond.getResourceCond().getResourceName());\n         }\n \n-        wrapper.setNotOperator(\n-                searchCond.getType() == NodeCond.Type.NOT_LEAF);\n+        wrapper.setNotOperator(searchCond.getType() == NodeCond.Type.NOT_LEAF);\n \n         return wrapper;\n     }\n@@ -380,16 +344,15 @@ public NodeCond buildSearchCond() {\n         return buildSearchCond(searchConditionList);\n     }\n \n-    private NodeCond buildSearchCond(\n-            final List<SearchCondWrapper> conditions) {\n-\n+    private NodeCond buildSearchCond(final List<SearchCondWrapper> conditions) {\n         // inverse processing: from right to left\n         // (OperationType is specified on the right)\n-        SearchCondWrapper searchConditionWrapper =\n-                conditions.get(conditions.size() - 1);\n+        SearchCondWrapper searchConditionWrapper = conditions.get(conditions.size() - 1);\n+        if (searchConditionWrapper == null || searchConditionWrapper.getFilterType() == null) {\n+            return null;\n+        }\n \n-        LOG.debug(\"Search conditions: \"\n-                + \"fname {}; ftype {}; fvalue {}; OP {}; type {}; isnot {}\",\n+        LOG.debug(\"Search conditions: fname {}; ftype {}; fvalue {}; OP {}; type {}; isnot {}\",\n                 new Object[]{\n                     searchConditionWrapper.getFilterName(),\n                     searchConditionWrapper.getFilterType(),\n@@ -409,10 +372,8 @@ private NodeCond buildSearchCond(\n                 if (dnames.getObject().contains(schema)) {\n                     attributeCond = new SyncopeUserCond();\n                     nodeCond = searchConditionWrapper.isNotOperator()\n-                            ? NodeCond.getNotLeafCond(\n-                            (SyncopeUserCond) attributeCond)\n-                            : NodeCond.getLeafCond(\n-                            (SyncopeUserCond) attributeCond);\n+                            ? NodeCond.getNotLeafCond((SyncopeUserCond) attributeCond)\n+                            : NodeCond.getLeafCond((SyncopeUserCond) attributeCond);\n                 } else {\n                     attributeCond = new AttributeCond();\n                     nodeCond = searchConditionWrapper.isNotOperator()\n@@ -422,14 +383,14 @@ private NodeCond buildSearchCond(\n \n                 attributeCond.setSchema(schema);\n                 attributeCond.setType(searchConditionWrapper.getType());\n-                attributeCond.setExpression(\n-                        searchConditionWrapper.getFilterValue());\n+                attributeCond.setExpression(searchConditionWrapper.getFilterValue());\n \n                 break;\n+\n             case MEMBERSHIP:\n                 final MembershipCond membershipCond = new MembershipCond();\n-                membershipCond.setRoleId(RoleTO.fromDisplayName(\n-                        searchConditionWrapper.getFilterName()));\n+                membershipCond.setRoleId(RoleTO.fromDisplayName(searchConditionWrapper.getFilterName()));\n+                membershipCond.setRoleName(searchConditionWrapper.getFilterName().split(\" \")[1]);\n \n                 if (searchConditionWrapper.isNotOperator()) {\n                     nodeCond = NodeCond.getNotLeafCond(membershipCond);\n@@ -438,10 +399,10 @@ private NodeCond buildSearchCond(\n                 }\n \n                 break;\n+\n             case RESOURCE:\n                 final ResourceCond resourceCond = new ResourceCond();\n-                resourceCond.setResourceName(\n-                        searchConditionWrapper.getFilterName());\n+                resourceCond.setResourceName(searchConditionWrapper.getFilterName());\n \n                 if (searchConditionWrapper.isNotOperator()) {\n                     nodeCond = NodeCond.getNotLeafCond(resourceCond);\n@@ -450,23 +411,20 @@ private NodeCond buildSearchCond(\n                 }\n \n                 break;\n+\n             default:\n             // nothing to do\n         }\n \n         LOG.debug(\"Processed condition {}\", nodeCond);\n \n         if (conditions.size() > 1) {\n-            List<SearchCondWrapper> subList =\n-                    conditions.subList(0, conditions.size() - 1);\n+            List<SearchCondWrapper> subList = conditions.subList(0, conditions.size() - 1);\n \n-            if (OperationType.OR.equals(\n-                    searchConditionWrapper.getOperationType())) {\n-                nodeCond = NodeCond.getOrCond(nodeCond,\n-                        buildSearchCond(subList));\n+            if (OperationType.OR.equals(searchConditionWrapper.getOperationType())) {\n+                nodeCond = NodeCond.getOrCond(nodeCond, buildSearchCond(subList));\n             } else {\n-                nodeCond = NodeCond.getAndCond(nodeCond,\n-                        buildSearchCond(subList));\n+                nodeCond = NodeCond.getAndCond(nodeCond, buildSearchCond(subList));\n             }\n         }\n \n@@ -479,159 +437,116 @@ private class SearchView extends ListView<SearchCondWrapper> {\n \n         final private WebMarkupContainer searchFormContainer;\n \n-        public SearchView(final String id,\n-                final List<? extends SearchCondWrapper> list,\n+        public SearchView(final String id, final List<? extends SearchCondWrapper> list,\n                 final WebMarkupContainer searchFormContainer) {\n \n             super(id, list);\n             this.searchFormContainer = searchFormContainer;\n         }\n \n         @Override\n-        protected void populateItem(\n-                final ListItem<SearchCondWrapper> item) {\n-\n+        protected void populateItem(final ListItem<SearchCondWrapper> item) {\n             final SearchCondWrapper searchCondition = item.getModelObject();\n \n             if (item.getIndex() == 0) {\n                 item.add(new Label(\"operationType\", \"\"));\n             } else {\n-                item.add(new Label(\"operationType\",\n-                        searchCondition.getOperationType().toString()));\n+                item.add(new Label(\"operationType\", searchCondition.getOperationType().toString()));\n             }\n \n-            final CheckBox notOperator = new CheckBox(\n-                    \"notOperator\",\n-                    new PropertyModel(searchCondition, \"notOperator\"));\n-\n+            final CheckBox notOperator = new CheckBox(\"notOperator\", new PropertyModel(searchCondition, \"notOperator\"));\n             notOperator.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-                private static final long serialVersionUID =\n-                        -1107858522700306810L;\n+                private static final long serialVersionUID = -1107858522700306810L;\n \n                 @Override\n-                protected void onUpdate(final AjaxRequestTarget art) {\n+                protected void onUpdate(final AjaxRequestTarget target) {\n                 }\n             });\n-\n             item.add(notOperator);\n \n-            final DropDownChoice<String> filterNameChooser =\n-                    new DropDownChoice<String>(\n-                    \"filterName\", new PropertyModel<String>(\n-                    searchCondition, \"filterName\"), (IModel) null);\n-\n-            filterNameChooser.setOutputMarkupId(true);\n-            filterNameChooser.setRequired(true);\n-            item.add(filterNameChooser);\n-\n-            filterNameChooser.add(\n-                    new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-\n-                        private static final long serialVersionUID =\n-                                -1107858522700306810L;\n+            final DropDownChoice<AttributeCond.Type> type = new DropDownChoice<AttributeCond.Type>(\n+                    \"type\", new PropertyModel<AttributeCond.Type>(searchCondition, \"type\"), attributeTypes);\n+            type.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-                        @Override\n-                        protected void onUpdate(final AjaxRequestTarget art) {\n-                        }\n-                    });\n+                private static final long serialVersionUID = -1107858522700306810L;\n \n-            final DropDownChoice<AttributeCond.Type> type =\n-                    new DropDownChoice<AttributeCond.Type>(\n-                    \"type\", new PropertyModel<AttributeCond.Type>(\n-                    searchCondition, \"type\"), attributeTypes);\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                }\n+            });\n+            item.add(type);\n \n-            type.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+            final DropDownChoice<String> filterNameChooser = new DropDownChoice<String>(\n+                    \"filterName\", new PropertyModel<String>(searchCondition, \"filterName\"), (IModel) null);\n+            filterNameChooser.setOutputMarkupId(true);\n+            filterNameChooser.setRequired(required);\n+            filterNameChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-                private static final long serialVersionUID =\n-                        -1107858522700306810L;\n+                private static final long serialVersionUID = -1107858522700306810L;\n \n                 @Override\n-                protected void onUpdate(final AjaxRequestTarget art) {\n+                protected void onUpdate(final AjaxRequestTarget target) {\n                 }\n             });\n+            item.add(filterNameChooser);\n \n-            item.add(type);\n-\n-            final TextField<String> filterValue =\n-                    new TextField<String>(\"filterValue\",\n+            final TextField<String> filterValue = new TextField<String>(\"filterValue\",\n                     new PropertyModel<String>(searchCondition, \"filterValue\"));\n-            item.add(filterValue);\n-\n             filterValue.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-                private static final long serialVersionUID =\n-                        -1107858522700306810L;\n+                private static final long serialVersionUID = -1107858522700306810L;\n \n                 @Override\n-                protected void onUpdate(final AjaxRequestTarget art) {\n+                protected void onUpdate(final AjaxRequestTarget target) {\n                 }\n             });\n+            item.add(filterValue);\n \n-            final DropDownChoice<FilterType> filterTypeChooser =\n-                    new DropDownChoice<FilterType>(\"filterType\",\n-                    new PropertyModel<FilterType>(searchCondition,\n-                    \"filterType\"), filterTypes);\n+            final DropDownChoice<FilterType> filterTypeChooser = new DropDownChoice<FilterType>(\"filterType\",\n+                    new PropertyModel<FilterType>(searchCondition, \"filterType\"), filterTypes);\n             filterTypeChooser.setOutputMarkupId(true);\n+            filterTypeChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-            filterTypeChooser.add(\n-                    new AjaxFormComponentUpdatingBehavior(\n-                    \"onchange\") {\n-\n-                        private static final long serialVersionUID =\n-                                -1107858522700306810L;\n-\n-                        @Override\n-                        protected void onUpdate(\n-                                final AjaxRequestTarget target) {\n-                            target.add(searchFormContainer);\n-                        }\n-                    });\n-\n-            filterTypeChooser.setRequired(true);\n+                private static final long serialVersionUID = -1107858522700306810L;\n \n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    target.add(searchFormContainer);\n+                }\n+            });\n+            filterTypeChooser.setRequired(required);\n             item.add(filterTypeChooser);\n \n-            AjaxButton dropButton = new IndicatingAjaxButton(\n-                    \"dropButton\", new ResourceModel(\"dropButton\")) {\n+            AjaxButton dropButton = new IndicatingAjaxButton(\"dropButton\", new ResourceModel(\"dropButton\")) {\n \n-                private static final long serialVersionUID =\n-                        -4804368561204623354L;\n+                private static final long serialVersionUID = -4804368561204623354L;\n \n                 @Override\n-                protected void onSubmit(final AjaxRequestTarget target,\n-                        final Form<?> form) {\n-\n-                    getList().remove(\n-                            Integer.valueOf(getParent().getId()).intValue());\n+                protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n+                    getList().remove(Integer.valueOf(getParent().getId()).intValue());\n                     target.add(searchFormContainer);\n                 }\n \n                 @Override\n-                protected void onError(final AjaxRequestTarget target,\n-                        final Form<?> form) {\n-\n+                protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n                     target.add(searchFormContainer);\n                 }\n             };\n-\n             dropButton.setDefaultFormProcessing(false);\n-\n             if (item.getIndex() == 0) {\n                 dropButton.setVisible(false);\n             }\n-\n             item.add(dropButton);\n \n-            try {\n+            if (searchCondition == null || searchCondition.getFilterType() == null) {\n+                filterNameChooser.setChoices(Collections.EMPTY_LIST);\n+            } else {\n                 switch (searchCondition.getFilterType()) {\n                     case ATTRIBUTE:\n-                        final List<String> names =\n-                                new ArrayList<String>(dnames.getObject());\n-\n-                        if (unames.getObject() != null\n-                                && !unames.getObject().isEmpty()) {\n+                        final List<String> names = new ArrayList<String>(dnames.getObject());\n \n+                        if (unames.getObject() != null && !unames.getObject().isEmpty()) {\n                             names.addAll(unames.getObject());\n                         }\n                         Collections.sort(names);\n@@ -646,8 +561,23 @@ protected void onError(final AjaxRequestTarget target,\n                         }\n \n                         break;\n+\n                     case MEMBERSHIP:\n-                        filterNameChooser.setChoices(ronames);\n+                        filterNameChooser.setChoices(roleNames);\n+                        filterNameChooser.setChoiceRenderer(new IChoiceRenderer<String>() {\n+\n+                            private static final long serialVersionUID = -4288397951948436434L;\n+\n+                            @Override\n+                            public Object getDisplayValue(String object) {\n+                                return object;\n+                            }\n+\n+                            @Override\n+                            public String getIdValue(String object, int index) {\n+                                return object;\n+                            }\n+                        });\n                         type.setEnabled(false);\n                         type.setRequired(false);\n                         type.setModelObject(null);\n@@ -656,8 +586,9 @@ protected void onError(final AjaxRequestTarget target,\n                         filterValue.setModelObject(\"\");\n \n                         break;\n+\n                     case RESOURCE:\n-                        filterNameChooser.setChoices(renames);\n+                        filterNameChooser.setChoices(resourceNames);\n                         type.setEnabled(false);\n                         type.setRequired(false);\n                         type.setModelObject(null);\n@@ -666,12 +597,10 @@ protected void onError(final AjaxRequestTarget target,\n                         filterValue.setModelObject(\"\");\n \n                         break;\n+\n                     default:\n                         filterNameChooser.setChoices(Collections.EMPTY_LIST);\n                 }\n-            } catch (NullPointerException npe) {\n-                // searchCondition null\n-                filterNameChooser.setChoices(Collections.EMPTY_LIST);\n             }\n         }\n     }"},{"sha":"651b813aa9d983dcff0ae7c3db14c48759da649f","filename":"console/src/main/java/org/syncope/console/pages/panels/VirtualAttributesPanel.java","status":"modified","additions":8,"deletions":15,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -46,6 +46,7 @@\n import org.syncope.console.wicket.markup.html.form.AjaxDecoratedCheckbox;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.syncope.console.wicket.markup.html.form.MultiValueSelectorPanel;\n+import org.syncope.types.AttributableType;\n \n public class VirtualAttributesPanel extends Panel {\n \n@@ -70,14 +71,11 @@ public <T extends AbstractAttributableTO> VirtualAttributesPanel(\n                     @Override\n                     protected List<String> load() {\n                         if (entityTO instanceof RoleTO) {\n-                            return schemaRestClient.getVirtualSchemaNames(\n-                                    \"role\");\n+                            return schemaRestClient.getVirtualSchemaNames(AttributableType.ROLE);\n                         } else if (entityTO instanceof UserTO) {\n-                            return schemaRestClient.getVirtualSchemaNames(\n-                                    \"user\");\n+                            return schemaRestClient.getVirtualSchemaNames(AttributableType.USER);\n                         } else {\n-                            return schemaRestClient.getVirtualSchemaNames(\n-                                    \"membership\");\n+                            return schemaRestClient.getVirtualSchemaNames(AttributableType.MEMBERSHIP);\n                         }\n                     }\n                 };\n@@ -197,16 +195,11 @@ protected void onUpdate(\n                 }\n \n                 if (templateMode) {\n-                    item.add(new AjaxTextFieldPanel(\n-                            \"values\", \"values\", new Model(), true));\n+                    item.add(new AjaxTextFieldPanel(\"values\", \"values\", new Model()));\n                 } else {\n-                    item.add(new MultiValueSelectorPanel(\n-                            \"values\",\n-                            new PropertyModel<List<String>>(\n-                            attributeTO, \"values\"),\n-                            String.class,\n-                            new AjaxTextFieldPanel(\n-                            \"panel\", \"values\", new Model(null), true)));\n+                    item.add(new MultiValueSelectorPanel(\"values\",\n+                            new PropertyModel<List<String>>(attributeTO, \"values\"),\n+                            new AjaxTextFieldPanel(\"panel\", \"values\", new Model(null))));\n                 }\n             }\n         };"},{"sha":"3a587485fd1199594adc2b0793c114ba1f223641","filename":"console/src/main/java/org/syncope/console/rest/ConnectorRestClient.java","status":"modified","additions":7,"deletions":17,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -98,9 +98,7 @@ public List<ConnBundleTO> getAllBundles() {\n \n         try {\n             bundles = Arrays.asList(restTemplate.getForObject(\n-                    baseURL + \"connector/bundle/list?lang=\"\n-                    + SyncopeSession.get().getLocale(),\n-                    ConnBundleTO[].class));\n+                    baseURL + \"connector/bundle/list?lang=\" + SyncopeSession.get().getLocale(), ConnBundleTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While getting connector bundles\", e);\n         }\n@@ -114,24 +112,20 @@ public List<ConnBundleTO> getAllBundles() {\n      * @param connectorId the connector id\n      * @return List of ConnConfProperty, or an empty list in case none found\n      */\n-    public List<ConnConfProperty> getConnectorProperties(\n-            final Long connectorId) {\n+    public List<ConnConfProperty> getConnectorProperties(final Long connectorId) {\n         List<ConnConfProperty> properties = null;\n \n         try {\n             properties = Arrays.asList(restTemplate.getForObject(baseURL\n-                    + \"connector/{connectorId}/configurationProperty/list\",\n-                    ConnConfProperty[].class, connectorId));\n+                    + \"connector/{connectorId}/configurationProperty/list\", ConnConfProperty[].class, connectorId));\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While getting connector configuration properties\", e);\n         }\n \n         return properties;\n     }\n \n-    private Set<ConnConfProperty> filterProperties(\n-            final Set<ConnConfProperty> properties) {\n-\n+    private Set<ConnConfProperty> filterProperties(final Set<ConnConfProperty> properties) {\n         Set<ConnConfProperty> newProperties = new HashSet<ConnConfProperty>();\n \n         for (ConnConfProperty property : properties) {\n@@ -163,12 +157,10 @@ public Boolean check(final ConnInstanceTO connectorTO) {\n         ConnInstanceTO connector = new ConnInstanceTO();\n         BeanUtils.copyProperties(connectorTO, connector);\n \n-        connector.setConfiguration(\n-                filterProperties(connector.getConfiguration()));\n+        connector.setConfiguration(filterProperties(connector.getConfiguration()));\n \n         try {\n-            return restTemplate.postForObject(\n-                    baseURL + \"connector/check.json\", connector, Boolean.class);\n+            return restTemplate.postForObject(baseURL + \"connector/check.json\", connector, Boolean.class);\n \n         } catch (Exception e) {\n             LOG.error(\"Connector not found {}\", connector, e);\n@@ -181,12 +173,10 @@ public List<String> getSchemaNames(final ConnInstanceTO connectorTO) {\n \n         try {\n             schemaNames = Arrays.asList(restTemplate.postForObject(\n-                    baseURL + \"connector/schema/list\",\n-                    connectorTO, String[].class));\n+                    baseURL + \"connector/schema/list\", connectorTO, String[].class));\n \n             // re-order schema names list\n             Collections.sort(schemaNames);\n-\n         } catch (Exception e) {\n             LOG.error(\"While getting resource schema names\", e);\n         }"},{"sha":"408026473b83b0ef47f885510cb784ba7eb05b54","filename":"console/src/main/java/org/syncope/console/rest/ReportRestClient.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FReportRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FReportRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FReportRestClient.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -20,7 +20,6 @@\n \n import java.util.Arrays;\n import java.util.List;\n-import java.util.Set;\n import org.springframework.stereotype.Component;\n import org.syncope.client.to.ReportExecTO;\n import org.syncope.client.to.ReportTO;\n@@ -30,12 +29,12 @@\n public class ReportRestClient extends AbstractBaseRestClient\n         implements ExecutionRestClient {\n \n-    public Set<String> getReportletClasses() {\n-        Set<String> reportletClasses = null;\n+    public List<String> getReportletConfClasses() {\n+        List<String> reportletClasses = null;\n \n         try {\n-            reportletClasses = restTemplate.getForObject(\n-                    baseURL + \"report/reportletClasses.json\", Set.class);\n+            reportletClasses = Arrays.asList(restTemplate.getForObject(\n+                    baseURL + \"report/reportletConfClasses.json\", String[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While getting available reportlet classes\", e);\n         }"},{"sha":"64700a9245841f67edb078fbadb0980205d4ee0c","filename":"console/src/main/java/org/syncope/console/rest/SchemaRestClient.java","status":"modified","additions":82,"deletions":105,"changes":187,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -26,6 +26,7 @@\n import org.syncope.client.to.SchemaTO;\n import org.syncope.client.to.VirtualSchemaTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n+import org.syncope.types.AttributableType;\n \n /**\n  * Console client for invoking rest schema services.\n@@ -35,34 +36,33 @@ public class SchemaRestClient extends AbstractBaseRestClient {\n \n     /**\n      * Get schemas.\n+     *\n      * @return List of schemas.\n      */\n-    public List<SchemaTO> getSchemas(final String kind) {\n-        List<SchemaTO> userSchemas = null;\n+    public List<SchemaTO> getSchemas(final AttributableType type) {\n+        List<SchemaTO> schemas = null;\n \n         try {\n-            userSchemas = Arrays.asList(\n-                    restTemplate.getForObject(\n-                    baseURL + \"schema/\" + kind + \"/list.json\",\n-                    SchemaTO[].class));\n+            schemas = Arrays.asList(restTemplate.getForObject(\n+                    baseURL + \"schema/\" + type.name().toLowerCase() + \"/list.json\", SchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While getting all user schemas\", e);\n+            LOG.error(\"While getting all schemas\", e);\n         }\n \n-        return userSchemas;\n+        return schemas;\n     }\n \n     /**\n      * Get schema names.\n+     *\n      * @return List of schema names.\n      */\n-    public List<String> getSchemaNames(final String kind) {\n+    public List<String> getSchemaNames(final AttributableType type) {\n         final List<String> schemaNames = new ArrayList<String>();\n \n         try {\n-            final List<SchemaTO> userSchemas = Arrays.asList(\n-                    restTemplate.getForObject(baseURL\n-                    + \"schema/\" + kind + \"/list.json\", SchemaTO[].class));\n+            final List<SchemaTO> userSchemas = Arrays.asList(restTemplate.getForObject(\n+                    baseURL + \"schema/\" + type.name().toLowerCase() + \"/list.json\", SchemaTO[].class));\n \n             for (SchemaTO schemaTO : userSchemas) {\n                 schemaNames.add(schemaTO.getName());\n@@ -76,17 +76,16 @@ public List<String> getSchemaNames(final String kind) {\n \n     /**\n      * Get derived schemas.\n+     *\n      * @return List of derived schemas.\n      */\n-    public List<DerivedSchemaTO> getDerivedSchemas(final String kind) {\n+    public List<DerivedSchemaTO> getDerivedSchemas(final AttributableType type) {\n \n         List<DerivedSchemaTO> userDerivedSchemas = null;\n \n         try {\n-            userDerivedSchemas = Arrays.asList(\n-                    restTemplate.getForObject(\n-                    baseURL + \"derivedSchema/\" + kind + \"/list.json\",\n-                    DerivedSchemaTO[].class));\n+            userDerivedSchemas = Arrays.asList(restTemplate.getForObject(\n+                    baseURL + \"derivedSchema/\" + type.name().toLowerCase() + \"/list.json\", DerivedSchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While getting all user derived schemas\", e);\n         }\n@@ -95,68 +94,62 @@ public List<DerivedSchemaTO> getDerivedSchemas(final String kind) {\n     }\n \n     /**\n-     * Get derived schemas.\n-     * @return List of derived schemas.\n+     * Get derived schema names.\n+     *\n+     * @return List of derived schema names.\n      */\n-    public List<VirtualSchemaTO> getVirtualSchemas(final String kind) {\n+    public List<String> getDerivedSchemaNames(final AttributableType type) {\n \n-        List<VirtualSchemaTO> userVirtualSchemas = null;\n+        final List<String> userDerivedSchemasNames = new ArrayList<String>();\n \n         try {\n-            userVirtualSchemas = Arrays.asList(\n-                    restTemplate.getForObject(\n-                    baseURL + \"virtualSchema/\" + kind + \"/list.json\",\n-                    VirtualSchemaTO[].class));\n+            final List<DerivedSchemaTO> userDerivedSchemas = Arrays.asList(restTemplate.getForObject(\n+                    baseURL + \"derivedSchema/\" + type.name().toLowerCase() + \"/list.json\", DerivedSchemaTO[].class));\n+\n+            for (DerivedSchemaTO schemaTO : userDerivedSchemas) {\n+                userDerivedSchemasNames.add(schemaTO.getName());\n+            }\n         } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While getting all user derived schemas\", e);\n+            LOG.error(\"While getting all user derived schema names\", e);\n         }\n \n-        return userVirtualSchemas;\n+        return userDerivedSchemasNames;\n     }\n \n     /**\n-     * Get derived schema names.\n-     * @return List of derived schema names.\n+     * Get derived schemas.\n+     *\n+     * @return List of derived schemas.\n      */\n-    public List<String> getDerivedSchemaNames(final String kind) {\n+    public List<VirtualSchemaTO> getVirtualSchemas(final AttributableType type) {\n \n-        final List<String> userDerivedSchemasNames = new ArrayList<String>();\n+        List<VirtualSchemaTO> userVirtualSchemas = null;\n \n         try {\n-            final List<DerivedSchemaTO> userDerivedSchemas =\n-                    Arrays.asList(restTemplate.getForObject(baseURL\n-                    + \"derivedSchema/\" + kind + \"/list.json\",\n-                    DerivedSchemaTO[].class));\n-\n-            for (DerivedSchemaTO schemaTO : userDerivedSchemas) {\n-                userDerivedSchemasNames.add(schemaTO.getName());\n-            }\n-\n+            userVirtualSchemas = Arrays.asList(restTemplate.getForObject(\n+                    baseURL + \"virtualSchema/\" + type.name().toLowerCase() + \"/list.json\", VirtualSchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While getting all user derived schema names\", e);\n+            LOG.error(\"While getting all user derived schemas\", e);\n         }\n \n-        return userDerivedSchemasNames;\n+        return userVirtualSchemas;\n     }\n \n     /**\n      * Get virtual schema names.\n+     *\n      * @return List of virtual schema names.\n      */\n-    public List<String> getVirtualSchemaNames(final String kind) {\n-\n+    public List<String> getVirtualSchemaNames(final AttributableType type) {\n         final List<String> userVirtualSchemasNames = new ArrayList<String>();\n \n         try {\n-            final List<VirtualSchemaTO> userVirtualSchemas =\n-                    Arrays.asList(restTemplate.getForObject(baseURL\n-                    + \"virtualSchema/\" + kind + \"/list.json\",\n-                    VirtualSchemaTO[].class));\n+            final List<VirtualSchemaTO> userVirtualSchemas = Arrays.asList(restTemplate.getForObject(\n+                    baseURL + \"virtualSchema/\" + type.name().toLowerCase() + \"/list.json\", VirtualSchemaTO[].class));\n \n             for (VirtualSchemaTO schemaTO : userVirtualSchemas) {\n                 userVirtualSchemasNames.add(schemaTO.getName());\n             }\n-\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While getting all user derived schema names\", e);\n         }\n@@ -166,26 +159,26 @@ public List<String> getVirtualSchemaNames(final String kind) {\n \n     /**\n      * Create new user schema.\n+     *\n      * @param schemaTO\n      */\n-    public void createSchema(final String kind, final SchemaTO schemaTO) {\n-        restTemplate.postForObject(baseURL\n-                + \"schema/\" + kind + \"/create\", schemaTO, SchemaTO.class);\n+    public void createSchema(final AttributableType type, final SchemaTO schemaTO) {\n+        restTemplate.postForObject(\n+                baseURL + \"schema/\" + type.name().toLowerCase() + \"/create\", schemaTO, SchemaTO.class);\n     }\n \n     /**\n      * Load an already existent user schema by its name.\n+     *\n      * @param name (e.g.:surname)\n      * @return schemaTO\n      */\n-    public SchemaTO readSchema(final String kind, final String name) {\n+    public SchemaTO readSchema(final AttributableType type, final String name) {\n         SchemaTO schema = null;\n \n         try {\n             schema = restTemplate.getForObject(\n-                    baseURL\n-                    + \"schema/\" + kind + \"/read/\" + name + \".json\",\n-                    SchemaTO.class);\n+                    baseURL + \"schema/\" + type.name().toLowerCase() + \"/read/\" + name + \".json\", SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While reading a user schema\", e);\n         }\n@@ -194,60 +187,55 @@ public SchemaTO readSchema(final String kind, final String name) {\n \n     /**\n      * Update an already existent user schema.\n+     *\n      * @param schemaTO updated\n      */\n-    public void updateSchema(String kind, SchemaTO schemaTO) {\n-        restTemplate.postForObject(baseURL\n-                + \"schema/\" + kind + \"/update\", schemaTO, SchemaTO.class);\n+    public void updateSchema(final AttributableType type, SchemaTO schemaTO) {\n+        restTemplate.postForObject(\n+                baseURL + \"schema/\" + type.name().toLowerCase() + \"/update\", schemaTO, SchemaTO.class);\n     }\n \n     /**\n      * Delete an already existent user schema by its name.\n+     *\n      * @param name (e.g.:surname)\n      * @return schemaTO\n      */\n-    public void deleteSchema(String kind, String name) {\n-        restTemplate.delete(baseURL\n-                + \"schema/\" + kind + \"/delete/\" + name + \".json\");\n+    public void deleteSchema(final AttributableType type, String name) {\n+        restTemplate.delete(baseURL + \"schema/\" + type.name().toLowerCase() + \"/delete/\" + name + \".json\");\n     }\n \n     /**\n      * Create new derived user schema.\n+     *\n      * @param schemaTO\n      */\n-    public void createDerivedSchema(final String kind,\n-            final DerivedSchemaTO schemaTO) {\n-\n-        restTemplate.postForObject(baseURL\n-                + \"derivedSchema/\" + kind + \"/create\", schemaTO,\n-                DerivedSchemaTO.class);\n+    public void createDerivedSchema(final AttributableType type, final DerivedSchemaTO schemaTO) {\n+        restTemplate.postForObject(\n+                baseURL + \"derivedSchema/\" + type.name().toLowerCase() + \"/create\", schemaTO, DerivedSchemaTO.class);\n     }\n \n     /**\n      * Create new derived user schema.\n+     *\n      * @param schemaTO\n      */\n-    public void createVirtualSchema(final String kind,\n-            final VirtualSchemaTO schemaTO) {\n-\n-        restTemplate.postForObject(baseURL\n-                + \"virtualSchema/\" + kind + \"/create\", schemaTO,\n-                VirtualSchemaTO.class);\n+    public void createVirtualSchema(final AttributableType type, final VirtualSchemaTO schemaTO) {\n+        restTemplate.postForObject(\n+                baseURL + \"virtualSchema/\" + type.name().toLowerCase() + \"/create\", schemaTO, VirtualSchemaTO.class);\n     }\n \n     /**\n      * Load an already existent user derived schema by its name.\n+     *\n      * @param name (e.g.:surname)\n      * @return DerivedSchemaTO\n      */\n-    public DerivedSchemaTO readDerivedSchema(final String kind,\n-            final String name) {\n-\n+    public DerivedSchemaTO readDerivedSchema(final AttributableType type, final String name) {\n         DerivedSchemaTO derivedSchemaTO = null;\n         try {\n             derivedSchemaTO = restTemplate.getForObject(\n-                    baseURL\n-                    + \"derivedSchema/\" + kind + \"/read/\" + name + \".json\",\n+                    baseURL + \"derivedSchema/\" + type.name().toLowerCase() + \"/read/\" + name + \".json\",\n                     DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While reading a derived user schema\", e);\n@@ -257,50 +245,40 @@ public DerivedSchemaTO readDerivedSchema(final String kind,\n \n     /**\n      * Update an already existent user derived schema.\n+     *\n      * @param schemaTO updated\n      */\n-    public void updateDerivedSchema(final String kind,\n-            final DerivedSchemaTO schemaTO) {\n-\n-        restTemplate.postForObject(baseURL\n-                + \"derivedSchema/\" + kind + \"/update\", schemaTO,\n-                DerivedSchemaTO.class);\n+    public void updateDerivedSchema(final AttributableType type, final DerivedSchemaTO schemaTO) {\n+        restTemplate.postForObject(\n+                baseURL + \"derivedSchema/\" + type.name().toLowerCase() + \"/update\", schemaTO, DerivedSchemaTO.class);\n     }\n \n     /**\n      * Update an already existent user derived schema.\n+     *\n      * @param schemaTO updated\n      */\n-    public void updateVirtualSchema(final String kind,\n-            final VirtualSchemaTO schemaTO) {\n-\n+    public void updateVirtualSchema(final AttributableType type, final VirtualSchemaTO schemaTO) {\n         restTemplate.postForObject(baseURL\n-                + \"virtualSchema/\" + kind + \"/update\", schemaTO,\n-                VirtualSchemaTO.class);\n+                + \"virtualSchema/\" + type.name().toLowerCase() + \"/update\", schemaTO, VirtualSchemaTO.class);\n     }\n \n     /**\n      * Delete an already existent user derived schema by its name.\n+     *\n      * @param name (e.g.:surname)\n      */\n-    public void deleteDerivedSchema(String kind, String name) {\n-        try {\n-            restTemplate.delete(baseURL\n-                    + \"derivedSchema/\" + kind + \"/delete/\" + name + \".json\");\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            LOG.error(\"While deleting a derived user schema\", e);\n-        }\n+    public void deleteDerivedSchema(final AttributableType type, String name) {\n+        restTemplate.delete(baseURL + \"derivedSchema/\" + type.name().toLowerCase() + \"/delete/\" + name + \".json\");\n     }\n \n     /**\n-     * Delete an already existent user derived schema by its name.\n+     * Delete an already existent user virtual schema by its name.\n+     *\n      * @param name (e.g.:surname)\n      */\n-    public void deleteVirtualSchema(final String kind,\n-            final String name) {\n-\n-        restTemplate.delete(baseURL\n-                + \"virtualSchema/\" + kind + \"/delete/\" + name + \".json\");\n+    public void deleteVirtualSchema(final AttributableType type, final String name) {\n+        restTemplate.delete(baseURL + \"virtualSchema/\" + type.name().toLowerCase() + \"/delete/\" + name + \".json\");\n     }\n \n     /**\n@@ -311,8 +289,7 @@ public List<String> getAllValidatorClasses() {\n \n         try {\n             validators = Arrays.asList(restTemplate.getForObject(\n-                    baseURL + \"configuration/validators.json\",\n-                    String[].class));\n+                    baseURL + \"configuration/validators.json\", String[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While getting all validators\", e);\n         }"},{"sha":"6537fd6bab000824a9a28bec6c9ad4fb46b1fa71","filename":"console/src/main/java/org/syncope/console/rest/TaskRestClient.java","status":"modified","additions":21,"deletions":46,"changes":67,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -43,24 +43,22 @@ public class TaskRestClient extends AbstractBaseRestClient\n      *\n      * @return list of classes.\n      */\n-    public Set<String> getJobClasses() {\n-        Set<String> jobClasses = null;\n+    public List<String> getJobClasses() {\n+        List<String> jobClasses = null;\n \n         try {\n-            jobClasses = restTemplate.getForObject(\n-                    baseURL + \"task/jobClasses.json\", Set.class);\n+            jobClasses = Arrays.asList(restTemplate.getForObject(baseURL + \"task/jobClasses.json\", String[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While getting all job classes\", e);\n         }\n         return jobClasses;\n     }\n \n-    public Set<String> getJobActionsClasses() {\n-        Set<String> actions = null;\n+    public List<String> getJobActionsClasses() {\n+        List<String> actions = null;\n \n         try {\n-            actions = restTemplate.getForObject(\n-                    baseURL + \"task/jobActionsClasses.json\", Set.class);\n+            actions = Arrays.asList(restTemplate.getForObject(baseURL + \"task/jobActionsClasses.json\", String[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While getting all job actions classes\", e);\n         }\n@@ -74,8 +72,7 @@ public Set<String> getJobActionsClasses() {\n      * @return number of stored tasks.\n      */\n     public Integer count(final String kind) {\n-        return restTemplate.getForObject(baseURL + \"task/{kind}/count.json\",\n-                Integer.class, kind);\n+        return restTemplate.getForObject(baseURL + \"task/{kind}/count.json\", Integer.class, kind);\n     }\n \n     /**\n@@ -85,9 +82,7 @@ public Integer count(final String kind) {\n      * @param size per page.\n      * @return paginated list.\n      */\n-    public <T extends TaskTO> List<T> listTasks(\n-            final Class<T> reference, final int page, final int size) {\n-\n+    public <T extends TaskTO> List<T> listTasks(final Class<T> reference, final int page, final int size) {\n         List<T> result = Collections.EMPTY_LIST;\n \n         if (PropagationTaskTO.class == reference) {\n@@ -112,28 +107,18 @@ public <T extends TaskTO> List<T> listTasks(\n     }\n \n     public PropagationTaskTO readPropagationTask(final Long taskId) {\n-        return restTemplate.getForObject(\n-                baseURL + \"task/read/{taskId}\",\n-                PropagationTaskTO.class, taskId);\n+        return restTemplate.getForObject(baseURL + \"task/read/{taskId}\", PropagationTaskTO.class, taskId);\n     }\n \n     public NotificationTaskTO readNotificationTask(final Long taskId) {\n-        return restTemplate.getForObject(\n-                baseURL + \"task/read/{taskId}\",\n-                NotificationTaskTO.class, taskId);\n+        return restTemplate.getForObject(baseURL + \"task/read/{taskId}\", NotificationTaskTO.class, taskId);\n     }\n \n-    public <T extends SchedTaskTO> T readSchedTask(\n-            final Class<T> reference, final Long taskId) {\n-\n+    public <T extends SchedTaskTO> T readSchedTask(final Class<T> reference, final Long taskId) {\n         if (SyncTaskTO.class.getName().equals(reference.getName())) {\n-            return (T) restTemplate.getForObject(\n-                    baseURL + \"task/read/{taskId}\",\n-                    SyncTaskTO.class, taskId);\n+            return (T) restTemplate.getForObject(baseURL + \"task/read/{taskId}\", SyncTaskTO.class, taskId);\n         } else {\n-            return (T) restTemplate.getForObject(\n-                    baseURL + \"task/read/{taskId}\",\n-                    SchedTaskTO.class, taskId);\n+            return (T) restTemplate.getForObject(baseURL + \"task/read/{taskId}\", SchedTaskTO.class, taskId);\n         }\n     }\n \n@@ -144,10 +129,7 @@ public <T extends SchedTaskTO> T readSchedTask(\n      */\n     @Override\n     public List<TaskExecTO> listExecutions() {\n-        return Arrays.asList(\n-                restTemplate.getForObject(\n-                baseURL + \"task/execution/list\",\n-                TaskExecTO[].class));\n+        return Arrays.asList(restTemplate.getForObject(baseURL + \"task/execution/list\", TaskExecTO[].class));\n     }\n \n     /**\n@@ -156,8 +138,7 @@ public List<TaskExecTO> listExecutions() {\n      * @param taskId task to delete\n      */\n     public void delete(final Long taskId) {\n-        restTemplate.delete(\n-                baseURL + \"task/delete/{taskId}\", taskId);\n+        restTemplate.delete(baseURL + \"task/delete/{taskId}\", taskId);\n     }\n \n     @Override\n@@ -172,8 +153,7 @@ public void startExecution(final Long taskId) {\n      */\n     public void startExecution(final Long taskId, boolean dryRun) {\n         restTemplate.postForObject(\n-                baseURL + \"task/execute/{taskId}?dryRun={dryRun}\",\n-                null, TaskExecTO.class, taskId, dryRun);\n+                baseURL + \"task/execute/{taskId}?dryRun={dryRun}\", null, TaskExecTO.class, taskId, dryRun);\n     }\n \n     /**\n@@ -183,27 +163,22 @@ public void startExecution(final Long taskId, boolean dryRun) {\n      */\n     @Override\n     public void deleteExecution(final Long taskExecId) {\n-        restTemplate.delete(baseURL\n-                + \"task/execution/delete/{execId}\", taskExecId);\n+        restTemplate.delete(baseURL + \"task/execution/delete/{execId}\", taskExecId);\n     }\n \n     public SyncTaskTO createSyncTask(final SyncTaskTO taskTO) {\n-        return restTemplate.postForObject(baseURL\n-                + \"task/create/sync\", taskTO, SyncTaskTO.class);\n+        return restTemplate.postForObject(baseURL + \"task/create/sync\", taskTO, SyncTaskTO.class);\n     }\n \n     public SchedTaskTO createSchedTask(final SchedTaskTO taskTO) {\n-        return restTemplate.postForObject(baseURL\n-                + \"task/create/sched\", taskTO, SchedTaskTO.class);\n+        return restTemplate.postForObject(baseURL + \"task/create/sched\", taskTO, SchedTaskTO.class);\n     }\n \n     public SchedTaskTO updateSchedTask(final SchedTaskTO taskTO) {\n-        return restTemplate.postForObject(baseURL\n-                + \"task/update/sched\", taskTO, SchedTaskTO.class);\n+        return restTemplate.postForObject(baseURL + \"task/update/sched\", taskTO, SchedTaskTO.class);\n     }\n \n     public SyncTaskTO updateSyncTask(final SyncTaskTO taskTO) {\n-        return restTemplate.postForObject(baseURL\n-                + \"task/update/sync\", taskTO, SyncTaskTO.class);\n+        return restTemplate.postForObject(baseURL + \"task/update/sync\", taskTO, SyncTaskTO.class);\n     }\n }"},{"sha":"39e178e7cb26c25e14e21c18e6de7a3129d473d4","filename":"console/src/main/java/org/syncope/console/wicket/ajax/markup/html/IndicatingDeleteOnConfirmAjaxLink.java","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FIndicatingDeleteOnConfirmAjaxLink.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FIndicatingDeleteOnConfirmAjaxLink.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fajax%2Fmarkup%2Fhtml%2FIndicatingDeleteOnConfirmAjaxLink.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -23,12 +23,11 @@\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxLink;\n import org.apache.wicket.model.IModel;\n \n-public abstract class IndicatingDeleteOnConfirmAjaxLink<T>\n-        extends IndicatingAjaxLink<T> {\n+public abstract class IndicatingDeleteOnConfirmAjaxLink<T> extends IndicatingAjaxLink<T> {\n \n-    public IndicatingDeleteOnConfirmAjaxLink(final String id,\n-            final IModel<T> model) {\n+    private static final long serialVersionUID = 2228670850922265663L;\n \n+    public IndicatingDeleteOnConfirmAjaxLink(final String id, final IModel<T> model) {\n         super(id, model);\n     }\n \n@@ -38,13 +37,12 @@ public IndicatingDeleteOnConfirmAjaxLink(final String id) {\n \n     @Override\n     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-        return new AjaxPreprocessingCallDecorator(\n-                super.getAjaxCallDecorator()) {\n+        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n \n-            @Override\n-            public CharSequence preDecorateScript(\n-                    final CharSequence script) {\n+            private static final long serialVersionUID = -7927968187160354605L;\n \n+            @Override\n+            public CharSequence preDecorateScript(final CharSequence script) {\n                 return \"if (confirm('\"\n                         + getString(\"confirmDelete\") + \"'))\"\n                         + \"{\" + script + \"}\";"},{"sha":"729d499b21e75d31fe04e14f06046fe1ef3b99d9","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxCheckBoxPanel.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxCheckBoxPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -34,15 +34,14 @@ public class AjaxCheckBoxPanel extends FieldPanel<Boolean> {\n     public AjaxCheckBoxPanel(\n             final String id,\n             final String name,\n-            final IModel<Boolean> model,\n-            final boolean active) {\n+            final IModel<Boolean> model) {\n \n-        super(id, name, model, active);\n+        super(id, name, model);\n \n         field = new CheckBox(\"checkboxField\", model);\n         add(field.setLabel(new Model(name)).setOutputMarkupId(true));\n \n-        if (active) {\n+        if (!isReadOnly()) {\n             field.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n                 private static final long serialVersionUID ="},{"sha":"255f2c962ce2d5f29677cdd4c5f60ac945a6fa58","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxDecoratedCheckbox.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDecoratedCheckbox.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDecoratedCheckbox.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDecoratedCheckbox.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -41,6 +41,8 @@ public AjaxDecoratedCheckbox(final String id, final IModel<Boolean> model) {\n \n         add(new AjaxEventBehavior(\"onclick\") {\n \n+            private static final long serialVersionUID = -295188647830294610L;\n+\n             @Override\n             protected void onEvent(final AjaxRequestTarget target) {\n                 onUpdate(target);\n@@ -59,6 +61,7 @@ protected IAjaxCallDecorator getAjaxCallDecorator() {\n      *\n      * @return ajax call decorator\n      */\n+    @Override\n     protected IAjaxCallDecorator getAjaxCallDecorator() {\n         return null;\n     }"},{"sha":"3c3ef682b80deb39a10f9f0271d0c6b4878ca518","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxDropDownChoicePanel.java","status":"modified","additions":9,"deletions":29,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxDropDownChoicePanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -28,39 +28,24 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n \n-public class AjaxDropDownChoicePanel<T>\n-        extends FieldPanel implements Cloneable {\n+public class AjaxDropDownChoicePanel<T> extends FieldPanel implements Cloneable {\n \n     private static final long serialVersionUID = -4716376580659196095L;\n \n     public AjaxDropDownChoicePanel(\n             final String id,\n             final String name,\n-            final IModel<T> model,\n-            final boolean active) {\n+            final IModel<T> model) {\n \n-        this(id, name, model, active, true);\n-    }\n-\n-    public AjaxDropDownChoicePanel(\n-            final String id,\n-            final String name,\n-            final IModel<T> model,\n-            final boolean active,\n-            final boolean nullValid) {\n-\n-        super(id, name, model, active);\n+        super(id, name, model);\n \n-        field = new DropDownChoice(\"dropDownChoiceField\", model,\n-                Collections.EMPTY_LIST, new ChoiceRenderer());\n-        ((DropDownChoice) field).setNullValid(nullValid);\n+        field = new DropDownChoice(\"dropDownChoiceField\", model, Collections.EMPTY_LIST, new ChoiceRenderer());\n         add(field.setLabel(new Model(name)).setOutputMarkupId(true));\n \n-        if (active) {\n+        if (!isReadOnly()) {\n             field.add(new AjaxFormComponentUpdatingBehavior(\"onblur\") {\n \n-                private static final long serialVersionUID =\n-                        -1107858522700306810L;\n+                private static final long serialVersionUID = -1107858522700306810L;\n \n                 @Override\n                 protected void onUpdate(final AjaxRequestTarget target) {\n@@ -70,9 +55,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         }\n     }\n \n-    public AjaxDropDownChoicePanel<T> setChoiceRenderer(\n-            final IChoiceRenderer renderer) {\n-\n+    public AjaxDropDownChoicePanel<T> setChoiceRenderer(final IChoiceRenderer renderer) {\n         ((DropDownChoice) field).setChoiceRenderer(renderer);\n         return this;\n     }\n@@ -82,17 +65,14 @@ public AjaxDropDownChoicePanel<T> setChoices(final List<T> choices) {\n         return this;\n     }\n \n-    public AjaxDropDownChoicePanel<T> setChoices(\n-            final IModel<? extends List<? extends T>> choices) {\n-\n+    public AjaxDropDownChoicePanel<T> setChoices(final IModel<? extends List<? extends T>> choices) {\n         ((DropDownChoice) field).setChoices(choices);\n         return this;\n     }\n \n     @Override\n     public FieldPanel clone() {\n-        AjaxDropDownChoicePanel<T> panel =\n-                (AjaxDropDownChoicePanel<T>) super.clone();\n+        AjaxDropDownChoicePanel<T> panel = (AjaxDropDownChoicePanel<T>) super.clone();\n \n         setChoiceRenderer(((DropDownChoice) field).getChoiceRenderer());\n         setChoices(((DropDownChoice) field).getChoices());"},{"sha":"4ac1c9020785284a1fb0ca73359a729d87678013","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxNumberFieldPanel.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxNumberFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxNumberFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxNumberFieldPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -32,16 +32,15 @@ public AjaxNumberFieldPanel(\n             final String id,\n             final String name,\n             final IModel<Number> model,\n-            final Class reference,\n-            final boolean active) {\n+            final Class reference) {\n \n-        super(id, name, model, active);\n+        super(id, name, model);\n \n         field = new TextField<Number>(\"numberField\", model, reference);\n \n         add(field.setLabel(new Model(name)).setOutputMarkupId(true));\n \n-        if (active) {\n+        if (!isReadOnly()) {\n             field.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n                 private static final long serialVersionUID ="},{"sha":"c5e39a8272e333a02b16ece2719a700052cad095","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxPalettePanel.java","status":"modified","additions":16,"deletions":14,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPalettePanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -21,7 +21,6 @@\n import java.io.Serializable;\n import java.util.List;\n import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n-import org.apache.wicket.markup.html.form.ChoiceRenderer;\n import org.apache.wicket.markup.html.form.IChoiceRenderer;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.util.ListModel;\n@@ -38,42 +37,45 @@ public AjaxPalettePanel(\n             final IModel<List<T>> model,\n             final ListModel<T> choices) {\n \n-        super(id, model);\n+        this(id, model, choices, false);\n+    }\n \n-        this.palette = createPalette(\n-                id, model, choices, new SelectChoiceRenderer());\n-        add(palette.setOutputMarkupId(true));\n-        setOutputMarkupId(true);\n+    public AjaxPalettePanel(\n+            final String id,\n+            final IModel<List<T>> model,\n+            final ListModel<T> choices,\n+            final boolean allowOrder) {\n+\n+        this(id, model, choices, new SelectChoiceRenderer(), allowOrder);\n     }\n \n     public AjaxPalettePanel(\n             final String id,\n             final IModel<List<T>> model,\n             final ListModel<T> choices,\n-            final ChoiceRenderer<T> renderer) {\n+            final IChoiceRenderer<T> renderer,\n+            final boolean allowOrder) {\n \n         super(id, model);\n \n-        this.palette = createPalette(id, model, choices, renderer);\n+        this.palette = createPalette(model, choices, renderer, allowOrder);\n         add(palette.setOutputMarkupId(true));\n         setOutputMarkupId(true);\n     }\n \n     private Palette<T> createPalette(\n-            final String id,\n             final IModel<List<T>> model,\n             final ListModel<T> choices,\n-            final IChoiceRenderer renderer) {\n+            final IChoiceRenderer<T> renderer,\n+            final boolean allowOrder) {\n \n-        final Palette<T> palette = new Palette(\n+        return new Palette(\n                 \"paletteField\",\n                 model,\n                 choices,\n                 renderer,\n                 8,\n-                false);\n-\n-        return palette;\n+                allowOrder);\n     }\n \n     @Override"},{"sha":"16706118fd9ce829a546d12aec46a0bd6a97aad9","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxPasswordFieldPanel.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxPasswordFieldPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -31,18 +31,17 @@ public class AjaxPasswordFieldPanel extends FieldPanel<String> {\n     public AjaxPasswordFieldPanel(\n             final String id,\n             final String name,\n-            final IModel<String> model,\n-            final boolean active) {\n+            final IModel<String> model) {\n \n-        super(id, name, model, active);\n+        super(id, name, model);\n \n         field = new PasswordTextField(\"passwordField\", model);\n \n         field.setRequired(false);\n \n         add(field.setLabel(new Model(name)).setOutputMarkupId(true));\n \n-        if (active) {\n+        if (!isReadOnly()) {\n             field.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n                 private static final long serialVersionUID ="},{"sha":"14da16bf60aea54040fcb5b63d587cdd0009a388","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/AjaxTextFieldPanel.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FAjaxTextFieldPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -39,10 +39,9 @@ public class AjaxTextFieldPanel extends FieldPanel<String> {\n     public AjaxTextFieldPanel(\n             final String id,\n             final String name,\n-            final IModel<String> model,\n-            final boolean active) {\n+            final IModel<String> model) {\n \n-        super(id, name, model, active);\n+        super(id, name, model);\n \n         field = new AutoCompleteTextField<String>(\"textField\", model) {\n \n@@ -68,11 +67,10 @@ protected Iterator<String> getChoices(String input) {\n \n         add(field.setLabel(new Model(name)).setOutputMarkupId(true));\n \n-        if (active) {\n+        if (!isReadOnly()) {\n             field.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-                private static final long serialVersionUID =\n-                        -1107858522700306810L;\n+                private static final long serialVersionUID = -1107858522700306810L;\n \n                 @Override\n                 protected void onUpdate(AjaxRequestTarget art) {"},{"sha":"c10249f8342a99cded561491d69ef834204bca5f","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/CheckBoxMultipleChoiceFieldPanel.java","status":"renamed","additions":21,"deletions":9,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -18,18 +18,30 @@\n  */\n package org.syncope.console.wicket.markup.html.form;\n \n-import org.apache.wicket.markup.html.panel.Panel;\n+import java.io.Serializable;\n+import java.util.Collection;\n+import java.util.List;\n+import org.apache.wicket.markup.html.form.CheckBoxMultipleChoice;\n import org.apache.wicket.model.IModel;\n \n-/**\n- * This empty class must exist because there not seems to be alternative to\n- * provide specialized HTML for delete links.\n- */\n-public class DeleteLinkPanel extends Panel {\n+public class CheckBoxMultipleChoiceFieldPanel extends AbstractFieldPanel {\n+\n+    private static final long serialVersionUID = 4124935025837737298L;\n+\n+    private final CheckBoxMultipleChoice field;\n \n-    private static final long serialVersionUID = -7575742209426851942L;\n+    public CheckBoxMultipleChoiceFieldPanel(final String id, final IModel<Collection> model,\n+            final IModel<List> choices) {\n+\n+        super(id, model);\n+\n+        field = new CheckBoxMultipleChoice(\"checkBoxMultipleChoice\", model, choices);\n+        add(field);\n+    }\n \n-    public DeleteLinkPanel(final String componentId, final IModel<?> model) {\n-        super(componentId, model);\n+    @Override\n+    public AbstractFieldPanel setModelObject(final Serializable object) {\n+        field.setModelObject(object);\n+        return this;\n     }\n }","previous_filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/DeleteLinkPanel.java"},{"sha":"a496fdd051820ed88022bcd7929b1f932723afb2","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/DateTextFieldPanel.java","status":"modified","additions":10,"deletions":13,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTextFieldPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -26,14 +26,14 @@\n import java.util.List;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n-import org.apache.wicket.model.IModel;\n import org.apache.wicket.datetime.markup.html.form.DateTextField;\n import org.apache.wicket.extensions.yui.calendar.DatePicker;\n import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.springframework.util.StringUtils;\n \n-public class DateTextFieldPanel extends FieldPanel<Date> {\n+public class DateTextFieldPanel extends FieldPanel<Date> implements Cloneable {\n \n     private static final long serialVersionUID = 1919852712185883648L;\n \n@@ -43,16 +43,15 @@ public DateTextFieldPanel(\n             final String id,\n             final String name,\n             final IModel<Date> model,\n-            final boolean active,\n             final String datePattern) {\n \n-        super(id, name, model, active);\n+        super(id, name, model);\n \n         this.datePattern = datePattern;\n \n         field = DateTextField.forDatePattern(\"field\", model, datePattern);\n \n-        if (active) {\n+        if (!isReadOnly()) {\n             field.add(\n                     new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n@@ -91,7 +90,7 @@ protected boolean enableMonthYearSelection() {\n     }\n \n     @Override\n-    public FieldPanel setNewModel(final ListItem item, final Class reference) {\n+    public FieldPanel setNewModel(final ListItem item) {\n         final DateFormat formatter = new SimpleDateFormat(datePattern);\n \n         IModel<Date> model = new Model() {\n@@ -104,15 +103,15 @@ public Serializable getObject() {\n                 Date date = null;\n \n                 if (StringUtils.hasText((String) item.getModelObject())) {\n-                    if (reference.equals(String.class)) {\n+                    if (item.getModelObject() instanceof String) {\n                         // Parse string using datePattern\n                         try {\n                             date = formatter.parse(\n                                     (String) item.getModelObject());\n                         } catch (ParseException e) {\n                             LOG.error(\"While parsing date\", e);\n                         }\n-                    } else if (reference.equals(Date.class)) {\n+                    } else if (item.getModelObject() instanceof Date) {\n                         // Don't parse anything\n                         date = (Date) item.getModelObject();\n                     } else {\n@@ -127,11 +126,11 @@ public Serializable getObject() {\n             @Override\n             public void setObject(final Serializable object) {\n                 if (object != null) {\n-                    if (reference.equals(String.class)) {\n+                    if (item.getModelObject() instanceof String) {\n                         // Parse string using datePattern\n                         item.setModelObject(\n                                 (String) formatter.format((Date) object));\n-                    } else if (reference.equals(Date.class)) {\n+                    } else if (item.getModelObject() instanceof Date) {\n                         // Don't parse anything\n                         item.setModelObject((Date) object);\n                     } else {\n@@ -188,9 +187,7 @@ public void setObject(final Serializable object) {\n \n     @Override\n     public FieldPanel clone() {\n-        final FieldPanel panel = new DateTextFieldPanel(\n-                id, name, new Model(null), active, datePattern);\n-\n+        final FieldPanel panel = new DateTextFieldPanel(id, name, new Model(null), datePattern);\n         panel.setRequired(isRequired());\n         panel.setReadOnly(isReadOnly());\n         panel.setTitle(title);"},{"sha":"1e1350f7795ed7fabe395c266734fc30a894a5c5","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/DateTimeFieldPanel.java","status":"modified","additions":34,"deletions":56,"changes":90,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDateTimeFieldPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -27,19 +27,19 @@\n import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n+import org.apache.wicket.extensions.yui.calendar.DateTimeField;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.form.FormComponent;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.extensions.yui.calendar.DateTimeField;\n import org.apache.wicket.markup.html.form.validation.AbstractFormValidator;\n-import org.apache.wicket.validation.IValidationError;\n-import org.apache.wicket.validation.ValidationError;\n import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n+import org.apache.wicket.validation.IValidationError;\n+import org.apache.wicket.validation.ValidationError;\n import org.springframework.util.StringUtils;\n import org.syncope.client.SyncopeConstants;\n \n-public class DateTimeFieldPanel extends FieldPanel<Date> {\n+public class DateTimeFieldPanel extends FieldPanel<Date> implements Cloneable {\n \n     private static final long serialVersionUID = -428975732068281726L;\n \n@@ -61,41 +61,34 @@ public DateTimeFieldPanel(\n             final String id,\n             final String name,\n             final IModel<Date> model,\n-            final boolean active,\n             final String datePattern) {\n \n-        super(id, name, model, active);\n+        super(id, name, model);\n \n         this.datePattern = datePattern;\n \n         field = new DateTimeField(\"field\", model);\n \n         final Calendar cal = Calendar.getInstance();\n \n-        field.get(\"hours\").\n-                add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+        field.get(\"hours\").add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-            private static final long serialVersionUID =\n-                    -1107858522700306810L;\n+            private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onUpdate(AjaxRequestTarget art) {\n                 if (((DateTimeField) field).getHours() > 12) {\n-                    cal.set(Calendar.HOUR_OF_DAY,\n-                            ((DateTimeField) field).getHours());\n+                    cal.set(Calendar.HOUR_OF_DAY, ((DateTimeField) field).getHours());\n                 } else {\n-                    cal.set(Calendar.HOUR,\n-                            ((DateTimeField) field).getHours());\n+                    cal.set(Calendar.HOUR, ((DateTimeField) field).getHours());\n                 }\n                 field.setModelObject(cal.getTime());\n             }\n         });\n \n-        field.get(\"minutes\").\n-                add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+        field.get(\"minutes\").add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-            private static final long serialVersionUID =\n-                    -1107858522700306810L;\n+            private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n@@ -104,11 +97,9 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             }\n         });\n \n-        field.get(\"date\").\n-                add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+        field.get(\"date\").add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-            private static final long serialVersionUID =\n-                    -1107858522700306810L;\n+            private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n@@ -124,11 +115,9 @@ protected void onUpdate(final AjaxRequestTarget target) {\n             }\n         });\n \n-        field.get(\"amOrPmChoice\").\n-                add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+        field.get(\"amOrPmChoice\").add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-            private static final long serialVersionUID =\n-                    -1107858522700306810L;\n+            private static final long serialVersionUID = -1107858522700306810L;\n \n             @Override\n             protected void onUpdate(final AjaxRequestTarget target) {\n@@ -146,8 +135,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n     }\n \n     /**\n-     * Custom form validator for registering and handling DateTimeField\n-     * components that are in it.\n+     * Custom form validator for registering and handling DateTimeField components that are in it.\n      */\n     private class DateTimeFormValidator extends AbstractFormValidator {\n \n@@ -157,8 +145,7 @@ private class DateTimeFormValidator extends AbstractFormValidator {\n \n         public DateTimeFormValidator(final DateTimeField dateTimeComponent) {\n             if (dateTimeComponent == null) {\n-                throw new IllegalArgumentException(\n-                        \"argument dateTimeComponent cannot be null\");\n+                throw new IllegalArgumentException(\"argument dateTimeComponent cannot be null\");\n             }\n \n             dateTimeComponents = new FormComponent[]{dateTimeComponent};\n@@ -171,12 +158,12 @@ public FormComponent[] getDependentFormComponents() {\n \n         /**\n          * Validation rule : all 3 fields (date,hours,minutes) must be not-null.\n+         *\n          * @param form\n          */\n         @Override\n         public void validate(final Form form) {\n-            final DateTimeField dateTimeField =\n-                    (DateTimeField) dateTimeComponents[0];\n+            final DateTimeField dateTimeField = (DateTimeField) dateTimeComponents[0];\n \n             if (!(dateTimeField.getDate() != null\n                     && dateTimeField.getHours() != null\n@@ -203,7 +190,7 @@ public FieldPanel setFormValidator(final Form form) {\n     }\n \n     @Override\n-    public FieldPanel setNewModel(final ListItem item, final Class reference) {\n+    public FieldPanel setNewModel(final ListItem item) {\n         final SimpleDateFormat formatter = DATE_FORMAT.get();\n \n         if (datePattern != null) {\n@@ -212,23 +199,21 @@ public FieldPanel setNewModel(final ListItem item, final Class reference) {\n \n         IModel<Date> model = new Model() {\n \n-            private static final long serialVersionUID =\n-                    6799404673615637845L;\n+            private static final long serialVersionUID = 6799404673615637845L;\n \n             @Override\n             public Serializable getObject() {\n                 Date date = null;\n \n                 if (StringUtils.hasText((String) item.getModelObject())) {\n-                    if (reference.equals(String.class)) {\n+                    if (item.getModelObject() instanceof String) {\n                         // Parse string using datePattern\n                         try {\n-                            date = formatter.parse(\n-                                    (String) item.getModelObject());\n+                            date = formatter.parse((String) item.getModelObject());\n                         } catch (ParseException e) {\n                             LOG.error(\"While parsing date\", e);\n                         }\n-                    } else if (reference.equals(Date.class)) {\n+                    } else if (item.getModelObject() instanceof Date) {\n                         // Don't parse anything\n                         date = (Date) item.getModelObject();\n                     } else {\n@@ -243,11 +228,10 @@ public Serializable getObject() {\n             @Override\n             public void setObject(final Serializable object) {\n                 if (object != null) {\n-                    if (reference.equals(String.class)) {\n+                    if (item.getModelObject() instanceof String) {\n                         // Parse string using datePattern\n-                        item.setModelObject(\n-                                (String) formatter.format((Date) object));\n-                    } else if (reference.equals(Date.class)) {\n+                        item.setModelObject((String) formatter.format((Date) object));\n+                    } else if (item.getModelObject() instanceof Date) {\n                         // Don't parse anything\n                         item.setModelObject((Date) object);\n                     } else {\n@@ -280,8 +264,7 @@ public FieldPanel setNewModel(final List<Serializable> list) {\n             public Serializable getObject() {\n                 Date date = null;\n \n-                if (list != null && !list.isEmpty()\n-                        && StringUtils.hasText(list.get(0).toString())) {\n+                if (list != null && !list.isEmpty() && StringUtils.hasText(list.get(0).toString())) {\n                     try {\n                         // Parse string using datePattern\n                         date = formatter.parse(list.get(0).toString());\n@@ -307,25 +290,20 @@ public void setObject(final Serializable object) {\n \n     @Override\n     public FieldPanel setStyleShet(String classes) {\n-        field.get(\"date\").add(AttributeModifier.replace(\n-                \"class\", (classes != null ? classes : \"\") + \" date_size\"));\n+        field.get(\"date\").add(AttributeModifier.replace(\"class\", (classes != null ? classes : \"\") + \" date_size\"));\n \n-        field.get(\"hours\").add(AttributeModifier.replace(\n-                \"class\", classes != null ? classes : \"\"));\n+        field.get(\"hours\").add(AttributeModifier.replace(\"class\", classes != null ? classes : \"\"));\n \n-        field.get(\"minutes\").add(AttributeModifier.replace(\n-                \"class\", classes != null ? classes : \"\"));\n+        field.get(\"minutes\").add(AttributeModifier.replace(\"class\", classes != null ? classes : \"\"));\n \n-        field.get(\"amOrPmChoice\").add(AttributeModifier.replace(\n-                \"class\", classes != null ? classes : \"\"));\n+        field.get(\"amOrPmChoice\").add(AttributeModifier.replace(\"class\", classes != null ? classes : \"\"));\n \n         return this;\n     }\n \n     @Override\n     public FieldPanel clone() {\n-        final FieldPanel panel = new DateTimeFieldPanel(\n-                id, name, new Model(null), active, datePattern);\n+        final FieldPanel panel = new DateTimeFieldPanel(id, name, new Model(null), datePattern);\n \n         panel.setRequired(isRequired());\n         panel.setReadOnly(isReadOnly());"},{"sha":"82e5ca530bb41a69131c2dbb49e809a85844eb32","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/FieldPanel.java","status":"modified","additions":10,"deletions":28,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FFieldPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -28,15 +28,12 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n \n-public abstract class FieldPanel<T extends Serializable>\n-        extends AbstractFieldPanel<T> {\n+public abstract class FieldPanel<T extends Serializable> extends AbstractFieldPanel<T> {\n \n     private static final long serialVersionUID = -198988924922541273L;\n \n     protected FormComponent field = null;\n \n-    final protected boolean active;\n-\n     final protected String id;\n \n     final protected String name;\n@@ -45,21 +42,13 @@\n \n     protected boolean isRequiredLabelAdded = false;\n \n-    public FieldPanel(\n-            final String id,\n-            final String name,\n-            final IModel<T> model,\n-            final boolean active) {\n-\n+    public FieldPanel(final String id, final String name, final IModel<T> model) {\n         super(id, model);\n \n         this.id = id;\n         this.name = name;\n-        this.active = active;\n-\n-        final Fragment fragment =\n-                new Fragment(\"required\", \"notRequiredFragment\", this);\n \n+        final Fragment fragment = new Fragment(\"required\", \"notRequiredFragment\", this);\n         add(fragment);\n \n         setOutputMarkupId(true);\n@@ -70,15 +59,13 @@ public FormComponent getField() {\n     }\n \n     public FieldPanel setTitle(String title) {\n-        field.add(AttributeModifier.replace(\n-                \"title\", title != null ? title : \"\"));\n+        field.add(AttributeModifier.replace(\"title\", title != null ? title : \"\"));\n \n         return this;\n     }\n \n     public FieldPanel setStyleShet(final String classes) {\n-        field.add(AttributeModifier.replace(\n-                \"class\", classes != null ? classes : \"\"));\n+        field.add(AttributeModifier.replace(\"class\", classes != null ? classes : \"\"));\n \n         return this;\n     }\n@@ -119,13 +106,12 @@ public boolean isReadOnly() {\n     }\n \n     /**\n-     * Userd by MultiValueSelectorPanel to attach items.\n+     * Used by MultiValueSelectorPanel to attach items.\n+     *\n      * @param item item to attach.\n      * @return updated FieldPanel object.\n      */\n-    public FieldPanel setNewModel(\n-            final ListItem<T> item, final Class reference) {\n-\n+    public FieldPanel setNewModel(final ListItem<T> item) {\n         setNewModel(new Model() {\n \n             private static final long serialVersionUID = 6799404673615637845L;\n@@ -172,12 +158,8 @@ public void setObject(final Serializable object) {\n     public FieldPanel clone() {\n         final FieldPanel panel;\n         try {\n-            panel = this.getClass().getConstructor(new Class[]{\n-                        String.class,\n-                        String.class,\n-                        IModel.class,\n-                        boolean.class}).newInstance(\n-                    id, name, new Model(null), active);\n+            panel = this.getClass().getConstructor(new Class[]{String.class, String.class, IModel.class}).\n+                    newInstance(id, name, new Model(null));\n         } catch (Exception e) {\n             LOG.error(\"Error cloning field panel\", e);\n             return null;"},{"sha":"f090e233c521d2e640bed3fec530307957f4bb9e","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/MultiValueSelectorPanel.java","status":"modified","additions":22,"deletions":42,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiValueSelectorPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiValueSelectorPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FMultiValueSelectorPanel.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -35,36 +35,25 @@\n \n     private static final long serialVersionUID = -6322397761456513324L;\n \n-    ListView<E> view;\n+    private ListView<E> view;\n \n-    WebMarkupContainer container;\n+    private WebMarkupContainer container;\n \n     public MultiValueSelectorPanel(\n             final String id,\n             final IModel<List<E>> model,\n-            final Class reference,\n             final FieldPanel panelTemplate) {\n-        super(id, model);\n-        init(id, model, reference, panelTemplate, false);\n \n+        this(id, model, panelTemplate, false);\n     }\n \n     public MultiValueSelectorPanel(\n             final String id,\n             final IModel<List<E>> model,\n-            final Class reference,\n             final FieldPanel panelTemplate,\n             final boolean eventTemplate) {\n-        super(id, model);\n-        init(id, model, reference, panelTemplate, eventTemplate);\n-    }\n \n-    private void init(\n-            final String id,\n-            final IModel<List<E>> model,\n-            final Class reference,\n-            final FieldPanel panelTemplate,\n-            final boolean sendEvent) {\n+        super(id, model);\n \n         // -----------------------\n         // Object container definition\n@@ -80,33 +69,28 @@ private void init(\n \n             @Override\n             protected void populateItem(final ListItem<E> item) {\n-\n                 final FieldPanel fieldPanel = panelTemplate.clone();\n \n-                if (sendEvent) {\n-                    fieldPanel.getField().add(\n-                            new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+                if (eventTemplate) {\n+                    fieldPanel.getField().add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-                                private static final long serialVersionUID =\n-                                        -1107858522700306810L;\n+                        private static final long serialVersionUID = -1107858522700306810L;\n \n-                                @Override\n-                                protected void onUpdate(\n-                                        final AjaxRequestTarget target) {\n+                        @Override\n+                        protected void onUpdate(\n+                                final AjaxRequestTarget target) {\n \n-                                    send(getPage(), Broadcast.BREADTH,\n-                                            new MultiValueSelectorEvent(target));\n-                                }\n-                            });\n+                            send(getPage(), Broadcast.BREADTH, new MultiValueSelectorEvent(target));\n+                        }\n+                    });\n                 }\n \n-                fieldPanel.setNewModel(item, reference);\n+                fieldPanel.setNewModel(item);\n                 item.add(fieldPanel);\n \n                 AjaxLink minus = new IndicatingAjaxLink(\"drop\") {\n \n-                    private static final long serialVersionUID =\n-                            -7978723352517770644L;\n+                    private static final long serialVersionUID = -7978723352517770644L;\n \n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n@@ -115,9 +99,8 @@ public void onClick(final AjaxRequestTarget target) {\n                         fieldPanel.getField().clearInput();\n                         target.add(container);\n \n-                        if (sendEvent) {\n-                            send(getPage(), Broadcast.BREADTH,\n-                                    new MultiValueSelectorEvent(target));\n+                        if (eventTemplate) {\n+                            send(getPage(), Broadcast.BREADTH, new MultiValueSelectorEvent(target));\n                         }\n                     }\n                 };\n@@ -132,11 +115,11 @@ public void onClick(final AjaxRequestTarget target) {\n                     minus.setEnabled(true);\n                 }\n \n+                final Fragment fragment;\n                 if (item.getIndex() == model.getObject().size() - 1) {\n                     final AjaxLink plus = new IndicatingAjaxLink(\"add\") {\n \n-                        private static final long serialVersionUID =\n-                                -7978723352517770644L;\n+                        private static final long serialVersionUID = -7978723352517770644L;\n \n                         @Override\n                         public void onClick(final AjaxRequestTarget target) {\n@@ -146,16 +129,13 @@ public void onClick(final AjaxRequestTarget target) {\n                         }\n                     };\n \n-                    final Fragment fragment = new Fragment(\n-                            \"panelPlus\", \"fragmentPlus\", container);\n+                    fragment = new Fragment(\"panelPlus\", \"fragmentPlus\", container);\n \n                     fragment.add(plus);\n-                    item.add(fragment);\n                 } else {\n-                    final Fragment fragment = new Fragment(\n-                            \"panelPlus\", \"emptyFragment\", container);\n-                    item.add(fragment);\n+                    fragment = new Fragment(\"panelPlus\", \"emptyFragment\", container);\n                 }\n+                item.add(fragment);\n             }\n         };\n "},{"sha":"85d8f88a8d4542acc720ab571401c411d5fb11d2","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/SearchLinkPanel.java","status":"removed","additions":0,"deletions":35,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c3b66a27ee7399b3c3e2f98889fea63747e8a0f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSearchLinkPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c3b66a27ee7399b3c3e2f98889fea63747e8a0f/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSearchLinkPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSearchLinkPanel.java?ref=9c3b66a27ee7399b3c3e2f98889fea63747e8a0f","patch":"@@ -1,35 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.syncope.console.wicket.markup.html.form;\n-\n-import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.model.IModel;\n-\n-/**\n- * This empty class must exist because there not seems to be alternative to\n- * provide specialized HTML for edit links.\n- */\n-public class SearchLinkPanel extends Panel {\n-\n-    private static final long serialVersionUID = 8719971783832913228L;\n-\n-    public SearchLinkPanel(final String componentId, final IModel<?> model) {\n-        super(componentId, model);\n-    }\n-}"},{"sha":"fcdf0543151e6c1b2ed34b162b4d201bec5c2aa3","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/SelectableRecorder.java","status":"added","additions":203,"deletions":0,"changes":203,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectableRecorder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectableRecorder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSelectableRecorder.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -0,0 +1,203 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.syncope.console.wicket.markup.html.form;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.wicket.WicketRuntimeException;\n+import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n+import org.apache.wicket.extensions.markup.html.form.palette.component.Recorder;\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.util.string.Strings;\n+\n+/**\n+ * A variant of Recorder, supporting single element selection (for editing purpose, for example). <b>Note</b>: this\n+ * class extends Recorder<T> but in fact it is a bare copy of most source code; this was done because the original class\n+ * is keeping everything private.\n+ *\n+ * @param <T> Type of the palette\n+ */\n+public class SelectableRecorder<T> extends Recorder<T> {\n+\n+    private static final long serialVersionUID = -3009044376132921879L;\n+\n+    private boolean attached = false;\n+\n+    private static final String[] EMPTY_IDS = new String[0];\n+\n+    /**\n+     * conveniently maintained array of selected ids\n+     */\n+    private String[] ids;\n+\n+    private String selectedId;\n+\n+    public SelectableRecorder(final String id, final Palette<T> palette) {\n+        super(id, palette);\n+    }\n+\n+    @Override\n+    protected void onBeforeRender() {\n+        super.onBeforeRender();\n+\n+        if (!getForm().hasError()) {\n+            initIds();\n+        } else if (ids == null) {\n+            ids = EMPTY_IDS;\n+        }\n+        attached = true;\n+    }\n+\n+    /**\n+     * Synchronize ids collection from the palette's model\n+     */\n+    private void initIds() {\n+        // construct the model string based on selection collection\n+        IChoiceRenderer<T> renderer = getPalette().getChoiceRenderer();\n+        StringBuilder modelStringBuffer = new StringBuilder();\n+        Collection<T> modelCollection = getPalette().getModelCollection();\n+        if (modelCollection == null) {\n+            throw new WicketRuntimeException(\n+                    \"Expected getPalette().getModelCollection() to return a non-null value.\"\n+                    + \" Please make sure you have model object assigned to the palette\");\n+        }\n+        Iterator<T> selection = modelCollection.iterator();\n+\n+        int i = 0;\n+        while (selection.hasNext()) {\n+            modelStringBuffer.append(renderer.getIdValue(selection.next(), i++));\n+            if (selection.hasNext()) {\n+                modelStringBuffer.append(\",\");\n+            }\n+        }\n+\n+        // set model and update ids array\n+        String modelString = modelStringBuffer.toString();\n+        setDefaultModel(new Model<String>(modelString));\n+        updateIds(modelString);\n+    }\n+\n+    public T getSelectedItem() {\n+        if (selectedId == null) {\n+            return null;\n+        }\n+\n+        IChoiceRenderer<T> renderer = getPalette().getChoiceRenderer();\n+\n+        T selected = null;\n+        for (T choice : getPalette().getChoices()) {\n+            if (renderer.getIdValue(choice, 0).equals(selectedId)) {\n+                selected = choice;\n+                break;\n+            }\n+        }\n+\n+        return selected;\n+    }\n+\n+    /**\n+     * @return iterator over selected choices\n+     */\n+    @Override\n+    public Iterator<T> getSelectedChoices() {\n+        IChoiceRenderer<T> renderer = getPalette().getChoiceRenderer();\n+        if (ids.length == 0) {\n+            return Collections.EMPTY_LIST.iterator();\n+        }\n+\n+        List<T> selected = new ArrayList<T>(ids.length);\n+        for (String id : ids) {\n+            for (T choice : getPalette().getChoices()) {\n+                if (renderer.getIdValue(choice, 0).equals(id)) {\n+                    selected.add(choice);\n+                    break;\n+                }\n+            }\n+        }\n+        return selected.iterator();\n+    }\n+\n+    /**\n+     * @return iterator over unselected choices\n+     */\n+    @Override\n+    public Iterator<T> getUnselectedChoices() {\n+        IChoiceRenderer<T> renderer = getPalette().getChoiceRenderer();\n+        Collection<? extends T> choices = getPalette().getChoices();\n+\n+        if (choices.size() - ids.length == 0) {\n+            return Collections.<T>emptyList().iterator();\n+        }\n+\n+        List<T> unselected = new ArrayList<T>(Math.max(1, choices.size() - ids.length));\n+        for (T choice : choices) {\n+            final String choiceId = renderer.getIdValue(choice, 0);\n+            boolean selected = false;\n+            for (String id : ids) {\n+                if (id.equals(choiceId)) {\n+                    selected = true;\n+                    break;\n+                }\n+            }\n+            if (!selected) {\n+                unselected.add(choice);\n+            }\n+        }\n+        return unselected.iterator();\n+    }\n+\n+    @Override\n+    protected void onValid() {\n+        super.onValid();\n+        if (attached) {\n+            updateIds();\n+        }\n+    }\n+\n+    @Override\n+    protected void onInvalid() {\n+        super.onInvalid();\n+        if (attached) {\n+            updateIds();\n+        }\n+    }\n+\n+    private void updateIds() {\n+        updateIds(getValue());\n+    }\n+\n+    private void updateIds(final String value) {\n+        if (Strings.isEmpty(value)) {\n+            ids = EMPTY_IDS;\n+        } else {\n+            if (value.indexOf('|') == -1) {\n+                ids = value.split(\",\");\n+                selectedId = null;\n+            } else {\n+                String[] splitted = value.split(\"\\\\|\");\n+                selectedId = splitted[0];\n+                ids = splitted[1].split(\",\");\n+            }\n+        }\n+    }\n+}"},{"sha":"342002950d72a19adc4023a71a32af8f455fbad8","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/SingleColumnPalette.java","status":"added","additions":211,"deletions":0,"changes":211,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSingleColumnPalette.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSingleColumnPalette.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSingleColumnPalette.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -0,0 +1,211 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.syncope.console.wicket.markup.html.form;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.wicket.Component;\n+import org.apache.wicket.ajax.markup.html.AjaxLink;\n+import org.apache.wicket.behavior.Behavior;\n+import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n+import org.apache.wicket.extensions.markup.html.form.palette.component.Recorder;\n+import org.apache.wicket.extensions.markup.html.form.palette.component.Selection;\n+import org.apache.wicket.markup.ComponentTag;\n+import org.apache.wicket.markup.html.form.IChoiceRenderer;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.util.ListModel;\n+import org.apache.wicket.util.value.IValueMap;\n+\n+/**\n+ * SingleColumnPalette is a components that allows the user to easily add, remove and order items in a single select\n+ * box.\n+ *\n+ * @see org.apache.wicket.extensions.markup.html.form.palette.Palette\n+ */\n+public class SingleColumnPalette<T> extends Palette<T> {\n+\n+    private static final long serialVersionUID = -1126599052871074501L;\n+\n+    private AjaxLink addLink;\n+\n+    private AjaxLink editLink;\n+\n+    private AjaxLink removeLink;\n+\n+    private List<Behavior> recordBehaviors;\n+\n+    public SingleColumnPalette(final String id, final IModel<? extends List<? extends T>> model,\n+            final IChoiceRenderer<T> choiceRenderer, final int rows, final boolean allowOrder) {\n+\n+        super(id, new ListModel<T>((List<T>) model.getObject()), model, choiceRenderer, rows, allowOrder);\n+        recordBehaviors = new ArrayList<Behavior>();\n+    }\n+\n+    @Override\n+    protected void onBeforeRender() {\n+        super.onBeforeRender();\n+\n+        if (editLink != null) {\n+            add(editLink);\n+        }\n+\n+        for (Behavior behavior : recordBehaviors) {\n+            if (!getRecorderComponent().getBehaviors().contains(behavior)) {\n+                getRecorderComponent().add(behavior);\n+            }\n+        }\n+    }\n+\n+    public AjaxLink getAddLink() {\n+        return addLink;\n+    }\n+\n+    public void setAddLink(final AjaxLink addLink) {\n+        this.addLink = addLink;\n+    }\n+\n+    public AjaxLink getEditLink() {\n+        return editLink;\n+    }\n+\n+    public void setEditLink(final AjaxLink editLink) {\n+        this.editLink = editLink;\n+    }\n+\n+    public AjaxLink getRemoveLink() {\n+        return removeLink;\n+    }\n+\n+    public void setRemoveLink(final AjaxLink removeLink) {\n+        this.removeLink = removeLink;\n+    }\n+\n+    public List<Behavior> getRecordBehaviors() {\n+        return recordBehaviors;\n+    }\n+\n+    public T getSelectedItem() {\n+        return ((SelectableRecorder<T>) getRecorderComponent()).getSelectedItem();\n+    }\n+\n+    public boolean addRecordBehavior(final Behavior behavior) {\n+        return !recordBehaviors.contains(behavior) && recordBehaviors.add(behavior);\n+    }\n+\n+    public boolean removeRecordBehavior(final Behavior behavior) {\n+        return recordBehaviors.remove(behavior);\n+    }\n+\n+    public void setRecordBehaviors(final List<Behavior> recordBehaviors) {\n+        this.recordBehaviors.clear();\n+        if (recordBehaviors != null && !recordBehaviors.isEmpty()) {\n+            this.recordBehaviors.addAll(recordBehaviors);\n+        }\n+    }\n+\n+    @Override\n+    protected Component newAddComponent() {\n+        return addLink == null ? super.newAddComponent() : addLink;\n+    }\n+\n+    @Override\n+    protected Component newRemoveComponent() {\n+        return removeLink == null ? super.newRemoveComponent() : removeLink;\n+    }\n+\n+    @Override\n+    protected Recorder<T> newRecorderComponent() {\n+        return new SelectableRecorder<T>(\"recorder\", this) {\n+\n+            private static final long serialVersionUID = 3019792558927545591L;\n+\n+            @Override\n+            public void updateModel() {\n+                super.updateModel();\n+                SingleColumnPalette.this.updateModel();\n+            }\n+        };\n+    }\n+\n+    /**\n+     * Overriden from parent with purpose of removing ondblclick event and multiple selection.\n+     *\n+     * @return selected items component\n+     */\n+    @Override\n+    protected Component newSelectionComponent() {\n+        return new Selection<T>(\"selection\", this) {\n+\n+            private static final long serialVersionUID = -4146708301120705199L;\n+\n+            @Override\n+            protected Map<String, String> getAdditionalAttributes(final Object choice) {\n+                return SingleColumnPalette.this.getAdditionalAttributesForSelection(choice);\n+            }\n+\n+            @Override\n+            protected void onComponentTag(final ComponentTag tag) {\n+                super.onComponentTag(tag);\n+                IValueMap attrs = tag.getAttributes();\n+\n+                String onFocus = getPalette().getSelectionOnFocusJS();\n+                if (onFocus != null) {\n+                    attrs.put(\"onfocus\", onFocus);\n+                }\n+\n+                attrs.put(\"ondblclick\", \"\");\n+                attrs.remove(\"multiple\");\n+            }\n+        };\n+    }\n+\n+    @Override\n+    protected Component newAvailableHeader(final String componentId) {\n+        Component availableHeader = super.newAvailableHeader(componentId);\n+        availableHeader.setVisible(false);\n+        return availableHeader;\n+    }\n+\n+    @Override\n+    protected Component newSelectedHeader(final String componentId) {\n+        Component selectedHeader = super.newSelectedHeader(componentId);\n+        selectedHeader.setVisible(false);\n+        return selectedHeader;\n+    }\n+\n+    public String getEditOnClickJS() {\n+        return buildJSCall(\"Syncope.SingleColumnPalette.choicesOnFocus\");\n+    }\n+\n+    @Override\n+    public String getChoicesOnFocusJS() {\n+        return \"\";\n+    }\n+\n+    @Override\n+    public String getSelectionOnFocusJS() {\n+        return \"\";\n+    }\n+\n+    @Override\n+    public String getAddOnClickJS() {\n+        return \"\";\n+    }\n+}"},{"sha":"89b31c73c1adde178af499b3a73f455f1a16f50d","filename":"console/src/main/resources/org/syncope/console/pages/BaseModalPage.html","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBaseModalPage.html?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -30,6 +30,8 @@\n         <script type=\"text/javascript\" src=\"scripts/jquery-1.4.2.min.js\"></script>\n         <script type=\"text/javascript\" src=\"scripts/jquery-ui-1.8.5.custom.min.js\"></script>\n \n+        <script type=\"text/javascript\" src=\"scripts/singlecolumnpalette.js\"></script>\n+\n         <script type=\"text/javascript\">\n             $(function() {\n                 $(\"#tabs\").tabs();"},{"sha":"dbe44a5f0a1475b626159b90cb19ca1f9b344b6e","filename":"console/src/main/resources/org/syncope/console/pages/BasePage.html","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -19,7 +19,7 @@\n         <meta http-equiv=\"Content-Style-Type\" content=\"text/css\"/>\n         <meta http-equiv=\"Content-Script-Type\" content=\"text/javascript\"/>\n \n-        <title>Syncope</title>\n+        <title>Apache Syncope</title>\n \n         <link rel=\"shortcut icon\" href=\"img/favicon.ico\" />\n \n@@ -40,6 +40,8 @@\n \n         <script type=\"text/javascript\" src=\"scripts/jquery-1.4.2.min.js\"></script>\n         <script type=\"text/javascript\" src=\"scripts/jquery-ui-1.8.5.custom.min.js\"></script>\n+        \n+        <script type=\"text/javascript\" src=\"scripts/singlecolumnpalette.js\"></script>\n \n         <script type=\"text/javascript\">\n             $(document).ready(function() {"},{"sha":"b1dcf652bf3bc3d0bd63040680249566b32de70c","filename":"console/src/main/resources/org/syncope/console/pages/ConnectorModalPage.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.html?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -50,7 +50,7 @@\n                         <div class=\"tablecolumn_label short_dynamicsize\">\n                             <label for=\"bundleName\"><wicket:message key=\"bundleName\"/></label>\n                         </div>\n-                        <div class=\"tablecolumn_field short_dynamicsize\">\n+                        <div class=\"tablecolumn_field medium_dynamicsize\">\n                             <span wicket:id=\"bundle\">[bundle]</span>\n                         </div>\n                     </div>\n@@ -59,7 +59,7 @@\n                         <div class=\"tablecolumn_label short_dynamicsize\">\n                             <label for=\"name\"><wicket:message key=\"name\"/></label>\n                         </div>\n-                        <div class=\"tablecolumn_field short_dynamicsize\">\n+                        <div class=\"tablecolumn_field medium_dynamicsize\">\n                             <span wicket:id=\"connectorName\">[name]</span>\n                         </div>\n                     </div>"},{"sha":"f39b120353573ec47e1a66f56c537a7011d60c7c","filename":"console/src/main/resources/org/syncope/console/pages/Login.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.html?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -18,7 +18,7 @@\n         <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n         <meta http-equiv=\"Content-Style-Type\" content=\"text/css\"/>\n \n-        <title>Syncope - Login</title>\n+        <title>Apache Syncope - Login</title>\n \n         <link rel=\"shortcut icon\" href=\"img/favicon.ico\"/>\n         <link rel=\"stylesheet\" href=\"css/style.css\" type=\"text/css\" media=\"all\"/>"},{"sha":"758e7b2d1584da4926b516935cde5f822f7274f1","filename":"console/src/main/resources/org/syncope/console/pages/ReportModalPage.html","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.html?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -62,6 +62,15 @@\n                                         <span wicket:id=\"nextExec\">[nextExec]</span>\n                                     </div>\n                                 </div>\n+\n+                                <div class=\"tablerow\">\n+                                    <div class=\"tablecolumn_label short_dynamicsize\">\n+                                        <label for=\"reportlets\"><wicket:message key=\"reportlets\"/></label>\n+                                    </div>\n+                                    <div class=\"tablecolumn_field medium_dynamicsize\">\n+                                        <span wicket:id=\"reportlets\">[reportlets]</span>\n+                                    </div>\n+                                </div>                                \n                             </div>\n \n                             <script type=\"text/javascript\">\n@@ -107,6 +116,7 @@\n             </div>\n         </form>\n     </div>\n+    <div wicket:id=\"reportletConfWin\"/>\n     <div wicket:id=\"reportExecMessageWin\"/>\n     <div wicket:id=\"reportExecExportWin\"/>\n </wicket:extend>\n\\ No newline at end of file"},{"sha":"cc93baf2649b27d7b6ce16b230b99c022e3fdcbf","filename":"console/src/main/resources/org/syncope/console/pages/ReportModalPage.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage.properties?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -31,3 +31,5 @@ taskExecutions=Task executions\n delete=Delete\n showMessage=Show\n chooseForTemplate=Use A Template\n+reportlets=Reportlets\n+create_reportletconf=Add new Reporlet"},{"sha":"778042e8632ea114d7b6a0b32c73581169bde292","filename":"console/src/main/resources/org/syncope/console/pages/ReportModalPage_it.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportModalPage_it.properties?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -31,3 +31,5 @@ taskExecutions=Esecuzione del task\n delete=Rimozione\n showMessage=Mostra\n chooseForTemplate=Usa Un Template\n+reportlets=Reportlets\n+create_reportletconf=Aggiungi Reporlet"},{"sha":"397785c18ec724c15494fb54044f8a2c06091c21","filename":"console/src/main/resources/org/syncope/console/pages/ReportletConfModalPage.html","status":"added","additions":78,"deletions":0,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.html?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -0,0 +1,78 @@\n+<!--\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ under the License.\n+-->\n+<wicket:extend>\n+    <div style=\"margin:10px\">\n+        <p class=\"ui-widget ui-corner-all ui-widget-header\"><wicket:message key=\"title\"/></p>\n+        <form wicket:id=\"form\">\n+            <div id=\"tabs\">\n+                <ul>\n+                    <li class=\"tabs-selected\"><a href=\"#general\"><span><wicket:message key=\"general\"/></span></a></li>\n+                    <li><a href=\"#configuration\"><span><wicket:message key=\"configuration\"/></span></a></li>\n+                </ul>\n+                <div id=\"general\">\n+                    <div id=\"formtable\">\n+                        <div class=\"tablerow\">\n+                            <div class=\"tablecolumn_label short_dynamicsize\">\n+                                <label for=\"name\"><wicket:message key=\"name\"/></label>\n+                            </div>\n+                            <div class=\"tablecolumn_field short_dynamicsize\">\n+                                <span wicket:id=\"name\">[name]</span>\n+                            </div>\n+                        </div>\n+\n+                        <div class=\"tablerow\">\n+                            <div class=\"tablecolumn_label short_dynamicsize\">\n+                                <label for=\"reportletClass\"><wicket:message key=\"reportletClass\"/></label>\n+                            </div>\n+                            <div class=\"tablecolumn_field\">\n+                                <span wicket:id=\"reportletClass\" style=\"width: 100%;\">[reportletClass]</span>\n+                            </div>\n+                        </div>\n+                    </div>\n+\n+                    <script type=\"text/javascript\">\n+                        $(function() {\n+                            $('#general #formtable div.tablerow:even').addClass(\"alt\");\n+                        });\n+                    </script>\n+                </div>\n+                <div id=\"configuration\">\n+                    <div id=\"formtable\">\n+                        <span wicket:id=\"container\">\n+                            <div class=\"tablerow\" wicket:id=\"propView\">\n+                                <div class=\"tablecolumn_label short_fixedsize\">\n+                                    <span wicket:id=\"key\">[key]</span>\n+                                </div>\n+                                <div class=\"tablecolumn_field medium_dynamicsize\">\n+                                    <span wicket:id=\"value\">[value]</span>\n+                                </div>\n+                            </div>\n+\n+                            <script type=\"text/javascript\">\n+                                $(function() {\n+                                    $('#configuration #formtable div.tablerow:even').addClass(\"alt\");\n+                                });\n+                            </script>\n+                        </span>\n+                    </div>\n+                </div>\n+            </div>\n+\n+            <div style=\"margin: 20px 10px 0\">\n+                <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"apply\"/>\n+            </div>\n+        </form>\n+    </div>\n+</wicket:extend>\n\\ No newline at end of file"},{"sha":"52ca027169db35dddbf28c08b7dd4e5a40517802","filename":"console/src/main/resources/org/syncope/console/pages/ReportletConfModalPage.properties","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.properties?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Reportlet\n+general=General\n+configuration=Configuration\n+apply=Save\n+name=Name\n+reportletClass=Reportlet class"},{"sha":"9245554d50a987908fcbb192b65b29d7a336cb01","filename":"console/src/main/resources/org/syncope/console/pages/ReportletConfModalPage_it.properties","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage_it.properties?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -0,0 +1,22 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Reportlet\n+general=Generale\n+configuration=Configurazione\n+apply=Salva\n+name=Nome\n+reportletClass=Classe Reportlet"},{"sha":"93f1be8664b27d02be32ebb95cbfd81ea6fd297d","filename":"console/src/main/resources/org/syncope/console/pages/WelcomePage.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.html?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -19,7 +19,7 @@\n         <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n         <meta http-equiv=\"Content-Style-Type\" content=\"text/css\"/>\n \n-        <title>Syncope - <wicket:message key=\"welcome\"/></title>\n+        <title>Apache Syncope - <wicket:message key=\"welcome\"/></title>\n \n         <link rel=\"stylesheet\" href=\"css/style.css\" type=\"text/css\" media=\"all\"/>\n         <style type=\"text/css\">\n@@ -50,4 +50,4 @@ <h2><span style=\"font-size:8px;color:#aaaaaa;\" wicket:id=\"version\"/></h2>\n             </ul>\n         </div>\n     </body>\n-</html>\n\\ No newline at end of file\n+</html>"},{"sha":"40d61ba33dd1ca3c53475f1348612986738995c8","filename":"console/src/main/resources/org/syncope/console/wicket/markup/html/form/CheckBoxMultipleChoiceFieldPanel.html","status":"renamed","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FCheckBoxMultipleChoiceFieldPanel.html?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -12,8 +12,8 @@\n  limitations under the License.\n  under the License.\n -->\n-<wicket:panel>\n-  <a href=\"#\" wicket:id=\"editLink\">\n-       <img src=\"img/edit.png\" alt=\"settings icon\" class=\"drop_button\" />\n-  </a>\n-</wicket:panel>\n\\ No newline at end of file\n+<html>\n+    <wicket:panel>\n+        <span wicket:id=\"checkBoxMultipleChoice\" />\n+    </wicket:panel>\n+</html>","previous_filename":"console/src/main/resources/org/syncope/console/wicket/markup/html/form/EditLinkPanel.html"},{"sha":"e141cb320a16e72c2ec774507f4a2712e8cdf56c","filename":"console/src/main/resources/org/syncope/console/wicket/markup/html/form/DeleteLinkPanel.html","status":"removed","additions":0,"deletions":19,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c3b66a27ee7399b3c3e2f98889fea63747e8a0f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDeleteLinkPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c3b66a27ee7399b3c3e2f98889fea63747e8a0f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDeleteLinkPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FDeleteLinkPanel.html?ref=9c3b66a27ee7399b3c3e2f98889fea63747e8a0f","patch":"@@ -1,19 +0,0 @@\n-<!--\n- Licensed under the Apache License, Version 2.0 (the \"License\");\n- you may not use this file except in compliance with the License.\n- You may obtain a copy of the License at\n-\n-      http://www.apache.org/licenses/LICENSE-2.0\n-\n- Unless required by applicable law or agreed to in writing, software\n- distributed under the License is distributed on an \"AS IS\" BASIS,\n- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- See the License for the specific language governing permissions and\n- limitations under the License.\n- under the License.\n--->\n-<wicket:panel>\n-  <a href=\"#\" wicket:id=\"deleteLink\">\n-       <img src=\"img/delete.png\" alt=\"settings icon\" class=\"drop_button\" />\n-  </a>\n-</wicket:panel>\n\\ No newline at end of file"},{"sha":"a198f0a1ffa078967218b92ed92c587c97a3ec8a","filename":"console/src/main/resources/org/syncope/console/wicket/markup/html/form/SearchLinkPanel.html","status":"removed","additions":0,"deletions":19,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c3b66a27ee7399b3c3e2f98889fea63747e8a0f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSearchLinkPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c3b66a27ee7399b3c3e2f98889fea63747e8a0f/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSearchLinkPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSearchLinkPanel.html?ref=9c3b66a27ee7399b3c3e2f98889fea63747e8a0f","patch":"@@ -1,19 +0,0 @@\n-<!--\n- Licensed under the Apache License, Version 2.0 (the \"License\");\n- you may not use this file except in compliance with the License.\n- You may obtain a copy of the License at\n-\n-      http://www.apache.org/licenses/LICENSE-2.0\n-\n- Unless required by applicable law or agreed to in writing, software\n- distributed under the License is distributed on an \"AS IS\" BASIS,\n- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- See the License for the specific language governing permissions and\n- limitations under the License.\n- under the License.\n--->\n-<wicket:panel>\n-    <a href=\"#\" wicket:id=\"searchLink\">\n-        <img src=\"img/search.png\" alt=\"settings icon\" class=\"drop_button\" />\n-    </a>\n-</wicket:panel>\n\\ No newline at end of file"},{"sha":"86832efb139c1aac245abd7b4b6b0ae777a2625a","filename":"console/src/main/resources/org/syncope/console/wicket/markup/html/form/SingleColumnPalette.html","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSingleColumnPalette.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSingleColumnPalette.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Fform%2FSingleColumnPalette.html?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -0,0 +1,56 @@\n+<!--\n+   Licensed to the Apache Software Foundation (ASF) under one or more\n+   contributor license agreements.  See the NOTICE file distributed with\n+   this work for additional information regarding copyright ownership.\n+   The ASF licenses this file to You under the Apache License, Version 2.0\n+   (the \"License\"); you may not use this file except in compliance with\n+   the License.  You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+-->\n+<html xmlns:wicket=\"http://wicket.apache.org\">\n+    <body>\n+    <wicket:panel>\n+\n+        <div style=\"display: inline-table;\">\n+            <input type=\"hidden\" wicket:id=\"recorder\"/>\n+            <span wicket:id=\"availableHeader\"/>\n+            <span wicket:id=\"availableHeader\"/>\n+\n+            <div id=\"choices\">\n+                <select wicket:id=\"choices\" class=\"choicesSelect\" style=\"visibility: hidden;width: 0px;\">[choices]</select>\n+            </div>\n+            <div id=\"selections\" style=\"display: table-cell;\">\n+                <select class=\"selectionSelect\" wicket:id=\"selection\">[selection]</select>\t\n+            </div>\n+\n+            <div id=\"orderingButtons\" style=\"display: table-cell; width: 30px; vertical-align: middle; padding-left: 5px;\">\n+                <div style=\"padding-bottom: 5px;\">\n+                    <a wicket:id=\"moveUpButton\"><img src=\"img/up-icon.png\" alt=\"move up icon\"/></a>\n+                </div>\n+                <div style=\"padding-top: 5px;\">\n+                    <a wicket:id=\"moveDownButton\"><img src=\"img/down-icon.png\" alt=\"move down icon\"/></a>\n+                </div>\n+            </div>\n+        </div>\n+\n+        <div id=\"actionButtons\" style=\"padding-top: 5px;\">\n+            <div style=\"padding-left: 35px;float: left;\">\n+                <a wicket:id=\"addButton\"><img src=\"img/plus-icon.png\" alt=\"plus icon\"/></a>\n+            </div>\n+            <div style=\"padding-left: 15px;float: left;\">\n+                <a wicket:id=\"editButton\"><img src=\"img/actions/edit.png\" alt=\"edit icon\"/></a>\n+            </div>\n+            <div style=\"padding-left: 15px;float: left;\">\n+                <a wicket:id=\"removeButton\"><img src=\"img/minus-icon.png\" alt=\"minus icon\"/></a>\n+            </div>\n+        </div>\n+    </wicket:panel>\n+</body>\n+</html>\n\\ No newline at end of file"},{"sha":"58cc8b09a3a65c56d443e68fd1ce6b011708b024","filename":"console/src/main/webapp/img/down-icon.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fdown-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fdown-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fdown-icon.png?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15"},{"sha":"a7cadf28a555d37cb055162e7bd197e2d572cd62","filename":"console/src/main/webapp/img/up-icon.png","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fup-icon.png","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fup-icon.png","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fimg%2Fup-icon.png?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15"},{"sha":"5d61ad6eccd48a8409ef8d73543bbb7d6ebff90c","filename":"console/src/main/webapp/scripts/singlecolumnpalette.js","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fwebapp%2Fscripts%2Fsinglecolumnpalette.js","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/console%2Fsrc%2Fmain%2Fwebapp%2Fscripts%2Fsinglecolumnpalette.js","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2Fscripts%2Fsinglecolumnpalette.js?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+if (typeof(Syncope) == \"undefined\") Syncope = { };\n+if (typeof(Syncope.SingleColumnPalette) == \"undefined\") Syncope.SingleColumnPalette = { };\n+\n+Syncope.SingleColumnPalette.choicesOnFocus=function(choicesId, selectionId, recorderId) {\n+    var selection = Wicket.Palette.$(selectionId);\n+    var selected;\n+    for (var i = 0; i < selection.options.length; i++) {\n+        if (selection.options[i].selected) {\n+            selected = selection.options[i].value;\n+        }\n+    }\n+\n+    if (typeof(selected) == \"undefined\") {\n+        alert(\"Please select an item first\");\n+    } else {\n+        var recorder = Wicket.Palette.$(recorderId);  \n+        \n+        recorder.value=selected + \"|\";\n+        for (var i = 0; i < selection.options.length; i++) {\n+            recorder.value=recorder.value+selection.options[i].value;\n+            if (i+1<selection.options.length) {\n+                recorder.value=recorder.value+\",\";\n+            }\n+        }\n+\n+        if (recorder.onselect != null) {\n+            recorder.onselect();\n+        }\n+    }\n+}"},{"sha":"0a3e7d11f9d200f693fe4530b6fac799149107f1","filename":"core/src/main/java/org/syncope/core/persistence/beans/ConnInstance.java","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FConnInstance.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -52,17 +52,15 @@ public class ConnInstance extends AbstractBaseBean {\n     private String connectorName;\n \n     /**\n-     * ConnectorBundle-Name: Qualified name for the connector bundle. Within a\n-     * given deployment, the pair (ConnectorBundle-Name,\n-     * ConnectorBundle-Version) must be unique.\n+     * ConnectorBundle-Name: Qualified name for the connector bundle. Within a given deployment, the pair\n+     * (ConnectorBundle-Name, ConnectorBundle-Version) must be unique.\n      */\n     @Column(nullable = false)\n     private String bundleName;\n \n     /**\n-     * ConnectorBundle-Version: The version of the bundle. Within a given\n-     * deployment, the pair (ConnectorBundle-Name, ConnectorBundle-Version) must\n-     * be unique.\n+     * ConnectorBundle-Version: The version of the bundle. Within a given deployment, the pair (ConnectorBundle-Name,\n+     * ConnectorBundle-Version) must be unique.\n      */\n     @Column(nullable = false)\n     private String version;\n@@ -76,13 +74,13 @@ public class ConnInstance extends AbstractBaseBean {\n     private Set<ConnectorCapability> capabilities;\n \n     /**\n-     * The main configuration for the connector instance. This is directly\n-     * implemented by the Configuration bean class which contains annotated\n-     * ConfigurationProperties (@ConfigurationProperty).\n+     * The main configuration for the connector instance. This is directly implemented by the Configuration bean class\n+     * which contains annotated ConfigurationProperties (@ConfigurationProperty).\n      */\n     @Lob\n     private String xmlConfiguration;\n \n+    @Column(unique = true)\n     private String displayName;\n \n     /**"},{"sha":"889337c6834b28518c6423210a93930792c0bb24","filename":"core/src/main/java/org/syncope/core/report/AbstractReportlet.java","status":"modified","additions":50,"deletions":5,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FAbstractReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FAbstractReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FAbstractReportlet.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -18,18 +18,63 @@\n  */\n package org.syncope.core.report;\n \n-import org.syncope.client.report.ReportletConf;\n+import java.text.SimpleDateFormat;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.syncope.client.SyncopeConstants;\n+import org.syncope.client.report.AbstractReportletConf;\n+import static org.syncope.core.scheduling.ReportXMLConst.*;\n+import org.xml.sax.ContentHandler;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.helpers.AttributesImpl;\n \n-public abstract class AbstractReportlet implements Reportlet {\n+public abstract class AbstractReportlet<T extends AbstractReportletConf> implements Reportlet<T> {\n \n-    private ReportletConf conf;\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG =\n+            LoggerFactory.getLogger(AbstractReportlet.class);\n \n-    public ReportletConf getConf() {\n+    protected static final ThreadLocal<SimpleDateFormat> DATE_FORMAT = new ThreadLocal<SimpleDateFormat>() {\n+\n+        @Override\n+        protected SimpleDateFormat initialValue() {\n+            return new SimpleDateFormat(SyncopeConstants.DEFAULT_DATE_PATTERN);\n+        }\n+    };\n+\n+    protected T conf;\n+\n+    public T getConf() {\n         return conf;\n     }\n \n     @Override\n-    public void setConf(final ReportletConf conf) {\n+    public void setConf(final T conf) {\n         this.conf = conf;\n     }\n+\n+    protected abstract void doExtract(ContentHandler handler)\n+            throws SAXException, ReportException;\n+\n+    @Override\n+    @Transactional(readOnly = true)\n+    public void extract(final ContentHandler handler)\n+            throws SAXException, ReportException {\n+\n+        if (conf == null) {\n+            throw new ReportException(new IllegalArgumentException(\"No configuration provided\"));\n+        }\n+\n+        AttributesImpl atts = new AttributesImpl();\n+        atts.addAttribute(\"\", \"\", ATTR_NAME, XSD_STRING, conf.getName());\n+        atts.addAttribute(\"\", \"\", ATTR_CLASS, XSD_STRING, getClass().getName());\n+        handler.startElement(\"\", \"\", ELEMENT_REPORTLET, atts);\n+\n+        doExtract(handler);\n+\n+        handler.endElement(\"\", \"\", ELEMENT_REPORTLET);\n+    }\n }"},{"sha":"5a43ad7dcb343f00f6774ccfb4cf731d6597cc1b","filename":"core/src/main/java/org/syncope/core/report/Reportlet.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FReportlet.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -27,14 +27,14 @@\n  *\n  * @see org.syncope.core.persistence.beans.Report\n  */\n-public interface Reportlet {\n+public interface Reportlet<T extends ReportletConf> {\n \n     /**\n      * Set this reportlet configuration.\n      *\n      * @param conf configuration\n      */\n-    void setConf(ReportletConf conf);\n+    void setConf(T conf);\n \n     /**\n      * Actual data extraction for reporting."},{"sha":"b8d1eadcc2002b7340b308e4566ee445b8c4480f","filename":"core/src/main/java/org/syncope/core/report/ReportletConfClass.java","status":"renamed","additions":10,"deletions":13,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FReportletConfClass.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FReportletConfClass.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FReportletConfClass.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -16,20 +16,17 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.syncope.console.wicket.markup.html.form;\n+package org.syncope.core.report;\n \n-import org.apache.wicket.markup.html.panel.Panel;\n-import org.apache.wicket.model.IModel;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+import org.syncope.client.report.ReportletConf;\n \n-/**\n- * This empty class must exist because there not seems to be alternative to\n- * provide specialized HTML for edit links.\n- */\n-public class EditLinkPanel extends Panel {\n-\n-    private static final long serialVersionUID = 322966537010107771L;\n+@Target({ElementType.TYPE})\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface ReportletConfClass {\n \n-    public EditLinkPanel(final String componentId, final IModel<?> model) {\n-        super(componentId, model);\n-    }\n+    Class<? extends ReportletConf> value();\n }","previous_filename":"console/src/main/java/org/syncope/console/wicket/markup/html/form/EditLinkPanel.java"},{"sha":"24bab452b9ebe2623717e95fb0ebc9376d9b0f53","filename":"core/src/main/java/org/syncope/core/report/StaticReportlet.java","status":"added","additions":79,"deletions":0,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FStaticReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FStaticReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FStaticReportlet.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.syncope.core.report;\n+\n+import org.springframework.util.StringUtils;\n+import org.syncope.client.report.StaticReportletConf;\n+import org.xml.sax.ContentHandler;\n+import org.xml.sax.SAXException;\n+\n+@ReportletConfClass(StaticReportletConf.class)\n+public class StaticReportlet extends AbstractReportlet<StaticReportletConf> {\n+\n+    @Override\n+    public void doExtract(final ContentHandler handler)\n+            throws SAXException, ReportException {\n+\n+        if (StringUtils.hasText(conf.getStringField())) {\n+            handler.startElement(\"\", \"\", \"string\", null);\n+            handler.characters(conf.getStringField().toCharArray(), 0, conf.getStringField().length() - 1);\n+            handler.endElement(\"\", \"\", \"string\");\n+        }\n+\n+        if (conf.getLongField() != null) {\n+            handler.startElement(\"\", \"\", \"long\", null);\n+            String printed = String.valueOf(conf.getLongField());\n+            handler.characters(printed.toCharArray(), 0, printed.length() - 1);\n+            handler.endElement(\"\", \"\", \"long\");\n+        }\n+\n+        if (conf.getDoubleField() != null) {\n+            handler.startElement(\"\", \"\", \"double\", null);\n+            String printed = String.valueOf(conf.getDoubleField());\n+            handler.characters(printed.toCharArray(), 0, printed.length() - 1);\n+            handler.endElement(\"\", \"\", \"double\");\n+        }\n+\n+        if (conf.getDateField() != null) {\n+            handler.startElement(\"\", \"\", \"date\", null);\n+            String printed = DATE_FORMAT.get().format(conf.getDateField());\n+            handler.characters(printed.toCharArray(), 0, printed.length() - 1);\n+            handler.endElement(\"\", \"\", \"date\");\n+        }\n+\n+        if (conf.getTraceLevel() != null) {\n+            handler.startElement(\"\", \"\", \"enum\", null);\n+            String printed = conf.getTraceLevel().name();\n+            handler.characters(printed.toCharArray(), 0, printed.length() - 1);\n+            handler.endElement(\"\", \"\", \"enum\");\n+        }\n+\n+        if (conf.getListField() != null && !conf.getListField().isEmpty()) {\n+            handler.startElement(\"\", \"\", \"list\", null);\n+            for (String item : conf.getListField()) {\n+                if (StringUtils.hasText(item)) {\n+                    handler.startElement(\"\", \"\", \"string\", null);\n+                    handler.characters(item.toCharArray(), 0, item.length() - 1);\n+                    handler.endElement(\"\", \"\", \"string\");\n+                }\n+            }\n+            handler.endElement(\"\", \"\", \"list\");\n+        }\n+    }\n+}"},{"sha":"d2e13a7307ff7c9eeff78c44a2a5a1720644d32b","filename":"core/src/main/java/org/syncope/core/report/UserReportlet.java","status":"modified","additions":20,"deletions":73,"changes":93,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -18,16 +18,11 @@\n  */\n package org.syncope.core.report;\n \n-import java.text.SimpleDateFormat;\n import java.util.Collection;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.transaction.annotation.Transactional;\n-import org.syncope.client.SyncopeConstants;\n import org.syncope.client.report.UserReportletConf;\n import org.syncope.client.report.UserReportletConf.Feature;\n import org.syncope.client.to.AbstractAttributableTO;\n@@ -47,26 +42,11 @@\n import org.xml.sax.SAXException;\n import org.xml.sax.helpers.AttributesImpl;\n \n-public class UserReportlet extends AbstractReportlet {\n-\n-    /**\n-     * Logger.\n-     */\n-    private static final Logger LOG =\n-            LoggerFactory.getLogger(UserReportlet.class);\n+@ReportletConfClass(UserReportletConf.class)\n+public class UserReportlet extends AbstractReportlet<UserReportletConf> {\n \n     private final static int PAGE_SIZE = 10;\n \n-    private static final ThreadLocal<SimpleDateFormat> DATE_FORMAT =\n-            new ThreadLocal<SimpleDateFormat>() {\n-\n-                @Override\n-                protected SimpleDateFormat initialValue() {\n-                    return new SimpleDateFormat(\n-                            SyncopeConstants.DEFAULT_DATE_PATTERN);\n-                }\n-            };\n-\n     @Autowired\n     private EntitlementDAO entitlementDAO;\n \n@@ -82,21 +62,16 @@ protected SimpleDateFormat initialValue() {\n     @Autowired\n     private RoleDataBinder roleDataBinder;\n \n-    private List<SyncopeUser> getPagedUsers(final UserReportletConf conf,\n-            final int page) {\n-\n-        Set<Long> adminRoleIds =\n-                EntitlementUtil.getRoleIds(entitlementDAO.findAll());\n+    private List<SyncopeUser> getPagedUsers(final int page) {\n+        Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(entitlementDAO.findAll());\n \n         return conf.getMatchingCond() == null\n                 ? userDAO.findAll(adminRoleIds, page, PAGE_SIZE)\n-                : searchDAO.search(adminRoleIds, conf.getMatchingCond(),\n-                page, PAGE_SIZE);\n+                : searchDAO.search(adminRoleIds, conf.getMatchingCond(), page, PAGE_SIZE);\n     }\n \n-    private int count(final UserReportletConf conf) {\n-        Set<Long> adminRoleIds =\n-                EntitlementUtil.getRoleIds(entitlementDAO.findAll());\n+    private int count() {\n+        Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(entitlementDAO.findAll());\n \n         return conf.getMatchingCond() == null\n                 ? userDAO.count(adminRoleIds)\n@@ -225,9 +200,7 @@ private void doExtractAttributes(final ContentHandler handler,\n         }\n     }\n \n-    private void doExtract(final ContentHandler handler,\n-            final UserReportletConf conf,\n-            final List<SyncopeUser> users)\n+    private void doExtract(final ContentHandler handler, final List<SyncopeUser> users)\n             throws SAXException, ReportException {\n \n         AttributesImpl atts = new AttributesImpl();\n@@ -261,28 +234,24 @@ private void doExtract(final ContentHandler handler,\n                     case creationDate:\n                         type = XSD_DATETIME;\n                         value = user.getCreationDate() == null ? \"\"\n-                                : DATE_FORMAT.get().format(\n-                                user.getCreationDate());\n+                                : DATE_FORMAT.get().format(user.getCreationDate());\n                         break;\n \n                     case lastLoginDate:\n                         type = XSD_DATETIME;\n                         value = user.getLastLoginDate() == null ? \"\"\n-                                : DATE_FORMAT.get().\n-                                format(user.getLastLoginDate());\n+                                : DATE_FORMAT.get().format(user.getLastLoginDate());\n                         break;\n \n                     case changePwdDate:\n                         type = XSD_DATETIME;\n                         value = user.getChangePwdDate() == null ? \"\"\n-                                : DATE_FORMAT.get().format(\n-                                user.getChangePwdDate());\n+                                : DATE_FORMAT.get().format(user.getChangePwdDate());\n                         break;\n \n                     case passwordHistorySize:\n                         type = XSD_INT;\n-                        value = String.valueOf(\n-                                user.getPasswordHistory().size());\n+                        value = String.valueOf(user.getPasswordHistory().size());\n                         break;\n \n                     case failedLoginCount:\n@@ -313,12 +282,9 @@ private void doExtract(final ContentHandler handler,\n                 for (MembershipTO memb : userTO.getMemberships()) {\n                     atts.clear();\n \n-                    atts.addAttribute(\"\", \"\", \"id\", XSD_LONG,\n-                            String.valueOf(memb.getId()));\n-                    atts.addAttribute(\"\", \"\", \"roleId\", XSD_LONG,\n-                            String.valueOf(memb.getRoleId()));\n-                    atts.addAttribute(\"\", \"\", \"roleName\", XSD_STRING,\n-                            String.valueOf(memb.getRoleName()));\n+                    atts.addAttribute(\"\", \"\", \"id\", XSD_LONG, String.valueOf(memb.getId()));\n+                    atts.addAttribute(\"\", \"\", \"roleId\", XSD_LONG, String.valueOf(memb.getRoleId()));\n+                    atts.addAttribute(\"\", \"\", \"roleName\", XSD_STRING, String.valueOf(memb.getRoleName()));\n                     handler.startElement(\"\", \"\", \"membership\", atts);\n \n                     doExtractAttributes(handler, memb,\n@@ -327,11 +293,9 @@ private void doExtract(final ContentHandler handler,\n                             memb.getVirtualAttributeMap().keySet());\n \n                     if (conf.getFeatures().contains(Feature.resources)) {\n-                        Membership actualMemb =\n-                                user.getMembership(memb.getRoleId());\n+                        Membership actualMemb = user.getMembership(memb.getRoleId());\n                         if (actualMemb == null) {\n-                            LOG.warn(\"Unexpected: cannot find membership for \"\n-                                    + \"role {} for user {}\",\n+                            LOG.warn(\"Unexpected: cannot find membership for role {} for user {}\",\n                                     memb.getRoleId(), user);\n                         } else {\n                             doExtractResources(handler,\n@@ -355,28 +319,11 @@ private void doExtract(final ContentHandler handler,\n     }\n \n     @Override\n-    @Transactional(readOnly = true)\n-    public void extract(final ContentHandler handler)\n+    protected void doExtract(final ContentHandler handler)\n             throws SAXException, ReportException {\n \n-        if (getConf() == null || !(getConf() instanceof UserReportletConf)) {\n-            throw new ReportException(\n-                    new IllegalArgumentException(\"Expected \"\n-                    + UserReportletConf.class.getName()\n-                    + \", got \" + getConf()));\n+        for (int i = 1; i <= (count() / PAGE_SIZE) + 1; i++) {\n+            doExtract(handler, getPagedUsers(i));\n         }\n-\n-        UserReportletConf conf = (UserReportletConf) getConf();\n-\n-        AttributesImpl atts = new AttributesImpl();\n-        atts.addAttribute(\"\", \"\", ATTR_NAME, XSD_STRING, getConf().getName());\n-        atts.addAttribute(\"\", \"\", ATTR_CLASS, XSD_STRING, getClass().getName());\n-        handler.startElement(\"\", \"\", ELEMENT_REPORTLET, atts);\n-\n-        for (int i = 1; i <= (count(conf) / PAGE_SIZE) + 1; i++) {\n-            doExtract(handler, conf, getPagedUsers(conf, i));\n-        }\n-\n-        handler.endElement(\"\", \"\", ELEMENT_REPORTLET);\n     }\n }"},{"sha":"d1e55323221cbd58c69001b426b2769f655b2dee","filename":"core/src/main/java/org/syncope/core/rest/controller/ReportController.java","status":"modified","additions":10,"deletions":29,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FReportController.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -20,7 +20,6 @@\n \n import java.io.ByteArrayInputStream;\n import java.io.IOException;\n-import java.lang.reflect.Modifier;\n import java.util.ArrayList;\n import java.util.Date;\n import java.util.HashMap;\n@@ -38,15 +37,11 @@\n import org.apache.cocoon.sax.component.XMLGenerator;\n import org.apache.cocoon.sax.component.XMLSerializer;\n import org.apache.cocoon.sax.component.XSLTTransformer;\n-import org.apache.commons.lang.ArrayUtils;\n import org.apache.xmlgraphics.util.MimeConstants;\n import org.quartz.JobDataMap;\n import org.quartz.Scheduler;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.core.io.Resource;\n import org.springframework.core.io.support.ResourcePatternResolver;\n-import org.springframework.core.type.ClassMetadata;\n-import org.springframework.core.type.classreading.CachingMetadataReaderFactory;\n import org.springframework.http.HttpStatus;\n import org.springframework.http.MediaType;\n import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n@@ -59,6 +54,7 @@\n import org.springframework.web.bind.annotation.RequestMethod;\n import org.springframework.web.bind.annotation.RequestParam;\n import org.springframework.web.servlet.ModelAndView;\n+import org.syncope.client.report.ReportletConf;\n import org.syncope.client.to.ReportExecTO;\n import org.syncope.client.to.ReportTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n@@ -68,7 +64,6 @@\n import org.syncope.core.persistence.beans.ReportExec;\n import org.syncope.core.persistence.dao.ReportDAO;\n import org.syncope.core.persistence.dao.ReportExecDAO;\n-import org.syncope.core.report.AbstractReportlet;\n import org.syncope.core.report.Reportlet;\n import org.syncope.core.rest.data.ReportDataBinder;\n import org.syncope.types.ReportExecExportFormat;\n@@ -196,33 +191,19 @@ public List<ReportExecTO> listExecutions() {\n     }\n \n     @PreAuthorize(\"hasRole('REPORT_LIST')\")\n-    @RequestMapping(method = RequestMethod.GET, value = \"/reportletClasses\")\n-    public ModelAndView getReportletClasses() {\n-        CachingMetadataReaderFactory cachingMetadataReaderFactory = new CachingMetadataReaderFactory();\n-\n-        Set<String> reportletClasses = new HashSet<String>();\n-        try {\n-            for (Resource resource : resResolver.getResources(\"classpath*:**/*.class\")) {\n-                ClassMetadata metadata = cachingMetadataReaderFactory.getMetadataReader(resource).getClassMetadata();\n-                if (ArrayUtils.contains(metadata.getInterfaceNames(), Reportlet.class.getName())\n-                        || AbstractReportlet.class.getName().equals(metadata.getSuperClassName())) {\n-\n-                    try {\n-                        Class jobClass = Class.forName(metadata.getClassName());\n-                        if (!Modifier.isAbstract(jobClass.getModifiers())) {\n-                            reportletClasses.add(jobClass.getName());\n-                        }\n-                    } catch (ClassNotFoundException e) {\n-                        LOG.error(\"Could not load class {}\", metadata.getClassName(), e);\n-                    }\n-                }\n+    @RequestMapping(method = RequestMethod.GET, value = \"/reportletConfClasses\")\n+    public ModelAndView getReportletConfClasses() {\n+        Set<String> reportletConfClasses = new HashSet<String>();\n+\n+        for (Class<Reportlet> reportletClass : binder.getAllReportletClasses()) {\n+            Class<? extends ReportletConf> reportletConfClass = binder.getReportletConfClass(reportletClass);\n+            if (reportletConfClass != null) {\n+                reportletConfClasses.add(reportletConfClass.getName());\n             }\n-        } catch (IOException e) {\n-            LOG.error(\"While searching for class implementing {}\", Reportlet.class.getName(), e);\n         }\n \n         ModelAndView result = new ModelAndView();\n-        result.addObject(reportletClasses);\n+        result.addObject(reportletConfClasses);\n         return result;\n     }\n "},{"sha":"1acd57212b4835ad436dc5ae3d642e0cf321608a","filename":"core/src/main/java/org/syncope/core/rest/data/ReportDataBinder.java","status":"modified","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FReportDataBinder.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -18,13 +18,22 @@\n  */\n package org.syncope.core.rest.data;\n \n+import java.io.IOException;\n+import java.lang.reflect.Modifier;\n+import java.util.HashSet;\n+import java.util.Set;\n+import org.apache.commons.lang.ArrayUtils;\n import org.quartz.Scheduler;\n import org.quartz.SchedulerException;\n import org.quartz.Trigger;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.BeanUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.Resource;\n+import org.springframework.core.io.support.ResourcePatternResolver;\n+import org.springframework.core.type.ClassMetadata;\n+import org.springframework.core.type.classreading.CachingMetadataReaderFactory;\n import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n import org.springframework.stereotype.Component;\n import org.syncope.client.report.ReportletConf;\n@@ -34,6 +43,9 @@\n import org.syncope.core.persistence.beans.Report;\n import org.syncope.core.persistence.beans.ReportExec;\n import org.syncope.core.persistence.dao.ReportExecDAO;\n+import org.syncope.core.report.AbstractReportlet;\n+import org.syncope.core.report.Reportlet;\n+import org.syncope.core.report.ReportletConfClass;\n \n @Component\n public class ReportDataBinder {\n@@ -56,6 +68,59 @@ public class ReportDataBinder {\n     @Autowired\n     private SchedulerFactoryBean scheduler;\n \n+    @Autowired\n+    private ResourcePatternResolver resResolver;\n+\n+    public Set<Class<Reportlet>> getAllReportletClasses() {\n+        CachingMetadataReaderFactory cachingMetadataReaderFactory = new CachingMetadataReaderFactory();\n+\n+        Set<Class<Reportlet>> reportletClasses = new HashSet<Class<Reportlet>>();\n+        try {\n+            for (Resource resource : resResolver.getResources(\"classpath*:**/*.class\")) {\n+                ClassMetadata metadata = cachingMetadataReaderFactory.getMetadataReader(resource).getClassMetadata();\n+                if (ArrayUtils.contains(metadata.getInterfaceNames(), Reportlet.class.getName())\n+                        || AbstractReportlet.class.getName().equals(metadata.getSuperClassName())) {\n+\n+                    try {\n+                        Class jobClass = Class.forName(metadata.getClassName());\n+                        if (!Modifier.isAbstract(jobClass.getModifiers())) {\n+                            reportletClasses.add(jobClass);\n+                        }\n+                    } catch (ClassNotFoundException e) {\n+                        LOG.error(\"Could not load class {}\", metadata.getClassName(), e);\n+                    }\n+                }\n+            }\n+        } catch (IOException e) {\n+            LOG.error(\"While searching for class implementing {}\", Reportlet.class.getName(), e);\n+        }\n+\n+        return reportletClasses;\n+    }\n+\n+    public Class<? extends ReportletConf> getReportletConfClass(final Class<Reportlet> reportletClass) {\n+        Class<? extends ReportletConf> result = null;\n+\n+        ReportletConfClass annotation = reportletClass.getAnnotation(ReportletConfClass.class);\n+        if (annotation != null) {\n+            result = annotation.value();\n+        }\n+\n+        return result;\n+    }\n+\n+    public Class<Reportlet> findReportletClassHavingConfClass(final Class<? extends ReportletConf> reportletConfClass) {\n+        Class<Reportlet> result = null;\n+        for (Class<Reportlet> reportletClass : getAllReportletClasses()) {\n+            Class<? extends ReportletConf> found = getReportletConfClass(reportletClass);\n+            if (found != null && found.equals(reportletConfClass)) {\n+                result = reportletClass;\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n     public void getReport(final Report report, final ReportTO reportTO) {\n         BeanUtils.copyProperties(reportTO, report, IGNORE_REPORT_PROPERTIES);\n         report.setReportletConfs(null);"},{"sha":"ade4e645cf1abcecb5b1e9a25864ee45b102160c","filename":"core/src/main/java/org/syncope/core/scheduling/ReportJob.java","status":"modified","additions":11,"deletions":24,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FReportJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FReportJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fscheduling%2FReportJob.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -46,6 +46,7 @@\n import org.syncope.core.persistence.dao.ReportExecDAO;\n import org.syncope.core.report.ReportException;\n import org.syncope.core.report.Reportlet;\n+import org.syncope.core.rest.data.ReportDataBinder;\n import static org.syncope.core.scheduling.ReportXMLConst.ATTR_NAME;\n import static org.syncope.core.scheduling.ReportXMLConst.ELEMENT_REPORT;\n import static org.syncope.core.scheduling.ReportXMLConst.XSD_STRING;\n@@ -61,8 +62,7 @@ public class ReportJob implements StatefulJob {\n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-            ReportJob.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(ReportJob.class);\n \n     /**\n      * Report DAO.\n@@ -76,6 +76,9 @@ public class ReportJob implements StatefulJob {\n     @Autowired\n     private ReportExecDAO reportExecDAO;\n \n+    @Autowired\n+    private ReportDataBinder dataBinder;\n+\n     /**\n      * Id, set by the caller, for identifying the report to be executed.\n      */\n@@ -96,8 +99,7 @@ public void execute(final JobExecutionContext context)\n \n         Report report = reportDAO.find(reportId);\n         if (report == null) {\n-            throw new JobExecutionException(\n-                    \"Report \" + reportId + \" not found\");\n+            throw new JobExecutionException(\"Report \" + reportId + \" not found\");\n         }\n \n         // 1. create execution\n@@ -114,8 +116,7 @@ public void execute(final JobExecutionContext context)\n         ZipOutputStream zos = new ZipOutputStream(baos);\n         zos.setLevel(Deflater.BEST_COMPRESSION);\n         try {\n-            SAXTransformerFactory transformerFactory =\n-                    (SAXTransformerFactory) SAXTransformerFactory.newInstance();\n+            SAXTransformerFactory transformerFactory = (SAXTransformerFactory) SAXTransformerFactory.newInstance();\n             handler = transformerFactory.newTransformerHandler();\n             Transformer serializer = handler.getTransformer();\n             serializer.setOutputProperty(OutputKeys.ENCODING, \"UTF-8\");\n@@ -134,9 +135,7 @@ public void execute(final JobExecutionContext context)\n         execution.setStatus(ReportExecStatus.RUNNING);\n         execution = reportExecDAO.save(execution);\n \n-        ConfigurableListableBeanFactory beanFactory =\n-                ApplicationContextManager.getApplicationContext().\n-                getBeanFactory();\n+        ConfigurableListableBeanFactory beanFactory = ApplicationContextManager.getApplicationContext().getBeanFactory();\n \n         // 3. actual report execution\n         StringBuilder reportExecutionMessage = new StringBuilder();\n@@ -150,19 +149,9 @@ public void execute(final JobExecutionContext context)\n \n             // iterate over reportlet instances defined for this report\n             for (ReportletConf reportletConf : report.getReportletConfs()) {\n-                Class reportletClass = null;\n-                try {\n-                    reportletClass = Class.forName(\n-                            reportletConf.getReportletClassName());\n-                } catch (ClassNotFoundException e) {\n-                    LOG.error(\"Reportlet class not found: {}\",\n-                            reportletConf.getReportletClassName(), e);\n-\n-                }\n-\n+                Class<Reportlet> reportletClass = dataBinder.findReportletClassHavingConfClass(reportletConf.getClass());\n                 if (reportletClass != null) {\n-                    Reportlet autowired =\n-                            (Reportlet) beanFactory.createBean(reportletClass,\n+                    Reportlet autowired = (Reportlet) beanFactory.createBean(reportletClass,\n                             AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n                     autowired.setConf(reportletConf);\n \n@@ -187,9 +176,7 @@ public void execute(final JobExecutionContext context)\n             handler.endElement(\"\", \"\", ELEMENT_REPORT);\n             handler.endDocument();\n \n-            if (!ReportExecStatus.FAILURE.name().\n-                    equals(execution.getStatus())) {\n-\n+            if (!ReportExecStatus.FAILURE.name().equals(execution.getStatus())) {\n                 execution.setStatus(ReportExecStatus.SUCCESS);\n             }\n         } catch (Exception e) {"},{"sha":"aa860ecfef7e476606cfa29b4cce470692e63c55","filename":"core/src/main/resources/report/report2fo.xsl","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fresources%2Freport%2Freport2fo.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fresources%2Freport%2Freport2fo.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Freport%2Freport2fo.xsl?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -24,6 +24,7 @@ under the License.\n                 version=\"1.0\">\n \n   <xsl:import href=\"userReportlet2fo.xsl\"/>\n+  <xsl:import href=\"staticReportlet2fo.xsl\"/>\n  \n   <xsl:param name=\"status\"/>\n   <xsl:param name=\"message\"/>\n@@ -48,7 +49,7 @@ under the License.\n \t\n \t<fo:flow flow-name=\"xsl-region-body\">\n \t  <fo:block font-size=\"24pt\" font-weight=\"bold\" text-align=\"center\" space-after=\"1cm\">\n-\t    Syncope Report - <xsl:value-of select=\"report/@name\"/>\n+\t    Apache Syncope Report - <xsl:value-of select=\"report/@name\"/>\n \t  </fo:block>\n \n \t  <fo:table table-layout=\"fixed\" border-width=\"0.5mm\" border-style=\"solid\" width=\"100%\" space-after=\"1cm\">"},{"sha":"b5360091e38d731eb3a8e7344a4633632bfa7463","filename":"core/src/main/resources/report/report2html.xsl","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fresources%2Freport%2Freport2html.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fresources%2Freport%2Freport2html.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Freport%2Freport2html.xsl?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -23,6 +23,7 @@ under the License.\n                 version=\"1.0\">\n \n   <xsl:import href=\"userReportlet2html.xsl\"/>\n+  <xsl:import href=\"staticReportlet2html.xsl\"/>\n  \n   <xsl:param name=\"status\"/>\n   <xsl:param name=\"message\"/>\n@@ -33,7 +34,7 @@ under the License.\n     <html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n       <head>\n \t<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" />\n-\t<title>Syncope Report - <xsl:value-of select=\"report/@name\"/></title>\n+\t<title>Apache Syncope Report - <xsl:value-of select=\"report/@name\"/></title>\n       </head>\n       <body>\n \t<table style=\"border: 1px solid black;\">"},{"sha":"988e41c905cb37d8205a2f61798dcfffbe34d321","filename":"core/src/main/resources/report/staticReportlet2fo.xsl","status":"added","additions":84,"deletions":0,"changes":84,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2fo.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2fo.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2fo.xsl?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -0,0 +1,84 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+\n+-->\n+\n+<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n+                xmlns:fo=\"http://www.w3.org/1999/XSL/Format\"\n+                version=\"1.0\">\n+\n+    <xsl:template match=\"reportlet[@class='org.syncope.core.report.StaticReportlet']\">\n+\n+        <fo:block font-size=\"14pt\" font-weight=\"bold\" space-after=\"0.5cm\">Reportlet: \n+            <xsl:value-of select=\"@name\"/>\n+        </fo:block>\n+\n+        <xsl:if test=\"string-length(string/text()) &gt; 0\">\n+            <fo:block font-size=\"11pt\">String value: \n+                <xsl:value-of select=\"string/text()\"/>\n+            </fo:block>\n+        </xsl:if>\n+\n+        <xsl:if test=\"string-length(long/text()) &gt; 0\">\n+            <fo:block font-size=\"11pt\">Long value: \n+                <xsl:value-of select=\"long/text()\"/>\n+            </fo:block>\n+        </xsl:if>\n+\n+        <xsl:if test=\"string-length(double/text()) &gt; 0\">\n+            <fo:block font-size=\"11pt\">Double value: \n+                <xsl:value-of select=\"double/text()\"/>\n+            </fo:block>\n+        </xsl:if>\n+\n+        <xsl:if test=\"string-length(date/text()) &gt; 0\">\n+            <fo:block font-size=\"11pt\">Date value: \n+                <xsl:value-of select=\"date/text()\"/>\n+            </fo:block>\n+        </xsl:if>\n+\n+        <xsl:if test=\"string-length(enum/text()) &gt; 0\">\n+            <fo:block font-size=\"11pt\">Enum value: \n+                <xsl:value-of select=\"enum/text()\"/>\n+            </fo:block>\n+        </xsl:if>\n+\n+        <xsl:if test=\"string-length(list) &gt; 0\">\n+            <fo:block font-size=\"11pt\">List values:</fo:block>\n+            \n+            <fo:list-block provisional-label-separation=\"4mm\" provisional-distance-between-starts=\"2mm\">\n+                <xsl:for-each select=\"list/string\">\n+                    <xsl:if test=\"string-length(string/text()) &gt; 0\">\n+                        <fo:list-item>\n+                            <fo:list-item-label end-indent=\"label-end()\">\n+                                <fo:block>&#x2022;</fo:block>\n+                            </fo:list-item-label>\n+                            <fo:list-item-body start-indent=\"body-start()\">\n+                                <fo:block>\n+                                    <xsl:value-of select=\"text()\"/>\n+                                </fo:block>\n+                            </fo:list-item-body>\n+                        </fo:list-item>\n+                    </xsl:if>\n+                </xsl:for-each>\n+            </fo:list-block>\n+        </xsl:if>\n+        \n+    </xsl:template>\n+</xsl:stylesheet>\n\\ No newline at end of file"},{"sha":"1f4998a987391a1cbdd0e81ceb6f9222b7f5e633","filename":"core/src/main/resources/report/staticReportlet2html.xsl","status":"added","additions":74,"deletions":0,"changes":74,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2html.xsl","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2html.xsl","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Freport%2FstaticReportlet2html.xsl?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -0,0 +1,74 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+\n+-->\n+\n+<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n+                version=\"1.0\">\n+\n+    <xsl:template match=\"reportlet[@class='org.syncope.core.report.StaticReportlet']\">\n+        <h2>Reportlet: \n+            <xsl:value-of select=\"@name\"/>\n+        </h2>\n+        \n+        <xsl:if test=\"string-length(string/text()) &gt; 0\">\n+            <p>String value:                 \n+                <xsl:value-of select=\"string/text()\"/>\n+            </p>\n+        </xsl:if>\n+\n+        <xsl:if test=\"string-length(long/text()) &gt; 0\">\n+            <p>Long value: \n+                <xsl:value-of select=\"long/text()\"/>\n+            </p>\n+        </xsl:if>\n+\n+        <xsl:if test=\"string-length(double/text()) &gt; 0\">\n+            <p>Double value: \n+                <xsl:value-of select=\"double/text()\"/>\n+            </p>\n+        </xsl:if>\n+\n+        <xsl:if test=\"string-length(date/text()) &gt; 0\">\n+            <p>Date value: \n+                <xsl:value-of select=\"date/text()\"/>\n+            </p>\n+        </xsl:if>\n+\n+        <xsl:if test=\"string-length(enum/text()) &gt; 0\">\n+            <p>Enum value: \n+                <xsl:value-of select=\"enum/text()\"/>\n+            </p>\n+        </xsl:if>\n+\n+        <xsl:if test=\"string-length(list) &gt; 0\">\n+            <p>List values:</p>\n+            \n+            <ul>\n+                <xsl:for-each select=\"list/string\">\n+                    <xsl:if test=\"string-length(string/text()) &gt; 0\">\n+                        <li>\n+                            <xsl:value-of select=\"text()\"/>\n+                        </li>\n+                    </xsl:if>\n+                </xsl:for-each>\n+            </ul>\n+        </xsl:if>\n+    </xsl:template>\n+</xsl:stylesheet>\n\\ No newline at end of file"},{"sha":"0d3dfbbfd2b51c668ffaa0beb719d27ef38d38d3","filename":"core/src/test/java/org/syncope/core/rest/ConnInstanceTestITCase.java","status":"modified","additions":75,"deletions":74,"changes":149,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -45,13 +45,13 @@\n import org.syncope.types.ConnectorCapability;\n \n public class ConnInstanceTestITCase extends AbstractTest {\n-\n+    \n     private static String connidSoapVersion;\n-\n+    \n     private static String connidDbTableVersion;\n-\n+    \n     private static String bundlesDirectory;\n-\n+    \n     @BeforeClass\n     public static void init() {\n         Properties props = new Properties();\n@@ -77,15 +77,15 @@ public static void init() {\n         assertNotNull(connidSoapVersion);\n         assertNotNull(bundlesDirectory);\n     }\n-\n+    \n     @Test(expected = SyncopeClientCompositeErrorException.class)\n     public void createWithException() {\n         ConnInstanceTO connectorTO = new ConnInstanceTO();\n-\n+        \n         restTemplate.postForObject(BASE_URL + \"connector/create.json\",\n                 connectorTO, ConnInstanceTO.class);\n     }\n-\n+    \n     @Test\n     public void create() {\n         ConnInstanceTO connectorTO = new ConnInstanceTO();\n@@ -98,12 +98,12 @@ public void create() {\n \n         // set bundle name\n         connectorTO.setBundleName(\"org.connid.bundles.soap\");\n-\n+        \n         connectorTO.setDisplayName(\"Display name\");\n \n         // set the connector configuration using PropertyTO\n         Set<ConnConfProperty> conf = new HashSet<ConnConfProperty>();\n-\n+        \n         ConnConfPropSchema endpointSchema = new ConnConfPropSchema();\n         endpointSchema.setName(\"endpoint\");\n         endpointSchema.setType(String.class.getName());\n@@ -112,15 +112,15 @@ public void create() {\n         endpoint.setSchema(endpointSchema);\n         endpoint.setValues(Collections.singletonList(\n                 \"http://localhost:8888/wssample/services\"));\n-\n+        \n         ConnConfPropSchema servicenameSchema = new ConnConfPropSchema();\n         servicenameSchema.setName(\"servicename\");\n         servicenameSchema.setType(String.class.getName());\n         servicenameSchema.setRequired(true);\n         ConnConfProperty servicename = new ConnConfProperty();\n         servicename.setSchema(servicenameSchema);\n         servicename.setValues(Collections.singletonList(\"Provisioning\"));\n-\n+        \n         conf.add(endpoint);\n         conf.add(servicename);\n \n@@ -131,24 +131,24 @@ public void create() {\n         connectorTO.addCapability(ConnectorCapability.TWO_PHASES_CREATE);\n         connectorTO.addCapability(ConnectorCapability.ONE_PHASE_CREATE);\n         connectorTO.addCapability(ConnectorCapability.TWO_PHASES_UPDATE);\n-\n+        \n         ConnInstanceTO actual = restTemplate.postForObject(\n                 BASE_URL + \"connector/create.json\",\n                 connectorTO, ConnInstanceTO.class);\n-\n+        \n         assertNotNull(actual);\n-\n+        \n         assertEquals(actual.getBundleName(), connectorTO.getBundleName());\n         assertEquals(actual.getConnectorName(), connectorTO.getConnectorName());\n         assertEquals(actual.getVersion(), connectorTO.getVersion());\n         assertEquals(\"Display name\", actual.getDisplayName());\n         assertEquals(connectorTO.getCapabilities(), actual.getCapabilities());\n-\n+        \n         Throwable t = null;\n \n         // check for the updating\n         connectorTO.setId(actual.getId());\n-\n+        \n         connectorTO.removeCapability(ConnectorCapability.TWO_PHASES_UPDATE);\n         actual = null;\n         try {\n@@ -159,7 +159,7 @@ public void create() {\n             LOG.error(\"update failed\", e);\n             t = e;\n         }\n-\n+        \n         assertNull(t);\n         assertNotNull(actual);\n         assertEquals(connectorTO.getCapabilities(), actual.getCapabilities());\n@@ -173,7 +173,7 @@ public void create() {\n             LOG.error(\"delete failed\", e);\n             t = e;\n         }\n-\n+        \n         assertNull(t);\n \n         // check the non existence\n@@ -186,7 +186,7 @@ public void create() {\n             assertEquals(e.getStatusCode(), HttpStatus.NOT_FOUND);\n         }\n     }\n-\n+    \n     @Test\n     public void update() {\n         ConnInstanceTO connectorTO = new ConnInstanceTO();\n@@ -205,7 +205,7 @@ public void update() {\n \n         // set the connector configuration using PropertyTO\n         Set<ConnConfProperty> conf = new HashSet<ConnConfProperty>();\n-\n+        \n         ConnConfPropSchema endpointSchema = new ConnConfPropSchema();\n         endpointSchema.setName(\"endpoint\");\n         endpointSchema.setType(String.class.getName());\n@@ -215,38 +215,38 @@ public void update() {\n         endpoint.setValues(\n                 Collections.singletonList(\n                 \"http://localhost:8888/wssample/services\"));\n-\n+        \n         ConnConfPropSchema servicenameSchema = new ConnConfPropSchema();\n         servicenameSchema.setName(\"servicename\");\n         servicenameSchema.setType(String.class.getName());\n         servicenameSchema.setRequired(true);\n         ConnConfProperty servicename = new ConnConfProperty();\n         servicename.setSchema(servicenameSchema);\n         servicename.setValues(Collections.singletonList(\"Provisioning\"));\n-\n+        \n         conf.add(endpoint);\n         conf.add(servicename);\n \n         // set connector configuration\n         connectorTO.setConfiguration(conf);\n-\n+        \n         ConnInstanceTO actual = (ConnInstanceTO) restTemplate.postForObject(\n                 BASE_URL + \"connector/update.json\",\n                 connectorTO, ConnInstanceTO.class);\n-\n+        \n         assertNotNull(actual);\n-\n+        \n         actual = restTemplate.getForObject(\n                 BASE_URL + \"connector/read/{connectorId}\",\n                 ConnInstanceTO.class,\n                 String.valueOf(actual.getId()));\n-\n+        \n         assertNotNull(actual);\n         assertEquals(actual.getBundleName(), connectorTO.getBundleName());\n         assertEquals(actual.getConnectorName(), connectorTO.getConnectorName());\n         assertEquals(actual.getVersion(), connectorTO.getVersion());\n     }\n-\n+    \n     @Test\n     public void issueSYNCOPE10() {\n         // ----------------------------------\n@@ -256,14 +256,14 @@ public void issueSYNCOPE10() {\n         ConnInstanceTO connInstanceTO = restTemplate.getForObject(\n                 BASE_URL + \"connector/read/{connectorId}\",\n                 ConnInstanceTO.class, 103L);\n-\n+        \n         assertNotNull(connInstanceTO);\n \n         // check for resource\n         List<ResourceTO> resources = Arrays.asList(restTemplate.getForObject(\n                 BASE_URL + \"resource/list.json?connInstanceId=103\",\n                 ResourceTO[].class));\n-\n+        \n         assertEquals(1, resources.size());\n \n         // Retrieve a resource TO template.\n@@ -274,6 +274,7 @@ public void issueSYNCOPE10() {\n \n         // Make it new.\n         connInstanceTO.setId(0);\n+        connInstanceTO.setDisplayName(\"newDisplayName\");\n         // ----------------------------------\n \n         // ----------------------------------\n@@ -282,10 +283,10 @@ public void issueSYNCOPE10() {\n         connInstanceTO = restTemplate.postForObject(\n                 BASE_URL + \"connector/create.json\",\n                 connInstanceTO, ConnInstanceTO.class);\n-\n+        \n         assertNotNull(connInstanceTO);\n         assertTrue(connInstanceTO.getCapabilities().isEmpty());\n-\n+        \n         long connId = connInstanceTO.getId();\n \n         // Link resourceTO to the new connector instance.\n@@ -298,13 +299,13 @@ public void issueSYNCOPE10() {\n         resourceTO = restTemplate.postForObject(\n                 BASE_URL + \"resource/create.json\",\n                 resourceTO, ResourceTO.class);\n-\n+        \n         assertNotNull(resourceTO);\n-\n+        \n         resources = Arrays.asList(restTemplate.getForObject(\n                 BASE_URL + \"resource/list.json?connInstanceId=\" + connId,\n                 ResourceTO[].class));\n-\n+        \n         assertEquals(1, resources.size());\n         // ----------------------------------\n \n@@ -314,7 +315,7 @@ public void issueSYNCOPE10() {\n         ConnInstanceTO connInstanceBean = restTemplate.getForObject(\n                 BASE_URL + \"connector/{resourceName}/connectorBean\",\n                 ConnInstanceTO.class, resourceTO.getName());\n-\n+        \n         assertNotNull(connInstanceBean);\n         assertTrue(connInstanceBean.getCapabilities().isEmpty());\n         // ----------------------------------\n@@ -323,23 +324,23 @@ public void issueSYNCOPE10() {\n         // Check for spring bean update after connector instance update.\n         // ----------------------------------\n         connInstanceTO.addCapability(ConnectorCapability.SEARCH);\n-\n+        \n         ConnInstanceTO actual = (ConnInstanceTO) restTemplate.postForObject(\n                 BASE_URL + \"connector/update.json\",\n                 connInstanceTO, ConnInstanceTO.class);\n-\n+        \n         assertNotNull(actual);\n         assertFalse(connInstanceTO.getCapabilities().isEmpty());\n \n         // check for spring bean update\n         connInstanceBean = restTemplate.getForObject(\n                 BASE_URL + \"connector/{resourceName}/connectorBean\",\n                 ConnInstanceTO.class, resourceTO.getName());\n-\n+        \n         assertFalse(connInstanceBean.getCapabilities().isEmpty());\n         // ----------------------------------\n     }\n-\n+    \n     @Test\n     public void deleteWithException() {\n         try {\n@@ -349,7 +350,7 @@ public void deleteWithException() {\n             assertEquals(HttpStatus.NOT_FOUND, e.getStatusCode());\n         }\n     }\n-\n+    \n     @Test\n     public void list() {\n         List<ConnInstanceTO> connectorInstanceTOs = Arrays.asList(\n@@ -361,16 +362,16 @@ public void list() {\n             assertNotNull(instance);\n         }\n     }\n-\n+    \n     @Test\n     public void read() {\n         ConnInstanceTO connectorInstanceTO = restTemplate.getForObject(\n                 BASE_URL + \"connector/read/{connectorId}.json\",\n                 ConnInstanceTO.class, \"100\");\n-\n+        \n         assertNotNull(connectorInstanceTO);\n     }\n-\n+    \n     @Test\n     public void getBundles() {\n         List<ConnBundleTO> bundles = Arrays.asList(\n@@ -383,7 +384,7 @@ public void getBundles() {\n             assertNotNull(bundle);\n         }\n     }\n-\n+    \n     @Test\n     public void getConnectorConfiguration() {\n         List<ConnConfProperty> props = Arrays.asList(restTemplate.getForObject(\n@@ -392,36 +393,36 @@ public void getConnectorConfiguration() {\n         assertNotNull(props);\n         assertFalse(props.isEmpty());\n     }\n-\n+    \n     @Test\n     public void checkHiddenProperty() {\n         ConnInstanceTO connInstanceTO = restTemplate.getForObject(\n                 BASE_URL + \"connector/read/{connectorId}.json\",\n                 ConnInstanceTO.class, \"100\");\n-\n+        \n         boolean check = false;\n-\n+        \n         for (ConnConfProperty prop : connInstanceTO.getConfiguration()) {\n             if (\"receiveTimeout\".equals(prop.getSchema().getName())) {\n                 check = true;\n             }\n         }\n         assertTrue(check);\n     }\n-\n+    \n     @Test\n     public void checkSelectedLanguage() {\n         // 1. Check Italian\n         List<ConnInstanceTO> connectorInstanceTOs =\n                 Arrays.asList(restTemplate.getForObject(\n                 BASE_URL + \"connector/list.json?lang=it\",\n                 ConnInstanceTO[].class));\n-\n+        \n         Map<String, ConnConfProperty> instanceConfMap;\n         for (ConnInstanceTO instance : connectorInstanceTOs) {\n             if (\"org.connid.bundles.db.table\".equals(\n                     instance.getBundleName())) {\n-\n+                \n                 instanceConfMap = instance.getConfigurationMap();\n                 assertEquals(\"Utente\", instanceConfMap.get(\"user\").\n                         getSchema().getDisplayName());\n@@ -433,21 +434,21 @@ public void checkSelectedLanguage() {\n                 Arrays.asList(restTemplate.getForObject(\n                 BASE_URL + \"connector/list.json\",\n                 ConnInstanceTO[].class));\n-\n+        \n         for (ConnInstanceTO instance : connectorInstanceTOs) {\n             if (\"org.connid.bundles.db.table\".equals(\n                     instance.getBundleName())) {\n-\n+                \n                 instanceConfMap = instance.getConfigurationMap();\n                 assertEquals(\"User\", instanceConfMap.get(\"user\").\n                         getSchema().getDisplayName());\n             }\n         }\n     }\n-\n+    \n     @Test\n     public void check() {\n-\n+        \n         ConnInstanceTO connectorTO = new ConnInstanceTO();\n \n         // set connector version\n@@ -458,28 +459,28 @@ public void check() {\n \n         // set bundle name\n         connectorTO.setBundleName(\"org.connid.bundles.db.table\");\n-\n+        \n         connectorTO.setDisplayName(\"H2Test\");\n \n         // set the connector configuration using PropertyTO\n         Set<ConnConfProperty> conf = new HashSet<ConnConfProperty>();\n-\n+        \n         ConnConfPropSchema userSchema = new ConnConfPropSchema();\n         userSchema.setName(\"user\");\n         userSchema.setType(String.class.getName());\n         userSchema.setRequired(false);\n         ConnConfProperty user = new ConnConfProperty();\n         user.setSchema(userSchema);\n         user.setValues(Collections.singletonList(\"sa\"));\n-\n+        \n         ConnConfPropSchema keyColumnSchema = new ConnConfPropSchema();\n         keyColumnSchema.setName(\"keyColumn\");\n         keyColumnSchema.setType(String.class.getName());\n         keyColumnSchema.setRequired(true);\n         ConnConfProperty keyColumn = new ConnConfProperty();\n         keyColumn.setSchema(keyColumnSchema);\n         keyColumn.setValues(Collections.singletonList(\"id\"));\n-\n+        \n         ConnConfPropSchema jdbcUrlTemplateSchema = new ConnConfPropSchema();\n         jdbcUrlTemplateSchema.setName(\"jdbcUrlTemplate\");\n         jdbcUrlTemplateSchema.setType(String.class.getName());\n@@ -488,39 +489,39 @@ public void check() {\n         jdbcUrlTemplate.setSchema(jdbcUrlTemplateSchema);\n         jdbcUrlTemplate.setValues(Collections.singletonList(\n                 \"jdbc:h2:tcp://localhost:9092/testdb\"));\n-\n+        \n         ConnConfPropSchema passwordColumnSchema = new ConnConfPropSchema();\n         passwordColumnSchema.setName(\"passwordColumn\");\n         passwordColumnSchema.setType(String.class.getName());\n         passwordColumnSchema.setRequired(true);\n         ConnConfProperty passwordColumn = new ConnConfProperty();\n         passwordColumn.setSchema(passwordColumnSchema);\n         passwordColumn.setValues(Collections.singletonList(\"password\"));\n-\n+        \n         ConnConfPropSchema tableSchema = new ConnConfPropSchema();\n         tableSchema.setName(\"table\");\n         tableSchema.setType(String.class.getName());\n         tableSchema.setRequired(true);\n         ConnConfProperty table = new ConnConfProperty();\n         table.setSchema(tableSchema);\n         table.setValues(Collections.singletonList(\"test\"));\n-\n+        \n         ConnConfPropSchema passwordSchema = new ConnConfPropSchema();\n         passwordSchema.setName(\"password\");\n         passwordSchema.setType(GuardedString.class.getName());\n         passwordSchema.setRequired(true);\n         ConnConfProperty password = new ConnConfProperty();\n         password.setSchema(passwordSchema);\n         password.setValues(Collections.singletonList(\"sa\"));\n-\n+        \n         ConnConfPropSchema jdbcDriverSchema = new ConnConfPropSchema();\n         jdbcDriverSchema.setName(\"jdbcDriver\");\n         jdbcDriverSchema.setType(String.class.getName());\n         jdbcDriverSchema.setRequired(true);\n         ConnConfProperty jdbcDriver = new ConnConfProperty();\n         jdbcDriver.setSchema(jdbcDriverSchema);\n         jdbcDriver.setValues(Collections.singletonList(\"org.h2.Driver\"));\n-\n+        \n         conf.add(user);\n         conf.add(keyColumn);\n         conf.add(jdbcUrlTemplate);\n@@ -531,53 +532,53 @@ public void check() {\n \n         // set connector configuration\n         connectorTO.setConfiguration(conf);\n-\n+        \n         Boolean verify = restTemplate.postForObject(\n                 BASE_URL + \"connector/check.json\",\n                 connectorTO, Boolean.class);\n-\n+        \n         assertTrue(verify);\n-\n+        \n         conf.remove(password);\n         password.setValues(Collections.singletonList(\"password\"));\n         conf.add(password);\n-\n+        \n         verify = restTemplate.postForObject(\n                 BASE_URL + \"connector/check.json\",\n                 connectorTO, Boolean.class);\n-\n+        \n         assertFalse(verify);\n     }\n-\n+    \n     @Test\n     public void getSchemaNames() {\n         ConnInstanceTO conn = restTemplate.getForObject(\n                 BASE_URL + \"connector/read/{connectorId}.json\",\n                 ConnInstanceTO.class, \"101\");\n-\n+        \n         List<String> schemaNames = Arrays.asList(restTemplate.postForObject(\n                 BASE_URL + \"connector/schema/list?showall=true\",\n                 conn, String[].class));\n         assertNotNull(schemaNames);\n         assertFalse(schemaNames.isEmpty());\n-\n+        \n         schemaNames = Arrays.asList(restTemplate.postForObject(\n                 BASE_URL + \"connector/schema/list\",\n                 conn, String[].class));\n         assertNotNull(schemaNames);\n         assertEquals(0, schemaNames.size());\n-\n+        \n         conn = restTemplate.getForObject(\n                 BASE_URL + \"connector/read/{connectorId}.json\",\n                 ConnInstanceTO.class, \"104\");\n \n         // to be used with overridden properties\n         conn.getConfiguration().clear();\n-\n+        \n         schemaNames = Arrays.asList(restTemplate.postForObject(\n                 BASE_URL + \"connector//schema/list?showall=true\",\n                 conn, String[].class, conn));\n         assertNotNull(schemaNames);\n         assertFalse(schemaNames.isEmpty());\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"801bfcf3550c8d56edbf854422260e9de659ac4d","filename":"core/src/test/java/org/syncope/core/rest/ReportTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FReportTestITCase.java?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -42,7 +42,7 @@ public class ReportTestITCase extends AbstractTest {\n     @Test\n     public void getReportletClasses() {\n         Set<String> reportletClasses = restTemplate.getForObject(\n-                BASE_URL + \"report/reportletClasses.json\", Set.class);\n+                BASE_URL + \"report/reportletConfClasses.json\", Set.class);\n         assertNotNull(reportletClasses);\n         assertFalse(reportletClasses.isEmpty());\n     }"},{"sha":"1cf8c316ae3c40cf0b5d9a341724398f6a89607e","filename":"parent/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/parent%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0eb93961a0798276d3ddf8ae7dec1a4824e24b15/parent%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/parent%2Fpom.xml?ref=0eb93961a0798276d3ddf8ae7dec1a4824e24b15","patch":"@@ -23,7 +23,7 @@ under the License.\n \n     <modelVersion>4.0.0</modelVersion>\n \n-    <name>Apache Syncope Parent</name>\n+    <name>Apache Syncope</name>\n     <description>Apache Syncope parent POM</description>\n         \n     <groupId>org.apache.syncope</groupId>"}]}