{"sha":"735c9422815931a2d4dea55c15242bb14a0e9acb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjczNWM5NDIyODE1OTMxYTJkNGRlYTU1YzE1MjQyYmIxNGEwZTlhY2I=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-11-16T10:48:30Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-11-16T10:48:30Z"},"message":"Merge from 1_0_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1410294 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e1b16bdd728fdb075ebd710c5924737ed6e58055","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e1b16bdd728fdb075ebd710c5924737ed6e58055"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/735c9422815931a2d4dea55c15242bb14a0e9acb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/735c9422815931a2d4dea55c15242bb14a0e9acb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/735c9422815931a2d4dea55c15242bb14a0e9acb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/735c9422815931a2d4dea55c15242bb14a0e9acb/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"245f98faf1b8b313ab358b7da481c1c9517fc6c0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/245f98faf1b8b313ab358b7da481c1c9517fc6c0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/245f98faf1b8b313ab358b7da481c1c9517fc6c0"}],"stats":{"total":74,"additions":46,"deletions":28},"files":[{"sha":"41a560877312c188ef939345d50c95db884acf47","filename":"client/src/main/java/org/apache/syncope/client/util/AttributableOperations.java","status":"modified","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/735c9422815931a2d4dea55c15242bb14a0e9acb/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/735c9422815931a2d4dea55c15242bb14a0e9acb/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java?ref=735c9422815931a2d4dea55c15242bb14a0e9acb","patch":"@@ -318,39 +318,35 @@ public static RoleMod diff(final RoleTO updated, final RoleTO original) {\n     private static List<AttributeTO> getUpdateValues(final Map<String, AttributeTO> attrs,\n             final Set<String> attrsToBeRemoved, final Set<AttributeMod> attrsToBeUpdated) {\n \n+        Map<String, AttributeTO> rwattrs = new HashMap<String, AttributeTO>(attrs);\n         for (String attrName : attrsToBeRemoved) {\n-            attrs.remove(attrName);\n+            rwattrs.remove(attrName);\n         }\n         for (AttributeMod attrMod : attrsToBeUpdated) {\n-            if (attrs.containsKey(attrMod.getSchema())) {\n-                AttributeTO attrTO = attrs.get(attrMod.getSchema());\n+            if (rwattrs.containsKey(attrMod.getSchema())) {\n+                AttributeTO attrTO = rwattrs.get(attrMod.getSchema());\n                 attrTO.getValues().removeAll(attrMod.getValuesToBeRemoved());\n                 attrTO.getValues().addAll(attrMod.getValuesToBeAdded());\n             } else {\n                 AttributeTO attrTO = new AttributeTO();\n                 attrTO.setSchema(attrMod.getSchema());\n                 attrTO.setValues(attrMod.getValuesToBeAdded());\n \n-                attrs.put(attrMod.getSchema(), attrTO);\n+                rwattrs.put(attrMod.getSchema(), attrTO);\n             }\n         }\n \n-        return new ArrayList<AttributeTO>(attrs.values());\n+        return new ArrayList<AttributeTO>(rwattrs.values());\n     }\n \n     private static <T extends AbstractAttributableTO, K extends AbstractAttributableMod> void apply(final T to,\n             final K mod, final T result) {\n \n-        // 1. check same id\n-        if (to.getId() != mod.getId()) {\n-            throw new IllegalArgumentException(\"AttributableTO and AttributableMod ids must be the same\");\n-        }\n-\n-        // 2. attributes\n+        // 1. attributes\n         result.setAttributes(getUpdateValues(to.getAttributeMap(), mod.getAttributesToBeRemoved(), mod.\n                 getAttributesToBeUpdated()));\n \n-        // 3. derived attributes\n+        // 2. derived attributes\n         Map<String, AttributeTO> attrs = to.getDerivedAttributeMap();\n         for (String attrName : mod.getDerivedAttributesToBeRemoved()) {\n             attrs.remove(attrName);\n@@ -363,18 +359,22 @@ private static <T extends AbstractAttributableTO, K extends AbstractAttributable\n         }\n         result.setDerivedAttributes(new ArrayList<AttributeTO>(attrs.values()));\n \n-        // 4. virtual attributes\n+        // 3. virtual attributes\n         result.setVirtualAttributes(getUpdateValues(to.getVirtualAttributeMap(), mod.getVirtualAttributesToBeRemoved(),\n                 mod.getVirtualAttributesToBeUpdated()));\n \n-        // 5. resources\n+        // 4. resources\n         result.getResources().removeAll(mod.getResourcesToBeRemoved());\n         result.getResources().addAll(mod.getResourcesToBeAdded());\n     }\n \n     public static UserTO apply(final UserTO userTO, final UserMod userMod) {\n-        UserTO result = clone(userTO);\n+        // 1. check same id\n+        if (userTO.getId() != userMod.getId()) {\n+            throw new IllegalArgumentException(\"UserTO and UserMod ids must be the same\");\n+        }\n \n+        UserTO result = clone(userTO);\n         apply(userTO, userMod, result);\n \n         // 1. password"},{"sha":"6b73e27d251357ff1b34f9288043e890794cd8f5","filename":"console/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/735c9422815931a2d4dea55c15242bb14a0e9acb/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/735c9422815931a2d4dea55c15242bb14a0e9acb/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=735c9422815931a2d4dea55c15242bb14a0e9acb","patch":"@@ -284,7 +284,7 @@ under the License.\n               <cargo.tomcat.ajp.port>${cargo.tomcat.ajp.port}</cargo.tomcat.ajp.port>\n               <cargo.rmi.port>${cargo.rmi.port}</cargo.rmi.port>\n \n-              <!--                            <cargo.jvmargs>-Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n</cargo.jvmargs>-->\n+              <!--<cargo.jvmargs>-Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n</cargo.jvmargs>-->\n               <cargo.jvmargs>-noverify ${javaagent} -Drebel.spring_plugin=false -Xms512m -Xmx1024m -XX:PermSize=512m -XX:MaxPermSize=1024m</cargo.jvmargs>\n             </properties>\n             <configfiles>"},{"sha":"bd701d93b294ff2ba7e9c6904145a6e1445bcab9","filename":"console/src/main/java/org/apache/syncope/console/pages/UserRequestModalPage.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/735c9422815931a2d4dea55c15242bb14a0e9acb/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/735c9422815931a2d4dea55c15242bb14a0e9acb/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUserRequestModalPage.java?ref=735c9422815931a2d4dea55c15242bb14a0e9acb","patch":"@@ -22,13 +22,13 @@\n import org.apache.syncope.client.to.UserRequestTO;\n import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.client.util.AttributableOperations;\n+import org.apache.syncope.console.rest.UserRequestRestClient;\n+import org.apache.syncope.console.rest.UserRestClient;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.apache.syncope.console.rest.UserRequestRestClient;\n-import org.apache.syncope.console.rest.UserRestClient;\n \n /**\n  * Modal window with User form.\n@@ -82,7 +82,6 @@ public UserRequestModalPage(final PageReference callerPageRef, final ModalWindow\n     }\n \n     public UserRequestModalPage(final ModalWindow window, final UserTO userTO, final Mode mode) {\n-\n         super(window, userTO, mode);\n     }\n \n@@ -107,8 +106,10 @@ protected void submitAction(final AjaxRequestTarget target, final Form form) {\n                     LOG.warn(\"Invalid mode specified for {}: {}\", getClass().getName(), mode);\n             }\n         } else {\n-            final UserMod userMod = AttributableOperations.diff(updatedUserTO,\n-                    userRestClient.read(updatedUserTO.getId()));\n+            final UserTO originalUserTO = mode == Mode.SELF\n+                    ? userRestClient.read(updatedUserTO.getUsername())\n+                    : userRestClient.read(updatedUserTO.getId());\n+            final UserMod userMod = AttributableOperations.diff(updatedUserTO, originalUserTO);\n \n             // update user only if it has changed\n             if (!userMod.isEmpty()) {"},{"sha":"cc60a72d46ddd046c09283cf05e0887fa0b1a929","filename":"console/src/main/java/org/apache/syncope/console/rest/UserRestClient.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/735c9422815931a2d4dea55c15242bb14a0e9acb/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/735c9422815931a2d4dea55c15242bb14a0e9acb/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java?ref=735c9422815931a2d4dea55c15242bb14a0e9acb","patch":"@@ -80,6 +80,17 @@ public UserTO read(Long id) {\n         return userTO;\n     }\n \n+    public UserTO read(String username) {\n+        UserTO userTO = null;\n+        try {\n+            userTO = SyncopeSession.get().getRestTemplate().getForObject(\n+                    baseURL + \"user/readByUsername/{username}.json\", UserTO.class, username);\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While reading a user\", e);\n+        }\n+        return userTO;\n+    }\n+\n     public Integer searchCount(final NodeCond searchCond) {\n         return SyncopeSession.get().getRestTemplate().postForObject(\n                 baseURL + \"user/search/count.json\", searchCond, Integer.class);"},{"sha":"7f2cff12cda6eb872c101bfc96b4c6f7581ee2ef","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/735c9422815931a2d4dea55c15242bb14a0e9acb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/735c9422815931a2d4dea55c15242bb14a0e9acb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=735c9422815931a2d4dea55c15242bb14a0e9acb","patch":"@@ -203,7 +203,7 @@ public UserTO read(@PathVariable(\"userId\") final Long userId)\n         return result;\n     }\n \n-    @PreAuthorize(\"hasRole('USER_READ')\")\n+    @PreAuthorize(\"#username == authentication.name or hasRole('USER_READ')\")\n     @RequestMapping(method = RequestMethod.GET, value = \"/readByUsername/{username}\")\n     @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n     public UserTO read(@PathVariable final String username)"},{"sha":"c4fb7a1f0a267b915b11f63b781cb0618a6cf4b4","filename":"core/src/main/java/org/apache/syncope/core/rest/data/UserDataBinder.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/735c9422815931a2d4dea55c15242bb14a0e9acb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/735c9422815931a2d4dea55c15242bb14a0e9acb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FUserDataBinder.java?ref=735c9422815931a2d4dea55c15242bb14a0e9acb","patch":"@@ -82,11 +82,13 @@ public SyncopeUser getUserFromId(final Long userId)\n             throw new NotFoundException(\"User \" + userId);\n         }\n \n-        Set<Long> roleIds = user.getRoleIds();\n-        Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames());\n-        roleIds.removeAll(adminRoleIds);\n-        if (!roleIds.isEmpty()) {\n-            throw new UnauthorizedRoleException(roleIds);\n+        if (!user.getUsername().equals(EntitlementUtil.getAuthenticatedUsername())) {\n+            Set<Long> roleIds = user.getRoleIds();\n+            Set<Long> adminRoleIds = EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames());\n+            roleIds.removeAll(adminRoleIds);\n+            if (!roleIds.isEmpty()) {\n+                throw new UnauthorizedRoleException(roleIds);\n+            }\n         }\n \n         return user;"},{"sha":"961236f235fb77d7ab051357e071f52b45a56e3b","filename":"core/src/main/java/org/apache/syncope/core/security/SyncopeAuthenticationProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/735c9422815931a2d4dea55c15242bb14a0e9acb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/735c9422815931a2d4dea55c15242bb14a0e9acb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java?ref=735c9422815931a2d4dea55c15242bb14a0e9acb","patch":"@@ -114,7 +114,7 @@ public Authentication authenticate(final Authentication authentication)\n         SyncopeUser passwordUser = new SyncopeUser();\n         SyncopeUser user = null;\n \n-        String username = authentication.getPrincipal().toString();\n+        String username = authentication.getName();\n \n         if (adminUser.equals(username)) {\n             authenticated = PasswordEncoder.verifyPassword("},{"sha":"faefada77091615f7cd1e02125cbdc84ac301515","filename":"core/src/main/java/org/apache/syncope/core/util/EntitlementUtil.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/735c9422815931a2d4dea55c15242bb14a0e9acb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/735c9422815931a2d4dea55c15242bb14a0e9acb/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FEntitlementUtil.java?ref=735c9422815931a2d4dea55c15242bb14a0e9acb","patch":"@@ -38,6 +38,10 @@ public final class EntitlementUtil {\n \n     private static final Logger LOG = LoggerFactory.getLogger(EntitlementUtil.class);\n \n+    public static String getAuthenticatedUsername() {\n+        return SecurityContextHolder.getContext().getAuthentication().getName();\n+    }\n+\n     public static Set<String> getOwnedEntitlementNames() {\n         final Set<String> result = new HashSet<String>();\n "}]}