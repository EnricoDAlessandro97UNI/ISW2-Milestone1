{"sha":"9c87e852dd949a83ea512ab22d97d377f0cced19","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjljODdlODUyZGQ5NDlhODNlYTUxMmFiMjJkOTdkMzc3ZjBjY2VkMTk=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-05-19T11:15:55Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-05-19T11:15:55Z"},"message":"Fix issue #1\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1245963 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"73e46184af41f15dc56a144e0f2cdf3c8e387042","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/73e46184af41f15dc56a144e0f2cdf3c8e387042"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9c87e852dd949a83ea512ab22d97d377f0cced19","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9c87e852dd949a83ea512ab22d97d377f0cced19","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9c87e852dd949a83ea512ab22d97d377f0cced19","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9c87e852dd949a83ea512ab22d97d377f0cced19/comments","author":null,"committer":null,"parents":[{"sha":"be8af5066b7fa41f30c9529363500cc13d6f9496","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/be8af5066b7fa41f30c9529363500cc13d6f9496","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/be8af5066b7fa41f30c9529363500cc13d6f9496"}],"stats":{"total":265,"additions":202,"deletions":63},"files":[{"sha":"f5df2c206e88c7fb5d92d1a379c0d260d306adc5","filename":"console/pom.xml","status":"modified","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c87e852dd949a83ea512ab22d97d377f0cced19/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c87e852dd949a83ea512ab22d97d377f0cced19/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=9c87e852dd949a83ea512ab22d97d377f0cced19","patch":"@@ -30,6 +30,11 @@\n     <artifactId>syncope-console</artifactId>\n     <packaging>war</packaging>\n \n+    <properties>\n+        <logfile>/tmp/syncope-console.log</logfile>\n+        <logfile.test>/tmp/syncope-console-test.log</logfile.test>\n+    </properties>\n+\n     <dependencies>\n \n         <dependency>\n@@ -38,6 +43,15 @@\n             <version>${parent.version}</version>\n         </dependency>\n \n+        <dependency>\n+            <groupId>log4j</groupId>\n+            <artifactId>log4j</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>slf4j-log4j12</artifactId>\n+        </dependency>\n+\n         <dependency>\n             <groupId>org.apache.wicket</groupId>\n             <artifactId>wicket</artifactId>\n@@ -54,6 +68,13 @@\n                 <artifactId>maven-jetty-plugin</artifactId>\n             </plugin>\n         </plugins>\n+\n+        <resources>\n+            <resource>\n+                <directory>src/main/resources</directory>\n+                <filtering>true</filtering>\n+            </resource>\n+        </resources>\n     </build>\n \n </project>"},{"sha":"076d6db28837594377ab34c5aedd5669b6bb00a6","filename":"console/src/main/resources/log4j.xml","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c87e852dd949a83ea512ab22d97d377f0cced19/console%2Fsrc%2Fmain%2Fresources%2Flog4j.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c87e852dd949a83ea512ab22d97d377f0cced19/console%2Fsrc%2Fmain%2Fresources%2Flog4j.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Flog4j.xml?ref=9c87e852dd949a83ea512ab22d97d377f0cced19","patch":"@@ -0,0 +1,39 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">\n+<log4j:configuration>\n+    <appender name=\"main\" class=\"org.apache.log4j.RollingFileAppender\">\n+        <param name=\"File\" value=\"${logfile}\"/>\n+        <param name=\"Append\" value=\"true\"/>\n+        <param name=\"MaxFileSize\" value=\"10240KB\" />\n+        <param name=\"MaxBackupIndex\" value=\"10\" />\n+        <layout class=\"org.apache.log4j.PatternLayout\">\n+            <param name=\"ConversionPattern\" value=\"%-5p %d %C{1}.%M:%L %m%n\"/>\n+        </layout>\n+    </appender>\n+\n+    <appender name=\"test\" class=\"org.apache.log4j.RollingFileAppender\">\n+        <param name=\"File\" value=\"${logfile.test}\"/>\n+        <param name=\"Append\" value=\"true\"/>\n+        <param name=\"MaxFileSize\" value=\"10240KB\" />\n+        <param name=\"MaxBackupIndex\" value=\"10\" />\n+        <layout class=\"org.apache.log4j.PatternLayout\">\n+            <param name=\"ConversionPattern\" value=\"%-5p %d %C{1}.%M:%L %m%n\"/>\n+        </layout>\n+    </appender>\n+\n+    <logger name=\"org.syncope.console\" additivity=\"false\">\n+        <level value=\"INFO\"/>\n+        <appender-ref ref=\"main\"/>\n+    </logger>\n+\n+    <logger name=\"org.syncope.console.test\" additivity=\"false\">\n+        <level value=\"DEBUG\"/>\n+        <appender-ref ref=\"test\"/>\n+    </logger>\n+\n+    <root>\n+        <priority value=\"info\" />\n+        <appender-ref ref=\"main\"/>\n+    </root>\n+</log4j:configuration>\n+"},{"sha":"f44524eb7cf4f59ba4ac1ef2e357ae4ce54467b7","filename":"core/pom.xml","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c87e852dd949a83ea512ab22d97d377f0cced19/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c87e852dd949a83ea512ab22d97d377f0cced19/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=9c87e852dd949a83ea512ab22d97d377f0cced19","patch":"@@ -30,6 +30,11 @@\n     <artifactId>syncope-core</artifactId>\n     <packaging>jar</packaging>\n \n+    <properties>\n+        <logfile>/tmp/syncope-core.log</logfile>\n+        <logfile.test>/tmp/syncope-core-test.log</logfile.test>\n+    </properties>\n+\n     <dependencies>\n \n         <dependency>\n@@ -128,5 +133,12 @@\n                 </configuration>\n             </plugin>\n         </plugins>\n+\n+        <resources>\n+            <resource>\n+                <directory>src/main/resources</directory>\n+                <filtering>true</filtering>\n+            </resource>\n+        </resources>\n     </build>\n </project>"},{"sha":"f2e936054c38bfc24f182a7280bcd96632559824","filename":"core/src/main/resources/log4j.xml","status":"modified","additions":31,"deletions":35,"changes":66,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c87e852dd949a83ea512ab22d97d377f0cced19/core%2Fsrc%2Fmain%2Fresources%2Flog4j.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c87e852dd949a83ea512ab22d97d377f0cced19/core%2Fsrc%2Fmain%2Fresources%2Flog4j.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Flog4j.xml?ref=9c87e852dd949a83ea512ab22d97d377f0cced19","patch":"@@ -1,53 +1,49 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">\n <log4j:configuration>\n-    <appender name=\"STDOUT\" class=\"org.apache.log4j.ConsoleAppender\">\n-        <param name=\"Target\" value=\"System.out\" />\n+    <appender name=\"main\" class=\"org.apache.log4j.RollingFileAppender\">\n+        <param name=\"File\" value=\"${logfile}\"/>\n+        <param name=\"Append\" value=\"true\"/>\n+        <param name=\"MaxFileSize\" value=\"10240KB\" />\n+        <param name=\"MaxBackupIndex\" value=\"10\" />\n         <layout class=\"org.apache.log4j.PatternLayout\">\n-            <param name=\"ConversionPattern\" value=\"%d{ABSOLUTE} %-5p [%t] %C{2} (%F:%L) - %m%n\" />\n+            <param name=\"ConversionPattern\" value=\"%-5p %d %C{1}.%M:%L %m%n\"/>\n         </layout>\n-        <filter class=\"org.apache.log4j.varia.LevelRangeFilter\">\n-            <param name=\"LevelMin\" value=\"DEBUG\" />\n-            <param name=\"LevelMax\" value=\"WARN\" />\n-        </filter>\n     </appender>\n-    <appender name=\"STDERR\" class=\"org.apache.log4j.ConsoleAppender\">\n-        <param name=\"Target\" value=\"System.err\" />\n-        <layout class=\"org.apache.log4j.PatternLayout\">\n-            <param name=\"ConversionPattern\" value=\"%d{ABSOLUTE} %-5p [%t] %C{2} (%F:%L) - %m%n\" />\n-        </layout>\n-        <filter class=\"org.apache.log4j.varia.LevelRangeFilter\">\n-            <param name=\"LevelMin\" value=\"ERROR\" />\n-            <param name=\"LevelMax\" value=\"FATAL\" />\n-        </filter>\n-    </appender>\n-    <appender name=\"R\" class=\"org.apache.log4j.RollingFileAppender\">\n-        <param name=\"file\" value=\"persistence.log\" />\n-        <param name=\"MaxFileSize\" value=\"1024KB\" />\n-        <!-- Keep one backup file -->\n-        <param name=\"MaxBackupIndex\" value=\"1\" />\n+\n+    <appender name=\"test\" class=\"org.apache.log4j.RollingFileAppender\">\n+        <param name=\"File\" value=\"${logfile.test}\"/>\n+        <param name=\"Append\" value=\"true\"/>\n+        <param name=\"MaxFileSize\" value=\"10240KB\" />\n+        <param name=\"MaxBackupIndex\" value=\"10\" />\n         <layout class=\"org.apache.log4j.PatternLayout\">\n-            <param name=\"ConversionPattern\" value=\"%d{ABSOLUTE} %-5p [%t] %C{2} (%F:%L) - %m%n\" />\n+            <param name=\"ConversionPattern\" value=\"%-5p %d %C{1}.%M:%L %m%n\"/>\n         </layout>\n     </appender>\n \n-    <!-- tests log level -->\n+    <logger name=\"org.syncope.core\" additivity=\"false\">\n+        <level value=\"INFO\"/>\n+        <appender-ref ref=\"main\"/>\n+    </logger>\n \n-        <!-- system log levels -->\n-    <category name=\"org.apache.log4j.xml\">\n-        <priority value=\"info\" />\n-    </category>\n+    <logger name=\"org.syncope.core.test\" additivity=\"false\">\n+        <level value=\"DEBUG\"/>\n+        <appender-ref ref=\"test\"/>\n+    </logger>\n \n-    <!-- spring is really noisy -->\n-    <category name=\"org.springframework\">\n-        <priority value=\"debug\"/>\n-    </category>\n+    <logger name=\"org.springframework\" additivity=\"false\">\n+        <level value=\"INFO\"/>\n+        <appender-ref ref=\"main\"/>\n+    </logger>\n \n+    <logger name=\"org.hibernate\" additivity=\"false\">\n+        <level value=\"INFO\"/>\n+        <appender-ref ref=\"main\"/>\n+    </logger>\n+    \n     <root>\n         <priority value=\"info\" />\n-        <appender-ref ref=\"STDOUT\" />\n-        <appender-ref ref=\"STDERR\" />\n-        <appender-ref ref=\"R\"/>\n+        <appender-ref ref=\"main\"/>\n     </root>\n </log4j:configuration>\n "},{"sha":"edbb6a9210a8c866b5466f7675729aea76626908","filename":"rest/pom.xml","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c87e852dd949a83ea512ab22d97d377f0cced19/rest%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c87e852dd949a83ea512ab22d97d377f0cced19/rest%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fpom.xml?ref=9c87e852dd949a83ea512ab22d97d377f0cced19","patch":"@@ -32,6 +32,9 @@\n \n     <properties>\n         <jetty.port>8080</jetty.port>\n+\n+        <logfile>/tmp/syncope-rest.log</logfile>\n+        <logfile.test>/tmp/syncope-rest-test.log</logfile.test>\n     </properties>\n \n     <dependencies>\n@@ -42,6 +45,15 @@\n             <version>${parent.version}</version>\n         </dependency>\n \n+        <dependency>\n+            <groupId>log4j</groupId>\n+            <artifactId>log4j</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>slf4j-log4j12</artifactId>\n+        </dependency>\n+\n         <dependency>\n             <groupId>com.sun.jersey</groupId>\n             <artifactId>jersey-server</artifactId>\n@@ -132,6 +144,13 @@\n             </plugin>\n         </plugins>\n \n+        <resources>\n+            <resource>\n+                <directory>src/main/resources</directory>\n+                <filtering>true</filtering>\n+            </resource>\n+        </resources>\n+\n         <testResources>\n             <testResource>\n                 <directory>src/test/resources</directory>"},{"sha":"74c23380f1152b77703d5a13adf9bd03b0f20a19","filename":"rest/src/main/java/org/syncope/rest/user/Create.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c87e852dd949a83ea512ab22d97d377f0cced19/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FCreate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c87e852dd949a83ea512ab22d97d377f0cced19/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FCreate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FCreate.java?ref=9c87e852dd949a83ea512ab22d97d377f0cced19","patch":"@@ -14,7 +14,6 @@\n  */\n package org.syncope.rest.user;\n \n-import java.util.logging.Logger;\n import javax.ws.rs.Consumes;\n import javax.ws.rs.DefaultValue;\n import javax.ws.rs.PUT;\n@@ -23,6 +22,8 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.context.annotation.Scope;\n import org.springframework.stereotype.Component;\n import org.syncope.rest.user.jaxb.Attributes;\n@@ -32,7 +33,7 @@\n @Scope(\"request\")\n public class Create {\n \n-    final static Logger logger = Logger.getLogger(Create.class.getName());\n+    private static final Logger log = LoggerFactory.getLogger(Create.class);\n \n     /**\n      * TODO: call syncope-core\n@@ -48,7 +49,7 @@ public String createUser(@PathParam(\"userId\") String userId,\n             return userId;\n         }\n \n-        logger.info(\"createUser() called with attributes \" + userAttributes);\n+        log.info(\"createUser() called with attributes \" + userAttributes);\n \n         return \"userId\";\n     }"},{"sha":"0190269d70424999d096408022474b5b69118d60","filename":"rest/src/main/java/org/syncope/rest/user/Delete.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c87e852dd949a83ea512ab22d97d377f0cced19/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FDelete.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c87e852dd949a83ea512ab22d97d377f0cced19/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FDelete.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FDelete.java?ref=9c87e852dd949a83ea512ab22d97d377f0cced19","patch":"@@ -14,7 +14,6 @@\n  */\n package org.syncope.rest.user;\n \n-import java.util.logging.Logger;\n import javax.ws.rs.DELETE;\n import javax.ws.rs.DefaultValue;\n import javax.ws.rs.Path;\n@@ -23,6 +22,8 @@\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.WebApplicationException;\n import javax.ws.rs.core.MediaType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.context.annotation.Scope;\n import org.springframework.stereotype.Component;\n \n@@ -31,7 +32,7 @@\n @Scope(\"request\")\n public class Delete {\n \n-    final static Logger logger = Logger.getLogger(Delete.class.getName());\n+    private static final Logger log = LoggerFactory.getLogger(Delete.class);\n \n     /**\n      * TODO: call syncope-core\n@@ -50,7 +51,7 @@ public String deleteUser(@PathParam(\"userId\") String userId,\n             return Boolean.TRUE.toString();\n         }\n \n-        logger.info(\"deleteUser() called for \" + userId);\n+        log.info(\"deleteUser() called for \" + userId);\n \n         return Boolean.TRUE.toString();\n     }"},{"sha":"43d4ceae0bbe0325475d76915a3221428245a9f0","filename":"rest/src/main/java/org/syncope/rest/user/PasswordReset.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c87e852dd949a83ea512ab22d97d377f0cced19/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FPasswordReset.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c87e852dd949a83ea512ab22d97d377f0cced19/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FPasswordReset.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FPasswordReset.java?ref=9c87e852dd949a83ea512ab22d97d377f0cced19","patch":"@@ -14,7 +14,6 @@\n  */\n package org.syncope.rest.user;\n \n-import java.util.logging.Logger;\n import javax.ws.rs.DefaultValue;\n import javax.ws.rs.GET;\n import javax.ws.rs.POST;\n@@ -24,6 +23,8 @@\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.WebApplicationException;\n import javax.ws.rs.core.MediaType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.context.annotation.Scope;\n import org.springframework.stereotype.Component;\n \n@@ -32,7 +33,7 @@\n @Scope(\"request\")\n public class PasswordReset {\n \n-    final static Logger logger = Logger.getLogger(PasswordReset.class.getName());\n+    private static final Logger log = LoggerFactory.getLogger(PasswordReset.class);\n \n     public static String getTestValue() {\n         return \"passwordResetTokenId\";\n@@ -49,7 +50,7 @@ public String getPasswordResetToken(@PathParam(\"userId\") String userId,\n             @DefaultValue(\"FALSE\") @QueryParam(\"test\") boolean test) {\n \n         if (\"error\".equals(userId)) {\n-            logger.severe(\"Entered in the error condition, going ahead...\");\n+            log.warn(\"Entered in the error condition, going ahead...\");\n \n             throw new WebApplicationException(\n                     new Exception(\"Wrong userId: \" + userId));\n@@ -59,7 +60,7 @@ public String getPasswordResetToken(@PathParam(\"userId\") String userId,\n             return getTestValue();\n         }\n \n-        logger.info(\"getPasswordResetToken called: \" + passwordResetFormURL);\n+        log.info(\"getPasswordResetToken called: \" + passwordResetFormURL);\n \n         return \"passwordResetTokenId\";\n     }\n@@ -75,7 +76,7 @@ public String passwordReset(@QueryParam(\"tokenId\") String tokenId,\n             @DefaultValue(\"FALSE\") @QueryParam(\"test\") boolean test) {\n \n         if (\"error\".equals(userId)) {\n-            logger.severe(\"Entered in the error condition, going ahead...\");\n+            log.warn(\"Entered in the error condition, going ahead...\");\n \n             throw new WebApplicationException(\n                     new Exception(\"Wrong userId: \" + userId));\n@@ -85,7 +86,7 @@ public String passwordReset(@QueryParam(\"tokenId\") String tokenId,\n             return Boolean.valueOf(tokenId.equals(getTestValue())).toString();\n         }\n \n-        logger.info(\"passwordReset called: \" + tokenId + \" / \" + newPassword);\n+        log.info(\"passwordReset called: \" + tokenId + \" / \" + newPassword);\n \n         return Boolean.TRUE.toString();\n     }"},{"sha":"e8554c92ab8f1f10eab98dfcb5f939eb97aea7f5","filename":"rest/src/main/java/org/syncope/rest/user/Read.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c87e852dd949a83ea512ab22d97d377f0cced19/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FRead.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c87e852dd949a83ea512ab22d97d377f0cced19/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FRead.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FRead.java?ref=9c87e852dd949a83ea512ab22d97d377f0cced19","patch":"@@ -15,7 +15,6 @@\n package org.syncope.rest.user;\n \n import java.util.Collections;\n-import java.util.logging.Logger;\n import javax.ws.rs.DefaultValue;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n@@ -24,6 +23,8 @@\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.WebApplicationException;\n import javax.ws.rs.core.MediaType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.context.annotation.Scope;\n import org.springframework.stereotype.Component;\n import org.syncope.rest.user.jaxb.AttributeValues;\n@@ -34,7 +35,7 @@\n @Scope(\"request\")\n public class Read {\n \n-    final static Logger logger = Logger.getLogger(Read.class.getName());\n+    private static final Logger log = LoggerFactory.getLogger(Read.class);\n \n     public static Attributes getTestValue(String userId) {\n         Attributes attributes = new Attributes();\n@@ -54,7 +55,7 @@ public Attributes readUser(@PathParam(\"userId\") String userId,\n             @DefaultValue(\"FALSE\") @QueryParam(\"test\") boolean test) {\n \n         if (\"error\".equals(userId)) {\n-            logger.severe(\"Entered in the error condition, going ahead...\");\n+            log.warn(\"Entered in the error condition, going ahead...\");\n \n             throw new WebApplicationException(\n                     new Exception(\"Wrong userId: \" + userId));\n@@ -64,7 +65,7 @@ public Attributes readUser(@PathParam(\"userId\") String userId,\n             return getTestValue(userId);\n         }\n \n-        logger.info(\"readUser called\");\n+        log.info(\"readUser called\");\n \n         Attributes attributes = new Attributes();\n "},{"sha":"87c4fae5a6e0c9288a2b561256dae7f3eae53ec6","filename":"rest/src/main/java/org/syncope/rest/user/Search.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c87e852dd949a83ea512ab22d97d377f0cced19/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FSearch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c87e852dd949a83ea512ab22d97d377f0cced19/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FSearch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FSearch.java?ref=9c87e852dd949a83ea512ab22d97d377f0cced19","patch":"@@ -14,14 +14,15 @@\n  */\n package org.syncope.rest.user;\n \n-import java.util.logging.Logger;\n import javax.ws.rs.Consumes;\n import javax.ws.rs.DefaultValue;\n import javax.ws.rs.POST;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.MediaType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.context.annotation.Scope;\n import org.springframework.stereotype.Component;\n import org.syncope.rest.user.jaxb.SearchParameters;\n@@ -32,7 +33,7 @@\n @Scope(\"request\")\n public class Search {\n \n-    final static Logger logger = Logger.getLogger(Search.class.getName());\n+    private static final Logger log = LoggerFactory.getLogger(Search.class);\n \n     public static SearchResults getTestValue() {\n         SearchResults searchResults = new SearchResults();\n@@ -52,7 +53,7 @@ public static SearchResults getTestValue() {\n     public SearchResults searchUser(SearchParameters searchParameters,\n             @DefaultValue(\"FALSE\") @QueryParam(\"test\") boolean test) {\n \n-        logger.info(\"searchUser() called with parameters \" + searchParameters);\n+        log.info(\"searchUser() called with parameters \" + searchParameters);\n \n         if (test) {\n             return getTestValue();"},{"sha":"636fcfa63584fcb53855363a099f3608c8e7aeee","filename":"rest/src/main/java/org/syncope/rest/user/Update.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c87e852dd949a83ea512ab22d97d377f0cced19/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FUpdate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c87e852dd949a83ea512ab22d97d377f0cced19/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FUpdate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Frest%2Fuser%2FUpdate.java?ref=9c87e852dd949a83ea512ab22d97d377f0cced19","patch":"@@ -14,7 +14,6 @@\n  */\n package org.syncope.rest.user;\n \n-import java.util.logging.Logger;\n import javax.ws.rs.Consumes;\n import javax.ws.rs.DefaultValue;\n import javax.ws.rs.POST;\n@@ -24,6 +23,8 @@\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.WebApplicationException;\n import javax.ws.rs.core.MediaType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.context.annotation.Scope;\n import org.springframework.stereotype.Component;\n import org.syncope.rest.user.jaxb.Attributes;\n@@ -33,7 +34,7 @@\n @Scope(\"request\")\n public class Update {\n \n-    final static Logger logger = Logger.getLogger(Update.class.getName());\n+    private static final Logger log = LoggerFactory.getLogger(Update.class);\n \n     /**\n      * TODO: call syncope-core\n@@ -54,7 +55,7 @@ public String updateUser(@PathParam(\"userId\") String userId,\n             return Boolean.TRUE.toString();\n         }\n \n-        logger.info(\"searchUser() called with userId \" + userId\n+        log.info(\"searchUser() called with userId \" + userId\n                 + \" and attributes \" + userAttributes);\n \n         return Boolean.TRUE.toString();"},{"sha":"0704b4cd1c21bac79f45dfd167479aefb4f6e9f6","filename":"rest/src/main/resources/log4j.xml","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c87e852dd949a83ea512ab22d97d377f0cced19/rest%2Fsrc%2Fmain%2Fresources%2Flog4j.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c87e852dd949a83ea512ab22d97d377f0cced19/rest%2Fsrc%2Fmain%2Fresources%2Flog4j.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Fmain%2Fresources%2Flog4j.xml?ref=9c87e852dd949a83ea512ab22d97d377f0cced19","patch":"@@ -0,0 +1,44 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">\n+<log4j:configuration>\n+    <appender name=\"main\" class=\"org.apache.log4j.RollingFileAppender\">\n+        <param name=\"File\" value=\"${logfile}\"/>\n+        <param name=\"Append\" value=\"true\"/>\n+        <param name=\"MaxFileSize\" value=\"10240KB\" />\n+        <param name=\"MaxBackupIndex\" value=\"10\" />\n+        <layout class=\"org.apache.log4j.PatternLayout\">\n+            <param name=\"ConversionPattern\" value=\"%-5p %d %C{1}.%M:%L %m%n\"/>\n+        </layout>\n+    </appender>\n+\n+    <appender name=\"test\" class=\"org.apache.log4j.RollingFileAppender\">\n+        <param name=\"File\" value=\"${logfile.test}\"/>\n+        <param name=\"Append\" value=\"true\"/>\n+        <param name=\"MaxFileSize\" value=\"10240KB\" />\n+        <param name=\"MaxBackupIndex\" value=\"10\" />\n+        <layout class=\"org.apache.log4j.PatternLayout\">\n+            <param name=\"ConversionPattern\" value=\"%-5p %d %C{1}.%M:%L %m%n\"/>\n+        </layout>\n+    </appender>\n+\n+    <logger name=\"org.syncope.rest\" additivity=\"false\">\n+        <level value=\"INFO\"/>\n+        <appender-ref ref=\"main\"/>\n+    </logger>\n+\n+    <logger name=\"org.syncope.rest.test\" additivity=\"false\">\n+        <level value=\"DEBUG\"/>\n+        <appender-ref ref=\"test\"/>\n+    </logger>\n+\n+    <logger name=\"org.springframework\" additivity=\"false\">\n+        <level value=\"INFO\"/>\n+        <appender-ref ref=\"main\"/>\n+    </logger>\n+    \n+    <root>\n+        <priority value=\"info\" />\n+        <appender-ref ref=\"main\"/>\n+    </root>\n+</log4j:configuration>\n+"},{"sha":"2f95a2f7987d6802d12eb4affaded3481fd1f6e2","filename":"rest/src/test/java/org/syncope/rest/test/user/ConnectionTestITCase.java","status":"renamed","additions":8,"deletions":6,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c87e852dd949a83ea512ab22d97d377f0cced19/rest%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Frest%2Ftest%2Fuser%2FConnectionTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c87e852dd949a83ea512ab22d97d377f0cced19/rest%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Frest%2Ftest%2Fuser%2FConnectionTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/rest%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Frest%2Ftest%2Fuser%2FConnectionTestITCase.java?ref=9c87e852dd949a83ea512ab22d97d377f0cced19","patch":"@@ -12,32 +12,34 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-package org.syncope.rest.user;\n+package org.syncope.rest.test.user;\n \n import static org.junit.Assert.*;\n import com.sun.jersey.api.client.Client;\n import com.sun.jersey.api.client.WebResource;\n import com.sun.jersey.core.util.MultivaluedMapImpl;\n import java.io.IOException;\n-import java.lang.String;\n import java.net.URL;\n import java.util.Collections;\n import java.util.Properties;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.MultivaluedMap;\n import org.junit.AfterClass;\n import org.junit.BeforeClass;\n import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.syncope.rest.user.PasswordReset;\n+import org.syncope.rest.user.Read;\n+import org.syncope.rest.user.Search;\n import org.syncope.rest.user.jaxb.Attributes;\n import org.syncope.rest.user.jaxb.SearchParameters;\n import org.syncope.rest.user.jaxb.SearchResults;\n \n public class ConnectionTestITCase {\n \n+    private static final Logger log = LoggerFactory.getLogger(ConnectionTestITCase.class);\n     final private static String userId = \"test\";\n-    final static Logger logger = Logger.getLogger(ConnectionTestITCase.class.getName());\n     private static String BASE_URL;\n     private static Client jerseyClient;\n \n@@ -48,7 +50,7 @@ public class ConnectionTestITCase {\n         try {\n             fromMavenProperties.load(fromMavenPropertiesURL.openStream());\n         } catch (IOException e) {\n-            logger.log(Level.SEVERE, \"When reading properties file\", e);\n+            log.error(\"When reading properties file\", e);\n         }\n \n         String jettyPort = fromMavenProperties.getProperty(\"jetty.port\", \"8080\");","previous_filename":"rest/src/test/java/org/syncope/rest/user/ConnectionTestITCase.java"}]}