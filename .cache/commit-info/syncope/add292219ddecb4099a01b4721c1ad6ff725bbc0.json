{"sha":"add292219ddecb4099a01b4721c1ad6ff725bbc0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmFkZDI5MjIxOWRkZWNiNDA5OWEwMWI0NzIxYzFhZDZmZjcyNWJiYzA=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-04-14T13:10:44Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-04-14T13:10:44Z"},"message":"Fixes issue 108\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246863 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"af716e4939e12ab4a25fe992c06f0d6eded256b7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/af716e4939e12ab4a25fe992c06f0d6eded256b7"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/add292219ddecb4099a01b4721c1ad6ff725bbc0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/add292219ddecb4099a01b4721c1ad6ff725bbc0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/add292219ddecb4099a01b4721c1ad6ff725bbc0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/add292219ddecb4099a01b4721c1ad6ff725bbc0/comments","author":null,"committer":null,"parents":[{"sha":"261c934549732062b195719497f63e2a861f6539","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/261c934549732062b195719497f63e2a861f6539","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/261c934549732062b195719497f63e2a861f6539"}],"stats":{"total":322,"additions":157,"deletions":165},"files":[{"sha":"072f37a915480d37a055413a28264c79e50cb8ac","filename":"archetype/src/main/resources/archetype-resources/console/src/test/resources/content.xml","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/add292219ddecb4099a01b4721c1ad6ff725bbc0/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/add292219ddecb4099a01b4721c1ad6ff725bbc0/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fconsole%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=add292219ddecb4099a01b4721c1ad6ff725bbc0","patch":"@@ -28,13 +28,13 @@\n     <hibernate_sequences sequence_name=\"SEQ_RAttrValue\" sequence_next_hi_value=\"1000\"/>\n     <hibernate_sequences sequence_name=\"SEQ_MAttrValue\" sequence_next_hi_value=\"1000\"/>\n \n-    <SyncopeConf confKey=\"token.length\" confValue=\"256\"/>\n-    <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n-    <SyncopeConf confKey=\"token.encryption.key\" confValue=\"1abcdefghil3mnopqrstuvz2\"/>\n-    <SyncopeConf confKey=\"smtp.host\" confValue=\"smtp.ngi.it\"/>\n-    <SyncopeConf confKey=\"optin.email.from\" confValue=\"syncope@googlecode.com\"/>\n-    <SyncopeConf confKey=\"optin.email.subject\" confValue=\"Welcome to Syncope!\"/>\n-    <SyncopeConf confKey=\"identityconnectors.bundle.directory\" confValue=\"${bundles.directory}\"/>\n+    <SyncopeConf key=\"token.length\" value=\"256\"/>\n+    <SyncopeConf key=\"token.expireTime\" value=\"60\"/>\n+    <SyncopeConf key=\"token.encryption.key\" value=\"1abcdefghil3mnopqrstuvz2\"/>\n+    <SyncopeConf key=\"smtp.host\" value=\"smtp.ngi.it\"/>\n+    <SyncopeConf key=\"optin.email.from\" value=\"syncope@googlecode.com\"/>\n+    <SyncopeConf key=\"optin.email.subject\" value=\"Welcome to Syncope!\"/>\n+    <SyncopeConf key=\"identityconnectors.bundle.directory\" value=\"${bundles.directory}\"/>\n                           \n     <SyncopeUser id=\"1\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n     <SyncopeUser id=\"2\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>"},{"sha":"ff6657a2dfffb00f6a882552affded847f16e973","filename":"archetype/src/main/resources/archetype-resources/core/src/test/resources/content.xml","status":"modified","additions":7,"deletions":18,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/add292219ddecb4099a01b4721c1ad6ff725bbc0/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/add292219ddecb4099a01b4721c1ad6ff725bbc0/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/archetype%2Fsrc%2Fmain%2Fresources%2Farchetype-resources%2Fcore%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=add292219ddecb4099a01b4721c1ad6ff725bbc0","patch":"@@ -33,24 +33,13 @@\n     <hibernate_sequences sequence_name=\"SEQ_JPAPropertySetItem\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_JPAWorkflowEntry\" sequence_next_hi_value=\"10\"/>\n     \n-    <SyncopeConf confKey=\"token.length\" confValue=\"256\"/>\n-    <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n-    <SyncopeConf confKey=\"token.encryption.key\" confValue=\"1abcdefghil3mnopqrstuvz2\"/>\n-    <SyncopeConf confKey=\"smtp.host\" confValue=\"smtp.ngi.it\"/>\n-    <SyncopeConf confKey=\"mail.templates.url\" confValue=\"http://localhost:9080/syncope/mailTemplates/\"/>\n-    <SyncopeConf confKey=\"activate.email.from\" confValue=\"syncope@googlecode.com\"/>\n-    <SyncopeConf confKey=\"activate.email.subject\" confValue=\"Welcome to Syncope!\"/>\n-    <SyncopeConf confKey=\"activate.email.template.html\" confValue=\"registration.html\"/>\n-    <SyncopeConf confKey=\"activate.email.template.txt\" confValue=\"registration.txt\"/>\n-    <SyncopeConf confKey=\"generateToken.email.from\" confValue=\"syncope@googlecode.com\"/>\n-    <SyncopeConf confKey=\"generateToken.email.subject\" confValue=\"Syncope: reset requested\"/>\n-    <SyncopeConf confKey=\"generateToken.email.template.html\" confValue=\"generateToken.html\"/>\n-    <SyncopeConf confKey=\"generateToken.email.template.txt\" confValue=\"generateToken.txt\"/>\n-    <SyncopeConf confKey=\"verifyToken.email.from\" confValue=\"syncope@googlecode.com\"/>\n-    <SyncopeConf confKey=\"verifyToken.email.subject\" confValue=\"Syncope: reset successful\"/>\n-    <SyncopeConf confKey=\"verifyToken.email.template.html\" confValue=\"verifyToken.html\"/>\n-    <SyncopeConf confKey=\"verifyToken.email.template.txt\" confValue=\"verifyToken.txt\"/>\n-    <SyncopeConf confKey=\"identityconnectors.bundle.directory\" confValue=\"${bundles.directory}\"/>\n+    <SyncopeConf key=\"token.length\" value=\"256\"/>\n+    <SyncopeConf key=\"token.expireTime\" value=\"60\"/>\n+    <SyncopeConf key=\"token.encryption.key\" value=\"1abcdefghil3mnopqrstuvz2\"/>\n+    <SyncopeConf key=\"smtp.host\" value=\"smtp.ngi.it\"/>\n+    <SyncopeConf key=\"optin.email.from\" value=\"syncope@googlecode.com\"/>\n+    <SyncopeConf key=\"optin.email.subject\" value=\"Welcome to Syncope!\"/>\n+    <SyncopeConf key=\"identityconnectors.bundle.directory\" value=\"${bundles.directory}\"/>\n                           \n     <SyncopeUser id=\"1\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n     <SyncopeUser id=\"2\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>"},{"sha":"0b8b300ea42d80f8cc5b374674703317129810ef","filename":"client/src/main/java/org/syncope/client/to/ConfigurationTO.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/add292219ddecb4099a01b4721c1ad6ff725bbc0/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConfigurationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/add292219ddecb4099a01b4721c1ad6ff725bbc0/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConfigurationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FConfigurationTO.java?ref=add292219ddecb4099a01b4721c1ad6ff725bbc0","patch":"@@ -16,7 +16,7 @@\n \n import org.syncope.client.AbstractBaseBean;\n \n-public class KeyValueTO extends AbstractBaseBean {\n+public class ConfigurationTO extends AbstractBaseBean {\n \n     private String key;\n ","previous_filename":"client/src/main/java/org/syncope/client/to/KeyValueTO.java"},{"sha":"508135d83ab8b8ff1b07f57b2496811f6d2fd2b1","filename":"console/src/main/java/org/syncope/console/pages/Configuration.java","status":"modified","additions":24,"deletions":24,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/add292219ddecb4099a01b4721c1ad6ff725bbc0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/add292219ddecb4099a01b4721c1ad6ff725bbc0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java?ref=add292219ddecb4099a01b4721c1ad6ff725bbc0","patch":"@@ -52,7 +52,7 @@\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.LoggerFactory;\n import org.springframework.web.client.RestClientException;\n-import org.syncope.client.to.KeyValueTO;\n+import org.syncope.client.to.ConfigurationTO;\n import org.syncope.client.to.LoggerTO;\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.PreferenceManager;\n@@ -104,21 +104,21 @@ public Configuration(final PageParameters parameters) {\n         List<IColumn> confColumns = new ArrayList<IColumn>();\n \n         confColumns.add(new PropertyColumn(new Model(getString(\"key\")),\n-                \"confKey\", \"confKey\"));\n+                \"key\", \"key\"));\n \n         confColumns.add(new PropertyColumn(new Model(getString(\"value\")),\n-                \"confValue\", \"confValue\"));\n+                \"value\", \"value\"));\n \n-        confColumns.add(new AbstractColumn<KeyValueTO>(new Model<String>(\n+        confColumns.add(new AbstractColumn<ConfigurationTO>(new Model<String>(\n                 getString(\"edit\"))) {\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<KeyValueTO>> cellItem,\n+                    final Item<ICellPopulator<ConfigurationTO>> cellItem,\n                     final String componentId,\n-                    final IModel<KeyValueTO> model) {\n+                    final IModel<ConfigurationTO> model) {\n \n-                final KeyValueTO configurationTO = model.getObject();\n+                final ConfigurationTO configurationTO = model.getObject();\n                 AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n \n                     @Override\n@@ -152,15 +152,15 @@ public Page createPage() {\n             }\n         });\n \n-        confColumns.add(new AbstractColumn<KeyValueTO>(\n+        confColumns.add(new AbstractColumn<ConfigurationTO>(\n                 new Model<String>(getString(\"delete\"))) {\n \n             @Override\n             public void populateItem(\n-                    final Item<ICellPopulator<KeyValueTO>> cellItem,\n-                    final String componentId, IModel<KeyValueTO> model) {\n+                    final Item<ICellPopulator<ConfigurationTO>> cellItem,\n+                    final String componentId, IModel<ConfigurationTO> model) {\n \n-                final KeyValueTO configurationTO = model.getObject();\n+                final ConfigurationTO configurationTO = model.getObject();\n \n                 AjaxLink deleteLink = new IndicatingDeleteOnConfirmAjaxLink(\n                         \"deleteLink\") {\n@@ -232,7 +232,7 @@ public void onClick(AjaxRequestTarget target) {\n                     public Page createPage() {\n                         ConfigurationModalPage window =\n                                 new ConfigurationModalPage(Configuration.this,\n-                                createConfigWin, new KeyValueTO(), true);\n+                                createConfigWin, new ConfigurationTO(), true);\n                         return window;\n                     }\n                 });\n@@ -330,20 +330,20 @@ public void setOperationResult(boolean operationResult) {\n     }\n \n     private class SyncopeConfProvider\n-            extends SortableDataProvider<KeyValueTO> {\n+            extends SortableDataProvider<ConfigurationTO> {\n \n-        private SortableDataProviderComparator<KeyValueTO> comparator;\n+        private SortableDataProviderComparator<ConfigurationTO> comparator;\n \n         public SyncopeConfProvider() {\n             //Default sorting\n-            setSort(\"confKey\", true);\n+            setSort(\"key\", true);\n             comparator =\n-                    new SortableDataProviderComparator<KeyValueTO>(this);\n+                    new SortableDataProviderComparator<ConfigurationTO>(this);\n         }\n \n         @Override\n-        public Iterator<KeyValueTO> iterator(int first, int count) {\n-            List<KeyValueTO> list = getAllConfigurations();\n+        public Iterator<ConfigurationTO> iterator(int first, int count) {\n+            List<ConfigurationTO> list = getAllConfigurations();\n \n             Collections.sort(list, comparator);\n \n@@ -356,20 +356,20 @@ public int size() {\n         }\n \n         @Override\n-        public IModel<KeyValueTO> model(\n-                final KeyValueTO configuration) {\n+        public IModel<ConfigurationTO> model(\n+                final ConfigurationTO configuration) {\n \n-            return new AbstractReadOnlyModel<KeyValueTO>() {\n+            return new AbstractReadOnlyModel<ConfigurationTO>() {\n \n                 @Override\n-                public KeyValueTO getObject() {\n+                public ConfigurationTO getObject() {\n                     return configuration;\n                 }\n             };\n         }\n \n-        private List<KeyValueTO> getAllConfigurations() {\n-            List<KeyValueTO> list = null;\n+        private List<ConfigurationTO> getAllConfigurations() {\n+            List<ConfigurationTO> list = null;\n \n             try {\n                 list = restClient.getAllConfigurations();"},{"sha":"592bcc73932dab3bd7af734aec870b781d90395b","filename":"console/src/main/java/org/syncope/console/pages/ConfigurationModalPage.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/add292219ddecb4099a01b4721c1ad6ff725bbc0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/add292219ddecb4099a01b4721c1ad6ff725bbc0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java?ref=add292219ddecb4099a01b4721c1ad6ff725bbc0","patch":"@@ -27,7 +27,7 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.syncope.client.to.KeyValueTO;\n+import org.syncope.client.to.ConfigurationTO;\n import org.syncope.console.rest.ConfigurationRestClient;\n \n /**\n@@ -54,21 +54,21 @@ public class ConfigurationModalPage extends BaseModalPage {\n      */\n     public ConfigurationModalPage(final BasePage basePage,\n             final ModalWindow window,\n-            final KeyValueTO configurationTO,\n+            final ConfigurationTO configurationTO,\n             final boolean createFlag) {\n \n         Form form = new Form(\"ConfigurationForm\", new CompoundPropertyModel(\n                 configurationTO));\n \n         form.add(key = new TextField(\"key\", new PropertyModel(configurationTO,\n-                \"confKey\")));\n+                \"key\")));\n \n         key.setEnabled(createFlag);\n \n         key.setRequired(true);\n \n         form.add(value = new TextField(\"value\", new PropertyModel(\n-                configurationTO, \"confValue\")));\n+                configurationTO, \"value\")));\n \n         value.setRequired(true);\n "},{"sha":"d1db881afacc863f66b6cd68b5e18aae87b8a89a","filename":"console/src/main/java/org/syncope/console/rest/ConfigurationRestClient.java","status":"modified","additions":18,"deletions":18,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/add292219ddecb4099a01b4721c1ad6ff725bbc0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/add292219ddecb4099a01b4721c1ad6ff725bbc0/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java?ref=add292219ddecb4099a01b4721c1ad6ff725bbc0","patch":"@@ -19,7 +19,7 @@\n import java.util.List;\n import org.springframework.stereotype.Component;\n import org.springframework.web.client.HttpStatusCodeException;\n-import org.syncope.client.to.KeyValueTO;\n+import org.syncope.client.to.ConfigurationTO;\n import org.syncope.client.to.LoggerTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n \n@@ -33,14 +33,14 @@ public class ConfigurationRestClient extends AbstractBaseRestClient {\n      * Get all stored configurations.\n      * @return ConfigurationTOs\n      */\n-    public List<KeyValueTO> getAllConfigurations()\n+    public List<ConfigurationTO> getAllConfigurations()\n             throws SyncopeClientCompositeErrorException {\n \n-        List<KeyValueTO> configurations = null;\n+        List<ConfigurationTO> configurations = null;\n \n         configurations = Arrays.asList(\n                 restTemplate.getForObject(baseURL\n-                + \"configuration/list.json\", KeyValueTO[].class));\n+                + \"configuration/list.json\", ConfigurationTO[].class));\n \n         return configurations;\n     }\n@@ -50,13 +50,13 @@ public List<KeyValueTO> getAllConfigurations()\n      * @return ConfigurationTO object if the configuration exists,\n      * null otherwise\n      */\n-    public KeyValueTO readConfiguration(String confKey)\n+    public ConfigurationTO readConfiguration(String key)\n             throws SyncopeClientCompositeErrorException {\n \n-        KeyValueTO configurationTO =\n+        ConfigurationTO configurationTO =\n                 restTemplate.getForObject(baseURL\n-                + \"configuration/read/{confKey}.json\", KeyValueTO.class,\n-                confKey);\n+                + \"configuration/read/{key}.json\", ConfigurationTO.class,\n+                key);\n \n \n         return configurationTO;\n@@ -67,12 +67,12 @@ public KeyValueTO readConfiguration(String confKey)\n      * @param configurationTO\n      * @return true if the operation ends succesfully, false otherwise\n      */\n-    public boolean createConfiguration(KeyValueTO configurationTO) {\n+    public boolean createConfiguration(ConfigurationTO configurationTO) {\n \n-        KeyValueTO newConfigurationTO =\n+        ConfigurationTO newConfigurationTO =\n                 restTemplate.postForObject(baseURL\n                 + \"configuration/create\",\n-                configurationTO, KeyValueTO.class);\n+                configurationTO, ConfigurationTO.class);\n \n         return (configurationTO.equals(newConfigurationTO)) ? true : false;\n     }\n@@ -82,13 +82,13 @@ public boolean createConfiguration(KeyValueTO configurationTO) {\n      * @param configurationTO\n      * @return true if the operation ends succesfully, false otherwise\n      */\n-    public boolean updateConfiguration(KeyValueTO configurationTO) {\n-        KeyValueTO newConfigurationTO = null;\n+    public boolean updateConfiguration(ConfigurationTO configurationTO) {\n+        ConfigurationTO newConfigurationTO = null;\n \n         try {\n             newConfigurationTO = restTemplate.postForObject(baseURL\n                     + \"configuration/update\", configurationTO,\n-                    KeyValueTO.class);\n+                    ConfigurationTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While updating a configuration\", e);\n             return false;\n@@ -97,16 +97,16 @@ public boolean updateConfiguration(KeyValueTO configurationTO) {\n     }\n \n     /**\n-     * Deelete a configuration by confKey\n+     * Deelete a configuration by key\n      * @throws UnsupportedEncodingException\n      */\n-    public void deleteConfiguration(String confKey)\n+    public void deleteConfiguration(String key)\n             throws\n             UnsupportedEncodingException, HttpStatusCodeException {\n \n         restTemplate.delete(baseURL\n-                + \"configuration/delete/{confKey}.json\",\n-                confKey);\n+                + \"configuration/delete/{key}.json\",\n+                key);\n     }\n \n     /**"},{"sha":"b77f803a08a7f2b34b20a40ba5f42ac79dfd8d3f","filename":"console/src/test/resources/content.xml","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/add292219ddecb4099a01b4721c1ad6ff725bbc0/console%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/add292219ddecb4099a01b4721c1ad6ff725bbc0/console%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=add292219ddecb4099a01b4721c1ad6ff725bbc0","patch":"@@ -35,13 +35,13 @@\n     <hibernate_sequences sequence_name=\"SEQ_JPAPropertySetItem\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_JPAWorkflowEntry\" sequence_next_hi_value=\"10\"/>\n     \n-    <SyncopeConf confKey=\"token.length\" confValue=\"256\"/>\n-    <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n-    <SyncopeConf confKey=\"token.encryption.key\" confValue=\"1abcdefghil3mnopqrstuvz2\"/>\n-    <SyncopeConf confKey=\"smtp.host\" confValue=\"smtp.ngi.it\"/>\n-    <SyncopeConf confKey=\"optin.email.from\" confValue=\"syncope@googlecode.com\"/>\n-    <SyncopeConf confKey=\"optin.email.subject\" confValue=\"Welcome to Syncope!\"/>\n-    <SyncopeConf confKey=\"identityconnectors.bundle.directory\" confValue=\"${bundles.directory}\"/>\n+    <SyncopeConf key=\"token.length\" value=\"256\"/>\n+    <SyncopeConf key=\"token.expireTime\" value=\"60\"/>\n+    <SyncopeConf key=\"token.encryption.key\" value=\"1abcdefghil3mnopqrstuvz2\"/>\n+    <SyncopeConf key=\"smtp.host\" value=\"smtp.ngi.it\"/>\n+    <SyncopeConf key=\"optin.email.from\" value=\"syncope@googlecode.com\"/>\n+    <SyncopeConf key=\"optin.email.subject\" value=\"Welcome to Syncope!\"/>\n+    <SyncopeConf key=\"identityconnectors.bundle.directory\" value=\"${bundles.directory}\"/>\n                           \n     <SyncopeUser id=\"1\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n     <SyncopeUser id=\"2\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>"},{"sha":"ccd16f94f88f2ce29b733a9ea5688b7cfab664ff","filename":"core/src/main/java/org/syncope/core/persistence/ConnInstanceLoader.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/add292219ddecb4099a01b4721c1ad6ff725bbc0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FConnInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/add292219ddecb4099a01b4721c1ad6ff725bbc0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FConnInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2FConnInstanceLoader.java?ref=add292219ddecb4099a01b4721c1ad6ff725bbc0","patch":"@@ -66,11 +66,11 @@ public static ConnectorInfoManager getConnectorManager()\n         }\n \n         // 2. Find bundles inside that directory\n-        File bundleDirectory = new File(connectorBundleDir.getConfValue());\n+        File bundleDirectory = new File(connectorBundleDir.getValue());\n         String[] bundleFiles = bundleDirectory.list();\n         if (bundleFiles == null) {\n             throw new NotFoundException(\"Bundles from dir \"\n-                    + connectorBundleDir.getConfValue());\n+                    + connectorBundleDir.getValue());\n         }\n \n         List<URL> bundleFileURLs = new ArrayList<URL>();\n@@ -87,7 +87,7 @@ public static ConnectorInfoManager getConnectorManager()\n         }\n         if (bundleFileURLs.isEmpty()) {\n             throw new NotFoundException(\"Bundles from dir \"\n-                    + connectorBundleDir.getConfValue());\n+                    + connectorBundleDir.getValue());\n         }\n         LOG.debug(\"Bundle file URLs: {}\", bundleFileURLs);\n "},{"sha":"3b51cb9cc7cffbc3c8a4e0609071b1d1c3def31f","filename":"core/src/main/java/org/syncope/core/persistence/beans/SyncopeConf.java","status":"modified","additions":13,"deletions":12,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/add292219ddecb4099a01b4721c1ad6ff725bbc0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/add292219ddecb4099a01b4721c1ad6ff725bbc0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FSyncopeConf.java?ref=add292219ddecb4099a01b4721c1ad6ff725bbc0","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -21,22 +21,23 @@\n public class SyncopeConf extends AbstractBaseBean {\n \n     @Id\n-    private String confKey;\n-    private String confValue;\n+    private String key;\n \n-    public String getConfKey() {\n-        return confKey;\n+    private String value;\n+\n+    public String getKey() {\n+        return key;\n     }\n \n-    public void setConfKey(String confKey) {\n-        this.confKey = confKey;\n+    public void setKey(String key) {\n+        this.key = key;\n     }\n \n-    public String getConfValue() {\n-        return confValue;\n+    public String getValue() {\n+        return value;\n     }\n \n-    public void setConfValue(String confValue) {\n-        this.confValue = confValue;\n+    public void setValue(String value) {\n+        this.value = value;\n     }\n }"},{"sha":"e95ad2f8aeaf8ded659cda392f7da9a2ca7ec2e7","filename":"core/src/main/java/org/syncope/core/rest/controller/ConfigurationController.java","status":"modified","additions":21,"deletions":21,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/add292219ddecb4099a01b4721c1ad6ff725bbc0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/add292219ddecb4099a01b4721c1ad6ff725bbc0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConfigurationController.java?ref=add292219ddecb4099a01b4721c1ad6ff725bbc0","patch":"@@ -30,7 +30,7 @@\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RequestMethod;\n import org.springframework.web.servlet.ModelAndView;\n-import org.syncope.client.to.KeyValueTO;\n+import org.syncope.client.to.ConfigurationTO;\n import org.syncope.core.persistence.beans.SyncopeConf;\n import org.syncope.core.persistence.dao.MissingConfKeyException;\n import org.syncope.core.persistence.dao.ConfDAO;\n@@ -50,8 +50,8 @@ public class ConfigurationController extends AbstractController {\n     @PreAuthorize(\"hasRole('CONFIGURATION_CREATE')\")\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/create\")\n-    public KeyValueTO create(final HttpServletResponse response,\n-            @RequestBody final KeyValueTO configurationTO) {\n+    public ConfigurationTO create(final HttpServletResponse response,\n+            @RequestBody final ConfigurationTO configurationTO) {\n \n         LOG.debug(\"Configuration create called with parameters {}\",\n                 configurationTO);\n@@ -67,22 +67,22 @@ public KeyValueTO create(final HttpServletResponse response,\n \n     @PreAuthorize(\"hasRole('CONFIGURATION_DELETE')\")\n     @RequestMapping(method = RequestMethod.DELETE,\n-    value = \"/delete/{confKey}\")\n-    public void delete(@PathVariable(\"confKey\") final String confKey)\n+    value = \"/delete/{key}\")\n+    public void delete(@PathVariable(\"key\") final String key)\n             throws MissingConfKeyException {\n \n-        confDAO.find(confKey);\n-        confDAO.delete(confKey);\n+        confDAO.find(key);\n+        confDAO.delete(key);\n     }\n \n     @PreAuthorize(\"hasRole('CONFIGURATION_LIST')\")\n     @RequestMapping(method = RequestMethod.GET,\n     value = \"/list\")\n-    public List<KeyValueTO> list(HttpServletRequest request) {\n+    public List<ConfigurationTO> list(HttpServletRequest request) {\n         List<SyncopeConf> configurations =\n                 confDAO.findAll();\n-        List<KeyValueTO> configurationTOs =\n-                new ArrayList<KeyValueTO>(configurations.size());\n+        List<ConfigurationTO> configurationTOs =\n+                new ArrayList<ConfigurationTO>(configurations.size());\n \n         for (SyncopeConf configuration : configurations) {\n             configurationTOs.add(\n@@ -94,23 +94,23 @@ public List<KeyValueTO> list(HttpServletRequest request) {\n \n     @PreAuthorize(\"hasRole('CONFIGURATION_READ')\")\n     @RequestMapping(method = RequestMethod.GET,\n-    value = \"/read/{confKey}\")\n-    public KeyValueTO read(HttpServletResponse response,\n-            @PathVariable(\"confKey\") String confKey)\n+    value = \"/read/{key}\")\n+    public ConfigurationTO read(HttpServletResponse response,\n+            @PathVariable(\"key\") String key)\n             throws MissingConfKeyException {\n \n-        KeyValueTO result;\n+        ConfigurationTO result;\n         try {\n             SyncopeConf syncopeConfiguration =\n-                    confDAO.find(confKey);\n+                    confDAO.find(key);\n             result = configurationDataBinder.getConfigurationTO(\n                     syncopeConfiguration);\n         } catch (MissingConfKeyException e) {\n-            LOG.error(\"Could not find configuration key '\" + confKey\n+            LOG.error(\"Could not find configuration key '\" + key\n                     + \"', returning null\");\n \n-            result = new KeyValueTO();\n-            result.setKey(confKey);\n+            result = new ConfigurationTO();\n+            result.setKey(key);\n         }\n \n         return result;\n@@ -119,14 +119,14 @@ public KeyValueTO read(HttpServletResponse response,\n     @PreAuthorize(\"hasRole('CONFIGURATION_UPDATE')\")\n     @RequestMapping(method = RequestMethod.POST,\n     value = \"/update\")\n-    public KeyValueTO update(final HttpServletResponse response,\n-            @RequestBody final KeyValueTO configurationTO)\n+    public ConfigurationTO update(final HttpServletResponse response,\n+            @RequestBody final ConfigurationTO configurationTO)\n             throws MissingConfKeyException {\n \n         SyncopeConf syncopeConfiguration =\n                 confDAO.find(configurationTO.getKey());\n \n-        syncopeConfiguration.setConfValue(configurationTO.getValue());\n+        syncopeConfiguration.setValue(configurationTO.getValue());\n \n         return configurationDataBinder.getConfigurationTO(syncopeConfiguration);\n     }"},{"sha":"a82959cf1ec054d9653761da62e6c2300b4fd9e7","filename":"core/src/main/java/org/syncope/core/rest/data/ConfigurationDataBinder.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/add292219ddecb4099a01b4721c1ad6ff725bbc0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConfigurationDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/add292219ddecb4099a01b4721c1ad6ff725bbc0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConfigurationDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fdata%2FConfigurationDataBinder.java?ref=add292219ddecb4099a01b4721c1ad6ff725bbc0","patch":"@@ -15,28 +15,28 @@\n package org.syncope.core.rest.data;\n \n import org.springframework.stereotype.Component;\n-import org.syncope.client.to.KeyValueTO;\n+import org.syncope.client.to.ConfigurationTO;\n import org.syncope.core.persistence.beans.SyncopeConf;\n \n @Component\n public class ConfigurationDataBinder {\n \n     public SyncopeConf createSyncopeConfiguration(\n-            final KeyValueTO configurationTO) {\n+            final ConfigurationTO configurationTO) {\n \n         SyncopeConf syncopeConfiguration = new SyncopeConf();\n-        syncopeConfiguration.setConfKey(configurationTO.getKey());\n-        syncopeConfiguration.setConfValue(configurationTO.getValue());\n+        syncopeConfiguration.setKey(configurationTO.getKey());\n+        syncopeConfiguration.setValue(configurationTO.getValue());\n \n         return syncopeConfiguration;\n     }\n \n-    public KeyValueTO getConfigurationTO(\n+    public ConfigurationTO getConfigurationTO(\n             final SyncopeConf syncopeConfiguration) {\n \n-        KeyValueTO configurationTO = new KeyValueTO();\n-        configurationTO.setKey(syncopeConfiguration.getConfKey());\n-        configurationTO.setValue(syncopeConfiguration.getConfValue());\n+        ConfigurationTO configurationTO = new ConfigurationTO();\n+        configurationTO.setKey(syncopeConfiguration.getKey());\n+        configurationTO.setValue(syncopeConfiguration.getValue());\n \n         return configurationTO;\n     }"},{"sha":"b68df32fe6d8aac224586ff9e287d89df79e0605","filename":"core/src/main/java/org/syncope/core/util/EncryptionUtil.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/add292219ddecb4099a01b4721c1ad6ff725bbc0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FEncryptionUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/add292219ddecb4099a01b4721c1ad6ff725bbc0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FEncryptionUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Futil%2FEncryptionUtil.java?ref=add292219ddecb4099a01b4721c1ad6ff725bbc0","patch":"@@ -41,7 +41,7 @@ public String encrypt(final String toBeCrypted) {\n         try {\n             final DESKeySpec keySpec =\n                     new DESKeySpec(confDAO.find(\n-                    \"token.encryption.key\").getConfValue().getBytes(\"UTF8\"));\n+                    \"token.encryption.key\").getValue().getBytes(\"UTF8\"));\n \n             final SecretKeyFactory keyFactory =\n                     SecretKeyFactory.getInstance(\"DES\");\n@@ -71,7 +71,7 @@ public String decrypt(final String toBeDecrypted) {\n         try {\n             final DESKeySpec keySpec =\n                     new DESKeySpec(confDAO.find(\n-                    \"token.encryption.key\").getConfValue().getBytes(\"UTF8\"));\n+                    \"token.encryption.key\").getValue().getBytes(\"UTF8\"));\n \n             final SecretKeyFactory keyFactory =\n                     SecretKeyFactory.getInstance(\"DES\");"},{"sha":"b43b8ea601a748ead23d6ed3824f2b442f3d604a","filename":"core/src/main/java/org/syncope/core/workflow/GenerateToken.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/add292219ddecb4099a01b4721c1ad6ff725bbc0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FGenerateToken.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/add292219ddecb4099a01b4721c1ad6ff725bbc0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FGenerateToken.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FGenerateToken.java?ref=add292219ddecb4099a01b4721c1ad6ff725bbc0","patch":"@@ -44,9 +44,10 @@ public void execute(Map transientVars, Map args, PropertySet ps)\n         try {\n             user.generateToken(\n                     Integer.parseInt(confDAO.find(\n-                    \"token.length\").getConfValue()),\n+                    \"token.length\").getValue()),\n                     Integer.parseInt(confDAO.find(\n-                    \"token.expireTime\").getConfValue()), token);\n+                    \"token.expireTime\").getValue()),\n+                    token);\n         } catch (MissingConfKeyException e) {\n             throw new WorkflowException(e);\n         }"},{"sha":"dd7542e2276f5c4f846bdc2964629f5444351f76","filename":"core/src/main/java/org/syncope/core/workflow/SendVelocityEmail.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/add292219ddecb4099a01b4721c1ad6ff725bbc0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FSendVelocityEmail.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/add292219ddecb4099a01b4721c1ad6ff725bbc0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FSendVelocityEmail.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FSendVelocityEmail.java?ref=add292219ddecb4099a01b4721c1ad6ff725bbc0","patch":"@@ -36,7 +36,7 @@ public class SendVelocityEmail extends AbstractSendEmail {\n     private String getConfValue(final String key) {\n         String result;\n         try {\n-            result = confDAO.find(key).getConfValue();\n+            result = confDAO.find(key).getValue();\n         } catch (MissingConfKeyException e) {\n             LOG.error(\"While getting conf '\" + key + \"'\", e);\n             result = \"\";"},{"sha":"e2d7093c86f6b66b479f63643d92a3e78c994abe","filename":"core/src/main/resources/content.xml","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/add292219ddecb4099a01b4721c1ad6ff725bbc0/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/add292219ddecb4099a01b4721c1ad6ff725bbc0/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=add292219ddecb4099a01b4721c1ad6ff725bbc0","patch":"@@ -35,13 +35,13 @@\n     <hibernate_sequences sequence_name=\"SEQ_JPAPropertySetItem\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_JPAWorkflowEntry\" sequence_next_hi_value=\"10\"/>\n \n-    <SyncopeConf confKey=\"token.length\" confValue=\"256\"/>\n-    <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n-    <SyncopeConf confKey=\"token.encryption.key\" confValue=\"1abcdefghil3mnopqrstuvz2\"/>\n-    <SyncopeConf confKey=\"smtp.host\" confValue=\"smtp.ngi.it\"/>\n-    <SyncopeConf confKey=\"optin.email.from\" confValue=\"syncope@googlecode.com\"/>\n-    <SyncopeConf confKey=\"optin.email.subject\" confValue=\"Welcome to Syncope!\"/>\n-    <SyncopeConf confKey=\"identityconnectors.bundle.directory\" confValue=\"${bundles.directory}\"/>\n+    <SyncopeConf key=\"token.length\" value=\"256\"/>\n+    <SyncopeConf key=\"token.expireTime\" value=\"60\"/>\n+    <SyncopeConf key=\"token.encryption.key\" value=\"1abcdefghil3mnopqrstuvz2\"/>\n+    <SyncopeConf key=\"smtp.host\" value=\"smtp.ngi.it\"/>\n+    <SyncopeConf key=\"optin.email.from\" value=\"syncope@googlecode.com\"/>\n+    <SyncopeConf key=\"optin.email.subject\" value=\"Welcome to Syncope!\"/>\n+    <SyncopeConf key=\"identityconnectors.bundle.directory\" value=\"${bundles.directory}\"/>\n \n     <USchema name=\"surname\" type=\"String\" virtual=\"0\"\n                 mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>"},{"sha":"9589117b9e8e932915ee55f0db006ff5a8355d5f","filename":"core/src/test/java/org/syncope/core/rest/ConfigurationTestITCase.java","status":"modified","additions":24,"deletions":23,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/add292219ddecb4099a01b4721c1ad6ff725bbc0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/add292219ddecb4099a01b4721c1ad6ff725bbc0/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConfigurationTestITCase.java?ref=add292219ddecb4099a01b4721c1ad6ff725bbc0","patch":"@@ -22,83 +22,84 @@\n import org.junit.Test;\n import org.springframework.http.HttpStatus;\n import org.springframework.web.client.HttpStatusCodeException;\n-import org.syncope.client.to.KeyValueTO;\n+import org.syncope.client.to.ConfigurationTO;\n \n public class ConfigurationTestITCase extends AbstractTest {\n \n     @Test\n     public void create() {\n-        KeyValueTO configurationTO = new KeyValueTO();\n+        ConfigurationTO configurationTO = new ConfigurationTO();\n         configurationTO.setKey(\"testKey\");\n         configurationTO.setValue(\"testValue\");\n \n-        KeyValueTO newConfigurationTO = restTemplate.postForObject(\n+        ConfigurationTO newConfigurationTO = restTemplate.postForObject(\n                 BASE_URL + \"configuration/create\",\n-                configurationTO, KeyValueTO.class);\n+                configurationTO, ConfigurationTO.class);\n         assertEquals(configurationTO, newConfigurationTO);\n     }\n \n     @Test\n-    public void delete() throws UnsupportedEncodingException {\n+    public void delete()\n+            throws UnsupportedEncodingException {\n         try {\n-            restTemplate.delete(BASE_URL + \"configuration/delete/{confKey}.json\",\n+            restTemplate.delete(BASE_URL + \"configuration/delete/{key}.json\",\n                     \"nonExistent\");\n         } catch (HttpStatusCodeException e) {\n             assertEquals(e.getStatusCode(), HttpStatus.NOT_FOUND);\n         }\n \n-        KeyValueTO tokenLengthTO = restTemplate.getForObject(\n-                BASE_URL + \"configuration/read/{confKey}.json\",\n-                KeyValueTO.class,\n+        ConfigurationTO tokenLengthTO = restTemplate.getForObject(\n+                BASE_URL + \"configuration/read/{key}.json\",\n+                ConfigurationTO.class,\n                 \"token.length\");\n \n-        restTemplate.delete(BASE_URL + \"configuration/delete/{confKey}.json\",\n+        restTemplate.delete(BASE_URL + \"configuration/delete/{key}.json\",\n                 \"token.length\");\n         try {\n             restTemplate.getForObject(\n-                    BASE_URL + \"configuration/read/{confKey}.json\",\n-                    KeyValueTO.class,\n+                    BASE_URL + \"configuration/read/{key}.json\",\n+                    ConfigurationTO.class,\n                     \"token.length\");\n         } catch (HttpStatusCodeException e) {\n             assertEquals(e.getStatusCode(), HttpStatus.NOT_FOUND);\n         }\n \n-        KeyValueTO newConfigurationTO = restTemplate.postForObject(\n+        ConfigurationTO newConfigurationTO = restTemplate.postForObject(\n                 BASE_URL + \"configuration/create\",\n-                tokenLengthTO, KeyValueTO.class);\n+                tokenLengthTO, ConfigurationTO.class);\n         assertEquals(tokenLengthTO, newConfigurationTO);\n     }\n \n     @Test\n     public void list() {\n-        List<KeyValueTO> configurations = Arrays.asList(\n+        List<ConfigurationTO> configurations = Arrays.asList(\n                 restTemplate.getForObject(\n                 BASE_URL + \"configuration/list.json\",\n-                KeyValueTO[].class));\n+                ConfigurationTO[].class));\n         assertNotNull(configurations);\n-        for (KeyValueTO configuration : configurations) {\n+        for (ConfigurationTO configuration : configurations) {\n             assertNotNull(configuration);\n         }\n     }\n \n     @Test\n     public void read() {\n-        KeyValueTO configurationTO = restTemplate.getForObject(BASE_URL\n-                + \"configuration/read/{confKey}.json\",\n-                KeyValueTO.class, \"token.expireTime\");\n+        ConfigurationTO configurationTO = restTemplate.getForObject(BASE_URL\n+                + \"configuration/read/{key}.json\",\n+                ConfigurationTO.class, \"token.expireTime\");\n \n         assertNotNull(configurationTO);\n     }\n \n     @Test\n     public void update() {\n-        KeyValueTO configurationTO = new KeyValueTO();\n+        ConfigurationTO configurationTO = new ConfigurationTO();\n         configurationTO.setKey(\"token.expireTime\");\n         configurationTO.setValue(\"61\");\n \n-        KeyValueTO newConfigurationTO = restTemplate.postForObject(\n+        ConfigurationTO newConfigurationTO = restTemplate.postForObject(\n                 BASE_URL + \"configuration/update\",\n-                configurationTO, KeyValueTO.class);\n+                configurationTO, ConfigurationTO.class);\n \n         assertEquals(configurationTO, newConfigurationTO);\n     }"},{"sha":"b77f803a08a7f2b34b20a40ba5f42ac79dfd8d3f","filename":"core/src/test/resources/content.xml","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/add292219ddecb4099a01b4721c1ad6ff725bbc0/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/add292219ddecb4099a01b4721c1ad6ff725bbc0/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=add292219ddecb4099a01b4721c1ad6ff725bbc0","patch":"@@ -35,13 +35,13 @@\n     <hibernate_sequences sequence_name=\"SEQ_JPAPropertySetItem\" sequence_next_hi_value=\"10\"/>\n     <hibernate_sequences sequence_name=\"SEQ_JPAWorkflowEntry\" sequence_next_hi_value=\"10\"/>\n     \n-    <SyncopeConf confKey=\"token.length\" confValue=\"256\"/>\n-    <SyncopeConf confKey=\"token.expireTime\" confValue=\"60\"/>\n-    <SyncopeConf confKey=\"token.encryption.key\" confValue=\"1abcdefghil3mnopqrstuvz2\"/>\n-    <SyncopeConf confKey=\"smtp.host\" confValue=\"smtp.ngi.it\"/>\n-    <SyncopeConf confKey=\"optin.email.from\" confValue=\"syncope@googlecode.com\"/>\n-    <SyncopeConf confKey=\"optin.email.subject\" confValue=\"Welcome to Syncope!\"/>\n-    <SyncopeConf confKey=\"identityconnectors.bundle.directory\" confValue=\"${bundles.directory}\"/>\n+    <SyncopeConf key=\"token.length\" value=\"256\"/>\n+    <SyncopeConf key=\"token.expireTime\" value=\"60\"/>\n+    <SyncopeConf key=\"token.encryption.key\" value=\"1abcdefghil3mnopqrstuvz2\"/>\n+    <SyncopeConf key=\"smtp.host\" value=\"smtp.ngi.it\"/>\n+    <SyncopeConf key=\"optin.email.from\" value=\"syncope@googlecode.com\"/>\n+    <SyncopeConf key=\"optin.email.subject\" value=\"Welcome to Syncope!\"/>\n+    <SyncopeConf key=\"identityconnectors.bundle.directory\" value=\"${bundles.directory}\"/>\n                           \n     <SyncopeUser id=\"1\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>\n     <SyncopeUser id=\"2\" workflowId=\"0\" password=\"5f4dcc3b5aa765d61d8327deb882cf99\"/>"}]}