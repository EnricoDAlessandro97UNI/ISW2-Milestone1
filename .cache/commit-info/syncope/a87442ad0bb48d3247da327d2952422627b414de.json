{"sha":"a87442ad0bb48d3247da327d2952422627b414de","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmE4NzQ0MmFkMGJiNDhkMzI0N2RhMzI3ZDI5NTI0MjI2MjdiNDE0ZGU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-11-15T15:21:17Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-11-15T15:21:17Z"},"message":"Several minor fixes + merge from trunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/branches/DEV_ROLE_PROVISIONING@1409831 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2e008ad9b5adf727f10536dbec8cd55beb9330c4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2e008ad9b5adf727f10536dbec8cd55beb9330c4"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a87442ad0bb48d3247da327d2952422627b414de","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a87442ad0bb48d3247da327d2952422627b414de","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a87442ad0bb48d3247da327d2952422627b414de","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a87442ad0bb48d3247da327d2952422627b414de/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401"}],"stats":{"total":173,"additions":84,"deletions":89},"files":[{"sha":"a87994dd951db0de211156853d4fbc3b4844228b","filename":"client/src/main/java/org/apache/syncope/client/util/AttributableOperations.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a87442ad0bb48d3247da327d2952422627b414de/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a87442ad0bb48d3247da327d2952422627b414de/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Futil%2FAttributableOperations.java?ref=a87442ad0bb48d3247da327d2952422627b414de","patch":"@@ -197,7 +197,7 @@ public static UserMod diff(final UserTO updated, final UserTO original) {\n      * @param incremental perform incremental diff (without removing existing info)\n      * @return UserMod containing differences\n      */\n-    public static UserMod diff(final UserTO updated, final UserTO original, boolean incremental) {\n+    public static UserMod diff(final UserTO updated, final UserTO original, final boolean  incremental) {\n         UserMod result = new UserMod();\n \n         diff(updated, original, result, incremental);"},{"sha":"728d4ba953696f69771c8d47abaac0b22c05fc1d","filename":"console/src/main/java/org/apache/syncope/console/pages/RoleModalPage.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a87442ad0bb48d3247da327d2952422627b414de/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a87442ad0bb48d3247da327d2952422627b414de/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java?ref=a87442ad0bb48d3247da327d2952422627b414de","patch":"@@ -71,15 +71,16 @@ public RoleModalPage(final PageReference callerPageRef, final ModalWindow window\n         form.add(rolePanel);\n \n         final AjaxButton submit = new IndicatingAjaxButton(\"submit\", new ResourceModel(\"submit\")) {\n+\n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n                 final RoleTO roleTO = (RoleTO) form.getDefaultModelObject();\n                 try {\n-                    final List<String> entitlementList = new ArrayList<String>(rolePanel.getEntitlementsPalette()\n-                            .getModelCollection());\n+                    final List<String> entitlementList = new ArrayList<String>(\n+                            rolePanel.getEntitlementsPalette().getModelCollection());\n                     roleTO.setEntitlements(entitlementList);\n \n                     if (createFlag) {\n@@ -109,6 +110,7 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n         };\n \n         final IndicatingAjaxButton cancel = new IndicatingAjaxButton(\"cancel\", new ResourceModel(\"cancel\")) {\n+\n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n@@ -120,7 +122,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n             protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n             }\n         };\n-        \n+\n         cancel.setDefaultFormProcessing(false);\n \n         MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE, xmlRolesReader.getAllAllowedRoles(\"Roles\","},{"sha":"fcc5ad208a292b32cd078f89a443b12fd1180490","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/RoleSummaryPanel.java","status":"modified","additions":11,"deletions":14,"changes":25,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a87442ad0bb48d3247da327d2952422627b414de/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a87442ad0bb48d3247da327d2952422627b414de/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSummaryPanel.java?ref=a87442ad0bb48d3247da327d2952422627b414de","patch":"@@ -18,6 +18,9 @@\n  */\n package org.apache.syncope.console.pages.panels;\n \n+import org.apache.syncope.client.to.RoleTO;\n+import org.apache.syncope.console.rest.RoleRestClient;\n+import org.apache.syncope.console.wicket.markup.html.tree.TreeActionLinkPanel;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.IEvent;\n@@ -26,9 +29,6 @@\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.apache.syncope.client.to.RoleTO;\n-import org.apache.syncope.console.rest.RoleRestClient;\n-import org.apache.syncope.console.wicket.markup.html.tree.TreeActionLinkPanel;\n \n public class RoleSummaryPanel extends Panel {\n \n@@ -86,24 +86,21 @@ public void onEvent(final IEvent<?> event) {\n         super.onEvent(event);\n \n         if (event.getPayload() instanceof TreeNodeClickUpdate) {\n-\n             final TreeNodeClickUpdate update = (TreeNodeClickUpdate) event.getPayload();\n \n-            this.selectedNode = restClient.read(update.getSelectedNodeId());\n-\n-            fragment = new Fragment(\"rolePanel\", (update.getSelectedNodeId() != 0\n-                    ? \"roleViewPanel\"\n-                    : \"rootPanel\"), this);\n+            fragment = new Fragment(\"rolePanel\", (update.getSelectedNodeId() == 0\n+                    ? \"rootPanel\" : \"roleViewPanel\"), this);\n \n-            if (update.getSelectedNodeId() != 0) {\n-                roleTabPanel = new RoleTabPanel(\"nodeViewPanel\", this.selectedNode, window, callerPageRef);\n-                roleTabPanel.setOutputMarkupId(true);\n-                fragment.addOrReplace(roleTabPanel);\n-            } else {\n+            if (update.getSelectedNodeId() == 0) {\n                 actionLink = new TreeActionLinkPanel(\"actionLink\", update.getSelectedNodeId(),\n                         new CompoundPropertyModel(this.selectedNode), window, callerPageRef);\n                 actionLink.setOutputMarkupId(true);\n                 fragment.addOrReplace(actionLink);\n+            } else {\n+                this.selectedNode = restClient.read(update.getSelectedNodeId());\n+                roleTabPanel = new RoleTabPanel(\"nodeViewPanel\", this.selectedNode, window, callerPageRef);\n+                roleTabPanel.setOutputMarkupId(true);\n+                fragment.addOrReplace(roleTabPanel);\n             }\n \n             replace(fragment);"},{"sha":"2a8e595944f0718c0545475659bf935048075aa3","filename":"console/src/main/resources/applicationContext.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a87442ad0bb48d3247da327d2952422627b414de/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a87442ad0bb48d3247da327d2952422627b414de/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml?ref=a87442ad0bb48d3247da327d2952422627b414de","patch":"@@ -83,7 +83,7 @@ under the License.\n           <key>\n             <value>http.auth.credential-charset</value>\n           </key>\n-          <value type=\"java.lang.String\">false</value>\n+          <value type=\"java.lang.String\">UTF-8</value>\n         </entry>\n       </map>\n     </property>"},{"sha":"892b03370a5e45d3e9387c12c22ccf4a0a324c04","filename":"core/src/main/java/org/apache/syncope/core/init/ConnInstanceLoader.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a87442ad0bb48d3247da327d2952422627b414de/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a87442ad0bb48d3247da327d2952422627b414de/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java?ref=a87442ad0bb48d3247da327d2952422627b414de","patch":"@@ -128,8 +128,7 @@ public void unregisterConnector(final String id) {\n \n     @Transactional(readOnly = true)\n     public void load() {\n-        // This is needed to avoid encoding problems when sending error\n-        // messages via REST\n+        // This is needed to avoid encoding problems when sending error messages via REST\n         CurrentLocale.set(Locale.ENGLISH);\n \n         // Next load all resource-specific connectors."},{"sha":"a4bd2243a2942c222141b9d798fee02baf8ba9da","filename":"core/src/main/java/org/apache/syncope/core/rest/data/AbstractAttributableDataBinder.java","status":"modified","additions":59,"deletions":62,"changes":121,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a87442ad0bb48d3247da327d2952422627b414de/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a87442ad0bb48d3247da327d2952422627b414de/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FAbstractAttributableDataBinder.java?ref=a87442ad0bb48d3247da327d2952422627b414de","patch":"@@ -338,23 +338,23 @@ public PropagationByResource fillVirtual(final AbstractAttributable attributable\n                             propByRes.add(PropagationOperation.UPDATE, resource.getName());\n                         }\n                     }\n+                }\n \n-                    AbstractVirAttr virAttr = attributable.getVirtualAttribute(virSchema.getName());\n-                    if (virAttr == null) {\n-                        virAttr = attrUtil.newVirAttr();\n-                        virAttr.setVirtualSchema(virSchema);\n-                        attributable.addVirtualAttribute(virAttr);\n-                    }\n+                AbstractVirAttr virAttr = attributable.getVirtualAttribute(virSchema.getName());\n+                if (virAttr == null) {\n+                    virAttr = attrUtil.newVirAttr();\n+                    virAttr.setVirtualSchema(virSchema);\n+                    attributable.addVirtualAttribute(virAttr);\n+                }\n \n-                    final List<String> values = new ArrayList<String>(virAttr.getValues());\n-                    values.removeAll(vAttrToBeUpdated.getValuesToBeRemoved());\n-                    values.addAll(vAttrToBeUpdated.getValuesToBeAdded());\n+                final List<String> values = new ArrayList<String>(virAttr.getValues());\n+                values.removeAll(vAttrToBeUpdated.getValuesToBeRemoved());\n+                values.addAll(vAttrToBeUpdated.getValuesToBeAdded());\n \n-                    virAttr.setValues(values);\n+                virAttr.setValues(values);\n \n-                    // Owner cannot be specified before otherwise a virtual attribute remove will be invalidated.\n-                    virAttr.setOwner(attributable);\n-                }\n+                // Owner cannot be specified before otherwise a virtual attribute remove will be invalidated.\n+                virAttr.setOwner(attributable);\n             }\n         }\n \n@@ -442,8 +442,6 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n         LOG.debug(\"Attributes to be removed:\\n{}\", propByRes);\n \n         // 4. attributes to be updated\n-        Set<Long> valuesToBeRemoved;\n-        List<String> valuesToBeAdded;\n         for (AttributeMod attributeMod : attributableMod.getAttributesToBeUpdated()) {\n             AbstractSchema schema = getSchema(attributeMod.getSchema(), attrUtil.schemaClass());\n             if (schema != null) {\n@@ -456,52 +454,51 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n                             propByRes.add(PropagationOperation.UPDATE, resource.getName());\n                         }\n                     }\n+                }\n \n-                    AbstractAttr attribute = attributable.getAttribute(schema.getName());\n-                    if (attribute == null) {\n-                        attribute = attrUtil.newAttr();\n-                        attribute.setSchema(schema);\n-                        attribute.setOwner(attributable);\n-\n-                        attributable.addAttribute(attribute);\n-                    }\n+                AbstractAttr attribute = attributable.getAttribute(schema.getName());\n+                if (attribute == null) {\n+                    attribute = attrUtil.newAttr();\n+                    attribute.setSchema(schema);\n+                    attribute.setOwner(attributable);\n \n-                    // 1.1 remove values\n-                    valuesToBeRemoved = new HashSet<Long>();\n-                    for (String valueToBeRemoved : attributeMod.getValuesToBeRemoved()) {\n+                    attributable.addAttribute(attribute);\n+                }\n \n-                        if (attribute.getSchema().isUniqueConstraint()) {\n-                            if (attribute.getUniqueValue() != null\n-                                    && valueToBeRemoved.equals(attribute.getUniqueValue().getValueAsString())) {\n+                // 1.1 remove values\n+                Set<Long> valuesToBeRemoved = new HashSet<Long>();\n+                for (String valueToBeRemoved : attributeMod.getValuesToBeRemoved()) {\n+                    if (attribute.getSchema().isUniqueConstraint()) {\n+                        if (attribute.getUniqueValue() != null\n+                                && valueToBeRemoved.equals(attribute.getUniqueValue().getValueAsString())) {\n \n-                                valuesToBeRemoved.add(attribute.getUniqueValue().getId());\n-                            }\n-                        } else {\n-                            for (AbstractAttrValue mav : attribute.getValues()) {\n-                                if (valueToBeRemoved.equals(mav.getValueAsString())) {\n-                                    valuesToBeRemoved.add(mav.getId());\n-                                }\n+                            valuesToBeRemoved.add(attribute.getUniqueValue().getId());\n+                        }\n+                    } else {\n+                        for (AbstractAttrValue mav : attribute.getValues()) {\n+                            if (valueToBeRemoved.equals(mav.getValueAsString())) {\n+                                valuesToBeRemoved.add(mav.getId());\n                             }\n                         }\n                     }\n-                    for (Long attributeValueId : valuesToBeRemoved) {\n-                        attributeValueDAO.delete(attributeValueId, attrUtil.attrValueClass());\n-                    }\n+                }\n+                for (Long attributeValueId : valuesToBeRemoved) {\n+                    attributeValueDAO.delete(attributeValueId, attrUtil.attrValueClass());\n+                }\n \n-                    // 1.2 add values\n-                    valuesToBeAdded = attributeMod.getValuesToBeAdded();\n-                    if (valuesToBeAdded != null\n-                            && !valuesToBeAdded.isEmpty()\n-                            && (!schema.isUniqueConstraint() || attribute.getUniqueValue() == null || !valuesToBeAdded.\n-                            iterator().next().equals(attribute.getUniqueValue().getValueAsString()))) {\n+                // 1.2 add values\n+                List<String> valuesToBeAdded = attributeMod.getValuesToBeAdded();\n+                if (valuesToBeAdded != null\n+                        && !valuesToBeAdded.isEmpty()\n+                        && (!schema.isUniqueConstraint() || attribute.getUniqueValue() == null\n+                        || !valuesToBeAdded.iterator().next().equals(attribute.getUniqueValue().getValueAsString()))) {\n \n-                        fillAttribute(attributeMod.getValuesToBeAdded(), attrUtil, schema, attribute, invalidValues);\n-                    }\n+                    fillAttribute(attributeMod.getValuesToBeAdded(), attrUtil, schema, attribute, invalidValues);\n+                }\n \n-                    // if no values are in, the attribute can be safely removed\n-                    if (attribute.getValuesAsStrings().isEmpty()) {\n-                        attrDAO.delete(attribute);\n-                    }\n+                // if no values are in, the attribute can be safely removed\n+                if (attribute.getValuesAsStrings().isEmpty()) {\n+                    attrDAO.delete(attribute);\n                 }\n             }\n         }\n@@ -513,8 +510,8 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n         LOG.debug(\"Attributes to be updated:\\n{}\", propByRes);\n \n         // 5. derived attributes to be removed\n-        for (String derivedAttributeToBeRemoved : attributableMod.getDerivedAttributesToBeRemoved()) {\n-            AbstractDerSchema derSchema = getDerivedSchema(derivedAttributeToBeRemoved, attrUtil.derSchemaClass());\n+        for (String derAttrToBeRemoved : attributableMod.getDerivedAttributesToBeRemoved()) {\n+            AbstractDerSchema derSchema = getDerivedSchema(derAttrToBeRemoved, attrUtil.derSchemaClass());\n \n             if (derSchema != null) {\n                 AbstractDerAttr derAttr = attributable.getDerivedAttribute(derSchema.getName());\n@@ -547,8 +544,8 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n         LOG.debug(\"Derived attributes to be removed:\\n{}\", propByRes);\n \n         // 6. derived attributes to be added\n-        for (String derivedAttributeToBeAdded : attributableMod.getDerivedAttributesToBeAdded()) {\n-            AbstractDerSchema derSchema = getDerivedSchema(derivedAttributeToBeAdded, attrUtil.derSchemaClass());\n+        for (String derAttrToBeAdded : attributableMod.getDerivedAttributesToBeAdded()) {\n+            AbstractDerSchema derSchema = getDerivedSchema(derAttrToBeAdded, attrUtil.derSchemaClass());\n             if (derSchema != null) {\n                 for (ExternalResource resource : resourceDAO.findAll()) {\n                     for (AbstractMappingItem mapItem : attrUtil.getMappingItems(resource)) {\n@@ -559,21 +556,21 @@ protected PropagationByResource fill(final AbstractAttributable attributable,\n                             propByRes.add(PropagationOperation.UPDATE, resource.getName());\n                         }\n                     }\n-\n-                    AbstractDerAttr derAttr = attrUtil.newDerAttr();\n-                    derAttr.setDerivedSchema(derSchema);\n-                    derAttr.setOwner(attributable);\n-                    attributable.addDerivedAttribute(derAttr);\n                 }\n+\n+                AbstractDerAttr derAttr = attrUtil.newDerAttr();\n+                derAttr.setDerivedSchema(derSchema);\n+                derAttr.setOwner(attributable);\n+                attributable.addDerivedAttribute(derAttr);\n             }\n         }\n \n         LOG.debug(\"Derived attributes to be added:\\n{}\", propByRes);\n \n         // 7. virtual attributes: for users this is delegated to PropagationManager\n         if (AttributableType.USER != attrUtil.getType()) {\n-            fillVirtual(attributable, attributableMod.getVirtualAttributesToBeRemoved(), attributableMod.\n-                    getVirtualAttributesToBeUpdated(), attrUtil);\n+            fillVirtual(attributable, attributableMod.getVirtualAttributesToBeRemoved(),\n+                    attributableMod.getVirtualAttributesToBeUpdated(), attrUtil);\n         }\n \n         // Finally, check if mandatory values are missing"},{"sha":"ea03551f58e43b050586b9351c5ac75dca6298ad","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncJob.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a87442ad0bb48d3247da327d2952422627b414de/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a87442ad0bb48d3247da327d2952422627b414de/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncJob.java?ref=a87442ad0bb48d3247da327d2952422627b414de","patch":"@@ -241,11 +241,11 @@ protected String doExecute(final boolean dryRun) throws JobExecutionException {\n                 ? ConflictResolutionAction.IGNORE\n                 : ((SyncPolicySpec) syncPolicy.getSpecification()).getConflictResolutionAction();\n \n-        // Prepare hanlder for SyncDelta objects\n-        final SyncopeSyncResultHanlder handler =\n-                (SyncopeSyncResultHanlder) ((DefaultListableBeanFactory) ApplicationContextProvider.\n+        // Prepare handler for SyncDelta objects\n+        final SyncopeSyncResultHandler handler =\n+                (SyncopeSyncResultHandler) ((DefaultListableBeanFactory) ApplicationContextProvider.\n                 getApplicationContext().getBeanFactory()).createBean(\n-                SyncopeSyncResultHanlder.class, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n+                SyncopeSyncResultHandler.class, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n         handler.setActions(actions);\n         handler.setDryRun(dryRun);\n         handler.setResAct(resAct);"},{"sha":"6d8d821189c046654ee040cad8bba08a1b978d6d","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncopeSyncResultHandler.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a87442ad0bb48d3247da327d2952422627b414de/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a87442ad0bb48d3247da327d2952422627b414de/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHandler.java?ref=a87442ad0bb48d3247da327d2952422627b414de","patch":"@@ -66,12 +66,12 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n \n-public class SyncopeSyncResultHanlder implements SyncResultsHandler {\n+public class SyncopeSyncResultHandler implements SyncResultsHandler {\n \n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(SyncopeSyncResultHanlder.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(SyncopeSyncResultHandler.class);\n \n     /**\n      * Entitlement DAO.","previous_filename":"core/src/main/java/org/apache/syncope/core/sync/SyncopeSyncResultHanlder.java"}]}