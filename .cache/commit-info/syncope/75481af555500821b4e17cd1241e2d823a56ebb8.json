{"sha":"75481af555500821b4e17cd1241e2d823a56ebb8","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjc1NDgxYWY1NTU1MDA4MjFiNGUxN2NkMTI0MWUyZDgyM2E1NmViYjg=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-02-08T17:52:52Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-02-08T17:52:52Z"},"message":"(Fixes issue #59)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246770 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"cad828a23e74eeeba590ff827802858551dccc06","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/cad828a23e74eeeba590ff827802858551dccc06"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/75481af555500821b4e17cd1241e2d823a56ebb8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/75481af555500821b4e17cd1241e2d823a56ebb8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/75481af555500821b4e17cd1241e2d823a56ebb8","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/75481af555500821b4e17cd1241e2d823a56ebb8/comments","author":null,"committer":null,"parents":[{"sha":"6f24582e923e82a8661395955a1461eb4b66eac7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6f24582e923e82a8661395955a1461eb4b66eac7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6f24582e923e82a8661395955a1461eb4b66eac7"}],"stats":{"total":384,"additions":339,"deletions":45},"files":[{"sha":"2a921ada6094797ffdbba9f2e5a41a5dead6d6e6","filename":"client/src/main/java/org/syncope/client/to/LoggerTO.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75481af555500821b4e17cd1241e2d823a56ebb8/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FLoggerTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75481af555500821b4e17cd1241e2d823a56ebb8/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FLoggerTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fclient%2Fto%2FLoggerTO.java?ref=75481af555500821b4e17cd1241e2d823a56ebb8","patch":"@@ -0,0 +1,40 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.client.to;\n+\n+import org.syncope.client.AbstractBaseBean;\n+\n+public class LoggerTO extends AbstractBaseBean {\n+\n+    private String name;\n+\n+    private String level;\n+\n+    public String getLevel() {\n+        return level;\n+    }\n+\n+    public void setLevel(String level) {\n+        this.level = level;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+}"},{"sha":"f08421a1e30515b68271a0eb8241828a3e44ea0d","filename":"console/src/main/java/org/syncope/console/pages/Configuration.java","status":"modified","additions":103,"deletions":32,"changes":135,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75481af555500821b4e17cd1241e2d823a56ebb8/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75481af555500821b4e17cd1241e2d823a56ebb8/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java?ref=75481af555500821b4e17cd1241e2d823a56ebb8","patch":"@@ -17,6 +17,7 @@\n import java.io.Serializable;\n import java.io.UnsupportedEncodingException;\n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.Iterator;\n@@ -38,8 +39,11 @@\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.PropertyListView;\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.AbstractReadOnlyModel;\n import org.apache.wicket.model.IModel;\n@@ -48,6 +52,7 @@\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.springframework.web.client.RestClientException;\n import org.syncope.client.to.ConfigurationTO;\n+import org.syncope.client.to.LoggerTO;\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.Utility;\n import org.syncope.console.rest.ConfigurationRestClient;\n@@ -73,16 +78,17 @@ public class Configuration extends BasePage {\n \n     private static final int WIN_USER_WIDTH = 1133;\n \n-    private WebMarkupContainer container;\n+    private WebMarkupContainer confContainer;\n \n-    /* \n-    Response flag set by the Modal Window after the operation\n-    is completed  */\n+    /**\n+     * Response flag set by the Modal Window after the operation\n+     * is completed.\n+     */\n     private boolean operationResult = false;\n \n     private int paginatorRows;\n \n-    public Configuration(PageParameters parameters) {\n+    public Configuration(final PageParameters parameters) {\n         super(parameters);\n \n         add(createConfigWin = new ModalWindow(\"createConfigurationWin\"));\n@@ -91,18 +97,21 @@ public Configuration(PageParameters parameters) {\n         paginatorRows = utility.getPaginatorRowsToDisplay(\n                 Constants.CONF_CONFIGURATION_PAGINATOR_ROWS);\n \n-        List<IColumn> columns = new ArrayList<IColumn>();\n+        List<IColumn> confColumns = new ArrayList<IColumn>();\n \n-        columns.add(new PropertyColumn(new Model(getString(\"key\")),\n+        confColumns.add(new PropertyColumn(new Model(getString(\"key\")),\n                 \"confKey\", \"confKey\"));\n \n-        columns.add(new PropertyColumn(new Model(getString(\"value\")),\n+        confColumns.add(new PropertyColumn(new Model(getString(\"value\")),\n                 \"confValue\", \"confValue\"));\n \n-        columns.add(new AbstractColumn<ConfigurationTO>(new Model<String>(\n+        confColumns.add(new AbstractColumn<ConfigurationTO>(new Model<String>(\n                 getString(\"edit\"))) {\n \n-            public void populateItem(Item<ICellPopulator<ConfigurationTO>> cellItem, String componentId, IModel<ConfigurationTO> model) {\n+            public void populateItem(\n+                    Item<ICellPopulator<ConfigurationTO>> cellItem,\n+                    String componentId, IModel<ConfigurationTO> model) {\n+\n                 final ConfigurationTO configurationTO = model.getObject();\n                 AjaxLink editLink = new IndicatingAjaxLink(\"editLink\") {\n \n@@ -139,10 +148,13 @@ public Page createPage() {\n             }\n         });\n \n-        columns.add(new AbstractColumn<ConfigurationTO>(new Model<String>(getString(\n-                \"delete\"))) {\n+        confColumns.add(new AbstractColumn<ConfigurationTO>(\n+                new Model<String>(getString(\"delete\"))) {\n+\n+            public void populateItem(\n+                    Item<ICellPopulator<ConfigurationTO>> cellItem,\n+                    String componentId, IModel<ConfigurationTO> model) {\n \n-            public void populateItem(Item<ICellPopulator<ConfigurationTO>> cellItem, String componentId, IModel<ConfigurationTO> model) {\n                 final ConfigurationTO configurationTO = model.getObject();\n \n                 AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n@@ -162,7 +174,7 @@ public void onClick(AjaxRequestTarget target) {\n                         info(getString(\"operation_succeded\"));\n                         target.addComponent(feedbackPanel);\n \n-                        target.addComponent(container);\n+                        target.addComponent(confContainer);\n                     }\n \n                     @Override\n@@ -173,7 +185,9 @@ protected IAjaxCallDecorator getAjaxCallDecorator() {\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(CharSequence script) {\n+                            public CharSequence preDecorateScript(\n+                                    CharSequence script) {\n+\n                                 return \"if (confirm('\" + getString(\n                                         \"confirmDelete\") + \"'))\"\n                                         + \"{\" + script + \"}\";\n@@ -196,15 +210,15 @@ public CharSequence preDecorateScript(CharSequence script) {\n         });\n \n \n-        final AjaxFallbackDefaultDataTable table =\n-                new AjaxFallbackDefaultDataTable(\"datatable\", columns,\n-                new ConfigurationsProvider(), paginatorRows);\n+        final AjaxFallbackDefaultDataTable confTable =\n+                new AjaxFallbackDefaultDataTable(\"syncopeconf\", confColumns,\n+                new SyncopeConfProvider(), paginatorRows);\n \n-        container = new WebMarkupContainer(\"container\");\n-        container.add(table);\n-        container.setOutputMarkupId(true);\n+        confContainer = new WebMarkupContainer(\"confContainer\");\n+        confContainer.add(confTable);\n+        confContainer.setOutputMarkupId(true);\n \n-        add(container);\n+        add(confContainer);\n \n         createConfigWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         createConfigWin.setInitialHeight(WIN_USER_HEIGHT);\n@@ -218,8 +232,8 @@ public CharSequence preDecorateScript(CharSequence script) {\n         editConfigWin.setPageMapName(\"edit-configuration-modal\");\n         editConfigWin.setCookieName(\"edit-configuration-modal\");\n \n-        setWindowClosedCallback(createConfigWin, container);\n-        setWindowClosedCallback(editConfigWin, container);\n+        setWindowClosedCallback(createConfigWin, confContainer);\n+        setWindowClosedCallback(editConfigWin, confContainer);\n \n         AjaxLink createConfigurationLink = new AjaxLink(\n                 \"createConfigurationLink\") {\n@@ -260,16 +274,65 @@ protected void onUpdate(AjaxRequestTarget target) {\n                 utility.updatePaginatorRows(\n                         Constants.CONF_CONFIGURATION_PAGINATOR_ROWS,\n                         paginatorRows);\n-                table.setRowsPerPage(paginatorRows);\n+                confTable.setRowsPerPage(paginatorRows);\n \n-                target.addComponent(container);\n+                target.addComponent(confContainer);\n             }\n         });\n \n         paginatorForm.add(rowsChooser);\n         add(paginatorForm);\n \n         add(paginatorForm);\n+\n+        // Logger stuff\n+        add(new PropertyListView<LoggerTO>(\n+                \"logger\", restClient.getAllLoggers()) {\n+\n+            @Override\n+            protected void populateItem(final ListItem<LoggerTO> item) {\n+                item.add(new Label(\"name\"));\n+\n+                DropDownChoice<LoggerLevel> level =\n+                        new DropDownChoice<LoggerLevel>(\"level\");\n+                level.setModel(new IModel<LoggerLevel>() {\n+\n+                    @Override\n+                    public LoggerLevel getObject() {\n+                        return LoggerLevel.valueOf(\n+                                item.getModelObject().getLevel());\n+                    }\n+\n+                    @Override\n+                    public void setObject(final LoggerLevel object) {\n+                        item.getModelObject().setLevel(object.toString());\n+                    }\n+\n+                    @Override\n+                    public void detach() {\n+                    }\n+                });\n+                level.setChoices(Arrays.asList(LoggerLevel.values()));\n+                level.setOutputMarkupId(true);\n+                level.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                        if (restClient.setLoggerLevel(\n+                                item.getModelObject().getName(),\n+                                item.getModelObject().getLevel())) {\n+\n+                            info(getString(\"operation_succeded\"));\n+                        } else {\n+                            info(getString(\"operation_error\"));\n+\n+                        }\n+                        target.addComponent(feedbackPanel);\n+                    }\n+                });\n+                item.add(level);\n+            }\n+        });\n     }\n \n     /**\n@@ -302,19 +365,19 @@ public void setOperationResult(boolean operationResult) {\n         this.operationResult = operationResult;\n     }\n \n-    class ConfigurationsProvider extends SortableDataProvider<ConfigurationTO> {\n+    class SyncopeConfProvider extends SortableDataProvider<ConfigurationTO> {\n \n         private SortableDataProviderComparator comparator =\n                 new SortableDataProviderComparator();\n \n-        public ConfigurationsProvider() {\n+        public SyncopeConfProvider() {\n             //Default sorting\n             setSort(\"confKey\", true);\n         }\n \n         @Override\n         public Iterator<ConfigurationTO> iterator(int first, int count) {\n-            List<ConfigurationTO> list = getConfigurationsListDB();\n+            List<ConfigurationTO> list = getAllConfigurations();\n \n             Collections.sort(list, comparator);\n \n@@ -323,11 +386,13 @@ public Iterator<ConfigurationTO> iterator(int first, int count) {\n \n         @Override\n         public int size() {\n-            return getConfigurationsListDB().size();\n+            return getAllConfigurations().size();\n         }\n \n         @Override\n-        public IModel<ConfigurationTO> model(final ConfigurationTO configuration) {\n+        public IModel<ConfigurationTO> model(\n+                final ConfigurationTO configuration) {\n+\n             return new AbstractReadOnlyModel<ConfigurationTO>() {\n \n                 @Override\n@@ -337,7 +402,7 @@ public ConfigurationTO getObject() {\n             };\n         }\n \n-        public List<ConfigurationTO> getConfigurationsListDB() {\n+        private List<ConfigurationTO> getAllConfigurations() {\n             List<ConfigurationTO> list = null;\n \n             try {\n@@ -379,4 +444,10 @@ public int compare(final ConfigurationTO o1,\n             }\n         }\n     }\n+\n+    enum LoggerLevel {\n+\n+        OFF, ERROR, WARN, INFO, DEBUG, TRACE, ALL\n+\n+    }\n }"},{"sha":"38d408ea90b5a05b5b67ca32aa70405327c32d75","filename":"console/src/main/java/org/syncope/console/rest/ConfigurationRestClient.java","status":"modified","additions":35,"deletions":4,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75481af555500821b4e17cd1241e2d823a56ebb8/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75481af555500821b4e17cd1241e2d823a56ebb8/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java?ref=75481af555500821b4e17cd1241e2d823a56ebb8","patch":"@@ -20,6 +20,7 @@\n import org.springframework.stereotype.Component;\n import org.springframework.web.client.HttpStatusCodeException;\n import org.syncope.client.to.ConfigurationTO;\n+import org.syncope.client.to.LoggerTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n \n /**\n@@ -82,12 +83,13 @@ public boolean createConfiguration(ConfigurationTO configurationTO) {\n      * @return true if the operation ends succesfully, false otherwise\n      */\n     public boolean updateConfiguration(ConfigurationTO configurationTO) {\n-    ConfigurationTO newConfigurationTO = null;\n+        ConfigurationTO newConfigurationTO = null;\n \n         try {\n-        newConfigurationTO = restTemplate.postForObject(baseURL+ \n-                \"configuration/update\", configurationTO, ConfigurationTO.class);\n-        } catch(SyncopeClientCompositeErrorException e) {\n+            newConfigurationTO = restTemplate.postForObject(baseURL\n+                    + \"configuration/update\", configurationTO,\n+                    ConfigurationTO.class);\n+        } catch (SyncopeClientCompositeErrorException e) {\n             LOG.error(\"While updating a configuration\", e);\n             return false;\n         }\n@@ -106,4 +108,33 @@ public void deleteConfiguration(String confKey)\n                 + \"configuration/delete/{confKey}.json\",\n                 confKey);\n     }\n+\n+    /**\n+     * Get all loggers.\n+     * @return LoggerTOs\n+     */\n+    public List<LoggerTO> getAllLoggers()\n+            throws SyncopeClientCompositeErrorException {\n+\n+        List<LoggerTO> loggers = Arrays.asList(\n+                restTemplate.getForObject(\n+                baseURL + \"log/controller/list\", LoggerTO[].class));\n+\n+        return loggers;\n+    }\n+\n+    public boolean setLoggerLevel(final String name, final String level) {\n+        boolean result;\n+        try {\n+            restTemplate.postForObject(\n+                    baseURL + \"log/controller/{name}/{level}\",\n+                    null, LoggerTO.class, name, level);\n+            result = true;\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While setting a logger's level\", e);\n+            result = false;\n+        }\n+\n+        return result;\n+    }\n }"},{"sha":"1a082e535ee2bdf76bba12711ff79fcdc1c5766c","filename":"console/src/main/resources/org/syncope/console/pages/Configuration.html","status":"modified","additions":21,"deletions":5,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75481af555500821b4e17cd1241e2d823a56ebb8/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75481af555500821b4e17cd1241e2d823a56ebb8/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.html?ref=75481af555500821b4e17cd1241e2d823a56ebb8","patch":"@@ -16,17 +16,17 @@\n \n     <div id=\"tabs\">\n         <ul>\n-            <li  class=\"tabs-selected\">\n-                <a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span>\n-                </a>\n+            <li class=\"tabs-selected\">\n+                <a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a>\n             </li>\n+            <li><a href=\"#tabs-2\"><span><wicket:message key=\"tab2\"/></span></a></li>\n         </ul>\n         <div id=\"tabs-1\">\n \n             <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n-                <span wicket:id=\"container\">\n+                <span wicket:id=\"confContainer\">\n                     <table class=\"ui-widget ui-widget-content table-hover\"\n-                           wicket:id=\"datatable\"/>\n+                           wicket:id=\"syncopeconf\"/>\n                 </span>\n \n                 <span style=\"float:right\">\n@@ -45,5 +45,21 @@\n                 <wicket:message key=\"create_configuration\"/>\n             </a>\n         </div>\n+        <div id=\"tabs-2\">\n+            <table>\n+                <thead>\n+                    <tr>\n+                        <th><wicket:message key=\"logger\"/></th>\n+                        <th><wicket:message key=\"level\"/></th>\n+                    </tr>\n+                </thead>\n+                <tbody>\n+                    <tr wicket:id=\"logger\">\n+                        <td><span wicket:id=\"name\"/></td>\n+                        <td><select wicket:id=\"level\"/></td>\n+                    </tr>\n+                </tbody>\n+            </table>\n+        </div>\n     </div>\n </wicket:extend>\n\\ No newline at end of file"},{"sha":"2c31f264f5f4945a18e84275808eed7458ac5284","filename":"console/src/main/resources/org/syncope/console/pages/Configuration.properties","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75481af555500821b4e17cd1241e2d823a56ebb8/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75481af555500821b4e17cd1241e2d823a56ebb8/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.properties?ref=75481af555500821b4e17cd1241e2d823a56ebb8","patch":"@@ -1,6 +1,9 @@\n key=Key\n value=Value\n-tab1=Configurations\n+tab1=Parameters\n+tab2=Log\n edit=Edit\n delete=Delete\n create_configuration=Create new configuration\n+logger=Logger\n+level=Level"},{"sha":"b6c85455b91bb72fa360d08ec8e5e95cfa6e4f31","filename":"console/src/main/resources/org/syncope/console/pages/Configuration_it.properties","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75481af555500821b4e17cd1241e2d823a56ebb8/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75481af555500821b4e17cd1241e2d823a56ebb8/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration_it.properties?ref=75481af555500821b4e17cd1241e2d823a56ebb8","patch":"@@ -1,6 +1,9 @@\n key=Chiave\n value=Valore\n-tab1=Configurazioni\n+tab1=Parametri\n+tab2=Log\n edit=Modifica\n delete=Elimina\n create_configuration=Crea nuova configurazione\n+logger=Logger\n+level=Livello"},{"sha":"e6de25139b7f158729fbb64d0502ca390f5de47e","filename":"console/src/test/resources/content.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75481af555500821b4e17cd1241e2d823a56ebb8/console%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75481af555500821b4e17cd1241e2d823a56ebb8/console%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=75481af555500821b4e17cd1241e2d823a56ebb8","patch":"@@ -320,6 +320,8 @@\n     <Entitlement name=\"TASK_EXECUTE\"/>\n     <Entitlement name=\"TASK_READ\"/>\n     <Entitlement name=\"TASK_DELETE\"/>\n+    <Entitlement name=\"LOG_LIST\"/>\n+    <Entitlement name=\"LOG_SET_LEVEL\"/>\n \n     <SyncopeRole_Entitlement entitlements_name=\"SCHEMA_READ\" roles_id=\"8\"/>\n </dataset>"},{"sha":"797e76598a7c1530db538796068cbe0b81a00663","filename":"core/src/main/java/org/syncope/core/rest/controller/LogController.java","status":"added","additions":75,"deletions":0,"changes":75,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75481af555500821b4e17cd1241e2d823a56ebb8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLogController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75481af555500821b4e17cd1241e2d823a56ebb8/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLogController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FLogController.java?ref=75481af555500821b4e17cd1241e2d823a56ebb8","patch":"@@ -0,0 +1,75 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.rest.controller;\n+\n+import ch.qos.logback.classic.Level;\n+import ch.qos.logback.classic.Logger;\n+import ch.qos.logback.classic.LoggerContext;\n+import java.util.ArrayList;\n+import java.util.List;\n+import javassist.NotFoundException;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestMethod;\n+import org.syncope.client.to.LoggerTO;\n+\n+@Controller\n+@RequestMapping(\"/log\")\n+public class LogController extends AbstractController {\n+\n+    @PreAuthorize(\"hasRole('LOG_LIST')\")\n+    @RequestMapping(method = RequestMethod.GET,\n+    value = \"/controller/list\")\n+    public List<LoggerTO> getLoggers() {\n+        LoggerContext lc = (LoggerContext) LoggerFactory.getILoggerFactory();\n+        List<LoggerTO> result =\n+                new ArrayList<LoggerTO>(lc.getLoggerList().size());\n+        LoggerTO loggerTO;\n+        for (Logger logger : lc.getLoggerList()) {\n+            if (logger.getLevel() != null) {\n+                loggerTO = new LoggerTO();\n+                loggerTO.setName(logger.getName());\n+                loggerTO.setLevel(logger.getLevel().toString());\n+                result.add(loggerTO);\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n+    @PreAuthorize(\"hasRole('LOG_SET_LEVEL')\")\n+    @RequestMapping(method = RequestMethod.POST,\n+    value = \"/controller/{name}/{level}\")\n+    public LoggerTO setLoggerLevel(@PathVariable(\"name\") final String name,\n+            @PathVariable(\"level\") final Level level)\n+            throws NotFoundException {\n+\n+        LoggerContext lc = (LoggerContext) LoggerFactory.getILoggerFactory();\n+        Logger logger = lc.getLogger(name);\n+        if (logger == null) {\n+            throw new NotFoundException(\"Logger '\" + name + \"'\");\n+        }\n+\n+        logger.setLevel(level);\n+\n+        LoggerTO result = new LoggerTO();\n+        result.setName(logger.getName());\n+        result.setLevel(logger.getLevel().toString());\n+        return result;\n+    }\n+}"},{"sha":"97e35db0698228ec162fe1f452903973e1814bcf","filename":"core/src/main/resources/content.xml","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75481af555500821b4e17cd1241e2d823a56ebb8/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75481af555500821b4e17cd1241e2d823a56ebb8/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fcontent.xml?ref=75481af555500821b4e17cd1241e2d823a56ebb8","patch":"@@ -100,4 +100,7 @@\n     <Entitlement name=\"TASK_EXECUTE\"/>\n     <Entitlement name=\"TASK_READ\"/>\n     <Entitlement name=\"TASK_DELETE\"/>\n+    <Entitlement name=\"LOG_LIST\"/>\n+    <Entitlement name=\"LOG_SET_LEVEL\"/>\n+\n </dataset>"},{"sha":"9305f0bb0900b7fa31a211fff52f59d49049c5f4","filename":"core/src/main/resources/logback.xml","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75481af555500821b4e17cd1241e2d823a56ebb8/core%2Fsrc%2Fmain%2Fresources%2Flogback.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75481af555500821b4e17cd1241e2d823a56ebb8/core%2Fsrc%2Fmain%2Fresources%2Flogback.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Flogback.xml?ref=75481af555500821b4e17cd1241e2d823a56ebb8","patch":"@@ -12,7 +12,8 @@\n   See the License for the specific language governing permissions and\n   limitations under the License.\n -->\n-<configuration scan=\"true\">\n+<configuration>\n+\n     <appender name=\"main\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n         <file>${logfile}</file>\n         <append>true</append>"},{"sha":"c0a1af8e747e1a7e27316e412591318332c6b015","filename":"core/src/test/java/org/syncope/core/persistence/dao/EntitlementTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75481af555500821b4e17cd1241e2d823a56ebb8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75481af555500821b4e17cd1241e2d823a56ebb8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FEntitlementTest.java?ref=75481af555500821b4e17cd1241e2d823a56ebb8","patch":"@@ -35,7 +35,7 @@ public class EntitlementTest extends AbstractTest {\n     public final void findAll() {\n         List<Entitlement> list = entitlementDAO.findAll();\n         assertEquals(\"did not get expected number of entitlements \",\n-                38, list.size());\n+                40, list.size());\n     }\n \n     @Test"},{"sha":"9f0485a806ad50fdc63c2654940ada01330548f2","filename":"core/src/test/java/org/syncope/core/rest/LogTestITCase.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75481af555500821b4e17cd1241e2d823a56ebb8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FLogTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75481af555500821b4e17cd1241e2d823a56ebb8/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FLogTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FLogTestITCase.java?ref=75481af555500821b4e17cd1241e2d823a56ebb8","patch":"@@ -0,0 +1,47 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.rest;\n+\n+import ch.qos.logback.classic.Level;\n+import java.util.Arrays;\n+import static org.junit.Assert.*;\n+\n+import java.util.List;\n+import org.junit.Test;\n+import org.syncope.client.to.LoggerTO;\n+\n+public class LogTestITCase extends AbstractTest {\n+\n+    @Test\n+    public final void list() {\n+        List<LoggerTO> loggers = Arrays.asList(\n+                restTemplate.getForObject(\n+                BASE_URL + \"log/controller/list\", LoggerTO[].class));\n+        assertNotNull(loggers);\n+        assertFalse(loggers.isEmpty());\n+        for (LoggerTO logger : loggers) {\n+            assertNotNull(logger);\n+        }\n+    }\n+\n+    public final void setLoggerLevel() {\n+        LoggerTO logger = restTemplate.postForObject(\n+                BASE_URL + \"log/controller/{name}/{level}\",\n+                null, LoggerTO.class, \"org.syncope.core.monitor\", \"INFO\");\n+        assertNotNull(logger);\n+\n+        assertEquals(Level.INFO, logger.getLevel());\n+    }\n+}"},{"sha":"29efd4ef1c8fdb9ea9b1f7a94c56160664d583da","filename":"core/src/test/resources/content.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/75481af555500821b4e17cd1241e2d823a56ebb8/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/75481af555500821b4e17cd1241e2d823a56ebb8/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=75481af555500821b4e17cd1241e2d823a56ebb8","patch":"@@ -335,6 +335,8 @@\n     <Entitlement name=\"TASK_EXECUTE\"/>\n     <Entitlement name=\"TASK_READ\"/>\n     <Entitlement name=\"TASK_DELETE\"/>\n+    <Entitlement name=\"LOG_LIST\"/>\n+    <Entitlement name=\"LOG_SET_LEVEL\"/>\n \n     <SyncopeRole_Entitlement entitlements_name=\"SCHEMA_READ\" roles_id=\"8\"/>\n </dataset>"}]}