{"sha":"0cc265743e1789d7943a708bffa64fb04ba7fd4e","node_id":"C_kwDOJfYA1toAKDBjYzI2NTc0M2UxNzg5ZDc5NDNhNzA4YmZmYTY0ZmIwNGJhN2ZkNGU","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2022-06-27T16:02:49Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-06-27T16:02:49Z"},"message":"[SYNCOPE-1684] Consolidating AuditService's create and update into single set method (#357)","tree":{"sha":"cb1e8a9d35e54b98fa7c291066d4d23dbc2cb5d6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/cb1e8a9d35e54b98fa7c291066d4d23dbc2cb5d6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0cc265743e1789d7943a708bffa64fb04ba7fd4e","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiudSpCRBK7hj4Ov3rIwAACRkIAHQo3xlNwZK6hRxQ4FQ+Rwf3\nJy+gbWbwDYEDZYPESnfwhJt5H6wZfXOcuc7xn8R+ox8FMDHWanVCmXVqvviVnVNM\nh3Qo7brj3wGEookhX2po4Zlqfx8gYqdVFH4bPITRaI+xE+O9HDGXJBDSjCeBlLV1\nu9gk2gypXtTyun7i4cyI8GXvXWyiL/Tlsn7EC6CU7wnKsgVybNKvQyeiJfBX6O44\nV2Xw+38PVPHoV919RHL4rGMqegMgpyqSZz3O2ndLFj4EhHNpzDf28MEWeDBBsU+u\nslRG/DqgzjvqWrVxJUmjHxQ87ot2/HFfMnzw3duJQC21KHxxTLaC0tRDIkCpkZE=\n=Plod\n-----END PGP SIGNATURE-----\n","payload":"tree cb1e8a9d35e54b98fa7c291066d4d23dbc2cb5d6\nparent c7e7c1b4cee0ca69866989f47797d5cec6232287\nauthor Francesco Chicchiriccò <ilgrosso@users.noreply.github.com> 1656345769 +0200\ncommitter GitHub <noreply@github.com> 1656345769 +0200\n\n[SYNCOPE-1684] Consolidating AuditService's create and update into single set method (#357)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0cc265743e1789d7943a708bffa64fb04ba7fd4e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0cc265743e1789d7943a708bffa64fb04ba7fd4e","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0cc265743e1789d7943a708bffa64fb04ba7fd4e/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"c7e7c1b4cee0ca69866989f47797d5cec6232287","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c7e7c1b4cee0ca69866989f47797d5cec6232287","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c7e7c1b4cee0ca69866989f47797d5cec6232287"}],"stats":{"total":94,"additions":33,"deletions":61},"files":[{"sha":"aa2048b563734866ceb6cc835b0cba2b556e5ef0","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/pages/Audit.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cc265743e1789d7943a708bffa64fb04ba7fd4e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAudit.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cc265743e1789d7943a708bffa64fb04ba7fd4e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAudit.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAudit.java?ref=0cc265743e1789d7943a708bffa64fb04ba7fd4e","patch":"@@ -74,7 +74,7 @@ protected List<String> getListAuthRoles() {\n \n             @Override\n             protected List<String> getChangeAuthRoles() {\n-                return List.of(IdRepoEntitlement.AUDIT_UPDATE);\n+                return List.of(IdRepoEntitlement.AUDIT_SET);\n             }\n \n             @Override"},{"sha":"d47efda1d8e312818d0b9ea08066640bd9564181","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/rest/AuditRestClient.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cc265743e1789d7943a708bffa64fb04ba7fd4e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAuditRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cc265743e1789d7943a708bffa64fb04ba7fd4e/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAuditRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAuditRestClient.java?ref=0cc265743e1789d7943a708bffa64fb04ba7fd4e","patch":"@@ -69,14 +69,14 @@ public static void enableAudit(final AuditLoggerName auditLoggerName) {\n         AuditConfTO audit = new AuditConfTO();\n         audit.setKey(auditLoggerName.toAuditKey());\n         audit.setActive(true);\n-        getService(AuditService.class).update(audit);\n+        getService(AuditService.class).set(audit);\n     }\n \n     public static void disableAudit(final AuditLoggerName auditLoggerName) {\n         AuditConfTO audit = new AuditConfTO();\n         audit.setKey(auditLoggerName.toAuditKey());\n         audit.setActive(false);\n-        getService(AuditService.class).update(audit);\n+        getService(AuditService.class).set(audit);\n     }\n \n     public static List<EventCategory> listEvents() {"},{"sha":"8472125348ac0b07610a2817cf14be16197e814b","filename":"client/idrepo/console/src/test/resources/console-debug.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cc265743e1789d7943a708bffa64fb04ba7fd4e/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fresources%2Fconsole-debug.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cc265743e1789d7943a708bffa64fb04ba7fd4e/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fresources%2Fconsole-debug.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Ftest%2Fresources%2Fconsole-debug.properties?ref=0cc265743e1789d7943a708bffa64fb04ba7fd4e","patch":"@@ -14,8 +14,8 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-#keymaster.address=http://localhost:9080/syncope/rest/keymaster\n-keymaster.address=https://localhost:9443/syncope/rest/keymaster\n+keymaster.address=http://localhost:9080/syncope/rest/keymaster\n+#keymaster.address=https://localhost:9443/syncope/rest/keymaster\n keymaster.username=${anonymousUser}\n keymaster.password=${anonymousKey}\n "},{"sha":"3fe99d45266d562589c42c990c0636a7f4b43fea","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/types/IdRepoEntitlement.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cc265743e1789d7943a708bffa64fb04ba7fd4e/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIdRepoEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cc265743e1789d7943a708bffa64fb04ba7fd4e/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIdRepoEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FIdRepoEntitlement.java?ref=0cc265743e1789d7943a708bffa64fb04ba7fd4e","patch":"@@ -204,9 +204,7 @@ public final class IdRepoEntitlement {\n \n     public static final String AUDIT_READ = \"AUDIT_READ\";\n \n-    public static final String AUDIT_CREATE = \"AUDIT_CREATE\";\n-\n-    public static final String AUDIT_UPDATE = \"AUDIT_UPDATE\";\n+    public static final String AUDIT_SET = \"AUDIT_SET\";\n \n     public static final String AUDIT_DELETE = \"AUDIT_DELETE\";\n "},{"sha":"423358287d6db956915f77ef8387dd03415014f0","filename":"common/idrepo/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/AuditService.java","status":"modified","additions":2,"deletions":14,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cc265743e1789d7943a708bffa64fb04ba7fd4e/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAuditService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cc265743e1789d7943a708bffa64fb04ba7fd4e/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAuditService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FAuditService.java?ref=0cc265743e1789d7943a708bffa64fb04ba7fd4e","patch":"@@ -76,19 +76,7 @@ public interface AuditService extends JAXRSService {\n     AuditConfTO read(@NotNull @PathParam(\"key\") String key);\n \n     /**\n-     * Creates a new audit.\n-     *\n-     * @param auditTO audit to be created\n-     */\n-    @ApiResponses(\n-            @ApiResponse(responseCode = \"201\", description = \"Audit successfully created\"))\n-    @POST\n-    @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    void create(@NotNull AuditConfTO auditTO);\n-\n-    /**\n-     * Updates the audit matching the provided key.\n+     * Set an audit setting.\n      *\n      * @param auditTO audit to be stored\n      */\n@@ -100,7 +88,7 @@ public interface AuditService extends JAXRSService {\n     @Path(\"{key}\")\n     @Consumes({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n-    void update(@NotNull AuditConfTO auditTO);\n+    void set(@NotNull AuditConfTO auditTO);\n \n     /**\n      * Deletes the audit matching the provided key."},{"sha":"13ba023389ffc616506ae6e3c64532be5f50a5ff","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/AuditLogic.java","status":"modified","additions":8,"deletions":16,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cc265743e1789d7943a708bffa64fb04ba7fd4e/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAuditLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cc265743e1789d7943a708bffa64fb04ba7fd4e/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAuditLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAuditLogic.java?ref=0cc265743e1789d7943a708bffa64fb04ba7fd4e","patch":"@@ -113,22 +113,14 @@ public AuditConfTO read(final String key) {\n                 orElseThrow(() -> new NotFoundException(\"Audit \" + key));\n     }\n \n-    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.AUDIT_CREATE + \"')\")\n-    public void create(final AuditConfTO auditTO) {\n-        AuditConf audit = entityFactory.newEntity(AuditConf.class);\n-        audit.setKey(auditTO.getKey());\n-        audit.setActive(auditTO.isActive());\n-        audit = auditConfDAO.save(audit);\n-\n-        if (audit.isActive()) {\n-            setLevel(audit.getKey(), Level.DEBUG);\n-        }\n-    }\n-\n-    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.AUDIT_UPDATE + \"')\")\n-    public void update(final AuditConfTO auditTO) {\n+    @PreAuthorize(\"hasRole('\" + IdRepoEntitlement.AUDIT_SET + \"')\")\n+    public void set(final AuditConfTO auditTO) {\n         AuditConf audit = Optional.ofNullable(auditConfDAO.find(auditTO.getKey())).\n-                orElseThrow(() -> new NotFoundException(\"Audit \" + auditTO.getKey()));\n+                orElseGet(() -> {\n+                    AuditConf a = entityFactory.newEntity(AuditConf.class);\n+                    a.setKey(auditTO.getKey());\n+                    return a;\n+                });\n         audit.setActive(auditTO.isActive());\n         audit = auditConfDAO.save(audit);\n \n@@ -289,7 +281,7 @@ public Pair<Integer, List<AuditEntry>> search(\n     @PreAuthorize(\"isAuthenticated()\")\n     public void create(final AuditEntry auditEntry) {\n         boolean authorized =\n-                AuthContextUtils.getAuthorizations().containsKey(IdRepoEntitlement.AUDIT_CREATE)\n+                AuthContextUtils.getAuthorizations().containsKey(IdRepoEntitlement.AUDIT_SET)\n                 || AuthContextUtils.getAuthorizations().containsKey(IdRepoEntitlement.ANONYMOUS)\n                 && AuditElements.EventCategoryType.WA == auditEntry.getLogger().getType();\n         if (authorized) {"},{"sha":"d2a382919e49829f77db5dbd1bed4d9446533674","filename":"core/idrepo/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AuditServiceImpl.java","status":"modified","additions":2,"deletions":7,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cc265743e1789d7943a708bffa64fb04ba7fd4e/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAuditServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cc265743e1789d7943a708bffa64fb04ba7fd4e/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAuditServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAuditServiceImpl.java?ref=0cc265743e1789d7943a708bffa64fb04ba7fd4e","patch":"@@ -49,13 +49,8 @@ public AuditConfTO read(final String key) {\n     }\n \n     @Override\n-    public void create(final AuditConfTO auditTO) {\n-        logic.create(auditTO);\n-    }\n-\n-    @Override\n-    public void update(final AuditConfTO auditTO) {\n-        logic.update(auditTO);\n+    public void set(final AuditConfTO auditTO) {\n+        logic.set(auditTO);\n     }\n \n     @Override"},{"sha":"9175f4884c1a3c96cff50f1e8a7d21cac5a35fbc","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/RoleTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cc265743e1789d7943a708bffa64fb04ba7fd4e/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRoleTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cc265743e1789d7943a708bffa64fb04ba7fd4e/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRoleTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FRoleTest.java?ref=0cc265743e1789d7943a708bffa64fb04ba7fd4e","patch":"@@ -68,7 +68,7 @@ public void save() {\n         role.add(realmDAO.getRoot());\n         role.add(realmDAO.findByFullPath(\"/even/two\"));\n         role.getEntitlements().add(IdRepoEntitlement.AUDIT_LIST);\n-        role.getEntitlements().add(IdRepoEntitlement.AUDIT_UPDATE);\n+        role.getEntitlements().add(IdRepoEntitlement.AUDIT_SET);\n \n         Role actual = roleDAO.save(role);\n         assertNotNull(actual);"},{"sha":"a3ee8a9a49052fdd548c463f0bd043df79acff31","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/AnySearchTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cc265743e1789d7943a708bffa64fb04ba7fd4e/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FAnySearchTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cc265743e1789d7943a708bffa64fb04ba7fd4e/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FAnySearchTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FAnySearchTest.java?ref=0cc265743e1789d7943a708bffa64fb04ba7fd4e","patch":"@@ -84,7 +84,7 @@ public void searchByDynMembership() {\n         role.add(realmDAO.getRoot());\n         role.add(realmDAO.findByFullPath(\"/even/two\"));\n         role.getEntitlements().add(IdRepoEntitlement.AUDIT_LIST);\n-        role.getEntitlements().add(IdRepoEntitlement.AUDIT_UPDATE);\n+        role.getEntitlements().add(IdRepoEntitlement.AUDIT_SET);\n \n         DynRoleMembership dynMembership = entityFactory.newEntity(DynRoleMembership.class);\n         dynMembership.setFIQLCond(\"cool==true\");"},{"sha":"049ac3f87a1b3980293c3d9da02796fc2cd32ec1","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/outer/RoleTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cc265743e1789d7943a708bffa64fb04ba7fd4e/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FRoleTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cc265743e1789d7943a708bffa64fb04ba7fd4e/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FRoleTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fouter%2FRoleTest.java?ref=0cc265743e1789d7943a708bffa64fb04ba7fd4e","patch":"@@ -120,7 +120,7 @@ public void dynMembership() {\n         role.add(realmDAO.getRoot());\n         role.add(realmDAO.findByFullPath(\"/even/two\"));\n         role.getEntitlements().add(IdRepoEntitlement.AUDIT_LIST);\n-        role.getEntitlements().add(IdRepoEntitlement.AUDIT_UPDATE);\n+        role.getEntitlements().add(IdRepoEntitlement.AUDIT_SET);\n \n         DynRoleMembership dynMembership = entityFactory.newEntity(DynRoleMembership.class);\n         dynMembership.setFIQLCond(\"cool==true\");\n@@ -184,7 +184,7 @@ public void delete() {\n         role.add(realmDAO.getRoot());\n         role.add(realmDAO.findByFullPath(\"/even/two\"));\n         role.getEntitlements().add(IdRepoEntitlement.AUDIT_LIST);\n-        role.getEntitlements().add(IdRepoEntitlement.AUDIT_UPDATE);\n+        role.getEntitlements().add(IdRepoEntitlement.AUDIT_SET);\n \n         role = roleDAO.save(role);\n         assertNotNull(role);"},{"sha":"be7bd75d32e375109c3f42e0d9249b8ebcaf2d3f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/AuditITCase.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cc265743e1789d7943a708bffa64fb04ba7fd4e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuditITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cc265743e1789d7943a708bffa64fb04ba7fd4e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuditITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FAuditITCase.java?ref=0cc265743e1789d7943a708bffa64fb04ba7fd4e","patch":"@@ -263,7 +263,7 @@ public void enableDisable() {\n         AuditConfTO audit = new AuditConfTO();\n         audit.setKey(auditLoggerName.toAuditKey());\n         audit.setActive(true);\n-        AUDIT_SERVICE.create(audit);\n+        AUDIT_SERVICE.set(audit);\n \n         audits = AUDIT_SERVICE.list();\n         assertTrue(audits.stream().anyMatch(a -> a.getKey().equals(auditLoggerName.toAuditKey())));\n@@ -512,16 +512,16 @@ public void issueSYNCOPE1446() {\n             AuditConfTO audit = new AuditConfTO();\n             audit.setKey(createSuccess.toAuditKey());\n             audit.setActive(true);\n-            AUDIT_SERVICE.create(audit);\n+            AUDIT_SERVICE.set(audit);\n \n             audit.setKey(createFailure.toAuditKey());\n-            AUDIT_SERVICE.create(audit);\n+            AUDIT_SERVICE.set(audit);\n \n             audit.setKey(updateSuccess.toAuditKey());\n-            AUDIT_SERVICE.create(audit);\n+            AUDIT_SERVICE.set(audit);\n \n             audit.setKey(updateFailure.toAuditKey());\n-            AUDIT_SERVICE.create(audit);\n+            AUDIT_SERVICE.set(audit);\n \n             // 2. push on resource\n             PushTaskTO pushTask = new PushTaskTO();"},{"sha":"c04575d57e3457367d7a9cb3180d3c559fa75004","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/DelegationITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cc265743e1789d7943a708bffa64fb04ba7fd4e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDelegationITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cc265743e1789d7943a708bffa64fb04ba7fd4e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDelegationITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FDelegationITCase.java?ref=0cc265743e1789d7943a708bffa64fb04ba7fd4e","patch":"@@ -207,7 +207,7 @@ public void operations() {\n         AuditConfTO authLogin = new AuditConfTO();\n         authLogin.setKey(authLoginSuccess.toAuditKey());\n         authLogin.setActive(true);\n-        AUDIT_SERVICE.create(authLogin);\n+        AUDIT_SERVICE.set(authLogin);\n \n         // 1. bellini delegates rossini\n         DelegationTO delegation = new DelegationTO();\n@@ -265,6 +265,6 @@ public void operations() {\n \n         // 6. disable audit\n         authLogin.setActive(false);\n-        AUDIT_SERVICE.update(authLogin);\n+        AUDIT_SERVICE.set(authLogin);\n     }\n }"},{"sha":"12a7f66611f28a639daf25953f22a41d23e75d9d","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/ReportITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cc265743e1789d7943a708bffa64fb04ba7fd4e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cc265743e1789d7943a708bffa64fb04ba7fd4e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FReportITCase.java?ref=0cc265743e1789d7943a708bffa64fb04ba7fd4e","patch":"@@ -303,7 +303,7 @@ public void auditReport() throws IOException {\n         try {\n             AuditConfTO audit = new AuditConfTO();\n             audit.setKey(auditLoggerName.toAuditKey());\n-            AUDIT_SERVICE.create(audit);\n+            AUDIT_SERVICE.set(audit);\n \n             ImplementationTO auditReportlet = new ImplementationTO();\n             auditReportlet.setKey(\"UserReportletConf\" + getUUIDString());"},{"sha":"d484e42da32b2d2870f6f7612f80865fad78c051","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/RoleITCase.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0cc265743e1789d7943a708bffa64fb04ba7fd4e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRoleITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0cc265743e1789d7943a708bffa64fb04ba7fd4e/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRoleITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FRoleITCase.java?ref=0cc265743e1789d7943a708bffa64fb04ba7fd4e","patch":"@@ -46,7 +46,7 @@ public static RoleTO getSampleRoleTO(final String name) {\n         RoleTO role = new RoleTO();\n         role.setKey(name + getUUIDString());\n         role.getRealms().add(\"/even\");\n-        role.getEntitlements().add(IdRepoEntitlement.AUDIT_UPDATE);\n+        role.getEntitlements().add(IdRepoEntitlement.AUDIT_SET);\n \n         return role;\n     }\n@@ -71,8 +71,7 @@ public void create() {\n         RoleTO role = new RoleTO();\n         role.getRealms().add(SyncopeConstants.ROOT_REALM);\n         role.getRealms().add(\"/even/two\");\n-        role.getEntitlements().add(IdRepoEntitlement.AUDIT_CREATE);\n-        role.getEntitlements().add(IdRepoEntitlement.AUDIT_UPDATE);\n+        role.getEntitlements().add(IdRepoEntitlement.AUDIT_SET);\n \n         try {\n             createRole(role);\n@@ -90,7 +89,7 @@ public void create() {\n     public void createWithTilde() {\n         RoleTO role = new RoleTO();\n         role.getRealms().add(SyncopeConstants.ROOT_REALM);\n-        role.getEntitlements().add(IdRepoEntitlement.AUDIT_UPDATE);\n+        role.getEntitlements().add(IdRepoEntitlement.AUDIT_SET);\n         role.setKey(\"new~\" + getUUIDString());\n         role = createRole(role);\n         assertNotNull(role);"}]}