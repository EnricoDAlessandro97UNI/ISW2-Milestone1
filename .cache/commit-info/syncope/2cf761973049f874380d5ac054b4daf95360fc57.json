{"sha":"2cf761973049f874380d5ac054b4daf95360fc57","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJjZjc2MTk3MzA0OWY4NzQzODBkNWFjMDU0YjRkYWY5NTM2MGZjNTc=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-08-17T15:56:15Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-08-17T15:56:15Z"},"message":"[SYNCOPE-685] Pre: more cleanup","tree":{"sha":"fe437975cba4233e4782ef303529a3726c13d34c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fe437975cba4233e4782ef303529a3726c13d34c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2cf761973049f874380d5ac054b4daf95360fc57","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2cf761973049f874380d5ac054b4daf95360fc57","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2cf761973049f874380d5ac054b4daf95360fc57","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2cf761973049f874380d5ac054b4daf95360fc57/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"fc91e516ed0ba34f8252830f69830460d58eae6b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fc91e516ed0ba34f8252830f69830460d58eae6b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fc91e516ed0ba34f8252830f69830460d58eae6b"}],"stats":{"total":258,"additions":109,"deletions":149},"files":[{"sha":"d7a5640601f1ba518d956369745ef2cf324f916d","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/PushPolicySpec.java","status":"renamed","additions":5,"deletions":18,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cf761973049f874380d5ac054b4daf95360fc57/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPushPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cf761973049f874380d5ac054b4daf95360fc57/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPushPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FPushPolicySpec.java?ref=2cf761973049f874380d5ac054b4daf95360fc57","patch":"@@ -16,26 +16,13 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.core.persistence.jpa.validation.entity;\n+package org.apache.syncope.common.lib.types;\n \n-import java.lang.annotation.Documented;\n-import java.lang.annotation.ElementType;\n-import java.lang.annotation.Retention;\n-import java.lang.annotation.RetentionPolicy;\n-import java.lang.annotation.Target;\n+import javax.xml.bind.annotation.XmlType;\n \n-import javax.validation.Constraint;\n-import javax.validation.Payload;\n+@XmlType\n+public class PushPolicySpec implements PolicySpec {\n \n-@Target({ ElementType.TYPE })\n-@Retention(RetentionPolicy.RUNTIME)\n-@Constraint(validatedBy = PolicyValidator.class)\n-@Documented\n-public @interface PolicyCheck {\n+    private static final long serialVersionUID = 3641030189482617497L;\n \n-    String message() default \"{org.apache.syncope.core.persistence.validation.policy}\";\n-\n-    Class<?>[] groups() default {};\n-\n-    Class<? extends Payload>[] payload() default {};\n }","previous_filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/PolicyCheck.java"},{"sha":"de1bcfba3ffc80a246981b6b177edd344efcb914","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/ConnObjectUtils.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2FConnObjectUtils.java?ref=2cf761973049f874380d5ac054b4daf95360fc57","patch":"@@ -123,19 +123,19 @@ public <T extends AnyTO> T getAnyTO(\n             if (realm != null) {\n                 for (Realm ancestor : realmDAO.findAncestors(realm)) {\n                     if (ancestor.getPasswordPolicy() != null\n-                            && ancestor.getPasswordPolicy().getSpecification(PasswordPolicySpec.class) != null) {\n+                            && ancestor.getPasswordPolicy().getSpecification() != null) {\n \n-                        ppSpecs.add(ancestor.getPasswordPolicy().getSpecification(PasswordPolicySpec.class));\n+                        ppSpecs.add(ancestor.getPasswordPolicy().getSpecification());\n                     }\n                 }\n             }\n \n             for (String resName : userTO.getResources()) {\n                 ExternalResource resource = resourceDAO.find(resName);\n                 if (resource != null && resource.getPasswordPolicy() != null\n-                        && resource.getPasswordPolicy().getSpecification(PasswordPolicySpec.class) != null) {\n+                        && resource.getPasswordPolicy().getSpecification() != null) {\n \n-                    ppSpecs.add(resource.getPasswordPolicy().getSpecification(PasswordPolicySpec.class));\n+                    ppSpecs.add(resource.getPasswordPolicy().getSpecification());\n                 }\n             }\n "},{"sha":"f7d946cdce595fa7a1375417572aa0bdcf532bbd","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/policy/PolicyEvaluator.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fpolicy%2FPolicyEvaluator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fpolicy%2FPolicyEvaluator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fpolicy%2FPolicyEvaluator.java?ref=2cf761973049f874380d5ac054b4daf95360fc57","patch":"@@ -22,7 +22,9 @@\n import org.apache.syncope.common.lib.types.AccountPolicySpec;\n import org.apache.syncope.common.lib.types.PasswordPolicySpec;\n import org.apache.syncope.common.lib.types.PolicySpec;\n+import org.apache.syncope.core.persistence.api.entity.AccountPolicy;\n import org.apache.syncope.core.persistence.api.entity.Any;\n+import org.apache.syncope.core.persistence.api.entity.PasswordPolicy;\n import org.apache.syncope.core.persistence.api.entity.PlainAttr;\n import org.apache.syncope.core.persistence.api.entity.Policy;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n@@ -41,7 +43,7 @@ public <T extends PolicySpec> T evaluate(final Policy policy, final Any<?, ?, ?>\n         T result;\n         switch (policy.getType()) {\n             case PASSWORD:\n-                PasswordPolicySpec ppSpec = policy.getSpecification(PasswordPolicySpec.class);\n+                PasswordPolicySpec ppSpec = ((PasswordPolicy) policy).getSpecification();\n                 PasswordPolicySpec evaluatedPPSpec = new PasswordPolicySpec();\n \n                 BeanUtils.copyProperties(ppSpec, evaluatedPPSpec, new String[] { \"schemasNotPermitted\" });\n@@ -71,7 +73,7 @@ public <T extends PolicySpec> T evaluate(final Policy policy, final Any<?, ?, ?>\n                 break;\n \n             case ACCOUNT:\n-                AccountPolicySpec spec = policy.getSpecification(AccountPolicySpec.class);\n+                AccountPolicySpec spec = ((AccountPolicy) policy).getSpecification();\n                 AccountPolicySpec accountPolicy = new AccountPolicySpec();\n \n                 BeanUtils.copyProperties(spec, accountPolicy, new String[] { \"schemasNotPermitted\" });"},{"sha":"d5e2e14038b71f69c2b07052d9845d3cda058ae0","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/security/PasswordGenerator.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FPasswordGenerator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FPasswordGenerator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fsecurity%2FPasswordGenerator.java?ref=2cf761973049f874380d5ac054b4daf95360fc57","patch":"@@ -71,17 +71,17 @@ public String generate(final User user)\n \n         for (Realm ancestor : realmDAO.findAncestors(user.getRealm())) {\n             if (ancestor.getPasswordPolicy() != null\n-                    && ancestor.getPasswordPolicy().getSpecification(PasswordPolicySpec.class) != null) {\n+                    && ancestor.getPasswordPolicy().getSpecification() != null) {\n \n-                ppSpecs.add(ancestor.getPasswordPolicy().getSpecification(PasswordPolicySpec.class));\n+                ppSpecs.add(ancestor.getPasswordPolicy().getSpecification());\n             }\n         }\n \n         for (ExternalResource resource : userDAO.findAllResources(user)) {\n             if (resource.getPasswordPolicy() != null\n-                    && resource.getPasswordPolicy().getSpecification(PasswordPolicySpec.class) != null) {\n+                    && resource.getPasswordPolicy().getSpecification() != null) {\n \n-                ppSpecs.add(resource.getPasswordPolicy().getSpecification(PasswordPolicySpec.class));\n+                ppSpecs.add(resource.getPasswordPolicy().getSpecification());\n             }\n         }\n "},{"sha":"72f8cac9a1f970d124cddc5219ccf00f4488ddb7","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/AccountPolicy.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAccountPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAccountPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FAccountPolicy.java?ref=2cf761973049f874380d5ac054b4daf95360fc57","patch":"@@ -20,9 +20,14 @@\n \n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import java.util.Set;\n+import org.apache.syncope.common.lib.types.AccountPolicySpec;\n \n public interface AccountPolicy extends Policy {\n \n+    AccountPolicySpec getSpecification();\n+\n+    void setSpecification(AccountPolicySpec spec);\n+    \n     boolean add(ExternalResource resource);\n \n     boolean remove(ExternalResource resource);"},{"sha":"a4004cef9620a9759062027ad1606d30b99b48d4","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/PasswordPolicy.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPasswordPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPasswordPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPasswordPolicy.java?ref=2cf761973049f874380d5ac054b4daf95360fc57","patch":"@@ -18,6 +18,12 @@\n  */\n package org.apache.syncope.core.persistence.api.entity;\n \n+import org.apache.syncope.common.lib.types.PasswordPolicySpec;\n+\n public interface PasswordPolicy extends Policy {\n-    \n+\n+    PasswordPolicySpec getSpecification();\n+\n+    void setSpecification(PasswordPolicySpec spec);\n+\n }"},{"sha":"d02de0aa649b2514f4585f5b81e74ea4628d5a56","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/Policy.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPolicy.java?ref=2cf761973049f874380d5ac054b4daf95360fc57","patch":"@@ -18,18 +18,13 @@\n  */\n package org.apache.syncope.core.persistence.api.entity;\n \n-import org.apache.syncope.common.lib.types.PolicySpec;\n import org.apache.syncope.common.lib.types.PolicyType;\n \n public interface Policy extends Entity<Long> {\n \n     String getDescription();\n \n-    <T extends PolicySpec> T getSpecification(Class<T> reference);\n-\n     PolicyType getType();\n \n     void setDescription(String description);\n-\n-    void setSpecification(PolicySpec policy);\n }"},{"sha":"e1c37df3997f603c30dc305f24aa9f3be48b60ac","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/PushPolicy.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPushPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPushPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FPushPolicy.java?ref=2cf761973049f874380d5ac054b4daf95360fc57","patch":"@@ -18,6 +18,11 @@\n  */\n package org.apache.syncope.core.persistence.api.entity;\n \n+import org.apache.syncope.common.lib.types.PushPolicySpec;\n+\n public interface PushPolicy extends Policy {\n-    \n+\n+    PushPolicySpec getSpecification();\n+\n+    void setSpecification(PushPolicySpec spec);\n }"},{"sha":"1e389d76573be5f7b04a0c4169d7ce6e37b05eae","filename":"core/persistence-api/src/main/java/org/apache/syncope/core/persistence/api/entity/SyncPolicy.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSyncPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSyncPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fapi%2Fentity%2FSyncPolicy.java?ref=2cf761973049f874380d5ac054b4daf95360fc57","patch":"@@ -18,6 +18,12 @@\n  */\n package org.apache.syncope.core.persistence.api.entity;\n \n+import org.apache.syncope.common.lib.types.SyncPolicySpec;\n+\n public interface SyncPolicy extends Policy {\n-    \n+\n+    SyncPolicySpec getSpecification();\n+\n+    void setSpecification(SyncPolicySpec spec);\n+\n }"},{"sha":"844b49adc8ccf59f2bccecba168bd2717020cd13","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAAccountPolicy.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAccountPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAccountPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAAccountPolicy.java?ref=2cf761973049f874380d5ac054b4daf95360fc57","patch":"@@ -28,7 +28,9 @@\n import javax.persistence.ManyToMany;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Transformer;\n+import org.apache.syncope.common.lib.types.AccountPolicySpec;\n import org.apache.syncope.common.lib.types.PolicyType;\n+import org.apache.syncope.core.misc.serialization.POJOHelper;\n import org.apache.syncope.core.persistence.api.entity.AccountPolicy;\n import org.apache.syncope.core.persistence.api.entity.resource.ExternalResource;\n import org.apache.syncope.core.persistence.jpa.entity.resource.JPAExternalResource;\n@@ -54,6 +56,16 @@ public JPAAccountPolicy() {\n         this.type = PolicyType.ACCOUNT;\n     }\n \n+    @Override\n+    public AccountPolicySpec getSpecification() {\n+        return POJOHelper.deserialize(specification, AccountPolicySpec.class);\n+    }\n+\n+    @Override\n+    public void setSpecification(final AccountPolicySpec policy) {\n+        this.specification = POJOHelper.serialize(policy);\n+    }\n+\n     @Override\n     public boolean add(final ExternalResource resource) {\n         checkType(resource, JPAExternalResource.class);"},{"sha":"8a755f4c22e0a8e3a0a760d7fb4f0418163a8b56","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAPasswordPolicy.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAPasswordPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAPasswordPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAPasswordPolicy.java?ref=2cf761973049f874380d5ac054b4daf95360fc57","patch":"@@ -20,7 +20,9 @@\n \n import javax.persistence.DiscriminatorValue;\n import javax.persistence.Entity;\n+import org.apache.syncope.common.lib.types.PasswordPolicySpec;\n import org.apache.syncope.common.lib.types.PolicyType;\n+import org.apache.syncope.core.misc.serialization.POJOHelper;\n import org.apache.syncope.core.persistence.api.entity.PasswordPolicy;\n \n @Entity\n@@ -33,4 +35,14 @@ public JPAPasswordPolicy() {\n         super();\n         this.type = PolicyType.PASSWORD;\n     }\n+\n+    @Override\n+    public PasswordPolicySpec getSpecification() {\n+        return POJOHelper.deserialize(specification, PasswordPolicySpec.class);\n+    }\n+\n+    @Override\n+    public void setSpecification(final PasswordPolicySpec policy) {\n+        this.specification = POJOHelper.serialize(policy);\n+    }\n }"},{"sha":"1dc5de60613dea7076a0b9a763525a6409dd0718","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAPolicy.java","status":"modified","additions":1,"deletions":15,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAPolicy.java?ref=2cf761973049f874380d5ac054b4daf95360fc57","patch":"@@ -28,17 +28,13 @@\n import javax.persistence.Lob;\n import javax.persistence.Table;\n import javax.validation.constraints.NotNull;\n-import org.apache.syncope.common.lib.types.PolicySpec;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.syncope.core.persistence.api.entity.Policy;\n-import org.apache.syncope.core.persistence.jpa.validation.entity.PolicyCheck;\n-import org.apache.syncope.core.misc.serialization.POJOHelper;\n \n @Entity\n @Table(name = JPAPolicy.TABLE)\n @Inheritance(strategy = InheritanceType.SINGLE_TABLE)\n @DiscriminatorColumn(name = \"DTYPE\")\n-@PolicyCheck\n public abstract class JPAPolicy extends AbstractEntity<Long> implements Policy {\n \n     private static final long serialVersionUID = -5844833125843247458L;\n@@ -56,7 +52,7 @@ public abstract class JPAPolicy extends AbstractEntity<Long> implements Policy {\n     protected PolicyType type;\n \n     @Lob\n-    private String specification;\n+    protected String specification;\n \n     @Override\n     public Long getKey() {\n@@ -77,14 +73,4 @@ public void setDescription(final String description) {\n     public PolicyType getType() {\n         return type;\n     }\n-\n-    @Override\n-    public <T extends PolicySpec> T getSpecification(final Class<T> reference) {\n-        return POJOHelper.deserialize(specification, reference);\n-    }\n-\n-    @Override\n-    public void setSpecification(final PolicySpec policy) {\n-        this.specification = POJOHelper.serialize(policy);\n-    }\n }"},{"sha":"c3440b2e764ae64d47817f1333c24cc2ae4d5466","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPAPushPolicy.java","status":"modified","additions":12,"deletions":4,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAPushPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAPushPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPAPushPolicy.java?ref=2cf761973049f874380d5ac054b4daf95360fc57","patch":"@@ -20,6 +20,8 @@\n \n import javax.persistence.Entity;\n import org.apache.syncope.common.lib.types.PolicyType;\n+import org.apache.syncope.common.lib.types.PushPolicySpec;\n+import org.apache.syncope.core.misc.serialization.POJOHelper;\n import org.apache.syncope.core.persistence.api.entity.PushPolicy;\n \n @Entity\n@@ -28,12 +30,18 @@ public class JPAPushPolicy extends JPAPolicy implements PushPolicy {\n     private static final long serialVersionUID = -5875589156893921113L;\n \n     public JPAPushPolicy() {\n-        this(false);\n-    }\n-\n-    public JPAPushPolicy(final boolean global) {\n         super();\n         this.type = PolicyType.PUSH;\n     }\n \n+    @Override\n+    public PushPolicySpec getSpecification() {\n+        return POJOHelper.deserialize(specification, PushPolicySpec.class);\n+    }\n+\n+    @Override\n+    public void setSpecification(final PushPolicySpec policy) {\n+        this.specification = POJOHelper.serialize(policy);\n+    }\n+\n }"},{"sha":"e244223521eb934686054a472320ed7600ac2645","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/JPASyncPolicy.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASyncPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASyncPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FJPASyncPolicy.java?ref=2cf761973049f874380d5ac054b4daf95360fc57","patch":"@@ -20,7 +20,9 @@\n \n import javax.persistence.DiscriminatorValue;\n import javax.persistence.Entity;\n+import org.apache.syncope.common.lib.types.SyncPolicySpec;\n import org.apache.syncope.common.lib.types.PolicyType;\n+import org.apache.syncope.core.misc.serialization.POJOHelper;\n import org.apache.syncope.core.persistence.api.entity.SyncPolicy;\n \n @Entity\n@@ -33,4 +35,14 @@ public JPASyncPolicy() {\n         super();\n         this.type = PolicyType.SYNC;\n     }\n+\n+    @Override\n+    public SyncPolicySpec getSpecification() {\n+        return POJOHelper.deserialize(specification, SyncPolicySpec.class);\n+    }\n+\n+    @Override\n+    public void setSpecification(final SyncPolicySpec policy) {\n+        this.specification = POJOHelper.serialize(policy);\n+    }\n }"},{"sha":"fd95c4cdac57b90842a4089fa34d7ad5af2551d2","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/validation/entity/PolicyValidator.java","status":"removed","additions":0,"deletions":59,"changes":59,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/fc91e516ed0ba34f8252830f69830460d58eae6b/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPolicyValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/fc91e516ed0ba34f8252830f69830460d58eae6b/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPolicyValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fvalidation%2Fentity%2FPolicyValidator.java?ref=fc91e516ed0ba34f8252830f69830460d58eae6b","patch":"@@ -1,59 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.core.persistence.jpa.validation.entity;\n-\n-import javax.validation.ConstraintValidatorContext;\n-import org.apache.syncope.common.lib.types.AccountPolicySpec;\n-import org.apache.syncope.common.lib.types.EntityViolationType;\n-import org.apache.syncope.common.lib.types.PasswordPolicySpec;\n-import org.apache.syncope.common.lib.types.SyncPolicySpec;\n-import org.apache.syncope.core.persistence.api.entity.AccountPolicy;\n-import org.apache.syncope.core.persistence.api.entity.PasswordPolicy;\n-import org.apache.syncope.core.persistence.api.entity.Policy;\n-import org.apache.syncope.core.persistence.api.entity.SyncPolicy;\n-\n-public class PolicyValidator extends AbstractValidator<PolicyCheck, Policy> {\n-\n-    @Override\n-    public boolean isValid(final Policy object, final ConstraintValidatorContext context) {\n-        context.disableDefaultConstraintViolation();\n-\n-        EntityViolationType violationType =\n-                object instanceof PasswordPolicy\n-                && !(object.getSpecification(PasswordPolicySpec.class) instanceof PasswordPolicySpec)\n-                        ? EntityViolationType.InvalidPasswordPolicy\n-                        : object instanceof AccountPolicy\n-                        && !(object.getSpecification(AccountPolicySpec.class) instanceof AccountPolicySpec)\n-                                ? EntityViolationType.InvalidAccountPolicy\n-                                : object instanceof SyncPolicy\n-                                && !(object.getSpecification(SyncPolicySpec.class) instanceof SyncPolicySpec)\n-                                        ? EntityViolationType.InvalidSyncPolicy\n-                                        : null;\n-\n-        if (violationType != null) {\n-            context.buildConstraintViolationWithTemplate(getTemplate(violationType,\n-                    \"Invalid policy specification\")).addPropertyNode(\"specification\").\n-                    addConstraintViolation();\n-\n-            return false;\n-        }\n-\n-        return true;\n-    }\n-}"},{"sha":"780d1925c7e6bc2eeae329305e81320eaa4094fe","filename":"core/persistence-jpa/src/test/java/org/apache/syncope/core/persistence/jpa/inner/PolicyTest.java","status":"modified","additions":9,"deletions":22,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Finner%2FPolicyTest.java?ref=2cf761973049f874380d5ac054b4daf95360fc57","patch":"@@ -31,9 +31,9 @@\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.syncope.common.lib.types.SyncPolicySpec;\n import org.apache.syncope.core.misc.serialization.POJOHelper;\n-import org.apache.syncope.core.persistence.api.attrvalue.validation.InvalidEntityException;\n import org.apache.syncope.core.persistence.api.dao.AnyTypeDAO;\n import org.apache.syncope.core.persistence.api.dao.PolicyDAO;\n+import org.apache.syncope.core.persistence.api.entity.PasswordPolicy;\n import org.apache.syncope.core.persistence.api.entity.Policy;\n import org.apache.syncope.core.persistence.api.entity.SyncPolicy;\n import org.apache.syncope.core.persistence.jpa.AbstractTest;\n@@ -62,7 +62,7 @@ public void findByKey() {\n         SyncPolicy policy = policyDAO.find(3L);\n         assertNotNull(\"findById did not work\", policy);\n \n-        SyncPolicySpec spec = policy.getSpecification(SyncPolicySpec.class);\n+        SyncPolicySpec spec = policy.getSpecification();\n         assertNotNull(spec);\n \n         String rule = spec.getCorrelationRules().get(AnyTypeKind.USER.name());\n@@ -81,19 +81,6 @@ public void findByType() {\n         assertFalse(policies.isEmpty());\n     }\n \n-    @Test(expected = InvalidEntityException.class)\n-    public void saveInvalidPolicy() {\n-        PasswordPolicySpec passwordPolicy = new PasswordPolicySpec();\n-        passwordPolicy.setMaxLength(8);\n-        passwordPolicy.setMinLength(6);\n-\n-        SyncPolicy policy = entityFactory.newEntity(SyncPolicy.class);\n-        policy.setSpecification(passwordPolicy);\n-        policy.setDescription(\"sync policy\");\n-\n-        policyDAO.save(policy);\n-    }\n-\n     @Test\n     public void create() {\n         SyncPolicy policy = entityFactory.newEntity(SyncPolicy.class);\n@@ -113,10 +100,10 @@ public void create() {\n \n         assertNotNull(policy);\n         assertEquals(PolicyType.SYNC, policy.getType());\n-        assertEquals(syncURuleName, (policy.getSpecification(SyncPolicySpec.class)).\n-                getCorrelationRules().get(anyTypeDAO.findUser().getKey()));\n-        assertEquals(syncGRuleName, (policy.getSpecification(SyncPolicySpec.class)).\n-                getCorrelationRules().get(anyTypeDAO.findGroup().getKey()));\n+        assertEquals(syncURuleName,\n+                policy.getSpecification().getCorrelationRules().get(anyTypeDAO.findUser().getKey()));\n+        assertEquals(syncGRuleName,\n+                policy.getSpecification().getCorrelationRules().get(anyTypeDAO.findGroup().getKey()));\n     }\n \n     @Test\n@@ -125,16 +112,16 @@ public void update() {\n         specification.setMaxLength(8);\n         specification.setMinLength(6);\n \n-        Policy policy = policyDAO.find(2L);\n+        PasswordPolicy policy = policyDAO.find(2L);\n         assertNotNull(policy);\n         policy.setSpecification(specification);\n \n         policy = policyDAO.save(policy);\n \n         assertNotNull(policy);\n         assertEquals(PolicyType.PASSWORD, policy.getType());\n-        assertEquals((policy.getSpecification(PasswordPolicySpec.class)).getMaxLength(), 8);\n-        assertEquals((policy.getSpecification(PasswordPolicySpec.class)).getMinLength(), 6);\n+        assertEquals(policy.getSpecification().getMaxLength(), 8);\n+        assertEquals(policy.getSpecification().getMinLength(), 6);\n     }\n \n     @Test"},{"sha":"7180b6c07e6a5a6899762222c7ab5a53dde5b96b","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/data/PolicyDataBinderImpl.java","status":"modified","additions":7,"deletions":11,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fdata%2FPolicyDataBinderImpl.java?ref=2cf761973049f874380d5ac054b4daf95360fc57","patch":"@@ -24,10 +24,7 @@\n import org.apache.syncope.common.lib.to.AccountPolicyTO;\n import org.apache.syncope.common.lib.to.PasswordPolicyTO;\n import org.apache.syncope.common.lib.to.SyncPolicyTO;\n-import org.apache.syncope.common.lib.types.AccountPolicySpec;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n-import org.apache.syncope.common.lib.types.PasswordPolicySpec;\n-import org.apache.syncope.common.lib.types.SyncPolicySpec;\n import org.apache.syncope.core.persistence.api.dao.ExternalResourceDAO;\n import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n import org.apache.syncope.core.persistence.api.entity.AccountPolicy;\n@@ -59,24 +56,23 @@ public class PolicyDataBinderImpl implements PolicyDataBinder {\n     @SuppressWarnings(\"unchecked\")\n     @Override\n     public <T extends AbstractPolicyTO> T getPolicyTO(final Policy policy) {\n-        final T policyTO;\n-\n+        T policyTO;\n         switch (policy.getType()) {\n             case PASSWORD:\n                 policyTO = (T) new PasswordPolicyTO();\n-                ((PasswordPolicyTO) policyTO).setSpecification(policy.getSpecification(PasswordPolicySpec.class));\n+                ((PasswordPolicyTO) policyTO).setSpecification(((PasswordPolicy) policy).getSpecification());\n                 break;\n \n             case ACCOUNT:\n                 policyTO = (T) new AccountPolicyTO();\n-                ((AccountPolicyTO) policyTO).setSpecification(policy.getSpecification(AccountPolicySpec.class));\n+                ((AccountPolicyTO) policyTO).setSpecification(((AccountPolicy) policy).getSpecification());\n                 ((AccountPolicyTO) policyTO).getResources().addAll(((AccountPolicy) policy).getResourceNames());\n                 break;\n \n             case SYNC:\n             default:\n                 policyTO = (T) new SyncPolicyTO();\n-                ((SyncPolicyTO) policyTO).setSpecification(policy.getSpecification(SyncPolicySpec.class));\n+                ((SyncPolicyTO) policyTO).setSpecification(((SyncPolicy) policy).getSpecification());\n         }\n \n         policyTO.setKey(policy.getKey());\n@@ -120,7 +116,7 @@ public <T extends Policy> T getPolicy(final T policy, final AbstractPolicyTO pol\n                 if (result == null) {\n                     result = (T) entityFactory.newEntity(PasswordPolicy.class);\n                 }\n-                result.setSpecification(((PasswordPolicyTO) policyTO).getSpecification());\n+                ((PasswordPolicy) result).setSpecification(((PasswordPolicyTO) policyTO).getSpecification());\n                 break;\n \n             case ACCOUNT:\n@@ -131,7 +127,7 @@ public <T extends Policy> T getPolicy(final T policy, final AbstractPolicyTO pol\n                 if (result == null) {\n                     result = (T) entityFactory.newEntity(AccountPolicy.class);\n                 }\n-                result.setSpecification(((AccountPolicyTO) policyTO).getSpecification());\n+                ((AccountPolicy) result).setSpecification(((AccountPolicyTO) policyTO).getSpecification());\n \n                 if (((AccountPolicy) result).getResources() != null\n                         && !((AccountPolicy) result).getResources().isEmpty()) {\n@@ -155,7 +151,7 @@ public <T extends Policy> T getPolicy(final T policy, final AbstractPolicyTO pol\n                 if (result == null) {\n                     result = (T) entityFactory.newEntity(SyncPolicy.class);\n                 }\n-                result.setSpecification(((SyncPolicyTO) policyTO).getSpecification());\n+                ((SyncPolicy) result).setSpecification(((SyncPolicyTO) policyTO).getSpecification());\n         }\n \n         result.setDescription(policyTO.getDescription());"},{"sha":"2e70e8037b7c0af0102e2b2bcbfb1d1cfa00b38d","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/SyncJobDelegate.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncJobDelegate.java?ref=2cf761973049f874380d5ac054b4daf95360fc57","patch":"@@ -210,7 +210,7 @@ private SyncPolicySpec getSyncPolicySpec(final ProvisioningTask task) {\n         if (task instanceof SyncTask) {\n             syncPolicySpec = task.getResource().getSyncPolicy() == null\n                     ? null\n-                    : task.getResource().getSyncPolicy().getSpecification(SyncPolicySpec.class);\n+                    : task.getResource().getSyncPolicy().getSpecification();\n         } else {\n             syncPolicySpec = null;\n         }"},{"sha":"48783629748d98d7138c1d0b3b1aaf844488b733","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/sync/SyncUtils.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2cf761973049f874380d5ac054b4daf95360fc57/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fsync%2FSyncUtils.java?ref=2cf761973049f874380d5ac054b4daf95360fc57","patch":"@@ -279,7 +279,7 @@ public List<Long> findExisting(\n \n         SyncPolicySpec syncPolicySpec = null;\n         if (provision.getResource().getSyncPolicy() != null) {\n-            syncPolicySpec = provision.getResource().getSyncPolicy().getSpecification(SyncPolicySpec.class);\n+            syncPolicySpec = provision.getResource().getSyncPolicy().getSpecification();\n         }\n \n         SyncCorrelationRule syncRule = null;"}]}