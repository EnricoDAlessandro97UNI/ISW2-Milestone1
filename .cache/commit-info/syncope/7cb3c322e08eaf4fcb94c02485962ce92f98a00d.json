{"sha":"7cb3c322e08eaf4fcb94c02485962ce92f98a00d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjdjYjNjMzIyZTA4ZWFmNGZjYjk0YzAyNDg1OTYyY2U5MmY5OGEwMGQ=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-01-14T17:18:16Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-01-14T17:18:16Z"},"message":"[SYNCOPE-746] Almost done: item in left menu under 'Extensions' does not remain active after click","tree":{"sha":"299f25be919aa08b29377fcd993d7fc9a5129a58","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/299f25be919aa08b29377fcd993d7fc9a5129a58"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7cb3c322e08eaf4fcb94c02485962ce92f98a00d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7cb3c322e08eaf4fcb94c02485962ce92f98a00d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7cb3c322e08eaf4fcb94c02485962ce92f98a00d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"9536ffa91da22558067d186c90ecb2358fb9996d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9536ffa91da22558067d186c90ecb2358fb9996d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9536ffa91da22558067d186c90ecb2358fb9996d"}],"stats":{"total":925,"additions":529,"deletions":396},"files":[{"sha":"32587c9d44415b17d42342879ac4d59a739ed48c","filename":"client/console/src/main/java/org/apache/syncope/client/console/annotations/ExtPage.java","status":"renamed","additions":16,"deletions":2,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fannotations%2FExtPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fannotations%2FExtPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fannotations%2FExtPage.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -27,8 +27,22 @@\n @Target({ ElementType.TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n @Documented\n-public @interface ExtensionPanel {\n+public @interface ExtPage {\n \n-    String value();\n+    /**\n+     * @return the label shown under the \"Extensions\" menu item, on the left pane\n+     */\n+    String label();\n \n+    /**\n+     * @return the icon shown next to the label, under the \"Extensions\" menu item, on the left pane;\n+     * check https://fortawesome.github.io/Font-Awesome/icons/ for more\n+     */\n+    String icon() default \"fa-circle-o\";\n+\n+    /**\n+     * @return the priority used to determine the display order under the \"Extensions\" menu item, on the left pane; the\n+     * higher value, the higher rank\n+     */\n+    int priority() default 0;\n }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/annotations/ExtensionPanel.java"},{"sha":"60a1f580e0e896bc570f0c9dbcf13ca6853b552c","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -58,7 +58,7 @@ public final class Constants {\n \n     public static final String PREF_ANYTYPE_PAGINATOR_ROWS = \"anytype.paginator.rows\";\n \n-    public static final String PREF_SECURITY_QUESTIONS_PAGINATOR_ROWS = \"secutiry.questions.paginator.rows\";\n+    public static final String PREF_SECURITY_QUESTIONS_PAGINATOR_ROWS = \"security.questions.paginator.rows\";\n \n     public static final String PREF_RELATIONSHIPTYPE_PAGINATOR_ROWS = \"relationshiptype.painator.rows\";\n "},{"sha":"67bbe20dc0ae1be3ce8b003b51fbb9a7c94753bf","filename":"client/console/src/main/java/org/apache/syncope/client/console/init/ClassPathScanImplementationLookup.java","status":"modified","additions":41,"deletions":14,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Finit%2FClassPathScanImplementationLookup.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -21,11 +21,13 @@\n import java.lang.reflect.Modifier;\n import java.util.ArrayList;\n import java.util.Collections;\n+import java.util.Comparator;\n import java.util.List;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.panels.AbstractExtensionPanel;\n+import org.apache.syncope.client.console.pages.AbstractExtPage;\n import org.apache.syncope.client.console.annotations.BinaryPreview;\n+import org.apache.syncope.client.console.annotations.ExtPage;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.wicket.markup.html.form.preview.AbstractBinaryPreviewer;\n import org.slf4j.Logger;\n@@ -43,42 +45,67 @@ public class ClassPathScanImplementationLookup {\n \n     private List<Class<? extends AbstractBinaryPreviewer>> previewers;\n \n-    private List<Class<? extends AbstractExtensionPanel>> extPanels;\n+    private List<Class<? extends AbstractExtPage>> extPages;\n \n     @SuppressWarnings(\"unchecked\")\n     public void load() {\n         pages = new ArrayList<>();\n         previewers = new ArrayList<>();\n-        extPanels = new ArrayList<>();\n+        extPages = new ArrayList<>();\n \n         ClassPathScanningCandidateComponentProvider scanner = new ClassPathScanningCandidateComponentProvider(false);\n         scanner.addIncludeFilter(new AssignableTypeFilter(BasePage.class));\n         scanner.addIncludeFilter(new AssignableTypeFilter(AbstractBinaryPreviewer.class));\n-        scanner.addIncludeFilter(new AssignableTypeFilter(AbstractExtensionPanel.class));\n+        scanner.addIncludeFilter(new AssignableTypeFilter(AbstractExtPage.class));\n \n         for (BeanDefinition bd : scanner.findCandidateComponents(StringUtils.EMPTY)) {\n             try {\n                 Class<?> clazz = ClassUtils.resolveClassName(\n                         bd.getBeanClassName(), ClassUtils.getDefaultClassLoader());\n                 boolean isAbsractClazz = Modifier.isAbstract(clazz.getModifiers());\n \n-                if (BasePage.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n-                    pages.add((Class<? extends BasePage>) clazz);\n-                } else if (AbstractBinaryPreviewer.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n-                    previewers.add((Class<? extends AbstractBinaryPreviewer>) clazz);\n-                } else if (AbstractExtensionPanel.class.isAssignableFrom(clazz) && !isAbsractClazz) {\n-                    extPanels.add((Class<? extends AbstractExtensionPanel>) clazz);\n+                if (!isAbsractClazz) {\n+                    if (AbstractExtPage.class.isAssignableFrom(clazz)) {\n+                        if (clazz.isAnnotationPresent(ExtPage.class)) {\n+                            extPages.add((Class<? extends AbstractExtPage>) clazz);\n+                        } else {\n+                            LOG.error(\"Could not find annotation {} in {}, ignoring\",\n+                                    ExtPage.class.getName(), clazz.getName());\n+                        }\n+                    } else if (BasePage.class.isAssignableFrom(clazz)) {\n+                        pages.add((Class<? extends BasePage>) clazz);\n+                    } else if (AbstractBinaryPreviewer.class.isAssignableFrom(clazz)) {\n+                        previewers.add((Class<? extends AbstractBinaryPreviewer>) clazz);\n+                    }\n                 }\n             } catch (Throwable t) {\n                 LOG.warn(\"Could not inspect class {}\", bd.getBeanClassName(), t);\n             }\n         }\n         pages = Collections.unmodifiableList(pages);\n         previewers = Collections.unmodifiableList(previewers);\n-        extPanels = Collections.unmodifiableList(extPanels);\n+\n+        Collections.sort(extPages, new Comparator<Class<? extends AbstractExtPage>>() {\n+\n+            @Override\n+            public int compare(\n+                    final Class<? extends AbstractExtPage> o1,\n+                    final Class<? extends AbstractExtPage> o2) {\n+\n+                int prio1 = o1.getAnnotation(ExtPage.class).priority();\n+                int prio2 = o2.getAnnotation(ExtPage.class).priority();\n+\n+                return prio1 > prio2\n+                        ? 1\n+                        : prio1 == prio2\n+                                ? 0\n+                                : -1;\n+            }\n+        });\n+        extPages = Collections.unmodifiableList(extPages);\n \n         LOG.debug(\"Binary previewers found: {}\", previewers);\n-        LOG.debug(\"Extension panels found: {}\", extPanels);\n+        LOG.debug(\"Extension pages found: {}\", extPages);\n     }\n \n     public Class<? extends AbstractBinaryPreviewer> getPreviewerClass(final String mimeType) {\n@@ -103,8 +130,8 @@ public List<Class<? extends AbstractBinaryPreviewer>> getPreviewerClasses() {\n         return previewers;\n     }\n \n-    public List<Class<? extends AbstractExtensionPanel>> getExtPanelClasses() {\n-        return extPanels;\n+    public List<Class<? extends AbstractExtPage>> getExtPageClasses() {\n+        return extPages;\n     }\n \n }"},{"sha":"1a8949d0670cb037951fcf9e640eb4dc5902ed20","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/AbstractExtPage.java","status":"renamed","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractExtPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractExtPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FAbstractExtPage.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -20,11 +20,15 @@\n \n import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n-public class CamelRoutes extends BasePage {\n+public abstract class AbstractExtPage extends BasePage {\n \n-    private static final long serialVersionUID = -1100228004207271271L;\n+    private static final long serialVersionUID = 4627828052717627159L;\n \n-    public CamelRoutes(final PageParameters parameters) {\n+    public AbstractExtPage() {\n+        super();\n+    }\n+\n+    public AbstractExtPage(final PageParameters parameters) {\n         super(parameters);\n     }\n }","previous_filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/CamelRoutes.java"},{"sha":"c3228becad419a6b55cda2973e8c85f96a26c9e3","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":33,"deletions":3,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -20,14 +20,18 @@\n \n import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.annotations.ExtPage;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.NotificationAwareComponent;\n+import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.client.console.init.ConsoleInitializer;\n import org.apache.syncope.client.console.panels.NotificationPanel;\n import org.apache.syncope.client.console.rest.UserWorkflowRestClient;\n import org.apache.syncope.client.console.topology.Topology;\n import org.apache.syncope.client.console.wicket.markup.head.MetaHeaderItem;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.AttributeModifier;\n import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -43,6 +47,8 @@\n import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n+import org.apache.wicket.markup.html.list.ListItem;\n+import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -165,9 +171,33 @@ public BasePage(final PageParameters parameters) {\n         liContainer.add(new BookmarkablePageLink<>(\"notifications\", Notifications.class));\n         MetaDataRoleAuthorizationStrategy.authorize(liContainer, WebPage.RENDER, StandardEntitlement.NOTIFICATION_LIST);\n \n-        liContainer = new WebMarkupContainer(getLIContainerId(\"camelroutes\"));\n-        add(liContainer);\n-        liContainer.add(new BookmarkablePageLink<>(\"camelroutes\", CamelRoutes.class));\n+        ClassPathScanImplementationLookup classPathScanImplementationLookup =\n+                (ClassPathScanImplementationLookup) SyncopeConsoleApplication.get().\n+                getServletContext().getAttribute(ConsoleInitializer.CLASSPATH_LOOKUP);\n+        ListView<Class<? extends AbstractExtPage>> extPages = new ListView<Class<? extends AbstractExtPage>>(\n+                \"extPages\", classPathScanImplementationLookup.getExtPageClasses()) {\n+\n+            private static final long serialVersionUID = 4949588177564901031L;\n+\n+            @Override\n+            protected void populateItem(final ListItem<Class<? extends AbstractExtPage>> item) {\n+                WebMarkupContainer liContainer = new WebMarkupContainer(\"extPageLI\");\n+                item.add(liContainer);\n+\n+                BookmarkablePageLink<?> link = new BookmarkablePageLink<>(\"extPage\", item.getModelObject());\n+                liContainer.add(link);\n+\n+                ExtPage ann = item.getModelObject().getAnnotation(ExtPage.class);\n+\n+                link.add(new Label(\"extPageLabel\", ann.label()));\n+\n+                Label extPageIcon = new Label(\"extPageIcon\");\n+                extPageIcon.add(new AttributeModifier(\"class\", \"fa \" + ann.icon()));\n+                link.add(extPageIcon);\n+            }\n+        };\n+        extPages.setOutputMarkupId(true);\n+        add(extPages);\n \n         add(new Label(\"domain\", SyncopeConsoleSession.get().getDomain()));\n         add(new BookmarkablePageLink<Page>(\"logout\", Logout.class));"},{"sha":"6823583385339b02b166694c36ddddc2effd6d6e","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Logs.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FLogs.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -35,23 +35,21 @@ public class Logs extends BasePage {\n \n     private static final long serialVersionUID = -1100228004207271271L;\n \n-    private final AjaxBootstrapTabbedPanel<ITab> tabbedPanel;\n-\n     public Logs(final PageParameters parameters) {\n         super(parameters);\n \n         final WebMarkupContainer content = new WebMarkupContainer(\"content\");\n         content.add(new Label(\"header\", getString(\"header_title\")));\n         content.setOutputMarkupId(true);\n-        tabbedPanel = new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList());\n+        AjaxBootstrapTabbedPanel<ITab> tabbedPanel = new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList());\n         content.add(tabbedPanel);\n \n         add(content);\n     }\n \n     private List<ITab> buildTabList() {\n \n-        final List<ITab> tabs = new ArrayList<>();\n+        final List<ITab> tabs = new ArrayList<>(2);\n \n         tabs.add(new AbstractTab(new Model<>(\"Core\")) {\n "},{"sha":"913fd71167489124a98d97e216b54823acc72102","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Roles.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRoles.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -41,13 +41,14 @@ public Roles(final PageParameters parameters) {\n         content.setOutputMarkupId(true);\n         add(content);\n \n-        final WizardMgtPanel<RoleHandler> roleSearchResultPanel\n-                = new RoleSearchResultPanel.Builder(getPageReference()) {\n+        WizardMgtPanel<RoleHandler> roleSearchResultPanel =\n+                new RoleSearchResultPanel.Builder(getPageReference()) {\n \n             private static final long serialVersionUID = -5960765294082359003L;\n \n-        }.addNewItemPanelBuilder(new RoleWizardBuilder(BaseModal.CONTENT_ID, new RoleTO(), getPageReference()), true)\n-                .build(\"roles\");\n+        }.disableCheckBoxes().addNewItemPanelBuilder(\n+                        new RoleWizardBuilder(BaseModal.CONTENT_ID, new RoleTO(), getPageReference()), true).\n+                build(\"roles\");\n \n         content.add(roleSearchResultPanel);\n     }"},{"sha":"40dce7c81fe72f54003256be50a95e3a6ef0328b","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/SecurityQuestions.java","status":"modified","additions":2,"deletions":29,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -19,10 +19,6 @@\n package org.apache.syncope.client.console.pages;\n \n import org.apache.syncope.client.console.panels.SecurityQuestionsPanel;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.common.lib.to.SecurityQuestionTO;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n@@ -31,10 +27,6 @@ public class SecurityQuestions extends BasePage {\n \n     private static final long serialVersionUID = 931085006718655535L;\n \n-    private final SecurityQuestionsPanel securityQuestionsPanel;\n-\n-    private final BaseModal<SecurityQuestionTO> securityQuestionModal;\n-\n     public SecurityQuestions(final PageParameters parameters) {\n         super(parameters);\n \n@@ -43,29 +35,10 @@ public SecurityQuestions(final PageParameters parameters) {\n         content.setOutputMarkupId(true);\n         add(content);\n \n-        securityQuestionModal = new BaseModal<>(\"securityQuestionModal\");\n-        addWindowWindowClosedCallback(securityQuestionModal);\n-        add(securityQuestionModal);\n-\n-        securityQuestionsPanel = new SecurityQuestionsPanel(\"securityQuestionPanel\", getPageReference());\n+        SecurityQuestionsPanel securityQuestionsPanel =\n+                new SecurityQuestionsPanel(\"securityQuestionPanel\", getPageReference());\n         securityQuestionsPanel.setOutputMarkupId(true);\n \n         content.add(securityQuestionsPanel);\n     }\n-\n-    private void addWindowWindowClosedCallback(final BaseModal<?> modal) {\n-        modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n-\n-            private static final long serialVersionUID = 8804221891699487139L;\n-\n-            @Override\n-            public void onClose(final AjaxRequestTarget target) {\n-                target.add(securityQuestionsPanel);\n-                modal.show(false);\n-\n-                ((BasePage) getPage()).getNotificationPanel().refresh(target);\n-            }\n-        }\n-        );\n-    }\n }"},{"sha":"87af2ffb2039176685ae9b17a860aaebcc93075e","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractExtensionPanel.java","status":"removed","additions":0,"deletions":34,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9536ffa91da22558067d186c90ecb2358fb9996d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractExtensionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9536ffa91da22558067d186c90ecb2358fb9996d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractExtensionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractExtensionPanel.java?ref=9536ffa91da22558067d186c90ecb2358fb9996d","patch":"@@ -1,34 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.markup.html.panel.Panel;\n-\n-public abstract class AbstractExtensionPanel extends Panel {\n-\n-    private static final long serialVersionUID = 4627828052717627159L;\n-\n-    protected PageReference pageref;\n-\n-    public AbstractExtensionPanel(final String id, final PageReference pageref) {\n-        super(id);\n-        this.pageref = pageref;\n-    }\n-}"},{"sha":"a3291b05a06ebfe762fb626b6544af03377735d4","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -92,7 +92,6 @@\n     protected final BasePage page;\n \n     protected AbstractSearchResultPanel(final String id, final Builder<T, W, E> builder) {\n-\n         super(id, true);\n \n         setOutputMarkupId(true);"},{"sha":"e4fca7301dfda790ebc9e4bb36ee7a42236f8d9d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypeClassesPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypeClassesPanel.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -74,7 +74,7 @@ public AnyTypeClassesPanel(final String id, final PageReference pageRef) {\n             protected WizardMgtPanel<AnyTypeClassTO> newInstance(final String id) {\n                 return new AnyTypeClassesPanel(id, this);\n             }\n-        });\n+        }.disableCheckBoxes());\n \n         this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<AnyTypeClassTO>(\n                 BaseModal.CONTENT_ID, new AnyTypeClassTO(), pageRef) {"},{"sha":"b7caf9ce13b3a75e4ba58ca9c7eb75fa69b9e5fd","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AnyTypePanel.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAnyTypePanel.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import static org.apache.syncope.client.console.panels.AbstractModalPanel.LOG;\n-import static org.apache.wicket.Component.ENABLE;\n-\n import java.io.Serializable;\n import java.lang.reflect.Field;\n import java.lang.reflect.Modifier;\n@@ -77,7 +74,7 @@ public AnyTypePanel(final String id, final PageReference pageRef) {\n             protected WizardMgtPanel<AnyTypeTO> newInstance(final String id) {\n                 return new AnyTypePanel(id, this);\n             }\n-        });\n+        }.disableCheckBoxes());\n \n         this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<AnyTypeTO>(\n                 BaseModal.CONTENT_ID, new AnyTypeTO(), pageRef) {"},{"sha":"6436354e3601244db1bd59e02ac983e89c1c1673","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmSidebarPanel.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmSidebarPanel.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import static org.apache.wicket.Component.ENABLE;\n-\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collections;"},{"sha":"64570d6ab07c35095eccf5e3090950738eafd929","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RelationshipTypePanel.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRelationshipTypePanel.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import static org.apache.syncope.client.console.panels.AbstractModalPanel.LOG;\n-\n import java.io.Serializable;\n import java.lang.reflect.Field;\n import java.lang.reflect.Modifier;\n@@ -76,7 +74,7 @@ public RelationshipTypePanel(final String id, final PageReference pageRef) {\n             protected WizardMgtPanel<RelationshipTypeTO> newInstance(final String id) {\n                 return new RelationshipTypePanel(id, this);\n             }\n-        });\n+        }.disableCheckBoxes());\n \n         this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<RelationshipTypeTO>(\n                 BaseModal.CONTENT_ID, new RelationshipTypeTO(), pageRef) {\n@@ -188,8 +186,7 @@ public void populateItem(final Item<ICellPopulator<RelationshipTypeTO>> item, fi\n \n                 final RelationshipTypeTO relationshipTypeTO = model.getObject();\n \n-                final ActionLinksPanel.Builder<Serializable> actionLinks\n-                        = ActionLinksPanel.builder(page.getPageReference());\n+                ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(page.getPageReference());\n                 actionLinks.setDisableIndicator(true);\n                 actionLinks.addWithRoles(new ActionLink<Serializable>() {\n \n@@ -198,7 +195,7 @@ public void populateItem(final Item<ICellPopulator<RelationshipTypeTO>> item, fi\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                         send(RelationshipTypePanel.this, Broadcast.EXACT,\n-                                new AjaxWizard.EditItemActionEvent<RelationshipTypeTO>(model.getObject(), target));\n+                                new AjaxWizard.EditItemActionEvent<>(model.getObject(), target));\n                     }\n                 }, ActionLink.ActionType.EDIT, StandardEntitlement.RELATIONSHIPTYPE_UPDATE).addWithRoles(\n                         new ActionLink<Serializable>() {"},{"sha":"95c0d29d41a110dfea6cb6a082615d9c90be2f38","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SchemaTypePanel.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchemaTypePanel.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import static org.apache.syncope.client.console.panels.AbstractModalPanel.LOG;\n-\n import java.io.Serializable;\n import java.lang.reflect.Field;\n import java.util.ArrayList;\n@@ -107,7 +105,7 @@ public SchemaTypePanel(final String id, final SchemaType schemaType, final PageR\n             protected WizardMgtPanel<AbstractSchemaTO> newInstance(final String id) {\n                 return new SchemaTypePanel(id, schemaType, this);\n             }\n-        });\n+        }.disableCheckBoxes());\n \n         this.schemaType = schemaType;\n "},{"sha":"64b71dad335ec6cb5203370d2dde4f74037c5c24","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/SecurityQuestionsPanel.java","status":"modified","additions":9,"deletions":11,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSecurityQuestionsPanel.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n-import static org.apache.wicket.Component.ENABLE;\n-\n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.io.Serializable;\n import java.lang.reflect.Field;\n@@ -36,7 +34,7 @@\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.SecurityQuestionsPanel.SecurityQuestionsProvider;\n-import org.apache.syncope.client.console.rest.BaseRestClient;\n+import org.apache.syncope.client.console.rest.SecurityQuestionRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -60,20 +58,20 @@\n import org.apache.wicket.model.ResourceModel;\n \n public class SecurityQuestionsPanel extends AbstractSearchResultPanel<\n-        SecurityQuestionTO, SecurityQuestionTO, SecurityQuestionsProvider, BaseRestClient> {\n+        SecurityQuestionTO, SecurityQuestionTO, SecurityQuestionsProvider, SecurityQuestionRestClient> {\n \n     private static final long serialVersionUID = 3323019773236588850L;\n \n     public SecurityQuestionsPanel(final String id, final PageReference pageRef) {\n-        super(id, new Builder<SecurityQuestionTO, SecurityQuestionTO, BaseRestClient>(null, pageRef) {\n+        super(id, new Builder<SecurityQuestionTO, SecurityQuestionTO, SecurityQuestionRestClient>(null, pageRef) {\n \n             private static final long serialVersionUID = 8769126634538601689L;\n \n             @Override\n             protected WizardMgtPanel<SecurityQuestionTO> newInstance(final String id) {\n                 return new SecurityQuestionsPanel(id, this);\n             }\n-        });\n+        }.disableCheckBoxes());\n \n         this.addNewItemPanelBuilder(new AbstractModalPanelBuilder<SecurityQuestionTO>(\n                 BaseModal.CONTENT_ID, new SecurityQuestionTO(), pageRef) {\n@@ -105,8 +103,10 @@ protected Serializable onApplyInternal(final SecurityQuestionTO modelObject) {\n         MetaDataRoleAuthorizationStrategy.authorize(addAjaxLink, ENABLE, StandardEntitlement.SECURITY_QUESTION_CREATE);\n     }\n \n-    public SecurityQuestionsPanel(\n-            final String id, final Builder<SecurityQuestionTO, SecurityQuestionTO, BaseRestClient> builder) {\n+    private SecurityQuestionsPanel(\n+            final String id,\n+            final Builder<SecurityQuestionTO, SecurityQuestionTO, SecurityQuestionRestClient> builder) {\n+\n         super(id, builder);\n     }\n \n@@ -188,8 +188,6 @@ public String getCssClass() {\n             public void populateItem(final Item<ICellPopulator<SecurityQuestionTO>> item, final String componentId,\n                     final IModel<SecurityQuestionTO> model) {\n \n-                final SecurityQuestionTO securityQuestionTO = model.getObject();\n-\n                 final ActionLinksPanel.Builder<Serializable> actionLinks =\n                         ActionLinksPanel.builder(page.getPageReference());\n                 actionLinks.setDisableIndicator(true);\n@@ -213,7 +211,7 @@ public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                             public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n                                 try {\n                                     SyncopeConsoleSession.get().getService(SecurityQuestionService.class\n-                                    ).delete(securityQuestionTO.getKey());\n+                                    ).delete(model.getObject().getKey());\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n                                     target.add(container);\n                                 } catch (Exception e) {"},{"sha":"b23d9feca63e1fbeeecb241156408e52e99d8bce","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/AnyObjectRestClient.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAnyObjectRestClient.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n-import static org.apache.syncope.client.console.rest.BaseRestClient.getService;\n-import static org.apache.syncope.client.console.rest.BaseRestClient.toOrderBy;\n-\n import java.util.List;\n import javax.ws.rs.core.Response;\n import org.apache.syncope.common.lib.SyncopeClientException;"},{"sha":"1da57a7a2dbde9900bbe99b403c36750524a2de6","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/RoleRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRoleRestClient.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.rest;\n \n-import static org.apache.syncope.client.console.rest.BaseRestClient.getService;\n-\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.syncope.common.lib.to.RoleTO;"},{"sha":"360fbc76792ffb5b8dfbcb99fe15411cc4f036d7","filename":"client/console/src/main/java/org/apache/syncope/client/console/topology/TopologyTogglePanel.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Ftopology%2FTopologyTogglePanel.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.client.console.topology;\n \n-import static org.apache.wicket.Component.ENABLE;\n-\n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import java.text.MessageFormat;\n import org.apache.syncope.client.console.commons.Constants;"},{"sha":"a0064b119246654b9c6ddbfc42695d8b6e5fd45a","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/StatusPanel.java","status":"modified","additions":4,"deletions":7,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -18,9 +18,6 @@\n  */\n package org.apache.syncope.client.console.wizards.any;\n \n-import static org.apache.syncope.client.console.commons.status.Status.ACTIVE;\n-import static org.apache.syncope.client.console.commons.status.Status.SUSPENDED;\n-\n import java.util.ArrayList;\n import java.util.LinkedHashMap;\n import java.util.List;\n@@ -219,8 +216,8 @@ protected void onComponentTag(final ComponentTag tag) {\n \n             @Override\n             protected boolean statusCondition(final StatusBean bean) {\n-                final Pair<ConnObjectTO, ConnObjectTO> pair\n-                        = getConnObjectTO(bean.getAnyKey(), bean.getResourceName(), connObjects);\n+                final Pair<ConnObjectTO, ConnObjectTO> pair =\n+                        getConnObjectTO(bean.getAnyKey(), bean.getResourceName(), connObjects);\n \n                 return pair != null && pair.getRight() != null;\n             }\n@@ -244,8 +241,8 @@ public void onClick(final AjaxRequestTarget target) {\n                 remoteObjectFragment.add(\n                         new Label(\"resource\", new ResourceModel(bean.getResourceName(), bean.getResourceName())));\n \n-                final Pair<ConnObjectTO, ConnObjectTO> res\n-                        = getConnObjectTO(bean.getAnyKey(), bean.getResourceName(), connObjects);\n+                final Pair<ConnObjectTO, ConnObjectTO> res =\n+                        getConnObjectTO(bean.getAnyKey(), bean.getResourceName(), connObjects);\n \n                 remoteObjectFragment.add(new ConnObjectPanel(\"remoteObject\", res == null ? null : res));\n "},{"sha":"84f90601d80d46216a58aaa91c5fa08884d39a16","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BasePage.html","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.html?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -31,7 +31,6 @@\n     <link href=\"css/AdminLTE_plugins/dataTables/dataTables.bootstrap.css\" rel=\"stylesheet\" type=\"text/css\" />\n     <link href=\"css/AdminLTE_skins/skin-green.css\" rel=\"stylesheet\" type=\"text/css\" />\n     <link href=\"css/syncopeConsole.css\" rel=\"stylesheet\" type=\"text/css\" />\n-    <link href=\"css/fieldstyle.css\" rel=\"stylesheet\" type=\"text/css\" />\n \n     <script type=\"text/javascript\" src=\"webjars/bootbox/${bootbox.version}/bootbox.js\"></script>\n   </head>\n@@ -112,8 +111,10 @@\n             </li>\n             <li class=\"treeview\">\n               <a href=\"#\"><i class=\"fa fa-puzzle-piece\"></i><span>Extensions</span> <i class=\"fa fa-angle-left pull-right\"></i></a>\n-              <ul class=\"treeview-menu\">\n-                <li wicket:id=\"camelroutesLI\"><a href=\"#\" wicket:id=\"camelroutes\"><i class=\"fa fa-circle-o\"></i>Camel Routes</a></li>\n+              <ul class=\"treeview-menu\" wicket:id=\"extPages\">\n+                <li wicket:id=\"extPageLI\">\n+                  <a href=\"#\" wicket:id=\"extPage\"><i wicket:id=\"extPageIcon\"></i><span wicket:id=\"extPageLabel\"/></a>\n+                </li>\n               </ul>\n             </li>\n           </ul>"},{"sha":"2d9bca1360ddeaf59f7fdfd399d88436529b17e5","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/BasePopupPage.html","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePopupPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePopupPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePopupPage.html?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -20,11 +20,6 @@\n   <head>\n     <title></title>\n \n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"webjars/jquery-ui/${jquery-ui.version}/themes/base/minified/jquery-ui.min.css\" media=\"all\"/>\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery-ui.css\" media=\"all\"/>\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\" media=\"all\"/>\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/fieldstyle.css\" media=\"all\"/>\n-\n     <style type=\"text/css\">\n       table.palette td.header {\n         background:url(\"images/ui-bg_glass_75_e6e6e6_1x400.png\")"},{"sha":"5ada5a2d5dea19f9589c04bedadd3bae0df4747c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/SecurityQuestions.html","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSecurityQuestions.html?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -37,6 +37,5 @@ <h3 class=\"box-title\">\n         </div>\n       </div>\n     </div>\n-    <div wicket:id=\"securityQuestionModal\"></div>\n   </wicket:extend>\n </html>\n\\ No newline at end of file"},{"sha":"ec134679000b8f923fe565217c33517864e6b153","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/AbstractSearchResultPanel.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractSearchResultPanel.html?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -40,6 +40,7 @@\n           </form>\n         </div>\n       </div>\n+      <wicket:child/>\n     </wicket:extend>\n   </body>\n </html>"},{"sha":"0755e3e8c4cb80435e2b98279acae84ab89c3998","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/Realm.html","status":"modified","additions":3,"deletions":8,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.html?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -17,13 +17,8 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://xmlns.jcp.org/jsf/composite\">\n-  <body>\n-    <wicket:panel>\n-      <div wicket:id=\"tabbedPanel\"></div>\n-    </wicket:panel>\n-  </body>\n+  <wicket:panel>\n+    <div wicket:id=\"tabbedPanel\"></div>\n+  </wicket:panel>\n </html>\n\\ No newline at end of file"},{"sha":"81dfbb3b53747938977432bcbf08cd35f51f8803","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/pages/CamelRoutesPage.java","status":"added","additions":102,"deletions":0,"changes":102,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPage.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.pages;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.syncope.client.console.rest.CamelRoutesRestClient;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.CamelEntitlement;\n+import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.syncope.client.console.annotations.ExtPage;\n+import org.apache.syncope.client.console.panels.CamelRoutesPanel;\n+import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n+import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.markup.html.basic.Label;\n+import org.apache.wicket.markup.html.panel.Panel;\n+import org.apache.wicket.model.Model;\n+import org.apache.wicket.request.mapper.parameter.PageParameters;\n+\n+@ExtPage(label = \"Camel Routes\", icon = \"fa-road\", priority = 100)\n+public class CamelRoutesPage extends AbstractExtPage {\n+\n+    private static final long serialVersionUID = 1965360932245590233L;\n+\n+    public static final String PREF_CAMEL_ROUTES_PAGINATOR_ROWS = \"camel.routes.paginator.rows\";\n+\n+    private final CamelRoutesRestClient restClient = new CamelRoutesRestClient();\n+\n+    public CamelRoutesPage(final PageParameters parameters) {\n+        super(parameters);\n+\n+        WebMarkupContainer content = new WebMarkupContainer(\"content\");\n+        content.setOutputMarkupId(true);\n+        content.add(new Label(\"header\", getString(\"header_title\")));\n+        AjaxBootstrapTabbedPanel<ITab> tabbedPanel = new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList());\n+        content.add(tabbedPanel);\n+\n+        MetaDataRoleAuthorizationStrategy.authorize(content, ENABLE, CamelEntitlement.ROUTE_LIST);\n+        add(content);\n+    }\n+\n+    private List<ITab> buildTabList() {\n+        List<ITab> tabs = new ArrayList<>(3);\n+\n+        tabs.add(new AbstractTab(new Model<>(AnyTypeKind.USER.name())) {\n+\n+            private static final long serialVersionUID = -6815067322125799251L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                CamelRoutesPanel panel = new CamelRoutesPanel(panelId, getPageReference(), AnyTypeKind.USER);\n+                panel.setEnabled(restClient.isCamelEnabledFor(AnyTypeKind.USER));\n+                return panel;\n+            }\n+        });\n+\n+        tabs.add(new AbstractTab(new Model<>(AnyTypeKind.GROUP.name())) {\n+\n+            private static final long serialVersionUID = -6815067322125799251L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                CamelRoutesPanel panel = new CamelRoutesPanel(panelId, getPageReference(), AnyTypeKind.GROUP);\n+                panel.setEnabled(restClient.isCamelEnabledFor(AnyTypeKind.GROUP));\n+                return panel;\n+            }\n+        });\n+\n+        tabs.add(new AbstractTab(new Model<>(AnyTypeKind.ANY_OBJECT.name())) {\n+\n+            private static final long serialVersionUID = -6815067322125799251L;\n+\n+            @Override\n+            public Panel getPanel(final String panelId) {\n+                CamelRoutesPanel panel = new CamelRoutesPanel(panelId, getPageReference(), AnyTypeKind.ANY_OBJECT);\n+                panel.setEnabled(restClient.isCamelEnabledFor(AnyTypeKind.ANY_OBJECT));\n+                return panel;\n+            }\n+        });\n+\n+        return tabs;\n+    }\n+\n+}"},{"sha":"e87443e9c90008b24c1d652d19b436a7d9d2959b","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/pages/CamelRoutesPopupPage.java","status":"renamed","additions":13,"deletions":30,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPopupPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPopupPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPopupPage.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -18,15 +18,11 @@\n  */\n package org.apache.syncope.client.console.pages;\n \n-import java.io.Serializable;\n import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.panels.AbstractModalPanel;\n-import org.apache.syncope.client.console.rest.CamelRouteRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n+import org.apache.syncope.client.console.rest.CamelRoutesRestClient;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.CamelRouteTO;\n import org.apache.syncope.common.lib.types.CamelEntitlement;\n-import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n@@ -37,28 +33,22 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n \n-public class CamelRouteModalPage<T extends Serializable> extends AbstractModalPanel<T> {\n+public class CamelRoutesPopupPage extends BasePopupPage {\n \n     private static final long serialVersionUID = -1438441210568592931L;\n \n-    private final CamelRouteRestClient restClient = new CamelRouteRestClient();\n+    private final CamelRoutesRestClient restClient = new CamelRoutesRestClient();\n \n-    public CamelRouteModalPage(\n-            final BaseModal<T> modal,\n-            final PageReference pageRef,\n-            final CamelRouteTO routeTO,\n-            final boolean createFlag) {\n+    public CamelRoutesPopupPage(final CamelRouteTO routeTO) {\n+        super();\n \n-        super(modal, pageRef);\n-\n-        Form<CamelRouteTO> routeForm = new Form<>(\"routeDefForm\");\n+        Form<CamelRouteTO> routeDefForm = new Form<>(\"routeDefForm\");\n \n         TextArea<String> routeDefArea = new TextArea<>(\"content\", new PropertyModel<String>(routeTO, \"content\"));\n+        routeDefForm.add(routeDefArea);\n+        routeDefForm.setModel(new CompoundPropertyModel<>(routeTO));\n \n-        routeForm.add(routeDefArea);\n-        routeForm.setModel(new CompoundPropertyModel<>(routeTO));\n-\n-        AjaxButton submit = new IndicatingAjaxButton(APPLY, new Model<>(getString(SUBMIT)), routeForm) {\n+        AjaxButton submit = new IndicatingAjaxButton(APPLY, new Model<>(getString(SUBMIT)), routeDefForm) {\n \n             private static final long serialVersionUID = -958724007591692537L;\n \n@@ -67,27 +57,20 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                 try {\n                     restClient.update(routeTO.getKey(), ((CamelRouteTO) form.getModelObject()).getContent());\n                     info(getString(Constants.OPERATION_SUCCEEDED));\n-\n-                    // Uncomment with something similar once SYNCOPE-156 is completed\n-                    // Configuration callerPage = (Configuration) pageRef.getPage();\n-                    // callerPage.setModalResult(true);\n-                    modal.close(target);\n                 } catch (SyncopeClientException scee) {\n                     error(getString(Constants.ERROR) + \": \" + scee.getMessage());\n                 }\n-                modal.getNotificationPanel().refresh(target);\n+                notificationPanel.refresh(target);\n             }\n \n             @Override\n             protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n-                modal.getNotificationPanel().refresh(target);\n+                notificationPanel.refresh(target);\n             }\n-\n         };\n \n         MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE, CamelEntitlement.ROUTE_UPDATE);\n-        routeForm.add(submit);\n-\n-        this.add(routeForm);\n+        routeDefForm.add(submit);\n+        add(routeDefForm);\n     }\n }","previous_filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/pages/CamelRouteModalPage.java"},{"sha":"bcd5e7a69729247bdd06e384cb0bb5677d5a6c39","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/panels/CamelRoutePanel.java","status":"removed","additions":0,"deletions":176,"changes":176,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9536ffa91da22558067d186c90ecb2358fb9996d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9536ffa91da22558067d186c90ecb2358fb9996d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutePanel.java?ref=9536ffa91da22558067d186c90ecb2358fb9996d","patch":"@@ -1,176 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.Iterator;\n-import java.util.List;\n-import org.apache.syncope.client.console.annotations.ExtensionPanel;\n-import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n-import org.apache.syncope.client.console.rest.CamelRouteRestClient;\n-import org.apache.syncope.common.lib.to.CamelRouteTO;\n-import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.CamelEntitlement;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n-import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n-import org.apache.wicket.extensions.markup.html.repeater.util.SortableDataProvider;\n-import org.apache.wicket.markup.html.WebMarkupContainer;\n-import org.apache.wicket.markup.repeater.Item;\n-import org.apache.wicket.model.AbstractReadOnlyModel;\n-import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.ResourceModel;\n-\n-@ExtensionPanel(\"Camel routes\")\n-public class CamelRoutePanel extends AbstractExtensionPanel {\n-\n-    private static final long serialVersionUID = 1965360932245590233L;\n-\n-    private static final int CAMELROUTE_WIN_HEIGHT = 480;\n-\n-    private static final int CAMELROUTE_WIN_WIDTH = 800;\n-\n-    private CamelRouteRestClient restClient = new CamelRouteRestClient();\n-\n-    private ModalWindow editCamelRouteWin;\n-\n-    public CamelRoutePanel(final String id, final PageReference pageref) {\n-        super(id, pageref);\n-\n-        editCamelRouteWin = new ModalWindow(\"editCamelRouteWin\");\n-        editCamelRouteWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-        editCamelRouteWin.setInitialHeight(CAMELROUTE_WIN_HEIGHT);\n-        editCamelRouteWin.setInitialWidth(CAMELROUTE_WIN_WIDTH);\n-        editCamelRouteWin.setCookieName(\"editCamelRouteWin-modal\");\n-        add(editCamelRouteWin);\n-\n-        List<IColumn<CamelRouteTO, String>> routeCols = new ArrayList<>();\n-        routeCols.add(new PropertyColumn<CamelRouteTO, String>(new ResourceModel(\"key\"), \"key\", \"key\"));\n-        routeCols.add(new AbstractColumn<CamelRouteTO, String>(new ResourceModel(\"actions\", \"\")) {\n-\n-            private static final long serialVersionUID = 2054811145491901166L;\n-\n-            @Override\n-            public String getCssClass() {\n-                return \"action\";\n-            }\n-\n-            @Override\n-            public void populateItem(final Item<ICellPopulator<CamelRouteTO>> cellItem, final String componentId,\n-                    final IModel<CamelRouteTO> model) {\n-\n-                // Uncomment with something similar once SYNCOPE-156 is completed\n-                /* final ActionLinksPanel panel = new\n-                 * ActionLinksPanel(componentId, model, pageref);\n-                 *\n-                 * panel.add(new ActionLink() {\n-                 *\n-                 * private static final long serialVersionUID = -3722207913631435501L;\n-                 *\n-                 * @Override\n-                 * public void onClick(final AjaxRequestTarget target) {\n-                 *\n-                 * editCamelRouteWin.setPageCreator(new ModalWindow.PageCreator() {\n-                 *\n-                 * private static final long serialVersionUID = -7834632442532690940L;\n-                 *\n-                 * @Override\n-                 * public Page createPage() {\n-                 * return new CamelRouteModalPage(pageref, editCamelRouteWin,\n-                 * restClient.read(model.getObject().getKey()), false);\n-                 * }\n-                 *\n-                 * });\n-                 *\n-                 * editCamelRouteWin.show(target);\n-                 * }\n-                 * }, ActionLink.ActionType.EDIT, \"CamelRoutes\");\n-                 *\n-                 * cellItem.add(panel); */\n-            }\n-        });\n-\n-        final AjaxFallbackDefaultDataTable<CamelRouteTO, String> routeTable =\n-                new AjaxFallbackDefaultDataTable<>(\"camelRouteTable\", routeCols, new CamelRouteProvider(), 50);\n-\n-        WebMarkupContainer routeContainer = new WebMarkupContainer(\"camelRoutesContainer\");\n-        routeContainer.add(routeTable);\n-        routeContainer.setOutputMarkupId(true);\n-        MetaDataRoleAuthorizationStrategy.authorize(routeContainer, ENABLE, CamelEntitlement.ROUTE_LIST);\n-        add(routeContainer);\n-    }\n-\n-    private class CamelRouteProvider extends SortableDataProvider<CamelRouteTO, String> {\n-\n-        private static final long serialVersionUID = -2917236020432105949L;\n-\n-        private final SortableDataProviderComparator<CamelRouteTO> comparator;\n-\n-        CamelRouteProvider() {\n-            setSort(\"key\", SortOrder.ASCENDING);\n-            comparator = new SortableDataProviderComparator<>(this);\n-        }\n-\n-        @Override\n-        public Iterator<? extends CamelRouteTO> iterator(final long first, final long count) {\n-            List<CamelRouteTO> list = new ArrayList<>();\n-            if (restClient.isCamelEnabledFor(AnyTypeKind.USER)) {\n-                list.addAll(restClient.list(AnyTypeKind.USER));\n-            }\n-            if (restClient.isCamelEnabledFor(AnyTypeKind.GROUP)) {\n-                list.addAll(restClient.list(AnyTypeKind.GROUP));\n-            }\n-\n-            Collections.sort(list, comparator);\n-\n-            return list.subList((int) first, (int) first + (int) count).iterator();\n-        }\n-\n-        @Override\n-        public long size() {\n-            return (restClient.isCamelEnabledFor(AnyTypeKind.USER)\n-                    ? restClient.list(AnyTypeKind.USER).size()\n-                    : 0)\n-                    + (restClient.isCamelEnabledFor(AnyTypeKind.GROUP)\n-                    ? restClient.list(AnyTypeKind.GROUP).size()\n-                    : 0);\n-        }\n-\n-        @Override\n-        public IModel<CamelRouteTO> model(final CamelRouteTO route) {\n-            return new AbstractReadOnlyModel<CamelRouteTO>() {\n-\n-                private static final long serialVersionUID = 774694801558497248L;\n-\n-                @Override\n-                public CamelRouteTO getObject() {\n-                    return route;\n-                }\n-            };\n-        }\n-    }\n-\n-}"},{"sha":"8ef050d31260d466162c1f6ff993a0d4afabd8f6","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/panels/CamelRoutesPanel.java","status":"added","additions":196,"deletions":0,"changes":196,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesPanel.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -0,0 +1,196 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+import org.apache.syncope.client.console.SyncopeConsoleSession;\n+import org.apache.syncope.client.console.commons.SearchableDataProvider;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.pages.CamelRoutesPage;\n+import org.apache.syncope.client.console.pages.CamelRoutesPopupPage;\n+import org.apache.syncope.client.console.panels.CamelRoutesPanel.CamelRoutesProvider;\n+import org.apache.syncope.client.console.rest.CamelRoutesRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.common.lib.to.CamelRouteTO;\n+import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.CamelEntitlement;\n+import org.apache.syncope.common.rest.api.service.CamelRouteService;\n+import org.apache.wicket.Page;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n+import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n+import org.apache.wicket.markup.repeater.Item;\n+import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.model.IModel;\n+import org.apache.wicket.model.ResourceModel;\n+\n+public class CamelRoutesPanel extends AbstractSearchResultPanel<\n+        CamelRouteTO, CamelRouteTO, CamelRoutesProvider, CamelRoutesRestClient> {\n+\n+    private static final long serialVersionUID = 3727444742501082182L;\n+\n+    private static final int CAMELROUTE_WIN_HEIGHT = 480;\n+\n+    private static final int CAMELROUTE_WIN_WIDTH = 800;\n+\n+    private final AnyTypeKind anyTypeKind;\n+\n+    private ModalWindow editCamelRouteWin;\n+\n+    public CamelRoutesPanel(final String id, final PageReference pageRef, final AnyTypeKind anyTypeKind) {\n+        super(id, new Builder<CamelRouteTO, CamelRouteTO, CamelRoutesRestClient>(\n+                new CamelRoutesRestClient(), pageRef) {\n+\n+            private static final long serialVersionUID = 8769126634538601689L;\n+\n+            @Override\n+            protected WizardMgtPanel<CamelRouteTO> newInstance(final String id) {\n+                return new CamelRoutesPanel(id, this, anyTypeKind);\n+            }\n+        }.disableCheckBoxes());\n+\n+        this.anyTypeKind = anyTypeKind;\n+        setFooterVisibility(true);\n+        modal.addSumbitButton();\n+        modal.size(Modal.Size.Large);\n+        initResultTable();\n+\n+        editCamelRouteWin = new ModalWindow(\"editCamelRouteWin\");\n+        editCamelRouteWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        editCamelRouteWin.setInitialHeight(CAMELROUTE_WIN_HEIGHT);\n+        editCamelRouteWin.setInitialWidth(CAMELROUTE_WIN_WIDTH);\n+        editCamelRouteWin.setCookieName(\"editCamelRouteWin-modal\");\n+        add(editCamelRouteWin);\n+    }\n+\n+    private CamelRoutesPanel(\n+            final String id,\n+            final Builder<CamelRouteTO, CamelRouteTO, CamelRoutesRestClient> builder,\n+            final AnyTypeKind anyTypeKind) {\n+\n+        super(id, builder);\n+        this.anyTypeKind = anyTypeKind;\n+    }\n+\n+    @Override\n+    protected CamelRoutesProvider dataProvider() {\n+        return new CamelRoutesProvider(anyTypeKind, rows);\n+    }\n+\n+    @Override\n+    protected String paginatorRowsKey() {\n+        return CamelRoutesPage.PREF_CAMEL_ROUTES_PAGINATOR_ROWS;\n+    }\n+\n+    @Override\n+    protected Collection<ActionLink.ActionType> getBulkActions() {\n+        return Collections.<ActionLink.ActionType>emptyList();\n+    }\n+\n+    @Override\n+    protected List<IColumn<CamelRouteTO, String>> getColumns() {\n+        final List<IColumn<CamelRouteTO, String>> columns = new ArrayList<>();\n+        columns.add(new PropertyColumn<CamelRouteTO, String>(new ResourceModel(\"name\"), \"name\", \"name\"));\n+        columns.add(new AbstractColumn<CamelRouteTO, String>(new ResourceModel(\"actions\", \"\")) {\n+\n+            private static final long serialVersionUID = -3503023501954863131L;\n+\n+            @Override\n+            public String getCssClass() {\n+                return \"action\";\n+            }\n+\n+            @Override\n+            public void populateItem(final Item<ICellPopulator<CamelRouteTO>> item, final String componentId,\n+                    final IModel<CamelRouteTO> model) {\n+\n+                ActionLinksPanel.Builder<Serializable> actionLinks = ActionLinksPanel.builder(page.getPageReference());\n+                actionLinks.setDisableIndicator(true);\n+                actionLinks.addWithRoles(new ActionLink<Serializable>() {\n+\n+                    private static final long serialVersionUID = -3722207913631435501L;\n+\n+                    @Override\n+                    public void onClick(final AjaxRequestTarget target, final Serializable ignore) {\n+                        editCamelRouteWin.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                            private static final long serialVersionUID = -7834632442532690940L;\n+\n+                            @Override\n+                            public Page createPage() {\n+                                return new CamelRoutesPopupPage(restClient.read(model.getObject().getKey()));\n+                            }\n+\n+                        });\n+\n+                        editCamelRouteWin.show(target);\n+                    }\n+                }, ActionLink.ActionType.EDIT, CamelEntitlement.ROUTE_READ);\n+                item.add(actionLinks.build(componentId));\n+            }\n+        });\n+\n+        return columns;\n+\n+    }\n+\n+    protected final class CamelRoutesProvider extends SearchableDataProvider<CamelRouteTO> {\n+\n+        private static final long serialVersionUID = -185944053385660794L;\n+\n+        private final AnyTypeKind anyTypeKind;\n+\n+        private final SortableDataProviderComparator<CamelRouteTO> comparator;\n+\n+        private CamelRoutesProvider(final AnyTypeKind anyTypeKind, final int paginatorRows) {\n+            super(paginatorRows);\n+            this.anyTypeKind = anyTypeKind;\n+            comparator = new SortableDataProviderComparator<>(this);\n+        }\n+\n+        @Override\n+        public Iterator<CamelRouteTO> iterator(final long first, final long count) {\n+            List<CamelRouteTO> list = SyncopeConsoleSession.get().getService(CamelRouteService.class).list(anyTypeKind);\n+            Collections.sort(list, comparator);\n+            return list.subList((int) first, (int) first + (int) count).iterator();\n+        }\n+\n+        @Override\n+        public long size() {\n+            return SyncopeConsoleSession.get().getService(CamelRouteService.class).list(anyTypeKind).size();\n+        }\n+\n+        @Override\n+        public IModel<CamelRouteTO> model(final CamelRouteTO object) {\n+            return new CompoundPropertyModel<>(object);\n+        }\n+    }\n+}"},{"sha":"285b27d4602f3d53c02e68bbe42ee683254738b1","filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/rest/CamelRoutesRestClient.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FCamelRoutesRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FCamelRoutesRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FCamelRoutesRestClient.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -26,7 +26,7 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class CamelRouteRestClient extends BaseRestClient {\n+public class CamelRoutesRestClient extends BaseRestClient {\n \n     private static final long serialVersionUID = -2018208424159468912L;\n ","previous_filename":"ext/camel/client-console/src/main/java/org/apache/syncope/client/console/rest/CamelRouteRestClient.java"},{"sha":"142df331e5b917464687cb06d9bab0efe1d76eb7","filename":"ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/pages/CamelRoutesPage.html","status":"renamed","additions":17,"deletions":13,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPage.html?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -19,21 +19,25 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:extend>\n+    <div class=\"wrapper\">\n+      <div class=\"admin-content-page\" wicket:id=\"content\">\n \n-    <section class=\"content-header\">\n-      <h1>\n-        Camel Routes\n-        <small>Work in progress</small>\n-      </h1>\n-    </section>\n-\n-    <section class=\"content\">\n-      <div class=\"progress progress active\" style=\"margin:100px\">\n-        <div style=\"width: 70%\" aria-valuemax=\"100\" aria-valuemin=\"0\" aria-valuenow=\"20\" role=\"progressbar\" class=\"progress-bar progress-bar-success progress-bar-striped\">\n-          <span class=\"sr-only\">20% Complete</span>\n+        <div class=\"box box-solid box-primary\">\n+          <div class=\"box-header with-border\">\n+            <h3 class=\"box-title\">\n+              <span wicket:id=\"header\"></span>\n+            </h3>\n+          </div>\n+          <div class=\"box-body\">\n+            <div class=\"realms\">\n+              <form>\n+                <div wicket:id=\"tabbedPanel\"></div>\n+              </form>\n+            </div>\n+          </div>\n         </div>\n-      </div>\n-    </section>\n \n+      </div>\n+    </div>\n   </wicket:extend>\n </html>\n\\ No newline at end of file","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/CamelRoutes.html"},{"sha":"f8c2fd1edeb57ac0e400a38ecb5c2687272ecae2","filename":"ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/pages/CamelRoutesPage.properties","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPage.properties?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -14,4 +14,4 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-title=Rotta di Camel\n+header_title=Camel Routes","previous_filename":"ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/pages/CamelRouteModalPage_it.properties"},{"sha":"f8c2fd1edeb57ac0e400a38ecb5c2687272ecae2","filename":"ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/pages/CamelRoutesPage_it.properties","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPage_it.properties?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -14,4 +14,4 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-title=Rota de Camel\n+header_title=Camel Routes","previous_filename":"ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/pages/CamelRouteModalPage_pt_BR.properties"},{"sha":"f8c2fd1edeb57ac0e400a38ecb5c2687272ecae2","filename":"ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/pages/CamelRoutesPage_pt_BR.properties","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPage_pt_BR.properties?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -0,0 +1,17 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+header_title=Camel Routes"},{"sha":"3b0b25543c6cca389f261f8deb24c4577464fb0d","filename":"ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/pages/CamelRoutesPopupPage.html","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPopupPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPopupPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPopupPage.html?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -47,7 +47,7 @@\n         <form wicket:id=\"routeDefForm\" id=\"routeDefForm\">\n           <textarea wicket:id=\"content\" id=\"content\" name=\"content\" style=\"width: 100%; height: 350px;\">\n           </textarea>\n-          <div style=\"margin: 10px;\">\n+          <div style=\"padding-top: 1%;\">\n             <input type=\"submit\"\n                    class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n                    wicket:id=\"apply\"","previous_filename":"ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/pages/CamelRouteModalPage.html"},{"sha":"31bf6a7a4088c9d91263654f7e215be2af6dc49c","filename":"ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/pages/CamelRoutesPopupPage.properties","status":"renamed","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPopupPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPopupPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPopupPage.properties?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -15,3 +15,5 @@\n # specific language governing permissions and limitations\n # under the License.\n title=Camel route\n+submit=Save\n+cancel=Close","previous_filename":"ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/pages/CamelRouteModalPage.properties"},{"sha":"7d2f1ec91d0983a0087a0f2340f5e7bad6ec9db2","filename":"ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/pages/CamelRoutesPopupPage_it.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPopupPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPopupPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPopupPage_it.properties?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Rotta di Camel\n+submit=Salva\n+cancel=Chiudi"},{"sha":"fa7217f937013305c03b7c7eba16004b3d8d5cf4","filename":"ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/pages/CamelRoutesPopupPage_pt_BR.properties","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPopupPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPopupPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FCamelRoutesPopupPage_pt_BR.properties?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -0,0 +1,19 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+title=Rota de Camel\n+submit=Salvar\n+cancel=Fechar"},{"sha":"0bd1210b100d492ddd325769ae9ebd9254105304","filename":"ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/panels/CamelRoutesPanel.html","status":"renamed","additions":2,"deletions":7,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fclient-console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FCamelRoutesPanel.html?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -17,12 +17,7 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:panel>\n-    <div id=\"users-contain\" class=\"ui-widget\" style=\"width:inherit\">\n-      <span wicket:id=\"camelRoutesContainer\">\n-        <table class=\"ui-widget ui-widget-content table-hover\" wicket:id=\"camelRouteTable\"/>\n-      </span>\n-    </div>\n+  <wicket:extend>\n     <div wicket:id=\"editCamelRouteWin\">[Show modal window for editing Camel route]</div>\n-  </wicket:panel>\n+  </wicket:extend>\n </html>","previous_filename":"ext/camel/client-console/src/main/resources/org/apache/syncope/client/console/panels/CamelRoutePanel.html"},{"sha":"8dffed4df9829414df414e65a7b9d3a836666623","filename":"fit/console-reference/src/test/java/org/apache/syncope/fit/console/reference/AbstractITCase.java","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/fit%2Fconsole-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2Freference%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/fit%2Fconsole-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2Freference%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2Freference%2FAbstractITCase.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -18,12 +18,10 @@\n  */\n package org.apache.syncope.fit.console.reference;\n \n-import static org.apache.syncope.client.console.init.ConsoleInitializer.CLASSPATH_LOOKUP;\n-import static org.apache.syncope.client.console.init.ConsoleInitializer.MIMETYPES_LOADER;\n-\n import javax.servlet.ServletContext;\n import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n+import org.apache.syncope.client.console.init.ConsoleInitializer;\n import org.apache.syncope.client.console.init.MIMETypesLoader;\n import org.apache.syncope.client.console.pages.Login;\n import org.apache.wicket.util.tester.FormTester;\n@@ -54,12 +52,12 @@ protected void init() {\n                 final ServletContext ctx = getServletContext();\n                 final ClassPathScanImplementationLookup lookup = new ClassPathScanImplementationLookup();\n                 lookup.load();\n-                ctx.setAttribute(CLASSPATH_LOOKUP, lookup);\n+                ctx.setAttribute(ConsoleInitializer.CLASSPATH_LOOKUP, lookup);\n \n                 final MIMETypesLoader mimeTypes = new MIMETypesLoader();\n                 mimeTypes.load();\n-                ctx.setAttribute(MIMETYPES_LOADER, mimeTypes);\n-                \n+                ctx.setAttribute(ConsoleInitializer.MIMETYPES_LOADER, mimeTypes);\n+\n                 super.init();\n             }\n         };"},{"sha":"59fed6612d91c5be0a5a85542638dc48d1cab178","filename":"fit/console-reference/src/test/java/org/apache/syncope/fit/console/reference/BaseITCase.java","status":"modified","additions":0,"deletions":7,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/fit%2Fconsole-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2Freference%2FBaseITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7cb3c322e08eaf4fcb94c02485962ce92f98a00d/fit%2Fconsole-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2Freference%2FBaseITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2Freference%2FBaseITCase.java?ref=7cb3c322e08eaf4fcb94c02485962ce92f98a00d","patch":"@@ -18,10 +18,6 @@\n  */\n package org.apache.syncope.fit.console.reference;\n \n-import static org.apache.syncope.fit.console.reference.AbstractITCase.ADMIN;\n-import static org.apache.syncope.fit.console.reference.AbstractITCase.PASSWORD;\n-\n-import org.apache.syncope.client.console.pages.CamelRoutes;\n import org.apache.syncope.client.console.pages.Dashboard;\n import org.apache.syncope.client.console.pages.Layouts;\n import org.apache.syncope.client.console.pages.Login;\n@@ -94,8 +90,5 @@ public void browsingBookmarkablePageLink() {\n \n         wicketTester.clickLink(\"configurationLI:configurationUL:notificationsLI:notifications\");\n         wicketTester.assertRenderedPage(Notifications.class);\n-\n-        wicketTester.clickLink(\"camelroutesLI:camelroutes\");\n-        wicketTester.assertRenderedPage(CamelRoutes.class);\n     }\n }"}]}