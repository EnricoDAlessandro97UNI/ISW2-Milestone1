{"sha":"0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f","node_id":"C_kwDOJfYA1toAKDBlMmY4NDdhYzZiYjk3NWI4Y2JmNGEwMGNmNWMyMTJiNDliMDI4MmY","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@users.noreply.github.com","date":"2022-04-28T09:30:31Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2022-04-28T09:30:31Z"},"message":"[SYNCOPE-1465] Adding executor to SinglePullJobDelegate (#341)","tree":{"sha":"cb94b215711f2a9fec70e49027ade85081ef6546","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/cb94b215711f2a9fec70e49027ade85081ef6546"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJial63CRBK7hj4Ov3rIwAAgu0IAJsXsKCzM2im+DO9Mv7hO3IF\nUksn9kI2UyssHxr52aIxl/DPvhB3eQdwxZutL8V/zD1KQG6hCF4HK4TeV0r1khle\nXAeYQ/uJwREEip5UN8qAGJW6HU2fBkSdWDBnxG9jHMmzWBN3YisZWOz5giQaJvfw\n2RcNb0Vuvw3jdxa5i24Bffyu0K0izj6qe8n0P1x369osKBK9QIZKtB8OQsTjfvh2\ndv56ChwwXefsnb2pmlHfL3dzK/1jKOKcLxmxThrHX9wWOK6C5oyPZWz9eK7HpDjZ\ngiW8KQm6K8reMYkTtlPRV6Rh+BjIHOqlXdOOK7urx9rVAXMTsdEwJhywrlwHvy0=\n=c7cT\n-----END PGP SIGNATURE-----\n","payload":"tree cb94b215711f2a9fec70e49027ade85081ef6546\nparent 6bb37ebde42deda53ec12e9b73749ee3f79f696a\nauthor Francesco Chicchiriccò <ilgrosso@users.noreply.github.com> 1651138231 +0200\ncommitter GitHub <noreply@github.com> 1651138231 +0200\n\n[SYNCOPE-1465] Adding executor to SinglePullJobDelegate (#341)\n\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"6bb37ebde42deda53ec12e9b73749ee3f79f696a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6bb37ebde42deda53ec12e9b73749ee3f79f696a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6bb37ebde42deda53ec12e9b73749ee3f79f696a"}],"stats":{"total":59,"additions":28,"deletions":31},"files":[{"sha":"1361304553e66257a60a9f1a64df5067c3d5f5ff","filename":"core/idm/logic/src/main/java/org/apache/syncope/core/logic/ReconciliationLogic.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java?ref=0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f","patch":"@@ -366,7 +366,7 @@ public List<ProvisioningReport> push(\n                     connectorManager.getConnector(provision.getResource()),\n                     getAny(provision, anyKey),\n                     pushTask,\n-                    AuthContextUtils.getUsername()));\n+                    AuthContextUtils.getWho()));\n             if (!results.isEmpty() && results.get(0).getStatus() == ProvisioningReport.Status.FAILURE) {\n                 sce.getElements().add(results.get(0).getMessage());\n             }\n@@ -405,7 +405,7 @@ public List<ProvisioningReport> push(\n                                 connectorManager.getConnector(provision.getResource()),\n                                 match.getAny(),\n                                 pushTask,\n-                                AuthContextUtils.getUsername()));\n+                                AuthContextUtils.getWho()));\n                         if (!results.isEmpty() && results.get(0).getStatus() == ProvisioningReport.Status.FAILURE) {\n                             sce.getElements().add(results.get(0).getMessage());\n                         }\n@@ -415,7 +415,7 @@ public List<ProvisioningReport> push(\n                                 connectorManager.getConnector(provision.getResource()),\n                                 match.getLinkedAccount(),\n                                 pushTask,\n-                                AuthContextUtils.getUsername());\n+                                AuthContextUtils.getWho());\n                         if (result.getStatus() == ProvisioningReport.Status.FAILURE) {\n                             sce.getElements().add(result.getMessage());\n                         } else {\n@@ -457,7 +457,8 @@ protected List<ProvisioningReport> pull(\n                     connectorManager.getConnector(provision.getResource()),\n                     reconFilterBuilder,\n                     moreAttrsToGet,\n-                    pullTask));\n+                    pullTask,\n+                    AuthContextUtils.getWho()));\n             if (!results.isEmpty() && results.get(0).getStatus() == ProvisioningReport.Status.FAILURE) {\n                 sce.getElements().add(results.get(0).getMessage());\n             }\n@@ -638,7 +639,7 @@ public List<ProvisioningReport> push(\n                     connector,\n                     spec.getPropagationActions(),\n                     pushTask,\n-                    AuthContextUtils.getUsername());\n+                    AuthContextUtils.getWho());\n         } catch (Exception e) {\n             LOG.error(\"Could not push to stream\", e);\n             SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Reconciliation);"},{"sha":"827729c1dc6bde26ecdddc4f502d9fb9000ec6e1","filename":"core/persistence-jpa-json/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractJPAJSONAnyDAO.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractJPAJSONAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractJPAJSONAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa-json%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractJPAJSONAnyDAO.java?ref=0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f","patch":"@@ -335,11 +335,11 @@ public <A extends Any<?>> void checkBeforeSave(final String table, final AnyUtil\n             }\n         }\n \n-        // update sysInfo - as org.apache.syncope.core.persistence.jpa.entity.PlainAttrListener is not invoked\n+        // update sysInfo\n         OffsetDateTime now = OffsetDateTime.now();\n-        String username = AuthContextUtils.getUsername();\n-        LOG.debug(\"Set last change date '{}' and modifier '{}' for '{}'\", now, username, any);\n-        any.setLastModifier(username);\n+        String who = AuthContextUtils.getWho();\n+        LOG.debug(\"Set last change date '{}' and modifier '{}' for '{}'\", now, who, any);\n+        any.setLastModifier(who);\n         any.setLastChangeDate(now);\n     }\n }"},{"sha":"4de8e3b303ddbb88a70027f0e15031b671b8f374","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/SyncopeSinglePullExecutor.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopeSinglePullExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopeSinglePullExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FSyncopeSinglePullExecutor.java?ref=0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f","patch":"@@ -34,5 +34,6 @@ List<ProvisioningReport> pull(\n             Connector connector,\n             ReconFilterBuilder reconFilterBuilder,\n             Set<String> moreAttrsToGet,\n-            PullTaskTO pullTaskTO) throws JobExecutionException;\n+            PullTaskTO pullTaskTO,\n+            String executor) throws JobExecutionException;\n }"},{"sha":"7c6c25d24af6c99a6379c01c3e368e777539cfef","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/AbstractSchedTaskJobDelegate.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FAbstractSchedTaskJobDelegate.java?ref=0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f","patch":"@@ -32,7 +32,6 @@\n import org.apache.syncope.core.provisioning.api.AuditManager;\n import org.apache.syncope.core.provisioning.api.job.SchedTaskJobDelegate;\n import org.apache.syncope.core.provisioning.api.notification.NotificationManager;\n-import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.spring.security.SecurityProperties;\n import org.quartz.JobExecutionContext;\n import org.quartz.JobExecutionException;\n@@ -148,7 +147,7 @@ public void execute(final String taskKey, final boolean dryRun, final JobExecuti\n         status.set(\"Done\");\n \n         notificationManager.createTasks(\n-                AuthContextUtils.getWho(),\n+                executor,\n                 AuditElements.EventCategoryType.TASK,\n                 this.getClass().getSimpleName(),\n                 null,\n@@ -158,7 +157,7 @@ public void execute(final String taskKey, final boolean dryRun, final JobExecuti\n                 execution);\n \n         auditManager.audit(\n-                AuthContextUtils.getWho(),\n+                executor,\n                 AuditElements.EventCategoryType.TASK,\n                 task.getClass().getSimpleName(),\n                 null,"},{"sha":"abbae849c854dc55e4a93ae08c8b66100f81f3a4","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/job/DefaultJobManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FDefaultJobManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FDefaultJobManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fjob%2FDefaultJobManager.java?ref=0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f","patch":"@@ -254,7 +254,7 @@ public void register(\n                 jobMap);\n     }\n \n-    protected static Map<String, Object> createJobMapForExecutionContext(final String executor) {\n+    protected Map<String, Object> createJobMapForExecutionContext(final String executor) {\n         Map<String, Object> jobMap = new HashMap<>();\n         jobMap.put(JobManager.DOMAIN_KEY, AuthContextUtils.getDomain());\n         jobMap.put(JobManager.EXECUTOR_KEY, executor);"},{"sha":"76fc6e7564546999467108df4545052c9b219891","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PriorityPropagationTaskExecutor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java?ref=0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f","patch":"@@ -71,7 +71,7 @@ public class PriorityPropagationTaskExecutor extends AbstractPropagationTaskExec\n      * @return new {@link PropagationTaskCallable} instance for usage with\n      * {@link java.util.concurrent.CompletionService}\n      */\n-    protected static PropagationTaskCallable newPropagationTaskCallable(\n+    protected PropagationTaskCallable newPropagationTaskCallable(\n             final PropagationTaskInfo taskInfo, final PropagationReporter reporter, final String executor) {\n \n         PropagationTaskCallable callable = (PropagationTaskCallable) ApplicationContextProvider.getBeanFactory()."},{"sha":"81284f88d7cf90cb00705dde721f5a57ab3a8d1c","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/AbstractPullResultHandler.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FAbstractPullResultHandler.java?ref=0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f","patch":"@@ -67,7 +67,6 @@\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullExecutor;\n import org.apache.syncope.core.provisioning.api.pushpull.SyncopePullResultHandler;\n import org.apache.syncope.core.provisioning.java.utils.ConnObjectUtils;\n-import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.identityconnectors.framework.common.objects.SyncDeltaType;\n@@ -931,7 +930,7 @@ protected void end(\n         }\n \n         notificationManager.createTasks(\n-                AuthContextUtils.getWho(),\n+                profile.getExecutor(),\n                 AuditElements.EventCategoryType.PULL,\n                 anyTypeKind.name().toLowerCase(),\n                 profile.getTask().getResource().getKey(),\n@@ -943,7 +942,7 @@ protected void end(\n                 furtherInput);\n \n         auditManager.audit(\n-                AuthContextUtils.getWho(),\n+                profile.getExecutor(),\n                 AuditElements.EventCategoryType.PULL,\n                 anyTypeKind.name().toLowerCase(),\n                 profile.getTask().getResource().getKey(),"},{"sha":"215c79719487fa3fc2949d63bd4c97d9d7070cec","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/DefaultUserPullResultHandler.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FDefaultUserPullResultHandler.java?ref=0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f","patch":"@@ -57,7 +57,6 @@\n import org.apache.syncope.core.provisioning.api.propagation.PropagationException;\n import org.apache.syncope.common.lib.to.ProvisioningReport;\n import org.apache.syncope.core.provisioning.api.pushpull.PullActions;\n-import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.apache.syncope.core.provisioning.api.pushpull.UserPullResultHandler;\n import org.identityconnectors.framework.common.objects.AttributeUtil;\n@@ -270,7 +269,7 @@ protected Optional<ProvisioningReport> deprovision(\n                         propByLinkedAccount,\n                         null),\n                         false,\n-                        AuthContextUtils.getUsername());\n+                        profile.getExecutor());\n \n                 for (PullActions action : profile.getActions()) {\n                     action.after(profile, delta, before, report);"},{"sha":"3e5adfefaf394b782eb80c70247c10179fbc1e6f","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/pushpull/SinglePullJobDelegate.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSinglePullJobDelegate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSinglePullJobDelegate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpushpull%2FSinglePullJobDelegate.java?ref=0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f","patch":"@@ -67,7 +67,8 @@ public List<ProvisioningReport> pull(\n             final Connector connector,\n             final ReconFilterBuilder reconFilterBuilder,\n             final Set<String> moreAttrsToGet,\n-            final PullTaskTO pullTaskTO) throws JobExecutionException {\n+            final PullTaskTO pullTaskTO,\n+            final String executor) throws JobExecutionException {\n \n         LOG.debug(\"Executing pull on {}\", provision.getResource());\n \n@@ -122,6 +123,7 @@ public List<ProvisioningReport> pull(\n             profile.setDryRun(false);\n             profile.setConflictResolutionAction(ConflictResolutionAction.FIRSTMATCH);\n             profile.getActions().addAll(actions);\n+            profile.setExecutor(executor);\n \n             for (PullActions action : actions) {\n                 action.beforeAll(profile);"},{"sha":"3f87fb39bd5cfac5e5e94b730e63fec8f3c428b6","filename":"core/workflow-java/src/main/java/org/apache/syncope/core/workflow/java/AbstractWorkflowAdapter.java","status":"modified","additions":1,"deletions":5,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fworkflow-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fjava%2FAbstractWorkflowAdapter.java?ref=0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f","patch":"@@ -19,15 +19,11 @@\n package org.apache.syncope.core.workflow.java;\n \n import java.time.OffsetDateTime;\n-import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.core.persistence.api.entity.Any;\n-import org.apache.syncope.core.spring.security.AuthContextUtils;\n \n public abstract class AbstractWorkflowAdapter {\n \n-    protected void metadata(final Any<?> any, final String username, final String context) {\n-        String who = username\n-                + AuthContextUtils.getDelegatedBy().map(d -> \" [delegated by \" + d + \"]\").orElse(StringUtils.EMPTY);\n+    protected void metadata(final Any<?> any, final String who, final String context) {\n         OffsetDateTime now = OffsetDateTime.now();\n \n         if (any.getCreationDate() == null) {"},{"sha":"45e615508d246bfbd37e83128aa8e13bbe25032a","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/AbstractITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2FAbstractITCase.java?ref=0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f","patch":"@@ -385,7 +385,7 @@ public void initialize(final ConfigurableApplicationContext ctx) {\n \n     @BeforeAll\n     public static void securitySetup() {\n-        try ( InputStream propStream = AbstractITCase.class.getResourceAsStream(\"/core.properties\")) {\n+        try (InputStream propStream = AbstractITCase.class.getResourceAsStream(\"/core.properties\")) {\n             Properties props = new Properties();\n             props.load(propStream);\n "},{"sha":"1603e91ffdb50cfac5bbc0fda1beddd18c2ea4ae","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/enduser/AbstractEnduserITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAbstractEnduserITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAbstractEnduserITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fenduser%2FAbstractEnduserITCase.java?ref=0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f","patch":"@@ -144,7 +144,7 @@ public static void setUp() {\n         ctx.register(SyncopeWebApplication.class);\n \n         String springActiveProfiles = null;\n-        try ( InputStream propStream = AbstractConsoleITCase.class.getResourceAsStream(\"/test.properties\")) {\n+        try (InputStream propStream = AbstractConsoleITCase.class.getResourceAsStream(\"/test.properties\")) {\n             Properties props = new Properties();\n             props.load(propStream);\n "},{"sha":"8701978bc000f02ed3e0052ca6001e2dbf5846ee","filename":"fit/wa-reference/src/test/java/org/apache/syncope/fit/sra/AbstractSRAITCase.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FAbstractSRAITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FAbstractSRAITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fwa-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fsra%2FAbstractSRAITCase.java?ref=0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f","patch":"@@ -145,7 +145,7 @@ protected static void doStartSRA(final String activeProfile)\n             throws IOException, InterruptedException, TimeoutException {\n \n         Properties props = new Properties();\n-        try ( InputStream propStream = AbstractSRAITCase.class.getResourceAsStream(\"/test.properties\")) {\n+        try (InputStream propStream = AbstractSRAITCase.class.getResourceAsStream(\"/test.properties\")) {\n             props.load(propStream);\n         } catch (Exception e) {\n             fail(\"Could not load /test.properties\", e);\n@@ -190,7 +190,7 @@ protected static void doStartSRA(final String activeProfile)\n \n         await().atMost(120, TimeUnit.SECONDS).pollInterval(3, TimeUnit.SECONDS).until(() -> {\n             boolean connected = false;\n-            try ( Socket socket = new Socket()) {\n+            try (Socket socket = new Socket()) {\n                 socket.connect(new InetSocketAddress(\"0.0.0.0\", PORT));\n                 connected = socket.isConnected();\n             } catch (ConnectException e) {"},{"sha":"695f018c3a64ca11d966bb3b4701d8600bfe2b8b","filename":"sra/src/test/java/org/apache/syncope/sra/filters/BodyPropertyAddingGatewayFilterFactory.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/sra%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Ffilters%2FBodyPropertyAddingGatewayFilterFactory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f/sra%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Ffilters%2FBodyPropertyAddingGatewayFilterFactory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Ffilters%2FBodyPropertyAddingGatewayFilterFactory.java?ref=0e2f847ac6bb975b8cbf4a00cf5c212b49b0282f","patch":"@@ -126,7 +126,7 @@ public Mono<Void> writeWith(Publisher<? extends DataBuffer> body) {\n                         }\n \n                         if (compressed) {\n-                            try ( ByteArrayOutputStream baos = new ByteArrayOutputStream(output.length);  GZIPOutputStream gzipos =\n+                            try (ByteArrayOutputStream baos = new ByteArrayOutputStream(output.length);  GZIPOutputStream gzipos =\n                                     new GZIPOutputStream(baos)) {\n \n                                 gzipos.write(output);"}]}