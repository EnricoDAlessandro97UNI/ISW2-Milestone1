{"sha":"0370ddc65b42fc163d6bc277572074bfff2a14fb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjAzNzBkZGM2NWI0MmZjMTYzZDZiYzI3NzU3MjA3NGJmZmYyYTE0ZmI=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-06-23T11:13:32Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2016-06-23T11:13:41Z"},"message":"[SYNCOPE-874] handling realm provisioning features on the administration console","tree":{"sha":"97d9fd62909c3b5a538e605f11d72b57d32674ff","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/97d9fd62909c3b5a538e605f11d72b57d32674ff"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0370ddc65b42fc163d6bc277572074bfff2a14fb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0370ddc65b42fc163d6bc277572074bfff2a14fb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0370ddc65b42fc163d6bc277572074bfff2a14fb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0370ddc65b42fc163d6bc277572074bfff2a14fb/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"9042203d7f2c976596d271c73cf9765f17a498a0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9042203d7f2c976596d271c73cf9765f17a498a0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9042203d7f2c976596d271c73cf9765f17a498a0"}],"stats":{"total":1288,"additions":940,"deletions":348},"files":[{"sha":"7ac304d4bf800ed71574b351a37413dfb3384d56","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/Constants.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2FConstants.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -27,6 +27,8 @@\n \n public final class Constants {\n \n+    public static final String SYNCOPE = \"syncope\";\n+\n     public static final String ON_CLICK = \"click\";\n \n     public static final String ON_CHANGE = \"change\";"},{"sha":"989a19e8fe1fa3cb20547321653a77ae89d7fe69","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/StatusUtils.java","status":"modified","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusUtils.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -34,6 +34,7 @@\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n+import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Panel;\n@@ -223,6 +224,53 @@ public static Label getStatusImage(final String componentId, final Status status\n                 break;\n         }\n \n+        return getLabel(componentId, alt, title, clazz);\n+    }\n+\n+    public static Panel getStatusImagePanel(final String componentId, final PropagationTaskExecStatus status) {\n+        return new LabelPanel(componentId, getStatusImage(\"label\", status));\n+    }\n+\n+    public static Label getStatusImage(final String componentId, final PropagationTaskExecStatus status) {\n+        final String alt, title, clazz;\n+\n+        switch (status) {\n+\n+            case NOT_ATTEMPTED:\n+                alt = \"not attempted\";\n+                title = \"Not attempted\";\n+                clazz = Constants.UNDEFINED_ICON;\n+                break;\n+\n+            case CREATED:\n+                alt = \"created icon\";\n+                title = \"Created\";\n+                clazz = Constants.CREATED_ICON;\n+                break;\n+\n+            case SUCCESS:\n+                alt = \"success icon\";\n+                title = \"Propagation succeded\";\n+                clazz = Constants.ACTIVE_ICON;\n+                break;\n+\n+            case FAILURE:\n+                alt = \"failure icon\";\n+                title = \"Propagation failed\";\n+                clazz = Constants.NOT_FOUND_ICON;\n+                break;\n+\n+            default:\n+                alt = StringUtils.EMPTY;\n+                title = StringUtils.EMPTY;\n+                clazz = StringUtils.EMPTY;\n+                break;\n+        }\n+\n+        return getLabel(componentId, alt, title, clazz);\n+    }\n+\n+    private static Label getLabel(final String componentId, final String alt, final String title, final String clazz) {\n         return new Label(componentId, StringUtils.EMPTY) {\n \n             private static final long serialVersionUID = 4755868673082976208L;"},{"sha":"7106ac834158dde1e6999c43308c0d880ad38726","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/Realms.java","status":"modified","additions":41,"deletions":37,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -24,28 +24,26 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.panels.Realm;\n-import org.apache.syncope.client.console.panels.RealmModalPanel;\n import org.apache.syncope.client.console.panels.RealmChoicePanel;\n import org.apache.syncope.client.console.panels.RealmChoicePanel.ChosenRealm;\n import org.apache.syncope.client.console.panels.WizardModalPanel;\n import org.apache.syncope.client.console.rest.RealmRestClient;\n import org.apache.syncope.client.console.tasks.TemplatesTogglePanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n+import org.apache.syncope.client.console.wizards.any.ResultPage;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.to.TemplatableTO;\n-import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.event.Broadcast;\n import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow.WindowClosedCallback;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n-import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.ResourceModel;\n-import org.apache.wicket.model.StringResourceModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n \n public class Realms extends BasePage {\n@@ -175,7 +173,7 @@ private WebMarkupContainer updateRealmContent(final RealmTO realmTO, final int s\n         if (realmTO == null) {\n             return content;\n         }\n-        content.addOrReplace(new Realm(\"body\", realmTO, getPageReference(), selectedIndex) {\n+        content.addOrReplace(new Realm(\"body\", realmTO, Realms.this.getPageReference(), selectedIndex) {\n \n             private static final long serialVersionUID = 8221398624379357183L;\n \n@@ -186,42 +184,48 @@ protected void onClickTemplate(final AjaxRequestTarget target) {\n             }\n \n             @Override\n-            protected void onClickCreate(final AjaxRequestTarget target) {\n-                modal.header(new ResourceModel(\"newRealm\"));\n-\n-                RealmTO newRealmTO = new RealmTO();\n-                modal.setFormModel(newRealmTO);\n-\n-                RealmModalPanel panel = new RealmModalPanel(\n-                        modal,\n-                        Realms.this.getPageReference(),\n-                        newRealmTO,\n-                        realmChoicePanel.getCurrentRealm().getFullPath(),\n-                        StandardEntitlement.REALM_CREATE,\n-                        true);\n-                target.add(modal.setContent(panel));\n-\n-                modal.addSubmitButton();\n-                modal.show(true);\n+            protected void setWindowClosedReloadCallback(final BaseModal<?> modal) {\n+                modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n+\n+                    private static final long serialVersionUID = 8804221891699487139L;\n+\n+                    @Override\n+                    public void onClose(final AjaxRequestTarget target) {\n+                        target.add(realmChoicePanel.reloadRealmTree(target));\n+\n+                        if (modal.getContent() instanceof ResultPage) {\n+                            updateRealmContent(RealmTO.class.cast(\n+                                    ResultPage.class.cast(modal.getContent()).getItem()), selectedIndex);\n+                            target.add(content);\n+                        }\n+\n+                        modal.show(false);\n+                    }\n+                });\n             }\n \n             @Override\n-            protected void onClickEdit(final AjaxRequestTarget target, final RealmTO realmTO) {\n-                modal.header(new StringResourceModel(\"editRealm\", Model.of(realmTO)));\n+            protected void onClickCreate(final AjaxRequestTarget target) {\n+                this.wizardBuilder.setParentPath(realmChoicePanel.getCurrentRealm().getFullPath());\n+                send(this, Broadcast.EXACT, new AjaxWizard.NewItemActionEvent<RealmTO>(new RealmTO(), target) {\n \n-                modal.setFormModel(realmTO);\n+                    @Override\n+                    public String getEventDescription() {\n+                        return \"realm.new\";\n+                    }\n+                });\n+            }\n \n-                RealmModalPanel panel = new RealmModalPanel(\n-                        modal,\n-                        Realms.this.getPageReference(),\n-                        realmTO,\n-                        realmTO.getFullPath(),\n-                        StandardEntitlement.REALM_UPDATE,\n-                        false);\n-                target.add(modal.setContent(panel));\n+            @Override\n+            protected void onClickEdit(final AjaxRequestTarget target, final RealmTO realmTO) {\n+                this.wizardBuilder.setParentPath(realmTO.getFullPath());\n+                send(this, Broadcast.EXACT, new AjaxWizard.EditItemActionEvent<RealmTO>(realmTO, target) {\n \n-                modal.addSubmitButton();\n-                modal.show(true);\n+                    @Override\n+                    public String getEventDescription() {\n+                        return \"realm.edit\";\n+                    }\n+                });\n             }\n \n             @Override\n@@ -242,7 +246,7 @@ protected void onClickDelete(final AjaxRequestTarget target, final RealmTO realm\n                     // Escape line breaks\n                     SyncopeConsoleSession.get().error(e.getMessage().replace(\"\\n\", \" \"));\n                 }\n-                ((BasePage) getPage()).getNotificationPanel().refresh(target);\n+                ((BasePage) Realms.this.getPage()).getNotificationPanel().refresh(target);\n             }\n         });\n         return content;"},{"sha":"59af452c82edb49d8475642d5484cd35867b8356","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/DirectoryPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FDirectoryPanel.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -292,7 +292,7 @@ public void onEvent(final IEvent<?> event) {\n     }\n \n     @Override\n-    protected void customActionOnCloseCallback(final AjaxRequestTarget target) {\n+    protected void customActionOnFinishCallback(final AjaxRequestTarget target) {\n         final EventDataWrapper data = new EventDataWrapper();\n         data.setTarget(target);\n         data.setRows(rows);"},{"sha":"94ed49248c483469ff04692f132effbaffa2426d","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/ListViewPanel.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -370,8 +370,24 @@ protected Component getValueComponent(final String key, final T bean) {\n                 protected T getActualItem(final T item, final List<T> list) {\n                     return Builder.this.getActualItem(item, list);\n                 }\n+\n+                @Override\n+                protected void customActionOnFinishCallback(final AjaxRequestTarget target) {\n+                    Builder.this.customActionOnFinishCallback(target);\n+                }\n+\n+                @Override\n+                protected void customActionOnCancelCallback(final AjaxRequestTarget target) {\n+                    Builder.this.customActionOnCancelCallback(target);\n+                }\n             };\n         }\n+\n+        protected void customActionOnCancelCallback(final AjaxRequestTarget target) {\n+        }\n+\n+        protected void customActionOnFinishCallback(final AjaxRequestTarget target) {\n+        }\n     }\n \n     @Override"},{"sha":"86aa1ad49e83b35928da8347a16aa4f4121fb5be","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/Realm.java","status":"modified","additions":123,"deletions":7,"changes":130,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -18,33 +18,50 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import de.agilecoders.wicket.core.markup.html.bootstrap.tabs.AjaxBootstrapTabbedPanel;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n+import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.MapUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.apache.commons.lang3.tuple.Triple;\n import org.apache.syncope.client.console.commons.AnyTypeComparator;\n+import org.apache.syncope.client.console.commons.ConnIdSpecialAttributeName;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.status.StatusUtils;\n import org.apache.syncope.client.console.layout.AnyObjectFormLayoutInfo;\n import org.apache.syncope.client.console.layout.FormLayoutInfoUtils;\n import org.apache.syncope.client.console.layout.GroupFormLayoutInfo;\n import org.apache.syncope.client.console.layout.UserFormLayoutInfo;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.client.console.wizards.any.ConnObjectPanel;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n+import org.apache.syncope.common.lib.to.ConnObjectTO;\n+import org.apache.syncope.common.lib.to.PropagationStatus;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.lib.types.PropagationTaskExecStatus;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n+import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.extensions.markup.html.tabs.AbstractTab;\n import org.apache.wicket.extensions.markup.html.tabs.ITab;\n+import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.Model;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public abstract class Realm extends Panel {\n+public abstract class Realm extends WizardMgtPanel<RealmTO> {\n \n     private static final long serialVersionUID = -1100228004207271270L;\n \n@@ -56,15 +73,26 @@ public abstract class Realm extends Panel {\n \n     private final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n \n+    protected final RealmWizardBuilder wizardBuilder;\n+\n     public Realm(final String id, final RealmTO realmTO, final PageReference pageRef, final int selectedIndex) {\n-        super(id);\n+        super(id, true);\n         this.realmTO = realmTO;\n         this.anyTypeTOs = anyTypeRestClient.list();\n \n-        AjaxBootstrapTabbedPanel<ITab> tabbedPanel =\n-                new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageRef));\n+        setPageRef(pageRef);\n+\n+        AjaxBootstrapTabbedPanel<ITab> tabbedPanel\n+                = new AjaxBootstrapTabbedPanel<>(\"tabbedPanel\", buildTabList(pageRef));\n         tabbedPanel.setSelectedTab(selectedIndex);\n-        add(tabbedPanel);\n+        addInnerObject(tabbedPanel);\n+        this.wizardBuilder = new RealmWizardBuilder(pageRef);\n+        addNewItemPanelBuilder(this.wizardBuilder, false);\n+\n+        setShowResultPage(true);\n+\n+        modal.size(Modal.Size.Large);\n+        setWindowClosedReloadCallback(modal);\n     }\n \n     public RealmTO getRealmTO() {\n@@ -126,8 +154,8 @@ public void onClick(final AjaxRequestTarget target, final RealmTO modelObject) {\n             }\n         });\n \n-        final Triple<UserFormLayoutInfo, GroupFormLayoutInfo, Map<String, AnyObjectFormLayoutInfo>> formLayoutInfo =\n-                FormLayoutInfoUtils.fetch(anyTypeTOs);\n+        final Triple<UserFormLayoutInfo, GroupFormLayoutInfo, Map<String, AnyObjectFormLayoutInfo>> formLayoutInfo\n+                = FormLayoutInfoUtils.fetch(anyTypeTOs);\n \n         Collections.sort(anyTypeTOs, new AnyTypeComparator());\n         for (final AnyTypeTO anyTypeTO : anyTypeTOs) {\n@@ -145,6 +173,78 @@ public Panel getPanel(final String panelId) {\n         return tabs;\n     }\n \n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    protected Panel customResultBody(final String panelId, final RealmTO item, final Serializable result) {\n+        if (!(result instanceof ProvisioningResult)) {\n+            throw new IllegalStateException(\"Unsupported result type\");\n+        }\n+\n+        final MultilevelPanel mlp = new MultilevelPanel(panelId);\n+        add(mlp);\n+\n+        final PropagationStatus syncope = new PropagationStatus();\n+        syncope.setStatus(PropagationTaskExecStatus.SUCCESS);\n+        syncope.setResource(Constants.SYNCOPE);\n+\n+        ArrayList<PropagationStatus> propagations = new ArrayList<>();\n+        propagations.add(syncope);\n+        propagations.addAll(((ProvisioningResult) result).getPropagationStatuses());\n+\n+        ListViewPanel.Builder<PropagationStatus> builder\n+                = new ListViewPanel.Builder<PropagationStatus>(PropagationStatus.class, pageRef) {\n+\n+            private static final long serialVersionUID = -6809736686861678498L;\n+\n+            @Override\n+            protected Component getValueComponent(final String key, final PropagationStatus bean) {\n+                if (\"afterObj\".equalsIgnoreCase(key)) {\n+                    ConnObjectTO afterObj = bean.getAfterObj();\n+                    String remoteId = afterObj == null\n+                            || MapUtils.isEmpty(afterObj.getPlainAttrMap())\n+                            || !afterObj.getPlainAttrMap().containsKey(ConnIdSpecialAttributeName.NAME)\n+                            || CollectionUtils.isEmpty(\n+                                    afterObj.getPlainAttrMap().get(ConnIdSpecialAttributeName.NAME).getValues())\n+                            ? StringUtils.EMPTY\n+                            : afterObj.getPlainAttrMap().get(ConnIdSpecialAttributeName.NAME).getValues().\n+                            iterator().next();\n+\n+                    return new Label(\"field\", remoteId);\n+                } else if (\"status\".equalsIgnoreCase(key)) {\n+                    return StatusUtils.getStatusImagePanel(\"field\", bean.getStatus());\n+                } else {\n+                    return super.getValueComponent(key, bean);\n+                }\n+            }\n+        };\n+\n+        builder.setItems(propagations);\n+\n+        builder.includes(\"resource\", \"afterObj\", \"status\");\n+        builder.withChecks(ListViewPanel.CheckAvailability.NONE);\n+        builder.setReuseItem(false);\n+\n+        builder.addAction(new ActionLink<PropagationStatus>() {\n+\n+            private static final long serialVersionUID = -3722207913631435501L;\n+\n+            @Override\n+            protected boolean statusCondition(final PropagationStatus bean) {\n+                return !Constants.SYNCOPE.equals(bean.getResource())\n+                        && (PropagationTaskExecStatus.CREATED == bean.getStatus()\n+                        || PropagationTaskExecStatus.SUCCESS == bean.getStatus());\n+            }\n+\n+            @Override\n+            public void onClick(final AjaxRequestTarget target, final PropagationStatus bean) {\n+                mlp.next(bean.getResource(), new RemoteRealmPanel(bean), target);\n+            }\n+        }, ActionLink.ActionType.VIEW, StandardEntitlement.RESOURCE_GET_CONNOBJECT);\n+\n+        mlp.setFirstLevel(builder.build(MultilevelPanel.FIRST_LEVEL_ID));\n+        return mlp;\n+    }\n+\n     protected abstract void onClickTemplate(final AjaxRequestTarget target);\n \n     protected abstract void onClickCreate(final AjaxRequestTarget target);\n@@ -153,4 +253,20 @@ public Panel getPanel(final String panelId) {\n \n     protected abstract void onClickDelete(final AjaxRequestTarget target, final RealmTO realmTO);\n \n+    public class RemoteRealmPanel extends RemoteObjectPanel {\n+\n+        private static final long serialVersionUID = 4303365227411467563L;\n+\n+        private final PropagationStatus bean;\n+\n+        public RemoteRealmPanel(final PropagationStatus bean) {\n+            this.bean = bean;\n+            add(new ConnObjectPanel(REMOTE_OBJECT_PANEL_ID, getConnObjectTO()));\n+        }\n+\n+        @Override\n+        protected final Pair<ConnObjectTO, ConnObjectTO> getConnObjectTO() {\n+            return Pair.of(bean.getBeforeObj(), bean.getAfterObj());\n+        }\n+    }\n }"},{"sha":"3d646dfae374996eeb8cbb15aa57a0171827bf69","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmDetails.java","status":"modified","additions":18,"deletions":2,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -22,16 +22,21 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import org.apache.commons.collections4.CollectionUtils;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.rest.PolicyRestClient;\n+import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.FieldPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.PolicyRenderer;\n+import org.apache.syncope.common.lib.EntityTOUtils;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.policy.AbstractPolicyTO;\n import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.PolicyType;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n@@ -110,15 +115,18 @@ public RealmDetails(\n         container.setRenderBodyOnly(unwrapped);\n         add(container);\n \n+        final WebMarkupContainer generics = new WebMarkupContainer(\"generics\");\n+        container.add(generics.setVisible(unwrapped));\n+\n         FieldPanel<String> name = new AjaxTextFieldPanel(\n                 \"name\", \"name\", new PropertyModel<String>(realmTO, \"name\"), false);\n         name.addRequiredLabel();\n-        container.add(name);\n+        generics.add(name);\n \n         FieldPanel<String> fullPath = new AjaxTextFieldPanel(\n                 \"fullPath\", \"fullPath\", new PropertyModel<String>(realmTO, \"fullPath\"), false);\n         fullPath.setEnabled(false);\n-        container.add(fullPath);\n+        generics.add(fullPath);\n \n         AjaxDropDownChoicePanel<String> accountPolicy = new AjaxDropDownChoicePanel<>(\n                 \"accountPolicy\",\n@@ -148,6 +156,14 @@ public RealmDetails(\n         actionsClassNames.setOutputMarkupId(true);\n         container.add(actionsClassNames);\n \n+        container.add(new AjaxPalettePanel.Builder<String>().build(\"resources\",\n+                new PropertyModel<List<String>>(realmTO, \"resources\"),\n+                new ListModel<>(CollectionUtils.collect(new ResourceRestClient().list(),\n+                        EntityTOUtils.<ResourceTO>keyTransformer(), new ArrayList<String>()))).\n+                setOutputMarkupId(true).\n+                setEnabled(!SyncopeConstants.ROOT_REALM.equals(realmTO.getName())).\n+                setVisible(!SyncopeConstants.ROOT_REALM.equals(realmTO.getName())));\n+\n         if (actions == null) {\n             add(new Fragment(\"actions\", \"emptyFragment\", this).setRenderBodyOnly(true));\n         } else {"},{"sha":"a4bdd5572b5f0b26e65b759e4bb656ad967479ff","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmModalPanel.java","status":"removed","additions":0,"deletions":94,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9042203d7f2c976596d271c73cf9765f17a498a0/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9042203d7f2c976596d271c73cf9765f17a498a0/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmModalPanel.java?ref=9042203d7f2c976596d271c73cf9765f17a498a0","patch":"@@ -1,94 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.client.console.panels;\n-\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.client.console.SyncopeConsoleSession;\n-import org.apache.syncope.client.console.commons.Constants;\n-import org.apache.syncope.client.console.pages.BasePage;\n-import org.apache.syncope.client.console.rest.RealmRestClient;\n-import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.common.lib.to.RealmTO;\n-import org.apache.wicket.PageReference;\n-import org.apache.wicket.ajax.AjaxRequestTarget;\n-import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n-import org.apache.wicket.behavior.AttributeAppender;\n-import org.apache.wicket.markup.html.form.Form;\n-\n-public class RealmModalPanel extends AbstractModalPanel<RealmTO> {\n-\n-    private static final long serialVersionUID = -4285220460543213901L;\n-\n-    private final RealmRestClient realmRestClient = new RealmRestClient();\n-\n-    private boolean newRealm = false;\n-\n-    private final String parentPath;\n-\n-    public RealmModalPanel(\n-            final BaseModal<RealmTO> modal,\n-            final PageReference pageRef,\n-            final RealmTO realmTO,\n-            final String parentPath,\n-            final String entitlement) {\n-\n-        this(modal, pageRef, realmTO, parentPath, entitlement, false);\n-    }\n-\n-    public RealmModalPanel(\n-            final BaseModal<RealmTO> modal,\n-            final PageReference pageRef,\n-            final RealmTO realmTO,\n-            final String parentPath,\n-            final String entitlement,\n-            final boolean newRealm) {\n-\n-        super(modal, pageRef);\n-\n-        this.newRealm = newRealm;\n-        this.parentPath = parentPath;\n-\n-        RealmDetails realmDetail = new RealmDetails(\"details\", realmTO);\n-        realmDetail.add(new AttributeAppender(\"style\", \"overflow-x:hidden;\"));\n-        if (SyncopeConsoleSession.get().owns(entitlement)) {\n-            MetaDataRoleAuthorizationStrategy.authorize(realmDetail, ENABLE, entitlement);\n-        }\n-\n-        add(realmDetail);\n-    }\n-\n-    @Override\n-    public void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-        try {\n-            final RealmTO updatedRealmTO = RealmTO.class.cast(form.getModelObject());\n-            if (newRealm) {\n-                realmRestClient.create(this.parentPath, updatedRealmTO);\n-            } else {\n-                realmRestClient.update(updatedRealmTO);\n-            }\n-            modal.close(target);\n-            SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-        } catch (Exception e) {\n-            LOG.error(\"While creating or updating realm\", e);\n-            SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage()) ? e.getClass().getName() : e.\n-                    getMessage());\n-        }\n-        ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n-    }\n-}"},{"sha":"f491f2bcc4199f1a3cd3843f9a29661f92007607","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RealmWizardBuilder.java","status":"added","additions":80,"deletions":0,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmWizardBuilder.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import java.io.Serializable;\n+import org.apache.syncope.client.console.rest.RealmRestClient;\n+import org.apache.syncope.client.console.wizards.AjaxWizardBuilder;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n+import org.apache.syncope.common.lib.to.RealmTO;\n+import org.apache.wicket.PageReference;\n+import org.apache.wicket.behavior.AttributeAppender;\n+import org.apache.wicket.extensions.wizard.WizardModel;\n+import org.apache.wicket.extensions.wizard.WizardStep;\n+\n+public class RealmWizardBuilder extends AjaxWizardBuilder<RealmTO> {\n+\n+    private static final long serialVersionUID = 5945391813567245081L;\n+\n+    private final RealmRestClient realmRestClient = new RealmRestClient();\n+\n+    private String parentPath;\n+\n+    /**\n+     * Construct.\n+     *\n+     * @param pageRef Caller page reference.\n+     */\n+    public RealmWizardBuilder(final PageReference pageRef) {\n+        super(new RealmTO(), pageRef);\n+    }\n+\n+    @Override\n+    protected Serializable onApplyInternal(final RealmTO modelObject) {\n+        final ProvisioningResult<RealmTO> res;\n+        if (modelObject.getKey() == null) {\n+            res = realmRestClient.create(this.parentPath, modelObject);\n+        } else {\n+            res = realmRestClient.update(modelObject);\n+        }\n+        return res;\n+    }\n+\n+    @Override\n+    protected WizardModel buildModelSteps(final RealmTO modelObject, final WizardModel wizardModel) {\n+        wizardModel.add(new Realm(modelObject));\n+        return wizardModel;\n+    }\n+\n+    public static class Realm extends WizardStep {\n+\n+        private static final long serialVersionUID = -2123790676338327104L;\n+\n+        public Realm(final RealmTO modelObject) {\n+            RealmDetails realmDetail = new RealmDetails(\"details\", modelObject);\n+            realmDetail.add(new AttributeAppender(\"style\", \"overflow-x:hidden;\"));\n+            add(realmDetail);\n+        }\n+\n+    }\n+\n+    public void setParentPath(final String parentPath) {\n+        this.parentPath = parentPath;\n+    }\n+}"},{"sha":"5a6ab4eac5c42eb3b3746c70b4c9fefb0d263adf","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/RemoteObjectPanel.java","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRemoteObjectPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRemoteObjectPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRemoteObjectPanel.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.panels;\n+\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.panels.MultilevelPanel.SecondLevel;\n+import org.apache.syncope.common.lib.to.ConnObjectTO;\n+\n+public abstract class RemoteObjectPanel extends SecondLevel {\n+\n+    private static final long serialVersionUID = 4303365227411467563L;\n+\n+    protected static final String REMOTE_OBJECT_PANEL_ID = \"remoteObject\";\n+\n+    protected abstract Pair<ConnObjectTO, ConnObjectTO> getConnObjectTO();\n+}"},{"sha":"ea49fb8705a1fd17e8467de18ae186fafcc78acd","filename":"client/console/src/main/java/org/apache/syncope/client/console/policies/PolicyRuleDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpolicies%2FPolicyRuleDirectoryPanel.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -172,7 +172,7 @@ public boolean evaluate(final RuleConf object) {\n                                     });\n                                     restClient.updatePolicy(actual);\n                                     SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    customActionOnCloseCallback(target);\n+                                    customActionOnFinishCallback(target);\n                                 } catch (SyncopeClientException e) {\n                                     LOG.error(\"While deleting {}\", rule.getName(), e);\n                                     SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n@@ -196,7 +196,7 @@ public ActionLinksPanel<PolicyRuleWrapper> getHeader(final String componentId) {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final PolicyRuleWrapper ignore) {\n                         if (target != null) {\n-                            customActionOnCloseCallback(target);\n+                            customActionOnFinishCallback(target);\n                         }\n                     }\n                 }, ActionLink.ActionType.RELOAD, StandardEntitlement.TASK_LIST).build(componentId);"},{"sha":"f80e3b555374ca23c8ab27fc45e65e4e16e83ead","filename":"client/console/src/main/java/org/apache/syncope/client/console/reports/ReportletDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Freports%2FReportletDirectoryPanel.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -175,7 +175,7 @@ public boolean evaluate(final ReportletConf object) {\n                                     });\n                                     restClient.update(actual);\n                                     SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n-                                    customActionOnCloseCallback(target);\n+                                    customActionOnFinishCallback(target);\n                                 } catch (SyncopeClientException e) {\n                                     LOG.error(\"While deleting {}\", reportlet.getName(), e);\n                                     SyncopeConsoleSession.get().error(StringUtils.isBlank(e.getMessage())\n@@ -199,7 +199,7 @@ public ActionLinksPanel<ReportletWrapper> getHeader(final String componentId) {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target, final ReportletWrapper ignore) {\n                         if (target != null) {\n-                            customActionOnCloseCallback(target);\n+                            customActionOnFinishCallback(target);\n                         }\n                     }\n                 }, ActionLink.ActionType.RELOAD, StandardEntitlement.TASK_LIST).build(componentId);"},{"sha":"7ffb5e63d2ff9e8872aec816838ebb11667e217c","filename":"client/console/src/main/java/org/apache/syncope/client/console/rest/RealmRestClient.java","status":"modified","additions":11,"deletions":4,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FRealmRestClient.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -19,6 +19,9 @@\n package org.apache.syncope.client.console.rest;\n \n import java.util.List;\n+import javax.ws.rs.core.GenericType;\n+import javax.ws.rs.core.Response;\n+import org.apache.syncope.common.lib.to.ProvisioningResult;\n import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.rest.api.service.RealmService;\n \n@@ -33,12 +36,16 @@ public List<RealmTO> list() {\n         return getService(RealmService.class).list();\n     }\n \n-    public void create(final String parentPath, final RealmTO realmTO) {\n-        getService(RealmService.class).create(parentPath, realmTO);\n+    public ProvisioningResult<RealmTO> create(final String parentPath, final RealmTO realmTO) {\n+        final Response response = getService(RealmService.class).create(parentPath, realmTO);\n+        return response.readEntity(new GenericType<ProvisioningResult<RealmTO>>() {\n+        });\n     }\n \n-    public void update(final RealmTO realmTO) {\n-        getService(RealmService.class).update(realmTO);\n+    public ProvisioningResult<RealmTO> update(final RealmTO realmTO) {\n+        final Response response = getService(RealmService.class).update(realmTO);\n+        return response.readEntity(new GenericType<ProvisioningResult<RealmTO>>() {\n+        });\n     }\n \n     public void delete(final String fullPath) {"},{"sha":"157d151c48ec87845acce8598dc67593be5e73ea","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/WizardMgtPanel.java","status":"modified","additions":13,"deletions":4,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2FWizardMgtPanel.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -211,6 +211,7 @@ public void onEvent(final IEvent<?> event) {\n                 } else {\n                     container.addOrReplace(initialFragment);\n                 }\n+                customActionOnCancelCallback(target);\n             } else if (event.getPayload() instanceof AjaxWizard.NewItemFinishEvent) {\n                 SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n                 ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n@@ -238,7 +239,7 @@ protected Panel customResultBody(final String id, final T item, final Serializab\n                 } else {\n                     container.addOrReplace(initialFragment);\n                 }\n-                customActionOnCloseCallback(target);\n+                customActionOnFinishCallback(target);\n             }\n \n             if (containerAutoRefresh) {\n@@ -337,7 +338,7 @@ public WizardMgtPanel<T> setFooterVisibility(final boolean footerVisibility) {\n      *\n      * @param modal target modal.\n      */\n-    protected final void setWindowClosedReloadCallback(final BaseModal<?> modal) {\n+    protected void setWindowClosedReloadCallback(final BaseModal<?> modal) {\n         modal.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n \n             private static final long serialVersionUID = 8804221891699487139L;\n@@ -350,11 +351,19 @@ public void onClose(final AjaxRequestTarget target) {\n     }\n \n     /**\n-     * Custom action to perform on close callback.\n+     * Custom action to perform on close callback on finish event.\n      *\n      * @param target Ajax request target.\n      */\n-    protected void customActionOnCloseCallback(final AjaxRequestTarget target) {\n+    protected void customActionOnFinishCallback(final AjaxRequestTarget target) {\n+    }\n+\n+    /**\n+     * Custom action to perform on close callback on cancel event.\n+     *\n+     * @param target Ajax request target.\n+     */\n+    protected void customActionOnCancelCallback(final AjaxRequestTarget target) {\n     }\n \n     /**"},{"sha":"329fff9dd6251bdb39a48a5333b1a386e777dc3b","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/ConnObjectPanel.java","status":"modified","additions":60,"deletions":51,"changes":111,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -20,10 +20,11 @@\n \n import java.util.ArrayList;\n import java.util.Collections;\n-import java.util.Comparator;\n import java.util.List;\n import java.util.Map;\n import org.apache.commons.collections4.CollectionUtils;\n+import org.apache.commons.collections4.ListUtils;\n+import org.apache.commons.collections4.Transformer;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.client.console.commons.ConnIdSpecialAttributeName;\n import org.apache.syncope.common.lib.to.AttrTO;\n@@ -49,78 +50,86 @@ public class ConnObjectPanel extends Panel {\n     public ConnObjectPanel(final String id, final Pair<ConnObjectTO, ConnObjectTO> connObjectTOs) {\n         super(id);\n \n-        final IModel<List<AttrTO>> formProps = new LoadableDetachableModel<List<AttrTO>>() {\n+        final IModel<List<String>> formProps = new LoadableDetachableModel<List<String>>() {\n \n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n-            protected List<AttrTO> load() {\n-                List<AttrTO> attrs = new ArrayList<>(connObjectTOs == null || connObjectTOs.getRight() == null\n+            protected List<String> load() {\n+                List<AttrTO> right = new ArrayList<>(connObjectTOs == null || connObjectTOs.getRight() == null\n                         ? Collections.<AttrTO>emptyList()\n                         : connObjectTOs.getRight().getAttrs());\n \n-                Collections.sort(attrs, new Comparator<AttrTO>() {\n+                List<AttrTO> left = new ArrayList<>(connObjectTOs == null || connObjectTOs.getLeft() == null\n+                        ? Collections.<AttrTO>emptyList()\n+                        : connObjectTOs.getLeft().getAttrs());\n \n-                    @Override\n-                    public int compare(final AttrTO attr1, final AttrTO attr2) {\n-                        if (attr1 == null || attr1.getSchema() == null) {\n-                            return -1;\n-                        }\n-                        if (attr2 == null || attr2.getSchema() == null) {\n-                            return 1;\n-                        }\n-                        return attr1.getSchema().compareTo(attr2.getSchema());\n-                    }\n-                });\n+                final List<String> schemas = ListUtils.sum(\n+                        CollectionUtils.collect(right, new Transformer<AttrTO, String>() {\n+\n+                            @Override\n+                            public String transform(final AttrTO input) {\n+                                return input.getSchema();\n+                            }\n+                        }, new ArrayList<String>()),\n+                        CollectionUtils.collect(left, new Transformer<AttrTO, String>() {\n+\n+                            @Override\n+                            public String transform(final AttrTO input) {\n+                                return input.getSchema();\n+                            }\n+                        }, new ArrayList<String>()));\n+\n+                Collections.sort(schemas);\n \n-                return attrs;\n+                return schemas;\n             }\n         };\n \n         final Map<String, AttrTO> beforeProfile = connObjectTOs == null || connObjectTOs.getLeft() == null\n                 ? null\n                 : connObjectTOs.getLeft().getPlainAttrMap();\n \n-        final ListView<AttrTO> propView = new ListView<AttrTO>(\"propView\", formProps) {\n+        final Map<String, AttrTO> afterProfile = connObjectTOs == null || connObjectTOs.getRight() == null\n+                ? null\n+                : connObjectTOs.getRight().getPlainAttrMap();\n+\n+        final ListView<String> propView = new ListView<String>(\"propView\", formProps) {\n \n             private static final long serialVersionUID = 3109256773218160485L;\n \n             @Override\n-            protected void populateItem(final ListItem<AttrTO> item) {\n-                final AttrTO prop = item.getModelObject();\n+            protected void populateItem(final ListItem<String> item) {\n+                final String prop = item.getModelObject();\n \n                 final Fragment valueFragment;\n-                if (beforeProfile == null) {\n-                    valueFragment = new Fragment(\"value\", \"singleValue\", ConnObjectPanel.this);\n-                    valueFragment.add(getValuePanel(\"attribute\", prop.getSchema(), prop));\n-                } else {\n-                    final AttrTO before = beforeProfile.get(prop.getSchema());\n-\n-                    valueFragment = new Fragment(\"value\", \"doubleValue\", ConnObjectPanel.this);\n-                    valueFragment.add(getValuePanel(\"oldAttribute\", prop.getSchema(), before));\n-                    valueFragment.add(getValuePanel(\"newAttribute\", prop.getSchema(), prop));\n-\n-                    if (before == null\n-                            || (CollectionUtils.isNotEmpty(prop.getValues())\n-                            && CollectionUtils.isEmpty(before.getValues()))\n-                            || (CollectionUtils.isEmpty(prop.getValues())\n-                            && CollectionUtils.isNotEmpty(before.getValues()))\n-                            || (CollectionUtils.isNotEmpty(prop.getValues())\n-                            && CollectionUtils.isNotEmpty(before.getValues())\n-                            && prop.getValues().size() != before.getValues().size())\n-                            || (CollectionUtils.isNotEmpty(prop.getValues())\n-                            && CollectionUtils.isNotEmpty(before.getValues())\n-                            && !prop.getValues().equals(before.getValues()))) {\n-                        valueFragment.add(new Behavior() {\n-\n-                            private static final long serialVersionUID = 3109256773218160485L;\n-\n-                            @Override\n-                            public void onComponentTag(final Component component, final ComponentTag tag) {\n-                                tag.put(\"class\", \"highlight\");\n-                            }\n-                        });\n-                    }\n+                final AttrTO before = beforeProfile == null ? null : beforeProfile.get(prop);\n+                final AttrTO after = afterProfile == null ? null : afterProfile.get(prop);\n+\n+                valueFragment = new Fragment(\"value\", \"doubleValue\", ConnObjectPanel.this);\n+                valueFragment.add(getValuePanel(\"oldAttribute\", prop, before));\n+                valueFragment.add(getValuePanel(\"newAttribute\", prop, after));\n+\n+                if (before == null || after == null\n+                        || (CollectionUtils.isNotEmpty(after.getValues())\n+                        && CollectionUtils.isEmpty(before.getValues()))\n+                        || (CollectionUtils.isEmpty(after.getValues())\n+                        && CollectionUtils.isNotEmpty(before.getValues()))\n+                        || (CollectionUtils.isNotEmpty(after.getValues())\n+                        && CollectionUtils.isNotEmpty(before.getValues())\n+                        && after.getValues().size() != before.getValues().size())\n+                        || (CollectionUtils.isNotEmpty(after.getValues())\n+                        && CollectionUtils.isNotEmpty(before.getValues())\n+                        && !after.getValues().equals(before.getValues()))) {\n+                    valueFragment.add(new Behavior() {\n+\n+                        private static final long serialVersionUID = 3109256773218160485L;\n+\n+                        @Override\n+                        public void onComponentTag(final Component component, final ComponentTag tag) {\n+                            tag.put(\"class\", \"highlight\");\n+                        }\n+                    });\n                 }\n                 item.add(valueFragment);\n             }"},{"sha":"79ec17508155eb5387c606bbd6bb9056183d7b18","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/StatusPanel.java","status":"modified","additions":22,"deletions":10,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FStatusPanel.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -24,14 +24,15 @@\n import java.util.Map;\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.commons.SerializableTransformer;\n import org.apache.syncope.client.console.commons.status.ConnObjectWrapper;\n import org.apache.syncope.client.console.commons.status.Status;\n import org.apache.syncope.client.console.commons.status.StatusBean;\n import org.apache.syncope.client.console.commons.status.StatusUtils;\n import org.apache.syncope.client.console.panels.ListViewPanel;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n-import org.apache.syncope.client.console.panels.MultilevelPanel.SecondLevel;\n+import org.apache.syncope.client.console.panels.RemoteObjectPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n@@ -99,7 +100,7 @@ private void init(\n         final List<StatusBean> statusBeans = new ArrayList<>(connObjects.size() + 1);\n         initialStatusBeanMap = new LinkedHashMap<>(connObjects.size() + 1);\n \n-        final StatusBean syncope = new StatusBean(any, \"syncope\");\n+        final StatusBean syncope = new StatusBean(any, Constants.SYNCOPE);\n \n         if (any instanceof UserTO) {\n             syncope.setConnObjectLink(((UserTO) any).getUsername());\n@@ -169,7 +170,7 @@ protected boolean statusCondition(final StatusBean bean) {\n \n             @Override\n             public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n-                mlp.next(bean.getResourceName(), new RemoteObjectPanel(bean, connObjects), target);\n+                mlp.next(bean.getResourceName(), new RemoteAnyPanel(bean, connObjects), target);\n             }\n         }, ActionLink.ActionType.VIEW, StandardEntitlement.RESOURCE_GET_CONNOBJECT);\n \n@@ -185,8 +186,9 @@ public Map<String, StatusBean> getInitialStatusBeanMap() {\n         return initialStatusBeanMap;\n     }\n \n-    private Pair<ConnObjectTO, ConnObjectTO> getConnObjectTO(\n-            final String anyKey, final String resourceName, final List<Pair<ConnObjectTO, ConnObjectWrapper>> objects) {\n+    protected Pair<ConnObjectTO, ConnObjectTO> getConnObjectTO(\n+            final String anyKey, final String resourceName,\n+            final List<Pair<ConnObjectTO, ConnObjectWrapper>> objects) {\n \n         for (Pair<ConnObjectTO, ConnObjectWrapper> object : objects) {\n             if (anyKey.equals(object.getRight().getAny().getKey())\n@@ -199,14 +201,24 @@ private Pair<ConnObjectTO, ConnObjectTO> getConnObjectTO(\n         return null;\n     }\n \n-    public class RemoteObjectPanel extends SecondLevel {\n+    public class RemoteAnyPanel extends RemoteObjectPanel {\n \n         private static final long serialVersionUID = 4303365227411467563L;\n \n-        public RemoteObjectPanel(final StatusBean bean, final List<Pair<ConnObjectTO, ConnObjectWrapper>> connObjects) {\n-            final Pair<ConnObjectTO, ConnObjectTO> res = getConnObjectTO(bean.getAnyKey(), bean.getResourceName(),\n-                    connObjects);\n-            add(new ConnObjectPanel(\"remoteObject\", res == null ? null : res));\n+        private final StatusBean bean;\n+\n+        private final List<Pair<ConnObjectTO, ConnObjectWrapper>> connObjects;\n+\n+        public RemoteAnyPanel(final StatusBean bean, final List<Pair<ConnObjectTO, ConnObjectWrapper>> connObjects) {\n+            this.bean = bean;\n+            this.connObjects = connObjects;\n+\n+            add(new ConnObjectPanel(REMOTE_OBJECT_PANEL_ID, getConnObjectTO()));\n+        }\n+\n+        @Override\n+        protected final Pair<ConnObjectTO, ConnObjectTO> getConnObjectTO() {\n+            return StatusPanel.this.getConnObjectTO(bean.getAnyKey(), bean.getResourceName(), connObjects);\n         }\n     }\n }"},{"sha":"158b170ca2bd9851edd5826b80fec5cb1e504967","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceMappingPanel.java","status":"modified","additions":4,"deletions":32,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceMappingPanel.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -33,14 +33,11 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n-import org.apache.commons.collections4.IterableUtils;\n-import org.apache.commons.collections4.Predicate;\n import org.apache.commons.lang3.ClassUtils;\n import org.apache.syncope.client.console.commons.ConnIdSpecialAttributeName;\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.rest.AnyTypeClassRestClient;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n-import org.apache.syncope.client.console.rest.ConnectorRestClient;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n@@ -52,16 +49,13 @@\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTypeClassTO;\n import org.apache.syncope.common.lib.to.AnyTypeTO;\n-import org.apache.syncope.common.lib.to.ConnIdObjectClassTO;\n-import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.MappingItemTO;\n import org.apache.syncope.common.lib.to.MappingTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n-import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -121,11 +115,6 @@ private static void initFieldNames(final Class<?> entityClass, final Set<String>\n      */\n     private final AnyTypeClassRestClient anyTypeClassRestClient = new AnyTypeClassRestClient();\n \n-    /**\n-     * ConnInstance rest client.\n-     */\n-    private final ConnectorRestClient connRestClient = new ConnectorRestClient();\n-\n     private final Label passwordLabel;\n \n     /**\n@@ -284,7 +273,10 @@ protected void populateItem(final ListItem<MappingItemTO> item) {\n                         \"extAttrName\",\n                         getString(\"extAttrName\"),\n                         new PropertyModel<String>(mapItem, \"extAttrName\"));\n-                extAttrName.setChoices(getExtAttrNames(resourceTO.getConnector(), resourceTO.getConfOverride()));\n+                extAttrName.setChoices(ResourceProvisionPanel.getExtAttrNames(\n+                        ResourceMappingPanel.this.provisionTO.getObjectClass(),\n+                        resourceTO.getConnector(),\n+                        resourceTO.getConfOverride()));\n \n                 boolean required = !mapItem.isPassword();\n                 extAttrName.setRequired(required).hideLabel();\n@@ -463,26 +455,6 @@ protected void onBeforeRender() {\n         passwordLabel.setVisible(AnyTypeKind.USER.name().equals(this.provisionTO.getAnyType()));\n     }\n \n-    private List<String> getExtAttrNames(final String connectorKey, final Set<ConnConfProperty> conf) {\n-        ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n-        connInstanceTO.setKey(connectorKey);\n-        connInstanceTO.getConf().addAll(conf);\n-\n-        // SYNCOPE-156: use provided info to give schema names (and type!) by ObjectClass\n-        ConnIdObjectClassTO connIdObjectClass = IterableUtils.find(\n-                connRestClient.buildObjectClassInfo(connInstanceTO, false), new Predicate<ConnIdObjectClassTO>() {\n-\n-            @Override\n-            public boolean evaluate(final ConnIdObjectClassTO object) {\n-                return object.getType().equalsIgnoreCase(ResourceMappingPanel.this.provisionTO.getObjectClass());\n-            }\n-        });\n-\n-        return connIdObjectClass == null\n-                ? new ArrayList<String>()\n-                : connIdObjectClass.getAttributes();\n-    }\n-\n     /**\n      * Set attribute names for a drop down choice list.\n      *"},{"sha":"e7debac769e9e5fe6683496bb2ba2ed6fa65d442","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel.java","status":"modified","additions":142,"deletions":0,"changes":142,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -22,6 +22,7 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n+import java.util.Set;\n import org.apache.commons.collections4.IterableUtils;\n import org.apache.commons.collections4.IteratorUtils;\n import org.apache.commons.collections4.Predicate;\n@@ -33,21 +34,33 @@\n import org.apache.syncope.client.console.panels.AbstractModalPanel;\n import org.apache.syncope.client.console.panels.ListViewPanel;\n import org.apache.syncope.client.console.panels.ListViewPanel.ListViewReload;\n+import org.apache.syncope.client.console.rest.ConnectorRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n+import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n+import org.apache.syncope.client.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.syncope.client.console.wizards.AjaxWizard;\n import org.apache.syncope.client.console.wizards.WizardMgtPanel;\n+import org.apache.syncope.common.lib.to.ConnIdObjectClassTO;\n+import org.apache.syncope.common.lib.to.ConnInstanceTO;\n import org.apache.syncope.common.lib.to.MappingItemTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n+import org.apache.syncope.common.lib.to.OrgUnitTO;\n+import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.Broadcast;\n+import org.apache.wicket.event.IEvent;\n+import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.model.Model;\n+import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n public class ResourceProvisionPanel extends AbstractModalPanel<Serializable> {\n@@ -56,15 +69,101 @@ public class ResourceProvisionPanel extends AbstractModalPanel<Serializable> {\n \n     private final ResourceTO resourceTO;\n \n+    private Model<OrgUnitTO> baseModel;\n+\n+    private final WebMarkupContainer aboutRealmProvison;\n+\n     public ResourceProvisionPanel(\n             final BaseModal<Serializable> modal,\n             final ResourceTO resourceTO,\n             final PageReference pageRef) {\n         super(modal, pageRef);\n         this.resourceTO = resourceTO;\n \n+        baseModel = Model.of(resourceTO.getOrgUnit() == null ? new OrgUnitTO() : resourceTO.getOrgUnit());\n+\n         setOutputMarkupId(true);\n \n+        // ----------------------------------------------------------------------\n+        // Realms provisioning\n+        // ----------------------------------------------------------------------\n+        aboutRealmProvison = new WebMarkupContainer(\"aboutRealmProvison\");\n+        aboutRealmProvison.setOutputMarkupPlaceholderTag(true);\n+        add(aboutRealmProvison);\n+\n+        boolean realmProvisionEnabled = resourceTO.getOrgUnit() != null;\n+\n+        final AjaxCheckBoxPanel enableRealmsProvision = new AjaxCheckBoxPanel(\n+                \"enableRealmsProvision\",\n+                \"enableRealmsProvision\",\n+                Model.of(realmProvisionEnabled),\n+                false);\n+        aboutRealmProvison.add(enableRealmsProvision);\n+\n+        final WebMarkupContainer realmsProvisionContainer = new WebMarkupContainer(\"realmsProvisionContainer\");\n+        realmsProvisionContainer.setOutputMarkupPlaceholderTag(true);\n+        realmsProvisionContainer.setEnabled(realmProvisionEnabled).setVisible(realmProvisionEnabled);\n+        aboutRealmProvison.add(realmsProvisionContainer);\n+\n+        final AjaxTextFieldPanel objectClass = new AjaxTextFieldPanel(\n+                \"objectClass\",\n+                getString(\"objectClass\"),\n+                new PropertyModel<String>(baseModel.getObject(), \"objectClass\"),\n+                false);\n+        realmsProvisionContainer.add(objectClass.addRequiredLabel());\n+\n+        final AjaxTextFieldPanel extAttrName = new AjaxTextFieldPanel(\n+                \"extAttrName\",\n+                getString(\"extAttrName\"),\n+                new PropertyModel<String>(baseModel.getObject(), \"extAttrName\"),\n+                false);\n+        extAttrName.setChoices(ResourceProvisionPanel.getExtAttrNames(\n+                resourceTO.getOrgUnit() == null ? StringUtils.EMPTY : resourceTO.getOrgUnit().getObjectClass(),\n+                resourceTO.getConnector(),\n+                resourceTO.getConfOverride()));\n+        realmsProvisionContainer.add(extAttrName.addRequiredLabel());\n+\n+        objectClass.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_BLUR) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                extAttrName.setChoices(ResourceProvisionPanel.getExtAttrNames(\n+                        objectClass.getModelObject(),\n+                        resourceTO.getConnector(),\n+                        resourceTO.getConfOverride()));\n+                target.focusComponent(extAttrName);\n+            }\n+        });\n+\n+        final AjaxTextFieldPanel connObjectLink = new AjaxTextFieldPanel(\n+                \"connObjectLink\",\n+                new ResourceModel(\"connObjectLink\", \"connObjectLink\").getObject(),\n+                new PropertyModel<String>(baseModel.getObject(), \"connObjectLink\"),\n+                false);\n+        realmsProvisionContainer.add(connObjectLink.addRequiredLabel());\n+\n+        enableRealmsProvision.getField().add(new IndicatorAjaxFormComponentUpdatingBehavior(Constants.ON_CHANGE) {\n+\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                boolean realmProvisionEnabled = enableRealmsProvision.getModelObject();\n+                realmsProvisionContainer.setEnabled(realmProvisionEnabled).setVisible(realmProvisionEnabled);\n+                target.add(realmsProvisionContainer);\n+\n+                if (realmProvisionEnabled) {\n+                    resourceTO.setOrgUnit(baseModel.getObject());\n+                } else {\n+                    resourceTO.setOrgUnit(null);\n+                }\n+\n+            }\n+        });\n+        // ----------------------------------------------------------------------\n+\n         final ProvisionWizardBuilder wizard = new ProvisionWizardBuilder(resourceTO, pageRef);\n \n         final ListViewPanel.Builder<ProvisionTO> builder = new ListViewPanel.Builder<ProvisionTO>(\n@@ -87,6 +186,19 @@ public boolean evaluate(final ProvisionTO in) {\n                             }\n                         });\n             }\n+\n+            @Override\n+            protected void customActionOnCancelCallback(final AjaxRequestTarget target) {\n+                ResourceProvisionPanel.this.aboutRealmProvison.setVisible(true);\n+                target.add(ResourceProvisionPanel.this.aboutRealmProvison);\n+            }\n+\n+            @Override\n+            protected void customActionOnFinishCallback(final AjaxRequestTarget target) {\n+                ResourceProvisionPanel.this.aboutRealmProvison.setVisible(true);\n+                target.add(ResourceProvisionPanel.this.aboutRealmProvison);\n+            }\n+\n         };\n \n         builder.setItems(resourceTO.getProvisions());\n@@ -221,4 +333,34 @@ public boolean evaluate(final MappingItemTO item) {\n         }\n         ((BasePage) pageRef.getPage()).getNotificationPanel().refresh(target);\n     }\n+\n+    protected static List<String> getExtAttrNames(\n+            final String objectClass, final String connectorKey, final Set<ConnConfProperty> conf) {\n+        ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n+        connInstanceTO.setKey(connectorKey);\n+        connInstanceTO.getConf().addAll(conf);\n+\n+        // SYNCOPE-156: use provided info to give schema names (and type!) by ObjectClass\n+        ConnIdObjectClassTO connIdObjectClass = IterableUtils.find(new ConnectorRestClient().\n+                buildObjectClassInfo(connInstanceTO, false), new Predicate<ConnIdObjectClassTO>() {\n+\n+            @Override\n+            public boolean evaluate(final ConnIdObjectClassTO object) {\n+                return object.getType().equalsIgnoreCase(objectClass);\n+            }\n+        });\n+\n+        return connIdObjectClass == null ? new ArrayList<String>() : connIdObjectClass.getAttributes();\n+    }\n+\n+    @Override\n+    public void onEvent(final IEvent<?> event) {\n+\n+        if (event.getPayload() instanceof AjaxWizard.NewItemActionEvent) {\n+            aboutRealmProvison.setVisible(false);\n+            ((AjaxWizard.NewItemEvent) event.getPayload()).getTarget().add(aboutRealmProvison);\n+        }\n+\n+        super.onEvent(event);\n+    }\n }"},{"sha":"feecdbbc594e01076d22bd9e78fe47cb4209c67c","filename":"client/console/src/main/resources/META-INF/resources/css/syncopeConsole.css","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.css?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -150,7 +150,7 @@ div.wicket-modal div.w_content_3 {\n \n .tab-content {\n   margin-bottom: 10px;\n-  margin-top: 10px;\n+  margin-top: 5px;\n   position: relative;\n   overflow-x: hidden;\n   overflow-y: auto;"},{"sha":"a8eb7d558eaa2a685bf97e5abb1569416c7f1a8b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Realms.properties","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms.properties?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -14,6 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-newRealm=New Realm\n-editRealm=Edit Realm ${fullPath}\n+any.realm.new=New Realm\n+any.realm.edit=Edit Realm ${fullPath}\n inner.template.edit=Edit ${left} template for '${right.fullPath}' \n+afterObj=Object Link"},{"sha":"8e84750251a42d293e6cf40d9c3cf7b0dbcdbc8f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Realms_it.properties","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms_it.properties?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -14,6 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-newRealm=New Realm\n-editRealm=Edit Realm ${fullPath}\n+any.realm.new=New Realm\n+any.realm.edit=Edit Realm ${fullPath}\n inner.template.edit=Modifica ${left} template per '${right.fullPath}' \n+afterObj=Object Link"},{"sha":"a8eb7d558eaa2a685bf97e5abb1569416c7f1a8b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Realms_pt_BR.properties","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms_pt_BR.properties?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -14,6 +14,7 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-newRealm=New Realm\n-editRealm=Edit Realm ${fullPath}\n+any.realm.new=New Realm\n+any.realm.edit=Edit Realm ${fullPath}\n inner.template.edit=Edit ${left} template for '${right.fullPath}' \n+afterObj=Object Link"},{"sha":"bec91ef050e6529ec4e0a0599968f853946f7c4d","filename":"client/console/src/main/resources/org/apache/syncope/client/console/pages/Realms_ru.properties","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FRealms_ru.properties?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -16,7 +16,8 @@\n # under the License.\n #\n # newRealm=\\u00d0\\u00a1\\u00d0\\u00be\\u00d0\\u00b7\\u00d0\\u00b4\\u00d0\\u00b0\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00be\\u00d0\\u00b1\\u00d0\\u00bb\\u00d0\\u00b0\\u00d1\\u0081\\u00d1\\u0082\\u00d1\\u008c\n-newRealm=\\u0421\\u043e\\u0437\\u0434\\u0430\\u0442\\u044c \\u043e\\u0431\\u043b\\u0430\\u0441\\u0442\\u044c\n+any.realm.new=\\u0421\\u043e\\u0437\\u0434\\u0430\\u0442\\u044c \\u043e\\u0431\\u043b\\u0430\\u0441\\u0442\\u044c\n # editRealm=\\u00d0\\u0098\\u00d0\\u00b7\\u00d0\\u00bc\\u00d0\\u00b5\\u00d0\\u00bd\\u00d0\\u00b8\\u00d1\\u0082\\u00d1\\u008c \\u00d0\\u00be\\u00d0\\u00b1\\u00d0\\u00bb\\u00d0\\u00b0\\u00d1\\u0081\\u00d1\\u0082\\u00d1\\u008c ${fullPath}\n-editRealm=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c \\u043e\\u0431\\u043b\\u0430\\u0441\\u0442\\u044c ${fullPath}\n+any.realm.edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c \\u043e\\u0431\\u043b\\u0430\\u0441\\u0442\\u044c ${fullPath}\n inner.template.edit=Edit ${left} template for '${right.fullPath}' \n+afterObj=Object Link"},{"sha":"25a998f654a04b139a6260c5d0efb0c247f6c106","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/Realm.html","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealm.html?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -17,7 +17,7 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:panel>\n+  <wicket:extend>\n     <div wicket:id=\"tabbedPanel\"></div>\n-  </wicket:panel>\n+  </wicket:extend>\n </html>\n\\ No newline at end of file"},{"sha":"76c4b980d012e31441139cc1b7484a190f15cad6","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails.html","status":"modified","additions":17,"deletions":4,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.html?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -19,13 +19,26 @@\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n     <div wicket:id=\"container\" class=\"summarize\">\n-      <span wicket:id=\"name\">[name]</span>\n-      <span wicket:id=\"fullPath\">[fullPath]</span>\n-      <span wicket:id=\"accountPolicy\">[accountPolicy]</span>\n-      <span wicket:id=\"passwordPolicy\">[passwordPolicy]</span>\n+      <div wicket:id=\"generics\">\n+        <div class=\"form-group\">\n+          <span wicket:id=\"name\">[name]</span>\n+        </div>\n+        <div class=\"form-group\">\n+          <span wicket:id=\"fullPath\">[fullPath]</span>\n+        </div>\n+      </div>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"accountPolicy\">[accountPolicy]</span>\n+      </div>\n+      <div class=\"form-group\">\n+        <span wicket:id=\"passwordPolicy\">[passwordPolicy]</span>\n+      </div>\n       <div class=\"form-group form-palette\">\n         <span wicket:id=\"actionsClassNames\">[actionsClassNames]</span>\n       </div>\n+      <div class=\"form-group form-palette\">\n+        <span wicket:id=\"resources\">[resources]</span>\n+      </div>\n     </div>\n \n     <span wicket:id=\"actions\"></span>"},{"sha":"c4848a1332fef4e5f4b05f4488e7631d3098374a","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails.properties?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -18,3 +18,4 @@ fullPath=Path\n accountPolicy=Account Policy\n passwordPolicy=Password Policy\n actionsClassNames=Actions\n+resources=Assigned resources"},{"sha":"05d20c240c4360e147ba82ef491f61fd75a80b7b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_it.properties?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -18,3 +18,4 @@ fullPath=Percorso\n accountPolicy=Account Policy\n passwordPolicy=Password Policy\n actionsClassNames=Actions\n+resources=Risorse assegnate"},{"sha":"786313f19e0bbeada388d4881d62ddcd3ad3e916","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_pt_BR.properties?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -18,3 +18,4 @@ fullPath=Caminho\n accountPolicy=Pol\\u00edtica de Conta\n passwordPolicy=Pol\\u00edtica de Senha\n actionsClassNames=Actions\n+resources=Assigned resources"},{"sha":"27396c6bbaaf6f9563f53cf4d39f42c6cb6d2c3f","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmDetails_ru.properties","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmDetails_ru.properties?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -15,11 +15,12 @@\n # specific language governing permissions and limitations\n # under the License.\n #\n-# fullPath=Путь\n+# fullPath=\\u00d0\\u009f\\u00d1\\u0083\\u00d1\\u0082\\u00d1\\u008c\n fullPath=\\u041f\\u0443\\u0442\\u044c\n-# accountPolicy=Политика учетных записей\n+# accountPolicy=\\u00d0\\u009f\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00b8\\u00d1\\u0082\\u00d0\\u00b8\\u00d0\\u00ba\\u00d0\\u00b0 \\u00d1\\u0083\\u00d1\\u0087\\u00d0\\u00b5\\u00d1\\u0082\\u00d0\\u00bd\\u00d1\\u008b\\u00d1\\u0085 \\u00d0\\u00b7\\u00d0\\u00b0\\u00d0\\u00bf\\u00d0\\u00b8\\u00d1\\u0081\\u00d0\\u00b5\\u00d0\\u00b9\n accountPolicy=\\u041f\\u043e\\u043b\\u0438\\u0442\\u0438\\u043a\\u0430 \\u0443\\u0447\\u0435\\u0442\\u043d\\u044b\\u0445 \\u0437\\u0430\\u043f\\u0438\\u0441\\u0435\\u0439\n-# passwordPolicy=Политика паролей\n+# passwordPolicy=\\u00d0\\u009f\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00b8\\u00d1\\u0082\\u00d0\\u00b8\\u00d0\\u00ba\\u00d0\\u00b0 \\u00d0\\u00bf\\u00d0\\u00b0\\u00d1\\u0080\\u00d0\\u00be\\u00d0\\u00bb\\u00d0\\u00b5\\u00d0\\u00b9\n passwordPolicy=\\u041f\\u043e\\u043b\\u0438\\u0442\\u0438\\u043a\\u0430 \\u043f\\u0430\\u0440\\u043e\\u043b\\u0435\\u0439\n-# actionsClassNames=Действия\n+# actionsClassNames=\\u00d0\\u0094\\u00d0\\u00b5\\u00d0\\u00b9\\u00d1\\u0081\\u00d1\\u0082\\u00d0\\u00b2\\u00d0\\u00b8\\u00d1\\u008f\n actionsClassNames=\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044f\n+resources=Assigned resources"},{"sha":"2eef03222b3ec6192398ebac9dc80907a2f253cb","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmWizardBuilder$Realm.html","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmWizardBuilder%24Realm.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmWizardBuilder%24Realm.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRealmWizardBuilder%24Realm.html?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -17,7 +17,7 @@\n under the License.\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n-  <wicket:extend>\n+  <wicket:panel>\n     <div wicket:id=\"details\">[details]</div>\n-  </wicket:extend>\n+  </wicket:panel>\n </html>","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RealmModalPanel.html"},{"sha":"d0e51673d0c53f4080a5e856410f7cbdd3bbfc95","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/RemoteObjectPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRemoteObjectPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRemoteObjectPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRemoteObjectPanel.html?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","previous_filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/StatusPanel$RemoteObjectPanel.html"},{"sha":"d517cd1e6d6c4622a5e2d341dfb394022529be1b","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/any/ConnObjectPanel.html","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FConnObjectPanel.html?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -21,9 +21,6 @@\n     <div class=\"form-group\" wicket:id=\"propView\">\n       <span wicket:id=\"value\">[ATTIRIBUTE]</span>\n     </div>\n-    <wicket:fragment wicket:id=\"singleValue\">\n-      <span wicket:id=\"attribute\">[ATTIRIBUTE]</span>\n-    </wicket:fragment>\n     <wicket:fragment wicket:id=\"doubleValue\">\n       <div class=\"left attribute\">\n         <span wicket:id=\"oldAttribute\">[ATTIRIBUTE]</span>"},{"sha":"e4d06bf4627f1767e6bfd98cecfd9fa8dab1cfcf","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ProvisionWizardBuilder$ConnObjectLink.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ConnObjectLink.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ConnObjectLink.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ConnObjectLink.properties?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -15,6 +15,6 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-link.title=Connector object link (if required)\n+link.title=Object link (if required)\n link.summary=\n-connObjectLinkCheckbox=Use ConnObjectLink\n+connObjectLinkCheckbox=Use Object Link"},{"sha":"12d8393f79c7192ae872008e42f0543656ef5b5e","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ProvisionWizardBuilder$ConnObjectLink_it.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ConnObjectLink_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ConnObjectLink_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ConnObjectLink_it.properties?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -15,6 +15,6 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-link.title=Connector object link (se necessario)\n+link.title=Object link (se necessario)\n link.summary=\n-connObjectLinkCheckbox=Usa ConnObjectLink\n+connObjectLinkCheckbox=Usa Object Link"},{"sha":"8c68c6b1c81c4b8c04ee454d58649252fcac4730","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ProvisionWizardBuilder$ConnObjectLink_pt_BR.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ConnObjectLink_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ConnObjectLink_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FProvisionWizardBuilder%24ConnObjectLink_pt_BR.properties?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -15,6 +15,6 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-link.title=Connector object link (se necess\\u00e1rio)\n+link.title=Object link (se necess\\u00e1rio)\n link.summary=\n-connObjectLinkCheckbox=Usar ConnObjectLink\n+connObjectLinkCheckbox=Usar Object Link"},{"sha":"de5c92f0eec48ae3b02aa8c65f421171ae0fa8fa","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel.html","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.html?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -18,6 +18,14 @@\n -->\n <html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n+    <div wicket:id=\"aboutRealmProvison\" class=\"col-xs-12 panel-body\">\n+      <span wicket:id=\"enableRealmsProvision\"/>\n+      <div wicket:id=\"realmsProvisionContainer\">\n+        <span wicket:id=\"objectClass\"/>\n+        <span wicket:id=\"extAttrName\"/>\n+        <span wicket:id=\"connObjectLink\"/>\n+      </div>\n+    </div>\n     <span wicket:id=\"provision\">[PROVISION]</span>\n   </wicket:panel>\n </html>"},{"sha":"3c8218d79e19cafd2ad06834d86fd203fb4f61ec","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel.properties?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -37,7 +37,8 @@ fieldName=Field name\n \n connObjectKeyValidation=There must be exactly one AccountId\n propagationMode=Propagation mode\n-connObjectLink=Remote ID\n+connObjectLink=Object Link\n enable=Enable\n inner.provision.mapping=Change mapping for provision '${key}'\n inner.provision.clone=Clone provision '${key}'\n+enableRealmsProvision=Enable realm provisioning"},{"sha":"afaa5e52fc7c2343b974bb0fbf0b1738aafe86fc","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_it.properties?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -41,3 +41,4 @@ connObjectLink=ID Remoto\n enable=Abilita\n inner.provision.mapping=Cambia il mapping per il provision '${key}'\n inner.provision.clone=Clona il provision '${key}'\n+enableRealmsProvision=Abilita il provisioning dei realm"},{"sha":"ca569f5747780cf44da95dbb686623d50951771c","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_pt_BR.properties?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -41,3 +41,4 @@ connObjectLink=Remote ID\n enable=Habilitado\n inner.provision.mapping=Change mapping for provision '${key}'\n inner.provision.clone=Clone provision '${key}'\n+enableRealmsProvision=Enable realm provisioning"},{"sha":"b0bfaaba4ce647101ffdc2fc4b7e121b8fec0003","filename":"client/console/src/main/resources/org/apache/syncope/client/console/wizards/resources/ResourceProvisionPanel_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FResourceProvisionPanel_ru.properties?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -64,3 +64,4 @@ connObjectLink=\\u041a\\u0440\\u0438\\u0442\\u0435\\u0440\\u0438\\u0439 \\u0441\\u043e\\u04\n enable=\\u0412\\u043a\\u043b\\u044e\\u0447\\u0438\\u0442\\u044c\n inner.provision.mapping=Change mapping for provision '${key}'\n inner.provision.clone=Clone provision '${key}'\n+enableRealmsProvision=Enable realm provisioning"},{"sha":"6edb1e08e537bcf500988cc61ae121767b6db330","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/AnyObjectsITCase.java","status":"modified","additions":13,"deletions":10,"changes":23,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FAnyObjectsITCase.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -35,7 +35,7 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class AnyObjectsITCase extends AbstractConsoleITCase {\n \n-    private final String tabPanel = \"body:content:body:tabbedPanel:panel:searchResult:\";\n+    private final String tabPanel = \"body:content:body:container:content:tabbedPanel:panel:searchResult:\";\n \n     private final String searchResultContainer = tabPanel + \"container:content:\";\n \n@@ -47,22 +47,25 @@ public void login() {\n     @Test\n     public void filteredSearch() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n \n-        TESTER.clickLink(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n \n-        TESTER.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n-                + \"searchFormContainer:search:multiValueContainer:innerForm:content:panelPlus:add\", Constants.ON_CLICK);\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n+\n+        TESTER.executeAjaxEvent(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:\"\n+                + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:panelPlus:add\",\n+                Constants.ON_CLICK);\n \n         TESTER.assertComponent(\n-                \"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:searchFormContainer:search:\"\n-                + \"multiValueContainer:innerForm:content:view:0:panel:container:value:textField\", TextField.class);\n+                \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n+                + \"searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panel:container:value:\"\n+                + \"textField\", TextField.class);\n     }\n \n     @Test\n     public void clickToClonePrinter() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n \n         Component component = findComponentByProp(\"key\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n@@ -80,7 +83,7 @@ public void clickToClonePrinter() {\n     @Test\n     public void editPrinter() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n \n         Component component = findComponentByProp(\"key\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\",\n@@ -131,7 +134,7 @@ public void editPrinter() {\n     @Test\n     public void checkDeletePrinterLink() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n \n         Component component = findComponentByProp(\"key\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\","},{"sha":"7334bb4e015f4c58c066051640011fab5a896148","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/BulkActionITCase.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FBulkActionITCase.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -33,7 +33,7 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class BulkActionITCase extends AbstractConsoleITCase {\n \n-    private final String tabPanel = \"body:content:body:tabbedPanel:panel:searchResult:\";\n+    private final String tabPanel = \"body:content:body:container:content:tabbedPanel:panel:searchResult:\";\n \n     private final String searchResultContainer = tabPanel + \"container:content:\";\n \n@@ -45,7 +45,7 @@ public void login() {\n     @Test\n     public void usersBulkAction() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n         Component component = findComponentByProp(\"username\", searchResultContainer\n                 + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n@@ -70,7 +70,7 @@ public void usersBulkAction() {\n     @Test\n     public void userResourceBulkAction() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n         Component component = findComponentByProp(\"username\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n@@ -112,7 +112,7 @@ public void userStatusBulkAction() {\n         // suspend \n \n         TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n         Component component = findComponentByProp(\"username\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n@@ -147,7 +147,7 @@ public void userStatusBulkAction() {\n \n         // re-activate\n         TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n         component = findComponentByProp(\"username\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n@@ -184,7 +184,7 @@ public void userStatusBulkAction() {\n     @Test\n     public void groupResourceBulkAction() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n         Component component = findComponentByProp(\"name\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director\");\n@@ -228,7 +228,7 @@ public void groupResourceBulkAction() {\n     @Test\n     public void printerResourceBulkAction() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n \n         Component component = findComponentByProp(\"key\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\","},{"sha":"383714dfb1e5fad433b7403b30a6f473a6ef7b35","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/DisplayAttributesITCase.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FDisplayAttributesITCase.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -38,23 +38,23 @@ public void login() {\n \n     @Test\n     public void readAndSet() {\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:3:link\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:panel:\"\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:3:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:\"\n                 + \"searchResult:container:content:searchContainer:resultTable:\"\n                 + \"tablePanel:groupForm:checkgroup:dataTable:topToolbars:\"\n                 + \"toolbars:1:headers:4:header:label:panelChangeView:changeViewLink\");\n \n         TESTER.assertComponent(\n-                \"body:content:body:tabbedPanel:panel:searchResult:outerObjectsRepeater:2:outer\", Modal.class);\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:2:outer\",\n+                Modal.class);\n \n         FormTester formTester = TESTER.newFormTester(\n-                \"body:content:body:tabbedPanel:panel:searchResult:outerObjectsRepeater:2:outer:form\");\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:2:outer:form\");\n \n         formTester.setValue(\"content:container:details:paletteField:recorder\", \"status\");\n \n-        TESTER.clickLink(\n-                \"body:content:body:tabbedPanel:panel:searchResult:outerObjectsRepeater:2:outer:dialog:footer:\"\n-                + \"inputs:0:submit\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:\"\n+                + \"2:outer:dialog:footer:inputs:0:submit\");\n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n \n         TESTER.clearFeedbackMessages();"},{"sha":"b04c9f017c67fa850a47251945fa5f24a66bca01","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/GroupsITCase.java","status":"modified","additions":22,"deletions":21,"changes":43,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FGroupsITCase.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -34,7 +34,7 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class GroupsITCase extends AbstractConsoleITCase {\n \n-    private final String tabPanel = \"body:content:body:tabbedPanel:panel:searchResult:\";\n+    private final String tabPanel = \"body:content:body:container:content:tabbedPanel:panel:searchResult:\";\n \n     private final String searchResultContainer = tabPanel + \"container:content:\";\n \n@@ -46,50 +46,51 @@ public void login() {\n     @Test\n     public void read() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n         Component component = findComponentByProp(\"name\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"artDirector\");\n         assertNotNull(component);\n \n         TESTER.clickLink(component.getPageRelativePath() + \":cells:4:cell:panelMembers:membersLink\");\n \n-        FormTester formTester = TESTER.newFormTester(\"body:content:body:tabbedPanel:panel:searchResult:\"\n-                + \"outerObjectsRepeater:6:outer:container:content:togglePanelContainer:membersForm\");\n+        FormTester formTester = TESTER.newFormTester(\"body:content:body:container:content:tabbedPanel:panel:\"\n+                + \"searchResult:outerObjectsRepeater:6:outer:container:content:togglePanelContainer:membersForm\");\n \n         formTester.select(\"type:dropDownChoiceField\", 0);\n         formTester.submit(\"changeit\");\n \n-        TESTER.assertModelValue(\"body:content:body:tabbedPanel:panel:searchResult:outerObjectsRepeater:5:outer:\"\n-                + \"dialog:header:header-label\", \"USER members of artDirector\");\n+        TESTER.assertModelValue(\"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n+                + \"outerObjectsRepeater:5:outer:dialog:header:header-label\", \"USER members of artDirector\");\n \n-        assertNotNull(findComponentByProp(\"username\", \"body:content:body:tabbedPanel:panel:searchResult:\"\n-                + \"outerObjectsRepeater:5:outer:form:content:searchResult:container:content:searchContainer:\"\n-                + \"resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\"));\n+        assertNotNull(findComponentByProp(\"username\", \"body:content:body:container:content:tabbedPanel:panel:\"\n+                + \"searchResult:outerObjectsRepeater:5:outer:form:content:searchResult:container:content:\"\n+                + \"searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\"));\n \n-        TESTER.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:searchResult:outerObjectsRepeater:5:\"\n-                + \"outer:dialog:footer:buttons:0:button\", Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(\"body:content:body:container:content:tabbedPanel:panel:searchResult:\"\n+                + \"outerObjectsRepeater:5:outer:dialog:footer:buttons:0:button\", Constants.ON_CLICK);\n     }\n \n     @Test\n     public void filteredSearch() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n-        TESTER.clickLink(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n \n-        TESTER.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n-                + \"searchFormContainer:search:multiValueContainer:innerForm:content:panelPlus:add\", Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:\"\n+                + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:panelPlus:add\",\n+                Constants.ON_CLICK);\n \n-        TESTER.assertComponent(\n-                \"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:searchFormContainer:search:\"\n-                + \"multiValueContainer:innerForm:content:view:0:panel:container:value:textField\", TextField.class);\n+        TESTER.assertComponent(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:\"\n+                + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panel:container:\"\n+                + \"value:textField\", TextField.class);\n     }\n \n     @Test\n     public void clickToCloneGroup() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n         Component component = findComponentByProp(\"name\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director\");\n@@ -109,7 +110,7 @@ public void clickToCloneGroup() {\n     @Test\n     public void editGroup() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n         Component component = findComponentByProp(\"name\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director\");\n@@ -169,7 +170,7 @@ public void editGroup() {\n     @Test\n     public void checkDeleteGroupLink() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:2:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:2:link\");\n \n         Component component = findComponentByProp(\"name\", searchResultContainer\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"director\");"},{"sha":"6b75ee742074df5e58879435f2c5917a138e9aef","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/RealmsITCase.java","status":"modified","additions":164,"deletions":12,"changes":176,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FRealmsITCase.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -18,9 +18,14 @@\n  */\n package org.apache.syncope.fit.console;\n \n+import static org.apache.syncope.fit.console.AbstractConsoleITCase.TESTER;\n+import static org.junit.Assert.assertNotNull;\n+\n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n+import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.Realms;\n import org.apache.syncope.client.console.panels.TogglePanel;\n+import org.apache.wicket.Component;\n import org.apache.wicket.util.tester.FormTester;\n import org.junit.Before;\n import org.junit.FixMethodOrder;\n@@ -39,39 +44,74 @@ public void login() {\n \n     @Test\n     public void read() {\n-        TESTER.assertLabel(\"body:content:body:tabbedPanel:panel:container:name:field-label\", \"Name\");\n+        TESTER.assertLabel(\"body:content:body:container:content:tabbedPanel:panel:container:accountPolicy:field-label\",\n+                \"Account Policy\");\n     }\n \n     @Test\n     public void create() {\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:panel:actions:actions:panelCreate:createLink\");\n+        TESTER.clickLink(\n+                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:panelCreate:createLink\");\n+\n+        TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n+\n+        FormTester formTester = TESTER.newFormTester(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester.setValue(\"view:details:container:generics:name:textField\", \"testRealm\");\n+\n+        formTester.submit(\"buttons:finish\");\n+\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n \n-        TESTER.assertComponent(\"body:content:modal\", Modal.class);\n+        TESTER.executeAjaxEvent(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\",\n+                Constants.ON_CLICK);\n+\n+        // remove the new realm just created\n+        TESTER.clickLink(\"body:realmsLI:realms\");\n \n-        FormTester formTester = TESTER.newFormTester(\"body:content:modal:form\");\n-        formTester.setValue(\"content:details:container:name:textField\", \"testRealm\");\n+        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:btn\", Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:4:button\",\n+                Constants.ON_CLICK);\n \n-        TESTER.clickLink(\"body:content:modal:dialog:footer:inputs:0:submit\");\n+        TESTER.assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/testRealm\");\n+\n+        TESTER.getRequest().addParameter(\"confirm\", \"true\");\n+        TESTER.clickLink(\n+                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:panelDelete:deleteLink\");\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n+\n+        TESTER.assertLabel(\"body:content:body:container:content:tabbedPanel:panel:container:accountPolicy:field-label\",\n+                \"Account Policy\");\n+\n+        TESTER.assertLabel(\"body:content:realmChoicePanel:container:realm\", \"/\");\n     }\n \n     @Test\n     public void update() {\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:panel:actions:actions:panelEdit:editLink\");\n-        TESTER.assertComponent(\"body:content:modal\", Modal.class);\n+        TESTER.clickLink(\n+                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:panelEdit:editLink\");\n+        TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n \n-        FormTester formTester = TESTER.newFormTester(\"body:content:modal:form\");\n-        TESTER.clickLink(\"body:content:modal:dialog:footer:inputs:0:submit\");\n+        FormTester formTester = TESTER.newFormTester(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester.submit(\"buttons:finish\");\n \n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n+\n+        TESTER.executeAjaxEvent(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\",\n+                Constants.ON_CLICK);\n     }\n \n     @Test\n     public void addUserTemplate() {\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:panel:actions:actions:panelTemplate:templateLink\");\n+        TESTER.clickLink(\n+                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:panelTemplate:templateLink\");\n         TESTER.assertComponent(\"body:content:toggleTemplates\", TogglePanel.class);\n \n         FormTester formTester = TESTER.newFormTester(\n@@ -88,7 +128,8 @@ public void addUserTemplate() {\n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n \n-        TESTER.clickLink(\"body:content:body:tabbedPanel:panel:actions:actions:panelTemplate:templateLink\");\n+        TESTER.clickLink(\n+                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:panelTemplate:templateLink\");\n         TESTER.assertComponent(\"body:content:toggleTemplates\", TogglePanel.class);\n \n         formTester = TESTER.newFormTester(\n@@ -108,4 +149,115 @@ public void addUserTemplate() {\n         TESTER.assertInfoMessages(\"Operation executed successfully\");\n         TESTER.cleanupFeedbackMessages();\n     }\n+\n+    @Test\n+    public void verifyPropagation() {\n+        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:btn\", Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:2:button\",\n+                Constants.ON_CLICK);\n+\n+        TESTER.clickLink(\n+                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:panelEdit:editLink\");\n+        TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:form:view:details:\"\n+                + \"container:generics:name:textField\", \"two\");\n+\n+        FormTester formTester = TESTER.newFormTester(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester.setValue(\"view:details:container:resources:paletteField:recorder\", \"resource-ldap-orgunit\");\n+\n+        formTester.submit(\"buttons:finish\");\n+\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n+\n+        // ----------------------------------\n+        // Check for propagation rsults\n+        // ----------------------------------\n+        Component component = findComponentByProp(\"resource\", \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n+                + \"content:customResultBody:firstLevelContainer:first:container\", \"resource-ldap-orgunit\");\n+\n+        TESTER.clickLink(component.getPageRelativePath() + \":actions:panelView:viewLink\");\n+\n+        TESTER.assertLabel(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+                + \"secondLevelContainer:second:remoteObject:propView:2:value:oldAttribute:field-label\", \"ou\");\n+\n+        TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+                + \"secondLevelContainer:second:remoteObject:propView:0:value:oldAttribute:textField\", null);\n+        \n+        TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+                + \"secondLevelContainer:second:remoteObject:propView:1:value:oldAttribute:textField\", null);\n+        \n+        TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+                + \"secondLevelContainer:second:remoteObject:propView:2:value:oldAttribute:textField\", null);\n+\n+        TESTER.assertLabel(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+                + \"secondLevelContainer:second:remoteObject:propView:2:value:newAttribute:field-label\", \"ou\");\n+\n+        TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+                + \"secondLevelContainer:second:remoteObject:propView:2:value:newAttribute:textField\", \"two\");\n+\n+        TESTER.clickLink(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+                + \"secondLevelContainer:back\");\n+\n+        assertNotNull(findComponentByProp(\"resource\", \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n+                + \"content:customResultBody:firstLevelContainer:first:container\", \"resource-ldap-orgunit\"));\n+        // ----------------------------------\n+\n+        TESTER.executeAjaxEvent(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\",\n+                Constants.ON_CLICK);\n+\n+        TESTER.clickLink(\n+                \"body:content:body:container:content:tabbedPanel:panel:actions:actions:panelEdit:editLink\");\n+        TESTER.assertComponent(\"body:content:body:outerObjectsRepeater:0:outer\", Modal.class);\n+        TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:form:view:details:\"\n+                + \"container:generics:name:textField\", \"two\");\n+\n+        formTester = TESTER.newFormTester(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:form\");\n+        formTester.setValue(\"view:details:container:resources:paletteField:recorder\", \"\");\n+\n+        formTester.submit(\"buttons:finish\");\n+\n+        TESTER.assertInfoMessages(\"Operation executed successfully\");\n+        TESTER.cleanupFeedbackMessages();\n+\n+        // ----------------------------------\n+        // Check for propagation rsults\n+        // ----------------------------------\n+        component = findComponentByProp(\"resource\", \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n+                + \"content:customResultBody:firstLevelContainer:first:container\", \"resource-ldap-orgunit\");\n+\n+        TESTER.clickLink(component.getPageRelativePath() + \":actions:panelView:viewLink\");\n+\n+        TESTER.assertLabel(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+                + \"secondLevelContainer:second:remoteObject:propView:2:value:oldAttribute:field-label\", \"ou\");\n+\n+        TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+                + \"secondLevelContainer:second:remoteObject:propView:2:value:oldAttribute:textField\", \"two\");\n+\n+        TESTER.assertLabel(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+                + \"secondLevelContainer:second:remoteObject:propView:2:value:newAttribute:field-label\", \"ou\");\n+\n+        TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+                + \"secondLevelContainer:second:remoteObject:propView:0:value:newAttribute:textField\", null);\n+\n+        TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+                + \"secondLevelContainer:second:remoteObject:propView:1:value:newAttribute:textField\", null);\n+        \n+        TESTER.assertModelValue(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+                + \"secondLevelContainer:second:remoteObject:propView:2:value:newAttribute:textField\", null);\n+        \n+        TESTER.clickLink(\"body:content:body:outerObjectsRepeater:0:outer:form:content:customResultBody:\"\n+                + \"secondLevelContainer:back\");\n+\n+        assertNotNull(findComponentByProp(\"resource\", \"body:content:body:outerObjectsRepeater:0:outer:form:\"\n+                + \"content:customResultBody:firstLevelContainer:first:container\", \"resource-ldap-orgunit\"));\n+        // ----------------------------------\n+\n+        TESTER.executeAjaxEvent(\n+                \"body:content:body:outerObjectsRepeater:0:outer:form:content:action:panelClose:closeLink\",\n+                Constants.ON_CLICK);\n+    }\n }"},{"sha":"00607935afaede3fa11c1f60d4548bcad8c1044b","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/TopologyITCase.java","status":"modified","additions":33,"deletions":1,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FTopologyITCase.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -20,6 +20,7 @@\n \n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.fail;\n \n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n@@ -112,10 +113,41 @@ public void editProvisioning() {\n         TESTER.executeAjaxEvent(component.getPageRelativePath() + \":res\", Constants.ON_CLICK);\n         TESTER.clickLink(\"body:toggle:container:content:togglePanelContainer:container:actions:provision\");\n \n+        // ------------------------------------------\n+        // Check for realm provisioning feature availability (SYNCOPE-874)\n+        // ------------------------------------------\n+        FormTester formTester = TESTER.newFormTester(\"body:toggle:outerObjectsRepeater:3:outer:form\");\n+        formTester.setValue(\"content:aboutRealmProvison:enableRealmsProvision:checkboxField\", true);\n+\n+        TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:aboutRealmProvison:\"\n+                + \"enableRealmsProvision:checkboxField\", Constants.ON_CHANGE);\n+\n+        assertNotNull(findComponentById(\n+                \"body:toggle:outerObjectsRepeater:3:outer:form:content:aboutRealmProvison:realmsProvisionContainer\",\n+                \"connObjectLink\"));\n+\n+        TESTER.assertLabel(\"body:toggle:outerObjectsRepeater:3:outer:form:content:aboutRealmProvison:\"\n+                + \"realmsProvisionContainer:connObjectLink:field-label\", \"Object Link\");\n+\n+        formTester.setValue(\"content:aboutRealmProvison:enableRealmsProvision:checkboxField\", false);\n+\n+        TESTER.executeAjaxEvent(\"body:toggle:outerObjectsRepeater:3:outer:form:content:aboutRealmProvison:\"\n+                + \"enableRealmsProvision:checkboxField\", Constants.ON_CHANGE);\n+\n+        try {\n+            findComponentById(\n+                    \"body:toggle:outerObjectsRepeater:3:outer:form:content:aboutRealmProvison:realmsProvisionContainer\",\n+                    \"connObjectLink\");\n+            fail();\n+        } catch (NullPointerException e) {\n+            // correct\n+        }\n+        // ------------------------------------------\n+\n         TESTER.clickLink(\"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:\"\n                 + \"content:group:beans:0:actions:panelMapping:mappingLink\");\n \n-        FormTester formTester = TESTER.newFormTester(\n+        formTester = TESTER.newFormTester(\n                 \"body:toggle:outerObjectsRepeater:3:outer:form:content:provision:container:content:wizard:form\");\n         formTester.submit(\"buttons:next\");\n "},{"sha":"713e899e299ebf4ab2ec75aba285eddfb5e22417","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/console/UsersITCase.java","status":"modified","additions":16,"deletions":13,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0370ddc65b42fc163d6bc277572074bfff2a14fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0370ddc65b42fc163d6bc277572074bfff2a14fb/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fconsole%2FUsersITCase.java?ref=0370ddc65b42fc163d6bc277572074bfff2a14fb","patch":"@@ -35,7 +35,7 @@\n @FixMethodOrder(MethodSorters.JVM)\n public class UsersITCase extends AbstractConsoleITCase {\n \n-    private static final String TAB_PANEL = \"body:content:body:tabbedPanel:panel:searchResult:\";\n+    private static final String TAB_PANEL = \"body:content:body:container:content:tabbedPanel:panel:searchResult:\";\n \n     private static final String SEARCH_RES_CONTAINER = TAB_PANEL + \"container:content:\";\n \n@@ -47,22 +47,24 @@ public void login() {\n     @Test\n     public void filteredSearch() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n-        TESTER.clickLink(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:title\");\n \n-        TESTER.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n-                + \"searchFormContainer:search:multiValueContainer:innerForm:content:panelPlus:add\", Constants.ON_CLICK);\n+        TESTER.executeAjaxEvent(\"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:\"\n+                + \"content:searchFormContainer:search:multiValueContainer:innerForm:content:panelPlus:add\",\n+                Constants.ON_CLICK);\n \n         TESTER.assertComponent(\n-                \"body:content:body:tabbedPanel:panel:accordionPanel:tabs:0:body:content:searchFormContainer:search:\"\n-                + \"multiValueContainer:innerForm:content:view:0:panel:container:value:textField\", TextField.class);\n+                \"body:content:body:container:content:tabbedPanel:panel:accordionPanel:tabs:0:body:content:\"\n+                + \"searchFormContainer:search:multiValueContainer:innerForm:content:view:0:panel:container:value:\"\n+                + \"textField\", TextField.class);\n     }\n \n     @Test\n     public void forceChangePassword() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n         Component component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"verdi\");\n@@ -77,7 +79,7 @@ public void forceChangePassword() {\n     @Test\n     public void clickToCloneUser() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n         Component component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");\n@@ -98,7 +100,7 @@ public void clickToCloneUser() {\n     @Test\n     public void editUser() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n         Component component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n@@ -163,7 +165,7 @@ public void editUserMembership() {\n         TESTER.executeAjaxEvent(\"body:content:realmChoicePanel:container:realms:dropdown-menu:buttons:1:button\",\n                 Constants.ON_CLICK);\n \n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n         Component component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"puccini\");\n@@ -193,7 +195,8 @@ public void editUserMembership() {\n         formTester = TESTER.newFormTester(TAB_PANEL + \"outerObjectsRepeater:0:outer:form:content:form\");\n         assertNotNull(formTester);\n \n-        TESTER.executeAjaxEvent(\"body:content:body:tabbedPanel:panel:searchResult:outerObjectsRepeater:0:\"\n+        TESTER.executeAjaxEvent(\n+                \"body:content:body:container:content:tabbedPanel:panel:searchResult:outerObjectsRepeater:0:\"\n                 + \"outer:form:content:form:view:membershipsPlainSchemas:0:membershipPlainSchemas:tabs:0:title\",\n                 Constants.ON_CLICK);\n \n@@ -242,7 +245,7 @@ public void editUserMembership() {\n     @Test\n     public void checkDeleteUsrLink() {\n         TESTER.clickLink(\"body:realmsLI:realms\");\n-        TESTER.clickLink(\"body:content:body:tabbedPanel:tabs-container:tabs:1:link\");\n+        TESTER.clickLink(\"body:content:body:container:content:tabbedPanel:tabs-container:tabs:1:link\");\n \n         Component component = findComponentByProp(\"username\", SEARCH_RES_CONTAINER\n                 + \":searchContainer:resultTable:tablePanel:groupForm:checkgroup:dataTable\", \"rossini\");"}]}