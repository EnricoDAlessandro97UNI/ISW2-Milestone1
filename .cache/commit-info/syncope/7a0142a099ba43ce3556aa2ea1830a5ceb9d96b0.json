{"sha":"7a0142a099ba43ce3556aa2ea1830a5ceb9d96b0","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjdhMDE0MmEwOTliYTQzY2UzNTU2YWEyZWExODMwYTVjZWI5ZDk2YjA=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-03-14T13:05:17Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-03-14T13:05:17Z"},"message":"Whit noise: formatting\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1456412 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"15ed602d442aac2dda90ad9989c6b201f19fadf3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/15ed602d442aac2dda90ad9989c6b201f19fadf3"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7a0142a099ba43ce3556aa2ea1830a5ceb9d96b0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7a0142a099ba43ce3556aa2ea1830a5ceb9d96b0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7a0142a099ba43ce3556aa2ea1830a5ceb9d96b0","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7a0142a099ba43ce3556aa2ea1830a5ceb9d96b0/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"9716a005919888e4095d798e289cb17021f036f5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9716a005919888e4095d798e289cb17021f036f5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9716a005919888e4095d798e289cb17021f036f5"}],"stats":{"total":17,"additions":10,"deletions":7},"files":[{"sha":"539ecb5ea503b1e358a5b359857e1fdf8811382a","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/AbstractAttributableDAOImpl.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7a0142a099ba43ce3556aa2ea1830a5ceb9d96b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractAttributableDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7a0142a099ba43ce3556aa2ea1830a5ceb9d96b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractAttributableDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FAbstractAttributableDAOImpl.java?ref=7a0142a099ba43ce3556aa2ea1830a5ceb9d96b0","patch":"@@ -219,11 +219,12 @@ public <T extends AbstractAttributable> List<T> findByAttrValue(final String sch\n                 : attrUtil.attrValueClass().getName();\n \n         TypedQuery<AbstractAttrValue> query = entityManager.createQuery(\"SELECT e FROM \" + entityName + \" e\"\n-                + \" WHERE e.attribute.schema.name = :schemaName \" + \" AND (e.stringValue IS NOT NULL\"\n-                + \" AND e.stringValue = :stringValue)\" + \" OR (e.booleanValue IS NOT NULL\"\n-                + \" AND e.booleanValue = :booleanValue)\" + \" OR (e.dateValue IS NOT NULL\"\n-                + \" AND e.dateValue = :dateValue)\" + \" OR (e.longValue IS NOT NULL\" + \" AND e.longValue = :longValue)\"\n-                + \" OR (e.doubleValue IS NOT NULL\" + \" AND e.doubleValue = :doubleValue)\",\n+                + \" WHERE e.attribute.schema.name = :schemaName AND (e.stringValue IS NOT NULL\"\n+                + \" AND e.stringValue = :stringValue)\"\n+                + \" OR (e.booleanValue IS NOT NULL AND e.booleanValue = :booleanValue)\"\n+                + \" OR (e.dateValue IS NOT NULL AND e.dateValue = :dateValue)\"\n+                + \" OR (e.longValue IS NOT NULL AND e.longValue = :longValue)\"\n+                + \" OR (e.doubleValue IS NOT NULL AND e.doubleValue = :doubleValue)\",\n                 AbstractAttrValue.class);\n \n         query.setParameter(\"schemaName\", schemaName);"},{"sha":"1c16b7a72904b9af057f97c1cdcd3d8b5428b149","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/TaskController.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7a0142a099ba43ce3556aa2ea1830a5ceb9d96b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7a0142a099ba43ce3556aa2ea1830a5ceb9d96b0/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FTaskController.java?ref=7a0142a099ba43ce3556aa2ea1830a5ceb9d96b0","patch":"@@ -305,11 +305,13 @@ public TaskExecTO execute(@PathVariable(\"taskId\") final Long taskId,\n             case SCHED:\n             case SYNC:\n                 try {\n-                    jobInstanceLoader.registerJob(task, ((SchedTask) task).getJobClassName(), ((SchedTask) task).\n-                            getCronExpression());\n+                    jobInstanceLoader.registerJob(task,\n+                            ((SchedTask) task).getJobClassName(),\n+                            ((SchedTask) task).getCronExpression());\n \n                     JobDataMap map = new JobDataMap();\n                     map.put(AbstractTaskJob.DRY_RUN_JOBDETAIL_KEY, dryRun);\n+\n                     scheduler.getScheduler().triggerJob(\n                             new JobKey(JobInstanceLoader.getJobName(task), Scheduler.DEFAULT_GROUP), map);\n                 } catch (Exception e) {"}]}