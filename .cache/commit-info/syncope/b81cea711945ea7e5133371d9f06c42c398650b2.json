{"sha":"b81cea711945ea7e5133371d9f06c42c398650b2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmI4MWNlYTcxMTk0NWVhN2U1MTMzMzcxZDlmMDZjNDJjMzk4NjUwYjI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-05-04T15:50:01Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-05-04T15:50:01Z"},"message":"[SYNCOPE-664] Hiding Oracle behavior in AbstractAttrValue#getStringValue","tree":{"sha":"49a8bf74337298413d1d4f166b0f6ee86c87f486","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/49a8bf74337298413d1d4f166b0f6ee86c87f486"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b81cea711945ea7e5133371d9f06c42c398650b2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b81cea711945ea7e5133371d9f06c42c398650b2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b81cea711945ea7e5133371d9f06c42c398650b2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b81cea711945ea7e5133371d9f06c42c398650b2/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b97eb56e4dff32c077b1bfe2181b93dff5fa5d3f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b97eb56e4dff32c077b1bfe2181b93dff5fa5d3f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b97eb56e4dff32c077b1bfe2181b93dff5fa5d3f"}],"stats":{"total":50,"additions":32,"deletions":18},"files":[{"sha":"d88fba0c910f1b0ce909fd231c015f1d3b3cbcbd","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractAttrValue.java","status":"modified","additions":29,"deletions":17,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b81cea711945ea7e5133371d9f06c42c398650b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b81cea711945ea7e5133371d9f06c42c398650b2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttrValue.java?ref=b81cea711945ea7e5133371d9f06c42c398650b2","patch":"@@ -28,6 +28,7 @@\n import javax.validation.constraints.Max;\n import javax.validation.constraints.Min;\n import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n import org.apache.commons.lang3.builder.ToStringStyle;\n import org.apache.syncope.common.SyncopeConstants;\n@@ -105,7 +106,15 @@ public void setLongValue(final Long longValue) {\n     }\n \n     public String getStringValue() {\n-        return stringValue;\n+        // workaround for Oracle DB considering empty string values as NULL (SYNCOPE-664)\n+        return dateValue == null\n+                && booleanValue == null\n+                && longValue == null\n+                && doubleValue == null\n+                && binaryValue == null\n+                && stringValue == null\n+                        ? StringUtils.EMPTY\n+                        : stringValue;\n     }\n \n     public void setStringValue(final String stringValue) {\n@@ -195,21 +204,21 @@ public <T> T getValue() {\n         return (T) (booleanValue != null\n                 ? getBooleanValue()\n                 : dateValue != null\n-                ? getDateValue()\n-                : doubleValue != null\n-                ? getDoubleValue()\n-                : longValue != null\n-                ? getLongValue()\n-                : binaryValue != null\n-                ? getBinaryValue()\n-                : stringValue);\n+                        ? getDateValue()\n+                        : doubleValue != null\n+                                ? getDoubleValue()\n+                                : longValue != null\n+                                        ? getLongValue()\n+                                        : binaryValue != null\n+                                                ? getBinaryValue()\n+                                                : getStringValue());\n     }\n \n     public String getValueAsString() {\n         final AttributeSchemaType type = getAttribute() == null || getAttribute().getSchema() == null\n                 || getAttribute().getSchema().getType() == null\n-                ? AttributeSchemaType.String\n-                : getAttribute().getSchema().getType();\n+                        ? AttributeSchemaType.String\n+                        : getAttribute().getSchema().getType();\n \n         return getValueAsString(type);\n     }\n@@ -228,22 +237,25 @@ public String getValueAsString(final AttributeSchemaType type) {\n             case Long:\n                 result = getAttribute() == null || getAttribute().getSchema() == null\n                         || getAttribute().getSchema().getConversionPattern() == null\n-                        ? getLongValue().toString()\n-                        : DataFormat.format(getLongValue(), getAttribute().getSchema().getConversionPattern());\n+                                ? getLongValue().toString()\n+                                : DataFormat.format(getLongValue(),\n+                                        getAttribute().getSchema().getConversionPattern());\n                 break;\n \n             case Double:\n                 result = getAttribute() == null || getAttribute().getSchema() == null\n                         || getAttribute().getSchema().getConversionPattern() == null\n-                        ? getDoubleValue().toString()\n-                        : DataFormat.format(getDoubleValue(), getAttribute().getSchema().getConversionPattern());\n+                                ? getDoubleValue().toString()\n+                                : DataFormat.format(getDoubleValue(),\n+                                        getAttribute().getSchema().getConversionPattern());\n                 break;\n \n             case Date:\n                 result = getAttribute() == null || getAttribute().getSchema() == null\n                         || getAttribute().getSchema().getConversionPattern() == null\n-                        ? DataFormat.format(getDateValue())\n-                        : DataFormat.format(getDateValue(), false, getAttribute().getSchema().getConversionPattern());\n+                                ? DataFormat.format(getDateValue())\n+                                : DataFormat.format(getDateValue(), false, getAttribute().getSchema().\n+                                        getConversionPattern());\n                 break;\n \n             case Binary:"},{"sha":"a361a6d2101f3399fe512a53adf895218f015ba2","filename":"core/src/test/resources/content.xml","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b81cea711945ea7e5133371d9f06c42c398650b2/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b81cea711945ea7e5133371d9f06c42c398650b2/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=b81cea711945ea7e5133371d9f06c42c398650b2","patch":"@@ -33,7 +33,9 @@ under the License.\n   + provided as non-empty string: NotificationJob runs according to the given value -->\n   <CSchema name=\"notificationjob.cronExpression\" type=\"String\"\n            mandatoryCondition=\"false\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n-\n+  <CAttr id=\"2\" owner_id=\"1\" schema_name=\"notificationjob.cronExpression\"/>\n+  <CAttrValue id=\"2\" attribute_id=\"2\" stringValue=\"\"/>\n+  \n   <CSchema name=\"notification.maxRetries\" type=\"Long\"\n            mandatoryCondition=\"true\" multivalue=\"0\" uniqueConstraint=\"0\" readonly=\"0\"/>\n   <CAttr id=\"3\" owner_id=\"1\" schema_name=\"notification.maxRetries\"/>"}]}