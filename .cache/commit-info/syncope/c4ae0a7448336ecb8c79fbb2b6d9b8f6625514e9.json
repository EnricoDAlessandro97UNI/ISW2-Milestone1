{"sha":"c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmM0YWUwYTc0NDgzMzZlY2I4Yzc5ZmJiMmI2ZDliOGY2NjI1NTE0ZTk=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-12-05T11:30:56Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-12-05T11:30:56Z"},"message":"[SYNCOPE-300] Preliminary changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1548091 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ee561640ca124fad47f692342bea5a9c8780bb4d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/ee561640ca124fad47f692342bea5a9c8780bb4d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"8c4a227edd50fa0e35dbc77038a7ca2a6a35b3ee","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8c4a227edd50fa0e35dbc77038a7ca2a6a35b3ee","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8c4a227edd50fa0e35dbc77038a7ca2a6a35b3ee"}],"stats":{"total":143,"additions":73,"deletions":70},"files":[{"sha":"953919d8deb390b9a39dfab5b677d21e93651f5e","filename":"common/src/main/java/org/apache/syncope/common/services/RoleService.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRoleService.java?ref=c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9","patch":"@@ -86,7 +86,8 @@ public interface RoleService {\n      * @return Returns paginated list of roles\r\n      */\r\n     @GET\r\n-    List<RoleTO> list(@QueryParam(\"page\") int page, @QueryParam(\"size\") @DefaultValue(\"25\") int size);\r\n+    List<RoleTO> list(@QueryParam(\"page\") @DefaultValue(\"1\") int page,\r\n+            @QueryParam(\"size\") @DefaultValue(\"25\") int size);\r\n \r\n     /**\r\n      * @param roleId Id of role to get parent role from\r\n@@ -122,7 +123,7 @@ public interface RoleService {\n      */\r\n     @POST\r\n     @Path(\"search\")\r\n-    List<RoleTO> search(NodeCond searchCondition, @QueryParam(\"page\") int page,\r\n+    List<RoleTO> search(NodeCond searchCondition, @QueryParam(\"page\") @DefaultValue(\"1\") int page,\r\n             @QueryParam(\"size\") @DefaultValue(\"25\") int size) throws InvalidSearchConditionException;\r\n \r\n     /**\r"},{"sha":"ff8542bfbec4012b659eb218d96aee634c64300b","filename":"common/src/main/java/org/apache/syncope/common/services/UserService.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FUserService.java?ref=c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9","patch":"@@ -96,18 +96,18 @@ public interface UserService {\n     List<UserTO> list();\n \n     /**\n-     * Returns a paged list of all existing users.\n+     * Returns a paged list of existing users.\n      *\n      * @param page result page number\n      * @param size number of entries per page\n      * @return A list of all existing users matching page/size conditions.\n      */\n     @GET\n     @Descriptions({\n-        @Description(target = DocTarget.METHOD, value = \"Returns a paged list of all existing users\"),\n+        @Description(target = DocTarget.METHOD, value = \"Returns a list of all existing users\"),\n         @Description(target = DocTarget.RETURN, value = \"A list of all existing users matching page/size conditions\")\n     })\n-    List<UserTO> list(@Description(\"result page number\") @QueryParam(\"page\") int page,\n+    List<UserTO> list(@Description(\"result page number\") @QueryParam(\"page\") @DefaultValue(\"1\") int page,\n             @Description(\"number of entries per page\") @QueryParam(\"size\") @DefaultValue(\"25\") int size);\n \n     /**\n@@ -163,7 +163,7 @@ List<UserTO> search(@Description(\"search condition\") NodeCond searchCondition)\n                 value = \"List of users matching the given search and page/size conditions\")\n     })\n     List<UserTO> search(@Description(\"search condition\") NodeCond searchCondition,\n-            @Description(\"result page number\") @QueryParam(\"page\") int page,\n+            @Description(\"result page number\") @QueryParam(\"page\") @DefaultValue(\"1\") int page,\n             @Description(\"number of entries per page\") @QueryParam(\"size\") @DefaultValue(\"25\") int size)\n             throws InvalidSearchConditionException;\n "},{"sha":"6e5e8d1ed2ef8e05bdf2e8cf88fe7a8305e15c6a","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/RoleDAO.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRoleDAO.java?ref=c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9","patch":"@@ -58,8 +58,12 @@ public interface RoleDAO extends AttributableDAO {\n \n     List<SyncopeRole> findAll();\n \n+    List<SyncopeRole> findAll(int page, int itemsPerPage);\n+\n     List<Membership> findMemberships(SyncopeRole role);\n \n+    int count();\n+\n     SyncopeRole save(SyncopeRole syncopeRole) throws InvalidEntityException;\n \n     void delete(SyncopeRole role);"},{"sha":"c91a66a29aa966f0f109d24d453c949913b2b887","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/RoleDAOImpl.java","status":"modified","additions":26,"deletions":3,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRoleDAOImpl.java?ref=c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9","patch":"@@ -280,14 +280,29 @@ public List<SyncopeRole> findByResource(final ExternalResource resource) {\n \n     @Override\n     public List<SyncopeRole> findAll() {\n-        TypedQuery<SyncopeRole> query = entityManager.createQuery(\"SELECT e FROM SyncopeRole e\", SyncopeRole.class);\n+        return findAll(-1, -1);\n+    }\n+\n+    @Override\n+    public List<SyncopeRole> findAll(final int page, final int itemsPerPage) {\n+        TypedQuery<SyncopeRole> query = entityManager.createQuery(\n+                \"SELECT e FROM \" + SyncopeRole.class.getSimpleName() + \" e\", SyncopeRole.class);\n+\n+        query.setFirstResult(itemsPerPage * (page <= 0\n+                ? 0\n+                : page - 1));\n+\n+        if (itemsPerPage > 0) {\n+            query.setMaxResults(itemsPerPage);\n+        }\n+\n         return query.getResultList();\n     }\n \n     @Override\n     public List<Membership> findMemberships(final SyncopeRole role) {\n-        TypedQuery<Membership> query = entityManager.createQuery(\"SELECT e FROM \" + Membership.class.getSimpleName()\n-                + \" e\"\n+        TypedQuery<Membership> query = entityManager.createQuery(\n+                \"SELECT e FROM \" + Membership.class.getSimpleName() + \" e\"\n                 + \" WHERE e.syncopeRole=:role\", Membership.class);\n         query.setParameter(\"role\", role);\n \n@@ -313,6 +328,14 @@ private List<Long> unmatched(final Long roleId,\n         return query.getResultList();\n     }\n \n+    @Override\n+    public final int count() {\n+        Query countQuery = entityManager.createNativeQuery(\n+                \"SELECT COUNT(e) FROM \" + SyncopeRole.class.getSimpleName() + \" e\");\n+\n+        return ((Number) countQuery.getSingleResult()).intValue();\n+    }\n+\n     @Override\n     public SyncopeRole save(final SyncopeRole role) {\n         // reset account policy in case of inheritance"},{"sha":"8db69eb52205c7cae5e3c45f8088cae65bf5ca1b","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":28,"deletions":30,"changes":58,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9","patch":"@@ -173,37 +173,26 @@ public List<RoleTO> children(final Long roleId) {\n         return childrenTOs;\n     }\n \n-    @PreAuthorize(\"hasRole('ROLE_READ')\")\n+    @PreAuthorize(\"isAuthenticated()\")\n     @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n-    public List<RoleTO> search(final NodeCond searchCondition)\n-            throws InvalidSearchConditionException {\n-\n-        return search(searchCondition, -1, -1);\n+    public int count() {\n+        return roleDAO.count();\n     }\n \n-    @PreAuthorize(\"hasRole('ROLE_READ')\")\n-    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n-    public List<RoleTO> search(final NodeCond searchCondition, final int page, final int size)\n-            throws InvalidSearchConditionException {\n-\n-        if (!searchCondition.isValid()) {\n-            LOG.error(\"Invalid search condition: {}\", searchCondition);\n-            throw new InvalidSearchConditionException();\n-        }\n-\n-        final List<SyncopeRole> matchingRoles = searchDAO.search(\n-                EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames()), searchCondition, page, size,\n-                AttributableUtil.getInstance(AttributableType.ROLE));\n+    @PreAuthorize(\"isAuthenticated()\")\n+    @Transactional(readOnly = true)\n+    public List<RoleTO> list(final int page, final int size) {\n+        List<SyncopeRole> roles = roleDAO.findAll();\n \n-        final List<RoleTO> result = new ArrayList<RoleTO>(matchingRoles.size());\n-        for (SyncopeRole role : matchingRoles) {\n-            result.add(binder.getRoleTO(role));\n+        List<RoleTO> roleTOs = new ArrayList<RoleTO>(roles.size());\n+        for (SyncopeRole role : roles) {\n+            roleTOs.add(binder.getRoleTO(role));\n         }\n \n-        return result;\n+        return roleTOs;\n     }\n \n-    @PreAuthorize(\"hasRole('ROLE_READ')\")\n+    @PreAuthorize(\"isAuthenticated()\")\n     @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     public int searchCount(final NodeCond searchCondition)\n             throws InvalidSearchConditionException {\n@@ -218,16 +207,25 @@ public int searchCount(final NodeCond searchCondition)\n     }\n \n     @PreAuthorize(\"isAuthenticated()\")\n-    @Transactional(readOnly = true)\n-    public List<RoleTO> list() {\n-        List<SyncopeRole> roles = roleDAO.findAll();\n+    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n+    public List<RoleTO> search(final NodeCond searchCondition, final int page, final int size)\n+            throws InvalidSearchConditionException {\n \n-        List<RoleTO> roleTOs = new ArrayList<RoleTO>(roles.size());\n-        for (SyncopeRole role : roles) {\n-            roleTOs.add(binder.getRoleTO(role));\n+        if (!searchCondition.isValid()) {\n+            LOG.error(\"Invalid search condition: {}\", searchCondition);\n+            throw new InvalidSearchConditionException();\n         }\n \n-        return roleTOs;\n+        final List<SyncopeRole> matchingRoles = searchDAO.search(\n+                EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames()), searchCondition, page, size,\n+                AttributableUtil.getInstance(AttributableType.ROLE));\n+\n+        final List<RoleTO> result = new ArrayList<RoleTO>(matchingRoles.size());\n+        for (SyncopeRole role : matchingRoles) {\n+            result.add(binder.getRoleTO(role));\n+        }\n+\n+        return result;\n     }\n \n     @PreAuthorize(\"hasRole('ROLE_CREATE')\")"},{"sha":"145e699b6875c868df535f9d701424158b148eba","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":2,"deletions":24,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9","patch":"@@ -118,7 +118,7 @@ public int count() {\n         return userDAO.count(EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames()));\n     }\n \n-    @PreAuthorize(\"hasRole('USER_READ')\")\n+    @PreAuthorize(\"hasRole('USER_LIST')\")\n     @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     public int searchCount(final NodeCond searchCondition) throws InvalidSearchConditionException {\n         if (!searchCondition.isValid()) {\n@@ -130,20 +130,6 @@ public int searchCount(final NodeCond searchCondition) throws InvalidSearchCondi\n                 searchCondition, AttributableUtil.getInstance(AttributableType.USER));\n     }\n \n-    @PreAuthorize(\"hasRole('USER_LIST')\")\n-    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n-    public List<UserTO> list() {\n-        List<SyncopeUser> users = userDAO.findAll(\n-                EntitlementUtil.getRoleIds(EntitlementUtil.getOwnedEntitlementNames()));\n-\n-        List<UserTO> userTOs = new ArrayList<UserTO>(users.size());\n-        for (SyncopeUser user : users) {\n-            userTOs.add(binder.getUserTO(user));\n-        }\n-\n-        return userTOs;\n-    }\n-\n     @PreAuthorize(\"hasRole('USER_LIST')\")\n     @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     public List<UserTO> list(final int page, final int size) {\n@@ -171,15 +157,7 @@ public UserTO read(final Long userId) {\n         return binder.getUserTO(userId);\n     }\n \n-    @PreAuthorize(\"hasRole('USER_READ')\")\n-    @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n-    public List<UserTO> search(final NodeCond searchCondition)\n-            throws InvalidSearchConditionException {\n-\n-        return search(searchCondition, -1, -1);\n-    }\n-\n-    @PreAuthorize(\"hasRole('USER_READ')\")\n+    @PreAuthorize(\"hasRole('USER_LIST')\")\n     @Transactional(readOnly = true, rollbackFor = { Throwable.class })\n     public List<UserTO> search(final NodeCond searchCondition, final int page, final int size)\n             throws InvalidSearchConditionException {"},{"sha":"ea551c2327d81860336e3b1507a0482b2e2bd65c","filename":"core/src/main/java/org/apache/syncope/core/services/RoleServiceImpl.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRoleServiceImpl.java?ref=c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9","patch":"@@ -20,7 +20,6 @@\n \r\n import java.util.List;\r\n \r\n-import javax.ws.rs.ServiceUnavailableException;\r\n import javax.ws.rs.core.EntityTag;\r\n import javax.ws.rs.core.Response;\r\n import javax.ws.rs.core.Response.ResponseBuilder;\r\n@@ -50,7 +49,7 @@ public List<RoleTO> children(final Long roleId) {\n \r\n     @Override\r\n     public int count() {\r\n-        return controller.list().size();\r\n+        return controller.count();\r\n     }\r\n \r\n     @Override\r\n@@ -74,12 +73,12 @@ public Response delete(final Long roleId) {\n \r\n     @Override\r\n     public List<RoleTO> list() {\r\n-        return controller.list();\r\n+        return list(1, 25);\r\n     }\r\n \r\n     @Override\r\n     public List<RoleTO> list(final int page, final int size) {\r\n-        throw new ServiceUnavailableException();\r\n+        return controller.list(page, size);\r\n     }\r\n \r\n     @Override\r\n@@ -94,7 +93,7 @@ public RoleTO read(final Long roleId) {\n \r\n     @Override\r\n     public List<RoleTO> search(final NodeCond searchCondition) throws InvalidSearchConditionException {\r\n-        return controller.search(searchCondition);\r\n+        return controller.search(searchCondition, 1, 25);\r\n     }\r\n \r\n     @Override\r"},{"sha":"548ce78f6dcf8ea751ace7c7906a3d9bd9bfa60d","filename":"core/src/main/java/org/apache/syncope/core/services/UserServiceImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FUserServiceImpl.java?ref=c4ae0a7448336ecb8c79fbb2b6d9b8f6625514e9","patch":"@@ -85,7 +85,7 @@ public Response delete(final Long userId) {\n \n     @Override\n     public List<UserTO> list() {\n-        return controller.list();\n+        return list(1, 25);\n     }\n \n     @Override\n@@ -100,7 +100,7 @@ public UserTO read(final Long userId) {\n \n     @Override\n     public List<UserTO> search(final NodeCond searchCondition) throws InvalidSearchConditionException {\n-        return controller.search(searchCondition);\n+        return controller.search(searchCondition, 1, 25);\n     }\n \n     @Override"}]}