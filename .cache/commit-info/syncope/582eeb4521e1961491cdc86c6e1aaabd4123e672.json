{"sha":"582eeb4521e1961491cdc86c6e1aaabd4123e672","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjU4MmVlYjQ1MjFlMTk2MTQ5MWNkYzg2YzZlMWFhYWJkNDEyM2U2NzI=","commit":{"author":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2015-05-29T10:50:53Z"},"committer":{"name":"giacomolm","email":"giacomolm@hotmail.it","date":"2015-05-29T10:50:53Z"},"message":"[SYNCOPE-660] Merge from 1_2_X - replacing wrong packages","tree":{"sha":"aec9cc9f44c8c126927b0b91c9ff0b450be7b3f6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/aec9cc9f44c8c126927b0b91c9ff0b450be7b3f6"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/582eeb4521e1961491cdc86c6e1aaabd4123e672","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/582eeb4521e1961491cdc86c6e1aaabd4123e672","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/582eeb4521e1961491cdc86c6e1aaabd4123e672","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/582eeb4521e1961491cdc86c6e1aaabd4123e672/comments","author":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"committer":{"login":"giacomolm","id":4027829,"node_id":"MDQ6VXNlcjQwMjc4Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4027829?v=4","gravatar_id":"","url":"https://api.github.com/users/giacomolm","html_url":"https://github.com/giacomolm","followers_url":"https://api.github.com/users/giacomolm/followers","following_url":"https://api.github.com/users/giacomolm/following{/other_user}","gists_url":"https://api.github.com/users/giacomolm/gists{/gist_id}","starred_url":"https://api.github.com/users/giacomolm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giacomolm/subscriptions","organizations_url":"https://api.github.com/users/giacomolm/orgs","repos_url":"https://api.github.com/users/giacomolm/repos","events_url":"https://api.github.com/users/giacomolm/events{/privacy}","received_events_url":"https://api.github.com/users/giacomolm/received_events","type":"User","site_admin":false},"parents":[{"sha":"34a0422aec960f6e9bb459e69e8453bd8bf21b6f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/34a0422aec960f6e9bb459e69e8453bd8bf21b6f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/34a0422aec960f6e9bb459e69e8453bd8bf21b6f"}],"stats":{"total":351,"additions":158,"deletions":193},"files":[{"sha":"ff32fef858bc9dcc3e4d6e01e01156ce24dd0169","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/Reports.java","status":"modified","additions":35,"deletions":36,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/582eeb4521e1961491cdc86c6e1aaabd4123e672/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReports.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/582eeb4521e1961491cdc86c6e1aaabd4123e672/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReports.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FReports.java?ref=582eeb4521e1961491cdc86c6e1aaabd4123e672","patch":"@@ -16,31 +16,30 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.console.pages;\n+package org.apache.syncope.client.console.pages;\n \n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n-import java.util.Map;\n-import org.apache.syncope.common.to.EventCategoryTO;\n-import org.apache.syncope.common.to.ReportTO;\n-import org.apache.syncope.common.types.AuditElements.Result;\n-import org.apache.syncope.common.types.AuditLoggerName;\n-import org.apache.syncope.common.util.LoggerEventUtils;\n-import org.apache.syncope.common.SyncopeClientException;\n-import org.apache.syncope.console.commons.Constants;\n-import org.apache.syncope.console.commons.PreferenceManager;\n-import org.apache.syncope.console.commons.SortableDataProviderComparator;\n-import org.apache.syncope.console.pages.panels.LoggerCategoryPanel;\n-import org.apache.syncope.console.pages.panels.SelectedEventsPanel;\n-import org.apache.syncope.console.rest.LoggerRestClient;\n-import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n-import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n-import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n-import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.JobColumn;\n-import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.commons.PreferenceManager;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.panels.LoggerCategoryPanel;\n+import org.apache.syncope.client.console.panels.SelectedEventsPanel;\n+import org.apache.syncope.client.console.rest.LoggerRestClient;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.JobColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.EventCategoryTO;\n+import org.apache.syncope.common.lib.to.ReportTO;\n+import org.apache.syncope.common.lib.types.AuditElements.Result;\n+import org.apache.syncope.common.lib.types.AuditLoggerName;\n import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -116,8 +115,8 @@ private void setupReport() {\n \n         paginatorRows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_REPORT_PAGINATOR_ROWS);\n \n-        List<IColumn<ReportTO, String>> columns = new ArrayList<IColumn<ReportTO, String>>();\n-        columns.add(new PropertyColumn<ReportTO, String>(new ResourceModel(\"id\"), \"id\", \"id\"));\n+        List<IColumn<ReportTO, String>> columns = new ArrayList<>();\n+        columns.add(new PropertyColumn<ReportTO, String>(new ResourceModel(\"key\"), \"key\", \"key\"));\n         columns.add(new PropertyColumn<ReportTO, String>(new ResourceModel(\"name\"), \"name\", \"name\"));\n         columns.add(new DatePropertyColumn<ReportTO>(new ResourceModel(\"lastExec\"), \"lastExec\", \"lastExec\"));\n         columns.add(new DatePropertyColumn<ReportTO>(new ResourceModel(\"nextExec\"), \"nextExec\", \"nextExec\"));\n@@ -166,7 +165,7 @@ public Page createPage() {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n-                            reportRestClient.startExecution(reportTO.getId());\n+                            reportRestClient.startExecution(reportTO.getKey());\n                             getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n                         } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());\n@@ -184,7 +183,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n-                            reportRestClient.delete(reportTO.getId());\n+                            reportRestClient.delete(reportTO.getKey());\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n                         } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());\n@@ -218,8 +217,7 @@ public void onClick(final AjaxRequestTarget target) {\n         });\n \n         final AjaxFallbackDefaultDataTable<ReportTO, String> reportTable =\n-                new AjaxFallbackDefaultDataTable<ReportTO, String>(\n-                        \"reportTable\", columns, new ReportProvider(), paginatorRows);\n+                new AjaxFallbackDefaultDataTable<>(\"reportTable\", columns, new ReportProvider(), paginatorRows);\n \n         reportContainer.add(reportTable);\n         reportContainer.setOutputMarkupId(true);\n@@ -253,7 +251,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         paginatorForm.add(rowsChooser);\n         add(paginatorForm);\n \n-        AjaxLink createLink = new ClearIndicatingAjaxLink(\"createLink\", getPageReference()) {\n+        AjaxLink<Void> createLink = new ClearIndicatingAjaxLink<Void>(\"createLink\", getPageReference()) {\n \n             private static final long serialVersionUID = -7978723352517770644L;\n \n@@ -291,19 +289,19 @@ private void setupAudit() {\n         final Form form = new Form(\"auditForm\");\n         auditContainer.add(form);\n \n-        final List<String> events = new ArrayList<String>();\n+        final List<String> events = new ArrayList<>();\n \n         final List<AuditLoggerName> audits = loggerRestClient.listAudits();\n         for (AuditLoggerName audit : audits) {\n-            events.add(LoggerEventUtils.buildEvent(\n+            events.add(AuditLoggerName.buildEvent(\n                     audit.getType(),\n                     audit.getCategory(),\n                     audit.getSubcategory(),\n                     audit.getEvent(),\n                     audit.getResult()));\n         }\n \n-        final ListModel<String> model = new ListModel<String>(new ArrayList<String>(events));\n+        final ListModel<String> model = new ListModel<>(new ArrayList<>(events));\n \n         form.add(new LoggerCategoryPanel(\n                 \"events\", loggerRestClient.listEvents(), model, getPageReference(), \"Reports\") {\n@@ -334,8 +332,8 @@ public void onEventAction(final IEvent<?> event) {\n \n                             for (String toBeRemoved : eventSelectionChanged.getToBeRemoved()) {\n                                 if (events.contains(toBeRemoved)) {\n-                                    final Map.Entry<EventCategoryTO, Result> eventCategory =\n-                                    LoggerEventUtils.parseEventCategory(toBeRemoved);\n+                                    Pair<EventCategoryTO, Result> eventCategory =\n+                                    AuditLoggerName.parseEventCategory(toBeRemoved);\n \n                                     final AuditLoggerName auditLoggerName = new AuditLoggerName(\n                                             eventCategory.getKey().getType(),\n@@ -352,8 +350,8 @@ public void onEventAction(final IEvent<?> event) {\n \n                             for (String toBeAdded : eventSelectionChanged.getToBeAdded()) {\n                                 if (!events.contains(toBeAdded)) {\n-                                    final Map.Entry<EventCategoryTO, Result> eventCategory =\n-                                    LoggerEventUtils.parseEventCategory(toBeAdded);\n+                                    Pair<EventCategoryTO, Result> eventCategory =\n+                                    AuditLoggerName.parseEventCategory(toBeAdded);\n \n                                     final AuditLoggerName auditLoggerName = new AuditLoggerName(\n                                             eventCategory.getKey().getType(),\n@@ -382,8 +380,8 @@ public ReportProvider() {\n             super();\n \n             //Default sorting\n-            setSort(\"id\", SortOrder.ASCENDING);\n-            comparator = new SortableDataProviderComparator<ReportTO>(this);\n+            setSort(\"key\", SortOrder.ASCENDING);\n+            comparator = new SortableDataProviderComparator<>(this);\n         }\n \n         @Override\n@@ -415,6 +413,7 @@ public ReportTO getObject() {\n             };\n         }\n     }\n+\n     /**\n      * IndicatorMarkupId behaviour is embedded in Reports.html\n      */"},{"sha":"df2a87f7cab426682cdb9575b1e48411ad7ccd99","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/pages/Tasks.java","status":"modified","additions":21,"deletions":21,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/582eeb4521e1961491cdc86c6e1aaabd4123e672/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/582eeb4521e1961491cdc86c6e1aaabd4123e672/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FTasks.java?ref=582eeb4521e1961491cdc86c6e1aaabd4123e672","patch":"@@ -16,27 +16,27 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.console.pages;\n+package org.apache.syncope.client.console.pages;\n \n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.Iterator;\n import java.util.List;\n-import org.apache.syncope.common.to.SchedTaskTO;\n-import org.apache.syncope.common.to.TaskExecTO;\n-import org.apache.syncope.common.to.AbstractTaskTO;\n-import org.apache.syncope.console.commons.SortableDataProviderComparator;\n-import org.apache.syncope.console.pages.panels.AjaxDataTablePanel;\n-import org.apache.syncope.console.pages.panels.NotificationTasks;\n-import org.apache.syncope.console.pages.panels.PropagationTasks;\n-import org.apache.syncope.console.pages.panels.SchedTasks;\n-import org.apache.syncope.console.pages.panels.PushTasksPanel;\n-import org.apache.syncope.console.pages.panels.SyncTasksPanel;\n-import org.apache.syncope.console.rest.BaseRestClient;\n-import org.apache.syncope.console.rest.TaskRestClient;\n-import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n+import org.apache.syncope.client.console.panels.AjaxDataTablePanel;\n+import org.apache.syncope.client.console.panels.NotificationTasks;\n+import org.apache.syncope.client.console.panels.PropagationTasks;\n+import org.apache.syncope.client.console.panels.PushTasksPanel;\n+import org.apache.syncope.client.console.panels.SchedTasks;\n+import org.apache.syncope.client.console.panels.SyncTasksPanel;\n+import org.apache.syncope.client.console.rest.BaseRestClient;\n+import org.apache.syncope.client.console.rest.TaskRestClient;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.common.lib.to.AbstractTaskTO;\n+import org.apache.syncope.common.lib.to.SchedTaskTO;\n+import org.apache.syncope.common.lib.to.TaskExecTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.extensions.markup.html.repeater.data.sort.SortOrder;\n@@ -141,8 +141,8 @@ public TasksProvider(\n             super();\n \n             //Default sorting\n-            setSort(\"id\", SortOrder.DESCENDING);\n-            comparator = new SortableDataProviderComparator<T>(this);\n+            setSort(\"key\", SortOrder.DESCENDING);\n+            comparator = new SortableDataProviderComparator<>(this);\n             this.paginatorRows = paginatorRows;\n             this.restClient = restClient;\n             this.id = id;\n@@ -151,7 +151,7 @@ public TasksProvider(\n \n         @Override\n         public Iterator<T> iterator(final long first, final long count) {\n-            final List<T> tasks = new ArrayList<T>();\n+            final List<T> tasks = new ArrayList<>();\n \n             final int page = ((int) first / paginatorRows);\n \n@@ -184,7 +184,7 @@ public long size() {\n \n         @Override\n         public IModel<T> model(final T object) {\n-            return new CompoundPropertyModel<T>(object);\n+            return new CompoundPropertyModel<>(object);\n         }\n     }\n \n@@ -208,15 +208,15 @@ public static AjaxDataTablePanel<AbstractTaskTO, String> updateTaskTable(\n             final BaseRestClient restClient) {\n \n         @SuppressWarnings(\"unchecked\")\n-        final AjaxDataTablePanel<AbstractTaskTO, String> table = new AjaxDataTablePanel<AbstractTaskTO, String>(\n+        final AjaxDataTablePanel<AbstractTaskTO, String> table = new AjaxDataTablePanel<>(\n                 \"datatable\",\n                 columns,\n                 (ISortableDataProvider<AbstractTaskTO, String>) dataProvider,\n                 dataProvider.paginatorRows,\n                 Arrays.asList(new ActionLink.ActionType[] {\n                     ActionLink.ActionType.DELETE, ActionLink.ActionType.DRYRUN, ActionLink.ActionType.EXECUTE }),\n                 restClient,\n-                \"id\",\n+                \"key\",\n                 TASKS,\n                 pageRef);\n \n@@ -232,8 +232,8 @@ public static AjaxDataTablePanel<AbstractTaskTO, String> updateTaskTable(\n      * IndicatorMarkupId behaviour is embedded in Tasks.html\n      */\n     @Override\n+\n     public String getAjaxIndicatorMarkupId() {\n         return \"\";\n     }\n-\n }"},{"sha":"6449450d70e493e59ae2d88cb24d4c81905efee2","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/NotificationTasks.java","status":"modified","additions":17,"deletions":18,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/582eeb4521e1961491cdc86c6e1aaabd4123e672/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/582eeb4521e1961491cdc86c6e1aaabd4123e672/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FNotificationTasks.java?ref=582eeb4521e1961491cdc86c6e1aaabd4123e672","patch":"@@ -16,21 +16,21 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.console.pages.panels;\n+package org.apache.syncope.client.console.panels;\n \n import java.util.ArrayList;\n import java.util.List;\n-import org.apache.syncope.common.to.NotificationTaskTO;\n-import org.apache.syncope.common.to.AbstractTaskTO;\n-import org.apache.syncope.common.SyncopeClientException;\n-import org.apache.syncope.console.commons.Constants;\n-import org.apache.syncope.console.pages.NotificationTaskModalPage;\n-import org.apache.syncope.console.pages.Tasks;\n-import org.apache.syncope.console.pages.Tasks.TasksProvider;\n-import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n-import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.JobColumn;\n-import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.NotificationTaskModalPage;\n+import org.apache.syncope.client.console.pages.Tasks;\n+import org.apache.syncope.client.console.pages.Tasks.TasksProvider;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.JobColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AbstractTaskTO;\n+import org.apache.syncope.common.lib.to.NotificationTaskTO;\n import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n@@ -138,10 +138,10 @@ protected void onUpdate(final AjaxRequestTarget target) {\n     }\n \n     private List<IColumn<AbstractTaskTO, String>> getColumns() {\n-        final List<IColumn<AbstractTaskTO, String>> columns = new ArrayList<IColumn<AbstractTaskTO, String>>();\n+        final List<IColumn<AbstractTaskTO, String>> columns = new ArrayList<>();\n \n         columns.add(new PropertyColumn<AbstractTaskTO, String>(\n-                new StringResourceModel(\"id\", this, null), \"id\", \"id\"));\n+                new StringResourceModel(\"key\", this, null), \"key\", \"key\"));\n         columns.add(new PropertyColumn<AbstractTaskTO, String>(\n                 new StringResourceModel(\"sender\", this, null), \"sender\", \"sender\"));\n         columns.add(new PropertyColumn<AbstractTaskTO, String>(\n@@ -152,9 +152,8 @@ private List<IColumn<AbstractTaskTO, String>> getColumns() {\n                 new StringResourceModel(\"traceLevel\", this, null), \"traceLevel\", \"traceLevel\"));\n         columns.add(new PropertyColumn<AbstractTaskTO, String>(\n                 new StringResourceModel(\"latestExecStatus\", this, null), \"latestExecStatus\", \"latestExecStatus\"));\n-\n         columns.add(new JobColumn<AbstractTaskTO, String>(new StringResourceModel(\"\", this, null, \"\"), \"runtime\",\n-                pageRef, restClient)); \n+                pageRef, restClient));\n \n         columns.add(new ActionColumn<AbstractTaskTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n \n@@ -195,7 +194,7 @@ public Page createPage() {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n-                            restClient.startExecution(taskTO.getId(), false);\n+                            restClient.startExecution(taskTO.getKey(), false);\n                             getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n                         } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());\n@@ -213,7 +212,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n-                            restClient.delete(taskTO.getId(), NotificationTaskTO.class);\n+                            restClient.delete(taskTO.getKey(), NotificationTaskTO.class);\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n                         } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());"},{"sha":"ba15f5d33933bdbc631dcaa4d916d1c9052f46e5","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/RuntimePanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/582eeb4521e1961491cdc86c6e1aaabd4123e672/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRuntimePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/582eeb4521e1961491cdc86c6e1aaabd4123e672/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRuntimePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FRuntimePanel.java?ref=582eeb4521e1961491cdc86c6e1aaabd4123e672","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.client.console.panels;\n \n import org.apache.syncope.client.console.rest.JobRestClient;\n-import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AbstractAjaxTimerBehavior;\n import org.apache.wicket.ajax.AjaxRequestTarget;"},{"sha":"9a64c83c89c03a2c749ab147afd24ec30fa85aaf","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/SchedTasks.java","status":"modified","additions":19,"deletions":22,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/582eeb4521e1961491cdc86c6e1aaabd4123e672/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchedTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/582eeb4521e1961491cdc86c6e1aaabd4123e672/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchedTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSchedTasks.java?ref=582eeb4521e1961491cdc86c6e1aaabd4123e672","patch":"@@ -16,25 +16,23 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.console.pages.panels;\n-\n-import static org.apache.syncope.console.pages.panels.AbstractTasks.TASKS;\n+package org.apache.syncope.client.console.panels;\n \n import java.util.ArrayList;\n import java.util.List;\n-import org.apache.syncope.common.to.SchedTaskTO;\n-import org.apache.syncope.common.to.AbstractTaskTO;\n-import org.apache.syncope.common.SyncopeClientException;\n-import org.apache.syncope.console.commons.Constants;\n-import org.apache.syncope.console.pages.SchedTaskModalPage;\n-import org.apache.syncope.console.pages.Tasks;\n-import org.apache.syncope.console.pages.Tasks.TasksProvider;\n-import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n-import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n-import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n-import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.JobColumn;\n-import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.SchedTaskModalPage;\n+import org.apache.syncope.client.console.pages.Tasks;\n+import org.apache.syncope.client.console.pages.Tasks.TasksProvider;\n+import org.apache.syncope.client.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.JobColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AbstractTaskTO;\n+import org.apache.syncope.common.lib.to.SchedTaskTO;\n import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n@@ -156,7 +154,7 @@ private List<IColumn<AbstractTaskTO, String>> getColumns() {\n         final List<IColumn<AbstractTaskTO, String>> columns = new ArrayList<IColumn<AbstractTaskTO, String>>();\n \n         columns.add(new PropertyColumn<AbstractTaskTO, String>(\n-                new StringResourceModel(\"id\", this, null), \"id\", \"id\"));\n+                new StringResourceModel(\"key\", this, null), \"key\", \"key\"));\n         columns.add(new PropertyColumn<AbstractTaskTO, String>(\n                 new StringResourceModel(\"name\", this, null), \"name\", \"name\"));\n         columns.add(new PropertyColumn<AbstractTaskTO, String>(\n@@ -169,9 +167,8 @@ private List<IColumn<AbstractTaskTO, String>> getColumns() {\n                 new StringResourceModel(\"nextExec\", this, null), \"nextExec\", \"nextExec\"));\n         columns.add(new PropertyColumn<AbstractTaskTO, String>(\n                 new StringResourceModel(\"latestExecStatus\", this, null), \"latestExecStatus\", \"latestExecStatus\"));\n-\n         columns.add(new JobColumn<AbstractTaskTO, String>(new StringResourceModel(\"\", this, null, \"\"), \"runtime\",\n-                pageRef, restClient)); \n+                pageRef, restClient));\n \n         columns.add(new ActionColumn<AbstractTaskTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n \n@@ -211,7 +208,7 @@ public Page createPage() {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n-                            restClient.startExecution(taskTO.getId(), false);\n+                            restClient.startExecution(taskTO.getKey(), false);\n                             getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n                         } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());\n@@ -229,7 +226,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n-                            restClient.startExecution(taskTO.getId(), true);\n+                            restClient.startExecution(taskTO.getKey(), true);\n                             getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n                         } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());\n@@ -247,7 +244,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     @Override\n                     public void onClick(final AjaxRequestTarget target) {\n                         try {\n-                            restClient.delete(taskTO.getId(), SchedTaskTO.class);\n+                            restClient.delete(taskTO.getKey(), SchedTaskTO.class);\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n                         } catch (SyncopeClientException scce) {\n                             error(scce.getMessage());"},{"sha":"50d91df1397e6f81e8d3516993b8d0cf82b6a3f7","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/panels/SyncTasksPanel.java","status":"modified","additions":24,"deletions":25,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/582eeb4521e1961491cdc86c6e1aaabd4123e672/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSyncTasksPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/582eeb4521e1961491cdc86c6e1aaabd4123e672/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSyncTasksPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSyncTasksPanel.java?ref=582eeb4521e1961491cdc86c6e1aaabd4123e672","patch":"@@ -16,22 +16,22 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.console.pages.panels;\n+package org.apache.syncope.client.console.panels;\n \n import java.util.ArrayList;\n import java.util.List;\n-import org.apache.syncope.common.SyncopeClientException;\n-import org.apache.syncope.common.to.AbstractTaskTO;\n-import org.apache.syncope.common.to.SyncTaskTO;\n-import org.apache.syncope.console.commons.Constants;\n-import org.apache.syncope.console.pages.RoleTemplateModalPage;\n-import org.apache.syncope.console.pages.SyncTaskModalPage;\n-import org.apache.syncope.console.pages.UserTemplateModalPage;\n-import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n-import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n-import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.JobColumn;\n-import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n-import org.apache.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.client.console.commons.Constants;\n+import org.apache.syncope.client.console.pages.GroupTemplateModalPage;\n+import org.apache.syncope.client.console.pages.SyncTaskModalPage;\n+import org.apache.syncope.client.console.pages.UserTemplateModalPage;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n+import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.JobColumn;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n+import org.apache.syncope.client.console.wicket.markup.html.form.ActionLinksPanel;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.AbstractTaskTO;\n+import org.apache.syncope.common.lib.to.SyncTaskTO;\n import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageReference;\n@@ -43,7 +43,7 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.StringResourceModel;\n \n-public class SyncTasksPanel extends AbstractSyncTasksPanel<SyncTaskTO> {\n+public class SyncTasksPanel extends AbstractProvisioningTasksPanel<SyncTaskTO> {\n \n     private static final long serialVersionUID = 53189199346016099L;\n \n@@ -54,10 +54,10 @@ public SyncTasksPanel(final String id, final PageReference pageRef) {\n \n     @Override\n     protected List<IColumn<AbstractTaskTO, String>> getColumns() {\n-        final List<IColumn<AbstractTaskTO, String>> syncTaskscolumns = new ArrayList<IColumn<AbstractTaskTO, String>>();\n+        final List<IColumn<AbstractTaskTO, String>> syncTaskscolumns = new ArrayList<>();\n \n         syncTaskscolumns.add(new PropertyColumn<AbstractTaskTO, String>(\n-                new StringResourceModel(\"id\", this, null), \"id\", \"id\"));\n+                new StringResourceModel(\"key\", this, null), \"key\", \"key\"));\n         syncTaskscolumns.add(new PropertyColumn<AbstractTaskTO, String>(\n                 new StringResourceModel(\"name\", this, null), \"name\", \"name\"));\n         syncTaskscolumns.add(new PropertyColumn<AbstractTaskTO, String>(\n@@ -70,9 +70,8 @@ protected List<IColumn<AbstractTaskTO, String>> getColumns() {\n                 new StringResourceModel(\"nextExec\", this, null), \"nextExec\", \"nextExec\"));\n         syncTaskscolumns.add(new PropertyColumn<AbstractTaskTO, String>(\n                 new StringResourceModel(\"latestExecStatus\", this, null), \"latestExecStatus\", \"latestExecStatus\"));\n-        \n-        syncTaskscolumns.add(new JobColumn<AbstractTaskTO, String>(new StringResourceModel(\"\", this, null, \"\"), \"runtime\",\n-                pageRef, restClient));        \n+        syncTaskscolumns.add(new JobColumn<AbstractTaskTO, String>(new StringResourceModel(\"\", this, null, \"\"),\n+                \"runtime\", pageRef, restClient));\n \n         syncTaskscolumns.add(\n                 new ActionColumn<AbstractTaskTO, String>(new StringResourceModel(\"actions\", this, null, \"\")) {\n@@ -141,13 +140,13 @@ public void onClick(final AjaxRequestTarget target) {\n \n                                     @Override\n                                     public Page createPage() {\n-                                        return new RoleTemplateModalPage(pageRef, window, taskTO);\n+                                        return new GroupTemplateModalPage(pageRef, window, taskTO);\n                                     }\n                                 });\n \n                                 window.show(target);\n                             }\n-                        }, ActionLink.ActionType.ROLE_TEMPLATE, TASKS);\n+                        }, ActionLink.ActionType.GROUP_TEMPLATE, TASKS);\n \n                         panel.add(new ActionLink() {\n \n@@ -156,7 +155,7 @@ public Page createPage() {\n                             @Override\n                             public void onClick(final AjaxRequestTarget target) {\n                                 try {\n-                                    restClient.startExecution(taskTO.getId(), false);\n+                                    restClient.startExecution(taskTO.getKey(), false);\n                                     getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n                                 } catch (SyncopeClientException scce) {\n                                     error(scce.getMessage());\n@@ -174,7 +173,7 @@ public void onClick(final AjaxRequestTarget target) {\n                             @Override\n                             public void onClick(final AjaxRequestTarget target) {\n                                 try {\n-                                    restClient.startExecution(taskTO.getId(), true);\n+                                    restClient.startExecution(taskTO.getKey(), true);\n                                     getSession().info(getString(Constants.OPERATION_SUCCEEDED));\n                                 } catch (SyncopeClientException scce) {\n                                     error(scce.getMessage());\n@@ -192,7 +191,7 @@ public void onClick(final AjaxRequestTarget target) {\n                             @Override\n                             public void onClick(final AjaxRequestTarget target) {\n                                 try {\n-                                    restClient.delete(taskTO.getId(), SyncTaskTO.class);\n+                                    restClient.delete(taskTO.getKey(), SyncTaskTO.class);\n                                     info(getString(Constants.OPERATION_SUCCEEDED));\n                                 } catch (SyncopeClientException scce) {\n                                     error(scce.getMessage());\n@@ -206,7 +205,7 @@ public void onClick(final AjaxRequestTarget target) {\n                     }\n \n                     @Override\n-                    public Component getHeader(String componentId) {\n+                    public Component getHeader(final String componentId) {\n                         final ActionLinksPanel panel = new ActionLinksPanel(componentId, new Model(), pageRef);\n \n                         panel.add(new ActionLink() {"},{"sha":"5cfe83f625ed2da518297fc4f46e2d73917ee874","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/ReportRestClient.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/582eeb4521e1961491cdc86c6e1aaabd4123e672/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/582eeb4521e1961491cdc86c6e1aaabd4123e672/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FReportRestClient.java?ref=582eeb4521e1961491cdc86c6e1aaabd4123e672","patch":"@@ -16,19 +16,18 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.console.rest;\n+package org.apache.syncope.client.console.rest;\n \n import java.util.ArrayList;\n import java.util.List;\n import javax.ws.rs.core.Response;\n-import org.apache.syncope.common.services.ReportService;\n-import org.apache.syncope.common.to.ReportTO;\n-import org.apache.syncope.common.types.ReportExecExportFormat;\n-import org.apache.syncope.common.SyncopeClientException;\n-import org.apache.syncope.common.to.ReportExecTO;\n-import org.apache.syncope.common.types.JobAction;\n-import org.apache.syncope.common.types.JobStatusType;\n-import org.apache.syncope.common.wrap.ReportletConfClass;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.to.ReportTO;\n+import org.apache.syncope.common.lib.types.ReportExecExportFormat;\n+import org.apache.syncope.common.lib.wrap.ReportletConfClass;\n+import org.apache.syncope.common.lib.types.JobAction;\n+import org.apache.syncope.common.lib.types.JobStatusType;\n+import org.apache.syncope.common.rest.api.service.ReportService;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n import org.springframework.stereotype.Component;\n \n@@ -73,7 +72,7 @@ public void create(final ReportTO reportTO) {\n     }\n \n     public void update(final ReportTO reportTO) {\n-        getService(ReportService.class).update(reportTO.getId(), reportTO);\n+        getService(ReportService.class).update(reportTO.getKey(), reportTO);\n     }\n \n     /**\n@@ -108,7 +107,8 @@ public void deleteExecution(final long reportExecId) {\n     public Response exportExecutionResult(final Long executionId, final ReportExecExportFormat fmt) {\n         return getService(ReportService.class).exportExecutionResult(executionId, fmt);\n     }\n-\n+    \n+    \n     @Override\n     public boolean isJobRunning(final long reportId) {\n         for (ReportExecTO reportExecTO : getService(ReportService.class).listJobs(JobStatusType.RUNNING)) {"},{"sha":"2b09630fad9c7b567402f42560ee9c640ef561bf","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/rest/TaskRestClient.java","status":"modified","additions":28,"deletions":57,"changes":85,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/582eeb4521e1961491cdc86c6e1aaabd4123e672/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/582eeb4521e1961491cdc86c6e1aaabd4123e672/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FTaskRestClient.java?ref=582eeb4521e1961491cdc86c6e1aaabd4123e672","patch":"@@ -16,28 +16,23 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.console.rest;\n+package org.apache.syncope.client.console.rest;\n \n-import java.util.ArrayList;\n import java.util.List;\n-import org.apache.syncope.common.services.TaskService;\n-import org.apache.syncope.common.reqres.BulkAction;\n-import org.apache.syncope.common.reqres.BulkActionResult;\n-import org.apache.syncope.common.wrap.JobClass;\n-import org.apache.syncope.common.to.NotificationTaskTO;\n-import org.apache.syncope.common.to.PropagationTaskTO;\n-import org.apache.syncope.common.to.SchedTaskTO;\n-import org.apache.syncope.common.wrap.SyncActionClass;\n-import org.apache.syncope.common.to.SyncTaskTO;\n-import org.apache.syncope.common.to.AbstractTaskTO;\n-import org.apache.syncope.common.types.TaskType;\n-import org.apache.syncope.common.util.CollectionWrapper;\n-import org.apache.syncope.common.SyncopeClientException;\n-import org.apache.syncope.common.to.PushTaskTO;\n-import org.apache.syncope.common.to.TaskExecTO;\n-import org.apache.syncope.common.types.JobAction;\n-import org.apache.syncope.common.types.JobStatusType;\n-import org.apache.syncope.common.wrap.PushActionClass;\n+import org.apache.syncope.client.console.SyncopeSession;\n+import org.apache.syncope.common.lib.to.AbstractTaskTO;\n+import org.apache.syncope.common.lib.to.BulkAction;\n+import org.apache.syncope.common.lib.to.BulkActionResult;\n+import org.apache.syncope.common.lib.to.NotificationTaskTO;\n+import org.apache.syncope.common.lib.to.PropagationTaskTO;\n+import org.apache.syncope.common.lib.to.PushTaskTO;\n+import org.apache.syncope.common.lib.to.SchedTaskTO;\n+import org.apache.syncope.common.lib.to.SyncTaskTO;\n+import org.apache.syncope.common.lib.types.TaskType;\n+import org.apache.syncope.common.lib.to.TaskExecTO;\n+import org.apache.syncope.common.lib.types.JobAction;\n+import org.apache.syncope.common.lib.types.JobStatusType;\n+import org.apache.syncope.common.rest.api.service.TaskService;\n import org.apache.wicket.extensions.markup.html.repeater.util.SortParam;\n import org.springframework.stereotype.Component;\n \n@@ -49,42 +44,16 @@ public class TaskRestClient extends JobRestClient implements ExecutionRestClient\n \n     private static final long serialVersionUID = 6284485820911028843L;\n \n-    /**\n-     * Return a list of job classes.\n-     *\n-     * @return list of classes.\n-     */\n     public List<String> getJobClasses() {\n-        List<JobClass> jobClasses = null;\n-\n-        try {\n-            jobClasses = new ArrayList<JobClass>(getService(TaskService.class).getJobClasses());\n-        } catch (SyncopeClientException e) {\n-            LOG.error(\"While getting all job classes\", e);\n-        }\n-        return CollectionWrapper.unwrap(jobClasses);\n+        return SyncopeSession.get().getSyncopeTO().getTaskJobs();\n     }\n \n     public List<String> getSyncActionsClasses() {\n-        List<SyncActionClass> actions = null;\n-\n-        try {\n-            actions = new ArrayList<SyncActionClass>(getService(TaskService.class).getSyncActionsClasses());\n-        } catch (SyncopeClientException e) {\n-            LOG.error(\"While getting all sync actions classes\", e);\n-        }\n-        return CollectionWrapper.unwrap(actions);\n+        return SyncopeSession.get().getSyncopeTO().getSyncActions();\n     }\n \n     public List<String> getPushActionsClasses() {\n-        List<PushActionClass> actions = null;\n-\n-        try {\n-            actions = new ArrayList<PushActionClass>(getService(TaskService.class).getPushActionsClasses());\n-        } catch (SyncopeClientException e) {\n-            LOG.error(\"While getting all sync actions classes\", e);\n-        }\n-        return CollectionWrapper.unwrap(actions);\n+        return SyncopeSession.get().getSyncopeTO().getPushActions();\n     }\n \n     /**\n@@ -160,27 +129,29 @@ public void createSchedTask(final SchedTaskTO taskTO) {\n     }\n \n     public void updateSchedTask(final SchedTaskTO taskTO) {\n-        getService(TaskService.class).update(taskTO.getId(), taskTO);\n+        getService(TaskService.class).update(taskTO.getKey(), taskTO);\n     }\n \n     public void updateSyncTask(final SyncTaskTO taskTO) {\n-        getService(TaskService.class).update(taskTO.getId(), taskTO);\n+        getService(TaskService.class).update(taskTO.getKey(), taskTO);\n     }\n \n     public BulkActionResult bulkAction(final BulkAction action) {\n         return getService(TaskService.class).bulk(action);\n     }\n-    \n+\n     @Override\n-    public boolean isJobRunning(final long taskId){\n-        for(TaskExecTO taskExecTO : getService(TaskService.class).listJobs(JobStatusType.RUNNING)){\n-            if(taskExecTO.getTask()== taskId) return true;\n+    public boolean isJobRunning(final long taskId) {\n+        for (TaskExecTO taskExecTO : getService(TaskService.class).listJobs(JobStatusType.RUNNING)) {\n+            if (taskExecTO.getTask() == taskId) {\n+                return true;\n+            }\n         }\n         return false;\n     }\n-    \n+\n     @Override\n-    public void startJob(final long taskId){\n+    public void startJob(final long taskId) {\n         getService(TaskService.class).actionJob(taskId, JobAction.START);\n     }\n "},{"sha":"4cca6bfc2f7c339f422702c721f00258d63240c4","filename":"client/old_console/src/main/java/org/apache/syncope/client/console/wicket/extensions/markup/html/repeater/data/table/JobColumn.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/582eeb4521e1961491cdc86c6e1aaabd4123e672/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FJobColumn.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/582eeb4521e1961491cdc86c6e1aaabd4123e672/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FJobColumn.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fold_console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwicket%2Fextensions%2Fmarkup%2Fhtml%2Frepeater%2Fdata%2Ftable%2FJobColumn.java?ref=582eeb4521e1961491cdc86c6e1aaabd4123e672","patch":"@@ -20,8 +20,8 @@\n \n import org.apache.syncope.client.console.panels.RuntimePanel;\n import org.apache.syncope.client.console.rest.JobRestClient;\n-import org.apache.syncope.common.to.AbstractTaskTO;\n-import org.apache.syncope.common.to.ReportTO;\n+import org.apache.syncope.common.lib.to.AbsractTaskTO;\n+import org.apache.syncope.common.lib.to.ReportTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AbstractAjaxTimerBehavior;\n import org.apache.wicket.ajax.AjaxRequestTarget;"}]}