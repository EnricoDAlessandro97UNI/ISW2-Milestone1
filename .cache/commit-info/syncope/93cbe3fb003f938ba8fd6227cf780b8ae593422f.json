{"sha":"93cbe3fb003f938ba8fd6227cf780b8ae593422f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjkzY2JlM2ZiMDAzZjkzOGJhOGZkNjIyN2NmNzgwYjhhZTU5MzQyMmY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-02-12T08:06:05Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-02-12T08:06:15Z"},"message":"[SYNCOPE-1012] Just a case problem","tree":{"sha":"8b73d6eb6ef9d52b10e79a3889d71609de7ec373","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8b73d6eb6ef9d52b10e79a3889d71609de7ec373"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/93cbe3fb003f938ba8fd6227cf780b8ae593422f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/93cbe3fb003f938ba8fd6227cf780b8ae593422f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/93cbe3fb003f938ba8fd6227cf780b8ae593422f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/93cbe3fb003f938ba8fd6227cf780b8ae593422f/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b766580a60bc548800e85506ef2658bb48c3b460","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b766580a60bc548800e85506ef2658bb48c3b460","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b766580a60bc548800e85506ef2658bb48c3b460"}],"stats":{"total":74,"additions":21,"deletions":53},"files":[{"sha":"d6eab9aa5fedc28e519027cd1350904ee0867e68","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/InfoResource.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cbe3fb003f938ba8fd6227cf780b8ae593422f/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FInfoResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cbe3fb003f938ba8fd6227cf780b8ae593422f/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FInfoResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FInfoResource.java?ref=93cbe3fb003f938ba8fd6227cf780b8ae593422f","patch":"@@ -28,13 +28,9 @@\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.wicket.request.resource.IResource;\n import org.apache.wicket.util.cookies.CookieUtils;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n public class InfoResource extends AbstractBaseResource {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(InfoResource.class);\n-\n     private static final long serialVersionUID = 6453101466981543020L;\n \n     @Override"},{"sha":"4f20d6039b3a7fc2a2cf15c967d94127db849a8b","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/LogoutResource.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cbe3fb003f938ba8fd6227cf780b8ae593422f/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FLogoutResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cbe3fb003f938ba8fd6227cf780b8ae593422f/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FLogoutResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FLogoutResource.java?ref=93cbe3fb003f938ba8fd6227cf780b8ae593422f","patch":"@@ -19,22 +19,18 @@\n package org.apache.syncope.client.enduser.resources;\n \n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n public class LogoutResource extends AbstractBaseResource {\n \n     private static final long serialVersionUID = -648841355644985051L;\n \n-    private static final Logger LOG = LoggerFactory.getLogger(LogoutResource.class);\n-\n     @Override\n     protected ResourceResponse newResourceResponse(final Attributes attributes) {\n \n         LOG.debug(\"Logout from enduser application\");\n-        \n+\n         SyncopeEnduserSession.get().invalidate();\n-        \n+\n         ResourceResponse response = new ResourceResponse();\n         response.setStatusCode(204);\n         return response;"},{"sha":"d812f72fe89435611372648f78f8db94ae46b776","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/SecurityQuestionResource.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cbe3fb003f938ba8fd6227cf780b8ae593422f/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSecurityQuestionResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cbe3fb003f938ba8fd6227cf780b8ae593422f/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSecurityQuestionResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FSecurityQuestionResource.java?ref=93cbe3fb003f938ba8fd6227cf780b8ae593422f","patch":"@@ -31,13 +31,9 @@\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n import org.apache.wicket.util.string.StringValue;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n public class SecurityQuestionResource extends AbstractBaseResource {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(SecurityQuestionResource.class);\n-\n     private static final long serialVersionUID = 6453101466981543020L;\n \n     private final SecurityQuestionService securityQuestionService;\n@@ -48,7 +44,6 @@ public SecurityQuestionResource() {\n \n     @Override\n     protected AbstractResource.ResourceResponse newResourceResponse(final IResource.Attributes attributes) {\n-\n         LOG.debug(\"List available security questions\");\n \n         AbstractResource.ResourceResponse response = new AbstractResource.ResourceResponse();"},{"sha":"b4ed2a2cbf4fee2690d332ec1adf5c2ab20914ae","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfChangePassword.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cbe3fb003f938ba8fd6227cf780b8ae593422f/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfChangePassword.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cbe3fb003f938ba8fd6227cf780b8ae593422f/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfChangePassword.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfChangePassword.java?ref=93cbe3fb003f938ba8fd6227cf780b8ae593422f","patch":"@@ -27,15 +27,11 @@\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n public class UserSelfChangePassword extends AbstractBaseResource {\n \n     private static final long serialVersionUID = -2721621682300247583L;\n \n-    private static final Logger LOG = LoggerFactory.getLogger(UserSelfChangePassword.class);\n-\n     private final UserSelfService userSelfService;\n \n     public UserSelfChangePassword() {\n@@ -44,7 +40,6 @@ public UserSelfChangePassword() {\n \n     @Override\n     protected ResourceResponse newResourceResponse(final IResource.Attributes attributes) {\n-\n         AbstractResource.ResourceResponse response = new AbstractResource.ResourceResponse();\n \n         try {"},{"sha":"da36e475667cc3172aeb1d5c883737d19d13f9b0","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfConfirmPasswordReset.java","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cbe3fb003f938ba8fd6227cf780b8ae593422f/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfConfirmPasswordReset.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cbe3fb003f938ba8fd6227cf780b8ae593422f/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfConfirmPasswordReset.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfConfirmPasswordReset.java?ref=93cbe3fb003f938ba8fd6227cf780b8ae593422f","patch":"@@ -27,15 +27,11 @@\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n public class UserSelfConfirmPasswordReset extends AbstractBaseResource {\n \n     private static final long serialVersionUID = -2721621682300247583L;\n \n-    private static final Logger LOG = LoggerFactory.getLogger(UserSelfConfirmPasswordReset.class);\n-\n     private final UserSelfService userSelfService;\n \n     public UserSelfConfirmPasswordReset() {\n@@ -44,7 +40,6 @@ public UserSelfConfirmPasswordReset() {\n \n     @Override\n     protected ResourceResponse newResourceResponse(final IResource.Attributes attributes) {\n-\n         AbstractResource.ResourceResponse response = new AbstractResource.ResourceResponse();\n \n         try {"},{"sha":"447698905d655b5cb7f86f67087571c89479ef5a","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfCreateResource.java","status":"modified","additions":6,"deletions":10,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cbe3fb003f938ba8fd6227cf780b8ae593422f/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cbe3fb003f938ba8fd6227cf780b8ae593422f/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfCreateResource.java?ref=93cbe3fb003f938ba8fd6227cf780b8ae593422f","patch":"@@ -38,15 +38,11 @@\n import org.apache.syncope.common.lib.to.PlainSchemaTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n public class UserSelfCreateResource extends AbstractBaseResource {\n \n     private static final long serialVersionUID = -2721621682300247583L;\n \n-    private static final Logger LOG = LoggerFactory.getLogger(UserSelfCreateResource.class);\n-\n     private final UserSelfService userSelfService;\n \n     public UserSelfCreateResource() {\n@@ -190,9 +186,9 @@ public void writeData(final Attributes attributes) throws IOException {\n                         attributes.getResponse().write(res.getStatusInfo().getFamily().equals(\n                                 Response.Status.Family.SUCCESSFUL)\n                                         ? responseMessage.append(\"User: \").append(userTO.getUsername()).append(\n-                                        \" successfully created\")\n+                                                \" successfully created\")\n                                         : new StringBuilder().append(\"ErrorMessage{{ \").\n-                                        append(res.getStatusInfo().getReasonPhrase()).append(\" }}\"));\n+                                                append(res.getStatusInfo().getReasonPhrase()).append(\" }}\"));\n                     }\n                 });\n                 response.setStatusCode(res.getStatus());\n@@ -207,10 +203,10 @@ public void writeData(final Attributes attributes) throws IOException {\n             LOG.error(\"Could not create userTO\", e);\n             response.setError(Response.Status.BAD_REQUEST.getStatusCode(),\n                     new StringBuilder().\n-                    append(\"ErrorMessage{{ \").\n-                    append(e.getMessage()).\n-                    append(\" }}\").\n-                    toString());\n+                            append(\"ErrorMessage{{ \").\n+                            append(e.getMessage()).\n+                            append(\" }}\").\n+                            toString());\n         }\n         return response;\n     }"},{"sha":"a1736726d78ba1fd860487e02bd5a1ea2dbceb96","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfPasswordReset.java","status":"modified","additions":13,"deletions":17,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cbe3fb003f938ba8fd6227cf780b8ae593422f/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfPasswordReset.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cbe3fb003f938ba8fd6227cf780b8ae593422f/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfPasswordReset.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfPasswordReset.java?ref=93cbe3fb003f938ba8fd6227cf780b8ae593422f","patch":"@@ -22,21 +22,18 @@\n import java.util.Map;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.Response;\n+import org.apache.commons.lang3.ArrayUtils;\n import org.apache.syncope.client.enduser.SyncopeEnduserConstants;\n import org.apache.syncope.client.enduser.SyncopeEnduserSession;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.rest.api.service.UserSelfService;\n import org.apache.wicket.request.resource.AbstractResource;\n import org.apache.wicket.request.resource.IResource;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n public class UserSelfPasswordReset extends AbstractBaseResource {\n \n     private static final long serialVersionUID = -2721621682300247583L;\n \n-    private static final Logger LOG = LoggerFactory.getLogger(UserSelfPasswordReset.class);\n-\n     private final UserSelfService userSelfService;\n \n     public UserSelfPasswordReset() {\n@@ -56,11 +53,9 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n             }\n \n             Map<String, String[]> parameters = request.getParameterMap();\n-            String username;\n-            if (parameters.get(\"username\") == null || parameters.get(\"username\").length == 0) {\n+            String[] usernameParam = parameters.get(\"username\");\n+            if (ArrayUtils.isEmpty(usernameParam)) {\n                 throw new Exception(\"A valid username should be provided\");\n-            } else {\n-                username = parameters.get(\"username\")[0];\n             }\n \n             if (request.getHeader(\"captcha\") == null\n@@ -72,15 +67,16 @@ protected ResourceResponse newResourceResponse(final IResource.Attributes attrib\n             }\n \n             if (SyncopeEnduserSession.get().getPlatformInfo().isPwdResetRequiringSecurityQuestions()) {\n-                if (parameters.get(\"securityanswer\") == null || parameters.get(\"securityanswer\").length == 0) {\n+                String[] securityAnswerParam = parameters.get(\"securityAnswer\");\n+                if (ArrayUtils.isEmpty(securityAnswerParam)) {\n                     throw new Exception(\"A correct security answer should be provided\");\n                 }\n-                userSelfService.requestPasswordReset(username, parameters.get(\"securityanswer\")[0]);\n+                userSelfService.requestPasswordReset(usernameParam[0], securityAnswerParam[0]);\n             } else {\n-                userSelfService.requestPasswordReset(username, null);\n+                userSelfService.requestPasswordReset(usernameParam[0], null);\n             }\n-            final String responseMessage = new StringBuilder().append(\"Password reset request sent for user \").append(\n-                    username).toString();\n+            final String responseMessage = new StringBuilder().\n+                    append(\"Password reset request sent for user \").append(usernameParam[0]).toString();\n \n             response.setTextEncoding(SyncopeConstants.DEFAULT_ENCODING);\n             response.setWriteCallback(new WriteCallback() {\n@@ -97,10 +93,10 @@ public void writeData(final Attributes attributes) throws IOException {\n             LOG.error(\"Error while updating user\", e);\n             response.setError(Response.Status.BAD_REQUEST.getStatusCode(),\n                     new StringBuilder().\n-                    append(\"ErrorMessage{{ \").\n-                    append(e.getMessage()).\n-                    append(\" }}\").\n-                    toString());\n+                            append(\"ErrorMessage{{ \").\n+                            append(e.getMessage()).\n+                            append(\" }}\").\n+                            toString());\n         }\n         return response;\n     }"},{"sha":"a14555732b3a209797dc76a4b49c62a2edb8d4de","filename":"client/enduser/src/main/java/org/apache/syncope/client/enduser/resources/UserSelfReadResource.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/93cbe3fb003f938ba8fd6227cf780b8ae593422f/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/93cbe3fb003f938ba8fd6227cf780b8ae593422f/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fenduser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fenduser%2Fresources%2FUserSelfReadResource.java?ref=93cbe3fb003f938ba8fd6227cf780b8ae593422f","patch":"@@ -42,7 +42,6 @@ public class UserSelfReadResource extends AbstractBaseResource {\n \n     @Override\n     protected ResourceResponse newResourceResponse(final IResource.Attributes attributes) {\n-\n         LOG.debug(\"Requested user self information\");\n \n         AbstractResource.ResourceResponse response = new AbstractResource.ResourceResponse();"}]}