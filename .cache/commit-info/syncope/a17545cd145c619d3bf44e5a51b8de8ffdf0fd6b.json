{"sha":"a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmExNzU0NWNkMTQ1YzYxOWQzYmY0NGU1YTUxYjhkZThmZmRmMGZkNmI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-07-05T12:40:52Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-07-05T13:01:12Z"},"message":"[SYNCOPE-1455] Adding Route sessions to Console","tree":{"sha":"f23fb57d50f0eac82aa5a2ddbca95f3a2d07e134","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/f23fb57d50f0eac82aa5a2ddbca95f3a2d07e134"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"8b01c66717b5527ac7332efebf86480e07c865a7","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/8b01c66717b5527ac7332efebf86480e07c865a7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/8b01c66717b5527ac7332efebf86480e07c865a7"}],"stats":{"total":545,"additions":417,"deletions":128},"files":[{"sha":"721a014e1395901f1b5b59de9697306309fee029","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/pages/SRA.java","status":"modified","additions":16,"deletions":1,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA.java?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -26,7 +26,9 @@\n import org.apache.syncope.client.console.annotations.AMPage;\n import org.apache.syncope.client.console.panels.SRARouteDirectoryPanel;\n import org.apache.syncope.client.console.panels.SRAStatisticsPanel;\n+import org.apache.syncope.client.console.panels.AMSessionPanel;\n import org.apache.syncope.client.console.rest.SRARouteRestClient;\n+import org.apache.syncope.client.console.rest.SRASessionRestClient;\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n@@ -103,7 +105,20 @@ public Panel getPanel(final String panelId) {\n \n                 @Override\n                 public Panel getPanel(final String panelId) {\n-                    return new SRAStatisticsPanel(panelId, instances, getPageReference());\n+                    return new SRAStatisticsPanel(panelId, instances);\n+                }\n+            });\n+        }\n+\n+        if (!instances.isEmpty() && SyncopeConsoleSession.get().owns(AMEntitlement.SRA_SESSION_LIST)) {\n+            tabs.add(new AbstractTab(new ResourceModel(\"sessions\")) {\n+\n+                private static final long serialVersionUID = 5211692813425391144L;\n+\n+                @Override\n+                public Panel getPanel(final String panelId) {\n+                    return new AMSessionPanel(panelId, new SRASessionRestClient(instances),\n+                            AMEntitlement.SRA_SESSION_LIST, AMEntitlement.SRA_SESSION_DELETE, getPageReference());\n                 }\n             });\n         }"},{"sha":"90b83d4ca23e17115087e9fc7a09071974a0922f","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/pages/WA.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FWA.java?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -38,8 +38,9 @@\n import org.apache.syncope.client.console.panels.OIDC;\n import org.apache.syncope.client.console.panels.SAML2;\n import org.apache.syncope.client.console.panels.WAConfigDirectoryPanel;\n-import org.apache.syncope.client.console.panels.WASessionPanel;\n+import org.apache.syncope.client.console.panels.AMSessionPanel;\n import org.apache.syncope.client.console.rest.WAConfigRestClient;\n+import org.apache.syncope.client.console.rest.WASessionRestClient;\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n@@ -210,7 +211,8 @@ public Panel getPanel(final String panelId) {\n \n                 @Override\n                 public Panel getPanel(final String panelId) {\n-                    return new WASessionPanel(panelId, instances, getPageReference());\n+                    return new AMSessionPanel(panelId, new WASessionRestClient(instances),\n+                            AMEntitlement.WA_SESSION_LIST, AMEntitlement.WA_SESSION_DELETE, getPageReference());\n                 }\n             });\n         }"},{"sha":"74ef526ca097f2d1e571f404cb9f588c66cfca4d","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/AMSessionDirectoryPanel.java","status":"renamed","additions":43,"deletions":38,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel.java?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -27,10 +27,9 @@\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.commons.AMConstants;\n import org.apache.syncope.client.console.commons.SortableDataProviderComparator;\n-import org.apache.syncope.client.console.panels.WASessionDirectoryPanel.WASessionProvider;\n-import org.apache.syncope.client.console.panels.WASessionPanel.WASessionSearchEvent;\n-import org.apache.syncope.client.console.rest.WASession;\n-import org.apache.syncope.client.console.rest.WASessionRestClient;\n+import org.apache.syncope.client.console.panels.AMSessionDirectoryPanel.AMSessionProvider;\n+import org.apache.syncope.client.console.panels.AMSessionPanel.AMSessionSearchEvent;\n+import org.apache.syncope.client.console.rest.AMSessionRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.DatePropertyColumn;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.KeyPropertyColumn;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n@@ -40,9 +39,8 @@\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.ui.commons.DirectoryDataProvider;\n import org.apache.syncope.client.ui.commons.pages.BaseWebPage;\n-import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n+import org.apache.syncope.common.lib.AMSession;\n import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.types.AMEntitlement;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.event.IEvent;\n@@ -55,24 +53,31 @@\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n \n-public class WASessionDirectoryPanel\n-        extends DirectoryPanel<WASession, WASession, WASessionProvider, WASessionRestClient> {\n+public class AMSessionDirectoryPanel\n+        extends DirectoryPanel<AMSession, AMSession, AMSessionProvider, AMSessionRestClient> {\n \n     private static final long serialVersionUID = 24083331272114L;\n \n-    private final BaseModal<String> viewModal;\n+    private final String listEntitlement;\n+\n+    private final String deleteEntitlement;\n \n-    private final List<NetworkService> waInstances;\n+    private final BaseModal<String> viewModal;\n \n     private String keyword;\n \n-    public WASessionDirectoryPanel(\n+    public AMSessionDirectoryPanel(\n             final String id,\n-            final List<NetworkService> waInstances,\n+            final AMSessionRestClient restClient,\n+            final String listEntitlement,\n+            final String deleteEntitlement,\n             final PageReference pageRef) {\n \n         super(id, pageRef);\n-        this.waInstances = waInstances;\n+\n+        this.listEntitlement = listEntitlement;\n+        this.deleteEntitlement = deleteEntitlement;\n+        this.restClient = restClient;\n \n         disableCheckBoxes();\n \n@@ -94,53 +99,53 @@ protected void onConfigure() {\n     }\n \n     @Override\n-    protected List<IColumn<WASession, String>> getColumns() {\n-        List<IColumn<WASession, String>> columns = new ArrayList<>();\n+    protected List<IColumn<AMSession, String>> getColumns() {\n+        List<IColumn<AMSession, String>> columns = new ArrayList<>();\n \n         columns.add(new KeyPropertyColumn<>(\n                 new StringResourceModel(Constants.KEY_FIELD_NAME, this), Constants.KEY_FIELD_NAME));\n         columns.add(new DatePropertyColumn<>(\n                 new ResourceModel(\"authenticationDate\"), \"authenticationDate\", \"authenticationDate\"));\n         columns.add(new PropertyColumn<>(\n-                new ResourceModel(\"authenticatedPrincipal\"), \"authenticatedPrincipal\", \"authenticatedPrincipal\"));\n+                new ResourceModel(\"principal\"), \"principal\", \"principal\"));\n         return columns;\n     }\n \n     @Override\n-    protected ActionsPanel<WASession> getActions(final IModel<WASession> model) {\n-        ActionsPanel<WASession> panel = super.getActions(model);\n+    protected ActionsPanel<AMSession> getActions(final IModel<AMSession> model) {\n+        ActionsPanel<AMSession> panel = super.getActions(model);\n \n-        panel.add(new ActionLink<WASession>() {\n+        panel.add(new ActionLink<AMSession>() {\n \n             private static final long serialVersionUID = 22687128346032L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target, final WASession ignore) {\n+            public void onClick(final AjaxRequestTarget target, final AMSession ignore) {\n                 viewModal.header(new ResourceModel(\"details\"));\n                 target.add(viewModal.setContent(\n                         new JsonEditorPanel(viewModal, Model.of(model.getObject().getJson()), true, pageRef)));\n                 viewModal.show(true);\n             }\n-        }, ActionLink.ActionType.VIEW, AMEntitlement.WA_SESSION_LIST);\n+        }, ActionLink.ActionType.VIEW, listEntitlement);\n \n-        panel.add(new ActionLink<WASession>() {\n+        panel.add(new ActionLink<AMSession>() {\n \n             private static final long serialVersionUID = -4608353559809323466L;\n \n             @Override\n-            public void onClick(final AjaxRequestTarget target, final WASession ignore) {\n-                WASession waSession = model.getObject();\n+            public void onClick(final AjaxRequestTarget target, final AMSession ignore) {\n+                AMSession session = model.getObject();\n                 try {\n-                    WASessionRestClient.delete(waInstances, waSession.getKey());\n+                    restClient.delete(session.getKey());\n                     SyncopeConsoleSession.get().success(getString(Constants.OPERATION_SUCCEEDED));\n                     target.add(container);\n                 } catch (SyncopeClientException e) {\n-                    LOG.error(\"While deleting {}\", waSession.getKey(), e);\n+                    LOG.error(\"While deleting {}\", session.getKey(), e);\n                     SyncopeConsoleSession.get().onException(e);\n                 }\n                 ((BaseWebPage) pageRef.getPage()).getNotificationPanel().refresh(target);\n             }\n-        }, ActionLink.ActionType.DELETE, AMEntitlement.WA_SESSION_DELETE, true);\n+        }, ActionLink.ActionType.DELETE, deleteEntitlement, true);\n \n         return panel;\n     }\n@@ -151,8 +156,8 @@ protected Collection<ActionLink.ActionType> getBatches() {\n     }\n \n     @Override\n-    protected WASessionProvider dataProvider() {\n-        return new WASessionProvider(rows);\n+    protected AMSessionProvider dataProvider() {\n+        return new AMSessionProvider(rows);\n     }\n \n     @Override\n@@ -162,8 +167,8 @@ protected String paginatorRowsKey() {\n \n     @Override\n     public void onEvent(final IEvent<?> event) {\n-        if (event.getPayload() instanceof WASessionSearchEvent) {\n-            WASessionSearchEvent payload = WASessionSearchEvent.class.cast(event.getPayload());\n+        if (event.getPayload() instanceof AMSessionSearchEvent) {\n+            AMSessionSearchEvent payload = AMSessionSearchEvent.class.cast(event.getPayload());\n             keyword = payload.getKeyword();\n \n             updateResultTable(payload.getTarget());\n@@ -172,27 +177,27 @@ public void onEvent(final IEvent<?> event) {\n         }\n     }\n \n-    protected final class WASessionProvider extends DirectoryDataProvider<WASession> {\n+    protected final class AMSessionProvider extends DirectoryDataProvider<AMSession> {\n \n         private static final long serialVersionUID = 18002870965042L;\n \n-        private final SortableDataProviderComparator<WASession> comparator;\n+        private final SortableDataProviderComparator<AMSession> comparator;\n \n-        public WASessionProvider(final int paginatorRows) {\n+        public AMSessionProvider(final int paginatorRows) {\n             super(paginatorRows);\n             setSort(\"authenticationDate\", SortOrder.ASCENDING);\n             comparator = new SortableDataProviderComparator<>(this);\n         }\n \n-        private Stream<WASession> filtered() {\n-            Stream<WASession> stream = WASessionRestClient.list(waInstances).stream();\n+        private Stream<AMSession> filtered() {\n+            Stream<AMSession> stream = restClient.list().stream();\n             return keyword == null\n                     ? stream\n                     : stream.filter(s -> s.getJson().contains(keyword));\n         }\n \n         @Override\n-        public Iterator<? extends WASession> iterator(final long first, final long count) {\n+        public Iterator<? extends AMSession> iterator(final long first, final long count) {\n             return filtered().skip(first).limit(count).sorted(comparator).iterator();\n         }\n \n@@ -202,7 +207,7 @@ public long size() {\n         }\n \n         @Override\n-        public IModel<WASession> model(final WASession waSession) {\n+        public IModel<AMSession> model(final AMSession waSession) {\n             return new CompoundPropertyModel<>(waSession);\n         }\n     }","previous_filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/WASessionDirectoryPanel.java"},{"sha":"840855e787f0c82100edd768237e64a585f17629","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/AMSessionPanel.java","status":"renamed","additions":14,"deletions":8,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionPanel.java?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -19,10 +19,9 @@\n package org.apache.syncope.client.console.panels;\n \n import java.io.Serializable;\n-import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.syncope.client.console.rest.AMSessionRestClient;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxTextFieldPanel;\n-import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n@@ -32,19 +31,26 @@\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.Model;\n \n-public class WASessionPanel extends Panel {\n+public class AMSessionPanel extends Panel {\n \n     private static final long serialVersionUID = 30189416462011L;\n \n-    public WASessionPanel(final String id, final List<NetworkService> instances, final PageReference pageRef) {\n+    public AMSessionPanel(\n+            final String id,\n+            final AMSessionRestClient restClient,\n+            final String listEntitlement,\n+            final String deleteEntitlement,\n+            final PageReference pageRef) {\n+\n         super(id);\n \n         Model<String> keywordModel = new Model<>(StringUtils.EMPTY);\n \n         WebMarkupContainer searchBoxContainer = new WebMarkupContainer(\"searchBox\");\n         add(searchBoxContainer);\n \n-        WASessionDirectoryPanel directoryPanel = new WASessionDirectoryPanel(\"directoryPanel\", instances, pageRef);\n+        AMSessionDirectoryPanel directoryPanel = new AMSessionDirectoryPanel(\n+                \"directoryPanel\", restClient, listEntitlement, deleteEntitlement, pageRef);\n         add(directoryPanel);\n \n         Form<?> form = new Form<>(\"form\");\n@@ -59,23 +65,23 @@ public WASessionPanel(final String id, final List<NetworkService> instances, fin\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target) {\n-                send(directoryPanel, Broadcast.EXACT, new WASessionSearchEvent(target, keywordModel.getObject()));\n+                send(directoryPanel, Broadcast.EXACT, new AMSessionSearchEvent(target, keywordModel.getObject()));\n             }\n         };\n         search.setOutputMarkupId(true);\n         form.add(search);\n         form.setDefaultButton(search);\n     }\n \n-    public static class WASessionSearchEvent implements Serializable {\n+    public static class AMSessionSearchEvent implements Serializable {\n \n         private static final long serialVersionUID = 5063826346823013424L;\n \n         private final transient AjaxRequestTarget target;\n \n         private final String keyword;\n \n-        WASessionSearchEvent(final AjaxRequestTarget target, final String keyword) {\n+        AMSessionSearchEvent(final AjaxRequestTarget target, final String keyword) {\n             this.target = target;\n             this.keyword = keyword;\n         }","previous_filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/WASessionPanel.java"},{"sha":"c8467fb85bf0e93e5061b664be487239b9569719","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/panels/SRAStatisticsPanel.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRAStatisticsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRAStatisticsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FSRAStatisticsPanel.java?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -30,7 +30,6 @@\n import org.apache.syncope.client.console.widgets.NumberWidget;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n import org.apache.syncope.common.lib.to.SRARouteTO;\n-import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.markup.ComponentTag;\n@@ -69,7 +68,7 @@ protected Map<String, String> load() {\n \n     private int current;\n \n-    public SRAStatisticsPanel(final String id, final List<NetworkService> instances, final PageReference pageRef) {\n+    public SRAStatisticsPanel(final String id, final List<NetworkService> instances) {\n         super(id);\n \n         SRAStatistics stats = SRAStatisticsRestClient.get(instances, selected);"},{"sha":"3bd9c4c1b8604b24aca7d96628b558c3b13e11e4","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/rest/AMSessionDeserializer.java","status":"renamed","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAMSessionDeserializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAMSessionDeserializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAMSessionDeserializer.java?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -29,30 +29,31 @@\n import java.io.StringWriter;\n import java.text.ParseException;\n import org.apache.commons.lang3.time.DateFormatUtils;\n+import org.apache.syncope.common.lib.AMSession;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class WASessionDeserializer extends StdDeserializer<WASession> {\n+public class AMSessionDeserializer extends StdDeserializer<AMSession> {\n \n     private static final long serialVersionUID = 24527200564172L;\n \n-    private static final Logger LOG = LoggerFactory.getLogger(WASessionDeserializer.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(AMSessionDeserializer.class);\n \n-    public WASessionDeserializer() {\n+    public AMSessionDeserializer() {\n         this(null);\n     }\n \n-    public WASessionDeserializer(final Class<?> vc) {\n+    public AMSessionDeserializer(final Class<?> vc) {\n         super(vc);\n     }\n \n     @Override\n-    public WASession deserialize(final JsonParser jp, final DeserializationContext ctxt)\n+    public AMSession deserialize(final JsonParser jp, final DeserializationContext ctxt)\n             throws IOException, JsonProcessingException {\n \n         JsonNode node = jp.getCodec().readTree(jp);\n \n-        WASession waSession = new WASession();\n+        AMSession waSession = new AMSession();\n \n         if (node.has(\"authentication_date_formatted\")) {\n             String authenticationDate = node.get(\"authentication_date_formatted\").textValue();\n@@ -65,7 +66,7 @@ public WASession deserialize(final JsonParser jp, final DeserializationContext c\n         }\n \n         if (node.has(\"authenticated_principal\")) {\n-            waSession.setAuthenticatedPrincipal(node.get(\"authenticated_principal\").textValue());\n+            waSession.setPrincipal(node.get(\"authenticated_principal\").textValue());\n         }\n \n         if (node.has(\"ticket_granting_ticket\")) {","previous_filename":"client/am/console/src/main/java/org/apache/syncope/client/console/rest/WASessionDeserializer.java"},{"sha":"8f36d03a8d43f7be973108c264ac524ab4831676","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/rest/AMSessionRestClient.java","status":"added","additions":81,"deletions":0,"changes":81,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAMSessionRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAMSessionRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FAMSessionRestClient.java?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;\n+import java.util.List;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.cxf.jaxrs.client.WebClient;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n+import org.apache.syncope.client.ui.commons.rest.RestClient;\n+import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n+import org.apache.syncope.common.lib.AMSession;\n+import org.apache.syncope.common.lib.SyncopeClientException;\n+import org.apache.syncope.common.lib.types.ClientExceptionType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public abstract class AMSessionRestClient implements RestClient {\n+\n+    private static final long serialVersionUID = 17371816842780L;\n+\n+    protected static final Logger LOG = LoggerFactory.getLogger(AMSessionRestClient.class);\n+\n+    protected static final List<?> JAX_RS_PROVIDERS = List.of(new JacksonJsonProvider());\n+\n+    protected final List<NetworkService> instances;\n+\n+    protected AMSessionRestClient(final List<NetworkService> instances) {\n+        this.instances = instances;\n+    }\n+\n+    protected abstract String getActuatorEndpoint();\n+\n+    public abstract List<AMSession> list();\n+\n+    public void delete(final String key) {\n+        SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n+\n+        try {\n+            Response response = WebClient.create(\n+                    getActuatorEndpoint(),\n+                    SyncopeWebApplication.get().getAnonymousUser(),\n+                    SyncopeWebApplication.get().getAnonymousKey(),\n+                    null).\n+                    path(key).\n+                    accept(MediaType.APPLICATION_JSON_TYPE).type(MediaType.APPLICATION_JSON_TYPE).delete();\n+            if (response.getStatus() != Response.Status.OK.getStatusCode()\n+                    && response.getStatus() != Response.Status.NO_CONTENT.getStatusCode()) {\n+\n+                LOG.error(\"Unexpected response when deleting SSO Session {} from {}: {}\",\n+                        key, getActuatorEndpoint(), response.getStatus());\n+                sce.getElements().add(\"Unexpected response code: \" + response.getStatus());\n+            }\n+        } catch (Exception e) {\n+            LOG.error(\"Could not delete SSO Session {} from {}\",\n+                    key, getActuatorEndpoint(), e);\n+            sce.getElements().add(\"Unexpected error: \" + e.getMessage());\n+        }\n+\n+        if (!sce.getElements().isEmpty()) {\n+            throw sce;\n+        }\n+    }\n+}"},{"sha":"e66153149cfd7fc6cf5a295d29e54f52529fea54","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/rest/SRASessionRestClient.java","status":"added","additions":68,"deletions":0,"changes":68,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSRASessionRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSRASessionRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSRASessionRestClient.java?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console.rest;\n+\n+import java.util.List;\n+import javax.ws.rs.core.GenericType;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import org.apache.cxf.jaxrs.client.WebClient;\n+import org.apache.syncope.client.console.SyncopeWebApplication;\n+import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n+import org.apache.syncope.common.lib.AMSession;\n+\n+public final class SRASessionRestClient extends AMSessionRestClient {\n+\n+    private static final long serialVersionUID = 22118820292494L;\n+\n+    public SRASessionRestClient(final List<NetworkService> list) {\n+        super(list);\n+    }\n+\n+    @Override\n+    protected String getActuatorEndpoint() {\n+        return instances.get(0).getAddress() + \"actuator/sraSessions\";\n+    }\n+\n+    @Override\n+    public List<AMSession> list() {\n+        try {\n+            WebClient client = WebClient.create(\n+                    getActuatorEndpoint(),\n+                    JAX_RS_PROVIDERS,\n+                    SyncopeWebApplication.get().getAnonymousUser(),\n+                    SyncopeWebApplication.get().getAnonymousKey(),\n+                    null).\n+                    accept(MediaType.APPLICATION_JSON_TYPE);\n+\n+            Response response = client.get();\n+            if (response.getStatus() == Response.Status.OK.getStatusCode()) {\n+                return response.readEntity(new GenericType<List<AMSession>>() {\n+                });\n+            }\n+\n+            LOG.error(\"Unexpected response for SSO Sessions from {}: {}\",\n+                    getActuatorEndpoint(), response.getStatus());\n+        } catch (Exception e) {\n+            LOG.error(\"Could not fetch SSO Sessions from {}\", getActuatorEndpoint(), e);\n+        }\n+\n+        return List.of();\n+    }\n+}"},{"sha":"fc8ad7b905be03b8c6f467083f07baaf149b97f1","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/rest/SRAStatisticsRestClient.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSRAStatisticsRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSRAStatisticsRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FSRAStatisticsRestClient.java?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -39,10 +39,10 @@ private static String getActuatorEndpoint(final List<NetworkService> instances)\n         return instances.get(0).getAddress() + \"actuator/metrics/spring.cloud.gateway.requests\";\n     }\n \n-    public static SRAStatistics get(final List<NetworkService> waInstances, final List<Pair<String, String>> selected) {\n+    public static SRAStatistics get(final List<NetworkService> instances, final List<Pair<String, String>> selected) {\n         try {\n             WebClient client = WebClient.create(\n-                    getActuatorEndpoint(waInstances),\n+                    getActuatorEndpoint(instances),\n                     JAX_RS_PROVIDERS,\n                     SyncopeWebApplication.get().getAnonymousUser(),\n                     SyncopeWebApplication.get().getAnonymousKey(),\n@@ -59,9 +59,9 @@ public static SRAStatistics get(final List<NetworkService> waInstances, final Li\n             }\n \n             LOG.error(\"Unexpected response for SRA statistics from {}: {}\",\n-                    getActuatorEndpoint(waInstances), response.getStatus());\n+                    getActuatorEndpoint(instances), response.getStatus());\n         } catch (Exception e) {\n-            LOG.error(\"Could not fetch SRA statistics from {}\", getActuatorEndpoint(waInstances), e);\n+            LOG.error(\"Could not fetch SRA statistics from {}\", getActuatorEndpoint(instances), e);\n         }\n \n         return new SRAStatistics();"},{"sha":"474d6ac5c3f8ab9ca306f345f27d6dfa1bad25ee","filename":"client/am/console/src/main/java/org/apache/syncope/client/console/rest/WASessionRestClient.java","status":"modified","additions":24,"deletions":47,"changes":71,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWASessionRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWASessionRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Frest%2FWASessionRestClient.java?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -21,86 +21,63 @@\n import com.fasterxml.jackson.core.type.TypeReference;\n import com.fasterxml.jackson.databind.JsonNode;\n import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.module.SimpleModule;\n import java.io.InputStream;\n import java.util.List;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n-import org.apache.syncope.client.ui.commons.rest.RestClient;\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n-import org.apache.syncope.common.lib.SyncopeClientException;\n-import org.apache.syncope.common.lib.types.ClientExceptionType;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import org.apache.syncope.common.lib.AMSession;\n \n-public final class WASessionRestClient implements RestClient {\n+public final class WASessionRestClient extends AMSessionRestClient {\n \n     private static final long serialVersionUID = 22118820292494L;\n \n-    private static final Logger LOG = LoggerFactory.getLogger(WASessionRestClient.class);\n+    private static final ObjectMapper MAPPER;\n \n-    private static final ObjectMapper MAPPER = new ObjectMapper();\n+    static {\n+        MAPPER = new ObjectMapper();\n \n-    private static String getActuatorEndpoint(final List<NetworkService> instances) {\n+        SimpleModule module = new SimpleModule();\n+        module.addDeserializer(AMSession.class, new AMSessionDeserializer());\n+        MAPPER.registerModule(module);\n+    }\n+\n+    public WASessionRestClient(final List<NetworkService> instances) {\n+        super(instances);\n+    }\n+\n+    @Override\n+    protected String getActuatorEndpoint() {\n         return instances.get(0).getAddress() + \"actuator/ssoSessions\";\n     }\n \n-    public static List<WASession> list(final List<NetworkService> waInstances) {\n+    @Override\n+    public List<AMSession> list() {\n         try {\n             Response response = WebClient.create(\n-                    getActuatorEndpoint(waInstances),\n+                    getActuatorEndpoint(),\n                     SyncopeWebApplication.get().getAnonymousUser(),\n                     SyncopeWebApplication.get().getAnonymousKey(),\n                     null).\n                     accept(MediaType.APPLICATION_JSON_TYPE).get();\n             if (response.getStatus() == Response.Status.OK.getStatusCode()) {\n                 JsonNode node = MAPPER.readTree((InputStream) response.getEntity());\n                 if (node.has(\"activeSsoSessions\")) {\n-                    return MAPPER.readValue(\n-                            MAPPER.treeAsTokens(node.get(\"activeSsoSessions\")),\n-                            new TypeReference<List<WASession>>() {\n+                    return MAPPER.readValue(MAPPER.treeAsTokens(node.get(\"activeSsoSessions\")),\n+                            new TypeReference<List<AMSession>>() {\n                     });\n                 }\n             } else {\n                 LOG.error(\"Unexpected response for SSO Sessions from {}: {}\",\n-                        getActuatorEndpoint(waInstances), response.getStatus());\n+                        getActuatorEndpoint(), response.getStatus());\n             }\n         } catch (Exception e) {\n-            LOG.error(\"Could not fetch SSO Sessions from {}\", getActuatorEndpoint(waInstances), e);\n+            LOG.error(\"Could not fetch SSO Sessions from {}\", getActuatorEndpoint(), e);\n         }\n \n         return List.of();\n     }\n-\n-    public static void delete(final List<NetworkService> waInstances, final String ticketGrantingTicket) {\n-        SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n-\n-        try {\n-            Response response = WebClient.create(\n-                    getActuatorEndpoint(waInstances),\n-                    SyncopeWebApplication.get().getAnonymousUser(),\n-                    SyncopeWebApplication.get().getAnonymousKey(),\n-                    null).\n-                    path(ticketGrantingTicket).\n-                    accept(MediaType.APPLICATION_JSON_TYPE).type(MediaType.APPLICATION_JSON_TYPE).delete();\n-            if (response.getStatus() != Response.Status.OK.getStatusCode()) {\n-                LOG.error(\"Unexpected response when deleting SSO Session {} from {}: {}\",\n-                        ticketGrantingTicket, getActuatorEndpoint(waInstances), response.getStatus());\n-                sce.getElements().add(\"Unexpected response code: \" + response.getStatus());\n-            }\n-        } catch (Exception e) {\n-            LOG.error(\"Could not delete SSO Session {} from {}\",\n-                    ticketGrantingTicket, getActuatorEndpoint(waInstances), e);\n-            sce.getElements().add(\"Unexpected error: \" + e.getMessage());\n-        }\n-\n-        if (!sce.getElements().isEmpty()) {\n-            throw sce;\n-        }\n-    }\n-\n-    private WASessionRestClient() {\n-        // private constructor for static utility class\n-    }\n }"},{"sha":"1475ed5e5d24e64501d1847ae885727e16448e11","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/SRA.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA.properties?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -29,3 +29,4 @@ csrf=CSRF\n error=Error URI\n postLogout=Post-logout URI\n push=Push\n+sessions=Sessions"},{"sha":"1475ed5e5d24e64501d1847ae885727e16448e11","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/SRA_fr_CA.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_fr_CA.properties?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -29,3 +29,4 @@ csrf=CSRF\n error=Error URI\n postLogout=Post-logout URI\n push=Push\n+sessions=Sessions"},{"sha":"e725ef5fbeaea1f1517f8fbdadfad8e16d61fe8d","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/SRA_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_it.properties?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -29,3 +29,4 @@ csrf=CSRF\n error=URI di errore\n postLogout=URI di post-logout\n push=Applica\n+sessions=Sessioni"},{"sha":"8ff1ace05c38158046eac5a686735230c658ec4a","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/SRA_ja.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_ja.properties?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -29,3 +29,4 @@ csrf=CSRF\n error=Error URI\n postLogout=Post-logout URI\n push=Push\n+sessions=Sessions"},{"sha":"1475ed5e5d24e64501d1847ae885727e16448e11","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/SRA_pt_BR.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_pt_BR.properties?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -29,3 +29,4 @@ csrf=CSRF\n error=Error URI\n postLogout=Post-logout URI\n push=Push\n+sessions=Sessions"},{"sha":"1475ed5e5d24e64501d1847ae885727e16448e11","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/pages/SRA_ru.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FSRA_ru.properties?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -29,3 +29,4 @@ csrf=CSRF\n error=Error URI\n postLogout=Post-logout URI\n push=Push\n+sessions=Sessions"},{"sha":"6fe80e855d0b97df2ea7966738e7fc530e73fb30","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/AMSessionDirectoryPanel.properties","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel.properties?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -18,5 +18,5 @@ any.edit=Edit ${key}\n any.finish=Submit ${key}\n any.cancel=Cancel ${key}\n authenticationDate=Creation Date\n-authenticatedPrincipal=Principal\n+principal=Principal\n details=Details","previous_filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WASessionDirectoryPanel.properties"},{"sha":"771efc8d45002397b03e3ac3767286c0ce417114","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/AMSessionDirectoryPanel_fr_CA.properties","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel_fr_CA.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel_fr_CA.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel_fr_CA.properties?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -18,5 +18,5 @@ any.edit=Modifier ${key}\n any.finish=Soumettre ${key}\n any.cancel=Annuler ${key}\n authenticationDate=Creation Date\n-authenticatedPrincipal=Principal\n+principal=Principal\n details=Details","previous_filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WASessionDirectoryPanel_fr_CA.properties"},{"sha":"40d1ec2d9a9f0db50749d30be50f260cc7b363c5","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/AMSessionDirectoryPanel_it.properties","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel_it.properties?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -18,5 +18,5 @@ any.edit=Modifica ${key}\n any.finish=Invia ${key}\n any.cancel=Annulla ${key}\n authenticationDate=Data di Creazione\n-authenticatedPrincipal=Soggetto\n+principal=Soggetto\n details=Dettagli","previous_filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WASessionDirectoryPanel_it.properties"},{"sha":"3474abb384105dab6e92aecf9e57ddd1750dcb53","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/AMSessionDirectoryPanel_ja.properties","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel_ja.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel_ja.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel_ja.properties?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -18,5 +18,5 @@ any.edit=${key} \\u3092\\u7de8\\u96c6\n any.finish=${key} \\u3092\\u5b9f\\u884c\n any.cancel=${key} \\u3092\\u30ad\\u30e3\\u30f3\\u30bb\\u30eb\n authenticationDate=Creation Date\n-authenticatedPrincipal=Principal\n+principal=Principal\n details=Details","previous_filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WASessionDirectoryPanel_ja.properties"},{"sha":"6fe80e855d0b97df2ea7966738e7fc530e73fb30","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/AMSessionDirectoryPanel_pt_BR.properties","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel_pt_BR.properties?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -18,5 +18,5 @@ any.edit=Edit ${key}\n any.finish=Submit ${key}\n any.cancel=Cancel ${key}\n authenticationDate=Creation Date\n-authenticatedPrincipal=Principal\n+principal=Principal\n details=Details","previous_filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WASessionDirectoryPanel_pt_BR.properties"},{"sha":"532778372449df7b6fa3cd84237586e728f487f5","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/AMSessionDirectoryPanel_ru.properties","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel_ru.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel_ru.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionDirectoryPanel_ru.properties?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -18,5 +18,5 @@ any.edit=\\u0418\\u0437\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c ${key}\n any.finish=\\u0421\\u043e\\u0445\\u0440\\u0430\\u043d\\u0438\\u0442\\u044c ${key}\n any.cancel=\\u041e\\u0442\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c ${key}\n authenticationDate=Creation Date\n-authenticatedPrincipal=Principal\n+principal=Principal\n details=Details","previous_filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WASessionDirectoryPanel_ru.properties"},{"sha":"362e7ed99941cde48eec40b528cbc60634ec6983","filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/AMSessionPanel.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fam%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAMSessionPanel.html?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","previous_filename":"client/am/console/src/main/resources/org/apache/syncope/client/console/panels/WASessionPanel.html"},{"sha":"16365558ff8fb7adddb1ebdb90929e1641dae9dd","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/AMSession.java","status":"renamed","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAMSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAMSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAMSession.java?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -16,22 +16,20 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.syncope.client.console.rest;\n+package org.apache.syncope.common.lib;\n \n-import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n import java.util.Date;\n import org.apache.syncope.common.lib.to.EntityTO;\n \n-@JsonDeserialize(using = WASessionDeserializer.class)\n-public class WASession implements EntityTO {\n+public class AMSession implements EntityTO {\n \n     private static final long serialVersionUID = 18201657700802L;\n \n     private String key;\n \n     private Date authenticationDate;\n \n-    private String authenticatedPrincipal;\n+    private String principal;\n \n     private String json;\n \n@@ -53,12 +51,12 @@ public void setAuthenticationDate(final Date authenticationDate) {\n         this.authenticationDate = authenticationDate;\n     }\n \n-    public String getAuthenticatedPrincipal() {\n-        return authenticatedPrincipal;\n+    public String getPrincipal() {\n+        return principal;\n     }\n \n-    public void setAuthenticatedPrincipal(final String authenticatedPrincipal) {\n-        this.authenticatedPrincipal = authenticatedPrincipal;\n+    public void setPrincipal(final String authenticatedPrincipal) {\n+        this.principal = authenticatedPrincipal;\n     }\n \n     public String getJson() {","previous_filename":"client/am/console/src/main/java/org/apache/syncope/client/console/rest/WASession.java"},{"sha":"1935279300b078b8b03867edc63e987cd0dd61cc","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/types/AMEntitlement.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAMEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAMEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAMEntitlement.java?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -34,6 +34,10 @@ public final class AMEntitlement {\n \n     public static final String SRA_ROUTE_PUSH = \"SRA_ROUTE_PUSH\";\n \n+    public static final String SRA_SESSION_LIST = \"SRA_SESSION_LIST\";\n+\n+    public static final String SRA_SESSION_DELETE = \"SRA_SESSION_DELETE\";\n+\n     public static final String CLIENTAPP_READ = \"CLIENTAPP_READ\";\n \n     public static final String CLIENTAPP_LIST = \"CLIENTAPP_LIST\";"},{"sha":"52c7a7289fd6d9459112b665ceb3f8b51d062bac","filename":"docker/sra/src/main/resources/application.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/docker%2Fsra%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/docker%2Fsra%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fsra%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -22,6 +22,6 @@ server.port=8080\n \n management.security.enabled=true\n management.endpoint.gateway.enabled=true\n-management.endpoints.web.exposure.include=health,loggers,metrics,gateway\n+management.endpoints.web.exposure.include=health,loggers,metrics,gateway,sraSessions\n \n service.discovery.address=${SERVICE_DISCOVERY_ADDRESS}"},{"sha":"c2aa0e7d816103abf3260337aabe26e6da4ce716","filename":"pom.xml","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -508,7 +508,7 @@ under the License.\n     <cargo.log>${log.directory}/cargo.log</cargo.log>\n     <cargo.output>${log.directory}/cargo-output.log</cargo.output>\n \n-    <tomcat.version>9.0.46</tomcat.version>\n+    <tomcat.version>9.0.50</tomcat.version>\n     <wildfly.version>23.0.2.Final</wildfly.version>\n     <payara.version>5.2021.4</payara.version>\n     <javax.faces.version>2.3.14</javax.faces.version>\n@@ -2129,7 +2129,10 @@ under the License.\n             <useIncrementalCompilation>false</useIncrementalCompilation>\n             <showWarnings>true</showWarnings>\n             <showDeprecation>true</showDeprecation>\n-            <compilerArgument>-Xlint:unchecked</compilerArgument>\n+            <compilerArgs>\n+              <arg>-Xlint:unchecked</arg>\n+              <arg>-parameters</arg>\n+            </compilerArgs>\n           </configuration>\n         </plugin>\n "},{"sha":"d0654586a1d5d3aaa22ea4fd6a0f5d2b6a345269","filename":"sra/src/main/java/org/apache/syncope/sra/SyncopeSRAApplication.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FSyncopeSRAApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FSyncopeSRAApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2FSyncopeSRAApplication.java?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -21,9 +21,12 @@\n import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n import org.apache.syncope.common.keymaster.client.api.startstop.KeymasterStart;\n import org.apache.syncope.common.keymaster.client.api.startstop.KeymasterStop;\n+import org.apache.syncope.sra.actuator.SRASessions;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.boot.SpringApplication;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.cache.CacheManager;\n import org.springframework.cloud.gateway.route.Route;\n import org.springframework.cloud.gateway.route.RouteLocator;\n import org.springframework.context.annotation.Bean;\n@@ -42,11 +45,20 @@ public static void main(final String[] args) {\n     @Autowired\n     private RouteProvider provider;\n \n+    @Autowired\n+    private CacheManager cacheManager;\n+\n     @Bean\n     public RouteLocator routes() {\n         return () -> Flux.fromIterable(provider.fetch()).map(Route.AbstractBuilder::build);\n     }\n \n+    @ConditionalOnMissingBean\n+    @Bean\n+    public SRASessions sraSessionsActuatorEndpoint() {\n+        return new SRASessions(cacheManager);\n+    }\n+\n     @Bean\n     public KeymasterStart keymasterStart() {\n         return new KeymasterStart(NetworkService.Type.SRA);"},{"sha":"aedd1b56518e1ab910af9cd0101bfc59b66f18f4","filename":"sra/src/main/java/org/apache/syncope/sra/actuator/SRASessions.java","status":"added","additions":112,"deletions":0,"changes":112,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Factuator%2FSRASessions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Factuator%2FSRASessions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fsra%2Factuator%2FSRASessions.java?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -0,0 +1,112 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.sra.actuator;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.concurrent.ConcurrentMap;\n+import java.util.stream.Collectors;\n+import org.apache.syncope.common.lib.AMSession;\n+import org.apache.syncope.sra.SessionConfig;\n+import org.apache.syncope.sra.security.cas.CASAuthenticationToken;\n+import org.apache.syncope.sra.security.saml2.SAML2AuthenticationToken;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.boot.actuate.endpoint.annotation.DeleteOperation;\n+import org.springframework.boot.actuate.endpoint.annotation.Endpoint;\n+import org.springframework.boot.actuate.endpoint.annotation.ReadOperation;\n+import org.springframework.boot.actuate.endpoint.annotation.Selector;\n+import org.springframework.cache.Cache;\n+import org.springframework.cache.CacheManager;\n+import org.springframework.security.core.context.SecurityContext;\n+import org.springframework.security.oauth2.client.authentication.OAuth2AuthenticationToken;\n+import org.springframework.security.web.server.context.WebSessionServerSecurityContextRepository;\n+import org.springframework.session.MapSession;\n+\n+@Endpoint(id = \"sraSessions\")\n+public class SRASessions {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(SRASessions.class);\n+\n+    private static final ObjectMapper MAPPER = new ObjectMapper().findAndRegisterModules();\n+\n+    private final CacheManager cacheManager;\n+\n+    public SRASessions(final CacheManager cacheManager) {\n+        this.cacheManager = cacheManager;\n+    }\n+\n+    private static AMSession map(final MapSession mapSession) {\n+        SecurityContext ctx = mapSession.getAttribute(\n+                WebSessionServerSecurityContextRepository.DEFAULT_SPRING_SECURITY_CONTEXT_ATTR_NAME);\n+        if (ctx == null) {\n+            return null;\n+        }\n+\n+        AMSession session = new AMSession();\n+        session.setKey(mapSession.getId());\n+        session.setAuthenticationDate(new Date(mapSession.getCreationTime().toEpochMilli()));\n+\n+        String principal;\n+        if (ctx.getAuthentication() instanceof SAML2AuthenticationToken) {\n+            principal = ((SAML2AuthenticationToken) ctx.getAuthentication()).getPrincipal().getNameId().getValue();\n+        } else if (ctx.getAuthentication() instanceof CASAuthenticationToken) {\n+            principal = ((CASAuthenticationToken) ctx.getAuthentication()).getPrincipal().getPrincipal().getName();\n+        } else if (ctx.getAuthentication() instanceof OAuth2AuthenticationToken) {\n+            principal = ((OAuth2AuthenticationToken) ctx.getAuthentication()).getPrincipal().getName();\n+        } else {\n+            principal = ctx.getAuthentication().getPrincipal().toString();\n+        }\n+        session.setPrincipal(principal);\n+\n+        try {\n+            session.setJson(MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(ctx.getAuthentication()));\n+        } catch (JsonProcessingException e) {\n+            LOG.error(\"While serializing session {}\", mapSession.getId(), e);\n+        }\n+\n+        return session;\n+    }\n+\n+    @ReadOperation\n+    @SuppressWarnings(\"unchecked\")\n+    public List<AMSession> list() {\n+        return ((ConcurrentMap<Object, Object>) cacheManager.getCache(SessionConfig.DEFAULT_CACHE).getNativeCache()).\n+                values().stream().map(MapSession.class::cast).map(SRASessions::map).\n+                filter(Objects::nonNull).collect(Collectors.toList());\n+    }\n+\n+    @ReadOperation\n+    public AMSession read(@Selector final String id) {\n+        Cache.ValueWrapper value = cacheManager.getCache(SessionConfig.DEFAULT_CACHE).get(id);\n+        if (value == null || !(value.get() instanceof MapSession)) {\n+            return null;\n+        }\n+\n+        return map((MapSession) value.get());\n+    }\n+\n+    @DeleteOperation\n+    public void delete(@Selector final String id) {\n+        cacheManager.getCache(SessionConfig.DEFAULT_CACHE).evict(id);\n+    }\n+}"},{"sha":"4f5003bda8692facbd9c2a141c22149e38da8718","filename":"sra/src/main/resources/application.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/sra%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b/sra%2Fsrc%2Fmain%2Fresources%2Fapplication.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/sra%2Fsrc%2Fmain%2Fresources%2Fapplication.properties?ref=a17545cd145c619d3bf44e5a51b8de8ffdf0fd6b","patch":"@@ -22,6 +22,6 @@ server.port=8080\n \n management.security.enabled=true\n management.endpoint.gateway.enabled=true\n-management.endpoints.web.exposure.include=health,loggers,metrics,gateway\n+management.endpoints.web.exposure.include=health,loggers,metrics,gateway,sraSessions\n \n service.discovery.address=http://localhost:8080/"}]}