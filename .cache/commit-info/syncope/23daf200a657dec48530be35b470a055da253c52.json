{"sha":"23daf200a657dec48530be35b470a055da253c52","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjIzZGFmMjAwYTY1N2RlYzQ4NTMwYmUzNWI0NzBhMDU1ZGEyNTNjNTI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-09-20T08:20:53Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-09-20T08:23:48Z"},"message":"[SYNCOPE-1374] Ensuring Spring can correctly inject the actual Domain","tree":{"sha":"328bf835288e5b4030d917123d4990ea93cecafc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/328bf835288e5b4030d917123d4990ea93cecafc"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/23daf200a657dec48530be35b470a055da253c52","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/23daf200a657dec48530be35b470a055da253c52","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/23daf200a657dec48530be35b470a055da253c52","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/23daf200a657dec48530be35b470a055da253c52/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"3b81da3a7ad210b7d26ecd6f175d16851509f563","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3b81da3a7ad210b7d26ecd6f175d16851509f563","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3b81da3a7ad210b7d26ecd6f175d16851509f563"}],"stats":{"total":67,"additions":45,"deletions":22},"files":[{"sha":"9c4f1074d78cee19581232c1e7820e479cc530f7","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/propagation/PropagationTaskCallable.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/23daf200a657dec48530be35b470a055da253c52/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskCallable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/23daf200a657dec48530be35b470a055da253c52/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskCallable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskCallable.java?ref=23daf200a657dec48530be35b470a055da253c52","patch":"@@ -24,8 +24,6 @@\n \n public interface PropagationTaskCallable extends Callable<TaskExec> {\n \n-    void setExecutor(PropagationTaskExecutor executor);\n-\n     void setTaskTO(PropagationTaskTO taskTO);\n \n     void setReporter(PropagationReporter reporter);"},{"sha":"e331aa762a301c2cfe07c7f9c165015e49fa0fca","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/propagation/PropagationTaskExecutor.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/23daf200a657dec48530be35b470a055da253c52/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/23daf200a657dec48530be35b470a055da253c52/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskExecutor.java?ref=23daf200a657dec48530be35b470a055da253c52","patch":"@@ -49,6 +49,15 @@ public interface PropagationTaskExecutor {\n      */\n     TaskExec execute(PropagationTaskTO task);\n \n+    /**\n+     * Execute the given PropagationTask and returns the generated {@link TaskExec}.\n+     *\n+     * @param task to be executed\n+     * @param reporter to report propagation execution status\n+     * @return the generated TaskExec\n+     */\n+    TaskExec execute(PropagationTaskTO task, PropagationReporter reporter);\n+\n     /**\n      * Execute a collection of PropagationTask objects.\n      * The process is interrupted as soon as the result of the communication with a resource with non-null priority is"},{"sha":"805b772ad398410514404cc68b72caa32b363053","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/23daf200a657dec48530be35b470a055da253c52/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/23daf200a657dec48530be35b470a055da253c52/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=23daf200a657dec48530be35b470a055da253c52","patch":"@@ -164,11 +164,6 @@ public abstract class AbstractPropagationTaskExecutor implements PropagationTask\n     @Autowired\n     protected VirAttrCache virAttrCache;\n \n-    @Override\n-    public TaskExec execute(final PropagationTaskTO task) {\n-        return execute(task, null);\n-    }\n-\n     protected List<PropagationActions> getPropagationActions(final ExternalResource resource) {\n         List<PropagationActions> result = new ArrayList<>();\n \n@@ -350,7 +345,13 @@ protected Uid delete(\n         return result;\n     }\n \n-    protected TaskExec execute(final PropagationTaskTO taskTO, final PropagationReporter reporter) {\n+    @Override\n+    public TaskExec execute(final PropagationTaskTO task) {\n+        return execute(task, null);\n+    }\n+\n+    @Override\n+    public TaskExec execute(final PropagationTaskTO taskTO, final PropagationReporter reporter) {\n         PropagationTask task;\n         if (taskTO.getKey() == null) {\n             task = entityFactory.newEntity(PropagationTask.class);"},{"sha":"99675491421ec86d6bcff56d1e2d7b94603f3169","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/DefaultPropagationTaskCallable.java","status":"modified","additions":5,"deletions":11,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/23daf200a657dec48530be35b470a055da253c52/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationTaskCallable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/23daf200a657dec48530be35b470a055da253c52/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationTaskCallable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationTaskCallable.java?ref=23daf200a657dec48530be35b470a055da253c52","patch":"@@ -28,6 +28,7 @@\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskExecutor;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n import org.springframework.security.core.GrantedAuthority;\n import org.springframework.security.core.context.SecurityContext;\n@@ -40,14 +41,15 @@ public class DefaultPropagationTaskCallable implements PropagationTaskCallable {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(PropagationTaskCallable.class);\n \n+    @Autowired\n+    protected PropagationTaskExecutor taskExecutor;\n+\n     protected final String domain;\n \n     protected final String username;\n \n     protected final Collection<? extends GrantedAuthority> authorities;\n \n-    protected AbstractPropagationTaskExecutor executor;\n-\n     protected PropagationTaskTO taskTO;\n \n     protected PropagationReporter reporter;\n@@ -59,13 +61,6 @@ public DefaultPropagationTaskCallable() {\n         authorities = ctx.getAuthentication().getAuthorities();\n     }\n \n-    @Override\n-    public void setExecutor(final PropagationTaskExecutor executor) {\n-        if (executor instanceof AbstractPropagationTaskExecutor) {\n-            this.executor = (AbstractPropagationTaskExecutor) executor;\n-        }\n-    }\n-\n     @Override\n     public void setTaskTO(final PropagationTaskTO taskTO) {\n         this.taskTO = taskTO;\n@@ -86,11 +81,10 @@ public TaskExec call() throws Exception {\n \n         LOG.debug(\"Execution started for {}\", taskTO);\n \n-        TaskExec execution = executor.execute(taskTO, reporter);\n+        TaskExec execution = taskExecutor.execute(taskTO, reporter);\n \n         LOG.debug(\"Execution completed for {}, {}\", taskTO, execution);\n \n         return execution;\n     }\n-\n }"},{"sha":"77581a91c69e7ece350ea28df72e58d1aea7623a","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PriorityPropagationTaskExecutor.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/23daf200a657dec48530be35b470a055da253c52/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/23daf200a657dec48530be35b470a055da253c52/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java?ref=23daf200a657dec48530be35b470a055da253c52","patch":"@@ -71,7 +71,6 @@ protected PropagationTaskCallable newPropagationTaskCallable(\n \n         PropagationTaskCallable callable = (PropagationTaskCallable) ApplicationContextProvider.getBeanFactory().\n                 createBean(DefaultPropagationTaskCallable.class, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n-        callable.setExecutor(this);\n         callable.setTaskTO(taskTO);\n         callable.setReporter(reporter);\n "},{"sha":"d2572644ee5f9c33487e57142693d76a6304731f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/MultitenancyITCase.java","status":"modified","additions":24,"deletions":2,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/23daf200a657dec48530be35b470a055da253c52/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/23daf200a657dec48530be35b470a055da253c52/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FMultitenancyITCase.java?ref=23daf200a657dec48530be35b470a055da253c52","patch":"@@ -42,20 +42,24 @@\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.to.ExecTO;\n+import org.apache.syncope.common.lib.to.PushTaskTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.LoggerType;\n import org.apache.syncope.common.lib.types.MappingPurpose;\n import org.apache.syncope.common.lib.types.ExecStatus;\n-import org.apache.syncope.common.lib.types.SchemaType;\n+import org.apache.syncope.common.lib.types.MatchingRule;\n import org.apache.syncope.common.lib.types.PullMode;\n+import org.apache.syncope.common.lib.types.SchemaType;\n import org.apache.syncope.common.lib.types.TaskType;\n import org.apache.syncope.common.rest.api.beans.AnyQuery;\n import org.apache.syncope.common.rest.api.beans.SchemaQuery;\n+import org.apache.syncope.common.rest.api.beans.TaskQuery;\n import org.apache.syncope.common.rest.api.service.ConnectorService;\n import org.apache.syncope.common.rest.api.service.DomainService;\n import org.apache.syncope.common.rest.api.service.LoggerService;\n import org.apache.syncope.common.rest.api.service.RealmService;\n+import org.apache.syncope.common.rest.api.service.ReconciliationService;\n import org.apache.syncope.common.rest.api.service.ResourceService;\n import org.apache.syncope.common.rest.api.service.SchemaService;\n import org.apache.syncope.common.rest.api.service.TaskService;\n@@ -101,7 +105,8 @@ public void masterOnly() {\n \n     @Test\n     public void readPlainSchemas() {\n-        assertEquals(13, adminClient.getService(SchemaService.class).search(new SchemaQuery.Builder().type(SchemaType.PLAIN).build()).size());\n+        assertEquals(13, adminClient.getService(SchemaService.class).search(new SchemaQuery.Builder().type(\n+                SchemaType.PLAIN).build()).size());\n     }\n \n     @Test\n@@ -215,6 +220,23 @@ public void createResourceAndPull() {\n                     build());\n             assertNotNull(matchingUsers);\n             assertEquals(1, matchingUsers.getResult().size());\n+\n+            // SYNCOPE-1374\n+            String pullFromLDAPKey = matchingUsers.getResult().get(0).getKey();\n+\n+            assertEquals(0, adminClient.getService(TaskService.class).\n+                    search(new TaskQuery.Builder(TaskType.PROPAGATION).\n+                            anyTypeKind(AnyTypeKind.USER).entityKey(pullFromLDAPKey).build()).getSize());\n+\n+            PushTaskTO pushTask = new PushTaskTO();\n+            pushTask.setPerformUpdate(true);\n+            pushTask.setMatchingRule(MatchingRule.UPDATE);\n+            adminClient.getService(ReconciliationService.class).\n+                    push(AnyTypeKind.USER, pullFromLDAPKey, resource.getKey(), pushTask);\n+\n+            assertEquals(1, adminClient.getService(TaskService.class).\n+                    search(new TaskQuery.Builder(TaskType.PROPAGATION).\n+                            anyTypeKind(AnyTypeKind.USER).entityKey(pullFromLDAPKey).build()).getSize());\n         } finally {\n             adminClient.getService(ResourceService.class).delete(resource.getKey());\n         }"}]}