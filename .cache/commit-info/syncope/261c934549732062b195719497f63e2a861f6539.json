{"sha":"261c934549732062b195719497f63e2a861f6539","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjI2MWM5MzQ1NDk3MzIwNjJiMTk1NzE5NDk3ZjYzZTJhODYxZjY1Mzk=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-04-14T12:48:29Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-04-14T12:48:29Z"},"message":"Fixing some misbehaviors when editing resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246862 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"fd453afbca0aab0cca2dc299e19daa246e3d1f20","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/fd453afbca0aab0cca2dc299e19daa246e3d1f20"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/261c934549732062b195719497f63e2a861f6539","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/261c934549732062b195719497f63e2a861f6539","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/261c934549732062b195719497f63e2a861f6539","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/261c934549732062b195719497f63e2a861f6539/comments","author":null,"committer":null,"parents":[{"sha":"b23610d5a834077d6e4507a528d63fefd6a74853","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b23610d5a834077d6e4507a528d63fefd6a74853","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b23610d5a834077d6e4507a528d63fefd6a74853"}],"stats":{"total":571,"additions":206,"deletions":365},"files":[{"sha":"7e83f21fd7512a9e16effc078caaacc01e6c131b","filename":"console/src/main/java/org/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":192,"deletions":347,"changes":539,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/261c934549732062b195719497f63e2a861f6539/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/261c934549732062b195719497f63e2a861f6539/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=261c934549732062b195719497f63e2a861f6539","patch":"@@ -16,13 +16,10 @@\n  */\n package org.syncope.console.pages;\n \n-import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n-import java.util.HashMap;\n import java.util.Iterator;\n import java.util.List;\n-import java.util.Map;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.IAjaxCallDecorator;\n import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n@@ -46,7 +43,6 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.apache.wicket.util.string.Strings;\n import org.syncope.client.to.ConnInstanceTO;\n import org.syncope.client.to.ResourceTO;\n import org.syncope.client.to.SchemaMappingTO;\n@@ -69,85 +65,53 @@ public class ResourceModalPage extends BaseModalPage {\n     @SpringBean\n     private ConnectorRestClient connectorRestClient;\n \n-    private TextField resourceName;\n-\n-    private DropDownChoice connector;\n-\n-    private CheckBox forceMandatoryConstraint;\n-\n-    private DropDownChoice<PropagationMode> optionalPropagationMode;\n-\n-    private ConnInstanceTO connectorTO = new ConnInstanceTO();\n-\n-    private ResourceTO resource;\n-\n-    private AjaxButton submit;\n-\n-    private AjaxButton addSchemaMappingBtn;\n-\n-    private List<String> accountIdAttributesNames;\n-\n-    private List<String> passwordAttributesNames;\n-\n-    private List<String> userSchemaAttributesNames;\n+    @SpringBean\n+    private ResourceRestClient restClient;\n \n-    private List<String> roleSchemaAttributesNames;\n+    private List<String> uSchemaAttrNames;\n \n-    private List<String> membershipSchemaAttributesNames;\n+    private List<String> rSchemaAttrNames;\n \n-    /** Custom validation's errors map*/\n-    private Map<String, String> errors = new HashMap<String, String>();\n+    private List<String> mSchemaAttrNames;\n \n-    private ListView mappingUserSchemaView;\n+    private WebMarkupContainer mappingContainer;\n \n-    @SpringBean\n-    private ResourceRestClient restClient;\n-\n-    private WebMarkupContainer mappingUserSchemaContainer;\n-\n-    /**\n-     *\n-     * @param basePage base\n-     * @param modalWindow modal window\n-     * @param connectorTO\n-     * @param create : set to true only if a CREATE operation is required\n-     */\n-    public ResourceModalPage(final BasePage basePage, final ModalWindow window,\n+    public ResourceModalPage(final Resources basePage, final ModalWindow window,\n             final ResourceTO resourceTO, final boolean createFlag) {\n \n-        this.resource = resourceTO;\n+        super();\n \n-        setupChoiceListsPopulators();\n+        uSchemaAttrNames = schemaRestClient.getAllUSchemaNames();\n+        rSchemaAttrNames = schemaRestClient.getAllRSchemaNames();\n+        mSchemaAttrNames = schemaRestClient.getAllMSchemaNames();\n \n-        //setupSchemaMappingsList(resourceTO.getMappings());\n+        final IModel<List<ConnInstanceTO>> connectors =\n+                new LoadableDetachableModel<List<ConnInstanceTO>>() {\n \n-        Form resourceForm = new Form(\"ResourceForm\");\n+                    @Override\n+                    protected List<ConnInstanceTO> load() {\n+                        return connectorRestClient.getAllConnectors();\n+                    }\n+                };\n \n-        resourceForm.setModel(new CompoundPropertyModel(resourceTO));\n+        final IModel<List<SourceMappingType>> sourceMappingTypes =\n+                new LoadableDetachableModel<List<SourceMappingType>>() {\n \n+                    @Override\n+                    protected List<SourceMappingType> load() {\n+                        return Arrays.asList(SourceMappingType.values());\n+                    }\n+                };\n+\n+        final ConnInstanceTO connectorTO = new ConnInstanceTO();\n         if (!createFlag) {\n             connectorTO.setId(resourceTO.getConnectorId());\n         }\n \n-        IModel connectors = new LoadableDetachableModel() {\n-\n-            @Override\n-            protected Object load() {\n-                return connectorRestClient.getAllConnectors();\n-            }\n-        };\n-\n-        final IModel sourceMappingTypes = new LoadableDetachableModel() {\n-\n-            @Override\n-            protected Object load() {\n-\n-                return Arrays.asList(SourceMappingType.values());\n-\n-            }\n-        };\n+        Form resourceForm = new Form(\"ResourceForm\");\n+        resourceForm.setModel(new CompoundPropertyModel(resourceTO));\n \n-        resourceName = new TextField(\"name\");\n+        TextField resourceName = new TextField(\"name\");\n         resourceName.setEnabled(createFlag);\n         resourceName.setRequired(true);\n         resourceName.setOutputMarkupId(true);\n@@ -157,11 +121,12 @@ protected Object load() {\n         accountLink.setOutputMarkupId(true);\n         resourceForm.add(accountLink);\n \n-        forceMandatoryConstraint = new CheckBox(\"forceMandatoryConstraint\");\n+        CheckBox forceMandatoryConstraint =\n+                new CheckBox(\"forceMandatoryConstraint\");\n         forceMandatoryConstraint.setOutputMarkupId(true);\n         resourceForm.add(forceMandatoryConstraint);\n \n-        optionalPropagationMode =\n+        DropDownChoice<PropagationMode> optionalPropagationMode =\n                 new DropDownChoice<PropagationMode>(\"optionalPropagationMode\");\n         optionalPropagationMode.setModel(new IModel<PropagationMode>() {\n \n@@ -185,51 +150,64 @@ public void detach() {\n         resourceForm.add(optionalPropagationMode);\n \n         ChoiceRenderer renderer = new ChoiceRenderer(\"displayName\", \"id\");\n-        connector = new DropDownChoice(\"connectors\", new Model(connectorTO),\n-                connectors, renderer);\n+        DropDownChoice<ConnInstanceTO> connector =\n+                new DropDownChoice<ConnInstanceTO>(\"connectors\",\n+                new Model<ConnInstanceTO>(connectorTO), connectors, renderer);\n         connector.setEnabled(createFlag);\n-        connector.setModel(new IModel() {\n+        connector.setModel(new IModel<ConnInstanceTO>() {\n \n             @Override\n-            public Object getObject() {\n+            public ConnInstanceTO getObject() {\n                 return connectorTO;\n             }\n \n             @Override\n-            public void setObject(Object object) {\n-                ConnInstanceTO connector = (ConnInstanceTO) object;\n+            public void setObject(final ConnInstanceTO connector) {\n                 resourceTO.setConnectorId(connector.getId());\n             }\n \n             @Override\n             public void detach() {\n             }\n         });\n-\n         connector.setRequired(true);\n         connector.setEnabled(createFlag);\n-\n         resourceForm.add(connector);\n \n-        mappingUserSchemaView = new ListView(\"mappingsUserSchema\",\n-                resourceTO.getMappings()) {\n+        mappingContainer = new WebMarkupContainer(\"mappingContainer\");\n+        mappingContainer.setOutputMarkupId(true);\n+        resourceForm.add(mappingContainer);\n \n-            SchemaMappingTO mappingTO = null;\n-\n-            DropDownChoice schemaAttributeChoice = null;\n+        ListView<SchemaMappingTO> mappings = new ListView<SchemaMappingTO>(\n+                \"mappings\", resourceTO.getMappings()) {\n \n             @Override\n-            protected void populateItem(final ListItem item) {\n-                mappingTO = (SchemaMappingTO) item.getDefaultModelObject();\n+            protected void populateItem(\n+                    final ListItem<SchemaMappingTO> item) {\n+\n+                final SchemaMappingTO mappingTO = item.getModelObject();\n \n                 item.add(new AjaxDecoratedCheckbox(\"toRemove\",\n-                        new Model(new Boolean(\"\"))) {\n+                        new Model(Boolean.FALSE)) {\n \n                     @Override\n                     protected void onUpdate(final AjaxRequestTarget target) {\n-                        int id = new Integer(getParent().getId());\n-                        resourceTO.getMappings().remove(id);\n-                        target.addComponent(mappingUserSchemaContainer);\n+                        int index = -1;\n+                        for (int i = 0; i < resourceTO.getMappings().size()\n+                                && index == -1; i++) {\n+\n+                            if (mappingTO.equals(\n+                                    resourceTO.getMappings().get(i))) {\n+\n+                                index = i;\n+                            }\n+                        }\n+\n+                        if (index != -1) {\n+                            resourceTO.getMappings().remove(index);\n+                            item.getParent().removeAll();\n+                            target.addComponent(mappingContainer);\n+                        }\n                     }\n \n                     @Override\n@@ -249,106 +227,105 @@ public CharSequence preDecorateScript(\n                         };\n                     }\n                 });\n-                item.add(new TextField(\"field\",\n-                        new PropertyModel(mappingTO, \"destAttrName\")).\n-                        setRequired(true).\n-                        setLabel(new Model(getString(\"fieldName\"))));\n-\n-                schemaAttributeChoice =\n-                        new DropDownChoice(\"schemaAttributes\",\n-                        new PropertyModel(mappingTO, \"sourceAttrName\"),\n-                        (IModel) null);\n \n+                DropDownChoice<String> schemaAttrChoice =\n+                        new DropDownChoice<String>(\n+                        \"sourceAttrNames\", new PropertyModel<String>(\n+                        mappingTO, \"sourceAttrName\"), (IModel) null);\n+                schemaAttrChoice.setOutputMarkupId(true);\n                 if (mappingTO.getSourceMappingType() == null) {\n-                    schemaAttributeChoice.setChoices(Collections.emptyList());\n-                } else if (mappingTO.getSourceMappingType().equals(\n-                        SourceMappingType.UserSchema)) {\n-                    schemaAttributeChoice.setChoices(userSchemaAttributesNames);\n-                    schemaAttributeChoice.setRequired(true);\n-                } else if (mappingTO.getSourceMappingType().equals(\n-                        SourceMappingType.RoleSchema)) {\n-                    schemaAttributeChoice.setChoices(roleSchemaAttributesNames);\n-                    schemaAttributeChoice.setRequired(true);\n-                } else if (mappingTO.getSourceMappingType().equals(\n-                        SourceMappingType.MembershipSchema)) {\n-                    schemaAttributeChoice.setChoices(\n-                            membershipSchemaAttributesNames);\n-                    schemaAttributeChoice.setRequired(true);\n-                } else if (mappingTO.getSourceMappingType().equals(\n-                        SourceMappingType.SyncopeUserId)) {\n-                    schemaAttributeChoice.setEnabled(false);\n-                    schemaAttributeChoice.setRequired(false);\n-                    schemaAttributeChoice.setChoices(Collections.emptyList());\n-                    mappingTO.setSourceAttrName(\"SyncopeUserId\");\n-                } else if (mappingTO.getSourceMappingType().equals(\n-                        SourceMappingType.Password)) {\n-                    schemaAttributeChoice.setEnabled(false);\n-                    schemaAttributeChoice.setRequired(false);\n-                    schemaAttributeChoice.setChoices(Collections.emptyList());\n-                    mappingTO.setSourceAttrName(\"Password\");\n+                    schemaAttrChoice.setChoices(Collections.EMPTY_LIST);\n+                } else {\n+                    switch (mappingTO.getSourceMappingType()) {\n+                        case UserSchema:\n+                            schemaAttrChoice.setChoices(uSchemaAttrNames);\n+                            break;\n+\n+                        case RoleSchema:\n+                            schemaAttrChoice.setChoices(rSchemaAttrNames);\n+                            break;\n+\n+                        case MembershipSchema:\n+                            schemaAttrChoice.setChoices(mSchemaAttrNames);\n+                            break;\n+\n+                        case SyncopeUserId:\n+                            schemaAttrChoice.setEnabled(false);\n+                            schemaAttrChoice.setRequired(false);\n+                            schemaAttrChoice.setChoices(Collections.EMPTY_LIST);\n+                            mappingTO.setSourceAttrName(\"SyncopeUserId\");\n+                            break;\n+\n+                        case Password:\n+                            schemaAttrChoice.setEnabled(false);\n+                            schemaAttrChoice.setRequired(false);\n+                            schemaAttrChoice.setChoices(Collections.EMPTY_LIST);\n+                            mappingTO.setSourceAttrName(\"Password\");\n+                            break;\n+\n+                        default:\n+                            schemaAttrChoice.setChoices(\n+                                    Collections.EMPTY_LIST);\n+                    }\n                 }\n-\n-                schemaAttributeChoice.setOutputMarkupId(true);\n-                item.add(schemaAttributeChoice);\n+                item.add(schemaAttrChoice);\n \n                 item.add(new SourceMappingTypesDropDownChoice(\n                         \"sourceMappingTypes\",\n-                        new PropertyModel(mappingTO, \"sourceMappingType\"),\n-                        sourceMappingTypes, schemaAttributeChoice).setRequired(\n-                        true).\n+                        new PropertyModel<SourceMappingType>(mappingTO,\n+                        \"sourceMappingType\"), sourceMappingTypes,\n+                        schemaAttrChoice).setRequired(true).\n+                        setOutputMarkupId(true));\n+\n+                item.add(new TextField(\"destAttrName\",\n+                        new PropertyModel(mappingTO, \"destAttrName\")).\n+                        setRequired(true).\n+                        setLabel(new Model(getString(\"fieldName\"))).\n                         setOutputMarkupId(true));\n \n                 item.add(new AutoCompleteTextField(\"mandatoryCondition\",\n                         new PropertyModel(mappingTO, \"mandatoryCondition\")) {\n \n                     @Override\n-                    protected Iterator getChoices(String input) {\n-                        List<String> choices = new ArrayList<String>();\n-\n-                        if (Strings.isEmpty(input)) {\n-                            choices = Collections.emptyList();\n-                            return choices.iterator();\n-                        }\n-\n+                    protected Iterator getChoices(final String input) {\n+                        List<String> choices;\n                         if (\"true\".startsWith(input.toLowerCase())) {\n-                            choices.add(\"true\");\n+                            choices = Collections.singletonList(\"true\");\n                         } else if (\"false\".startsWith(input.toLowerCase())) {\n-                            choices.add(\"false\");\n+                            choices = Collections.singletonList(\"true\");\n+                        } else {\n+                            choices = Collections.EMPTY_LIST;\n                         }\n \n-\n                         return choices.iterator();\n                     }\n                 });\n+\n                 item.add(new CheckBox(\"accountId\",\n                         new PropertyModel(mappingTO, \"accountid\")));\n+\n                 item.add(new CheckBox(\"password\",\n                         new PropertyModel(mappingTO, \"password\")));\n             }\n         };\n+        mappings.setReuseItems(true);\n+        mappingContainer.add(mappings);\n \n-        mappingUserSchemaContainer =\n-                new WebMarkupContainer(\"mappingUserSchemaContainer\");\n-        mappingUserSchemaContainer.add(mappingUserSchemaView);\n-        mappingUserSchemaContainer.setOutputMarkupId(true);\n-\n-        resourceForm.add(mappingUserSchemaContainer);\n-\n-        addSchemaMappingBtn = new IndicatingAjaxButton(\n+        AjaxButton addSchemaMappingBtn = new IndicatingAjaxButton(\n                 \"addUserSchemaMappingBtn\", new Model(getString(\"add\"))) {\n \n             @Override\n-            protected void onSubmit(AjaxRequestTarget target, Form form) {\n+            protected void onSubmit(final AjaxRequestTarget target,\n+                    final Form form) {\n+\n                 resourceTO.getMappings().add(new SchemaMappingTO());\n-                target.addComponent(mappingUserSchemaContainer);\n+                target.addComponent(mappingContainer);\n             }\n         };\n-\n         addSchemaMappingBtn.setDefaultFormProcessing(false);\n-\n         resourceForm.add(addSchemaMappingBtn);\n \n-        submit = new IndicatingAjaxButton(\"submit\", new Model(\n+        AjaxButton submit = new IndicatingAjaxButton(\"submit\", new Model(\n                 getString(\"submit\"))) {\n \n             @Override\n@@ -358,35 +335,32 @@ protected void onSubmit(final AjaxRequestTarget target,\n                 ResourceTO resourceTO =\n                         (ResourceTO) form.getDefaultModelObject();\n \n-                try {\n-                    resourceFormCustomValidation();\n-                } catch (IllegalArgumentException e) {\n-\n-                    for (String error : errors.values()) {\n-                        error(error);\n+                int accountIdCount = 0;\n+                for (SchemaMappingTO mapping : resourceTO.getMappings()) {\n+                    if (mapping.isAccountid()) {\n+                        accountIdCount++;\n                     }\n-\n-                    errors.clear();\n-                    return;\n                 }\n+                if (accountIdCount == 0 || accountIdCount > 1) {\n+                    error(getString(\"accountIdValidation\"));\n+                    basePage.setOperationResult(false);\n+                } else {\n+                    try {\n+                        if (createFlag) {\n+                            restClient.createResource(resourceTO);\n+                        } else {\n+                            restClient.updateResource(resourceTO);\n+                        }\n \n-                Resources callerPage = (Resources) basePage;\n-                try {\n-                    if (createFlag) {\n-                        restClient.createResource(resourceTO);\n-                    } else {\n-                        restClient.updateResource(resourceTO);\n-                    }\n-\n-                    callerPage.setOperationResult(true);\n-\n-                    window.close(target);\n-                } catch (SyncopeClientCompositeErrorException e) {\n-                    error(getString(\"error\") + \":\" + e.getMessage());\n-                    callerPage.setOperationResult(false);\n+                        basePage.setOperationResult(true);\n+                        window.close(target);\n+                    } catch (SyncopeClientCompositeErrorException e) {\n+                        error(getString(\"error\") + \":\" + e.getMessage());\n+                        basePage.setOperationResult(false);\n \n-                    LOG.error(\"While creating or updating resource \"\n-                            + resourceTO);\n+                        LOG.error(\"While creating or updating resource \"\n+                                + resourceTO);\n+                    }\n                 }\n             }\n \n@@ -397,192 +371,63 @@ protected void onError(final AjaxRequestTarget target,\n                 target.addComponent(feedbackPanel);\n             }\n         };\n-\n-        String allowedRoles;\n-\n-        if (createFlag) {\n-            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Resources\",\n-                    \"create\");\n-        } else {\n-            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Resources\",\n-                    \"update\");\n-        }\n-\n-        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE,\n-                allowedRoles);\n-\n         resourceForm.add(submit);\n \n         add(resourceForm);\n-    }\n-\n-    /**\n-     * Checks that at most one SchemaMapping has been set as 'AccountId' and as\n-     * 'Password'.\n-     */\n-    public void resourceFormCustomValidation() {\n-        int count = 0;\n-\n-        for (SchemaMappingTO schemaMapping : resource.getMappings()) {\n \n-            if (schemaMapping.isAccountid()) {\n-                count++;\n-            }\n-\n-            if (count > 1) {\n-                errors.put(\"accountId\", getString(\"accountIdValidation\"));\n-                break;\n-            }\n-\n-        }\n-\n-        count = 0;\n-\n-        for (SchemaMappingTO schemaMapping : resource.getMappings()) {\n-\n-            if (schemaMapping.isPassword()) {\n-                count++;\n-            }\n-\n-            if (count > 1) {\n-                errors.put(\"password\", getString(\"passwordValidation\"));\n-                break;\n-            }\n-\n-\n-        }\n-\n-        if (errors.size() > 0) {\n-            throw new IllegalArgumentException(getString(\"customValidation\"));\n-        }\n-    }\n-\n-    /**\n-     * Set User and Role Schemas list for populating different views.\n-     * @param schemaMappingTos\n-    \n-    public void setupSchemaMappingsList(List<SchemaMappingTO> mappings) {\n-    schemaMappingTOs = new ArrayList<SchemaMappingTO>();\n-\n-    if (mappings != null) {\n-    for (SchemaMappingTO schemaMappingTO :  mappings) {\n-    schemaMappingTOs.add(schemaMappingTO);\n-    }\n-    } else {\n-    schemaMappingTOs.add(new SchemaMappingTO());\n-    }\n-    }*/\n-    /**\n-     * Setup choice-list populators.\n-     */\n-    public void setupChoiceListsPopulators() {\n-        List<String> accountIdList = new ArrayList<String>();\n-        accountIdList.add(\"accountId\");\n-        setAccountIdAttributesNames(accountIdList);\n-\n-        List<String> passwordList = new ArrayList<String>();\n-        passwordList.add(\"password\");\n-        setPasswordAttributesNames(passwordList);\n-\n-        setRoleSchemaAttributesNames(schemaRestClient.getAllRoleSchemasNames());\n-        setUserSchemaAttributesNames(schemaRestClient.getAllUserSchemasNames());\n-        setMembershipSchemaAttributesNames(schemaRestClient.\n-                getAllMembershipSchemasNames());\n-    }\n-\n-    public List<String> getMembershipSchemaAttributesNames() {\n-        return membershipSchemaAttributesNames;\n-    }\n-\n-    public void setMembershipSchemaAttributesNames(\n-            List<String> membershipSchemaAttributesNames) {\n-        this.membershipSchemaAttributesNames = membershipSchemaAttributesNames;\n-    }\n-\n-    public List<String> getRoleSchemaAttributesNames() {\n-        return roleSchemaAttributesNames;\n-    }\n-\n-    public void setRoleSchemaAttributesNames(\n-            List<String> roleSchemaAttributesNames) {\n-        this.roleSchemaAttributesNames = roleSchemaAttributesNames;\n-    }\n-\n-    public List<String> getUserSchemaAttributesNames() {\n-        return userSchemaAttributesNames;\n-    }\n-\n-    public void setUserSchemaAttributesNames(\n-            List<String> userSchemaAttributesNames) {\n-        this.userSchemaAttributesNames = userSchemaAttributesNames;\n-    }\n-\n-    public List<String> getAccountIdAttributesNames() {\n-        return accountIdAttributesNames;\n-    }\n-\n-    public void setAccountIdAttributesNames(\n-            List<String> accountIdAttributesNames) {\n-        this.accountIdAttributesNames = accountIdAttributesNames;\n-    }\n-\n-    public List<String> getPasswordAttributesNames() {\n-        return passwordAttributesNames;\n-    }\n-\n-    public void setPasswordAttributesNames(List<String> passwordAttributesNames) {\n-        this.passwordAttributesNames = passwordAttributesNames;\n+        MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE,\n+                xmlRolesReader.getAllAllowedRoles(\"Resources\",\n+                createFlag ? \"create\" : \"update\"));\n     }\n \n     /**\n-     * Extension class of DropDownChoice. It's purposed for storing values in the\n+     * Extension class of DropDownChoice.\n+     * It's purposed for storing values in the\n      * corresponding property model after pressing 'Add' button.\n      */\n-    public class SourceMappingTypesDropDownChoice extends DropDownChoice {\n+    private class SourceMappingTypesDropDownChoice extends DropDownChoice {\n \n-        SchemaMappingTO schemaMappingModel;\n+        public SourceMappingTypesDropDownChoice(final String id,\n+                final PropertyModel<SourceMappingType> model,\n+                final IModel imodel,\n+                final DropDownChoice<String> chooserToPopulate) {\n \n-        public SourceMappingTypesDropDownChoice(String id, final PropertyModel model,\n-                IModel imodel, final DropDownChoice chooserToPopulate) {\n             super(id, model, imodel);\n \n-            schemaMappingModel = (SchemaMappingTO) model.getTarget();\n-\n             add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-                protected void onUpdate(AjaxRequestTarget target) {\n-                    chooserToPopulate.setChoices(new LoadableDetachableModel() {\n-\n-                        @Override\n-                        protected Object load() {\n-                            SourceMappingType sourceMType = schemaMappingModel.\n-                                    getSourceMappingType();\n-\n-                            if (sourceMType == null) {\n-                                return Collections.emptyList();\n-                            }\n-                            if (sourceMType.equals(SourceMappingType.RoleSchema)) {\n-                                return roleSchemaAttributesNames;\n-                            } else if (sourceMType.equals(\n-                                    SourceMappingType.UserSchema)) {\n-                                return userSchemaAttributesNames;\n-                            } else if (sourceMType.equals(\n-                                    SourceMappingType.MembershipSchema)) {\n-                                return membershipSchemaAttributesNames;\n-                            } else if (sourceMType.equals(\n-                                    SourceMappingType.SyncopeUserId)) {\n-                                return Collections.emptyList();\n-                            } else if (sourceMType.equals(\n-                                    SourceMappingType.Password)) {\n-                                return Collections.emptyList();\n-                            } else {\n-                                return Collections.emptyList();\n-                            }\n-\n-                        }\n-                    });\n+                @Override\n+                protected void onUpdate(final AjaxRequestTarget target) {\n+                    chooserToPopulate.setChoices(\n+                            new LoadableDetachableModel<List<String>>() {\n+\n+                                @Override\n+                                protected List<String> load() {\n+                                    List<String> result;\n+                                    switch (model.getObject()) {\n+                                        case UserSchema:\n+                                            result = uSchemaAttrNames;\n+                                            break;\n+\n+                                        case RoleSchema:\n+                                            result = rSchemaAttrNames;\n+                                            break;\n+\n+                                        case MembershipSchema:\n+                                            result = mSchemaAttrNames;\n+                                            break;\n+\n+                                        case SyncopeUserId:\n+                                        case Password:\n+                                        default:\n+                                            result = Collections.EMPTY_LIST;\n+                                    }\n+\n+                                    return result;\n+                                }\n+                            });\n                     target.addComponent(chooserToPopulate);\n-                    target.addComponent(mappingUserSchemaContainer);\n+                    target.addComponent(mappingContainer);\n                 }\n             });\n         }"},{"sha":"5c7effa72f20e71e50b77d0ef9b9b4770ab1f767","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/261c934549732062b195719497f63e2a861f6539/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/261c934549732062b195719497f63e2a861f6539/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=261c934549732062b195719497f63e2a861f6539","patch":"@@ -110,7 +110,7 @@ public class Users extends BasePage {\n \n                 @Override\n                 protected List<String> load() {\n-                    return schemaRestClient.getAllUserSchemasNames();\n+                    return schemaRestClient.getAllUSchemaNames();\n                 }\n             };\n "},{"sha":"822b4eb41d925286fb920f4c2784197fcdbdd8ba","filename":"console/src/main/java/org/syncope/console/rest/SchemaRestClient.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/261c934549732062b195719497f63e2a861f6539/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/261c934549732062b195719497f63e2a861f6539/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java?ref=261c934549732062b195719497f63e2a861f6539","patch":"@@ -52,7 +52,7 @@ public List<SchemaTO> getAllUserSchemas() {\n      * Get all user's schemas names.\n      * @return String list of schemas' names.\n      */\n-    public List<String> getAllUserSchemasNames() {\n+    public List<String> getAllUSchemaNames() {\n \n         List<SchemaTO> userSchemas = null;\n         List<String> schemasNames = new ArrayList<String>();\n@@ -252,7 +252,7 @@ public List<SchemaTO> getAllRoleSchemas() {\n      * Get all role's schemas names.\n      * @return String list of role schemas' names\n      */\n-    public List<String> getAllRoleSchemasNames() {\n+    public List<String> getAllRSchemaNames() {\n \n         List<SchemaTO> roleSchemas = null;\n         List<String> roleSchemasNames = new ArrayList<String>();\n@@ -275,7 +275,7 @@ public List<String> getAllRoleSchemasNames() {\n      * Get all role's schemas names.\n      * @return String list of role schemas' names\n      */\n-    public List<String> getAllMembershipSchemasNames() {\n+    public List<String> getAllMSchemaNames() {\n \n         List<SchemaTO> membershipSchemas = null;\n         List<String> membershipSchemasNames = new ArrayList<String>();"},{"sha":"08fafc7537717a638c0c01452f701be0ec54b5c1","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage.html","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/261c934549732062b195719497f63e2a861f6539/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/261c934549732062b195719497f63e2a861f6539/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html?ref=261c934549732062b195719497f63e2a861f6539","patch":"@@ -73,34 +73,32 @@\n                             </td>\n                         </tr>\n                     </tfoot>\n-                    <tbody wicket:id=\"mappingUserSchemaContainer\">\n-                        <tr wicket:id=\"mappingsUserSchema\">\n+                    <tbody wicket:id=\"mappingContainer\">\n+                        <tr wicket:id=\"mappings\">\n                             <td align=\"center\" valign=\"middle\">\n                                 <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n                             </td>\n                             <td>\n-                                <select class=\"text ui-widget-content ui-corner-all\" \n+                                <select class=\"text ui-widget-content ui-corner-all\"\n                                         style=\"width:100%\" wicket:id=\"sourceMappingTypes\"/>\n                             </td>\n                             <td>\n                                 <select class=\"text ui-widget-content ui-corner-all\"\n-                                        style=\"width:100%\" wicket:id=\"schemaAttributes\"/>\n+                                        style=\"width:100%\" wicket:id=\"sourceAttrNames\"/>\n                             </td>\n                             <td align=\"center\" valign=\"middle\">\n-                                <input type=\"text\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"field\"/>\n+                                <input type=\"text\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"destAttrName\"/>\n                             </td>\n                             <td align=\"center\" valign=\"middle\">\n                                 <input type=\"text\"\n                                        class=\"text ui-widget-content ui-corner-all\"\n                                        wicket:id=\"mandatoryCondition\"/>\n                             </td>\n                             <td align=\"center\" valign=\"middle\">\n-                                <input type=\"checkbox\"\n-                                       class=\"checkbox\" wicket:id=\"accountId\"/>\n+                                <input type=\"checkbox\" class=\"checkbox\" wicket:id=\"accountId\"/>\n                             </td>\n                             <td align=\"center\" valign=\"middle\">\n-                                <input type=\"checkbox\"\n-                                       class=\"checkbox\" wicket:id=\"password\"/>\n+                                <input type=\"checkbox\" class=\"checkbox\" wicket:id=\"password\"/>\n                             </td>\n                         </tr>\n                     </tbody>"},{"sha":"ddf8abd0ce18f5f6d7f2ae69a6003c68d35a0249","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage.properties","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/261c934549732062b195719497f63e2a861f6539/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/261c934549732062b195719497f63e2a861f6539/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties?ref=261c934549732062b195719497f63e2a861f6539","patch":"@@ -19,8 +19,6 @@ delete=Delete\n schemaAttributes=Schema attribute\n forceMandatoryConstraint=Force mandatory constraint\n fieldName=Field name\n-accountIdValidation=Cannot set more than one AccountId mapping\n-passwordValidation=Cannot set more than one password mapping\n-customValidation=Custom validation exception\n+accountIdValidation=There must be exactly one AccountId\n optionalPropagationMode=Mode for non-mandatory propagations\n accountLink=Account link"},{"sha":"003ed76ff5d4fa945140ffe2f9032fa934d365c7","filename":"console/src/main/resources/org/syncope/console/pages/ResourceModalPage_it.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/261c934549732062b195719497f63e2a861f6539/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/261c934549732062b195719497f63e2a861f6539/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties?ref=261c934549732062b195719497f63e2a861f6539","patch":"@@ -19,7 +19,7 @@ delete=Elimina\n schemaAttributes=Attributi Schema\n forceMandatoryConstraint=Forza mandatory constraint\n fieldName=Nome campo\n-accountIdValidation=Non \\u00e8 possibile impostare pi\\u00f9 di un campo accountId nel mapping\n-passwordValidation=Non \\u00e8 possibile impostare pi\\u00f9 di un password nel mapping\n+\n+accountIdValidation=Deve essere definito esattamente un AccountId\n optionalPropagationMode=Modalit\\u00e0 per propagazioni non obbligatorie\n accountLink=Account link"}]}