{"sha":"3ed172a7f3169a1c39a31724b2ca67d126792cfb","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjNlZDE3MmE3ZjMxNjlhMWMzOWEzMTcyNGIyY2E2N2QxMjY3OTJjZmI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-04-14T06:15:33Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-04-14T06:21:10Z"},"message":"cleanup for better extendability","tree":{"sha":"8a620ba7f280b05fb287e14113651bad2943d89c","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8a620ba7f280b05fb287e14113651bad2943d89c"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/3ed172a7f3169a1c39a31724b2ca67d126792cfb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3ed172a7f3169a1c39a31724b2ca67d126792cfb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3ed172a7f3169a1c39a31724b2ca67d126792cfb","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3ed172a7f3169a1c39a31724b2ca67d126792cfb/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"bb9fa3f8014c0013a1a99e3d9b4b1e71e94b859b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bb9fa3f8014c0013a1a99e3d9b4b1e71e94b859b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bb9fa3f8014c0013a1a99e3d9b4b1e71e94b859b"}],"stats":{"total":86,"additions":38,"deletions":48},"files":[{"sha":"005fd7b10946601aaa8cadbbc03b28225d0bddc4","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/AnyWizardBuilder.java","status":"modified","additions":9,"deletions":17,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3ed172a7f3169a1c39a31724b2ca67d126792cfb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3ed172a7f3169a1c39a31724b2ca67d126792cfb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FAnyWizardBuilder.java?ref=3ed172a7f3169a1c39a31724b2ca67d126792cfb","patch":"@@ -38,7 +38,6 @@\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.GroupableRelatableTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.extensions.wizard.WizardModel;\n \n@@ -116,44 +115,37 @@ protected WizardModel buildModelSteps(final AnyWrapper<A> modelObject, final Wiz\n \n         // attributes panel steps\n         if (formLayoutInfo.isPlainAttrs()) {\n-            wizardModel.add(new PlainAttrs(\n-                    modelObject,\n-                    null,\n-                    mode,\n-                    anyTypeClasses,\n-                    formLayoutInfo.getWhichPlainAttrs()) {\n+            wizardModel.add(\n+                    new PlainAttrs(modelObject, null, mode, anyTypeClasses, formLayoutInfo.getWhichPlainAttrs()) {\n \n                 private static final long serialVersionUID = 8167894751609598306L;\n \n                 @Override\n                 public PageReference getPageReference() {\n                     return pageRef;\n                 }\n-\n             });\n         }\n         if (formLayoutInfo.isDerAttrs() && mode != AjaxWizard.Mode.TEMPLATE) {\n-            wizardModel.add(new DerAttrs(\n-                    modelObject, anyTypeClasses, formLayoutInfo.getWhichDerAttrs()));\n+            wizardModel.add(new DerAttrs(modelObject, anyTypeClasses, formLayoutInfo.getWhichDerAttrs()));\n         }\n         if (formLayoutInfo.isVirAttrs()) {\n-            wizardModel.add(new VirAttrs(\n-                    modelObject, mode, anyTypeClasses, formLayoutInfo.getWhichVirAttrs()));\n+            wizardModel.add(new VirAttrs(modelObject, mode, anyTypeClasses, formLayoutInfo.getWhichVirAttrs()));\n         }\n \n         // role panel step (just available for users)\n         if ((this instanceof UserWizardBuilder)\n-                && (modelObject.getInnerObject() instanceof UserTO)\n-                && (formLayoutInfo instanceof UserFormLayoutInfo)\n+                && modelObject instanceof UserWrapper\n+                && formLayoutInfo instanceof UserFormLayoutInfo\n                 && UserFormLayoutInfo.class.cast(formLayoutInfo).isRoles()) {\n \n-            wizardModel.add(new Roles(modelObject));\n+            wizardModel.add(new Roles((UserWrapper) modelObject));\n         }\n \n         // relationship panel step (available for users and any objects)\n-        if (((formLayoutInfo instanceof UserFormLayoutInfo)\n+        if ((formLayoutInfo instanceof UserFormLayoutInfo\n                 && UserFormLayoutInfo.class.cast(formLayoutInfo).isRelationships())\n-                || ((formLayoutInfo instanceof AnyObjectFormLayoutInfo)\n+                || (formLayoutInfo instanceof AnyObjectFormLayoutInfo\n                 && AnyObjectFormLayoutInfo.class.cast(formLayoutInfo).isRelationships())) {\n \n             wizardModel.add(new Relationships(modelObject, pageRef));"},{"sha":"050829d2bf810ce4a04536d1e8bbd660fb09f045","filename":"client/idrepo/console/src/main/java/org/apache/syncope/client/console/wizards/any/Roles.java","status":"modified","additions":29,"deletions":31,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/3ed172a7f3169a1c39a31724b2ca67d126792cfb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/3ed172a7f3169a1c39a31724b2ca67d126792cfb/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java?ref=3ed172a7f3169a1c39a31724b2ca67d126792cfb","patch":"@@ -19,11 +19,9 @@\n package org.apache.syncope.client.console.wizards.any;\n \n import org.apache.syncope.client.ui.commons.wizards.any.UserWrapper;\n-import org.apache.syncope.client.ui.commons.wizards.any.AnyWrapper;\n import java.util.List;\n import java.util.stream.Collectors;\n import org.apache.commons.collections4.CollectionUtils;\n-import org.apache.commons.collections4.ListUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.SyncopeWebApplication;\n import org.apache.syncope.client.console.rest.RoleRestClient;\n@@ -34,6 +32,7 @@\n import org.apache.syncope.common.lib.to.RoleTO;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n+import org.apache.wicket.Component;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.ActionPermissions;\n import org.apache.wicket.authroles.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.wizard.WizardModel.ICondition;\n@@ -47,27 +46,22 @@ public class Roles extends WizardStep implements ICondition {\n \n     private static final long serialVersionUID = 552437609667518888L;\n \n-    private final List<String> allRoles;\n+    protected final List<String> allRoles;\n \n     protected final UserTO userTO;\n \n     protected WebMarkupContainer dynrolesContainer;\n \n-    public <T extends AnyTO> Roles(final AnyWrapper<?> modelObject) {\n-        if (!(modelObject.getInnerObject() instanceof UserTO)) {\n-            throw new IllegalStateException(\"Invalid instance \" + modelObject.getInnerObject());\n-        }\n+    public <T extends AnyTO> Roles(final UserWrapper modelObject) {\n+        if (modelObject.getPreviousUserTO() != null\n+                && !modelObject.getInnerObject().getRoles().equals(modelObject.getPreviousUserTO().getRoles())) {\n \n-        if (UserWrapper.class.cast(modelObject).getPreviousUserTO() != null\n-                && !ListUtils.isEqualList(\n-                        UserWrapper.class.cast(modelObject).getInnerObject().getRoles(),\n-                        UserWrapper.class.cast(modelObject).getPreviousUserTO().getRoles())) {\n             add(new LabelInfo(\"changed\", StringUtils.EMPTY));\n         } else {\n             add(new Label(\"changed\", StringUtils.EMPTY));\n         }\n \n-        userTO = UserTO.class.cast(modelObject.getInnerObject());\n+        userTO = modelObject.getInnerObject();\n \n         // -----------------------------------------------------------------\n         // Pre-Authorizations\n@@ -80,9 +74,29 @@ public <T extends AnyTO> Roles(final AnyWrapper<?> modelObject) {\n \n         this.setOutputMarkupId(true);\n \n-        allRoles = getManagedRoles();\n+        allRoles = getManagedRoles();add\n+\n+        add(buildRolesSelector(modelObject));\n+\n+        dynrolesContainer = new WebMarkupContainer(\"dynrolesContainer\");\n+        dynrolesContainer.setOutputMarkupId(true);\n+        dynrolesContainer.setOutputMarkupPlaceholderTag(true);\n+        add(dynrolesContainer);\n+\n+        dynrolesContainer.add(new AjaxPalettePanel.Builder<String>().build(\"dynroles\",\n+                new PropertyModel<>(userTO, \"dynRoles\"),\n+                new ListModel<>(allRoles)).hideLabel().setEnabled(false).setOutputMarkupId(true));\n+    }\n \n-        add(new AjaxPalettePanel.Builder<String>().\n+    protected List<String> getManagedRoles() {\n+        return SyncopeWebApplication.get().getSecuritySettings().getAuthorizationStrategy().\n+                isActionAuthorized(this, RENDER)\n+                ? RoleRestClient.list().stream().map(RoleTO::getKey).sorted().collect(Collectors.toList())\n+                : List.of();\n+    }\n+\n+    protected Component buildRolesSelector(final UserWrapper modelObject) {\n+        return new AjaxPalettePanel.Builder<String>().\n                 withFilter().\n                 setAllowOrder(true).\n                 build(\"roles\",\n@@ -105,16 +119,7 @@ public List<String> execute(final String filter) {\n                     }\n                 }).\n                 hideLabel().\n-                setOutputMarkupId(true));\n-\n-        dynrolesContainer = new WebMarkupContainer(\"dynrolesContainer\");\n-        dynrolesContainer.setOutputMarkupId(true);\n-        dynrolesContainer.setOutputMarkupPlaceholderTag(true);\n-        add(dynrolesContainer);\n-\n-        dynrolesContainer.add(new AjaxPalettePanel.Builder<String>().build(\"dynroles\",\n-                new PropertyModel<>(userTO, \"dynRoles\"),\n-                new ListModel<>(allRoles)).hideLabel().setEnabled(false).setOutputMarkupId(true));\n+                setOutputMarkupId(true);\n     }\n \n     @Override\n@@ -123,11 +128,4 @@ public final boolean evaluate() {\n                 && SyncopeWebApplication.get().getSecuritySettings().getAuthorizationStrategy().\n                         isActionAuthorized(this, RENDER);\n     }\n-\n-    protected List<String> getManagedRoles() {\n-        return SyncopeWebApplication.get().getSecuritySettings().getAuthorizationStrategy().\n-                isActionAuthorized(this, RENDER)\n-                ? RoleRestClient.list().stream().map(RoleTO::getKey).sorted().collect(Collectors.toList())\n-                : List.of();\n-    }\n }"}]}