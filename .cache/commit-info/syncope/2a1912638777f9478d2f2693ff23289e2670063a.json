{"sha":"2a1912638777f9478d2f2693ff23289e2670063a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjJhMTkxMjYzODc3N2Y5NDc4ZDJmMjY5M2ZmMjMyODllMjY3MDA2M2E=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-01-12T13:49:37Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-01-12T13:49:37Z"},"message":"Merge branch 'master' into 2_0_X","tree":{"sha":"26b4750f335f2f2ec9c08d02380ee3fb2b9ff586","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/26b4750f335f2f2ec9c08d02380ee3fb2b9ff586"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/2a1912638777f9478d2f2693ff23289e2670063a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2a1912638777f9478d2f2693ff23289e2670063a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/2a1912638777f9478d2f2693ff23289e2670063a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/2a1912638777f9478d2f2693ff23289e2670063a/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"99369c3115b9feec77bebff5fbbb2813d72aedf5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/99369c3115b9feec77bebff5fbbb2813d72aedf5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/99369c3115b9feec77bebff5fbbb2813d72aedf5"},{"sha":"6c4b559f3b251d157a23ccb132d61fb0ae66b125","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6c4b559f3b251d157a23ccb132d61fb0ae66b125","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6c4b559f3b251d157a23ccb132d61fb0ae66b125"}],"stats":{"total":830,"additions":249,"deletions":581},"files":[{"sha":"2082fc5505027d3c0bfb930926cb33062a645c5d","filename":"common/src/main/java/org/apache/syncope/common/services/RouteService.java","status":"modified","additions":18,"deletions":13,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a1912638777f9478d2f2693ff23289e2670063a/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRouteService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a1912638777f9478d2f2693ff23289e2670063a/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRouteService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FRouteService.java?ref=2a1912638777f9478d2f2693ff23289e2670063a","patch":"@@ -29,43 +29,48 @@\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-import org.apache.cxf.jaxrs.model.wadl.Description;\n-import org.apache.cxf.jaxrs.model.wadl.Descriptions;\n-import org.apache.cxf.jaxrs.model.wadl.DocTarget;\n import org.apache.syncope.common.to.RouteTO;\n import org.apache.syncope.common.types.SubjectType;\n \n-@Path(\"routes/{kind}\")\n+@Path(\"routes/{subject}\")\n public interface RouteService extends JAXRSService {\n \n     /**\n      * Checks whether Camel is choosed as default provisioning engine.\n      *\n-     * @param kind user or role\n+     * @param subject user or role\n      * @return <tt>Response</tt> contains special syncope HTTP header indicating if Camel is enabled for\n      * users / roles provisioning\n      * @see org.apache.syncope.common.types.RESTHeaders#CAMEL_USER_PROVISIONING_MANAGER\n      * @see org.apache.syncope.common.types.RESTHeaders#CAMEL_ROLE_PROVISIONING_MANAGER\n      *\n-     * @Descriptions({\n-     * @Description(target = DocTarget.RESPONSE,\n-     * value = \"Contains special syncope HTTP header indicating if Camel is the default provisioning manager\")\n-     * }) */\n+     */\n     @OPTIONS\n-    Response getOptions(@NotNull @PathParam(\"kind\") SubjectType kind);\n+    Response getOptions(@NotNull @PathParam(\"subject\") SubjectType subject);\n \n     @GET\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n-    List<RouteTO> getRoutes(@NotNull @PathParam(\"kind\") SubjectType kind);\n+    List<RouteTO> getRoutes(@NotNull @PathParam(\"subject\") SubjectType subject);\n \n     @GET\n     @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Path(\"{id}\")\n-    public RouteTO getRoute(@NotNull @PathParam(\"kind\") SubjectType kind, @PathParam(\"id\") Long Id);\n+    public RouteTO getRoute(@NotNull @PathParam(\"subject\") SubjectType subject, @PathParam(\"id\") Long Id);\n+    \n+    @GET\n+    @Produces({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Path(\"{id}\")\n+    public RouteTO getRoute(@PathParam(\"id\") Long Id);\n \n     @PUT\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     @Path(\"{id}\")\n-    void importRoute(@NotNull @PathParam(\"kind\") SubjectType kind,@PathParam(\"id\") Long id, RouteTO route);\n+    void importRoute(@NotNull @PathParam(\"subject\") SubjectType subject,@PathParam(\"id\") Long id, RouteTO route);\n+    \n+    @PUT\n+    @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n+    @Path(\"{id}\")\n+    void importRoute(@PathParam(\"id\") Long id, RouteTO route);\n+\n \n }"},{"sha":"f6c55b4a61fd6beec30836434fb0d042d060ee55","filename":"common/src/main/java/org/apache/syncope/common/services/WorkflowService.java","status":"modified","additions":0,"deletions":8,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a1912638777f9478d2f2693ff23289e2670063a/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a1912638777f9478d2f2693ff23289e2670063a/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FWorkflowService.java?ref=2a1912638777f9478d2f2693ff23289e2670063a","patch":"@@ -87,12 +87,4 @@ public interface WorkflowService extends JAXRSService {\n     @Consumes({ MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON })\n     void importDefinition(@NotNull @PathParam(\"kind\") SubjectType kind, @NotNull String definition);\n     \n-    @GET\n-    @Path(\"{id}\")\n-    @Produces({ MediaType.APPLICATION_XML })\n-    Response getRoute(@PathParam(\"id\") Long id);\n-    \n-    @GET\n-    @Produces({ MediaType.APPLICATION_XML })\n-    Response getRoutes();\n }"},{"sha":"9b6f25f54ef475fc0793eb144c8e5bafc677a530","filename":"common/src/main/java/org/apache/syncope/common/to/RouteTO.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a1912638777f9478d2f2693ff23289e2670063a/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRouteTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a1912638777f9478d2f2693ff23289e2670063a/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRouteTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FRouteTO.java?ref=2a1912638777f9478d2f2693ff23289e2670063a","patch":"@@ -21,6 +21,7 @@\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.syncope.common.AbstractBaseBean;\n+import org.apache.syncope.common.types.SubjectType;\n \n @XmlRootElement(name = \"route\")\n @XmlType\n@@ -32,6 +33,8 @@ public class RouteTO extends AbstractBaseBean {\n \n     private String routeContent;\n \n+    private SubjectType subject;\n+\n     public void setId(Long id) {\n         this.id = id;\n     }\n@@ -47,6 +50,14 @@ public void setName(final String name) {\n     public String getName() {\n         return name;\n     }\n+    \n+    public SubjectType getSubject() {\n+        return subject;\n+    }\n+\n+    public void setSubject(SubjectType subject) {\n+        this.subject = subject;\n+    }\n \n     public String getRouteContent() {\n         return routeContent;"},{"sha":"54c5132d71bc571c7130f2cd2f2d36cb73486e4f","filename":"console/src/main/java/org/apache/syncope/console/pages/Configuration.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a1912638777f9478d2f2693ff23289e2670063a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a1912638777f9478d2f2693ff23289e2670063a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java?ref=2a1912638777f9478d2f2693ff23289e2670063a","patch":"@@ -37,6 +37,7 @@\n import org.apache.syncope.console.commons.AttrLayoutType;\n import org.apache.syncope.common.types.LoggerLevel;\n import org.apache.syncope.common.types.PolicyType;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.HttpResourceStream;\n import org.apache.syncope.console.commons.PreferenceManager;\n@@ -52,7 +53,6 @@\n import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.console.wicket.markup.html.link.VeilPopupSettings;\n-import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n@@ -809,8 +809,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                             @Override\n                             public Page createPage() {\n-                                return new RouteModalPage(Configuration.this.getPageReference(), editRouteWin, routeRestClient.readRoute(model.getObject().getId()), false);\n-                                //throw new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n+                                return new RouteModalPage(Configuration.this.getPageReference(), editRouteWin, \n+                                        routeRestClient.readRoute(model.getObject().getId(),model.getObject().getSubject()), false);                                \n                             }\n \n                         });\n@@ -860,7 +860,8 @@ public RouteProvider() {\n \n         @Override\n         public Iterator<? extends RouteTO> iterator(long first, long count) {\n-            List<RouteTO> list =  routeRestClient.readRoutes();\n+            List<RouteTO> list =  routeRestClient.readRoutes(SubjectType.USER);\n+            list.addAll(routeRestClient.readRoutes(SubjectType.ROLE));\n \n             Collections.sort(list, comparator);\n \n@@ -869,7 +870,8 @@ public Iterator<? extends RouteTO> iterator(long first, long count) {\n \n         @Override\n         public long size() {\n-            return routeRestClient.readRoutes().size();\n+            return (routeRestClient.readRoutes(SubjectType.USER).size() + \n+                    routeRestClient.readRoutes(SubjectType.ROLE).size());\n         }\n \n         @Override"},{"sha":"79650237eebc73251090c90360b38d2a4f7e0210","filename":"console/src/main/java/org/apache/syncope/console/pages/RouteModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a1912638777f9478d2f2693ff23289e2670063a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRouteModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a1912638777f9478d2f2693ff23289e2670063a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRouteModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FRouteModalPage.java?ref=2a1912638777f9478d2f2693ff23289e2670063a","patch":"@@ -44,7 +44,7 @@ public class RouteModalPage extends BaseModalPage{\n      public RouteModalPage(final PageReference pageRef, final ModalWindow window,\n             final RouteTO routeTO, final boolean createFlag){\n          \n-        Form routeForm = new Form(\"routeDefForm\");            \n+        Form<RouteTO> routeForm = new Form<RouteTO>(\"routeDefForm\");            \n         \n         final TextArea<String> routeDefArea = new TextArea<String>(\"routeContent\", new PropertyModel<String>(routeTO, \"routeContent\"));       \n         //routeDefArea.setOutputMarkupId(true);      \n@@ -62,7 +62,7 @@ public RouteModalPage(final PageReference pageRef, final ModalWindow window,\n                     @Override\n                     protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                         try {\n-                            restClient.updateRoute(routeTO.getId(), ((RouteTO)form.getModelObject()).getRouteContent());\n+                            restClient.updateRoute(routeTO.getId(), ((RouteTO)form.getModelObject()).getRouteContent(), routeTO.getSubject());\n                             info(getString(Constants.OPERATION_SUCCEEDED));\n                             \n                             Configuration callerPage = (Configuration) pageRef.getPage();"},{"sha":"90adc3ec5bbdb0f4314e3717cc7077a8886a85a7","filename":"console/src/main/java/org/apache/syncope/console/rest/RouteRestClient.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a1912638777f9478d2f2693ff23289e2670063a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRouteRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a1912638777f9478d2f2693ff23289e2670063a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRouteRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FRouteRestClient.java?ref=2a1912638777f9478d2f2693ff23289e2670063a","patch":"@@ -33,18 +33,18 @@ public class RouteRestClient extends BaseRestClient{\n     \n     protected static final Logger LOG = LoggerFactory.getLogger(RouteRestClient.class);\n     \n-    public List<RouteTO> readRoutes(){\n-        return getService(RouteService.class).getRoutes(SubjectType.USER);\n+    public List<RouteTO> readRoutes(final SubjectType subject){\n+        return getService(RouteService.class).getRoutes(subject);\n     }\n     \n-    public RouteTO readRoute(Long id){\n-        return getService(RouteService.class).getRoute(SubjectType.USER, id);\n+    public RouteTO readRoute(final Long id, final SubjectType subject){\n+        return getService(RouteService.class).getRoute(subject,id);\n     }\n     \n-    public void updateRoute(Long id, String definition){\n-        RouteTO routeTO = readRoute(id);        \n+    public void updateRoute(Long id, String definition, final SubjectType subject){\n+        RouteTO routeTO = readRoute(id,subject);        \n         routeTO.setRouteContent(definition);     \n-        getService(RouteService.class).importRoute(SubjectType.USER, routeTO.getId(), routeTO);\n+        getService(RouteService.class).importRoute(subject, routeTO.getId(), routeTO);\n     }\n     \n     public boolean isCamelEnabledForUsers() {"},{"sha":"afd72c8b9583253c23d11b7bb3b1926f9e2230c4","filename":"core/src/main/java/org/apache/syncope/core/init/CamelRouteLoader.java","status":"modified","additions":62,"deletions":32,"changes":94,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FCamelRouteLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FCamelRouteLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FCamelRouteLoader.java?ref=2a1912638777f9478d2f2693ff23289e2670063a","patch":"@@ -21,6 +21,9 @@\n import java.io.File;\n import java.io.StringWriter;\n import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n import javax.sql.DataSource;\n import javax.xml.parsers.DocumentBuilder;\n import javax.xml.parsers.DocumentBuilderFactory;\n@@ -30,6 +33,7 @@\n import javax.xml.transform.TransformerFactory;\n import javax.xml.transform.dom.DOMSource;\n import javax.xml.transform.stream.StreamResult;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.core.persistence.beans.CamelRoute;\n import org.apache.syncope.core.persistence.dao.RouteDAO;\n import org.slf4j.Logger;\n@@ -51,56 +55,82 @@ public class CamelRouteLoader {\n \n     @Autowired\n     private RouteDAO routeDAO;\n-\n+    \n     @Autowired\n     private DataSource dataSource;\n-\n+    \n+    private int size = 0;\n+    \n+    private boolean routeLoaded = false;\n+    \n     @Transactional\n     public void load() {\n+        if(!routeLoaded){\n+            loadRoutes(\"/userRoute.xml\", SubjectType.USER);\n+            loadRoutes(\"/roleRoute.xml\", SubjectType.ROLE);        \n+            routeLoaded = true;\n+        }\n+    }\n+    \n+    public void loadRoutes(String path, SubjectType subject) {\n \n-        //if(routeDAO.findAll().isEmpty()){\n-        URL url = getClass().getResource(\"/camelRoute.xml\");\n-\n-        File file = new File(url.getPath());\n-        String query = \"INSERT INTO CamelRoute(ID, NAME, ROUTECONTENT) VALUES (?, ?, ?)\";\n-        try {\n-\n-            DocumentBuilder dBuilder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n-            Document doc = dBuilder.parse(file);\n-            doc.getDocumentElement().normalize();\n-\n-            JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n+        if(getRoutes(subject).isEmpty()){\n+            URL url = getClass().getResource(path);\n \n-            NodeList listOfRoutes = doc.getElementsByTagName(\"route\");\n-            for (int s = 0; s < listOfRoutes.getLength(); s++) {\n-                //getting the route node element\n-                Node routeEl = listOfRoutes.item(s);\n-                //crate an instance of CamelRoute Entity\n-                CamelRoute route = new CamelRoute();\n-                route.setName(((Element) routeEl).getAttribute(\"id\"));\n-                route.setRouteContent(nodeToString(listOfRoutes.item(s)));\n+            File file = new File(url.getPath());\n+            String query = \"INSERT INTO CamelRoute(ID, NAME, SUBJECT, ROUTECONTENT) VALUES (?, ?, ?, ?)\";\n+            try {\n \n-                jdbcTemplate.update(query, new Object[] { s + 1, ((Element) routeEl).getAttribute(\"id\"), nodeToString(\n-                    listOfRoutes.item(s)) });\n-                LOG.info(\"Route Registration Successed\");\n+                DocumentBuilder dBuilder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n+                Document doc = dBuilder.parse(file);\n+                doc.getDocumentElement().normalize();\n+                JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n+                NodeList listOfRoutes = doc.getElementsByTagName(\"route\");\n+                for (int s = 0; s < listOfRoutes.getLength(); s++) {\n+                    //getting the route node element\n+                    Node routeEl = listOfRoutes.item(s);\n+                    //crate an instance of CamelRoute Entity\n+                    CamelRoute route = new CamelRoute();\n+                    route.setSubject(subject);\n+                    route.setName(((Element) routeEl).getAttribute(\"id\"));\n+                    route.setRouteContent(nodeToString(listOfRoutes.item(s)));\n+                    jdbcTemplate.update(query, new Object[] { size++, ((Element) routeEl).getAttribute(\"id\"), \n+                                                             subject.name(), nodeToString(listOfRoutes.item(s)) });\n+                    LOG.info(\"Route with id {} Registration Successed\", ((Element) routeEl).getAttribute(\"id\"));\n+                }\n+            } catch (DataAccessException e) {\n+                LOG.error(\"While trying to store queries {}\", e);\n+            } catch (Exception e) {\n+                LOG.error(\"Route Registration failed {}\", e.getMessage());\n             }\n-        } catch (DataAccessException e) {\n-            LOG.error(\"While trying to perform {}\", query, e);\n-        } catch (Exception e) {\n-            LOG.error(\"Route Registration failed {}\", e.getMessage());\n         }\n-        //}\n     }\n-\n+    \n     private String nodeToString(Node node) {\n         StringWriter sw = new StringWriter();\n         try {\n             Transformer t = TransformerFactory.newInstance().newTransformer();\n             t.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, \"yes\");\n             t.transform(new DOMSource(node), new StreamResult(sw));\n         } catch (TransformerException te) {\n-            System.out.println(\"nodeToString Transformer Exception\");\n+            LOG.debug(\"nodeToString Transformer Exception\");\n         }\n         return sw.toString();\n     }\n+    \n+    @Transactional(readOnly = true)\n+    public List<CamelRoute> getRoutes(final SubjectType subject) {                        \n+        String sql = \"SELECT * FROM CAMELROUTE WHERE SUBJECT = ?\";\n+        JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);\n+        List<CamelRoute> routes = new ArrayList<CamelRoute>();\n+        List<Map<String,Object>> rows = jdbcTemplate.queryForList(sql, new Object[] {subject.name()});\n+        for (Map row : rows) {\n+            CamelRoute route = new CamelRoute();                    \n+            route.setName((String)row.get(\"NAME\"));\n+            route.setSubject(SubjectType.valueOf((String)row.get(\"SUBJECT\")));\n+            route.setRouteContent((String) row.get(\"ROUTECONTENT\"));\n+            routes.add(route);\n+        }\n+        return routes;\n+    }\n }"},{"sha":"fc8c8d27e224c3e7023101a68bc12b69a291d713","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/CamelRoute.java","status":"modified","additions":17,"deletions":1,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FCamelRoute.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FCamelRoute.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FCamelRoute.java?ref=2a1912638777f9478d2f2693ff23289e2670063a","patch":"@@ -24,6 +24,10 @@\n import javax.persistence.Lob;\n import javax.persistence.GenerationType;\n import javax.persistence.Column;\n+import javax.persistence.EnumType;\n+import javax.persistence.Enumerated;\n+import javax.validation.constraints.NotNull;\n+import org.apache.syncope.common.types.SubjectType;\n \n @Entity\n public class CamelRoute {\n@@ -34,21 +38,33 @@ public class CamelRoute {\n     private Long id;\n \n     private String name;\n+    \n+    @NotNull\n+    @Enumerated(EnumType.STRING)\n+    private SubjectType subject;\n \n     @Lob\n     private String routeContent;\n \n     public Long getId() {\n         return id;\n     }\n-\n+    \n     public void setName(String name) {\n         this.name = name;\n     }\n \n     public String getName() {\n         return name;\n     }\n+        \n+    public SubjectType getSubject() {\n+        return subject;\n+    }\n+\n+    public void setSubject(SubjectType subject) {\n+        this.subject = subject;\n+    }\n \n     public String getRouteContent() {\n         return routeContent;"},{"sha":"eb95fefbcc657095f3299e0cd29dd4ed4689d440","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/RouteDAO.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRouteDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRouteDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FRouteDAO.java?ref=2a1912638777f9478d2f2693ff23289e2670063a","patch":"@@ -19,16 +19,21 @@\n package org.apache.syncope.core.persistence.dao;\n \n import java.util.List;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n import org.apache.syncope.core.persistence.beans.CamelRoute;\n \n public interface RouteDAO {\n \n     CamelRoute find(Long id);\n-\n+    \n+    CamelRoute find(Long id, SubjectType subject);\n+    \n     List<CamelRoute> findAll();\n \n+    List<CamelRoute> findAll(SubjectType subject);\n+\n     CamelRoute save(CamelRoute route) throws InvalidEntityException;\n \n-    void delete(Long id);\n+    void delete(Long id, SubjectType subject);\n }"},{"sha":"2a1527a266454af485f7025e5e059864f2ea4b76","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/RouteDAOImpl.java","status":"modified","additions":18,"deletions":3,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRouteDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRouteDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FRouteDAOImpl.java?ref=2a1912638777f9478d2f2693ff23289e2670063a","patch":"@@ -20,6 +20,7 @@\n \n import java.util.List;\n import javax.persistence.TypedQuery;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.core.persistence.beans.CamelRoute;\n import org.apache.syncope.core.persistence.dao.RouteDAO;\n import org.apache.syncope.core.persistence.validation.entity.InvalidEntityException;\n@@ -33,12 +34,26 @@ public class RouteDAOImpl extends AbstractDAOImpl implements RouteDAO {\n     public CamelRoute find(final Long id) {\n         return entityManager.find(CamelRoute.class, id);\n     }\n+    \n+    @Override\n+    public CamelRoute find(final Long id, final SubjectType subject) {\n+        return find(id);\n+    }\n \n     @Transactional(readOnly = true)\n     @Override\n     public List<CamelRoute> findAll() {\n         TypedQuery<CamelRoute> query = entityManager.createQuery(\"SELECT e FROM \" + CamelRoute.class.getSimpleName()\n-                + \" e\", CamelRoute.class);\n+                + \" e \", CamelRoute.class);\n+        return query.getResultList();\n+    }\n+    \n+    @Transactional(readOnly = true)\n+    @Override\n+    public List<CamelRoute> findAll(final SubjectType subject) {\n+        TypedQuery<CamelRoute> query = entityManager.createQuery(\"SELECT e FROM \" + CamelRoute.class.getSimpleName()\n+                + \" e WHERE e.subject = :subject\", CamelRoute.class);\n+        query.setParameter(\"subject\",subject);\n         return query.getResultList();\n     }\n \n@@ -48,8 +63,8 @@ public CamelRoute save(final CamelRoute route) throws InvalidEntityException {\n     }\n \n     @Override\n-    public void delete(Long id) {\n-        CamelRoute route = find(id);\n+    public void delete(Long id, final SubjectType subject) {\n+        CamelRoute route = find(id, subject);\n         if (route != null) {\n             entityManager.remove(route);\n         }"},{"sha":"ca7521be7a3cef115d432fea70af6c0323d16526","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/CamelRoleProvisioningManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelRoleProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelRoleProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelRoleProvisioningManager.java?ref=2a1912638777f9478d2f2693ff23289e2670063a","patch":"@@ -69,7 +69,7 @@ public CamelRoleProvisioningManager() throws Exception {\n     }\n \n     public void startContext() throws Exception {\n-        camelContext.start();\n+        getContext().start();\n     }\n \n     public void stopContext() throws Exception {"},{"sha":"137ae80403d2582a4ccb253b2eb617994bb4a3cb","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/CamelUserProvisioningManager.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FCamelUserProvisioningManager.java?ref=2a1912638777f9478d2f2693ff23289e2670063a","patch":"@@ -43,6 +43,7 @@\n import org.apache.syncope.common.mod.UserMod;\n import org.apache.syncope.common.to.PropagationStatus;\n import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.core.persistence.beans.CamelRoute;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.RouteDAO;\n@@ -103,8 +104,8 @@ public SpringCamelContext getContext() {\n         return contextFactory.getContext(routeDAO);\n     }\n \n-    protected List<CamelRoute> getRoutes() {\n-        return routeDAO.findAll();\n+    protected List<CamelRoute> getRoutes(SubjectType subject) {\n+        return routeDAO.findAll(subject);\n     }\n \n     public void changeRoute(String routePath) {"},{"sha":"3acea2c92e2da6d7888c3c5f12eb148d97559647","filename":"core/src/main/java/org/apache/syncope/core/provisioning/camel/SyncopeCamelContext.java","status":"modified","additions":8,"deletions":6,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FSyncopeCamelContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FSyncopeCamelContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fcamel%2FSyncopeCamelContext.java?ref=2a1912638777f9478d2f2693ff23289e2670063a","patch":"@@ -24,23 +24,24 @@\n import java.util.ArrayList;\n import java.util.Iterator;\n import java.util.List;\n-import java.util.logging.Level;\n import javax.xml.bind.JAXBContext;\n import javax.xml.bind.JAXBElement;\n import javax.xml.bind.Unmarshaller;\n import javax.xml.parsers.DocumentBuilder;\n import javax.xml.parsers.DocumentBuilderFactory;\n-import org.apache.camel.CamelContext;\n import org.apache.camel.model.Constants;\n import org.apache.camel.model.RouteDefinition;\n-import org.apache.camel.model.RoutesDefinition;\n import org.apache.camel.spring.SpringCamelContext;\n+import org.apache.syncope.common.types.SubjectType;\n+import org.apache.syncope.core.init.CamelRouteLoader;\n import org.apache.syncope.core.persistence.beans.CamelRoute;\n import org.apache.syncope.core.persistence.dao.RouteDAO;\n import org.apache.syncope.core.util.ApplicationContextProvider;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n+import org.springframework.transaction.annotation.Transactional;\n import org.w3c.dom.Document;\n import org.w3c.dom.Node;\n \n@@ -62,9 +63,8 @@ public SpringCamelContext getContext(RouteDAO routeDAO) {\n         if (camelContext.getRouteDefinitions().isEmpty()) {\n \n             List<CamelRoute> crl = routeDAO.findAll();\n-            LOG.info(\"{} route(s) are going to be loaded \", crl.size());\n+            LOG.debug(\"{} route(s) are going to be loaded \", crl.size());\n             loadContext(routeDAO, crl);\n-\n             try {\n                 camelContext.start();\n             } catch (Exception ex) {\n@@ -101,7 +101,9 @@ public void loadContext(RouteDAO routeDAO, List<CamelRoute> crl) {\n \n     public void reloadContext(RouteDAO routeDAO) {\n \n-        List<CamelRoute> crl = routeDAO.findAll();\n+        List<CamelRoute> crl = new ArrayList<CamelRoute>();\n+        crl.addAll(routeDAO.findAll(SubjectType.USER));\n+        crl.addAll(routeDAO.findAll(SubjectType.ROLE));\n         if (camelContext == null) {\n             getContext(routeDAO);\n         } else {"},{"sha":"404e1013edee3f28eae650921485d89b1493c906","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RouteController.java","status":"modified","additions":14,"deletions":2,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRouteController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRouteController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRouteController.java?ref=2a1912638777f9478d2f2693ff23289e2670063a","patch":"@@ -23,6 +23,7 @@\n import java.util.Iterator;\n import java.util.List;\n import org.apache.syncope.common.to.RouteTO;\n+import org.apache.syncope.common.types.SubjectType;\n import org.apache.syncope.core.persistence.beans.CamelRoute;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n import org.apache.syncope.core.persistence.dao.RouteDAO;\n@@ -50,9 +51,9 @@ public class RouteController extends AbstractTransactionalController<RouteTO> {\n \n     @PreAuthorize(\"hasRole('ROUTE_LIST')\")\n     @Transactional(readOnly = true)\n-    public List<RouteTO> listRoutes() {\n+    public List<RouteTO> listRoutes(final SubjectType subject) {\n         List<RouteTO> routes = new ArrayList<RouteTO>();\n-        Iterator it = routeDao.findAll().iterator();\n+        Iterator it = routeDao.findAll(subject).iterator();\n         while (it.hasNext()) {\n             routes.add(binder.getRouteTO((CamelRoute) it.next()));\n         }\n@@ -69,6 +70,17 @@ public RouteTO readRoute(Long id) {\n \n         return binder.getRouteTO(route);\n     }\n+    \n+    @PreAuthorize(\"hasRole('ROUTE_READ')\")\n+    @Transactional(readOnly = true)\n+    public RouteTO readRoute(Long id, SubjectType subject) {\n+        CamelRoute route = routeDao.find(id, subject);\n+        if (route == null) {\n+            throw new NotFoundException(\"Route with id=\" + id);\n+        }\n+\n+        return binder.getRouteTO(route);\n+    }\n \n     @PreAuthorize(\"hasRole('ROUTE_UPDATE')\")\n     public void updateRoute(RouteTO routeTO) {"},{"sha":"8c2de1b6d96934f9a5cbde1d7f81e5026c24b90c","filename":"core/src/main/java/org/apache/syncope/core/services/RouteServiceImpl.java","status":"modified","additions":16,"deletions":6,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRouteServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRouteServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FRouteServiceImpl.java?ref=2a1912638777f9478d2f2693ff23289e2670063a","patch":"@@ -36,10 +36,10 @@\n public class RouteServiceImpl extends AbstractServiceImpl implements RouteService {\n     \n     @Override\n-    public Response getOptions(final SubjectType kind) {\n+    public Response getOptions(final SubjectType subject) {\n         String key;\n         String value;\n-        if (kind == SubjectType.USER) {\n+        if (subject == SubjectType.USER) {\n             key = RESTHeaders.CAMEL_USER_PROVISIONING_MANAGER;\n             value = Boolean.toString(CamelDetector.isCamelEnabledForUsers());\n         } else {\n@@ -57,19 +57,29 @@ public Response getOptions(final SubjectType kind) {\n     private RouteController controller;\n \n     @Override\n-    public List<RouteTO> getRoutes(SubjectType kind) {\n+    public List<RouteTO> getRoutes(SubjectType subject) {\n \n-        return controller.listRoutes();\n+        return controller.listRoutes(subject);\n     }\n \n     @Override\n-    public RouteTO getRoute(SubjectType kind, Long id) {\n+    public RouteTO getRoute(Long id) {\n \n         return controller.readRoute(id);\n     }\n+    \n+    @Override\n+    public RouteTO getRoute(SubjectType subject, Long id) {\n+        return controller.readRoute(id);\n+    }\n+\n+    @Override\n+    public void importRoute(Long id, RouteTO route) {\n+        controller.updateRoute(route);\n+    }\n \n     @Override\n-    public void importRoute(SubjectType kind,Long id, RouteTO route) {\n+    public void importRoute(SubjectType kind, Long id, RouteTO route) {\n         controller.updateRoute(route);\n     }\n "},{"sha":"8e8afa5ce14cec2b5a6e3aed7ffac21afe46838d","filename":"core/src/main/java/org/apache/syncope/core/services/WorkflowServiceImpl.java","status":"modified","additions":0,"deletions":9,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FWorkflowServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FWorkflowServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fservices%2FWorkflowServiceImpl.java?ref=2a1912638777f9478d2f2693ff23289e2670063a","patch":"@@ -114,13 +114,4 @@ public void importDefinition(final SubjectType kind, final String definition) {\n         }\n     }\n \n-    @Override\n-    public Response getRoute(Long id) {\n-        throw new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n-    }\n-\n-    @Override\n-    public Response getRoutes() {\n-        throw new UnsupportedOperationException(\"Not supported yet.\"); //To change body of generated methods, choose Tools | Templates.\n-    }\n }"},{"sha":"7cebf73771b9035a4bcb18ebd265816f87206544","filename":"core/src/main/resources/camelRoute.xml","status":"removed","additions":0,"deletions":468,"changes":468,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/99369c3115b9feec77bebff5fbbb2813d72aedf5/core%2Fsrc%2Fmain%2Fresources%2FcamelRoute.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/99369c3115b9feec77bebff5fbbb2813d72aedf5/core%2Fsrc%2Fmain%2Fresources%2FcamelRoute.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FcamelRoute.xml?ref=99369c3115b9feec77bebff5fbbb2813d72aedf5","patch":"@@ -1,468 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n-Licensed to the Apache Software Foundation (ASF) under one\n-or more contributor license agreements.  See the NOTICE file\n-distributed with this work for additional information\n-regarding copyright ownership.  The ASF licenses this file\n-to you under the Apache License, Version 2.0 (the\n-\"License\"); you may not use this file except in compliance\n-with the License.  You may obtain a copy of the License at\n-\n-  http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing,\n-software distributed under the License is distributed on an\n-\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-KIND, either express or implied.  See the License for the\n-specific language governing permissions and limitations\n-under the License.\n--->\n-<beans xmlns=\"http://www.springframework.org/schema/beans\"\n-       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n-                           http://www.springframework.org/schema/beans/spring-beans.xsd\n-                           http://camel.apache.org/schema/spring\n-                           http://camel.apache.org/schema/spring/camel-spring.xsd\">\n- \n-  <!--\n-      The default routes define each task involved in user creation:\n-      main operations consist in user workflow creation and its propagation.         \n-  -->\n-  <routeContext id=\"defaultRoutes\" xmlns=\"http://camel.apache.org/schema/spring\">    \n-        \n-    <!--\n-        CREATE USER\n-        This is the entry point of the route and is involved in accepting\n-        the UserTO. When it arrives, the user workflow is created. If the\n-        creation is successfull, the result is sent to propagation, otherwise\n-        if an exception was raised, the exception has to be returned to the\n-        caller. The property actual allows to store the received UserTO in\n-        order to use it later.\n-    -->\n-        \n-    <route id=\"createUser\">\n-      <from uri=\"direct:createUser\"/>\n-      <setProperty propertyName=\"actual\">\n-        <simple>${body}</simple>\n-      </setProperty>\n-      <doTry>\n-        <bean ref=\"uwfAdapter\" method=\"create(${body},${property.disablePwdPolicyCheck},\n-                                 ${property.enabled},${property.storePassword})\"/>\n-        <process ref=\"defaultUserCreatePropagation\" />\n-        <to uri=\"direct:createPort\"/>\n-        <doCatch>        \n-          <exception>java.lang.RuntimeException</exception>\n-          <handled>\n-            <constant>false</constant>\n-          </handled>\n-          <to uri=\"direct:createPort\"/>\n-        </doCatch>\n-      </doTry>\n-    </route> \n-        \n-    <!--\n-        The propagation route deals with propagation of created user. In this\n-        case we used a custom processor to perform this task: it means that\n-        a custom java class contains the propagation strategy.\n-    -->\n-       \n-    <!--\n-        UPDATE USER\n-    -->\n-    <route id=\"updateUser\">\n-      <from uri=\"direct:updateUser\"/>\n-      <setProperty propertyName=\"actual\">\n-        <simple>${body}</simple>\n-      </setProperty>\n-      <doTry>\n-        <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n-        <process ref=\"defaultUserUpdatePropagation\" />\n-        <to uri=\"direct:updatePort\"/>\n-        <doCatch>        \n-          <exception>java.lang.RuntimeException</exception>\n-          <handled>\n-            <constant>false</constant>\n-          </handled>\n-          <to uri=\"direct:updatePort\"/>\n-        </doCatch>\n-      </doTry>\n-    </route>\n-        \n-\n-                \n-    <!--\n-        UPDATE SYNC USER\n-    -->\n-    <route id=\"updateSyncUser\">\n-      <from uri=\"direct:updateSyncUser\"/>            \n-      <doTry>\n-        <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n-        <to uri=\"direct:syncUserStatus\"/>\n-        <doCatch>        \n-          <exception>java.lang.RuntimeException</exception>\n-          <handled>\n-            <constant>false</constant>\n-          </handled>\n-          <to uri=\"direct:updateSyncPort\"/>\n-        </doCatch>\n-      </doTry>\n-    </route>\n-        \n-    <route id=\"syncUserStatus\">\n-      <from uri=\"direct:syncUserStatus\"/>\n-      <process ref=\"userStatusOnSync\" />\n-      <process ref=\"defaultUserUpdateInSyncPropagation\" />\n-      <to uri=\"direct:updateSyncPort\"/>\n-    </route>\n-    <!--\n-        DELETE USER\n-    -->\n-    <route id=\"deleteUser\">\n-      <from uri=\"direct:deleteUser\"/>\n-      <doTry>\n-        <process ref=\"defaultUserDeletePropagation\" />\n-        <bean ref=\"uwfAdapter\" method=\"delete(${body})\"/>\n-        <setBody>\n-          <simple>${property.statuses}</simple>\n-        </setBody>\n-        <to uri=\"direct:deletePort\"/>\n-        <doCatch>        \n-          <exception>java.lang.RuntimeException</exception>\n-          <handled>\n-            <constant>false</constant>\n-          </handled>\n-          <to uri=\"direct:deletePort\"/>\n-        </doCatch>\n-      </doTry>\n-    </route>\n-        \n-    <!-- \n-        UNLINK USER\n-    -->\n-    <route id=\"unlinkUser\">\n-      <from uri=\"direct:unlinkUser\"/>\n-      <doTry>\n-        <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n-        <setBody>\n-          <simple>${body.getResult.getKey}</simple>\n-        </setBody>\n-        <to uri=\"direct:unlinkPort\"/>\n-        <doCatch>        \n-          <exception>java.lang.RuntimeException</exception>\n-          <handled>\n-            <constant>false</constant>\n-          </handled>\n-          <to uri=\"direct:unlinkPort\"/>\n-        </doCatch>\n-      </doTry>            \n-    </route>\n-        \n-    <!--\n-        LINK USER\n-    -->\n-        \n-    <route id=\"linkUser\">\n-      <from uri=\"direct:linkUser\"/>\n-      <doTry>\n-        <bean ref=\"uwfAdapter\" method=\"update(${body})\"/>\n-        <setBody>\n-          <simple>${body.getResult.getKey}</simple>\n-        </setBody>\n-        <to uri=\"direct:linkPort\"/>\n-        <doCatch>        \n-          <exception>java.lang.RuntimeException</exception>\n-          <handled>\n-            <constant>false</constant>\n-          </handled>\n-          <to uri=\"direct:linkPort\"/>\n-        </doCatch>\n-      </doTry>            \n-    </route>\n-        \n-    <!-- \n-        ACTIVATE USER\n-    -->\n-    <route id=\"activateUser\">\n-      <from uri=\"direct:activateUser\"/>\n-      <doTry>\n-        <bean ref=\"uwfAdapter\" method=\"activate(${body}, ${property.token})\"/>\n-        <to uri=\"direct:statusUser\"/>\n-        <doCatch>        \n-          <exception>java.lang.RuntimeException</exception>\n-          <handled>\n-            <constant>false</constant>\n-          </handled>\n-          <to uri=\"direct:statusPort\"/>\n-        </doCatch>\n-      </doTry>    \n-    </route>\n-    <!-- \n-        REACTIVATE USER\n-    -->\n-    <route id=\"reactivateUser\">\n-      <from uri=\"direct:reactivateUser\"/>\n-      <doTry>\n-        <bean ref=\"uwfAdapter\" method=\"reactivate(${body})\"/>\n-        <to uri=\"direct:statusUser\"/>\n-        <doCatch>        \n-          <exception>java.lang.RuntimeException</exception>\n-          <handled>\n-            <constant>false</constant>\n-          </handled>\n-          <to uri=\"direct:statusPort\"/>\n-        </doCatch>\n-      </doTry>    \n-    </route>\n-    <!-- \n-        SUSPEND USER\n-    -->\n-    <route id=\"suspendUser\">\n-      <from uri=\"direct:suspendUser\"/>\n-      <doTry>\n-        <bean ref=\"uwfAdapter\" method=\"suspend(${body})\"/>\n-        <to uri=\"direct:statusUser\"/>\n-        <doCatch>        \n-          <exception>java.lang.RuntimeException</exception>\n-          <handled>\n-            <constant>false</constant>\n-          </handled>\n-          <to uri=\"direct:statusPort\"/>\n-        </doCatch>\n-      </doTry>  \n-    </route>\n-        \n-    <!-- \n-        STATUS PROPAGATION\n-    -->\n-        \n-    <route id=\"statusUser\">\n-      <from uri=\"direct:statusUser\"/>            \n-      <process ref=\"defaultUserStatusPropagation\" />\n-      <to uri=\"direct:statusPort\"/>              \n-    </route>\n-        \n-        \n-    <!--\n-        DEPROVISION USER\n-    -->\n-    <route id=\"deprovisionUser\">\n-      <from uri=\"direct:deprovisionUser\"/>            \n-      <process ref=\"defaultUserDeprovisionPropagation\" />\n-      <to uri=\"direct:deprovisionPort\"/>              \n-    </route>\n-        \n-    <!--\n-        CREATE ROLE\n-    -->\n-        \n-    <route id=\"createRole\">\n-      <from uri=\"direct:createRole\"/>\n-      <setProperty propertyName=\"subject\">\n-        <simple>${body}</simple>\n-      </setProperty>\n-      <doTry>\n-        <bean ref=\"rwfAdapter\" method=\"create(${body})\"/>\n-        <process ref=\"defaultRoleCreatePropagation\" />\n-        <to uri=\"direct:createRolePort\"/>\n-        <doCatch>        \n-          <exception>java.lang.RuntimeException</exception>\n-          <handled>\n-            <constant>false</constant>\n-          </handled>\n-          <to uri=\"direct:createRolePort\"/>\n-        </doCatch>\n-      </doTry>\n-    </route> \n-               \n-    <!--\n-        CREATE ROLE SYNC\n-    -->\n-    <route id=\"createRoleSync\">\n-      <from uri=\"direct:createRoleSync\"/>\n-      <setProperty propertyName=\"subject\">\n-        <simple>${body}</simple>\n-      </setProperty>\n-      <doTry>\n-        <bean ref=\"rwfAdapter\" method=\"create(${body})\"/>\n-        <process ref=\"defaultRoleCreateSyncPropagation\" />\n-        <to uri=\"direct:createRoleSyncPort\"/>\n-        <doCatch>        \n-          <exception>java.lang.RuntimeException</exception>\n-          <handled>\n-            <constant>false</constant>\n-          </handled>\n-          <to uri=\"direct:createRoleSyncPort\"/>\n-        </doCatch>\n-      </doTry>\n-    </route> \n-        \n-         \n-    <!--\n-        UPDATE ROLE\n-    -->\n-    <route id=\"updateRole\">\n-      <from uri=\"direct:updateRole\"/>\n-      <setProperty propertyName=\"subjectMod\">\n-        <simple>${body}</simple>\n-      </setProperty>\n-      <doTry>\n-        <bean ref=\"rwfAdapter\" method=\"update(${body})\"/>\n-        <process ref=\"defaultRoleUpdatePropagation\" />\n-        <to uri=\"direct:updateRolePort\"/>\n-        <doCatch>        \n-          <exception>java.lang.RuntimeException</exception>\n-          <handled>\n-            <constant>false</constant>\n-          </handled>\n-          <to uri=\"direct:updateRolePort\"/>\n-        </doCatch>\n-      </doTry>\n-    </route>\n-               \n-    <!--\n-        DELETE ROLE\n-    -->\n-    <route id=\"deleteRole\">\n-      <from uri=\"direct:deleteRole\"/>\n-      <doTry>\n-        <process ref=\"defaultRoleDeletePropagation\" />\n-        <bean ref=\"rwfAdapter\" method=\"delete(${body})\"/>\n-        <setBody>\n-          <simple>${property.statuses}</simple>\n-        </setBody>\n-        <to uri=\"direct:deleteRolePort\"/>\n-        <doCatch>        \n-          <exception>java.lang.RuntimeException</exception>\n-          <handled>\n-            <constant>false</constant>\n-          </handled>\n-          <to uri=\"direct:deleteRolePort\"/>\n-        </doCatch>\n-      </doTry>\n-    </route>\n-        \n-    <!-- \n-        UNLINK USER\n-    -->\n-    <route id=\"unlinkRole\">\n-      <from uri=\"direct:unlinkRole\"/>\n-      <doTry>\n-        <bean ref=\"rwfAdapter\" method=\"update(${body})\"/>\n-        <setBody>\n-          <simple>${body.getResult}</simple>\n-        </setBody>\n-        <to uri=\"direct:unlinkRolePort\"/>\n-        <doCatch>        \n-          <exception>java.lang.RuntimeException</exception>\n-          <handled>\n-            <constant>false</constant>\n-          </handled>\n-          <to uri=\"direct:unlinkRolePort\"/>\n-        </doCatch>\n-      </doTry>            \n-    </route>\n-        \n-    <!--\n-        LINK USER\n-    -->\n-        \n-    <route id=\"linkRole\">\n-      <from uri=\"direct:linkRole\"/>\n-      <doTry>\n-        <bean ref=\"rwfAdapter\" method=\"update(${body})\"/>\n-        <setBody>\n-          <simple>${body.getResult}</simple>\n-        </setBody>\n-        <to uri=\"direct:linkRolePort\"/>\n-        <doCatch>        \n-          <exception>java.lang.RuntimeException</exception>\n-          <handled>\n-            <constant>false</constant>\n-          </handled>\n-          <to uri=\"direct:linkRolePort\"/>\n-        </doCatch>\n-      </doTry>            \n-    </route>\n-        \n-    <!--\n-        DEPROVISION ROLE\n-    -->\n-    <route id=\"deprovisionRole\">\n-      <from uri=\"direct:deprovisionRole\"/>            \n-      <process ref=\"defaultRoleDeprovisionPropagation\" />\n-      <to uri=\"direct:deprovisionRolePort\"/>              \n-    </route>\n-        \n-    <!--\n-        SUSPEND USER AFTER POLICY VIOLATION\n-    -->\n-        \n-    <route id=\"suspendUserWF\">\n-      <from uri=\"direct:suspendUserWF\"/>\n-      <doTry>\n-        <bean ref=\"uwfAdapter\" method=\"suspend(${body})\"/>\n-        <process ref=\"defaultUserWFSuspendPropagation\"/>\n-        <to uri=\"direct:suspendWFPort\"/>\n-        <doCatch>        \n-          <exception>java.lang.RuntimeException</exception>\n-          <handled>\n-            <constant>false</constant>\n-          </handled>\n-          <to uri=\"direct:suspendWFPort\"/>\n-        </doCatch>\n-      </doTry>  \n-    </route>\n-        \n-    <!--\n-        REQUEST PASSWORD RESET ROUTE\n-    -->\n-        \n-    <route id=\"requestPwdReset\">\n-      <from uri=\"direct:requestPwdReset\"/>\n-      <doTry>\n-        <bean ref=\"uwfAdapter\" method=\"requestPasswordReset(${body})\"/>\n-        <to uri=\"direct:requestPwdResetPort\"/>\n-        <doCatch>        \n-          <exception>java.lang.RuntimeException</exception>\n-          <handled>\n-            <constant>false</constant>\n-          </handled>\n-          <to uri=\"direct:requestPwdResetPort\"/>\n-        </doCatch>\n-      </doTry>  \n-    </route>\n-    <!--\n-        CONFIRM PASSWORD RESET\n-    -->\n-    <route id=\"confirmPwdReset\">\n-      <from uri=\"direct:confirmPwdReset\"/>\n-      <doTry>\n-        <bean ref=\"uwfAdapter\" method=\"confirmPasswordReset(${property.userId},${property.token},${property.password})\"/>\n-        <process ref=\"defaultUserConfirmPwdResetPropagation\" />\n-        <to uri=\"direct:confirmPwdResetPort\"/>\n-        <doCatch>        \n-          <exception>java.lang.RuntimeException</exception>\n-          <handled>\n-            <constant>false</constant>\n-          </handled>\n-          <to uri=\"direct:confirmPwdResetPort\"/>\n-        </doCatch>\n-      </doTry>\n-    </route>\n-        \n-  </routeContext>\n-  <bean id=\"defaultUserCreatePropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultUserCreatePropagation\"/>\n-  <bean id=\"defaultUserUpdatePropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultUserUpdatePropagation\"/>    \n-  <bean id=\"userStatusOnSync\" class=\"org.apache.syncope.core.provisioning.camel.processors.UserStatusOnSync\"/>\n-  <bean id=\"defaultUserUpdateInSyncPropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultUserUpdateInSyncPropagation\"/>\n-  <bean id=\"defaultUserDeletePropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultUserDeletePropagation\"/>    \n-  <bean id=\"defaultUserDeprovisionPropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultUserDeprovisionPropagation\"/>    \n-  <bean id=\"defaultUserWFSuspendPropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultUserWFSuspendPropagation\"/>\n-  <bean id=\"defaultUserStatusPropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultUserStatusPropagation\"/>\n-  <bean id=\"defaultUserConfirmPwdResetPropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultUserConfirmPwdResetPropagation\"/>\n-  <bean id=\"defaultRoleCreatePropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultRoleCreatePropagation\"/>\n-  <bean id=\"defaultRoleCreateSyncPropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultRoleCreateSyncPropagation\"/>\n-  <bean id=\"defaultRoleUpdatePropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultRoleUpdatePropagation\"/>\n-  <bean id=\"defaultRoleDeletePropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultRoleDeletePropagation\"/>    \n-  <bean id=\"defaultRoleDeprovisionPropagation\" class=\"org.apache.syncope.core.provisioning.camel.processors.DefaultRoleDeprovisionPropagation\"/>            \n-</beans>"},{"sha":"3d0d9d7200f6a7ee8bff4b2b8420d170d27f4095","filename":"core/src/main/resources/roleRoute.xml","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fresources%2FroleRoute.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fresources%2FroleRoute.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FroleRoute.xml?ref=2a1912638777f9478d2f2693ff23289e2670063a","patch":"@@ -28,7 +28,6 @@ under the License.\n       The default routes define each task involved in user creation:\n       main operations consist in user workflow creation and its propagation.         \n   -->\n-  <routeContext id=\"defaultRoleRoutes\" xmlns=\"http://camel.apache.org/schema/spring\"> \n     <!--\n         CREATE ROLE\n     -->\n@@ -170,5 +169,4 @@ under the License.\n       <process ref=\"defaultRoleDeprovisionPropagation\" />\n       <to uri=\"direct:deprovisionRolePort\"/>              \n     </route>\n-  </routeContext>\n </beans>"},{"sha":"c95e7fa9eaed1b57a9801dd498ab882419122e58","filename":"core/src/main/resources/userRoute.xml","status":"modified","additions":55,"deletions":9,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fresources%2FuserRoute.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a1912638777f9478d2f2693ff23289e2670063a/core%2Fsrc%2Fmain%2Fresources%2FuserRoute.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FuserRoute.xml?ref=2a1912638777f9478d2f2693ff23289e2670063a","patch":"@@ -27,16 +27,24 @@ under the License.\n   <!--\n       The default routes define each task involved in user creation:\n       main operations consist in user workflow creation and its propagation.         \n-  -->\n-  <routeContext id=\"defaultUserRoutes\" xmlns=\"http://camel.apache.org/schema/spring\">  \t\n+  -->  \t\n+    <!--\n+        CREATE USER\n+        This is the entry point of the route and is involved in accepting\n+        the UserTO. When it arrives, the user workflow is created. If the\n+        creation is successfull, the result is sent to propagation, otherwise\n+        if an exception was raised, the exception has to be returned to the\n+        caller. The property actual allows to store the received UserTO in\n+        order to use it later.\n+    -->\n+        \n     <route id=\"createUser\">\n       <from uri=\"direct:createUser\"/>\n       <setProperty propertyName=\"actual\">\n         <simple>${body}</simple>\n       </setProperty>\n       <doTry>\n-        <bean ref=\"uwfAdapter\" \n-              method=\"create(${body},${property.disablePwdPolicyCheck},\n+        <bean ref=\"uwfAdapter\" method=\"create(${body},${property.disablePwdPolicyCheck},\n                                  ${property.enabled},${property.storePassword})\"/>\n         <process ref=\"defaultUserCreatePropagation\" />\n         <to uri=\"direct:createPort\"/>\n@@ -101,7 +109,7 @@ under the License.\n     <route id=\"syncUserStatus\">\n       <from uri=\"direct:syncUserStatus\"/>\n       <process ref=\"userStatusOnSync\" />\n-      <process ref=\"defaultUserUpdateSyncPropagation\" />\n+      <process ref=\"defaultUserUpdateInSyncPropagation\" />\n       <to uri=\"direct:updateSyncPort\"/>\n     </route>\n     <!--\n@@ -240,9 +248,11 @@ under the License.\n       <process ref=\"defaultUserDeprovisionPropagation\" />\n       <to uri=\"direct:deprovisionPort\"/>              \n     </route>\n-\n-\n-\n+    \n+    <!--\n+        SUSPEND USER AFTER POLICY VIOLATION\n+    -->\n+        \n     <route id=\"suspendUserWF\">\n       <from uri=\"direct:suspendUserWF\"/>\n       <doTry>\n@@ -258,6 +268,42 @@ under the License.\n         </doCatch>\n       </doTry>  \n     </route>\n+        \n+    <!--\n+        REQUEST PASSWORD RESET ROUTE\n+    -->\n+        \n+    <route id=\"requestPwdReset\">\n+      <from uri=\"direct:requestPwdReset\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"requestPasswordReset(${body})\"/>\n+        <to uri=\"direct:requestPwdResetPort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:requestPwdResetPort\"/>\n+        </doCatch>\n+      </doTry>  \n+    </route>\n+    <!--\n+        CONFIRM PASSWORD RESET\n+    -->\n+    <route id=\"confirmPwdReset\">\n+      <from uri=\"direct:confirmPwdReset\"/>\n+      <doTry>\n+        <bean ref=\"uwfAdapter\" method=\"confirmPasswordReset(${property.userId},${property.token},${property.password})\"/>\n+        <process ref=\"defaultUserConfirmPwdResetPropagation\" />\n+        <to uri=\"direct:confirmPwdResetPort\"/>\n+        <doCatch>        \n+          <exception>java.lang.RuntimeException</exception>\n+          <handled>\n+            <constant>false</constant>\n+          </handled>\n+          <to uri=\"direct:confirmPwdResetPort\"/>\n+        </doCatch>\n+      </doTry>\n+    </route>\n \n-  </routeContext>\n </beans>"},{"sha":"844bba29ec920840bfa4039895c0aa73a4277e11","filename":"pom.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/2a1912638777f9478d2f2693ff23289e2670063a/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/2a1912638777f9478d2f2693ff23289e2670063a/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=2a1912638777f9478d2f2693ff23289e2670063a","patch":"@@ -1105,7 +1105,7 @@ under the License.\n         <plugin>\n           <groupId>org.apache.maven.plugins</groupId>\n           <artifactId>maven-war-plugin</artifactId>\n-          <version>2.5</version>\n+          <version>2.6</version>\n           <configuration>\n             <attachClasses>true</attachClasses>\n           </configuration>\n@@ -1141,7 +1141,7 @@ under the License.\n         <plugin>\n           <groupId>org.apache.maven.plugins</groupId>\n           <artifactId>maven-dependency-plugin</artifactId>\n-          <version>2.8</version>\n+          <version>2.9</version>\n           <configuration>\n             <outputDirectory>${bundles.directory}</outputDirectory>\n             <artifactItems>\n@@ -1551,7 +1551,7 @@ under the License.\n                 <plugin>\n                   <groupId>org.apache.maven.plugins</groupId>\n                   <artifactId>maven-project-info-reports-plugin</artifactId>\n-                  <version>2.7</version>\n+                  <version>2.8</version>\n                   <configuration>\n                     <dependencyDetailsEnabled>false</dependencyDetailsEnabled>\n                     <dependencyLocationsEnabled>false</dependencyLocationsEnabled>"}]}