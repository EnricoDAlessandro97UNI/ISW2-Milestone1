{"sha":"159a03b4669f150f5a79ee6f102b6c41c14a946d","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjE1OWEwM2I0NjY5ZjE1MGY1YTc5ZWU2ZjEwMmI2YzQxYzE0YTk0NmQ=","commit":{"author":{"name":"Misagh Moayyed","email":"mm1844@gmail.com","date":"2020-07-10T15:48:10Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2020-07-10T15:48:10Z"},"message":"NOJIRA: Allow push ops to WA to reload services (#202)\n\n* allow push ops to WA to reload/refresh services\r\n\r\n* switch to get\r\n\r\n* rename methods","tree":{"sha":"a50ffcd26c03272795bc1ae84c0e091318138ecd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a50ffcd26c03272795bc1ae84c0e091318138ecd"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/159a03b4669f150f5a79ee6f102b6c41c14a946d","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfCI26CRBK7hj4Ov3rIwAAdHIIAAohkUhpnLDGfXR/mVsSOjRG\np2NnD6oIp7ppLOhopnYqq5LLySCwa2ERtO2nRWGwh4H8GVPOWdbhDOee8xpEsutt\nOAmCvzAHJNgA4Q9aK5LhWszvmjBHTZEg0BUGoI+47pU8RgqgkKnJVTZ3BltdXYQ0\nFVBWcmm7cRBokonLuGgUTwf+aLof5+GHf4g3G2EuB1+VxigOFeWvL0JAZ0aHwET3\n2kN4sW+BzrxXbdYIw1+9l+ZGt6/cd6Q9DWYLeuk7M5QoK4DpllPjDCdnuSbEaH6q\ntCMI2rIgGrsBY6Jz5JlbW660j1WiwF5FJVWaMlx9dimiXZQWxKPnve4CaFOVe+o=\n=TQyh\n-----END PGP SIGNATURE-----\n","payload":"tree a50ffcd26c03272795bc1ae84c0e091318138ecd\nparent a8c39efa167e9cc34a8d1d2c315454ae305a3a84\nauthor Misagh Moayyed <mm1844@gmail.com> 1594396090 +0430\ncommitter GitHub <noreply@github.com> 1594396090 +0430\n\nNOJIRA: Allow push ops to WA to reload services (#202)\n\n* allow push ops to WA to reload/refresh services\r\n\r\n* switch to get\r\n\r\n* rename methods"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/159a03b4669f150f5a79ee6f102b6c41c14a946d","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/159a03b4669f150f5a79ee6f102b6c41c14a946d","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/159a03b4669f150f5a79ee6f102b6c41c14a946d/comments","author":{"login":"mmoayyed","id":1205228,"node_id":"MDQ6VXNlcjEyMDUyMjg=","avatar_url":"https://avatars.githubusercontent.com/u/1205228?v=4","gravatar_id":"","url":"https://api.github.com/users/mmoayyed","html_url":"https://github.com/mmoayyed","followers_url":"https://api.github.com/users/mmoayyed/followers","following_url":"https://api.github.com/users/mmoayyed/following{/other_user}","gists_url":"https://api.github.com/users/mmoayyed/gists{/gist_id}","starred_url":"https://api.github.com/users/mmoayyed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmoayyed/subscriptions","organizations_url":"https://api.github.com/users/mmoayyed/orgs","repos_url":"https://api.github.com/users/mmoayyed/repos","events_url":"https://api.github.com/users/mmoayyed/events{/privacy}","received_events_url":"https://api.github.com/users/mmoayyed/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"a8c39efa167e9cc34a8d1d2c315454ae305a3a84","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a8c39efa167e9cc34a8d1d2c315454ae305a3a84","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a8c39efa167e9cc34a8d1d2c315454ae305a3a84"}],"stats":{"total":59,"additions":57,"deletions":2},"files":[{"sha":"2885db470f04443b494e226fa5d9306614c66182","filename":"common/am/lib/src/main/java/org/apache/syncope/common/lib/types/AMEntitlement.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/159a03b4669f150f5a79ee6f102b6c41c14a946d/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAMEntitlement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/159a03b4669f150f5a79ee6f102b6c41c14a946d/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAMEntitlement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAMEntitlement.java?ref=159a03b4669f150f5a79ee6f102b6c41c14a946d","patch":"@@ -44,6 +44,8 @@ public final class AMEntitlement {\n \n     public static final String CLIENTAPP_DELETE = \"CLIENTAPP_DELETE\";\n \n+    public static final String CLIENTAPP_PUSH = \"CLIENTAPP_PUSH\";\n+\n     public static final String AUTH_MODULE_LIST = \"AUTH_MODULE_LIST\";\n \n     public static final String AUTH_MODULE_CREATE = \"AUTH_MODULE_CREATE\";"},{"sha":"87e91039ca7942433692477edd3b6a3d1b32ae51","filename":"common/am/rest-api/src/main/java/org/apache/syncope/common/rest/api/service/ClientAppService.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/159a03b4669f150f5a79ee6f102b6c41c14a946d/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FClientAppService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/159a03b4669f150f5a79ee6f102b6c41c14a946d/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FClientAppService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fam%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fservice%2FClientAppService.java?ref=159a03b4669f150f5a79ee6f102b6c41c14a946d","patch":"@@ -131,4 +131,11 @@ <T extends ClientAppTO> T read(\n     @Path(\"{type}/{key}\")\n     @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n     void delete(@NotNull @PathParam(\"type\") ClientAppType type, @NotNull @PathParam(\"key\") String key);\n+\n+    @ApiResponses(\n+        @ApiResponse(responseCode = \"204\", description = \"Operation was successful\"))\n+    @POST\n+    @Path(\"push\")\n+    @Produces({ MediaType.APPLICATION_JSON, RESTHeaders.APPLICATION_YAML, MediaType.APPLICATION_XML })\n+    void pushToWA();\n }"},{"sha":"0c9b0cb02ff063060dd133a9ac6d218024d2d854","filename":"core/am/logic/src/main/java/org/apache/syncope/core/logic/ClientAppLogic.java","status":"modified","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/159a03b4669f150f5a79ee6f102b6c41c14a946d/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FClientAppLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/159a03b4669f150f5a79ee6f102b6c41c14a946d/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FClientAppLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FClientAppLogic.java?ref=159a03b4669f150f5a79ee6f102b6c41c14a946d","patch":"@@ -18,11 +18,21 @@\n  */\n package org.apache.syncope.core.logic;\n \n+import java.io.IOException;\n import java.lang.reflect.Method;\n+import java.net.URI;\n+import java.net.http.HttpClient;\n+import java.net.http.HttpRequest;\n+import java.net.http.HttpResponse;\n import java.util.List;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n import org.apache.commons.lang3.ArrayUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.cxf.transport.http.auth.DefaultBasicAuthSupplier;\n+import org.apache.syncope.common.keymaster.client.api.KeymasterException;\n+import org.apache.syncope.common.keymaster.client.api.ServiceOps;\n+import org.apache.syncope.common.keymaster.client.api.model.NetworkService;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.client.ClientAppTO;\n import org.apache.syncope.common.lib.types.AMEntitlement;\n@@ -42,9 +52,16 @@\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n \n+import javax.annotation.Resource;\n+import javax.ws.rs.InternalServerErrorException;\n+import javax.ws.rs.core.HttpHeaders;\n+\n @Component\n public class ClientAppLogic extends AbstractTransactionalLogic<ClientAppTO> {\n \n+    @Autowired\n+    private ServiceOps serviceOps;\n+\n     @Autowired\n     private ClientAppUtilsFactory clientAppUtilsFactory;\n \n@@ -57,6 +74,12 @@ public class ClientAppLogic extends AbstractTransactionalLogic<ClientAppTO> {\n     @Autowired\n     private OIDCRPDAO oidcrpDAO;\n \n+    @Resource(name = \"anonymousUser\")\n+    private String anonymousUser;\n+\n+    @Resource(name = \"anonymousKey\")\n+    private String anonymousKey;\n+\n     @PreAuthorize(\"hasRole('\" + AMEntitlement.CLIENTAPP_LIST + \"')\")\n     public <T extends ClientAppTO> List<T> list(final ClientAppType type) {\n         Stream<T> stream;\n@@ -201,4 +224,22 @@ protected ClientAppTO resolveReference(final Method method, final Object... args\n \n         throw new UnresolvedReferenceException();\n     }\n+\n+    @PreAuthorize(\"hasRole('\" + AMEntitlement.CLIENTAPP_PUSH + \"')\")\n+    public void pushToWA() {\n+        try {\n+            NetworkService wa = serviceOps.get(NetworkService.Type.WA);\n+            HttpClient.newBuilder().build().send(\n+                HttpRequest.newBuilder(URI.create(\n+                    StringUtils.appendIfMissing(wa.getAddress(), \"/\") + \"actuator/registeredServices\")).\n+                    header(HttpHeaders.AUTHORIZATION,\n+                        DefaultBasicAuthSupplier.getBasicAuthHeader(anonymousUser, anonymousKey)).\n+                    GET().build(),\n+                HttpResponse.BodyHandlers.discarding());\n+        } catch (KeymasterException e) {\n+            throw new NotFoundException(\"Could not find any WA instance\", e);\n+        } catch (IOException | InterruptedException e) {\n+            throw new InternalServerErrorException(\"Errors while communicating with WA instance\", e);\n+        }\n+    }\n }"},{"sha":"4ee267688691d650f7dc3c2789d278687fb66901","filename":"core/am/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/ClientAppServiceImpl.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/159a03b4669f150f5a79ee6f102b6c41c14a946d/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FClientAppServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/159a03b4669f150f5a79ee6f102b6c41c14a946d/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FClientAppServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fam%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FClientAppServiceImpl.java?ref=159a03b4669f150f5a79ee6f102b6c41c14a946d","patch":"@@ -63,4 +63,9 @@ public void update(final ClientAppType type, final ClientAppTO clientAppTO) {\n     public void delete(final ClientAppType type, final String key) {\n         logic.delete(type, key);\n     }\n+\n+    @Override\n+    public void pushToWA() {\n+        logic.pushToWA();\n+    }\n }"},{"sha":"b0c4902cfdca42d29aa0c9c94dd7026c8667e1b4","filename":"wa/starter/src/main/java/org/apache/syncope/wa/starter/services/SyncopeWAServiceRegistry.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/159a03b4669f150f5a79ee6f102b6c41c14a946d/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fservices%2FSyncopeWAServiceRegistry.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/159a03b4669f150f5a79ee6f102b6c41c14a946d/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fservices%2FSyncopeWAServiceRegistry.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/wa%2Fstarter%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fwa%2Fstarter%2Fservices%2FSyncopeWAServiceRegistry.java?ref=159a03b4669f150f5a79ee6f102b6c41c14a946d","patch":"@@ -63,7 +63,7 @@ public RegisteredService save(final RegisteredService registeredService) {\n     public boolean delete(final RegisteredService registeredService) {\n         throw new UnsupportedOperationException(\"Deleting registered services from WA is not supported\");\n     }\n-\n+    \n     @Override\n     public Collection<RegisteredService> load() {\n         SyncopeClient syncopeClient = waRestClient.getSyncopeClient();\n@@ -73,7 +73,7 @@ public Collection<RegisteredService> load() {\n         } else {\n             LOG.info(\"Loading application definitions\");\n             return waRestClient.getSyncopeClient().getService(WAClientAppService.class).list().stream().\n-                    map(clientApp -> registeredServiceMapper.toRegisteredService(clientApp)).\n+                    map(registeredServiceMapper::toRegisteredService).\n                     collect(Collectors.toList());\n         }\n     }"}]}