{"sha":"ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmFlMWViZWU3ODE2ZDA5NjliNGQwYWM0MmI0YTJlNjdmMjcwZmJmZDc=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-10-18T10:58:47Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-10-18T10:58:47Z"},"message":"(Fixes issue 183)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1247147 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6d2575e58df861421218d7022efc3352229f959b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/6d2575e58df861421218d7022efc3352229f959b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7/comments","author":null,"committer":null,"parents":[{"sha":"6c468e62c80d836b4f61018bd32199f401fe79a2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6c468e62c80d836b4f61018bd32199f401fe79a2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6c468e62c80d836b4f61018bd32199f401fe79a2"}],"stats":{"total":119,"additions":79,"deletions":40},"files":[{"sha":"9cf47f60d469339f8ee3f72aee74d794b4e94662","filename":"core/src/main/java/org/syncope/core/persistence/propagation/PropagationManager.java","status":"modified","additions":22,"deletions":22,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpersistence%2Fpropagation%2FPropagationManager.java?ref=ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7","patch":"@@ -113,40 +113,30 @@ public class PropagationManager {\n     @Autowired\n     private JexlUtil jexlUtil;\n \n-    /**\n-     * Create the user on every associated resource.\n-     * Exceptions will be ignored.\n-     * @param user to be created.\n-     * @param password to be set.\n-     * @throws PropagationException when anything goes wrong.\n-     */\n-    public void create(final SyncopeUser user, final String password)\n-            throws PropagationException {\n-\n-        create(user, password, Collections.EMPTY_SET);\n-    }\n-\n     /**\n      * Create the user on every associated resource.\n      * It is possible to ask for a mandatory provisioning for some resources\n      * specifying a set of resource names.\n      * Exceptions won't be ignored and the process will be stopped if the\n      * creation fails onto a mandatory resource.\n      *\n-     * @param user to be created.\n-     * @param password to be set.\n+     * @param user to be created\n+     * @param password to be set\n+     * @param enable wether user must be enabled or not\n      * @param mandResNames to ask for mandatory or optional\n-     * provisioning.\n+     * provisioning\n      * @throws PropagationException when anything goes wrong\n      */\n     public void create(final SyncopeUser user,\n-            final String password, final Set<String> mandResNames)\n+            final String password,\n+            final Boolean enable,\n+            final Set<String> mandResNames)\n             throws PropagationException {\n \n         final PropagationByResource propByRes = new PropagationByResource();\n         propByRes.set(PropagationOperation.CREATE, user.getExternalResources());\n \n-        provision(user, password, propByRes,\n+        provision(user, password, enable, propByRes,\n                 mandResNames == null ? Collections.EMPTY_SET : mandResNames);\n     }\n \n@@ -159,17 +149,19 @@ public void create(final SyncopeUser user,\n      *\n      * @param user to be updated.\n      * @param password to be updated.\n+     * @param enable wether user must be enabled or not\n      * @param propByRes operations to perform on each resource.\n      * @param mandResNames to ask for mandatory or optional update.\n      * @throws PropagationException if anything goes wrong\n      */\n     public void update(final SyncopeUser user,\n             final String password,\n+            final Boolean enable,\n             final PropagationByResource propByRes,\n             final Set<String> mandResNames)\n             throws PropagationException {\n \n-        provision(user, password, propByRes,\n+        provision(user, password, enable, propByRes,\n                 mandResNames == null ? Collections.EMPTY_SET : mandResNames);\n     }\n \n@@ -192,7 +184,7 @@ public void delete(final SyncopeUser user,\n         propByRes.set(PropagationOperation.DELETE,\n                 user.getExternalResources());\n \n-        provision(user, null, propByRes,\n+        provision(user, null, false, propByRes,\n                 mandResNames == null ? Collections.EMPTY_SET : mandResNames);\n     }\n \n@@ -201,13 +193,15 @@ public void delete(final SyncopeUser user,\n      *\n      * @param user user to be provisioned\n      * @param password cleartext password to be provisioned\n+     * @param enable wether user must be enabled or not\n      * @param propByRes operation to be performed per resource\n      * @param mandResNames resources for mandatory propagation\n      * @throws PropagationException if anything goes wrong\n      */\n     protected void provision(\n             final SyncopeUser user,\n             final String password,\n+            final Boolean enable,\n             final PropagationByResource propByRes,\n             final Set<String> mandResNames)\n             throws PropagationException {\n@@ -225,7 +219,8 @@ protected void provision(\n         for (PropagationOperation type : PropagationOperation.values()) {\n             for (String resourceName : propByRes.get(type)) {\n                 resource = resourceDAO.find(resourceName);\n-                preparedAttrs = prepareAttributes(user, password, resource);\n+                preparedAttrs = prepareAttributes(\n+                        user, password, enable, resource);\n \n                 task = new PropagationTask();\n                 task.setResource(resource);\n@@ -457,13 +452,14 @@ private Map.Entry<String, Attribute> prepareAttribute(\n      *\n      * @param user given user\n      * @param password clear-text password\n+     * @param enable wether user must be enabled or not\n      * @param resource target resource\n      * @return account link + prepared attributes\n      * @throws PropagationException if anything goes wrong\n      */\n     private Map.Entry<String, Set<Attribute>> prepareAttributes(\n             final SyncopeUser user, final String password,\n-            final ExternalResource resource)\n+            final Boolean enable, final ExternalResource resource)\n             throws PropagationException {\n \n         LOG.debug(\"Preparing resource attributes for {}\"\n@@ -516,6 +512,10 @@ private Map.Entry<String, Set<Attribute>> prepareAttributes(\n             LOG.debug(\"AccountId will be used just as __UID__ attribute\");\n         }\n \n+        if (enable != null) {\n+            attributes.add(AttributeBuilder.buildEnabled(enable));\n+        }\n+\n         return new DefaultMapEntry(accountId, attributes);\n     }\n "},{"sha":"6dbbe1c38b0e7ffacff2d902a4a6b0318f2ed834","filename":"core/src/main/java/org/syncope/core/workflow/ActivitiUserWorkflowAdapter.java","status":"modified","additions":10,"deletions":7,"changes":17,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FActivitiUserWorkflowAdapter.java?ref=ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7","patch":"@@ -66,7 +66,9 @@ public class ActivitiUserWorkflowAdapter implements UserWorkflowAdapter {\n \n     public static final String TOKEN = \"token\";\n \n-    public static String PROP_BY_RESOURCE = \"propByResource\";\n+    public static final String PROP_BY_RESOURCE = \"propByResource\";\n+\n+    public static final String PROPAGATE_ENABLE = \"propagateEnable\";\n \n     @Autowired\n     private RuntimeService runtimeService;\n@@ -123,7 +125,6 @@ public SyncopeUser create(final UserTO userTO,\n \n         // create and save Activiti user\n         User activitiUser = identityService.newUser(user.getId().toString());\n-        activitiUser.setPassword(userTO.getPassword());\n         identityService.saveUser(activitiUser);\n \n         // Now that user is created locally, let's propagate\n@@ -135,8 +136,10 @@ public SyncopeUser create(final UserTO userTO,\n                     mandatoryResourceNames);\n         }\n \n+        Boolean enable = (Boolean) runtimeService.getVariable(\n+                processInstance.getProcessInstanceId(), PROPAGATE_ENABLE);\n         propagationManager.create(\n-                user, userTO.getPassword(), mandatoryResourceNames);\n+                user, userTO.getPassword(), enable, mandatoryResourceNames);\n \n         return user;\n     }\n@@ -182,7 +185,7 @@ public SyncopeUser activate(final SyncopeUser user, final String token)\n         PropagationByResource propByRes = new PropagationByResource();\n         propByRes.addAll(\n                 PropagationOperation.UPDATE, user.getExternalResources());\n-        propagationManager.update(user, null, propByRes, null);\n+        propagationManager.update(user, null, true, propByRes, null);\n \n         return updated;\n     }\n@@ -211,7 +214,7 @@ public SyncopeUser update(final SyncopeUser user, final UserMod userMod,\n                     mandatoryResourceNames);\n         }\n \n-        propagationManager.update(updated, userMod.getPassword(),\n+        propagationManager.update(updated, userMod.getPassword(), null,\n                 propByRes, mandatoryResourceNames);\n \n         return updated;\n@@ -228,7 +231,7 @@ public SyncopeUser suspend(final SyncopeUser user)\n         PropagationByResource propByRes = new PropagationByResource();\n         propByRes.addAll(\n                 PropagationOperation.UPDATE, user.getExternalResources());\n-        propagationManager.update(user, null, propByRes, null);\n+        propagationManager.update(user, null, false, propByRes, null);\n \n         return updated;\n     }\n@@ -244,7 +247,7 @@ public SyncopeUser reactivate(final SyncopeUser user)\n         PropagationByResource propByRes = new PropagationByResource();\n         propByRes.addAll(\n                 PropagationOperation.UPDATE, user.getExternalResources());\n-        propagationManager.update(user, null, propByRes, null);\n+        propagationManager.update(user, null, true, propByRes, null);\n \n         return updated;\n     }"},{"sha":"b0fd5d5a36dc76cdb188d92a91075730bff0a773","filename":"core/src/main/java/org/syncope/core/workflow/NoOpUserWorkflowAdapter.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2FNoOpUserWorkflowAdapter.java?ref=ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7","patch":"@@ -71,7 +71,7 @@ public SyncopeUser create(final UserTO userTO,\n         }\n \n         propagationManager.create(\n-                user, userTO.getPassword(), mandatoryResourceNames);\n+                user, userTO.getPassword(), false, mandatoryResourceNames);\n \n         return user;\n     }\n@@ -92,7 +92,7 @@ public SyncopeUser activate(final SyncopeUser user, final String token)\n         PropagationByResource propByRes = new PropagationByResource();\n         propByRes.addAll(\n                 PropagationOperation.UPDATE, user.getExternalResources());\n-        propagationManager.update(user, null, propByRes, null);\n+        propagationManager.update(user, null, true, propByRes, null);\n \n         return updated;\n     }\n@@ -115,7 +115,7 @@ public SyncopeUser update(final SyncopeUser user, final UserMod userMod,\n                     mandatoryResourceNames);\n         }\n \n-        propagationManager.update(user, userMod.getPassword(),\n+        propagationManager.update(user, userMod.getPassword(), null,\n                 updated.getValue(), mandatoryResourceNames);\n \n         return updated.getKey();\n@@ -131,7 +131,7 @@ public SyncopeUser suspend(final SyncopeUser user)\n         PropagationByResource propByRes = new PropagationByResource();\n         propByRes.addAll(\n                 PropagationOperation.UPDATE, user.getExternalResources());\n-        propagationManager.update(user, null, propByRes, null);\n+        propagationManager.update(user, null, false, propByRes, null);\n \n         return updated;\n     }\n@@ -146,7 +146,7 @@ public SyncopeUser reactivate(final SyncopeUser user)\n         PropagationByResource propByRes = new PropagationByResource();\n         propByRes.addAll(\n                 PropagationOperation.UPDATE, user.getExternalResources());\n-        propagationManager.update(user, null, propByRes, null);\n+        propagationManager.update(user, null, true, propByRes, null);\n \n         return updated;\n     }"},{"sha":"2df6eff09a2ace6c7d0ff1e1734e3e5bd01323df","filename":"core/src/main/java/org/syncope/core/workflow/activiti/AutoActivate.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FAutoActivate.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FAutoActivate.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fworkflow%2Factiviti%2FAutoActivate.java?ref=ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7","patch":"@@ -0,0 +1,28 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.syncope.core.workflow.activiti;\n+\n+import org.activiti.engine.delegate.DelegateExecution;\n+import org.syncope.core.workflow.ActivitiUserWorkflowAdapter;\n+\n+public class AutoActivate extends AbstractActivitiDelegate {\n+\n+    @Override\n+    protected void doExecute(final DelegateExecution execution)\n+            throws Exception {\n+\n+        execution.setVariable(ActivitiUserWorkflowAdapter.PROPAGATE_ENABLE,\n+                Boolean.TRUE);\n+    }\n+}"},{"sha":"2ee91fe73c33b22c8e64b12ceb98fae0eb96c814","filename":"core/src/main/resources/userWorkflow.bpmn20.xml","status":"modified","additions":10,"deletions":3,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FuserWorkflow.bpmn20.xml?ref=ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7","patch":"@@ -32,9 +32,16 @@\n       \n         <serviceTask id=\"create\" name=\"Create\" activiti:class=\"org.syncope.core.workflow.activiti.Create\"/>\n \n-        <sequenceFlow id=\"flow2\" sourceRef=\"create\" targetRef=\"active\"/>\n-        <!-- Uncomment the following lines and comment the above line in order to\n-             enable opt-in.\n+        <sequenceFlow id=\"flow2\" sourceRef=\"create\" targetRef=\"activate\"/>\n+        \n+        <!-- Comment the following lines and uncomment the lines below in order\n+             to enable opt-in. -->\n+        <serviceTask id=\"activate\" name=\"Activate\" activiti:class=\"org.syncope.core.workflow.activiti.AutoActivate\"/>\n+\n+        <sequenceFlow id=\"flow3\" sourceRef=\"activate\" targetRef=\"active\"/>\n+\n+        <!-- Uncomment the following lines and comment the above line in order\n+             to enable opt-in.\n         <sequenceFlow id=\"flow2\" sourceRef=\"create\" targetRef=\"generateToken\"/>\n         \n         <serviceTask id=\"generateToken\" name=\"Generate token\" activiti:class=\"org.syncope.core.workflow.activiti.GenerateToken\"/>"},{"sha":"792dd2c5328bc1058a5358a111581ca24d629563","filename":"core/src/test/java/org/syncope/core/rest/ConnInstanceTestITCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2FConnInstanceTestITCase.java?ref=ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7","patch":"@@ -311,7 +311,7 @@ public void getSchemaNames() {\n                 resourceTO, String[].class));\n \n         assertNotNull(schemaNames);\n-        assertTrue(schemaNames.isEmpty());\n+        assertTrue(schemaNames.size() == 1);\n \n         resourceTO = restTemplate.getForObject(\n                 BASE_URL + \"/resource/read/{resourceName}.json\","},{"sha":"2ba11d6a575982124ee11653d99058bd6355b04a","filename":"core/src/test/resources/testdb.sql","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7/core%2Fsrc%2Ftest%2Fresources%2Ftestdb.sql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7/core%2Fsrc%2Ftest%2Fresources%2Ftestdb.sql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Ftestdb.sql?ref=ae1ebee7816d0969b4d0ac42b4a2e67f270fbfd7","patch":"@@ -3,6 +3,7 @@ ALTER USER sa SET PASSWORD 'sa';\n DROP TABLE test IF EXISTS;\n CREATE TABLE test (\n id INTEGER PRIMARY KEY,\n-password VARCHAR(255) NOT NULL);\n+password VARCHAR(255) NOT NULL,\n+__ENABLE__ VARCHAR(5));\n \n-INSERT INTO test VALUES (1, 'password');\n+INSERT INTO test VALUES (1, 'password', 'false');"}]}