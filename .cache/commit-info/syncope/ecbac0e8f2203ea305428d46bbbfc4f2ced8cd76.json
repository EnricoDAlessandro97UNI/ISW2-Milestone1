{"sha":"ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmVjYmFjMGU4ZjIyMDNlYTMwNTQyOGQ0NmJiYmZjNGYyY2VkOGNkNzY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-11-12T11:53:36Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-11-12T11:53:36Z"},"message":"[SYNCOPE-173][SYNCOPE-219] (Additional) Moving some classes to new packages as preparation for role-related workflow classes\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/branches/DEV_ROLE_PROVISIONING@1408258 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"19ed7f9189121927d8fb93aac914be1697b0e33d","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/19ed7f9189121927d8fb93aac914be1697b0e33d"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"7afd1181f36b0bf9d8aabafc7e50e516074b4314","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7afd1181f36b0bf9d8aabafc7e50e516074b4314","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7afd1181f36b0bf9d8aabafc7e50e516074b4314"}],"stats":{"total":78,"additions":39,"deletions":39},"files":[{"sha":"4432bba48552e4609b0b2227a62b394b02a21bd8","filename":"core/src/main/java/org/apache/syncope/core/init/ContentLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FContentLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FContentLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FContentLoader.java?ref=ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76","patch":"@@ -156,7 +156,7 @@ public void load() {\n             LOG.error(\"While creating indexes\", e);\n         }\n \n-        // Can't test wfAdapter.getClass() because it is @Autowired\n+        // Can't test uwfAdapter.getClass() because it is @Autowired\n         if (SpringContextInitializer.isActivitiConfigured()) {\n             try {\n                 statement = conn.prepareStatement(\"DELETE FROM ACT_GE_PROPERTY\");"},{"sha":"a94c3330066cbced4d9af7015e8cd6c9404ed9b6","filename":"core/src/main/java/org/apache/syncope/core/init/SpringContextInitializer.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FSpringContextInitializer.java?ref=ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76","patch":"@@ -22,8 +22,8 @@\n import java.io.InputStream;\n import java.util.Properties;\n import javax.servlet.ServletContext;\n-import org.apache.syncope.core.workflow.user.activiti.ActivitiUserWorkflowAdapter;\n import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n+import org.apache.syncope.core.workflow.user.activiti.ActivitiUserWorkflowAdapter;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.BeansException;\n@@ -47,13 +47,13 @@ public class SpringContextInitializer implements ServletContextAware, BeanFactor\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(SpringContextInitializer.class);\n \n-    private static String wfAdapterClassName;\n+    private static String uwfAdapterClassName;\n \n     static {\n         try {\n-            initWFAdapterClassName();\n+            initUWFAdapterClassName();\n         } catch (IOException e) {\n-            LOG.error(\"Could not init wfAdapterClassName\", e);\n+            LOG.error(\"Could not init uwfAdapterClassName\", e);\n         }\n     }\n \n@@ -62,13 +62,13 @@ public class SpringContextInitializer implements ServletContextAware, BeanFactor\n      *\n      * @throws IOException if anything goes wrong\n      */\n-    public static void initWFAdapterClassName() throws IOException {\n+    public static void initUWFAdapterClassName() throws IOException {\n         Properties props = new java.util.Properties();\n         InputStream propStream = null;\n         try {\n             propStream = ContentLoader.class.getResourceAsStream(\"/workflow.properties\");\n             props.load(propStream);\n-            wfAdapterClassName = props.getProperty(\"wfAdapter\");\n+            uwfAdapterClassName = props.getProperty(\"uwfAdapter\");\n         } catch (Exception e) {\n             LOG.error(\"Could not load workflow.properties\", e);\n         } finally {\n@@ -84,7 +84,7 @@ public static void initWFAdapterClassName() throws IOException {\n      * @return whether Activiti is configured for workflow or not\n      */\n     public static boolean isActivitiConfigured() {\n-        return wfAdapterClassName != null && wfAdapterClassName.equals(ActivitiUserWorkflowAdapter.class.getName());\n+        return uwfAdapterClassName != null && uwfAdapterClassName.equals(ActivitiUserWorkflowAdapter.class.getName());\n     }\n \n     @Autowired\n@@ -97,7 +97,7 @@ public static boolean isActivitiConfigured() {\n     private JobInstanceLoader jobInstanceLoader;\n \n     @Autowired\n-    private UserWorkflowAdapter wfAdapter;\n+    private UserWorkflowAdapter uwfAdapter;\n \n     @Autowired\n     private LoggerLoader loggerLoader;\n@@ -124,9 +124,9 @@ public void afterPropertiesSet() throws Exception {\n         loggerLoader.load();\n         classNamesLoader.load();\n \n-        if (wfAdapter.getLoaderClass() != null) {\n+        if (uwfAdapter.getLoaderClass() != null) {\n             final WorkflowLoader wfLoader = (WorkflowLoader) beanFactory.createBean(\n-                    wfAdapter.getLoaderClass(), AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n+                    uwfAdapter.getLoaderClass(), AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n             wfLoader.load();\n         }\n     }"},{"sha":"e44ddb67b3368b5e6b151cf398a577a4e80b3cae","filename":"core/src/main/java/org/apache/syncope/core/policy/AccountPolicyEnforcer.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java?ref=ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76","patch":"@@ -39,7 +39,7 @@\n public class AccountPolicyEnforcer extends PolicyEnforcer<AccountPolicySpec, SyncopeUser> {\n \n     @Autowired\n-    private UserWorkflowAdapter wfAdapter;\n+    private UserWorkflowAdapter uwfAdapter;\n \n     @Autowired\n     private PropagationManager propagationManager;\n@@ -116,7 +116,7 @@ public void enforce(final AccountPolicySpec policy, final PolicyType type, final\n                 user.setFailedLogins(user.getFailedLogins() - 1);\n \n                 // disable user\n-                final WorkflowResult<Long> updated = wfAdapter.suspend(user);\n+                final WorkflowResult<Long> updated = uwfAdapter.suspend(user);\n \n                 // propagate suspension if and only if it is required by policy\n                 if (policy.isPropagateSuspension()) {"},{"sha":"39f1215caa5b7a53ab2b012eb3b2a9b5f33600ae","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76","patch":"@@ -96,7 +96,7 @@ public class UserController {\n     private UserDataBinder userDataBinder;\n \n     @Autowired\n-    private UserWorkflowAdapter wfAdapter;\n+    private UserWorkflowAdapter uwfAdapter;\n \n     @Autowired\n     private PropagationManager propagationManager;\n@@ -289,7 +289,7 @@ public UserTO create(final HttpServletResponse response, @RequestBody final User\n             throw new UnauthorizedRoleException(requestRoleIds);\n         }\n \n-        WorkflowResult<Map.Entry<Long, Boolean>> created = wfAdapter.create(userTO);\n+        WorkflowResult<Map.Entry<Long, Boolean>> created = uwfAdapter.create(userTO);\n \n         List<PropagationTask> tasks = propagationManager.getCreateTaskIds(\n                 created, userTO.getPassword(), userTO.getVirtualAttributes());\n@@ -339,7 +339,7 @@ public UserTO update(@RequestBody final UserMod userMod)\n \n         LOG.debug(\"User update called with {}\", userMod);\n \n-        WorkflowResult<Map.Entry<Long, Boolean>> updated = wfAdapter.update(userMod);\n+        WorkflowResult<Map.Entry<Long, Boolean>> updated = uwfAdapter.update(userMod);\n \n         List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(updated, userMod.getPassword(), userMod.\n                 getVirtualAttributesToBeRemoved(), userMod.getVirtualAttributesToBeUpdated(), null);\n@@ -528,7 +528,7 @@ public UserTO executeWorkflow(@RequestBody final UserTO userTO, @PathVariable(\"t\n \n         LOG.debug(\"About to execute {} on {}\", taskId, userTO.getId());\n \n-        WorkflowResult<Long> updated = wfAdapter.execute(userTO, taskId);\n+        WorkflowResult<Long> updated = uwfAdapter.execute(userTO, taskId);\n \n         List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(new WorkflowResult<Map.Entry<Long, Boolean>>(\n                 new DefaultMapEntry(updated.getResult(), null), updated.getPropByRes(), updated.getPerformedTasks()));\n@@ -551,7 +551,7 @@ public UserTO executeWorkflow(@RequestBody final UserTO userTO, @PathVariable(\"t\n     @RequestMapping(method = RequestMethod.GET, value = \"/workflow/form/list\")\n     @Transactional(readOnly = true, rollbackFor = {Throwable.class})\n     public List<WorkflowFormTO> getForms() {\n-        List<WorkflowFormTO> forms = wfAdapter.getForms();\n+        List<WorkflowFormTO> forms = uwfAdapter.getForms();\n \n         auditManager.audit(Category.user, UserSubCategory.getForms, Result.success,\n                 \"Successfully list workflow forms: \" + forms.size());\n@@ -566,7 +566,7 @@ public WorkflowFormTO getFormForUser(@PathVariable(\"userId\") final Long userId)\n             throws UnauthorizedRoleException, NotFoundException, WorkflowException {\n \n         SyncopeUser user = userDataBinder.getUserFromId(userId);\n-        WorkflowFormTO result = wfAdapter.getForm(user.getWorkflowId());\n+        WorkflowFormTO result = uwfAdapter.getForm(user.getWorkflowId());\n \n         auditManager.audit(Category.user, UserSubCategory.getFormForUser, Result.success,\n                 \"Successfully read workflow form for user: \" + user.getUsername());\n@@ -580,7 +580,7 @@ public WorkflowFormTO getFormForUser(@PathVariable(\"userId\") final Long userId)\n     public WorkflowFormTO claimForm(@PathVariable(\"taskId\") final String taskId)\n             throws NotFoundException, WorkflowException {\n \n-        WorkflowFormTO result = wfAdapter.claimForm(taskId,\n+        WorkflowFormTO result = uwfAdapter.claimForm(taskId,\n                 SecurityContextHolder.getContext().getAuthentication().getName());\n \n         auditManager.audit(Category.user, UserSubCategory.claimForm, Result.success,\n@@ -597,7 +597,7 @@ public UserTO submitForm(@RequestBody final WorkflowFormTO form)\n \n         LOG.debug(\"About to process form {}\", form);\n \n-        WorkflowResult<Map.Entry<Long, String>> updated = wfAdapter.submitForm(form, SecurityContextHolder.getContext().\n+        WorkflowResult<Map.Entry<Long, String>> updated = uwfAdapter.submitForm(form, SecurityContextHolder.getContext().\n                 getAuthentication().getName());\n \n         List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(new WorkflowResult<Map.Entry<Long, Boolean>>(\n@@ -624,11 +624,11 @@ private UserTO setStatus(final SyncopeUser user, final String token, final Set<S\n         WorkflowResult<Long> updated;\n         if (performLocally) {\n             if (\"suspend\".equals(task)) {\n-                updated = wfAdapter.suspend(user.getId());\n+                updated = uwfAdapter.suspend(user.getId());\n             } else if (\"reactivate\".equals(task)) {\n-                updated = wfAdapter.reactivate(user.getId());\n+                updated = uwfAdapter.reactivate(user.getId());\n             } else {\n-                updated = wfAdapter.activate(user.getId(), token);\n+                updated = uwfAdapter.activate(user.getId(), token);\n             }\n         } else {\n             updated = new WorkflowResult<Long>(user.getId(), null, task);\n@@ -664,7 +664,7 @@ protected UserTO doDelete(final Long userId)\n             throws NotFoundException, WorkflowException, PropagationException, UnauthorizedRoleException {\n         // Note here that we can only notify about \"delete\", not any other\n         // task defined in workflow process definition: this because this\n-        // information could only be available after wfAdapter.delete(), which\n+        // information could only be available after uwfAdapter.delete(), which\n         // will also effectively remove user from db, thus making virtually\n         // impossible by NotificationManager to fetch required user information\n         notificationManager.createTasks(userId, Collections.singleton(\"delete\"));\n@@ -696,7 +696,7 @@ public void handle(final String resourceName, final PropagationTaskExecStatus ex\n             }\n         });\n \n-        wfAdapter.delete(userId);\n+        uwfAdapter.delete(userId);\n \n         auditManager.audit(Category.user, UserSubCategory.delete, Result.success,\n                 \"Successfully deleted user: \" + userTO.getUsername());"},{"sha":"7c5253466d924b2cea8234d91c372e30f8c34c02","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/WorkflowController.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FWorkflowController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FWorkflowController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FWorkflowController.java?ref=ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76","patch":"@@ -44,14 +44,14 @@ public class WorkflowController extends AbstractController {\n     private AuditManager auditManager;\n \n     @Autowired\n-    private UserWorkflowAdapter wfAdapter;\n+    private UserWorkflowAdapter uwfAdapter;\n \n     @PreAuthorize(\"hasRole('WORKFLOW_DEF_READ')\")\n     @RequestMapping(method = RequestMethod.GET, value = \"/definition\")\n     @Transactional(readOnly = true)\n     public WorkflowDefinitionTO getDefinition() throws WorkflowException {\n \n-        WorkflowDefinitionTO result = wfAdapter.getDefinition();\n+        WorkflowDefinitionTO result = uwfAdapter.getDefinition();\n \n         auditManager.audit(Category.workflow, WorkflowSubCategory.getDefinition, Result.success,\n                 \"Successfully got workflow definition\");\n@@ -64,7 +64,7 @@ public WorkflowDefinitionTO getDefinition() throws WorkflowException {\n     public void updateDefinition(@RequestBody final WorkflowDefinitionTO definition)\n             throws NotFoundException, WorkflowException {\n \n-        wfAdapter.updateDefinition(definition);\n+        uwfAdapter.updateDefinition(definition);\n \n         auditManager.audit(Category.workflow, WorkflowSubCategory.updateDefinition, Result.success,\n                 \"Successfully updated workflow definition\");\n@@ -74,7 +74,7 @@ public void updateDefinition(@RequestBody final WorkflowDefinitionTO definition)\n     @RequestMapping(method = RequestMethod.GET, value = \"/tasks\")\n     public ModelAndView getDefinedTasks() throws WorkflowException {\n \n-        List<String> definedTasks = wfAdapter.getDefinedTasks();\n+        List<String> definedTasks = uwfAdapter.getDefinedTasks();\n \n         auditManager.audit(Category.workflow, WorkflowSubCategory.getDefinedTasks, Result.success,\n                 \"Successfully got the list of defined workflow tasks: \" + definedTasks.size());"},{"sha":"b7eb10ccd6bb3c366261045adedbe578636ca40e","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncopeSyncResultHanlder.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHanlder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHanlder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncopeSyncResultHanlder.java?ref=ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76","patch":"@@ -107,7 +107,7 @@ public class SyncopeSyncResultHanlder implements SyncResultsHandler {\n      * User workflow adapter.\n      */\n     @Autowired\n-    private UserWorkflowAdapter wfAdapter;\n+    private UserWorkflowAdapter uwfAdapter;\n \n     /**\n      * Propagation Manager.\n@@ -346,7 +346,7 @@ private List<SyncResult> createUser(SyncDelta delta, final boolean dryRun) throw\n                 }\n                 // --------------------------\n \n-                WorkflowResult<Map.Entry<Long, Boolean>> created = wfAdapter.create(userTO, true, enabled);\n+                WorkflowResult<Map.Entry<Long, Boolean>> created = uwfAdapter.create(userTO, true, enabled);\n \n                 List<PropagationTask> tasks = propagationManager.getCreateTaskIds(created, userTO.getPassword(),\n                         userTO.getVirtualAttributes(), Collections.singleton(syncTask.getResource().getName()));\n@@ -401,7 +401,7 @@ private List<SyncResult> updateUsers(SyncDelta delta, final List<Long> users, fi\n                     result.setUsername(userMod.getUsername());\n \n                     if (!dryRun) {\n-                        WorkflowResult<Map.Entry<Long, Boolean>> updated = wfAdapter.update(userMod);\n+                        WorkflowResult<Map.Entry<Long, Boolean>> updated = uwfAdapter.update(userMod);\n \n                         List<PropagationTask> tasks = propagationManager.getUpdateTaskIds(updated,\n                                 userMod.getPassword(), userMod.getVirtualAttributesToBeRemoved(),\n@@ -469,7 +469,7 @@ private List<SyncResult> deleteUsers(SyncDelta delta, final List<Long> users, fi\n                     }\n \n                     try {\n-                        wfAdapter.delete(userId);\n+                        uwfAdapter.delete(userId);\n                     } catch (Exception e) {\n                         result.setStatus(AbstractTaskJob.Status.FAILURE);\n                         result.setMessage(e.getMessage());"},{"sha":"95de60a7921a841476767f151893880112e51dd7","filename":"core/src/main/resources/workflow.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Fmain%2Fresources%2Fworkflow.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Fmain%2Fresources%2Fworkflow.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2Fworkflow.properties?ref=ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76","patch":"@@ -14,5 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-wfAdapter=org.apache.syncope.core.workflow.user.activiti.ActivitiUserWorkflowAdapter\n+uwfAdapter=org.apache.syncope.core.workflow.user.activiti.ActivitiUserWorkflowAdapter\n jobExecutorActivate=true"},{"sha":"4717e7215ee264e7348032b4fad89264281dbf5f","filename":"core/src/main/resources/workflowContext.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fresources%2FworkflowContext.xml?ref=ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76","patch":"@@ -27,7 +27,7 @@ under the License.\n     <constructor-arg value=\"${adminUser}\"/>\n   </bean>\n     \n-  <bean id=\"wfAdapter\" class=\"${wfAdapter}\"/>\n+  <bean id=\"uwfAdapter\" class=\"${uwfAdapter}\"/>\n \n   <bean id=\"syncopeActivitiUserManager\" class=\"org.apache.syncope.core.workflow.user.activiti.SyncopeUserManager\"/>\n   <bean id=\"syncopeActivitiGroupManager\" class=\"org.apache.syncope.core.workflow.user.activiti.SyncopeGroupManager\"/>"},{"sha":"8d3c46724d1a9cb1972657b93862f680b9474a86","filename":"core/src/test/resources/noopworkflow/workflow.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Ftest%2Fresources%2Fnoopworkflow%2Fworkflow.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Ftest%2Fresources%2Fnoopworkflow%2Fworkflow.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fnoopworkflow%2Fworkflow.properties?ref=ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76","patch":"@@ -14,5 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-wfAdapter=org.apache.syncope.core.workflow.NoOpUserWorkflowAdapter\n+uwfAdapter=org.apache.syncope.core.workflow.user.NoOpUserWorkflowAdapter\n jobExecutorActivate=false\n\\ No newline at end of file"},{"sha":"840e134bdc9fa1e1cc49d9e445f7b1d11322d40b","filename":"core/src/test/resources/noopworkflow/workflowContext.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Ftest%2Fresources%2Fnoopworkflow%2FworkflowContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Ftest%2Fresources%2Fnoopworkflow%2FworkflowContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fnoopworkflow%2FworkflowContext.xml?ref=ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76","patch":"@@ -27,7 +27,7 @@ under the License.\n     <constructor-arg value=\"${adminUser}\"/>\n   </bean>\n     \n-  <bean id=\"wfAdapter\" class=\"${wfAdapter}\"/>\n+  <bean id=\"uwfAdapter\" class=\"${uwfAdapter}\"/>\n \n   <bean id=\"velocityEngine\" class=\"org.springframework.ui.velocity.VelocityEngineFactoryBean\">\n     <property name=\"velocityProperties\">"},{"sha":"d451699cb6e1947387172c582f2f9768a3960986","filename":"core/src/test/resources/workflow.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Ftest%2Fresources%2Fworkflow.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76/core%2Fsrc%2Ftest%2Fresources%2Fworkflow.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fworkflow.properties?ref=ecbac0e8f2203ea305428d46bbbfc4f2ced8cd76","patch":"@@ -14,5 +14,5 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-wfAdapter=org.apache.syncope.core.workflow.user.activiti.ActivitiUserWorkflowAdapter\n+uwfAdapter=org.apache.syncope.core.workflow.user.activiti.ActivitiUserWorkflowAdapter\n jobExecutorActivate=false"}]}