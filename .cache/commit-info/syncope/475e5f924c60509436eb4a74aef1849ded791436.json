{"sha":"475e5f924c60509436eb4a74aef1849ded791436","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ3NWU1ZjkyNGM2MDUwOTQzNmViNGE3NGFlZjE4NDlkZWQ3OTE0MzY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-03-06T13:03:25Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2020-03-06T16:54:06Z"},"message":"[SYNCOPE-1546] Ensuring rejected propagation tasks are stored if configured + adding report metrics for asyncConnectorExecutor and asyncConnectorExecutor","tree":{"sha":"c301918d308d03e2b44c741d046d39666b357575","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c301918d308d03e2b44c741d046d39666b357575"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/475e5f924c60509436eb4a74aef1849ded791436","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/475e5f924c60509436eb4a74aef1849ded791436","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/475e5f924c60509436eb4a74aef1849ded791436","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/475e5f924c60509436eb4a74aef1849ded791436/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"7ad0b242b3b1ca6052dfb1925ab2662fa6bf49a0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7ad0b242b3b1ca6052dfb1925ab2662fa6bf49a0","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7ad0b242b3b1ca6052dfb1925ab2662fa6bf49a0"}],"stats":{"total":479,"additions":327,"deletions":152},"files":[{"sha":"4ed088f83f173e0f3cd485db6595cb4a8f9d2cf3","filename":"common/idrepo/lib/src/main/java/org/apache/syncope/common/lib/info/NumbersInfo.java","status":"modified","additions":91,"deletions":0,"changes":91,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FNumbersInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FNumbersInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fidrepo%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FNumbersInfo.java?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -67,6 +67,81 @@ public static int getScore(final String name) {\n         }\n     }\n \n+    @XmlRootElement(name = \"taskExecutorInfo\")\n+    @XmlType\n+    public class TaskExecutorInfo {\n+\n+        private int size;\n+\n+        private int active;\n+\n+        private int queued;\n+\n+        private int completed;\n+\n+        public int getSize() {\n+            return size;\n+        }\n+\n+        public void setSize(final int size) {\n+            this.size = size;\n+        }\n+\n+        public int getActive() {\n+            return active;\n+        }\n+\n+        public void setActive(final int active) {\n+            this.active = active;\n+        }\n+\n+        public int getQueued() {\n+            return queued;\n+        }\n+\n+        public void setQueued(final int queued) {\n+            this.queued = queued;\n+        }\n+\n+        public int getCompleted() {\n+            return completed;\n+        }\n+\n+        public void setCompleted(final int completed) {\n+            this.completed = completed;\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            return new HashCodeBuilder().\n+                    append(size).\n+                    append(active).\n+                    append(queued).\n+                    append(completed).\n+                    build();\n+        }\n+\n+        @Override\n+        public boolean equals(final Object obj) {\n+            if (this == obj) {\n+                return true;\n+            }\n+            if (obj == null) {\n+                return false;\n+            }\n+            if (getClass() != obj.getClass()) {\n+                return false;\n+            }\n+            final TaskExecutorInfo other = (TaskExecutorInfo) obj;\n+            return new EqualsBuilder().\n+                    append(size, other.size).\n+                    append(active, other.active).\n+                    append(queued, other.queued).\n+                    append(completed, other.completed).\n+                    build();\n+        }\n+    }\n+\n     private int totalUsers;\n \n     @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n@@ -101,6 +176,10 @@ public static int getScore(final String name) {\n     @XmlJavaTypeAdapter(XmlGenericMapAdapter.class)\n     private final Map<String, Boolean> confCompleteness = new HashMap<>();\n \n+    private final TaskExecutorInfo asyncConnectorExecutor = new TaskExecutorInfo();\n+\n+    private final TaskExecutorInfo propagationTaskExecutor = new TaskExecutorInfo();\n+\n     public int getTotalUsers() {\n         return totalUsers;\n     }\n@@ -195,6 +274,14 @@ public Map<String, Boolean> getConfCompleteness() {\n         return confCompleteness;\n     }\n \n+    public TaskExecutorInfo getAsyncConnectorExecutor() {\n+        return asyncConnectorExecutor;\n+    }\n+\n+    public TaskExecutorInfo getPropagationTaskExecutor() {\n+        return propagationTaskExecutor;\n+    }\n+\n     @Override\n     public int hashCode() {\n         return new HashCodeBuilder().\n@@ -212,6 +299,8 @@ public int hashCode() {\n                 append(totalResources).\n                 append(totalRoles).\n                 append(confCompleteness).\n+                append(asyncConnectorExecutor).\n+                append(propagationTaskExecutor).\n                 build();\n     }\n \n@@ -242,6 +331,8 @@ public boolean equals(final Object obj) {\n                 append(totalAny2, other.totalAny2).\n                 append(any2ByRealm, other.any2ByRealm).\n                 append(confCompleteness, other.confCompleteness).\n+                append(asyncConnectorExecutor, other.asyncConnectorExecutor).\n+                append(propagationTaskExecutor, other.propagationTaskExecutor).\n                 build();\n     }\n }"},{"sha":"f82a3d6ad7ebf279e2992edf9d298e9649701663","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/SyncopeLogic.java","status":"modified","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -31,6 +31,8 @@\n import java.util.Map;\n import java.util.Optional;\n import java.util.Set;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n import java.util.stream.Collectors;\n import javax.annotation.Resource;\n import org.apache.commons.lang3.StringUtils;\n@@ -99,6 +101,7 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.context.PayloadApplicationEvent;\n import org.springframework.context.event.EventListener;\n+import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\n import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.stereotype.Component;\n import org.springframework.transaction.annotation.Transactional;\n@@ -107,6 +110,12 @@\n @Component\n public class SyncopeLogic extends AbstractLogic<EntityTO> {\n \n+    private static final Pattern THREADPOOLTASKEXECUTOR_PATTERN = Pattern.compile(\n+            \".*, pool size = ([0-9]+), \"\n+            + \"active threads = ([0-9]+), \"\n+            + \"queued tasks = ([0-9]+), \"\n+            + \"completed tasks = ([0-9]+).*\");\n+\n     private static final Object MONITOR = new Object();\n \n     private static PlatformInfo PLATFORM_INFO;\n@@ -224,6 +233,12 @@ public class SyncopeLogic extends AbstractLogic<EntityTO> {\n     @Autowired\n     private ImplementationLookup implLookup;\n \n+    @Resource(name = \"asyncConnectorFacadeExecutor\")\n+    private ThreadPoolTaskExecutor asyncConnectorFacadeExecutor;\n+\n+    @Resource(name = \"propagationTaskExecutorAsyncExecutor\")\n+    private ThreadPoolTaskExecutor propagationTaskExecutorAsyncExecutor;\n+\n     public boolean isSelfRegAllowed() {\n         return confParamOps.get(AuthContextUtils.getDomain(), \"selfRegistration.allowed\", false, Boolean.class);\n     }\n@@ -378,6 +393,32 @@ public static SystemInfo system() {\n         return SYSTEM_INFO;\n     }\n \n+    private void setTaskExecutorInfo(final String toString, final NumbersInfo.TaskExecutorInfo info) {\n+        Matcher matcher = THREADPOOLTASKEXECUTOR_PATTERN.matcher(toString);\n+        if (matcher.matches() && matcher.groupCount() == 4) {\n+            try {\n+                info.setSize(Integer.valueOf(matcher.group(1)));\n+            } catch (NumberFormatException e) {\n+                LOG.error(\"While parsing thread pool size\", e);\n+            }\n+            try {\n+                info.setActive(Integer.valueOf(matcher.group(2)));\n+            } catch (NumberFormatException e) {\n+                LOG.error(\"While parsing active threads #\", e);\n+            }\n+            try {\n+                info.setQueued(Integer.valueOf(matcher.group(3)));\n+            } catch (NumberFormatException e) {\n+                LOG.error(\"While parsing queued threads #\", e);\n+            }\n+            try {\n+                info.setCompleted(Integer.valueOf(matcher.group(4)));\n+            } catch (NumberFormatException e) {\n+                LOG.error(\"While parsing completed threads #\", e);\n+            }\n+        }\n+    }\n+\n     @PreAuthorize(\"isAuthenticated()\")\n     public NumbersInfo numbers() {\n         NumbersInfo numbersInfo = new NumbersInfo();\n@@ -429,6 +470,13 @@ public NumbersInfo numbers() {\n         numbersInfo.getConfCompleteness().put(\n                 NumbersInfo.ConfItem.ROLE.name(), numbersInfo.getTotalRoles() > 0);\n \n+        setTaskExecutorInfo(\n+                asyncConnectorFacadeExecutor.getThreadPoolExecutor().toString(),\n+                numbersInfo.getAsyncConnectorExecutor());\n+        setTaskExecutorInfo(\n+                propagationTaskExecutorAsyncExecutor.getThreadPoolExecutor().toString(),\n+                numbersInfo.getPropagationTaskExecutor());\n+\n         return numbersInfo;\n     }\n "},{"sha":"006a6f5bfa1c56af04eb1530df80c1f13794f68b","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/TaskLogic.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FTaskLogic.java?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -63,6 +63,7 @@\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskInfo;\n import org.apache.syncope.core.provisioning.api.utils.ExceptionUtils2;\n import org.apache.syncope.core.provisioning.java.job.TaskJob;\n+import org.apache.syncope.core.provisioning.java.propagation.DefaultPropagationReporter;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.quartz.JobDataMap;\n import org.quartz.JobKey;\n@@ -249,7 +250,7 @@ public ExecTO execute(final String key, final Date startAt, final boolean dryRun\n                 taskInfo.setAnyType(taskTO.getAnyType());\n                 taskInfo.setEntityKey(taskTO.getEntityKey());\n \n-                TaskExec propExec = taskExecutor.execute(taskInfo, executor);\n+                TaskExec propExec = taskExecutor.execute(taskInfo, new DefaultPropagationReporter(), executor);\n                 result = binder.getExecTO(propExec);\n                 break;\n "},{"sha":"08f99ef531f328369873ed68ed0b1e2d387cac2c","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/jexl/JexlUtils.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjexl%2FJexlUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjexl%2FJexlUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fjexl%2FJexlUtils.java?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -127,7 +127,7 @@ public static String evaluate(final String expression, final JexlContext jexlCon\n     public static void addFieldsToContext(final Object object, final JexlContext jexlContext) {\n         Set<Pair<PropertyDescriptor, Field>> cached = FIELD_CACHE.get(object.getClass());\n         if (cached == null) {\n-            FIELD_CACHE.put(object.getClass(), new HashSet<>());\n+            FIELD_CACHE.put(object.getClass(), Collections.synchronizedSet(new HashSet<>()));\n \n             List<Class<?>> classes = ClassUtils.getAllSuperclasses(object.getClass());\n             classes.add(object.getClass());"},{"sha":"44c99d6a8fd99c13530e9b4fea635f6ae04012a6","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/propagation/PropagationTaskCallable.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskCallable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskCallable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskCallable.java?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -26,4 +26,6 @@ public interface PropagationTaskCallable extends Callable<TaskExec> {\n     void setTaskInfo(PropagationTaskInfo taskInfo);\n \n     void setReporter(PropagationReporter reporter);\n+\n+    void setExecutor(String executor);\n }"},{"sha":"cd209673493333c303da9f0e899c32beebb2643b","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/propagation/PropagationTaskExecutor.java","status":"modified","additions":2,"deletions":11,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpropagation%2FPropagationTaskExecutor.java?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -43,16 +43,7 @@ public interface PropagationTaskExecutor {\n     String MANDATORY_NULL_OR_EMPTY_ATTR_NAME = \"__MANDATORY_NULL_OR_EMPTY__\";\n \n     /**\n-     * Execute the given PropagationTask and returns the generated {@link TaskExec}.\n-     *\n-     * @param taskInfo to be executed\n-     * @param executor the executor of this task\n-     * @return the generated TaskExec\n-     */\n-    TaskExec execute(PropagationTaskInfo taskInfo, String executor);\n-\n-    /**\n-     * Execute the given PropagationTask and returns the generated {@link TaskExec}.\n+     * Execute the given task and returns the generated {@link TaskExec}.\n      *\n      * @param taskInfo to be executed\n      * @param reporter to report propagation execution status\n@@ -62,7 +53,7 @@ public interface PropagationTaskExecutor {\n     TaskExec execute(PropagationTaskInfo taskInfo, PropagationReporter reporter, String executor);\n \n     /**\n-     * Execute a collection of PropagationTask objects.\n+     * Execute the given collection of tasks.\n      * The process is interrupted as soon as the result of the communication with a resource with non-null priority is\n      * in error.\n      *"},{"sha":"bad73638e68abb6840b60661cc4c022901d5cf42","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/ProvisioningContext.java","status":"modified","additions":20,"deletions":25,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FProvisioningContext.java?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -57,12 +57,9 @@\n import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\n import org.springframework.mail.javamail.JavaMailSender;\n import org.springframework.mail.javamail.JavaMailSenderImpl;\n+import org.springframework.scheduling.annotation.AsyncConfigurer;\n import org.springframework.scheduling.annotation.EnableAsync;\n-import org.springframework.scheduling.annotation.EnableScheduling;\n-import org.springframework.scheduling.annotation.SchedulingConfigurer;\n import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\n-import org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler;\n-import org.springframework.scheduling.config.ScheduledTaskRegistrar;\n import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n import org.springframework.transaction.PlatformTransactionManager;\n \n@@ -74,9 +71,8 @@\n @PropertySource(value = \"file:${conf.directory}/provisioning.properties\", ignoreResourceNotFound = true)\n @ComponentScan(\"org.apache.syncope.core.provisioning.java\")\n @EnableAsync\n-@EnableScheduling\n @Configuration\n-public class ProvisioningContext implements EnvironmentAware, SchedulingConfigurer {\n+public class ProvisioningContext implements EnvironmentAware, AsyncConfigurer {\n \n     @Resource(name = \"MasterDataSource\")\n     private DataSource masterDataSource;\n@@ -95,24 +91,26 @@ public void setEnvironment(final Environment env) {\n     }\n \n     /**\n-     * Used by {@link AsyncConnectorFacade}.\n      * Annotated as {@code @Primary} because it will be used by {@code @Async} in {@link AsyncConnectorFacade}.\n      *\n      * @return executor\n      */\n     @Bean\n     @Primary\n     public Executor asyncConnectorFacadeExecutor() {\n-        ThreadPoolTaskScheduler batchExecutor = new ThreadPoolTaskScheduler();\n-        batchExecutor.setPoolSize(env.getProperty(\"asyncConnectorFacadeExecutor.poolSize\", Integer.class));\n-        batchExecutor.setThreadNamePrefix(\"AsyncConnectorFacade-\");\n-        batchExecutor.initialize();\n-        return batchExecutor;\n+        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n+        executor.setCorePoolSize(env.getProperty(\"asyncConnectorFacadeExecutor.corePoolSize\", Integer.class));\n+        executor.setMaxPoolSize(env.getProperty(\"asyncConnectorFacadeExecutor.maxPoolSize\", Integer.class));\n+        executor.setQueueCapacity(env.getProperty(\"asyncConnectorFacadeExecutor.queueCapacity\", Integer.class));\n+        executor.setThreadNamePrefix(\"AsyncConnectorFacadeExecutor-\");\n+        executor.setRejectedExecutionHandler(new ThreadPoolExecutor.AbortPolicy());\n+        executor.initialize();\n+        return executor;\n     }\n \n     @Override\n-    public void configureTasks(final ScheduledTaskRegistrar taskRegistrar) {\n-        taskRegistrar.setScheduler(asyncConnectorFacadeExecutor());\n+    public Executor getAsyncExecutor() {\n+        return asyncConnectorFacadeExecutor();\n     }\n \n     /**\n@@ -122,17 +120,14 @@ public void configureTasks(final ScheduledTaskRegistrar taskRegistrar) {\n      */\n     @Bean\n     public Executor propagationTaskExecutorAsyncExecutor() {\n-        ThreadPoolTaskExecutor propagationTaskExecutorAsyncExecutor = new ThreadPoolTaskExecutor();\n-        propagationTaskExecutorAsyncExecutor.setCorePoolSize(\n-                env.getProperty(\"propagationTaskExecutorAsyncExecutor.corePoolSize\", Integer.class));\n-        propagationTaskExecutorAsyncExecutor.setMaxPoolSize(\n-                env.getProperty(\"propagationTaskExecutorAsyncExecutor.maxPoolSize\", Integer.class));\n-        propagationTaskExecutorAsyncExecutor.setQueueCapacity(\n-                env.getProperty(\"propagationTaskExecutorAsyncExecutor.queueCapacity\", Integer.class));\n-        propagationTaskExecutorAsyncExecutor.setThreadNamePrefix(\"PropagationTaskExecutor-\");\n-        propagationTaskExecutorAsyncExecutor.setRejectedExecutionHandler(new ThreadPoolExecutor.AbortPolicy());\n-        propagationTaskExecutorAsyncExecutor.initialize();\n-        return propagationTaskExecutorAsyncExecutor;\n+        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n+        executor.setCorePoolSize(env.getProperty(\"propagationTaskExecutorAsyncExecutor.corePoolSize\", Integer.class));\n+        executor.setMaxPoolSize(env.getProperty(\"propagationTaskExecutorAsyncExecutor.maxPoolSize\", Integer.class));\n+        executor.setQueueCapacity(env.getProperty(\"propagationTaskExecutorAsyncExecutor.queueCapacity\", Integer.class));\n+        executor.setThreadNamePrefix(\"PropagationTaskExecutor-\");\n+        executor.setRejectedExecutionHandler(new ThreadPoolExecutor.AbortPolicy());\n+        executor.initialize();\n+        return executor;\n     }\n \n     @Bean"},{"sha":"71c639f85e2d7ac0695a396065632e6fa81b0ca4","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":51,"deletions":18,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -332,17 +332,7 @@ protected Uid delete(\n         return result;\n     }\n \n-    @Override\n-    public TaskExec execute(final PropagationTaskInfo taskInfo, final String executor) {\n-        return execute(taskInfo, null, executor);\n-    }\n-\n-    @Override\n-    public TaskExec execute(\n-            final PropagationTaskInfo taskInfo,\n-            final PropagationReporter reporter,\n-            final String executor) {\n-\n+    protected PropagationTask buildTask(final PropagationTaskInfo taskInfo) {\n         PropagationTask task;\n         if (taskInfo.getKey() == null) {\n             // double-checks that provided External Resource is valid, for further actions\n@@ -369,6 +359,17 @@ public TaskExec execute(\n         }\n         task.setAttributes(attributes);\n \n+        return task;\n+    }\n+\n+    @Override\n+    public TaskExec execute(\n+            final PropagationTaskInfo taskInfo,\n+            final PropagationReporter reporter,\n+            final String executor) {\n+\n+        PropagationTask task = buildTask(taskInfo);\n+\n         Connector connector = taskInfo.getConnector() == null\n                 ? connFactory.getConnector(task.getResource())\n                 : taskInfo.getConnector();\n@@ -502,13 +503,11 @@ public TaskExec execute(\n                 taskDAO.save(task);\n             }\n \n-            if (reporter != null) {\n-                reporter.onSuccessOrNonPriorityResourceFailures(taskInfo,\n-                        ExecStatus.valueOf(execution.getStatus()),\n-                        failureReason,\n-                        beforeObj,\n-                        afterObj);\n-            }\n+            reporter.onSuccessOrNonPriorityResourceFailures(taskInfo,\n+                    ExecStatus.valueOf(execution.getStatus()),\n+                    failureReason,\n+                    beforeObj,\n+                    afterObj);\n         }\n \n         for (PropagationActions action : actions) {\n@@ -558,6 +557,40 @@ protected abstract void doExecute(\n             Collection<PropagationTaskInfo> taskInfos, PropagationReporter reporter, boolean nullPriorityAsync,\n             String executor);\n \n+    protected TaskExec rejected(\n+            final PropagationTaskInfo taskInfo,\n+            final String rejectReason,\n+            final PropagationReporter reporter,\n+            final String executor) {\n+\n+        PropagationTask task = buildTask(taskInfo);\n+\n+        TaskExec execution = entityFactory.newEntity(TaskExec.class);\n+        execution.setStatus(ExecStatus.NOT_ATTEMPTED.name());\n+        execution.setExecutor(executor);\n+        execution.setStart(new Date());\n+        execution.setMessage(rejectReason);\n+        execution.setEnd(execution.getStart());\n+\n+        if (hasToBeregistered(task, execution)) {\n+            LOG.debug(\"Execution to be stored: {}\", execution);\n+\n+            execution.setTask(task);\n+            task.add(execution);\n+\n+            taskDAO.save(task);\n+        }\n+\n+        reporter.onSuccessOrNonPriorityResourceFailures(\n+                taskInfo,\n+                ExecStatus.valueOf(execution.getStatus()),\n+                rejectReason,\n+                null,\n+                null);\n+\n+        return execution;\n+    }\n+\n     @Override\n     public PropagationReporter execute(\n             final Collection<PropagationTaskInfo> taskInfos,"},{"sha":"3418a7c3cfab8ae762c9f6fe8ae534f0373e22d6","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/DefaultPropagationTaskCallable.java","status":"modified","additions":17,"deletions":18,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationTaskCallable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationTaskCallable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationTaskCallable.java?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -19,8 +19,8 @@\n package org.apache.syncope.core.provisioning.java.propagation;\n \n import java.util.Collection;\n+import java.util.stream.Collectors;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n-import org.apache.syncope.core.spring.security.SyncopeAuthenticationDetails;\n import org.apache.syncope.core.persistence.api.entity.task.TaskExec;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationReporter;\n import org.apache.syncope.core.provisioning.api.propagation.PropagationTaskCallable;\n@@ -29,11 +29,9 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n import org.springframework.security.core.GrantedAuthority;\n import org.springframework.security.core.context.SecurityContext;\n import org.springframework.security.core.context.SecurityContextHolder;\n-import org.springframework.security.core.userdetails.User;\n \n public class DefaultPropagationTaskCallable implements PropagationTaskCallable {\n \n@@ -44,19 +42,19 @@ public class DefaultPropagationTaskCallable implements PropagationTaskCallable {\n \n     protected final String domain;\n \n-    protected final String username;\n-\n-    protected final Collection<? extends GrantedAuthority> authorities;\n+    protected final Collection<String> authorities;\n \n     protected PropagationTaskInfo taskInfo;\n \n     protected PropagationReporter reporter;\n \n+    protected String executor;\n+\n     public DefaultPropagationTaskCallable() {\n         SecurityContext ctx = SecurityContextHolder.getContext();\n         domain = AuthContextUtils.getDomain();\n-        username = ctx.getAuthentication().getName();\n-        authorities = ctx.getAuthentication().getAuthorities();\n+        authorities = ctx.getAuthentication().getAuthorities().stream().\n+                map(GrantedAuthority::getAuthority).collect(Collectors.toSet());\n     }\n \n     @Override\n@@ -70,19 +68,20 @@ public void setReporter(final PropagationReporter reporter) {\n     }\n \n     @Override\n-    public TaskExec call() throws Exception {\n-        // set security context according to the one gathered at instantiation time from the calling thread\n-        UsernamePasswordAuthenticationToken auth = new UsernamePasswordAuthenticationToken(\n-                new User(username, \"FAKE_PASSWORD\", authorities), \"FAKE_PASSWORD\", authorities);\n-        auth.setDetails(new SyncopeAuthenticationDetails(domain));\n-        SecurityContextHolder.getContext().setAuthentication(auth);\n+    public void setExecutor(final String executor) {\n+        this.executor = executor;\n+    }\n \n-        LOG.debug(\"Execution started for {}\", taskInfo);\n+    @Override\n+    public TaskExec call() throws Exception {\n+        return AuthContextUtils.callAs(domain, executor, authorities, () -> {\n+            LOG.debug(\"Execution started for {}\", taskInfo);\n \n-        TaskExec execution = taskExecutor.execute(taskInfo, reporter, username);\n+            TaskExec execution = taskExecutor.execute(taskInfo, reporter, executor);\n \n-        LOG.debug(\"Execution completed for {}, {}\", taskInfo, execution);\n+            LOG.debug(\"Execution completed for {}, {}\", taskInfo, execution);\n \n-        return execution;\n+            return execution;\n+        });\n     }\n }"},{"sha":"7d1c4785d75c091006ae4e6ea6a4f67b62980937","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/PriorityPropagationTaskExecutor.java","status":"modified","additions":37,"deletions":59,"changes":96,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FPriorityPropagationTaskExecutor.java?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -21,16 +21,11 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Comparator;\n-import java.util.HashMap;\n-import java.util.HashSet;\n import java.util.List;\n-import java.util.Map;\n import java.util.Optional;\n-import java.util.Set;\n import java.util.concurrent.CompletionService;\n import java.util.concurrent.ExecutorCompletionService;\n import java.util.concurrent.Future;\n-import java.util.concurrent.TimeUnit;\n import java.util.stream.Collectors;\n import javax.annotation.Resource;\n import org.apache.syncope.common.lib.types.ExecStatus;\n@@ -54,24 +49,26 @@\n public class PriorityPropagationTaskExecutor extends AbstractPropagationTaskExecutor {\n \n     @Resource(name = \"propagationTaskExecutorAsyncExecutor\")\n-    protected ThreadPoolTaskExecutor executor;\n+    protected ThreadPoolTaskExecutor taskExecutor;\n \n     /**\n      * Creates new instances of {@link PropagationTaskCallable} for usage with\n      * {@link java.util.concurrent.CompletionService}.\n      *\n      * @param taskInfo to be executed\n      * @param reporter to report propagation execution status\n+     * @param executor user that triggered the propagation execution\n      * @return new {@link PropagationTaskCallable} instance for usage with\n      * {@link java.util.concurrent.CompletionService}\n      */\n     protected static PropagationTaskCallable newPropagationTaskCallable(\n-            final PropagationTaskInfo taskInfo, final PropagationReporter reporter) {\n+            final PropagationTaskInfo taskInfo, final PropagationReporter reporter, final String executor) {\n \n         PropagationTaskCallable callable = (PropagationTaskCallable) ApplicationContextProvider.getBeanFactory().\n                 createBean(DefaultPropagationTaskCallable.class, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);\n         callable.setTaskInfo(taskInfo);\n         callable.setReporter(reporter);\n+        callable.setExecutor(executor);\n \n         return callable;\n     }\n@@ -81,28 +78,17 @@ protected void doExecute(\n             final Collection<PropagationTaskInfo> taskInfos,\n             final PropagationReporter reporter,\n             final boolean nullPriorityAsync,\n-            final String executorId) {\n+            final String executor) {\n \n-        List<PropagationTaskInfo> prioritizedTasks = new ArrayList<>();\n-\n-        int[] connRequestTimeout = { 60 };\n-\n-        taskInfos.stream().filter(task -> task.getExternalResource().getPropagationPriority() != null).forEach(task -> {\n-            prioritizedTasks.add(task);\n-\n-            if (task.getExternalResource().getConnector().getConnRequestTimeout() != null\n-                    && connRequestTimeout[0] < task.getExternalResource().getConnector().getConnRequestTimeout()) {\n-\n-                connRequestTimeout[0] = task.getExternalResource().getConnector().getConnRequestTimeout();\n-                LOG.debug(\"Upgrade request connection timeout to {}\", connRequestTimeout);\n-            }\n-        });\n-\n-        prioritizedTasks.sort(Comparator.comparing(task -> task.getExternalResource().getPropagationPriority()));\n+        List<PropagationTaskInfo> prioritizedTasks = taskInfos.stream().\n+                filter(task -> task.getExternalResource().getPropagationPriority() != null).\n+                sorted(Comparator.comparing(task -> task.getExternalResource().getPropagationPriority())).\n+                collect(Collectors.toList());\n         LOG.debug(\"Propagation tasks sorted by priority, for serial execution: {}\", prioritizedTasks);\n \n-        Set<PropagationTaskInfo> concurrentTasks = taskInfos.stream().\n-                filter(task -> !prioritizedTasks.contains(task)).collect(Collectors.toSet());\n+        List<PropagationTaskInfo> concurrentTasks = taskInfos.stream().\n+                filter(task -> !prioritizedTasks.contains(task)).\n+                collect(Collectors.toList());\n         LOG.debug(\"Propagation tasks for concurrent execution: {}\", concurrentTasks);\n \n         // first process priority resources sequentially and fail as soon as any propagation failure is reported\n@@ -111,7 +97,7 @@ protected void doExecute(\n             ExecStatus execStatus;\n             String errorMessage = null;\n             try {\n-                execution = newPropagationTaskCallable(task, reporter).call();\n+                execution = newPropagationTaskCallable(task, reporter, executor).call();\n                 execStatus = ExecStatus.valueOf(execution.getStatus());\n             } catch (Exception e) {\n                 LOG.error(\"Unexpected exception\", e);\n@@ -126,41 +112,33 @@ protected void doExecute(\n         });\n \n         // then process non-priority resources concurrently...\n-        CompletionService<TaskExec> completionService = new ExecutorCompletionService<>(executor);\n-        Map<PropagationTaskInfo, Future<TaskExec>> nullPriority = new HashMap<>(concurrentTasks.size());\n-        concurrentTasks.forEach(taskInfo -> {\n-            try {\n-                nullPriority.put(\n-                        taskInfo,\n-                        completionService.submit(newPropagationTaskCallable(taskInfo, reporter)));\n-            } catch (Exception e) {\n-                LOG.error(\"Unexpected exception\", e);\n-            }\n-        });\n-        // ...waiting for all callables to complete, if async processing was not required\n-        if (!nullPriority.isEmpty()) {\n-            if (nullPriorityAsync) {\n-                nullPriority.forEach((task, exec)\n-                        -> reporter.onSuccessOrNonPriorityResourceFailures(task, ExecStatus.CREATED, null, null, null));\n-            } else {\n-                final Set<Future<TaskExec>> nullPriorityFutures = new HashSet<>(nullPriority.values());\n+        if (!concurrentTasks.isEmpty()) {\n+            CompletionService<TaskExec> completionService = new ExecutorCompletionService<>(taskExecutor);\n+            List<Future<TaskExec>> futures = new ArrayList<>();\n+\n+            concurrentTasks.forEach(taskInfo -> {\n                 try {\n-                    executor.submit(() -> {\n-                        while (!nullPriorityFutures.isEmpty()) {\n-                            try {\n-                                nullPriorityFutures.remove(completionService.take());\n-                            } catch (Exception e) {\n-                                LOG.error(\"Unexpected exception\", e);\n-                            }\n-                        }\n-                    }).get(connRequestTimeout[0], TimeUnit.SECONDS);\n+                    futures.add(completionService.submit(newPropagationTaskCallable(taskInfo, reporter, executor)));\n+\n+                    if (nullPriorityAsync) {\n+                        reporter.onSuccessOrNonPriorityResourceFailures(\n+                                taskInfo, ExecStatus.CREATED, null, null, null);\n+                    }\n                 } catch (Exception e) {\n-                    LOG.error(\"Unexpected exception\", e);\n-                } finally {\n-                    nullPriorityFutures.forEach(future -> future.cancel(true));\n-                    nullPriorityFutures.clear();\n-                    nullPriority.clear();\n+                    LOG.error(\"While submitting task for async execution\", taskInfo, e);\n+                    rejected(taskInfo, e.getMessage(), reporter, executor);\n                 }\n+            });\n+\n+            // ...waiting for all callables to complete, if async processing was not required\n+            if (!nullPriorityAsync) {\n+                futures.forEach(future -> {\n+                    try {\n+                        future.get();\n+                    } catch (Exception e) {\n+                        LOG.error(\"Unexpected exception\", e);\n+                    }\n+                });\n             }\n         }\n     }"},{"sha":"2ad0047756e25e8eebc4439ab68347ca555ac48b","filename":"core/provisioning-java/src/main/resources/provisioning.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -14,7 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-asyncConnectorFacadeExecutor.poolSize=10\n+asyncConnectorFacadeExecutor.corePoolSize=5\n+asyncConnectorFacadeExecutor.maxPoolSize=25\n+asyncConnectorFacadeExecutor.queueCapacity=100\n \n propagationTaskExecutorAsyncExecutor.corePoolSize=5\n propagationTaskExecutorAsyncExecutor.maxPoolSize=25"},{"sha":"862a6e64ecfaa755315291cd2fadaf6808c93a76","filename":"docker/core/src/main/resources/provisioning.properties.mariadb","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mariadb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mariadb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mariadb?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -14,7 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-asyncConnectorFacadeExecutor.poolSize=10\n+asyncConnectorFacadeExecutor.corePoolSize=5\n+asyncConnectorFacadeExecutor.maxPoolSize=25\n+asyncConnectorFacadeExecutor.queueCapacity=100\n \n propagationTaskExecutorAsyncExecutor.corePoolSize=5\n propagationTaskExecutorAsyncExecutor.maxPoolSize=25"},{"sha":"f3fdc486f7b603948145cde47d575248331e76e2","filename":"docker/core/src/main/resources/provisioning.properties.mssql","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mssql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mssql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mssql?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -14,7 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-asyncConnectorFacadeExecutor.poolSize=10\n+asyncConnectorFacadeExecutor.corePoolSize=5\n+asyncConnectorFacadeExecutor.maxPoolSize=25\n+asyncConnectorFacadeExecutor.queueCapacity=100\n \n propagationTaskExecutorAsyncExecutor.corePoolSize=5\n propagationTaskExecutorAsyncExecutor.maxPoolSize=25"},{"sha":"f287468788fe9f0c69d1ecdb02441737f5204967","filename":"docker/core/src/main/resources/provisioning.properties.myjson","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.myjson","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.myjson","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.myjson?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -14,7 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-asyncConnectorFacadeExecutor.poolSize=10\n+asyncConnectorFacadeExecutor.corePoolSize=5\n+asyncConnectorFacadeExecutor.maxPoolSize=25\n+asyncConnectorFacadeExecutor.queueCapacity=100\n \n propagationTaskExecutorAsyncExecutor.corePoolSize=5\n propagationTaskExecutorAsyncExecutor.maxPoolSize=25"},{"sha":"f287468788fe9f0c69d1ecdb02441737f5204967","filename":"docker/core/src/main/resources/provisioning.properties.mysql","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mysql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mysql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.mysql?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -14,7 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-asyncConnectorFacadeExecutor.poolSize=10\n+asyncConnectorFacadeExecutor.corePoolSize=5\n+asyncConnectorFacadeExecutor.maxPoolSize=25\n+asyncConnectorFacadeExecutor.queueCapacity=100\n \n propagationTaskExecutorAsyncExecutor.corePoolSize=5\n propagationTaskExecutorAsyncExecutor.maxPoolSize=25"},{"sha":"4b22edcfd966f77d48dce75d8b10bf0ba9c74813","filename":"docker/core/src/main/resources/provisioning.properties.pgjsonb","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.pgjsonb","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.pgjsonb","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.pgjsonb?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -14,7 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-asyncConnectorFacadeExecutor.poolSize=10\n+asyncConnectorFacadeExecutor.corePoolSize=5\n+asyncConnectorFacadeExecutor.maxPoolSize=25\n+asyncConnectorFacadeExecutor.queueCapacity=100\n \n propagationTaskExecutorAsyncExecutor.corePoolSize=5\n propagationTaskExecutorAsyncExecutor.maxPoolSize=25"},{"sha":"2ad0047756e25e8eebc4439ab68347ca555ac48b","filename":"docker/core/src/main/resources/provisioning.properties.postgresql","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.postgresql","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.postgresql","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/docker%2Fcore%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties.postgresql?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -14,7 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-asyncConnectorFacadeExecutor.poolSize=10\n+asyncConnectorFacadeExecutor.corePoolSize=5\n+asyncConnectorFacadeExecutor.maxPoolSize=25\n+asyncConnectorFacadeExecutor.queueCapacity=100\n \n propagationTaskExecutorAsyncExecutor.corePoolSize=5\n propagationTaskExecutorAsyncExecutor.maxPoolSize=25"},{"sha":"ba28b5c08ae5d276b31968c3f85aea8c7503453e","filename":"ext/camel/provisioning-camel/src/main/resources/provisioning.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fprovisioning-camel%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -16,7 +16,9 @@\n # under the License.\n camel.directory=${conf.directory}\n \n-asyncConnectorFacadeExecutor.poolSize=10\n+asyncConnectorFacadeExecutor.corePoolSize=5\n+asyncConnectorFacadeExecutor.maxPoolSize=25\n+asyncConnectorFacadeExecutor.queueCapacity=100\n \n propagationTaskExecutorAsyncExecutor.corePoolSize=5\n propagationTaskExecutorAsyncExecutor.maxPoolSize=25"},{"sha":"0aba3f6ac1dd579f975ffcfac2758be2c7501143","filename":"fit/core-reference/src/main/resources/all/provisioning.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fall%2Fprovisioning.properties?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -16,7 +16,9 @@\n # under the License.\n camel.directory=${conf.directory}\n \n-asyncConnectorFacadeExecutor.poolSize=10\n+asyncConnectorFacadeExecutor.corePoolSize=5\n+asyncConnectorFacadeExecutor.maxPoolSize=25\n+asyncConnectorFacadeExecutor.queueCapacity=100\n \n propagationTaskExecutorAsyncExecutor.corePoolSize=5\n propagationTaskExecutorAsyncExecutor.maxPoolSize=25"},{"sha":"b13cc44b6bec1bd7ace0c7174f28642855e41876","filename":"fit/core-reference/src/main/resources/application-embedded.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fapplication-embedded.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fapplication-embedded.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fapplication-embedded.properties?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -20,8 +20,8 @@ spring.devtools.livereload.enabled=false\n spring.devtools.restart.enabled=false\n \n # H2\n-spring.h2.console.enabled=true\n-spring.h2.console.path=/h2\n+#spring.h2.console.enabled=true\n+#spring.h2.console.path=/h2\n # Datasource\n spring.datasource.url=jdbc:h2:mem:syncopedb;DB_CLOSE_DELAY=-1\n spring.datasource.username=sa"},{"sha":"862a6e64ecfaa755315291cd2fadaf6808c93a76","filename":"fit/core-reference/src/main/resources/mariadb/provisioning.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmariadb%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmariadb%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmariadb%2Fprovisioning.properties?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -14,7 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-asyncConnectorFacadeExecutor.poolSize=10\n+asyncConnectorFacadeExecutor.corePoolSize=5\n+asyncConnectorFacadeExecutor.maxPoolSize=25\n+asyncConnectorFacadeExecutor.queueCapacity=100\n \n propagationTaskExecutorAsyncExecutor.corePoolSize=5\n propagationTaskExecutorAsyncExecutor.maxPoolSize=25"},{"sha":"e6027a67b47609aacf4a21479f84a7b3a13be3e0","filename":"fit/core-reference/src/main/resources/myjson/provisioning.properties","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmyjson%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmyjson%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmyjson%2Fprovisioning.properties?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -14,7 +14,12 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-asyncConnectorFacadeExecutor.poolSize=10\n+asyncConnectorFacadeExecutor.poolSize=5-25\n+asyncConnectorFacadeExecutor.queueCapacity=100\n+\n+asyncConnectorFacadeExecutor.corePoolSize=5\n+asyncConnectorFacadeExecutor.maxPoolSize=25\n+asyncConnectorFacadeExecutor.queueCapacity=100\n \n propagationTaskExecutorAsyncExecutor.corePoolSize=5\n propagationTaskExecutorAsyncExecutor.maxPoolSize=25"},{"sha":"f287468788fe9f0c69d1ecdb02441737f5204967","filename":"fit/core-reference/src/main/resources/mysql/provisioning.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmysql%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmysql%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fmysql%2Fprovisioning.properties?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -14,7 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-asyncConnectorFacadeExecutor.poolSize=10\n+asyncConnectorFacadeExecutor.corePoolSize=5\n+asyncConnectorFacadeExecutor.maxPoolSize=25\n+asyncConnectorFacadeExecutor.queueCapacity=100\n \n propagationTaskExecutorAsyncExecutor.corePoolSize=5\n propagationTaskExecutorAsyncExecutor.maxPoolSize=25"},{"sha":"ed23bd92278de5c182f4199675eb0bc82b6c1933","filename":"fit/core-reference/src/main/resources/oracle/provisioning.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Foracle%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Foracle%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Foracle%2Fprovisioning.properties?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -14,7 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-asyncConnectorFacadeExecutor.poolSize=10\n+asyncConnectorFacadeExecutor.corePoolSize=5\n+asyncConnectorFacadeExecutor.maxPoolSize=25\n+asyncConnectorFacadeExecutor.queueCapacity=100\n \n propagationTaskExecutorAsyncExecutor.corePoolSize=5\n propagationTaskExecutorAsyncExecutor.maxPoolSize=25"},{"sha":"4b22edcfd966f77d48dce75d8b10bf0ba9c74813","filename":"fit/core-reference/src/main/resources/pgjsonb/provisioning.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpgjsonb%2Fprovisioning.properties?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -14,7 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-asyncConnectorFacadeExecutor.poolSize=10\n+asyncConnectorFacadeExecutor.corePoolSize=5\n+asyncConnectorFacadeExecutor.maxPoolSize=25\n+asyncConnectorFacadeExecutor.queueCapacity=100\n \n propagationTaskExecutorAsyncExecutor.corePoolSize=5\n propagationTaskExecutorAsyncExecutor.maxPoolSize=25"},{"sha":"4b22edcfd966f77d48dce75d8b10bf0ba9c74813","filename":"fit/core-reference/src/main/resources/postgres/provisioning.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpostgres%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpostgres%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fpostgres%2Fprovisioning.properties?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -14,7 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-asyncConnectorFacadeExecutor.poolSize=10\n+asyncConnectorFacadeExecutor.corePoolSize=5\n+asyncConnectorFacadeExecutor.maxPoolSize=25\n+asyncConnectorFacadeExecutor.queueCapacity=100\n \n propagationTaskExecutorAsyncExecutor.corePoolSize=5\n propagationTaskExecutorAsyncExecutor.maxPoolSize=25"},{"sha":"c4d24857e22c89b013b648a67ad916ef909e144d","filename":"fit/core-reference/src/main/resources/provisioning.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fprovisioning.properties?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -14,7 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-asyncConnectorFacadeExecutor.poolSize=10\n+asyncConnectorFacadeExecutor.corePoolSize=5\n+asyncConnectorFacadeExecutor.maxPoolSize=25\n+asyncConnectorFacadeExecutor.queueCapacity=100\n \n propagationTaskExecutorAsyncExecutor.corePoolSize=5\n propagationTaskExecutorAsyncExecutor.maxPoolSize=25"},{"sha":"f3fdc486f7b603948145cde47d575248331e76e2","filename":"fit/core-reference/src/main/resources/sqlserver/provisioning.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/475e5f924c60509436eb4a74aef1849ded791436/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fsqlserver%2Fprovisioning.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/475e5f924c60509436eb4a74aef1849ded791436/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fsqlserver%2Fprovisioning.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Fmain%2Fresources%2Fsqlserver%2Fprovisioning.properties?ref=475e5f924c60509436eb4a74aef1849ded791436","patch":"@@ -14,7 +14,9 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-asyncConnectorFacadeExecutor.poolSize=10\n+asyncConnectorFacadeExecutor.corePoolSize=5\n+asyncConnectorFacadeExecutor.maxPoolSize=25\n+asyncConnectorFacadeExecutor.queueCapacity=100\n \n propagationTaskExecutorAsyncExecutor.corePoolSize=5\n propagationTaskExecutorAsyncExecutor.maxPoolSize=25"}]}