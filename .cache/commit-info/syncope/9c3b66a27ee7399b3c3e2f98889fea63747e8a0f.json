{"sha":"9c3b66a27ee7399b3c3e2f98889fea63747e8a0f","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjljM2I2NmEyN2VlNzM5OWIzYzNlMmY5ODg4OWZlYTYzNzQ3ZThhMGY=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-03-06T17:18:06Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2012-03-06T17:18:06Z"},"message":"bug-fix connector configuration properties management\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1297582 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a13b6c77226f5abf4f98ecf9897bf5a7b081b475","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/a13b6c77226f5abf4f98ecf9897bf5a7b081b475"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/9c3b66a27ee7399b3c3e2f98889fea63747e8a0f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9c3b66a27ee7399b3c3e2f98889fea63747e8a0f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/9c3b66a27ee7399b3c3e2f98889fea63747e8a0f","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/9c3b66a27ee7399b3c3e2f98889fea63747e8a0f/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"359ffa9c8ae7839065ace40a1e4f2e6548d71442","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/359ffa9c8ae7839065ace40a1e4f2e6548d71442","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/359ffa9c8ae7839065ace40a1e4f2e6548d71442"}],"stats":{"total":15,"additions":8,"deletions":7},"files":[{"sha":"7a24f606962654443769b675f076bbe614046e63","filename":"core/src/main/java/org/syncope/core/propagation/ConnectorFacadeProxy.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/9c3b66a27ee7399b3c3e2f98889fea63747e8a0f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/9c3b66a27ee7399b3c3e2f98889fea63747e8a0f/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Fpropagation%2FConnectorFacadeProxy.java?ref=9c3b66a27ee7399b3c3e2f98889fea63747e8a0f","patch":"@@ -603,17 +603,18 @@ private Object getPropertyValue(final ConnConfProperty property) {\n                     value = new GuardedString((values.get(0).toString()).toCharArray());\n                 } else if (GuardedByteArray.class.equals(propertySchemaClass)) {\n                     value = new GuardedByteArray((byte[]) values.get(0));\n-                } else if (Character.class.equals(propertySchemaClass) || char.class.equals(propertySchemaClass)) {\n-                    value = StringUtils.hasText((String) values.get(0)) ? values.get(0).toString().charAt(0) : null;\n-                } else if (Integer.class.equals(propertySchemaClass) || int.class.equals(propertySchemaClass)) {\n+                } else if (Character.class.equals(propertySchemaClass) || Character.TYPE.equals(propertySchemaClass)) {\n+                    value = values.get(0) != null && !values.get(0).toString().isEmpty()\n+                            ? values.get(0).toString().charAt(0) : null;\n+                } else if (Integer.class.equals(propertySchemaClass) || Integer.TYPE.equals(propertySchemaClass)) {\n                     value = Integer.parseInt(values.get(0).toString());\n-                } else if (Long.class.equals(propertySchemaClass) || long.class.equals(propertySchemaClass)) {\n+                } else if (Long.class.equals(propertySchemaClass) || Long.TYPE.equals(propertySchemaClass)) {\n                     value = Long.parseLong(values.get(0).toString());\n-                } else if (Float.class.equals(propertySchemaClass) || float.class.equals(propertySchemaClass)) {\n+                } else if (Float.class.equals(propertySchemaClass) || Float.TYPE.equals(propertySchemaClass)) {\n                     value = Float.parseFloat(values.get(0).toString());\n-                } else if (Double.class.equals(propertySchemaClass) || double.class.equals(propertySchemaClass)) {\n+                } else if (Double.class.equals(propertySchemaClass) || Double.TYPE.equals(propertySchemaClass)) {\n                     value = Double.parseDouble(values.get(0).toString());\n-                } else if (Boolean.class.equals(propertySchemaClass) || boolean.class.equals(propertySchemaClass)) {\n+                } else if (Boolean.class.equals(propertySchemaClass) || Boolean.TYPE.equals(propertySchemaClass)) {\n                     value = Boolean.parseBoolean(values.get(0).toString());\n                 } else if (URI.class.equals(propertySchemaClass)) {\n                     value = URI.create(values.get(0).toString());"}]}