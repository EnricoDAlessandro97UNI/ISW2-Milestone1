{"sha":"f171f9d31bf39586b21d9db59955a111ce412312","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmYxNzFmOWQzMWJmMzk1ODZiMjFkOWRiNTk5NTVhMTExY2U0MTIzMTI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-09T12:19:26Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-03-09T12:19:26Z"},"message":"More robust handling of VirAttrITCase#issueSYNCOPE453","tree":{"sha":"7cd288e6ebdfebac747d5707ff91ff52c9f88eba","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/7cd288e6ebdfebac747d5707ff91ff52c9f88eba"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/f171f9d31bf39586b21d9db59955a111ce412312","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f171f9d31bf39586b21d9db59955a111ce412312","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f171f9d31bf39586b21d9db59955a111ce412312","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f171f9d31bf39586b21d9db59955a111ce412312/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"28569df55015aa2ac86ac21020005d0e8fb4addf","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/28569df55015aa2ac86ac21020005d0e8fb4addf","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/28569df55015aa2ac86ac21020005d0e8fb4addf"}],"stats":{"total":49,"additions":39,"deletions":10},"files":[{"sha":"5021b1872e01409096e7ac4fcf585987ad68e213","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/VirAttrITCase.java","status":"modified","additions":39,"deletions":10,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/f171f9d31bf39586b21d9db59955a111ce412312/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/f171f9d31bf39586b21d9db59955a111ce412312/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FVirAttrITCase.java?ref=f171f9d31bf39586b21d9db59955a111ce412312","patch":"@@ -22,6 +22,7 @@\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n \n import java.util.Locale;\n import java.util.Map;\n@@ -30,6 +31,7 @@\n import org.apache.commons.collections4.CollectionUtils;\n import org.apache.commons.collections4.Predicate;\n import org.apache.commons.lang3.SerializationUtils;\n+import org.apache.syncope.common.lib.patch.GroupPatch;\n import org.apache.syncope.common.lib.patch.PasswordPatch;\n import org.apache.syncope.common.lib.patch.StatusPatch;\n import org.apache.syncope.common.lib.patch.StringPatchItem;\n@@ -267,11 +269,11 @@ public void issueSYNCOPE397() {\n             CollectionUtils.filterInverse(csv.getProvisions().get(0).getMapping().getItems(),\n                     new Predicate<MappingItemTO>() {\n \n-                        @Override\n-                        public boolean evaluate(final MappingItemTO item) {\n-                            return \"email\".equals(item.getIntAttrName());\n-                        }\n-                    });\n+                @Override\n+                public boolean evaluate(final MappingItemTO item) {\n+                    return \"email\".equals(item.getIntAttrName());\n+                }\n+            });\n \n             resourceService.update(csv);\n             csv = resourceService.read(RESOURCE_NAME_CSV);\n@@ -496,14 +498,41 @@ public void issueSYNCOPE453() {\n         // -------------------------------------------\n         // Create a VirAttrITCase ad-hoc\n         // -------------------------------------------\n+        String rvirtualdata = \"ml@group.it\";\n+\n         GroupTO groupTO = new GroupTO();\n         groupTO.setName(groupName);\n         groupTO.setRealm(\"/\");\n-        groupTO.getVirAttrs().add(attrTO(\"rvirtualdata\", \"ml@group.it\"));\n         groupTO.getResources().add(RESOURCE_NAME_LDAP);\n         groupTO = createGroup(groupTO).getAny();\n-        /*assertEquals(1, groupTO.getVirAttrs().size());\n-        assertEquals(\"ml@group.it\", groupTO.getVirAttrs().iterator().next().getValues().get(0));*/\n+\n+        int i = 0;\n+        int maxit = 5;\n+\n+        // wait for group propagation on LDAP\n+        do {\n+            try {\n+                Thread.sleep(1000);\n+            } catch (InterruptedException e) {\n+            }\n+\n+            GroupPatch patch = new GroupPatch();\n+            patch.setKey(groupTO.getKey());\n+            rvirtualdata = i + rvirtualdata;\n+            patch.getVirAttrs().add(attrTO(\"rvirtualdata\", rvirtualdata));\n+\n+            groupTO = updateGroup(patch).getAny();\n+            groupService.read(groupTO.getKey());\n+            assertNotNull(groupTO);\n+\n+            i++;\n+        } while (groupTO.getVirAttrs().isEmpty() && i < maxit);\n+        if (i == 5) {\n+            fail(\"Timeout when propagating \" + groupName + \" to LDAP\");\n+        }\n+\n+        assertEquals(1, groupTO.getVirAttrs().size());\n+        assertEquals(rvirtualdata, groupTO.getVirAttrs().iterator().next().getValues().get(0));\n         // -------------------------------------------\n \n         // -------------------------------------------\n@@ -527,12 +556,12 @@ public void issueSYNCOPE453() {\n \n         JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n \n-        final Map<String, Object> actuals = jdbcTemplate.queryForMap(\n+        Map<String, Object> actuals = jdbcTemplate.queryForMap(\n                 \"SELECT id, surname, email FROM testsync WHERE id=?\",\n                 new Object[] { Integer.parseInt(userTO.getPlainAttrMap().get(\"aLong\").getValues().get(0)) });\n \n         assertEquals(userTO.getPlainAttrMap().get(\"aLong\").getValues().get(0), actuals.get(\"id\").toString());\n-        assertEquals(\"ml@group.it\", actuals.get(\"email\"));\n+        assertEquals(rvirtualdata, actuals.get(\"email\"));\n         // -------------------------------------------\n \n         // -------------------------------------------"}]}