{"sha":"4eb90b200445456e3482e305aebda6e63951289a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjRlYjkwYjIwMDQ0NTQ1NmUzNDgyZTMwNWFlYmRhNmU2Mzk1MTI4OWE=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2010-12-13T14:15:20Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2010-12-13T14:15:20Z"},"message":"Adding web page for Hibernate statistics\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246694 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e3fb9d90542b8d6b6c254cc32bb91c793ace1993","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e3fb9d90542b8d6b6c254cc32bb91c793ace1993"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/4eb90b200445456e3482e305aebda6e63951289a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4eb90b200445456e3482e305aebda6e63951289a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/4eb90b200445456e3482e305aebda6e63951289a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/4eb90b200445456e3482e305aebda6e63951289a/comments","author":null,"committer":null,"parents":[{"sha":"99f1d480bfaa4ebf16f7cfbae2ec97d9dd0ff2d8","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/99f1d480bfaa4ebf16f7cfbae2ec97d9dd0ff2d8","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/99f1d480bfaa4ebf16f7cfbae2ec97d9dd0ff2d8"}],"stats":{"total":566,"additions":565,"deletions":1},"files":[{"sha":"6317c668e68bd1e79efc6145ef96e281d6f1081b","filename":"core/src/main/java/org/syncope/core/rest/controller/HibernateStats.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4eb90b200445456e3482e305aebda6e63951289a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FHibernateStats.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4eb90b200445456e3482e305aebda6e63951289a/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FHibernateStats.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FHibernateStats.java?ref=4eb90b200445456e3482e305aebda6e63951289a","patch":"@@ -0,0 +1,44 @@\n+/*\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *  under the License.\n+ */\n+package org.syncope.core.rest.controller;\n+\n+import javax.persistence.EntityManager;\n+import javax.servlet.http.HttpServletRequest;\n+import org.hibernate.Session;\n+import org.hibernate.SessionFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestMethod;\n+import org.springframework.web.servlet.ModelAndView;\n+\n+@Controller\n+@RequestMapping(\"/hibernate\")\n+public class HibernateStats {\n+\n+    @Autowired\n+    private EntityManager entityManager;\n+\n+    @RequestMapping(method = RequestMethod.GET,\n+    value = \"/stats\")\n+    public ModelAndView stats(final HttpServletRequest request) {\n+\n+        SessionFactory sessionFactory =\n+                ((Session) entityManager.getDelegate()).getSessionFactory();\n+\n+        return new ModelAndView(\"hibernateStats\").addObject(\"sessionFactory\",\n+                sessionFactory);\n+    }\n+}"},{"sha":"681d98c3563f1e7a864082324ab9ebf1543b33ac","filename":"core/src/main/webapp/WEB-INF/syncope-core-rest-servlet.xml","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4eb90b200445456e3482e305aebda6e63951289a/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fsyncope-core-rest-servlet.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4eb90b200445456e3482e305aebda6e63951289a/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fsyncope-core-rest-servlet.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fsyncope-core-rest-servlet.xml?ref=4eb90b200445456e3482e305aebda6e63951289a","patch":"@@ -53,8 +53,17 @@\n             <map>\n                 <entry key=\"json\" value=\"application/json;charset=UTF-8\"/>\n                 <entry key=\"xml\" value=\"application/xml;charset=UTF-8\"/>\n+                <entry key=\"html\" value=\"text/html;charset=UTF-8\"/>\n             </map>\n         </property>\n+        <property name=\"viewResolvers\">\n+            <list>\n+                <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\">\n+                    <property name=\"prefix\" value=\"/\"/>\n+                    <property name=\"suffix\" value=\".jsp\"/>\n+                </bean>\n+            </list>\n+        </property>\n         <property name=\"defaultViews\">\n             <list>\n                 <bean class=\"org.springframework.web.servlet.view.json.MappingJacksonJsonView\">\n@@ -66,7 +75,6 @@\n                               p:autodetectAnnotations=\"false\" p:encoding=\"UTF-8\"/>\n                     </constructor-arg>\n                 </bean>\n-\n             </list>\n         </property>\n         <property name=\"defaultContentType\" ref=\"jsonMediaType\"/>"},{"sha":"947eb10a1d20ebee22c83d699fa37c09b450f245","filename":"core/src/main/webapp/hibernateStats.jsp","status":"added","additions":512,"deletions":0,"changes":512,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/4eb90b200445456e3482e305aebda6e63951289a/core%2Fsrc%2Fmain%2Fwebapp%2FhibernateStats.jsp","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/4eb90b200445456e3482e305aebda6e63951289a/core%2Fsrc%2Fmain%2Fwebapp%2FhibernateStats.jsp","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fwebapp%2FhibernateStats.jsp?ref=4eb90b200445456e3482e305aebda6e63951289a","patch":"@@ -0,0 +1,512 @@\n+<%@page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n+<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\"%>\n+<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\"%>\n+<jsp:useBean id=\"sessionFactory\"\n+             scope=\"request\"\n+             type=\"org.hibernate.SessionFactory\"/>\n+<%@page import=\"org.springframework.web.context.support.ContextExposingHttpServletRequest\"%>\n+<%@page import=\"javax.persistence.EntityManagerFactory\"%>\n+<%@page import=\"org.hibernate.Session\"%>\n+<%@page import=\"javax.persistence.EntityManager\"%>\n+<%@page import=\"org.hibernate.stat.Statistics\"%>\n+<%@page import=\"org.springframework.web.context.support.WebApplicationContextUtils\"%>\n+<%@page import=\"org.springframework.context.ApplicationContext\"%>\n+<%@page import=\"java.text.SimpleDateFormat\"%>\n+<%@page import=\"org.hibernate.hql.QueryTranslator\"%>\n+<%@page import=\"org.hibernate.hql.ast.ASTQueryTranslatorFactory\"%>\n+<%@page import=\"org.hibernate.engine.SessionFactoryImplementor\"%>\n+<%@page import=\"org.hibernate.hql.QueryTranslatorFactory\"%>\n+<%@page import=\"org.hibernate.SessionFactory\"%>\n+<%@page import=\"java.util.Date\"%>\n+<%@page import=\"java.util.List\"%>\n+<%@page import=\"java.util.ArrayList\"%>\n+<%@page import=\"org.hibernate.stat.SecondLevelCacheStatistics\"%>\n+<%@page import=\"org.hibernate.stat.CollectionStatistics\"%>\n+<%@page import=\"org.hibernate.stat.EntityStatistics\"%>\n+<%@page import=\"java.text.Collator\"%>\n+<%@page import=\"java.util.TreeMap\"%>\n+<%@page import=\"java.util.Collections\"%>\n+<%@page import=\"org.hibernate.stat.QueryStatistics\"%>\n+<%@page import=\"java.util.Map\"%>\n+<%!\n+    static Map<String, QueryStatistics> queryStatistics =\n+            Collections.synchronizedMap(\n+            new TreeMap<String, QueryStatistics>(Collator.getInstance()));\n+\n+    static Map<String, EntityStatistics> entityStatistics =\n+            Collections.synchronizedMap(\n+            new TreeMap<String, EntityStatistics>(Collator.getInstance()));\n+\n+    static Map<String, CollectionStatistics> collectionStatistics =\n+            Collections.synchronizedMap(\n+            new TreeMap<String, CollectionStatistics>(Collator.getInstance()));\n+\n+    static Map<String, SecondLevelCacheStatistics> secondLevelCacheStatistics =\n+            Collections.synchronizedMap(\n+            new TreeMap<String, SecondLevelCacheStatistics>(\n+            Collator.getInstance()));\n+\n+    static List<Long> generalStatistics = Collections.synchronizedList(\n+            new ArrayList<Long>(18));\n+\n+    static {\n+        for (int i = 0; i < 9; i++) {\n+            generalStatistics.add(new Long(-1));\n+        }\n+    }\n+    static Date lastUpdate;\n+\n+    static Date activation;\n+\n+    static Date deactivation;\n+\n+    public static class HqlToSqlTranslator {\n+\n+        public String toSql(SessionFactory sessionFactory,\n+                String hqlQueryText) {\n+\n+            if (hqlQueryText != null) {\n+                final QueryTranslatorFactory ast =\n+                        new ASTQueryTranslatorFactory();\n+                final SessionFactoryImplementor factory =\n+                        (SessionFactoryImplementor) sessionFactory;\n+                final QueryTranslator newQueryTranslator =\n+                        ast.createQueryTranslator(\n+                        hqlQueryText,\n+                        hqlQueryText,\n+                        Collections.EMPTY_MAP, factory);\n+                newQueryTranslator.compile(Collections.EMPTY_MAP, false);\n+                return newQueryTranslator.getSQLString();\n+            }\n+\n+            return null;\n+        }\n+    }\n+    static HqlToSqlTranslator translator = new HqlToSqlTranslator();\n+\n+    public static class StringUtils {\n+\n+        public static final String format(final Date date) {\n+            if (date == null) {\n+                return null;\n+            }\n+            final SimpleDateFormat sdf = new SimpleDateFormat(\n+                    \"dd.MM.yy HH:mm:ss\");\n+            return sdf.format(date);\n+        }\n+\n+        public static final String formatTime(final long millis) {\n+            Date date = new Date(millis);\n+\n+            return format(date);\n+        }\n+    }\n+%>\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n+<html>\n+    <head>\n+        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n+        <title>Hibernate statistics</title>\n+        <style type=\"text/css\">\n+            .c{\n+                text-align: center;\n+            }\n+            .r{\n+                text-align: right;\n+            }\n+            .l{\n+                text-align: left;\n+            }\n+            .t{\n+                vertical-align: top;\n+            }\n+            .b{\n+                vertical-align: bottom;\n+            }\n+            .odd{\n+                background-color: #D4D4D4;\n+            }\n+            .even{\n+                background-color: #EEEEEE;\n+            }\n+            .bd1{\n+                border: solid #888888 1px;\n+            }\n+            .bg1{\n+                background-color: #CCCCCC;\n+            }\n+            .bg2{\n+                background-color: #DDDDDD;\n+            }\n+        </style>\n+    </head>\n+    <body>\n+        <p/>\n+        <%\n+                    final Statistics statistics =\n+                            sessionFactory.getStatistics();\n+\n+                    final String action = request.getParameter(\"do\");\n+                    final StringBuilder info = new StringBuilder(512);\n+\n+                    if (\"activate\".equals(action)\n+                            && !statistics.isStatisticsEnabled()) {\n+\n+                        statistics.setStatisticsEnabled(true);\n+                        activation = new Date();\n+                        info.append(\"Statistics enabled\\n\");\n+                    } else if (\"deactivate\".equals(action)\n+                            && statistics.isStatisticsEnabled()) {\n+\n+                        statistics.setStatisticsEnabled(false);\n+                        deactivation = new Date();\n+                        info.append(\"Statistics disabled\\n\");\n+                    } else if (\"clear\".equals(action)) {\n+                        activation = null;\n+                        deactivation = null;\n+                        statistics.clear();\n+                        generalStatistics.set(0, new Long(0));\n+                        generalStatistics.set(1, new Long(0));\n+\n+                        generalStatistics.set(2, new Long(0));\n+                        generalStatistics.set(3, new Long(0));\n+\n+                        generalStatistics.set(4, new Long(0));\n+                        generalStatistics.set(5, new Long(0));\n+\n+                        generalStatistics.set(6, new Long(0));\n+                        generalStatistics.set(7, new Long(0));\n+                        generalStatistics.set(8, new Long(0));\n+                        queryStatistics.clear();\n+                        entityStatistics.clear();\n+                        collectionStatistics.clear();\n+                        secondLevelCacheStatistics.clear();\n+                        info.append(\"Statistics cleared\\n\");\n+                    }\n+\n+                    boolean active = statistics.isStatisticsEnabled();\n+                    if (info.length() > 0) {\n+        %>\n+        <p/><div class=\"success\">\n+            <c:out value=\"${fn:escapeXml(info)}\"/>\n+        </div>\n+        <%                    }%>\n+        <p/>\n+        <a href=\"?\">Reload</a>\n+        <p/>\n+        <a href=\"?do=<%=(active ? \"deactivate\" : \"activate\")%>\">\n+            <%=(active ? \"DEACTIVATE\" : \"ACTIVATE\")%></a> |\n+        <a href=\"?do=clear\">CLEAR</a>\n+        <%\n+                    if (active) {\n+                        lastUpdate = new Date();\n+                        String[] names;\n+\n+                        generalStatistics.set(0, statistics.getConnectCount());\n+                        generalStatistics.set(1, statistics.getFlushCount());\n+\n+                        generalStatistics.set(2, statistics.\n+                                getPrepareStatementCount());\n+                        generalStatistics.set(3, statistics.\n+                                getCloseStatementCount());\n+\n+                        generalStatistics.set(4,\n+                                statistics.getSessionCloseCount());\n+                        generalStatistics.set(5,\n+                                statistics.getSessionOpenCount());\n+\n+                        generalStatistics.set(6,\n+                                statistics.getTransactionCount());\n+                        generalStatistics.set(7, statistics.\n+                                getSuccessfulTransactionCount());\n+                        generalStatistics.set(8, statistics.\n+                                getOptimisticFailureCount());\n+\n+                        queryStatistics.clear();\n+                        names = statistics.getQueries();\n+                        if (names != null && names.length > 0) {\n+                            for (int i = 0;\n+                                    i < names.length; i++) {\n+\n+                                queryStatistics.put(names[i],\n+                                        statistics.getQueryStatistics(\n+                                        names[i]));\n+                            }\n+                        }\n+\n+                        entityStatistics.clear();\n+                        names = statistics.getEntityNames();\n+                        if (names != null && names.length > 0) {\n+                            for (int i = 0; i\n+                                    < names.length; i++) {\n+                                entityStatistics.put(names[i],\n+                                        statistics.getEntityStatistics(\n+                                        names[i]));\n+                            }\n+                        }\n+\n+                        collectionStatistics.clear();\n+                        names = statistics.getCollectionRoleNames();\n+                        if (names != null && names.length > 0) {\n+                            for (int i = 0; i\n+                                    < names.length; i++) {\n+                                collectionStatistics.put(names[i],\n+                                        statistics.getCollectionStatistics(\n+                                        names[i]));\n+                            }\n+                        }\n+\n+                        secondLevelCacheStatistics.clear();\n+                        names = statistics.getSecondLevelCacheRegionNames();\n+                        if (names != null && names.length > 0) {\n+                            for (int i = 0; i\n+                                    < names.length; i++) {\n+                                secondLevelCacheStatistics.put(names[i],\n+                                        statistics.getSecondLevelCacheStatistics(\n+                                        names[i]));\n+                            }\n+                        }\n+                    }\n+\n+        %>\n+        <p/>\n+\tLast update: <%=(lastUpdate != null\n+                                ? StringUtils.format(lastUpdate) : \"none\")%><br/>\n+\tActivation: <%=(activation != null\n+                                ? StringUtils.format(activation) : \"none\")%><br/>\n+\tDeactivation: <%=(deactivation != null\n+                                ? StringUtils.format(deactivation) : \"none\")%><br/>\n+\tActive duration: <%=(activation != null\n+                                ? StringUtils.formatTime((deactivation != null\n+                                ? deactivation.getTime()\n+                                : new Date().getTime()) - activation.getTime())\n+                                : \"none\")%>\n+        <p/>\n+        <%\n+                    boolean hasGeneral = false;\n+                    for (int i = 0; i < 9; i++) {\n+                        if (generalStatistics.get(i).longValue() > -1) {\n+                            hasGeneral = true;\n+                            break;\n+                        }\n+                    }\n+                    if (hasGeneral) {\n+        %>\n+        <table>\n+            <tr>\n+                <th class=\"c bd1 bg1\">Connects</th>\n+                <td><%=generalStatistics.get(0)%></td>\n+            </tr>\n+            <tr>\n+                <th class=\"c bd1 bg1\">Flushes</th>\n+                <td><%=generalStatistics.get(1)%></td>\n+            </tr>\n+            <tr>\n+                <th class=\"c bd1 bg1\">Prepare statements</th>\n+                <td><%=generalStatistics.get(2)%></td>\n+            </tr>\n+            <tr>\n+                <th class=\"c bd1 bg1\">Close statements</th>\n+                <td><%=generalStatistics.get(3)%></td>\n+            </tr>\n+            <tr>\n+                <th class=\"c bd1 bg1\">Session opens</th>\n+                <td><%=generalStatistics.get(5)%></td>\n+            </tr>\n+            <tr>\n+                <th class=\"c bd1 bg1\">Session closes</th>\n+                <td><%=generalStatistics.get(4)%></td>\n+            </tr>\n+            <tr>\n+                <th class=\"c bd1 bg1\">Total Transactions</th>\n+                <td><%=generalStatistics.get(6)%></td>\n+            </tr>\n+            <tr>\n+                <th class=\"c bd1 bg1\">Successfull Transactions</th>\n+                <td><%=generalStatistics.get(7)%></td>\n+            </tr>\n+            <tr>\n+                <th class=\"c bd1 bg1\">Optimistic failures</th>\n+                <td><%=generalStatistics.get(8)%></td>\n+            </tr>\n+        </table>\n+        <p/>\n+        <%                    }%>\n+\n+        <%\n+                    if (queryStatistics.size() > 0) {\n+        %>\n+        <table width=\"100%\">\n+            <tr><th colspan=\"11\" class=\"c bd1 bg2\">Query statistics</th></tr>\n+            <tr>\n+                <th class=\"c bd1 bg1\">HQL Query</th>\n+                <th class=\"c bd1 bg1\">SQL Query</th>\n+                <th class=\"c bd1 bg1\">Calls</th>\n+                <th class=\"c bd1 bg1\">Total rowcount</th>\n+                <th class=\"c bd1 bg1\">Max dur.</th>\n+                <th class=\"c bd1 bg1\">Min dur.</th>\n+                <th class=\"c bd1 bg1\">Avg dur.</th>\n+                <th class=\"c bd1 bg1\">Total dur.</th>\n+                <th class=\"c bd1 bg1\">Cache hits</th>\n+                <th class=\"c bd1 bg1\">Cache miss</th>\n+                <th class=\"c bd1 bg1\">Cache put</th>\n+            </tr>\n+            <%\n+                                    QueryStatistics queryStats;\n+                                    boolean odd = true;\n+                                    for (String query :\n+                                            queryStatistics.keySet()) {\n+\n+                                        queryStats = queryStatistics.get(query);\n+            %>\n+            <tr class=\"<%=(odd ? \"odd\" : \"even\")%>\">\n+                <td class=\"t\"><%=query%></td>\n+                <td><small><%=translator.toSql(sessionFactory, query)%></small></td>\n+                <td class=\"t\"><%=queryStats.getExecutionCount()%></td>\n+                <td class=\"t\"><%=queryStats.getExecutionRowCount()%></td>\n+                <td class=\"t\"><%=queryStats.getExecutionMaxTime()%></td>\n+                <td class=\"t\"><%=queryStats.getExecutionMinTime()%></td>\n+                <td class=\"t\"><%=queryStats.getExecutionAvgTime()%></td>\n+                <td class=\"t\">\n+                    <%=queryStats.getExecutionAvgTime() * queryStats.\n+                                            getExecutionCount()%>\n+                </td>\n+                <td class=\"t\"><%=queryStats.getCacheHitCount()%></td>\n+                <td class=\"t\"><%=queryStats.getCacheMissCount()%></td>\n+                <td class=\"t\"><%=queryStats.getCachePutCount()%></td>\n+            </tr>\n+            <%\n+                                        odd = !odd;\n+                                    }\n+            %>\n+        </table>\n+        <p/>\n+        <%\n+                    }\n+\n+                    if (entityStatistics.size() > 0) {\n+        %>\n+        <table width=\"100%\">\n+            <tr><th colspan=\"7\" class=\"c bd1 bg2\">Entity statistics</th></tr>\n+            <tr>\n+                <th class=\"c bd1 bg1\">Entity</th>\n+                <th class=\"c bd1 bg1\">Loads</th>\n+                <th class=\"c bd1 bg1\">Fetches</th>\n+                <th class=\"c bd1 bg1\">Inserts</th>\n+                <th class=\"c bd1 bg1\">Updates</th>\n+                <th class=\"c bd1 bg1\">Deletes</th>\n+                <th class=\"c bd1 bg1\">Optimistic failures</th>\n+            </tr>\n+            <%\n+                                    EntityStatistics entityStats;\n+                                    boolean odd = true;\n+                                    for (String entity :\n+                                            entityStatistics.keySet()) {\n+\n+                                        entityStats = entityStatistics.get(\n+                                                entity);\n+            %>\n+            <tr class=\"<%=(odd ? \"odd\" : \"even\")%>\">\n+                <td><%=entity%></td>\n+                <td><%=entityStats.getLoadCount()%></td>\n+                <td><%=entityStats.getFetchCount()%></td>\n+                <td><%=entityStats.getInsertCount()%></td>\n+                <td><%=entityStats.getUpdateCount()%></td>\n+                <td><%=entityStats.getDeleteCount()%></td>\n+                <td><%=entityStats.getOptimisticFailureCount()%></td>\n+            </tr>\n+            <%\n+                                        odd = !odd;\n+                                    }\n+            %>\n+        </table>\n+        <p/>\n+        <%\n+                    }\n+\n+                    if (collectionStatistics.size() > 0) {\n+        %>\n+        <table width=\"100%\">\n+            <tr><th colspan=\"6\" class=\"c bd1 bg2\">Collection statistics</th></tr>\n+            <tr>\n+                <th class=\"c bd1 bg1\">Role</th>\n+                <th class=\"c bd1 bg1\">Loads</th>\n+                <th class=\"c bd1 bg1\">Fetches</th>\n+                <th class=\"c bd1 bg1\">Updates</th>\n+                <th class=\"c bd1 bg1\">Recreate</th>\n+                <th class=\"c bd1 bg1\">Remove</th>\n+            </tr>\n+            <%\n+                                    CollectionStatistics collectionStats;\n+                                    boolean odd = true;\n+\n+                                    for (String collection :\n+                                            collectionStatistics.keySet()) {\n+\n+                                        collectionStats = collectionStatistics.\n+                                                get(collection);\n+            %>\n+            <tr class=\"<%=(odd ? \"odd\" : \"even\")%>\">\n+                <td><%=collection%></td>\n+                <td><%=collectionStats.getLoadCount()%></td>\n+                <td><%=collectionStats.getFetchCount()%></td>\n+                <td><%=collectionStats.getUpdateCount()%></td>\n+                <td><%=collectionStats.getRecreateCount()%></td>\n+                <td><%=collectionStats.getRemoveCount()%></td>\n+            </tr>\n+            <%\n+                                        odd = !odd;\n+                                    }\n+            %>\n+        </table>\n+        <p/>\n+        <%\n+                    }\n+\n+                    if (secondLevelCacheStatistics.size() > 0) {\n+                        long totalSizeInMemory = 0;\n+        %>\n+        <table width=\"100%\">\n+            <tr><th colspan=\"7\" class=\"c bd1 bg2\">2nd level cache statistics</th></tr>\n+            <tr>\n+                <th class=\"c bd1 bg1\">Regionname</th>\n+                <th class=\"c bd1 bg1\">Puts</th>\n+                <th class=\"c bd1 bg1\">Hits</th>\n+                <th class=\"c bd1 bg1\">Misses</th>\n+                <th class=\"c bd1 bg1\">Elements in memory</th>\n+                <th class=\"c bd1 bg1\">Size in memory</th>\n+                <th class=\"c bd1 bg1\">Elements on disk</th>\n+            </tr>\n+            <%\n+                                    SecondLevelCacheStatistics cacheStats;\n+                                    boolean odd = true;\n+                                    for (String cache :\n+                                            secondLevelCacheStatistics.keySet()) {\n+                                        cacheStats = secondLevelCacheStatistics.\n+                                                get(cache);\n+                                        totalSizeInMemory += cacheStats.\n+                                                getSizeInMemory();\n+            %>\n+            <tr class=\"<%=(odd ? \"odd\" : \"even\")%>\">\n+                <td><%=cache%></td>\n+                <td><%=cacheStats.getPutCount()%></td>\n+                <td><%=cacheStats.getHitCount()%></td>\n+                <td><%=cacheStats.getMissCount()%></td>\n+                <td><%=cacheStats.getElementCountInMemory()%></td>\n+                <td><%=cacheStats.getSizeInMemory()%></td>\n+                <td><%=cacheStats.getElementCountOnDisk()%></td>\n+            </tr>\n+            <%\n+                                        odd = !odd;\n+                                    }\n+            %>\n+            <tr>\n+                <td colspan=\"5\">&nbsp;</td>\n+                <td><%=totalSizeInMemory%></td>\n+                <td>&nbsp;</td>\n+            </tr>\n+        </table>\n+        <p/>\n+        <%          }%>\n+    </body>\n+</html>\n\\ No newline at end of file"}]}