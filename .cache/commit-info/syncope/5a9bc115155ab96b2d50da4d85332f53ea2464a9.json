{"sha":"5a9bc115155ab96b2d50da4d85332f53ea2464a9","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjVhOWJjMTE1MTU1YWI5NmIyZDUwZGE0ZDg1MzMyZjUzZWEyNDY0YTk=","commit":{"author":{"name":"Misagh Moayyed","email":"mm1844@gmail.com","date":"2020-01-30T15:06:08Z"},"committer":{"name":"Misagh Moayyed","email":"mm1844@gmail.com","date":"2020-01-30T15:06:08Z"},"message":"fix checkstyle issues with line length","tree":{"sha":"d58d4c1057045916bba762d1f6e031b88791ea14","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/d58d4c1057045916bba762d1f6e031b88791ea14"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/5a9bc115155ab96b2d50da4d85332f53ea2464a9","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEElUyo8doQ6pkfeJVxEb3Dumou+aoFAl4y8OAACgkQEb3Dumou\n+apflwgAgcKtcf+sw/RLKvg2VYpM6NP9lrd0UFjzAAzIIbDlyaDkO9HP867QgqCj\nKgCL5JQl4/Ukel/VUgiA1+5uKXdMhykBjjt/cN6nU2U9QGHMJcIhk6PV7qelbIPJ\nZ9ViBLhIKr7cmf2ynVlaQBnYRBftTmvWZDGHi0/5Uppm7+o2IKiSiVpVDv0/N7JV\n04Y6n1dINXUMmst5R3ErWlIh0Z+syYAoYM0GxkRDeRsCBNL0NyttA7pUwnQ/pVeD\nWirHXJwHChgyhsjoCkga+VgyD9CbApPq9kThFCMoQBRLHl6nSfI2yBOp9nUmHXUv\nZLEw6NNadsbxTv7zDqncGoALNIdS/g==\n=Q/K0\n-----END PGP SIGNATURE-----","payload":"tree d58d4c1057045916bba762d1f6e031b88791ea14\nparent 82deeeefb6c6d8b324e27de6f00de39959498850\nauthor Misagh Moayyed <mm1844@gmail.com> 1580396768 +0400\ncommitter Misagh Moayyed <mm1844@gmail.com> 1580396768 +0400\n\nfix checkstyle issues with line length\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5a9bc115155ab96b2d50da4d85332f53ea2464a9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/5a9bc115155ab96b2d50da4d85332f53ea2464a9","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/5a9bc115155ab96b2d50da4d85332f53ea2464a9/comments","author":{"login":"mmoayyed","id":1205228,"node_id":"MDQ6VXNlcjEyMDUyMjg=","avatar_url":"https://avatars.githubusercontent.com/u/1205228?v=4","gravatar_id":"","url":"https://api.github.com/users/mmoayyed","html_url":"https://github.com/mmoayyed","followers_url":"https://api.github.com/users/mmoayyed/followers","following_url":"https://api.github.com/users/mmoayyed/following{/other_user}","gists_url":"https://api.github.com/users/mmoayyed/gists{/gist_id}","starred_url":"https://api.github.com/users/mmoayyed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmoayyed/subscriptions","organizations_url":"https://api.github.com/users/mmoayyed/orgs","repos_url":"https://api.github.com/users/mmoayyed/repos","events_url":"https://api.github.com/users/mmoayyed/events{/privacy}","received_events_url":"https://api.github.com/users/mmoayyed/received_events","type":"User","site_admin":false},"committer":{"login":"mmoayyed","id":1205228,"node_id":"MDQ6VXNlcjEyMDUyMjg=","avatar_url":"https://avatars.githubusercontent.com/u/1205228?v=4","gravatar_id":"","url":"https://api.github.com/users/mmoayyed","html_url":"https://github.com/mmoayyed","followers_url":"https://api.github.com/users/mmoayyed/followers","following_url":"https://api.github.com/users/mmoayyed/following{/other_user}","gists_url":"https://api.github.com/users/mmoayyed/gists{/gist_id}","starred_url":"https://api.github.com/users/mmoayyed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmoayyed/subscriptions","organizations_url":"https://api.github.com/users/mmoayyed/orgs","repos_url":"https://api.github.com/users/mmoayyed/repos","events_url":"https://api.github.com/users/mmoayyed/events{/privacy}","received_events_url":"https://api.github.com/users/mmoayyed/received_events","type":"User","site_admin":false},"parents":[{"sha":"82deeeefb6c6d8b324e27de6f00de39959498850","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/82deeeefb6c6d8b324e27de6f00de39959498850","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/82deeeefb6c6d8b324e27de6f00de39959498850"}],"stats":{"total":6,"additions":4,"deletions":2},"files":[{"sha":"33713d1637badae77955f844d601d0205316f523","filename":"core/idm/logic/src/main/java/org/apache/syncope/core/logic/ReconciliationLogic.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a9bc115155ab96b2d50da4d85332f53ea2464a9/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a9bc115155ab96b2d50da4d85332f53ea2464a9/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidm%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java?ref=5a9bc115155ab96b2d50da4d85332f53ea2464a9","patch":"@@ -354,7 +354,8 @@ public void pull(final ReconQuery query, final PullTaskTO pullTask) {\n             throw new NotFoundException(\"Realm \" + pullTask.getDestinationRealm());\n         }\n         if (provision.getMapping().getConnObjectKeyItem().isEmpty()) {\n-            throw new NotFoundException(\"ConnObjectKey cannot be determined for mapping \" + provision.getMapping().getKey());\n+            throw new NotFoundException(\n+                \"ConnObjectKey cannot be determined for mapping \" + provision.getMapping().getKey());\n         }\n \n         SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Reconciliation);"},{"sha":"4d00c99892b8b0a249b123dfc67b0cbc8df456df","filename":"core/spring/src/main/java/org/apache/syncope/core/spring/security/AuthDataAccessor.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/5a9bc115155ab96b2d50da4d85332f53ea2464a9/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/5a9bc115155ab96b2d50da4d85332f53ea2464a9/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fspring%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fspring%2Fsecurity%2FAuthDataAccessor.java?ref=5a9bc115155ab96b2d50da4d85332f53ea2464a9","patch":"@@ -243,7 +243,8 @@ protected boolean authenticate(final User user, final String password) {\n                 }\n                 Optional<String> connObjectKeyValue = mappingManager.getConnObjectKeyValue(user, provision.get());\n                 if (connObjectKeyValue.isEmpty()) {\n-                    throw new AccountNotFoundException(\"Unable to locate conn object key value for \" + userType.getKey());\n+                    throw new AccountNotFoundException(\n+                        \"Unable to locate conn object key value for \" + userType.getKey());\n                 }\n                 connObjectKey = connObjectKeyValue.get();\n                 Uid uid = connFactory.getConnector(resource).authenticate(connObjectKey, password, null);"}]}