{"sha":"85f3abd36b265602b23a38aec4de2731acfbd8f5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg1ZjNhYmQzNmIyNjU2MDJiMjNhMzhhZWM0ZGUyNzMxYWNmYmQ4ZjU=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-01-28T12:09:22Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2016-01-28T12:09:22Z"},"message":"[SYNCOPE-155] Pages linked from menu can now be specified in console.properties","tree":{"sha":"b507b5e16e75ae912f3a3b8c291fdee2d240d3f0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/b507b5e16e75ae912f3a3b8c291fdee2d240d3f0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/85f3abd36b265602b23a38aec4de2731acfbd8f5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/85f3abd36b265602b23a38aec4de2731acfbd8f5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/85f3abd36b265602b23a38aec4de2731acfbd8f5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/85f3abd36b265602b23a38aec4de2731acfbd8f5/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"148765de6f16d05038b0da026438301db02bc3cb","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/148765de6f16d05038b0da026438301db02bc3cb","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/148765de6f16d05038b0da026438301db02bc3cb"}],"stats":{"total":168,"additions":146,"deletions":22},"files":[{"sha":"00a42db4b5589bff95382f6eea30fa120c6b90d0","filename":"client/console/src/main/java/org/apache/syncope/client/console/BookmarkablePageLinkBuilder.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/85f3abd36b265602b23a38aec4de2731acfbd8f5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FBookmarkablePageLinkBuilder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/85f3abd36b265602b23a38aec4de2731acfbd8f5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FBookmarkablePageLinkBuilder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FBookmarkablePageLinkBuilder.java?ref=85f3abd36b265602b23a38aec4de2731acfbd8f5","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.client.console;\n+\n+import org.apache.syncope.client.console.pages.BasePage;\n+import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n+\n+public final class BookmarkablePageLinkBuilder {\n+\n+    public static <T> BookmarkablePageLink<T> build(\n+            final String key, final Class<? extends BasePage> defaultPageClass) {\n+\n+        Class<? extends BasePage> pageClass = SyncopeConsoleApplication.get().getPageClass(key);\n+        return new BookmarkablePageLink<>(\n+                key,\n+                pageClass == null ? defaultPageClass : pageClass);\n+    }\n+\n+    private BookmarkablePageLinkBuilder() {\n+        // private constructor for static utility class\n+    }\n+}"},{"sha":"1e3c7861425dda3a3519a0d4e2a9c31d98b4ca6b","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleApplication.java","status":"modified","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/85f3abd36b265602b23a38aec4de2731acfbd8f5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/85f3abd36b265602b23a38aec4de2731acfbd8f5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleApplication.java?ref=85f3abd36b265602b23a38aec4de2731acfbd8f5","patch":"@@ -25,11 +25,16 @@\n import java.io.File;\n import java.util.Arrays;\n import java.util.Collections;\n+import java.util.Enumeration;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Locale;\n+import java.util.Map;\n import java.util.Properties;\n import javax.ws.rs.core.MediaType;\n import org.apache.commons.io.FileUtils;\n+import org.apache.commons.lang3.ClassUtils;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.client.console.init.ClassPathScanImplementationLookup;\n import org.apache.syncope.client.console.init.ConsoleInitializer;\n import org.apache.syncope.client.console.pages.BasePage;\n@@ -55,10 +60,14 @@\n import org.apache.wicket.request.resource.IResource;\n import org.apache.wicket.request.resource.ResourceReference;\n import org.apache.wicket.resource.DynamicJQueryResourceReference;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.util.Assert;\n \n public class SyncopeConsoleApplication extends AuthenticatedWebApplication {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(SyncopeConsoleApplication.class);\n+\n     private static final String CONSOLE_PROPERTIES = \"console.properties\";\n \n     public static final List<Locale> SUPPORTED_LOCALES = Collections.unmodifiableList(Arrays.asList(\n@@ -68,6 +77,29 @@ Locale.ENGLISH, Locale.ITALIAN, new Locale(\"pt\", \"BR\")\n \n     private static final String ACTIVITI_MODELER_CONTEXT = \"activiti-modeler\";\n \n+    private static Map<String, Class<? extends BasePage>> PAGE_CLASSES;\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private static void populatePageClasses(final Properties props) {\n+        Enumeration<String> propNames = (Enumeration<String>) props.propertyNames();\n+        while (propNames.hasMoreElements()) {\n+            String name = propNames.nextElement();\n+            if (name.startsWith(\"page.\")) {\n+                try {\n+                    Class<?> clazz = ClassUtils.getClass(props.getProperty(name));\n+                    if (BasePage.class.isAssignableFrom(clazz)) {\n+                        PAGE_CLASSES.put(\n+                                StringUtils.substringAfter(\"page.\", name), (Class<? extends BasePage>) clazz);\n+                    } else {\n+                        LOG.warn(\"{} does not extend {}, ignoring...\", clazz.getName(), BasePage.class.getName());\n+                    }\n+                } catch (ClassNotFoundException e) {\n+                    LOG.error(\"While looking for class identified by property '{}'\", name, e);\n+                }\n+            }\n+        }\n+    }\n+\n     public static SyncopeConsoleApplication get() {\n         return (SyncopeConsoleApplication) WebApplication.get();\n     }\n@@ -127,6 +159,15 @@ protected void init() {\n \n         clientFactory = new SyncopeClientFactoryBean().setAddress(scheme + \"://\" + host + \":\" + port + \"/\" + rootPath);\n \n+        // process page properties\n+        synchronized (CONSOLE_PROPERTIES) {\n+            if (PAGE_CLASSES == null) {\n+                PAGE_CLASSES = new HashMap<>();\n+                populatePageClasses(props);\n+                PAGE_CLASSES = Collections.unmodifiableMap(PAGE_CLASSES);\n+            }\n+        }\n+\n         // Application settings\n         IBootstrapSettings settings = new BootstrapSettings();\n \n@@ -217,6 +258,10 @@ public Class<? extends Page> getHomePage() {\n                 : Dashboard.class;\n     }\n \n+    public Class<? extends BasePage> getPageClass(final String key) {\n+        return PAGE_CLASSES.get(key);\n+    }\n+\n     public String getVersion() {\n         return version;\n     }\n@@ -248,4 +293,5 @@ public SyncopeClientFactoryBean getClientFactory() {\n     public MediaType getMediaType() {\n         return clientFactory.getContentType().getMediaType();\n     }\n+\n }"},{"sha":"5ccc600f07914fbd635328a1bc474a90af9a6f55","filename":"client/console/src/main/java/org/apache/syncope/client/console/SyncopeConsoleSession.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/85f3abd36b265602b23a38aec4de2731acfbd8f5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/85f3abd36b265602b23a38aec4de2731acfbd8f5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2FSyncopeConsoleSession.java?ref=85f3abd36b265602b23a38aec4de2731acfbd8f5","patch":"@@ -52,10 +52,10 @@ public class SyncopeConsoleSession extends AuthenticatedWebSession {\n \n     private static final long serialVersionUID = 747562246415852166L;\n \n-    public static final String AUTHENTICATED = \"AUTHENTICATED\";\n-\n     private static final Logger LOG = LoggerFactory.getLogger(SyncopeConsoleSession.class);\n \n+    public static final String AUTHENTICATED = \"AUTHENTICATED\";\n+\n     private final SyncopeTO syncopeTO;\n \n     private final List<String> domains;"},{"sha":"211b56dd15deaa0f99bd6e1f57678b98fe8f0983","filename":"client/console/src/main/java/org/apache/syncope/client/console/pages/BasePage.java","status":"modified","additions":18,"deletions":17,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/85f3abd36b265602b23a38aec4de2731acfbd8f5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/85f3abd36b265602b23a38aec4de2731acfbd8f5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpages%2FBasePage.java?ref=85f3abd36b265602b23a38aec4de2731acfbd8f5","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.client.console.pages;\n \n import java.util.List;\n+import org.apache.syncope.client.console.BookmarkablePageLinkBuilder;\n import org.apache.syncope.client.console.SyncopeConsoleApplication;\n import org.apache.syncope.client.console.SyncopeConsoleSession;\n import org.apache.syncope.client.console.annotations.ExtPage;\n@@ -96,28 +97,28 @@ public BasePage(final PageParameters parameters) {\n         if (SyncopeConsoleSession.get().owns(StandardEntitlement.WORKFLOW_FORM_LIST)) {\n             todos.setDefaultModelObject(userWorkflowRestClient.getForms().size());\n         }\n-        MetaDataRoleAuthorizationStrategy.authorize(todosContainer, WebPage.RENDER,\n-                StandardEntitlement.WORKFLOW_FORM_LIST);\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                todosContainer, WebPage.RENDER, StandardEntitlement.WORKFLOW_FORM_LIST);\n \n         // menu\n         WebMarkupContainer liContainer = new WebMarkupContainer(getLIContainerId(\"dashboard\"));\n         add(liContainer);\n-        liContainer.add(new BookmarkablePageLink<>(\"dashboard\", Dashboard.class));\n+        liContainer.add(BookmarkablePageLinkBuilder.build(\"dashboard\", Dashboard.class));\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"realms\"));\n         add(liContainer);\n-        liContainer.add(new BookmarkablePageLink<>(\"realms\", Realms.class));\n+        liContainer.add(BookmarkablePageLinkBuilder.build(\"realms\", Realms.class));\n         MetaDataRoleAuthorizationStrategy.authorize(liContainer, WebPage.RENDER, StandardEntitlement.REALM_LIST);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"topology\"));\n         add(liContainer);\n-        liContainer.add(new BookmarkablePageLink<>(\"topology\", Topology.class));\n+        liContainer.add(BookmarkablePageLinkBuilder.build(\"topology\", Topology.class));\n         MetaDataRoleAuthorizationStrategy.authorize(liContainer, WebPage.RENDER,\n                 String.format(\"%s,%s\", StandardEntitlement.CONNECTOR_LIST, StandardEntitlement.RESOURCE_LIST));\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"reports\"));\n         add(liContainer);\n-        liContainer.add(new BookmarkablePageLink<>(\"reports\", Reports.class));\n+        liContainer.add(BookmarkablePageLinkBuilder.build(\"reports\", Reports.class));\n         MetaDataRoleAuthorizationStrategy.authorize(liContainer, WebPage.RENDER, StandardEntitlement.REPORT_LIST);\n \n         WebMarkupContainer confLIContainer = new WebMarkupContainer(getLIContainerId(\"configuration\"));\n@@ -127,52 +128,52 @@ public BasePage(final PageParameters parameters) {\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"workflow\"));\n         confULContainer.add(liContainer);\n-        BookmarkablePageLink<Page> workflowLink = new BookmarkablePageLink<>(\"workflow\", Workflow.class);\n+        BookmarkablePageLink<Page> workflowLink = BookmarkablePageLinkBuilder.build(\"workflow\", Workflow.class);\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 workflowLink, WebPage.ENABLE, StandardEntitlement.WORKFLOW_DEF_READ);\n         liContainer.add(workflowLink);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"logs\"));\n         confULContainer.add(liContainer);\n-        BookmarkablePageLink<Page> logsLink = new BookmarkablePageLink<>(\"logs\", Logs.class);\n+        BookmarkablePageLink<Page> logsLink = BookmarkablePageLinkBuilder.build(\"logs\", Logs.class);\n         MetaDataRoleAuthorizationStrategy.authorize(logsLink, WebPage.ENABLE, StandardEntitlement.LOG_LIST);\n         liContainer.add(logsLink);\n         MetaDataRoleAuthorizationStrategy.authorize(liContainer, WebPage.RENDER, StandardEntitlement.LOG_LIST);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"securityquestions\"));\n         confULContainer.add(liContainer);\n-        BookmarkablePageLink<Page> secuityQuestionsLink = new BookmarkablePageLink<>(\"securityquestions\",\n-                SecurityQuestions.class);\n+        BookmarkablePageLink<Page> secuityQuestionsLink =\n+                BookmarkablePageLinkBuilder.build(\"securityquestions\", SecurityQuestions.class);\n         liContainer.add(secuityQuestionsLink);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"types\"));\n         confULContainer.add(liContainer);\n-        BookmarkablePageLink<Page> typesLink = new BookmarkablePageLink<>(\"types\", Types.class);\n+        BookmarkablePageLink<Page> typesLink = BookmarkablePageLinkBuilder.build(\"types\", Types.class);\n         MetaDataRoleAuthorizationStrategy.authorize(typesLink, WebPage.ENABLE, StandardEntitlement.SCHEMA_LIST);\n         liContainer.add(typesLink);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"roles\"));\n         confULContainer.add(liContainer);\n-        liContainer.add(new BookmarkablePageLink<>(\"roles\", Roles.class));\n+        liContainer.add(BookmarkablePageLinkBuilder.build(\"roles\", Roles.class));\n         MetaDataRoleAuthorizationStrategy.authorize(liContainer, WebPage.RENDER, StandardEntitlement.ROLE_LIST);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"policies\"));\n         confULContainer.add(liContainer);\n-        liContainer.add(new BookmarkablePageLink<>(\"policies\", Policies.class));\n+        liContainer.add(BookmarkablePageLinkBuilder.build(\"policies\", Policies.class));\n         MetaDataRoleAuthorizationStrategy.authorize(liContainer, WebPage.RENDER, StandardEntitlement.POLICY_LIST);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"layouts\"));\n         confULContainer.add(liContainer);\n-        liContainer.add(new BookmarkablePageLink<>(\"layouts\", Layouts.class));\n+        liContainer.add(BookmarkablePageLinkBuilder.build(\"layouts\", Layouts.class));\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"notifications\"));\n         confULContainer.add(liContainer);\n-        liContainer.add(new BookmarkablePageLink<>(\"notifications\", Notifications.class));\n+        liContainer.add(BookmarkablePageLinkBuilder.build(\"notifications\", Notifications.class));\n         MetaDataRoleAuthorizationStrategy.authorize(liContainer, WebPage.RENDER, StandardEntitlement.NOTIFICATION_LIST);\n \n         liContainer = new WebMarkupContainer(getLIContainerId(\"parameters\"));\n         confULContainer.add(liContainer);\n-        liContainer.add(new BookmarkablePageLink<>(\"parameters\", Parameters.class));\n+        liContainer.add(BookmarkablePageLinkBuilder.build(\"parameters\", Parameters.class));\n         MetaDataRoleAuthorizationStrategy.authorize(\n                 liContainer, WebPage.RENDER, StandardEntitlement.CONFIGURATION_LIST);\n \n@@ -255,7 +256,7 @@ public void onComponentTag(final Component component, final ComponentTag tag) {\n                     });\n                 }\n \n-                BookmarkablePageLink<?> link = new BookmarkablePageLink<>(\"extPage\", item.getModelObject());\n+                BookmarkablePageLink<Page> link = new BookmarkablePageLink<>(\"extPage\", item.getModelObject());\n                 containingLI.add(link);\n \n                 ExtPage ann = item.getModelObject().getAnnotation(ExtPage.class);"},{"sha":"1446ee1b2c66893015ce10310c6eef58ce08ced9","filename":"client/console/src/main/java/org/apache/syncope/client/console/resources/WorkflowDefPUTResource.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/85f3abd36b265602b23a38aec4de2731acfbd8f5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefPUTResource.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/85f3abd36b265602b23a38aec4de2731acfbd8f5/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefPUTResource.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fresources%2FWorkflowDefPUTResource.java?ref=85f3abd36b265602b23a38aec4de2731acfbd8f5","patch":"@@ -37,9 +37,6 @@ public class WorkflowDefPUTResource extends AbstractResource {\n \n     private static final long serialVersionUID = 2964542005207297944L;\n \n-    /**\n-     * Logger.\n-     */\n     private static final Logger LOG = LoggerFactory.getLogger(WorkflowDefPUTResource.class);\n \n     @Override"},{"sha":"c1d70e98e42f3aac62edc3c7f5ee32cdc8ea99e9","filename":"client/console/src/main/resources/console.properties","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/85f3abd36b265602b23a38aec4de2731acfbd8f5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/85f3abd36b265602b23a38aec4de2731acfbd8f5/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Fconsole.properties?ref=85f3abd36b265602b23a38aec4de2731acfbd8f5","patch":"@@ -29,3 +29,17 @@ port=8080\n rootPath=/syncope/rest/\n \n activitiModelerDirectory=${activiti-modeler.directory}\n+\n+page.dashboard=org.apache.syncope.client.console.pages.Dashboard\n+page.realms=org.apache.syncope.client.console.pages.Realms\n+page.topology=org.apache.syncope.client.console.topology.Topology\n+page.reports=org.apache.syncope.client.console.pages.Reports\n+page.workflow=org.apache.syncope.client.console.pages.Workflow\n+page.logs=org.apache.syncope.client.console.pages.Logs\n+page.securityquestions=org.apache.syncope.client.console.pages.SecurityQuestions\n+page.types=org.apache.syncope.client.console.pages.Types\n+page.roles=org.apache.syncope.client.console.pages.Roles\n+page.policies=org.apache.syncope.client.console.pages.Policies\n+page.layouts=org.apache.syncope.client.console.pages.Layouts\n+page.notifications=org.apache.syncope.client.console.pages.Notifications\n+page.parameters=org.apache.syncope.client.console.pages.Parameters"},{"sha":"fa4c289c8cf9704d51df484814eef1e8f713114c","filename":"fit/console-reference/src/main/resources/console.properties","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/85f3abd36b265602b23a38aec4de2731acfbd8f5/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/85f3abd36b265602b23a38aec4de2731acfbd8f5/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fconsole-reference%2Fsrc%2Fmain%2Fresources%2Fconsole.properties?ref=85f3abd36b265602b23a38aec4de2731acfbd8f5","patch":"@@ -29,3 +29,17 @@ port=9080\n rootPath=/syncope/rest/\n \n activitiModelerDirectory=${activiti-modeler.directory}\n+\n+page.dashboard=org.apache.syncope.client.console.pages.Dashboard\n+page.realms=org.apache.syncope.client.console.pages.Realms\n+page.topology=org.apache.syncope.client.console.topology.Topology\n+page.reports=org.apache.syncope.client.console.pages.Reports\n+page.workflow=org.apache.syncope.client.console.pages.Workflow\n+page.logs=org.apache.syncope.client.console.pages.Logs\n+page.securityquestions=org.apache.syncope.client.console.pages.SecurityQuestions\n+page.types=org.apache.syncope.client.console.pages.Types\n+page.roles=org.apache.syncope.client.console.pages.Roles\n+page.policies=org.apache.syncope.client.console.pages.Policies\n+page.layouts=org.apache.syncope.client.console.pages.Layouts\n+page.notifications=org.apache.syncope.client.console.pages.Notifications\n+page.parameters=org.apache.syncope.client.console.pages.Parameters"},{"sha":"fa4c289c8cf9704d51df484814eef1e8f713114c","filename":"fit/core-reference/src/test/resources/console.properties","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/85f3abd36b265602b23a38aec4de2731acfbd8f5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fconsole.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/85f3abd36b265602b23a38aec4de2731acfbd8f5/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fconsole.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fresources%2Fconsole.properties?ref=85f3abd36b265602b23a38aec4de2731acfbd8f5","patch":"@@ -29,3 +29,17 @@ port=9080\n rootPath=/syncope/rest/\n \n activitiModelerDirectory=${activiti-modeler.directory}\n+\n+page.dashboard=org.apache.syncope.client.console.pages.Dashboard\n+page.realms=org.apache.syncope.client.console.pages.Realms\n+page.topology=org.apache.syncope.client.console.topology.Topology\n+page.reports=org.apache.syncope.client.console.pages.Reports\n+page.workflow=org.apache.syncope.client.console.pages.Workflow\n+page.logs=org.apache.syncope.client.console.pages.Logs\n+page.securityquestions=org.apache.syncope.client.console.pages.SecurityQuestions\n+page.types=org.apache.syncope.client.console.pages.Types\n+page.roles=org.apache.syncope.client.console.pages.Roles\n+page.policies=org.apache.syncope.client.console.pages.Policies\n+page.layouts=org.apache.syncope.client.console.pages.Layouts\n+page.notifications=org.apache.syncope.client.console.pages.Notifications\n+page.parameters=org.apache.syncope.client.console.pages.Parameters"}]}