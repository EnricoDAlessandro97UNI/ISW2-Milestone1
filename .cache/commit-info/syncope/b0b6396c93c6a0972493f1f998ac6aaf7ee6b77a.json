{"sha":"b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmIwYjYzOTZjOTNjNmEwOTcyNDkzZjFmOTk4YWM2YWFmN2VlNmI3N2E=","commit":{"author":{"name":"Unknown","email":"unknown@apache.org","date":"2011-01-05T14:53:02Z"},"committer":{"name":"Unknown","email":"unknown@apache.org","date":"2011-01-05T14:53:02Z"},"message":"(Fixes issue #53)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/trunk@1246717 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"96ea484fe2d29e22514f557aba437648516916fc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/96ea484fe2d29e22514f557aba437648516916fc"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/comments","author":null,"committer":null,"parents":[{"sha":"ce711379cde24edf004fd82a87556d569786a654","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ce711379cde24edf004fd82a87556d569786a654","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ce711379cde24edf004fd82a87556d569786a654"}],"stats":{"total":7442,"additions":3661,"deletions":3781},"files":[{"sha":"a86f341bcf847843eb0c3fa33392dd9adf2773bf","filename":"console/pom.xml","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fpom.xml?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -29,8 +29,8 @@\n     <packaging>war</packaging>\n \n     <properties>\n-        <logfile>/tmp/syncope-console.log</logfile>\n-        <logfile.test>/tmp/syncope-console-test.log</logfile.test>\n+        <logfile>/var/tmp/syncope-console.log</logfile>\n+        <logfile.test>/var/tmp/syncope-console-test.log</logfile.test>\n     </properties>\n \n     <dependencies>\n@@ -101,7 +101,6 @@\n             <groupId>org.springframework</groupId>\n             <artifactId>spring-core</artifactId>\n         </dependency>\n-        \n         <dependency>\n             <groupId>org.springframework</groupId>\n             <artifactId>spring-webmvc</artifactId>"},{"sha":"17ac832582159b5b12bbc7b0c92c6e172287e8f0","filename":"console/src/main/java/org/syncope/console/SyncopeApplication.java","status":"modified","additions":15,"deletions":39,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeApplication.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -26,9 +26,6 @@\n import org.apache.wicket.protocol.http.WebRequest;\n import org.apache.wicket.protocol.http.WebResponse;\n import org.apache.wicket.spring.injection.annot.SpringComponentInjector;\n-import org.springframework.beans.BeansException;\n-import org.springframework.context.ApplicationContext;\n-import org.springframework.context.ApplicationContextAware;\n import org.syncope.console.pages.Configuration;\n import org.syncope.console.pages.Connectors;\n import org.syncope.console.pages.Login;\n@@ -43,24 +40,14 @@\n /**\n  * SyncopeApplication class.\n  */\n-public class SyncopeApplication extends AuthenticatedWebApplication\n-        implements ApplicationContextAware {\n-    SyncopeUser user = null;\n+public class SyncopeApplication extends AuthenticatedWebApplication {\n \n-    String file;\n-    \n-    private ApplicationContext applicationContext;\n-\n-    public SyncopeApplication()\n-    {\n-    }\n+    private SyncopeUser user = null;\n \n     @Override\n-    protected void init()\n-    {\n-        file = getServletContext().getInitParameter(\"authenticationFile\");\n+    protected void init() {\n         addComponentInstantiationListener(new SpringComponentInjector(this));\n-        getResourceSettings().setThrowExceptionOnMissingResource( true );\n+        getResourceSettings().setThrowExceptionOnMissingResource(true);\n \n         getSecuritySettings().setAuthorizationStrategy(\n                 new RoleAuthorizationStrategy(new SyncopeRolesAuthorizer()));\n@@ -89,48 +76,37 @@ public void setupAuthorizations() {\n         MetaDataRoleAuthorizationStrategy.authorize(Configuration.class,\n                 \"CONFIGURATION_LIST\");\n     }\n+\n     /**\n      * Create a new custom SyncopeSession\n      * @param request\n      * @param response\n      * @return Session\n      */\n     @Override\n-    public Session newSession( Request request, Response response )\n-    {\n-        SyncopeSession session = new SyncopeSession( request );\n-        \n-        if ( user != null )\n-        {\n-            session.setUser( user );\n+    public Session newSession(Request request, Response response) {\n+        SyncopeSession session = new SyncopeSession(request);\n+\n+        if (user != null) {\n+            session.setUser(user);\n         }\n-        \n+\n         return session;\n     }\n \n     /**\n      * @see org.apache.wicket.Application#getHomePage()\n      */\n     @Override\n-    public Class getHomePage()\n-    {\n-        return (((SyncopeSession)Session.get()).getUser() == null) ?\n-            Login.class :  WelcomePage.class;\n+    public Class getHomePage() {\n+        return (((SyncopeSession) Session.get()).getUser() == null)\n+                ? Login.class : WelcomePage.class;\n     }\n \n-    @Override\n-    public void setApplicationContext(ApplicationContext applicationContext)\n-            throws BeansException {\n-          this.applicationContext = applicationContext;\n-    }\n-\n-    public ApplicationContext getApplicationContext() {\n-        return applicationContext;\n-    }\n-    \n     @Override\n     public final RequestCycle newRequestCycle(final Request request,\n             final Response response) {\n+\n         return new SyncopeRequestCycle(this, (WebRequest) request,\n                 (WebResponse) response);\n     }"},{"sha":"88a9ec8a60fb84643358a9110242e0cfc7ae3b46","filename":"console/src/main/java/org/syncope/console/SyncopeUser.java","status":"modified","additions":14,"deletions":19,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeUser.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeUser.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2FSyncopeUser.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -14,40 +14,37 @@\n  */\n package org.syncope.console;\n \n+import java.io.Serializable;\n import org.apache.wicket.authorization.strategies.role.Roles;\n \n /**\n  * SyncopeUser to store in SyncopeSession after the authentication.\n  */\n-public class SyncopeUser implements java.io.Serializable\n-{\n+public class SyncopeUser implements Serializable {\n \n     private String username;\n-    \n+\n     private final Roles roles;\n \n     /**\n-     * Create a new Syncope session user\n+     * Create a new Syncope session user.\n+     *\n      * @param username\n-     * @param roles a comma seperated list of roles \n+     * @param roles a comma seperated list of roles\n      * (corresponding to Syncope's entitlements)\n      */\n-    public SyncopeUser(String username, String roles) {\n-\n-        if (username == null)\n-        {\n+    public SyncopeUser(final String username, final String roles) {\n+        if (username == null) {\n             throw new IllegalArgumentException(\"username must be not null\");\n         }\n-        if (roles == null)\n-        {\n+        if (roles == null) {\n             throw new IllegalArgumentException(\"roles must be not null\");\n         }\n         this.username = username;\n         this.roles = new Roles(roles);\n     }\n \n-    public String getUsername()\n-    {\n+    public String getUsername() {\n         return username;\n     }\n \n@@ -58,23 +55,21 @@ public String getUsername()\n      *            set of roles\n      * @return whether this user has any of the given roles\n      */\n-    public boolean hasAnyRole(Roles roles)\n-    {\n+    public boolean hasAnyRole(final Roles roles) {\n         return this.roles.hasAnyRole(roles);\n     }\n \n-   /**\n+    /**\n      * Whether this user has the given role.\n      *\n      * @param role\n      * @return whether this user has the given role\n      */\n-    public boolean hasRole(String role)\n-    {\n+    public boolean hasRole(final String role) {\n         return this.roles.hasRole(role);\n     }\n \n     public Roles getRoles() {\n         return roles;\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"a9ba2713af2c466c1da158d19dfd243649e1b8ea","filename":"console/src/main/java/org/syncope/console/commons/Utility.java","status":"modified","additions":28,"deletions":41,"changes":69,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FUtility.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FUtility.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FUtility.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -2,101 +2,88 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  *  See the License for the specific language governing permissions and\n  *  limitations under the License.\n  *  under the License.\n  */\n-\n package org.syncope.console.commons;\n \n import java.util.ArrayList;\n import java.util.List;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.syncope.client.to.ConfigurationTO;\n-import org.syncope.console.rest.ConfigurationsRestClient;\n+import org.syncope.console.rest.ConfigurationRestClient;\n \n /**\n  * Class with utilities shared among classes.\n  */\n public class Utility {\n-    private ConfigurationsRestClient configurationsRestClient;\n \n-    private ConfigurationTO configuration;\n+    @Autowired\n+    private ConfigurationRestClient confRestClient;\n+\n     /**\n      * Get the rows number to display for single page, stored as configuration.\n      * @param confProperty\n      */\n-    public int getPaginatorRowsToDisplay(\n-            String confProperty){\n-       //Set rows to display to default value\n-       int rows = 5;\n+    public int getPaginatorRowsToDisplay(final String confProperty) {\n+        //Set rows to display to default value\n+        int rows = 5;\n \n-       configuration = configurationsRestClient.readConfiguration(\n-                confProperty);\n+        ConfigurationTO configuration =\n+                confRestClient.readConfiguration(confProperty);\n \n-       if (configuration == null || configuration.getConfValue() == null) {\n+        if (configuration == null || configuration.getConfValue() == null) {\n             configuration = new ConfigurationTO();\n \n             configuration.setConfKey(confProperty);\n             configuration.setConfValue(\"5\");\n \n-            configurationsRestClient.createConfiguration(configuration);\n-\n+            confRestClient.createConfiguration(configuration);\n+        } else {\n+            try {\n+                rows = new Integer(configuration.getConfValue());\n+            } catch (NumberFormatException ex) {\n+                configuration.setConfValue(\"5\");\n+                confRestClient.updateConfiguration(configuration);\n+                rows = 5;\n+            }\n         }\n-       else {\n-           try{\n-           rows = new Integer(configuration.getConfValue());\n-           }\n-           catch(NumberFormatException ex) {\n-               configuration.setConfValue(\"5\");\n-               configurationsRestClient.updateConfiguration(configuration);\n-               rows = 5;\n-           }\n-       }\n \n-       return rows;\n+        return rows;\n     }\n \n     /**\n      * Paginator rows values populator.\n      * @return List<Integer>\n      */\n     public List<Integer> paginatorRowsChooser() {\n-    List<Integer> list = new ArrayList<Integer>();\n+        List<Integer> list = new ArrayList<Integer>();\n \n         list.add(5);\n         list.add(10);\n         list.add(15);\n-        \n-    return list;\n+\n+        return list;\n     }\n \n     /**\n      * Update display rows for the section specified as configuration key.\n      * @param confKey\n      * @param rows number to store\n      */\n-    public void updatePaginatorRows(String confKey,int rows) {\n+    public void updatePaginatorRows(String confKey, int rows) {\n         ConfigurationTO config = new ConfigurationTO();\n \n         config.setConfKey(confKey);\n         config.setConfValue(String.valueOf(rows));\n-        \n-        configurationsRestClient.updateConfiguration(config);\n-\n-    }\n-\n-    public ConfigurationsRestClient getConfigurationsRestClient() {\n-        return configurationsRestClient;\n-    }\n \n-    public void setConfigurationsRestClient(ConfigurationsRestClient\n-            configurationsRestClient) {\n-        this.configurationsRestClient = configurationsRestClient;\n+        confRestClient.updateConfiguration(config);\n     }\n }"},{"sha":"972a98492c90eadd128afa6cba52cb82a46f2409","filename":"console/src/main/java/org/syncope/console/commons/XMLRolesReader.java","status":"modified","additions":53,"deletions":78,"changes":131,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FXMLRolesReader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FXMLRolesReader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fcommons%2FXMLRolesReader.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -2,54 +2,59 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  *  See the License for the specific language governing permissions and\n  *  limitations under the License.\n  *  under the License.\n  */\n-\n package org.syncope.console.commons;\n \n-import java.io.IOException;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n import javax.xml.parsers.DocumentBuilder;\n import javax.xml.parsers.DocumentBuilderFactory;\n-import javax.xml.parsers.ParserConfigurationException;\n import javax.xml.xpath.XPath;\n import javax.xml.xpath.XPathConstants;\n import javax.xml.xpath.XPathExpression;\n import javax.xml.xpath.XPathExpressionException;\n import javax.xml.xpath.XPathFactory;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.w3c.dom.Document;\n import org.w3c.dom.NodeList;\n-import org.xml.sax.SAXException;\n \n /**\n  * XMLRolesReader singleton class.\n  */\n public class XMLRolesReader {\n-    private String authFilename;\n-\n-    public XMLRolesReader() {\n-    }\n \n     /**\n-     * Class constructor.\n-     * @param authFilename - name of the authorizations file placed in\n-     * \"/WEB-INF/classes\"\n-     * @throws SAXException\n-     * @throws IOException\n+     * Logger.\n      */\n-    public XMLRolesReader(String authFilename) throws SAXException, IOException {\n+    private static final Logger LOG = LoggerFactory.getLogger(\n+            XMLRolesReader.class);\n \n-        this.authFilename = authFilename;\n+    @Autowired\n+    private String authorizations;\n \n+    private Document doc;\n+\n+    public void init() {\n+        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n+        dbf.setNamespaceAware(true);\n+        try {\n+            DocumentBuilder db = dbf.newDocumentBuilder();\n+            doc = db.parse(getClass().getResource(\"/\" + authorizations).\n+                    openStream());\n+            doc.getDocumentElement().normalize();\n+        } catch (Exception e) {\n+            LOG.error(\"While initializing parsing of {}\", authorizations, e);\n+            doc = null;\n+        }\n     }\n \n     /**\n@@ -59,70 +64,40 @@ public XMLRolesReader(String authFilename) throws SAXException, IOException {\n      * @param actionId\n      * @return roles list comma separated\n      */\n-    public String getAllAllowedRoles(String pageId,String actionId) {\n-    String roles = \"\";\n+    public String getAllAllowedRoles(final String pageId,\n+            final String actionId) {\n \n-    Document doc = null;\n-    \n-        try {\n-            doc = getDocumentBuilder();\n-        } catch (SAXException ex) {\n-            Logger.getLogger(XMLRolesReader.class.getName()).log(Level.SEVERE,\n-                    null, ex);\n-            return null;\n-        } catch (IOException ex) {\n-            Logger.getLogger(XMLRolesReader.class.getName()).log(Level.SEVERE,\n-                    null, ex);\n-            return null;\n-        } catch (ParserConfigurationException ex) {\n-            Logger.getLogger(XMLRolesReader.class.getName()).log(Level.SEVERE,\n-                    null, ex);\n-            return null;\n+        if (doc == null) {\n+            init();\n         }\n-\n-    doc.getDocumentElement().normalize();\n-\n-    try {\n-\n-    XPathFactory factory = XPathFactory.newInstance();\n-    XPath xpath = factory.newXPath();\n-    XPathExpression expr\n-     = xpath.compile(\"//page[@id='\"+pageId+\"']/action[@id='\"+actionId+\"']/\" +\n-                     \"entitlement/text()\");\n-    Object result = expr.evaluate(doc, XPathConstants.NODESET);\n-\n-    NodeList nodes = (NodeList) result;\n-\n-    for (int i = 0; i < nodes.getLength(); i++) {\n-        if(i > 0) {\n-        roles += \",\";\n-        roles += nodes.item(i).getNodeValue();     \n+        if (doc == null) {\n+            return \"\";\n         }\n-        else\n-            roles += nodes.item(i).getNodeValue();\n-    }\n-\n-    }\n-    catch(XPathExpressionException ex) {\n-         Logger.getLogger(XMLRolesReader.class.getName()).log(Level.SEVERE,\n-                    null, ex);\n-    }\n-    \n-    //System.out.println(\"Roles : \" + roles);\n \n-    return roles;\n-    }\n-\n-    public Document getDocumentBuilder() throws SAXException, IOException,\n-            ParserConfigurationException {\n+        final StringBuilder roles = new StringBuilder();\n+        try {\n+            XPathFactory factory = XPathFactory.newInstance();\n+            XPath xpath = factory.newXPath();\n+            XPathExpression expr = xpath.compile(\n+                    \"//page[@id='\" + pageId + \"']/\"\n+                    + \"action[@id='\" + actionId + \"']/\"\n+                    + \"entitlement/text()\");\n+            Object result = expr.evaluate(doc, XPathConstants.NODESET);\n+\n+            NodeList nodes = (NodeList) result;\n+\n+            for (int i = 0; i < nodes.getLength(); i++) {\n+                if (i > 0) {\n+                    roles.append(\",\");\n+                }\n+                roles.append(nodes.item(i).getNodeValue());\n+            }\n+        } catch (XPathExpressionException e) {\n+            LOG.error(\"While parsing authorizations file\", e);\n+        }\n \n-    DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n-    dbf.setNamespaceAware(true);\n-    DocumentBuilder db = dbf.newDocumentBuilder();\n-    Document doc = db.parse(getClass().getResource(\"/\"+authFilename)\n-            .openStream());\n+        LOG.debug(\"Authorizations found: {}\", roles);\n \n-    return doc;\n+        return roles.toString();\n     }\n-\n }"},{"sha":"583aedfb926b534f56adc696ad73f03a8a3a66b7","filename":"console/src/main/java/org/syncope/console/pages/Authentication.java","status":"removed","additions":0,"deletions":85,"changes":85,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAuthentication.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAuthentication.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FAuthentication.java?ref=ce711379cde24edf004fd82a87556d569786a654","patch":"@@ -1,85 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- * \n- *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.console.pages;\n-\n-import java.io.*;\n-import javax.xml.parsers.SAXParser;\n-import javax.xml.parsers.SAXParserFactory;\n-import org.xml.sax.Attributes;\n-import org.xml.sax.SAXException;\n-import org.xml.sax.helpers.DefaultHandler;\n-\n-public class Authentication {\n-\n-    static public String nodo;\n-    static public Writer out;\n-    public Boolean authenticated = false;\n-    public String xmlUsername;\n-    public String xmlPassword;\n-\n-    public boolean authentication(String username, String password, InputStream inputStream) {\n-        try {\n-            SAXParserFactory factory = SAXParserFactory.newInstance();\n-            SAXParser saxParser = factory.newSAXParser();\n-            DefaultHandler handler = new DefaultHandler() {\n-\n-                boolean bfname = false;\n-                boolean blname = false;\n-                boolean bnname = false;\n-                boolean bsalary = false;\n-\n-                @Override\n-                public void startElement(String uri, String localName,\n-                        String qName, Attributes attributes)\n-                        throws SAXException {\n-                    if (qName.equalsIgnoreCase(\"username\")) {\n-                        bfname = true;\n-                    }\n-                    if (qName.equalsIgnoreCase(\"password\")) {\n-                        blname = true;\n-                    }\n-                }\n-\n-                @Override\n-                public void endElement(String uri, String localName,\n-                        String qName)\n-                        throws SAXException {\n-                }\n-\n-                @Override\n-                public void characters(char ch[], int start, int length)\n-                        throws SAXException {\n-                    if (bfname) {\n-                        xmlUsername = new String(ch, start, length);\n-                        bfname = false;\n-                    }\n-                    if (blname) {\n-                        xmlPassword = new String(ch, start, length);\n-                        blname = false;\n-                    }\n-                }\n-            };\n-\n-            \n-            saxParser.parse(inputStream, handler);\n-            if (username.equals(xmlUsername) && password.equals(xmlPassword)) {\n-                authenticated = true;\n-            }\n-        } catch (Exception e) {\n-            e.printStackTrace();\n-        }\n-        return authenticated;\n-    }\n-}"},{"sha":"96bc3690f352bc5138010f6a297ef88f8a1b6365","filename":"console/src/main/java/org/syncope/console/pages/BasePage.java","status":"modified","additions":36,"deletions":27,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -15,30 +15,39 @@\n package org.syncope.console.pages;\n \n import org.apache.wicket.PageParameters;\n-import org.apache.wicket.authorization.strategies.role.metadata\n-        .MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.markup.html.link.BookmarkablePageLink;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.syncope.console.SyncopeSession;\n import org.syncope.console.SyncopeUser;\n import org.syncope.console.commons.XMLRolesReader;\n \n /**\n  * Syncope Wicket base-page.\n  */\n-public class BasePage extends CustomizableBasePage {\n+public class BasePage extends WebPage {\n \n-    private static final long serialVersionUID = 1L;\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG = LoggerFactory.getLogger(\n+            BasePage.class);\n \n-    @SpringBean(name = \"xmlRolesReader\")\n+    @SpringBean\n     protected XMLRolesReader xmlRolesReader;\n \n+    public BasePage() {\n+    }\n+\n     /**\n      * Constructor that is invoked when page is invoked without a\n      * sessadd(new BookmarkablePageLink(\"roles\", Roles.class));ion.\n      *\n      * @param PageParameters parameters\n-     *            \n+     *\n      */\n     public BasePage(final PageParameters parameters) {\n         super(parameters);\n@@ -47,88 +56,88 @@ public BasePage(final PageParameters parameters) {\n                 Schema.class);\n \n         String allowedSchemaRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\",\n-                        \"list\");\n+                \"list\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(schemaLink, ENABLE,\n-                        allowedSchemaRoles);\n-        \n+                allowedSchemaRoles);\n+\n         add(schemaLink);\n \n         BookmarkablePageLink usersLink = new BookmarkablePageLink(\"users\",\n                 Users.class);\n \n         String allowedUsersRoles = xmlRolesReader.getAllAllowedRoles(\"Users\",\n-                        \"list\");\n+                \"list\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(usersLink, ENABLE,\n-                        allowedUsersRoles);\n+                allowedUsersRoles);\n \n         add(usersLink);\n \n-        BookmarkablePageLink rolesLink= new BookmarkablePageLink(\"roles\",\n+        BookmarkablePageLink rolesLink = new BookmarkablePageLink(\"roles\",\n                 Roles.class);\n \n         String allowedRoleRoles = xmlRolesReader.getAllAllowedRoles(\"Roles\",\n-                        \"list\");\n+                \"list\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(rolesLink, ENABLE,\n-                        allowedRoleRoles);\n-        \n+                allowedRoleRoles);\n+\n         add(rolesLink);\n \n         BookmarkablePageLink resourcesLink = new BookmarkablePageLink(\n                 \"resources\", Resources.class);\n \n         String allowedResourcesRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Resources\",\"list\");\n+                \"Resources\", \"list\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(resourcesLink, ENABLE,\n-                        allowedResourcesRoles);\n+                allowedResourcesRoles);\n \n         add(resourcesLink);\n \n         BookmarkablePageLink connectorsLink =\n                 new BookmarkablePageLink(\"connectors\", Connectors.class);\n \n         String allowedConnectorsRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Connectors\",\"list\");\n+                \"Connectors\", \"list\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(connectorsLink, ENABLE,\n-                        allowedConnectorsRoles);\n+                allowedConnectorsRoles);\n \n         add(connectorsLink);\n \n         BookmarkablePageLink reportLink = new BookmarkablePageLink(\n                 \"report\", Report.class);\n \n         String allowedReportRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Report\",\"list\");\n+                \"Report\", \"list\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(reportLink, ENABLE,\n-                        allowedReportRoles);\n+                allowedReportRoles);\n \n         add(reportLink);\n \n         BookmarkablePageLink configurationLink = new BookmarkablePageLink(\n                 \"configuration\", Configuration.class);\n \n         String allowedConfigurationRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Configuration\",\"list\");\n+                \"Configuration\", \"list\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(configurationLink, ENABLE,\n-                        allowedConfigurationRoles);\n+                allowedConfigurationRoles);\n \n         add(configurationLink);\n \n         BookmarkablePageLink taskLink = new BookmarkablePageLink(\"task\",\n                 Tasks.class);\n-        \n+\n         String allowedTasksRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Tasks\",\"list\");\n+                \"Tasks\", \"list\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(taskLink, ENABLE,\n-                        allowedTasksRoles);   \n-        \n+                allowedTasksRoles);\n+\n         add(taskLink);\n \n         add(new BookmarkablePageLink(\"logout\", Logout.class));"},{"sha":"e87c54df032cadf86e5e1943c7e9893787369c2e","filename":"console/src/main/java/org/syncope/console/pages/Configuration.java","status":"modified","additions":110,"deletions":112,"changes":222,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -21,8 +21,6 @@\n import java.util.Comparator;\n import java.util.Iterator;\n import java.util.List;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n import org.apache.wicket.Page;\n import org.apache.wicket.PageParameters;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -32,8 +30,7 @@\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table\n-        .AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n@@ -53,83 +50,84 @@\n import org.syncope.client.to.ConfigurationTO;\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.Utility;\n-import org.syncope.console.rest.ConfigurationsRestClient;\n+import org.syncope.console.rest.ConfigurationRestClient;\n import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n import org.syncope.console.wicket.markup.html.form.EditLinkPanel;\n \n /**\n  * Configurations WebPage.\n  */\n-public class Configuration extends BasePage{\n+public class Configuration extends BasePage {\n \n-    @SpringBean(name = \"configurationsRestClient\")\n-    ConfigurationsRestClient restClient;\n+    @SpringBean\n+    private ConfigurationRestClient restClient;\n \n-    @SpringBean(name = \"utility\")\n-    Utility utility;\n+    @SpringBean\n+    private Utility utility;\n \n-    final ModalWindow createConfigWin;\n-    final ModalWindow editConfigWin;\n+    private final ModalWindow createConfigWin;\n \n-    final int WIN_USER_HEIGHT = 680;\n-    final int WIN_USER_WIDTH = 1133;\n+    private final ModalWindow editConfigWin;\n \n-    WebMarkupContainer container;\n+    private static final int WIN_USER_HEIGHT = 680;\n+\n+    private static final int WIN_USER_WIDTH = 1133;\n+\n+    private WebMarkupContainer container;\n \n     /* \n-     Response flag set by the Modal Window after the operation\n-     is completed  */\n-    boolean operationResult = false;\n+    Response flag set by the Modal Window after the operation\n+    is completed  */\n+    private boolean operationResult = false;\n \n-    FeedbackPanel feedbackPanel;\n+    private FeedbackPanel feedbackPanel;\n \n     private int paginatorRows;\n-    \n+\n     public Configuration(PageParameters parameters) {\n         super(parameters);\n \n         feedbackPanel = new FeedbackPanel(\"feedback\");\n-        feedbackPanel.setOutputMarkupId( true );\n+        feedbackPanel.setOutputMarkupId(true);\n \n         add(feedbackPanel);\n \n         add(createConfigWin = new ModalWindow(\"createConfigurationWin\"));\n         add(editConfigWin = new ModalWindow(\"editConfigurationWin\"));\n \n-        paginatorRows = utility.getPaginatorRowsToDisplay(Constants\n-                    .CONF_CONFIGURATION_PAGINATOR_ROWS);\n+        paginatorRows = utility.getPaginatorRowsToDisplay(\n+                Constants.CONF_CONFIGURATION_PAGINATOR_ROWS);\n \n         List<IColumn> columns = new ArrayList<IColumn>();\n \n         columns.add(new PropertyColumn(new Model(getString(\"key\")),\n                 \"confKey\", \"confKey\"));\n \n-        columns.add(new PropertyColumn(new Model(getString(\"value\")), \n+        columns.add(new PropertyColumn(new Model(getString(\"value\")),\n                 \"confValue\", \"confValue\"));\n \n         columns.add(new AbstractColumn<ConfigurationTO>(new Model<String>(\n-                getString(\"edit\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<ConfigurationTO>>\n-                    cellItem, String componentId, IModel<ConfigurationTO> model)\n-            {\n-                    final ConfigurationTO configurationTO = model.getObject();\n-                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n+                getString(\"edit\"))) {\n+\n+            public void populateItem(Item<ICellPopulator<ConfigurationTO>> cellItem, String componentId, IModel<ConfigurationTO> model) {\n+                final ConfigurationTO configurationTO = model.getObject();\n+                AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n                         editConfigWin.setPageCreator(\n                                 new ModalWindow.PageCreator() {\n \n-                            public Page createPage() {\n-                                ConfigurationModalPage window =\n-                                        new ConfigurationModalPage\n-                                        (Configuration.this, editConfigWin,\n-                                        configurationTO, false);\n-                                return window;\n-                            }\n-                        });\n+                                    public Page createPage() {\n+                                        ConfigurationModalPage window =\n+                                                new ConfigurationModalPage(\n+                                                Configuration.this,\n+                                                editConfigWin,\n+                                                configurationTO, false);\n+                                        return window;\n+                                    }\n+                                });\n \n                         editConfigWin.show(target);\n                     }\n@@ -139,7 +137,7 @@ public Page createPage() {\n                 panel.add(editLink);\n \n                 String allowedRoles = xmlRolesReader.getAllAllowedRoles(\n-                        \"Configuration\",\"read\");\n+                        \"Configuration\", \"read\");\n \n                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n                         allowedRoles);\n@@ -148,44 +146,44 @@ public Page createPage() {\n             }\n         });\n \n-        columns.add(new AbstractColumn<ConfigurationTO>(new Model<String>\n-                (getString(\"delete\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<ConfigurationTO>> \n-                    cellItem, String componentId, IModel<ConfigurationTO> model)\n-            {\n-                    final ConfigurationTO configurationTO = model.getObject();\n+        columns.add(new AbstractColumn<ConfigurationTO>(new Model<String>(getString(\n+                \"delete\"))) {\n+\n+            public void populateItem(Item<ICellPopulator<ConfigurationTO>> cellItem, String componentId, IModel<ConfigurationTO> model) {\n+                final ConfigurationTO configurationTO = model.getObject();\n \n-                    AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n+                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n                         try {\n-                            restClient.deleteConfiguration(configurationTO\n-                                    .getConfKey());\n-                        } catch (UnsupportedEncodingException ex) {\n-                            Logger.getLogger(Configuration.class.getName())\n-                                    .log(Level.SEVERE, null, ex);\n-                            error(ex.getMessage());\n+                            restClient.deleteConfiguration(configurationTO.\n+                                    getConfKey());\n+                        } catch (UnsupportedEncodingException e) {\n+                            LOG.error(\"While deleting a conf key\", e);\n+                            error(e.getMessage());\n                             return;\n                         }\n \n                         info(getString(\"operation_succeded\"));\n                         target.addComponent(feedbackPanel);\n-                        \n+\n                         target.addComponent(container);\n                     }\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.\n+                                getAjaxCallDecorator()) {\n+\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n                             public CharSequence preDecorateScript(CharSequence script) {\n-                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n-                                        +\"{\"+script+\"}\";\n+                                return \"if (confirm('\" + getString(\n+                                        \"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"}\";\n                             }\n                         };\n                     }\n@@ -195,7 +193,7 @@ public CharSequence preDecorateScript(CharSequence script) {\n                 panel.add(deleteLink);\n \n                 String allowedRoles = xmlRolesReader.getAllAllowedRoles(\n-                        \"Configuration\",\"delete\");\n+                        \"Configuration\", \"delete\");\n \n                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n                         allowedRoles);\n@@ -251,7 +249,7 @@ public Page createPage() {\n         };\n \n         String allowedRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Configuration\",\"create\");\n+                \"Configuration\", \"create\");\n         MetaDataRoleAuthorizationStrategy.authorize(createConfigurationLink,\n                 ENABLE, allowedRoles);\n \n@@ -260,28 +258,28 @@ public Page createPage() {\n         Form paginatorForm = new Form(\"PaginatorForm\");\n \n         final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n-        new PropertyModel(this,\"paginatorRows\"),utility.paginatorRowsChooser());\n-\n-        rowsChooser.add(new AjaxFormComponentUpdatingBehavior( \"onchange\" ){\n-          protected void onUpdate( AjaxRequestTarget target )\n-            {\n-              utility.updatePaginatorRows(\n-                      Constants.CONF_CONFIGURATION_PAGINATOR_ROWS,\n-                      paginatorRows);\n-              table.setRowsPerPage(paginatorRows);\n-              \n-              target.addComponent(container);\n-            }\n+                new PropertyModel(this, \"paginatorRows\"), utility.\n+                paginatorRowsChooser());\n+\n+        rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-          });\n+            protected void onUpdate(AjaxRequestTarget target) {\n+                utility.updatePaginatorRows(\n+                        Constants.CONF_CONFIGURATION_PAGINATOR_ROWS,\n+                        paginatorRows);\n+                table.setRowsPerPage(paginatorRows);\n+\n+                target.addComponent(container);\n+            }\n+        });\n \n         paginatorForm.add(rowsChooser);\n         add(paginatorForm);\n \n         add(paginatorForm);\n     }\n \n-   /**\n+    /**\n      * Set a WindowClosedCallback for a ModalWindow instance.\n      * @param window\n      * @param container\n@@ -294,11 +292,11 @@ public void setWindowClosedCallback(ModalWindow window,\n \n                     public void onClose(AjaxRequestTarget target) {\n                         target.addComponent(container);\n-                        if(operationResult){\n-                        info(getString(\"operation_succeded\"));\n-                        target.addComponent(feedbackPanel);\n-                        operationResult = false;\n-                    }\n+                        if (operationResult) {\n+                            info(getString(\"operation_succeded\"));\n+                            target.addComponent(feedbackPanel);\n+                            operationResult = false;\n+                        }\n                     }\n                 });\n     }\n@@ -318,7 +316,7 @@ class ConfigurationsProvider extends SortableDataProvider<ConfigurationTO> {\n \n         public ConfigurationsProvider() {\n             //Default sorting\n-            setSort(\"confKey\",true);\n+            setSort(\"confKey\", true);\n         }\n \n         @Override\n@@ -327,7 +325,7 @@ public Iterator<ConfigurationTO> iterator(int first, int count) {\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first+count).iterator();\n+            return list.subList(first, first + count).iterator();\n         }\n \n         @Override\n@@ -336,8 +334,7 @@ public int size() {\n         }\n \n         @Override\n-        public IModel<ConfigurationTO> model(final ConfigurationTO \n-                configuration) {\n+        public IModel<ConfigurationTO> model(final ConfigurationTO configuration) {\n             return new AbstractReadOnlyModel<ConfigurationTO>() {\n \n                 @Override\n@@ -347,45 +344,46 @@ public ConfigurationTO getObject() {\n             };\n         }\n \n-        public List<ConfigurationTO> getConfigurationsListDB(){\n-        List<ConfigurationTO> list = null;\n+        public List<ConfigurationTO> getConfigurationsListDB() {\n+            List<ConfigurationTO> list = null;\n \n             try {\n                 list = restClient.getAllConfigurations();\n-        }\n-        catch(RestClientException rce) {\n-            throw rce;\n-        }\n+            } catch (RestClientException rce) {\n+                throw rce;\n+            }\n             return list;\n         }\n \n         class SortableDataProviderComparator implements\n                 Comparator<ConfigurationTO>, Serializable {\n+\n             public int compare(final ConfigurationTO o1,\n                     final ConfigurationTO o2) {\n-                    PropertyModel<Comparable> model1 =\n-                            new PropertyModel<Comparable>(o1, getSort()\n-                            .getProperty());\n-                    PropertyModel<Comparable> model2 =\n-                            new PropertyModel<Comparable>(o2, getSort()\n-                            .getProperty());\n-\n-                    int result = 1;\n-\n-                    if(model1.getObject() == null && model2.getObject() == null)\n-                        result = 0;\n-                    else if(model1.getObject() == null)\n-                        result = 1;\n-                    else if(model2.getObject() == null)\n-                        result = -1;\n-                    else\n-                        result = ((Comparable)model1.getObject()).compareTo(\n-                                model2.getObject());\n-\n-                    result = getSort().isAscending() ? result : -result;\n-\n-                    return result;\n+                PropertyModel<Comparable> model1 =\n+                        new PropertyModel<Comparable>(o1,\n+                        getSort().getProperty());\n+                PropertyModel<Comparable> model2 =\n+                        new PropertyModel<Comparable>(o2,\n+                        getSort().getProperty());\n+\n+                int result = 1;\n+\n+                if (model1.getObject() == null && model2.getObject() == null) {\n+                    result = 0;\n+                } else if (model1.getObject() == null) {\n+                    result = 1;\n+                } else if (model2.getObject() == null) {\n+                    result = -1;\n+                } else {\n+                    result = ((Comparable) model1.getObject()).compareTo(\n+                            model2.getObject());\n+                }\n+\n+                result = getSort().isAscending() ? result : -result;\n+\n+                return result;\n             }\n-\t}\n+        }\n     }\n }"},{"sha":"b816b36cdb66f7ca7aeb1cea27c8126451dc877e","filename":"console/src/main/java/org/syncope/console/pages/ConfigurationModalPage.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConfigurationModalPage.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -29,15 +29,15 @@\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.syncope.client.to.ConfigurationTO;\n-import org.syncope.console.rest.ConfigurationsRestClient;\n+import org.syncope.console.rest.ConfigurationRestClient;\n \n /**\n  * Modal window with Connector form.\n  */\n public class ConfigurationModalPage extends SyncopeModalPage {\n \n     @SpringBean(name = \"configurationsRestClient\")\n-    ConfigurationsRestClient configurationsRestClient;\n+    ConfigurationRestClient configurationsRestClient;\n     \n     public TextField key;\n     public TextField value;"},{"sha":"e133d93ff4e18076da21a1e2bb7ebd7f72e083f6","filename":"console/src/main/java/org/syncope/console/pages/Connectors.java","status":"modified","additions":104,"deletions":104,"changes":208,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectors.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -49,8 +49,8 @@\n import org.syncope.client.to.ResourceTO;\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.Utility;\n-import org.syncope.console.rest.ConnectorsRestClient;\n-import org.syncope.console.rest.ResourcesRestClient;\n+import org.syncope.console.rest.ConnectorRestClient;\n+import org.syncope.console.rest.ResourceRestClient;\n import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n import org.syncope.console.wicket.markup.html.form.EditLinkPanel;\n \n@@ -59,40 +59,43 @@\n  */\n public class Connectors extends BasePage {\n \n-    @SpringBean(name = \"connectorsRestClient\")\n-    ConnectorsRestClient restClient;\n+    @SpringBean\n+    private ConnectorRestClient restClient;\n \n-    @SpringBean(name = \"resourcesRestClient\")\n-    ResourcesRestClient resourcesRestClient;\n+    @SpringBean\n+    private ResourceRestClient resourceRestClient;\n \n-    @SpringBean(name = \"utility\")\n-    Utility utility;\n+    @SpringBean\n+    private Utility utility;\n \n-    final ModalWindow createConnectorWin;\n-    final ModalWindow editConnectorWin;\n-    \n-    WebMarkupContainer container;\n+    private final ModalWindow createConnectorWin;\n+\n+    private final ModalWindow editConnectorWin;\n+\n+    private WebMarkupContainer container;\n     /*\n-     Response flag set by the Modal Window after the operation is completed\n+    Response flag set by the Modal Window after the operation is completed\n      */\n-    boolean operationResult = false;\n-    FeedbackPanel feedbackPanel;\n+\n+    private boolean operationResult = false;\n+\n+    private FeedbackPanel feedbackPanel;\n \n     private int paginatorRows;\n-    \n+\n     public Connectors(PageParameters parameters) {\n         super(parameters);\n \n         add(createConnectorWin = new ModalWindow(\"createConnectorWin\"));\n         add(editConnectorWin = new ModalWindow(\"editConnectorWin\"));\n \n         feedbackPanel = new FeedbackPanel(\"feedback\");\n-        feedbackPanel.setOutputMarkupId( true );\n+        feedbackPanel.setOutputMarkupId(true);\n \n         add(feedbackPanel);\n \n-        paginatorRows = utility.getPaginatorRowsToDisplay(Constants\n-                    .CONF_CONNECTORS_PAGINATOR_ROWS);\n+        paginatorRows = utility.getPaginatorRowsToDisplay(\n+                Constants.CONF_CONNECTORS_PAGINATOR_ROWS);\n \n         List<IColumn> columns = new ArrayList<IColumn>();\n \n@@ -112,24 +115,20 @@ public Connectors(PageParameters parameters) {\n                 \"bundleName\", \"bundleName\"));\n \n         columns.add(new AbstractColumn<ConnectorInstanceTO>(new Model<String>(\n-                getString(\"edit\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<ConnectorInstanceTO>>\n-                    cellItem, String componentId, IModel<ConnectorInstanceTO>\n-                    model)\n-            {\n-                    final ConnectorInstanceTO connectorTO = model.getObject();\n+                getString(\"edit\"))) {\n+\n+            public void populateItem(Item<ICellPopulator<ConnectorInstanceTO>> cellItem, String componentId, IModel<ConnectorInstanceTO> model) {\n+                final ConnectorInstanceTO connectorTO = model.getObject();\n \n-                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n+                AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n-                        editConnectorWin.setPageCreator(new ModalWindow\n-                                .PageCreator() {\n+                        editConnectorWin.setPageCreator(new ModalWindow.PageCreator() {\n \n                             public Page createPage() {\n-                                ConnectorsModalPage form = \n+                                ConnectorsModalPage form =\n                                         new ConnectorsModalPage(Connectors.this,\n                                         editConnectorWin, connectorTO, false);\n                                 return form;\n@@ -144,35 +143,31 @@ public Page createPage() {\n                 panel.add(editLink);\n \n                 String allowedRoles = xmlRolesReader.getAllAllowedRoles(\n-                        \"Connectors\",\"read\");\n+                        \"Connectors\", \"read\");\n                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n                         allowedRoles);\n \n                 cellItem.add(panel);\n             }\n         });\n \n-        columns.add(new AbstractColumn<ConnectorInstanceTO>(new Model<String>\n-                (getString(\"delete\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<ConnectorInstanceTO>>\n-                    cellItem, String componentId, IModel<ConnectorInstanceTO>\n-                    model)\n-            {\n-                    final ConnectorInstanceTO connectorTO = model.getObject();\n+        columns.add(new AbstractColumn<ConnectorInstanceTO>(new Model<String>(getString(\n+                \"delete\"))) {\n+\n+            public void populateItem(Item<ICellPopulator<ConnectorInstanceTO>> cellItem, String componentId, IModel<ConnectorInstanceTO> model) {\n+                final ConnectorInstanceTO connectorTO = model.getObject();\n \n-                    AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n+                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n-                        if(!checkDeleteIsForbidden(connectorTO)){\n-                        restClient.deleteConnector(connectorTO.getId());\n-                        info(getString(\"operation_succeded\"));\n-                        }\n-\n-                        else\n+                        if (!checkDeleteIsForbidden(connectorTO)) {\n+                            restClient.deleteConnector(connectorTO.getId());\n+                            info(getString(\"operation_succeded\"));\n+                        } else {\n                             error(getString(\"delete_error\"));\n+                        }\n \n                         target.addComponent(container);\n                         target.addComponent(feedbackPanel);\n@@ -181,23 +176,26 @@ public void onClick(AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.\n+                                getAjaxCallDecorator()) {\n+\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n                             public CharSequence preDecorateScript(CharSequence script) {\n-                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n-                                        +\"{\"+script+\"}\";\n+                                return \"if (confirm('\" + getString(\n+                                        \"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"}\";\n                             }\n                         };\n                     }\n-                    };\n+                };\n \n                 DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n                 panel.add(deleteLink);\n \n                 String allowedRoles = xmlRolesReader.getAllAllowedRoles(\n-                        \"Connectors\",\"delete\");\n+                        \"Connectors\", \"delete\");\n                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n                         allowedRoles);\n \n@@ -227,7 +225,7 @@ public CharSequence preDecorateScript(CharSequence script) {\n         editConnectorWin.setPageMapName(\"edit-conn-modal\");\n         editConnectorWin.setCookieName(\"edit-conn-modal\");\n \n-       AjaxLink createConnectorLink = new AjaxLink(\"createConnectorLink\") {\n+        AjaxLink createConnectorLink = new AjaxLink(\"createConnectorLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n@@ -247,29 +245,29 @@ public Page createPage() {\n         };\n \n         String allowedRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Connectors\",\"create\");\n+                \"Connectors\", \"create\");\n         MetaDataRoleAuthorizationStrategy.authorize(createConnectorLink, ENABLE,\n                 allowedRoles);\n-        \n+\n         add(createConnectorLink);\n \n         Form paginatorForm = new Form(\"PaginatorForm\");\n \n         final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n-        new PropertyModel(this,\"paginatorRows\"),utility.paginatorRowsChooser());\n+                new PropertyModel(this, \"paginatorRows\"), utility.\n+                paginatorRowsChooser());\n \n-        rowsChooser.add(new AjaxFormComponentUpdatingBehavior( \"onchange\" ){\n-          protected void onUpdate( AjaxRequestTarget target )\n-            {\n-              utility.updatePaginatorRows(\n-                      Constants.CONF_CONNECTORS_PAGINATOR_ROWS, paginatorRows);\n+        rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-              table.setRowsPerPage(paginatorRows);\n+            protected void onUpdate(AjaxRequestTarget target) {\n+                utility.updatePaginatorRows(\n+                        Constants.CONF_CONNECTORS_PAGINATOR_ROWS, paginatorRows);\n \n-              target.addComponent(container);\n-            }\n+                table.setRowsPerPage(paginatorRows);\n \n-          });\n+                target.addComponent(container);\n+            }\n+        });\n \n         paginatorForm.add(rowsChooser);\n         add(paginatorForm);\n@@ -280,14 +278,15 @@ protected void onUpdate( AjaxRequestTarget target )\n      * @param ConnectorInstanceTO object to check\n      * @return true if the action is forbidden, false otherwise\n      */\n-    public boolean checkDeleteIsForbidden(ConnectorInstanceTO connectorTO){\n+    public boolean checkDeleteIsForbidden(ConnectorInstanceTO connectorTO) {\n \n         boolean forbidden = false;\n-        List<ResourceTO> resources = resourcesRestClient.getAllResources();\n+        List<ResourceTO> resources = resourceRestClient.getAllResources();\n \n-        for(ResourceTO resourceTO : resources) {\n-            if(resourceTO.getConnectorId() == connectorTO.getId())\n+        for (ResourceTO resourceTO : resources) {\n+            if (resourceTO.getConnectorId() == connectorTO.getId()) {\n                 forbidden = true;\n+            }\n         }\n \n         return forbidden;\n@@ -306,11 +305,11 @@ public void setWindowClosedCallback(ModalWindow window,\n \n                     public void onClose(AjaxRequestTarget target) {\n                         target.addComponent(container);\n-                        if(operationResult){\n-                        info(getString(\"operation_succeded\"));\n-                        target.addComponent(feedbackPanel);\n-                        operationResult = false;\n-                    }\n+                        if (operationResult) {\n+                            info(getString(\"operation_succeded\"));\n+                            target.addComponent(feedbackPanel);\n+                            operationResult = false;\n+                        }\n                     }\n                 });\n     }\n@@ -330,7 +329,7 @@ class ConnectorsProvider extends SortableDataProvider<ConnectorInstanceTO> {\n \n         public ConnectorsProvider() {\n             //Default sorting\n-            setSort(\"id\",true);\n+            setSort(\"id\", true);\n         }\n \n         @Override\n@@ -339,7 +338,7 @@ public Iterator<ConnectorInstanceTO> iterator(int first, int count) {\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first+count).iterator();\n+            return list.subList(first, first + count).iterator();\n         }\n \n         @Override\n@@ -348,8 +347,7 @@ public int size() {\n         }\n \n         @Override\n-        public IModel<ConnectorInstanceTO> model(final ConnectorInstanceTO\n-                connector) {\n+        public IModel<ConnectorInstanceTO> model(final ConnectorInstanceTO connector) {\n             return new AbstractReadOnlyModel<ConnectorInstanceTO>() {\n \n                 @Override\n@@ -359,39 +357,41 @@ public ConnectorInstanceTO getObject() {\n             };\n         }\n \n-        public List<ConnectorInstanceTO> getConnectorsListDB(){\n-        List<ConnectorInstanceTO> list = restClient.getAllConnectors();\n+        public List<ConnectorInstanceTO> getConnectorsListDB() {\n+            List<ConnectorInstanceTO> list = restClient.getAllConnectors();\n \n-        return list;\n+            return list;\n         }\n \n         class SortableDataProviderComparator implements\n                 Comparator<ConnectorInstanceTO>, Serializable {\n+\n             public int compare(final ConnectorInstanceTO o1,\n                     final ConnectorInstanceTO o2) {\n-                    PropertyModel<Comparable> model1 =\n-                            new PropertyModel<Comparable>(o1, getSort()\n-                            .getProperty());\n-                    PropertyModel<Comparable> model2 =\n-                            new PropertyModel<Comparable>(o2, getSort()\n-                            .getProperty());\n-\n-                    int result = 1;\n-\n-                    if(model1.getObject() == null && model2.getObject() == null)\n-                        result = 0;\n-                    else if(model1.getObject() == null)\n-                        result = 1;\n-                    else if(model2.getObject() == null)\n-                        result = -1;\n-                    else\n-                        result = ((Comparable)model1.getObject()).compareTo(\n-                                model2.getObject());\n-\n-                    result = getSort().isAscending() ? result : -result;\n-\n-                    return result;\n+                PropertyModel<Comparable> model1 =\n+                        new PropertyModel<Comparable>(o1,\n+                        getSort().getProperty());\n+                PropertyModel<Comparable> model2 =\n+                        new PropertyModel<Comparable>(o2,\n+                        getSort().getProperty());\n+\n+                int result = 1;\n+\n+                if (model1.getObject() == null && model2.getObject() == null) {\n+                    result = 0;\n+                } else if (model1.getObject() == null) {\n+                    result = 1;\n+                } else if (model2.getObject() == null) {\n+                    result = -1;\n+                } else {\n+                    result = ((Comparable) model1.getObject()).compareTo(\n+                            model2.getObject());\n+                }\n+\n+                result = getSort().isAscending() ? result : -result;\n+\n+                return result;\n             }\n-\t}\n+        }\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"ea60e51db198919e7763618b312734124e18bdd7","filename":"console/src/main/java/org/syncope/console/pages/ConnectorsModalPage.java","status":"modified","additions":102,"deletions":75,"changes":177,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorsModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorsModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FConnectorsModalPage.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -47,77 +47,87 @@\n import org.syncope.client.to.ConnectorBundleTO;\n import org.syncope.client.to.ConnectorInstanceTO;\n import org.syncope.client.to.PropertyTO;\n-import org.syncope.console.rest.ConnectorsRestClient;\n+import org.syncope.console.rest.ConnectorRestClient;\n import org.syncope.types.ConnectorCapability;\n \n /**\n  * Modal window with Connector form.\n  */\n public class ConnectorsModalPage extends SyncopeModalPage {\n \n-    public TextField connectorName;\n-    public TextField displayName;\n-    public DropDownChoice bundle;\n-    public TextField version;\n-    public CheckBoxMultipleChoice capabilitiesPalette;\n+    private TextField connectorName;\n \n-    List<ConnectorBundleTO> bundlesTOs;\n-    ConnectorBundleTO selectedBundleTO = new ConnectorBundleTO();\n-    List<PropertyTO> connectorProperties = new ArrayList<PropertyTO>();\n+    private TextField displayName;\n \n-    public AjaxButton submit;\n+    private DropDownChoice bundle;\n+\n+    private TextField version;\n+\n+    private CheckBoxMultipleChoice capabilitiesPalette;\n+\n+    private List<ConnectorBundleTO> bundlesTOs;\n+\n+    private ConnectorBundleTO selectedBundleTO = new ConnectorBundleTO();\n+\n+    private List<PropertyTO> connectorProperties = new ArrayList<PropertyTO>();\n+\n+    private AjaxButton submit;\n+\n+    @SpringBean\n+    private ConnectorRestClient restClient;\n \n-    @SpringBean(name = \"connectorsRestClient\")\n-    ConnectorsRestClient restClient;\n-    \n     //WebMarkupContainer container;\n-    WebMarkupContainer propertiesContainer;\n+    private WebMarkupContainer propertiesContainer;\n+\n+    private List<ConnectorCapability> selections;\n \n-    List<ConnectorCapability> selections;\n     /**\n      *\n      * @param basePage base\n      * @param modalWindow modal window\n      * @param connectorTO\n      * @param create : set to true only if a CREATE operation is required\n      */\n-    public ConnectorsModalPage(final BasePage basePage, final ModalWindow window,\n-            final ConnectorInstanceTO connectorTO, final boolean createFlag) {\n+    public ConnectorsModalPage(final BasePage basePage,\n+            final ModalWindow window,\n+            final ConnectorInstanceTO connectorTO,\n+            final boolean createFlag) {\n \n         Form connectorForm = new Form(\"ConnectorForm\");\n-        \n+\n         connectorForm.setModel(new CompoundPropertyModel(connectorTO));\n \n-        if(!createFlag)\n+        if (!createFlag) {\n             setupSelections(connectorTO);\n+        }\n+\n+        IModel bundles = new LoadableDetachableModel() {\n \n-        IModel bundles =  new LoadableDetachableModel()\n-        {\n             protected Object load() {\n                 return restClient.getAllBundles();\n             }\n         };\n \n-        IModel selectedBundleProperties =  new LoadableDetachableModel()\n-        {\n+        IModel selectedBundleProperties = new LoadableDetachableModel() {\n+\n             protected Object load() {\n                 List<PropertyTO> list;\n-                \n-                if(createFlag) {\n-                connectorTO.setConnectorName(selectedBundleTO.getConnectorName());\n-                connectorTO.setVersion(selectedBundleTO.getVersion());\n \n-                list = new ArrayList<PropertyTO>();\n-                PropertyTO propertyTO;\n+                if (createFlag) {\n+                    connectorTO.setConnectorName(selectedBundleTO.\n+                            getConnectorName());\n+                    connectorTO.setVersion(selectedBundleTO.getVersion());\n \n-                for(String key : selectedBundleTO.getProperties()) {\n-                    propertyTO = new PropertyTO();\n-                    propertyTO.setKey(key);\n+                    list = new ArrayList<PropertyTO>();\n+                    PropertyTO propertyTO;\n \n-                    list.add(propertyTO);\n-                }\n-                }\n-                else {\n+                    for (String key : selectedBundleTO.getProperties()) {\n+                        propertyTO = new PropertyTO();\n+                        propertyTO.setKey(key);\n+\n+                        list.add(propertyTO);\n+                    }\n+                } else {\n                     selectedBundleTO.setBundleName(connectorTO.getBundleName());\n                     list = hashSetToList(connectorTO.getConfiguration());\n                 }\n@@ -136,27 +146,29 @@ protected Object load() {\n         version.setEnabled(false);\n         version.setOutputMarkupId(true);\n \n-        ChoiceRenderer renderer = new ChoiceRenderer(\"bundleName\",\"bundleName\");\n-        bundle = new DropDownChoice(\"bundle\",bundles,renderer);\n+        ChoiceRenderer renderer =\n+                new ChoiceRenderer(\"bundleName\", \"bundleName\");\n+        bundle = new DropDownChoice(\"bundle\", bundles, renderer);\n \n         bundle.setModel(new IModel() {\n \n-                public Object getObject() {\n-                    return selectedBundleTO;\n-                }\n+            public Object getObject() {\n+                return selectedBundleTO;\n+            }\n \n-                public void setObject(Object object) {\n-                    selectedBundleTO = (ConnectorBundleTO)object;\n-                }\n+            public void setObject(Object object) {\n+                selectedBundleTO = (ConnectorBundleTO) object;\n+            }\n \n-                public void detach() {\n-                }\n-            });\n+            public void detach() {\n+            }\n+        });\n \n         bundle.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n             protected void onUpdate(AjaxRequestTarget target) {\n                 //reset all informations stored in connectorTO\n-                \n+\n                 connectorTO.setConfiguration(new HashSet<PropertyTO>());\n \n                 target.addComponent(propertiesContainer);\n@@ -167,17 +179,19 @@ protected void onUpdate(AjaxRequestTarget target) {\n         bundle.setRequired(true);\n         bundle.setEnabled(createFlag);\n \n-        ListView propertiesView = (new ListView(\"connectorProperties\",selectedBundleProperties) {\n+        ListView propertiesView = (new ListView(\"connectorProperties\",\n+                selectedBundleProperties) {\n \n             PropertyTO propertyTO;\n \n             @Override\n             protected void populateItem(ListItem item) {\n-                propertyTO = (PropertyTO)item.getDefaultModelObject();\n+                propertyTO = (PropertyTO) item.getDefaultModelObject();\n \n                 item.add(new Label(\"key\", propertyTO.getKey()));\n-                item.add(new TextField(\"value\",new PropertyModel(propertyTO, \"value\")));\n-                \n+                item.add(new TextField(\"value\", new PropertyModel(propertyTO,\n+                        \"value\")));\n+\n                 connectorTO.getConfiguration().add(propertyTO);\n             }\n         });\n@@ -188,31 +202,34 @@ protected void populateItem(ListItem item) {\n \n         connectorForm.add(propertiesContainer);\n \n-        submit = new IndicatingAjaxButton(\"submit\", new Model(getString(\"submit\"))) {\n+        submit = new IndicatingAjaxButton(\"submit\", new Model(\n+                getString(\"submit\"))) {\n \n             @Override\n             protected void onSubmit(AjaxRequestTarget target, Form form) {\n-                ConnectorInstanceTO connector = (ConnectorInstanceTO) form.getDefaultModelObject();\n+                ConnectorInstanceTO connector = (ConnectorInstanceTO) form.\n+                        getDefaultModelObject();\n \n                 //Set the model object configuration's properties to connectorPropertiesMap reference\n                 connector.setBundleName(bundle.getModelValue());\n                 //Set the model object's capabilites to capabilitiesPalette's converted Set\n-               connector.setCapabilities(getResourcesSet(selections));\n+                connector.setCapabilities(getResourcesSet(selections));\n \n                 try {\n \n-                    if (createFlag) \n+                    if (createFlag) {\n                         restClient.createConnector(connector);\n-                     else\n+                    } else {\n                         restClient.updateConnector(connector);\n+                    }\n \n-                    Connectors callerPage = (Connectors)basePage;\n+                    Connectors callerPage = (Connectors) basePage;\n                     callerPage.setOperationResult(true);\n \n                     window.close(target);\n \n                 } catch (Exception e) {\n-                     error(getString(\"error\") + \":\" + e.getMessage());\n+                    error(getString(\"error\") + \":\" + e.getMessage());\n                 }\n             }\n \n@@ -221,20 +238,22 @@ protected void onError(AjaxRequestTarget target, Form form) {\n                 target.addComponent(form.get(\"feedback\"));\n             }\n         };\n-    \n+\n         String allowedRoles;\n \n-        if(createFlag)\n+        if (createFlag) {\n             allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Connectors\",\n                     \"create\");\n-        else\n+        } else {\n             allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Connectors\",\n                     \"update\");\n+        }\n \n         MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE,\n-                        allowedRoles);\n+                allowedRoles);\n \n-        connectorForm.add(new FeedbackPanel(\"feedback\").setOutputMarkupId(true));\n+        connectorForm.add(\n+                new FeedbackPanel(\"feedback\").setOutputMarkupId(true));\n \n         connectorForm.add(connectorName);\n         connectorForm.add(displayName);\n@@ -250,7 +269,7 @@ protected Object load() {\n         };\n \n         capabilitiesPalette = new CheckBoxMultipleChoice(\"capabilitiesPalette\",\n-                               new PropertyModel(this,\"selections\"), capabilities);\n+                new PropertyModel(this, \"selections\"), capabilities);\n         connectorForm.add(capabilitiesPalette);\n \n         connectorForm.add(submit);\n@@ -262,20 +281,24 @@ protected Object load() {\n      * Setup capabilities.\n      * @return void\n      */\n-    public void setupSelections(ConnectorInstanceTO connectorTO){\n+    public void setupSelections(ConnectorInstanceTO connectorTO) {\n         selections = new ArrayList<ConnectorCapability>();\n-        \n-        for(ConnectorCapability capability : connectorTO.getCapabilities())\n+\n+        for (ConnectorCapability capability : connectorTO.getCapabilities()) {\n             selections.add(capability);\n+        }\n \n     }\n \n     /**\n      * Covert a capabilities List<ConnectorCapability> to Set<ConnectorCapability>.\n      * @return Set<ConnectorCapability>\n      */\n-    public Set<ConnectorCapability> getResourcesSet(Collection<ConnectorCapability> capabilitiesList) {\n-        Set<ConnectorCapability> capabilitiesSet = new HashSet<ConnectorCapability>();\n+    public Set<ConnectorCapability> getResourcesSet(\n+            Collection<ConnectorCapability> capabilitiesList) {\n+\n+        Set<ConnectorCapability> capabilitiesSet =\n+                new HashSet<ConnectorCapability>();\n \n         for (ConnectorCapability capability : capabilitiesList) {\n             capabilitiesSet.add(capability);\n@@ -289,12 +312,15 @@ public Set<ConnectorCapability> getResourcesSet(Collection<ConnectorCapability>\n      * @param connectorTO\n      * @return List<ConnectorCapability>\n      */\n-    public List<ConnectorCapability> getSelectedCapabilities(ConnectorInstanceTO connectorTO) {\n+    public List<ConnectorCapability> getSelectedCapabilities(\n+            ConnectorInstanceTO connectorTO) {\n \n-        List<ConnectorCapability> capabilities = new ArrayList<ConnectorCapability>();\n+        List<ConnectorCapability> capabilities =\n+                new ArrayList<ConnectorCapability>();\n \n-        for(ConnectorCapability capability : connectorTO.getCapabilities())\n+        for (ConnectorCapability capability : connectorTO.getCapabilities()) {\n             capabilities.add(capability);\n+        }\n \n         return capabilities;\n     }\n@@ -306,7 +332,8 @@ public List<ConnectorCapability> getSelectedCapabilities(ConnectorInstanceTO con\n      */\n     public List<ConnectorCapability> getAvailableCapabilities() {\n \n-        List<ConnectorCapability> capabilities = new ArrayList<ConnectorCapability>();\n+        List<ConnectorCapability> capabilities =\n+                new ArrayList<ConnectorCapability>();\n \n         capabilities = Arrays.asList(ConnectorCapability.values());\n \n@@ -328,4 +355,4 @@ public List<PropertyTO> hashSetToList(Set<PropertyTO> set) {\n \n         return list;\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"d28555fd35a44324663647f24c1b45cf678b53be","filename":"console/src/main/java/org/syncope/console/pages/CustomizableBasePage.java","status":"removed","additions":0,"deletions":39,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FCustomizableBasePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FCustomizableBasePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FCustomizableBasePage.java?ref=ce711379cde24edf004fd82a87556d569786a654","patch":"@@ -1,39 +0,0 @@\n-/*\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  you may not use this file except in compliance with the License.\n- *  You may obtain a copy of the License at\n- *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- *  under the License.\n- */\n-package org.syncope.console.pages;\n-\n-import org.apache.wicket.PageParameters;\n-import org.apache.wicket.markup.html.WebPage;\n-\n-/**\n- * Syncope Wicket Customizable Base-page\n- */\n-public class CustomizableBasePage extends WebPage\n-{\n-\n-    private static final long serialVersionUID = 1L;\n-\n-    /**\n-     * \n-     * Defaul constructor.\n-     * @param PageParameters parameters\n-     *            \n-     */\n-    public CustomizableBasePage( final PageParameters parameters )\n-    {\n-\n-    }\n-\n-}"},{"sha":"347a341a972e705cde4993b6826f86ca0d2be170","filename":"console/src/main/java/org/syncope/console/pages/DisplayAttributesModalPage.java","status":"modified","additions":12,"deletions":9,"changes":21,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -35,18 +35,24 @@\n \n import org.syncope.console.SyncopeApplication;\n import org.syncope.console.commons.Constants;\n-import org.syncope.console.rest.ConfigurationsRestClient;\n+import org.syncope.console.rest.ConfigurationRestClient;\n import org.syncope.console.rest.SchemaRestClient;\n \n /**\n  * Modal window with Display attributes form.\n  */\n public class DisplayAttributesModalPage extends SyncopeModalPage {\n \n-    @SpringBean(name = \"configurationsRestClient\")\n-    private ConfigurationsRestClient restClient;\n+    @SpringBean\n+    private ConfigurationRestClient restClient;\n+\n+    @SpringBean\n+    private SchemaRestClient schemaRestClient;\n+\n     private List<String> selections;\n+\n     private ConfigurationTO configuration;\n+\n     public AjaxButton submit;\n \n     public DisplayAttributesModalPage(final BasePage basePage,\n@@ -61,9 +67,6 @@ public DisplayAttributesModalPage(final BasePage basePage,\n             @Override\n             protected Object load() {\n                 SyncopeApplication app = (SyncopeApplication) Application.get();\n-                SchemaRestClient schemaRestClient =\n-                        (SchemaRestClient) app.getApplicationContext().\n-                        getBean(\"schemaRestClient\");\n \n                 return schemaRestClient.getAllUserSchemasNames();\n             }\n@@ -80,9 +83,9 @@ protected void onSubmit(final AjaxRequestTarget target,\n \n                 if (saveConfiguration()) {\n \n-                Users callerPage = (Users)basePage;\n-                callerPage.setOperationResult(true);\n-                window.close(target);\n+                    Users callerPage = (Users) basePage;\n+                    callerPage.setOperationResult(true);\n+                    window.close(target);\n \n                 } else {\n                     error(getString(\"generic_error\"));"},{"sha":"44534185cd1b0585b18bcca48d7085fb7515efdd","filename":"console/src/main/java/org/syncope/console/pages/Login.java","status":"modified","additions":42,"deletions":57,"changes":99,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FLogin.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -32,17 +32,31 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.http.client.CommonsClientHttpRequestFactory;\n-import org.springframework.web.client.HttpClientErrorException;\n+import org.springframework.web.client.RestTemplate;\n+import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n import org.syncope.console.SyncopeSession;\n import org.syncope.console.SyncopeUser;\n-import org.syncope.console.rest.RestClient;\n \n /**\n  * Syncope Login page.\n  */\n public class Login extends WebPage {\n \n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG = LoggerFactory.getLogger(\n+            Login.class);\n+\n+    @SpringBean\n+    private RestTemplate restTemplate;\n+\n+    @SpringBean(name = \"baseURL\")\n+    private String baseURL;\n+\n     private Form form;\n \n     private TextField usernameField;\n@@ -51,11 +65,9 @@ public class Login extends WebPage {\n \n     private DropDownChoice<String> languageSelect;\n \n-    @SpringBean(name = \"restClient\")\n-    private RestClient restClient;\n-\n-    public Login(PageParameters parameters) {\n+    public Login(final PageParameters parameters) {\n         super(parameters);\n+\n         form = new Form(\"login\");\n \n         usernameField = new TextField(\"username\", new Model());\n@@ -81,7 +93,7 @@ public void onSubmit() {\n \n                 if (user != null) {\n                     ((SyncopeSession) Session.get()).setUser(user);\n-                    setResponsePage(new WelcomePage(null));\n+                    setResponsePage(WelcomePage.class, parameters);\n                 }\n             }\n         };\n@@ -95,77 +107,50 @@ public void onSubmit() {\n \n     /**\n      * Authenticate the user.\n-     * @param username\n-     * @param password\n-     * @return SyncopeUser object if the authorization succedes, null value\n-     *  otherwise.\n+     *\n+     * @param username provided\n+     * @param password provided\n+     * @return SyncopeUser object if the authorization succedes, null otherwise.\n      */\n-    public SyncopeUser authenticate(String username, String password) {\n+    public SyncopeUser authenticate(final String username,\n+            final String password) {\n \n         SyncopeUser user = null;\n-        String roles = \"\";\n \n         //1.Set provided credentials to check\n-        ((CommonsClientHttpRequestFactory) restClient.getRestTemplate().\n-                getRequestFactory()).getHttpClient().getState().setCredentials(\n+        ((CommonsClientHttpRequestFactory) restTemplate.getRequestFactory()).\n+                getHttpClient().getState().setCredentials(\n                 AuthScope.ANY,\n                 new UsernamePasswordCredentials(username, password));\n \n         //2.Search authorizations for user specified by credentials\n-        List<String> auths;\n-\n+        List<String> entitlements = null;\n         try {\n-            auths = Arrays.asList(\n-                    restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL() + \"auth/entitlements.json\",\n-                    String[].class));\n-        } catch (HttpClientErrorException e) {\n-            //Reset the credentials if exception occurs\n-            ((CommonsClientHttpRequestFactory) restClient.getRestTemplate().\n-                    getRequestFactory()).getHttpClient().getState().\n-                    setCredentials(AuthScope.ANY, null);\n+            entitlements = Arrays.asList(\n+                    restTemplate.getForObject(\n+                    baseURL + \"auth/entitlements.json\", String[].class));\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While fetching user's entitlements\", e);\n             getSession().error(e.getMessage());\n-            return null;\n         }\n \n-        if (auths != null && auths.size() > 0) {\n-\n-            for (int i = 0; i < auths.size(); i++) {\n-                String role = auths.get(i);\n-                roles += role;\n+        if (entitlements != null && entitlements.size() > 0) {\n+            StringBuilder roles = new StringBuilder();\n \n-                if (i != auths.size()) {\n-                    roles += \",\";\n+            for (int i = 0; i < entitlements.size(); i++) {\n+                roles.append(entitlements.get(i));\n+                if (i != entitlements.size() - 1) {\n+                    roles.append(\",\");\n                 }\n             }\n \n-            user = new SyncopeUser(username, roles);\n-\n-            return user;\n+            user = new SyncopeUser(username, roles.toString());\n         } else {\n-            //Reset the credentials if no auth exist for the specified user\n-            ((CommonsClientHttpRequestFactory) restClient.getRestTemplate().\n-                    getRequestFactory()).getHttpClient().getState().\n-                    setCredentials(AuthScope.ANY, null);\n+            LOG.error(\"No entitlements found found for \" + username);\n             getSession().error(getString(\"login-error\"));\n-            return null;\n         }\n-    }\n-\n-    /**\n-     * Getter for restClient attribute.\n-     * @return RestClient instance\n-     */\n-    public RestClient getRestClient() {\n-        return restClient;\n-    }\n \n-    /**\n-     * Setter for restClient attribute.\n-     * @param restClient instance\n-     */\n-    public void setRestClient(RestClient restClient) {\n-        this.restClient = restClient;\n+        return user;\n     }\n \n     /**"},{"sha":"1df73cf5c0b515fbc60388328200946d943c8e2c","filename":"console/src/main/java/org/syncope/console/pages/MembershipModalPage.java","status":"modified","additions":158,"deletions":161,"changes":319,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FMembershipModalPage.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -22,9 +22,6 @@\n import java.util.ArrayList;\n import java.util.Date;\n import java.util.List;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n-import org.apache.wicket.Application;\n import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n@@ -39,24 +36,30 @@\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.Model;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.syncope.client.to.AttributeTO;\n import org.syncope.client.to.MembershipTO;\n import org.syncope.client.to.SchemaTO;\n-import org.syncope.console.SyncopeApplication;\n import org.syncope.console.commons.SchemaWrapper;\n import org.syncope.console.rest.SchemaRestClient;\n import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.syncope.console.wicket.markup.html.form.DateFieldPanel;\n+import org.syncope.types.SchemaType;\n \n /**\n  * MembershipModalPage.\n  */\n public class MembershipModalPage extends SyncopeModalPage {\n-    List<SchemaWrapper> schemaWrappers = new ArrayList<SchemaWrapper>();\n-    WebMarkupContainer container;\n \n-    AjaxButton submit;\n+    @SpringBean\n+    private SchemaRestClient schemaRestClient;\n+\n+    private List<SchemaWrapper> schemaWrappers = new ArrayList<SchemaWrapper>();\n+\n+    private WebMarkupContainer container;\n+\n+    private AjaxButton submit;\n \n     public MembershipModalPage(final Page basePage, final ModalWindow window,\n             final MembershipTO membershipTO, final boolean createFlag) {\n@@ -65,173 +68,172 @@ public MembershipModalPage(final Page basePage, final ModalWindow window,\n \n         form.setModel(new CompoundPropertyModel(membershipTO));\n \n-        setupSchemaWrappers(createFlag,membershipTO);\n+        setupSchemaWrappers(createFlag, membershipTO);\n \n         final ListView userAttributesView = new ListView(\"membershipSchemas\",\n                 schemaWrappers) {\n \n             @Override\n             protected void populateItem(ListItem item) {\n-            final SchemaWrapper schemaWrapper = (SchemaWrapper) item\n-                    .getDefaultModelObject();\n-\n-            final SchemaTO schemaTO = schemaWrapper.getSchemaTO();\n-\n-            item.add(new Label(\"name\", schemaWrapper.getSchemaTO().getName()));\n-\n-            item.add(new ListView(\"fields\", schemaWrapper.getValues()) {\n-\n-                Panel panel;\n-\n-                @Override\n-                protected void populateItem(final ListItem item) {\n-                    String mandatoryCondition =\n-                            schemaTO.getMandatoryCondition();\n-\n-                    boolean required = false;\n-\n-                    if (mandatoryCondition.equalsIgnoreCase(\"true\"))\n-                        required = true;\n-\n-                    if (schemaTO.getType().getClassName()\n-                            .equals(\"java.lang.String\")) {\n-                        panel = new AjaxTextFieldPanel(\"panel\",\n-                                schemaTO.getName(), new Model() {\n-\n-                            @Override\n-                            public Serializable getObject() {\n-                                return (String) item.getModelObject();\n-                            }\n-\n-                            @Override\n-                            public void setObject(Serializable object) {\n-                                item.setModelObject((String) object);\n-                            }\n-                        }, required);\n-                    } else if (schemaTO.getType().getClassName()\n-                            .equals(\"java.lang.Boolean\")) {\n-                        panel = new AjaxCheckBoxPanel(\"panel\", schemaTO\n-                                .getName(), new Model() {\n-\n-                            @Override\n-                            public Serializable getObject() {\n-                                //return (String) item.getModelObject();\n-                                return \"false\";\n-                            }\n-\n-                            @Override\n-                            public void setObject(Serializable object) {\n-                                Boolean val = (Boolean) object;\n-                                item.setModelObject(val.toString());\n-                            }\n-                        }, required);\n-\n-                    } else if (schemaTO.getType().getClassName()\n-                            .equals(\"java.util.Date\")) {\n-                        panel = new DateFieldPanel(\"panel\", schemaTO\n-                                .getName(),\n-                                new Model() {\n-\n-                                    @Override\n-                                    public Serializable getObject() {\n-                                        DateFormat formatter =\n-                                                new SimpleDateFormat(schemaTO\n-                                                .getConversionPattern());\n-                                        Date date = new Date();\n-                                        try {\n-                                            String dateValue = (String) item\n-                                                    .getModelObject();\n-                                            formatter = new SimpleDateFormat(\n-                                                    schemaTO\n-                                                    .getConversionPattern());\n-\n-                                            if(!dateValue.equals(\"\"))\n-                                                date = formatter\n-                                                        .parse(dateValue);\n-                                            else\n-                                                date = null;\n-                                        } catch (ParseException ex) {\n-                                            Logger.getLogger(UserModalPage\n-                                                    .class.getName())\n-                                                    .log(Level.SEVERE, null, ex);\n-                                        }\n-                                        return date;\n-                                    }\n-\n-                                    @Override\n-                                    public void setObject(Serializable object) {\n-                                        Date date = (Date) object;\n-                                        Format formatter = new SimpleDateFormat(\n+                final SchemaWrapper schemaWrapper = (SchemaWrapper) item.\n+                        getDefaultModelObject();\n+\n+                final SchemaTO schemaTO = schemaWrapper.getSchemaTO();\n+\n+                item.add(new Label(\"name\",\n+                        schemaWrapper.getSchemaTO().getName()));\n+\n+                item.add(new ListView(\"fields\", schemaWrapper.getValues()) {\n+\n+                    Panel panel;\n+\n+                    @Override\n+                    protected void populateItem(final ListItem item) {\n+                        String mandatoryCondition =\n+                                schemaTO.getMandatoryCondition();\n+\n+                        boolean required = false;\n+\n+                        if (mandatoryCondition.equalsIgnoreCase(\"true\")) {\n+                            required = true;\n+                        }\n+\n+                        if (schemaTO.getType() == SchemaType.String) {\n+                            panel = new AjaxTextFieldPanel(\"panel\",\n+                                    schemaTO.getName(), new Model() {\n+\n+                                @Override\n+                                public Serializable getObject() {\n+                                    return (String) item.getModelObject();\n+                                }\n+\n+                                @Override\n+                                public void setObject(Serializable object) {\n+                                    item.setModelObject((String) object);\n+                                }\n+                            }, required);\n+                        } else if (schemaTO.getType() == SchemaType.Boolean) {\n+                            panel = new AjaxCheckBoxPanel(\"panel\", schemaTO.\n+                                    getName(), new Model() {\n+\n+                                @Override\n+                                public Serializable getObject() {\n+                                    //return (String) item.getModelObject();\n+                                    return \"false\";\n+                                }\n+\n+                                @Override\n+                                public void setObject(Serializable object) {\n+                                    Boolean val = (Boolean) object;\n+                                    item.setModelObject(val.toString());\n+                                }\n+                            }, required);\n+\n+                        } else if (schemaTO.getType() == SchemaType.Date) {\n+                            panel = new DateFieldPanel(\"panel\",\n+                                    schemaTO.getName(), new Model() {\n+\n+                                @Override\n+                                public Serializable getObject() {\n+                                    DateFormat formatter =\n+                                            new SimpleDateFormat(schemaTO.\n+                                            getConversionPattern());\n+                                    Date date = new Date();\n+                                    try {\n+                                        String dateValue = (String) item.\n+                                                getModelObject();\n+                                        formatter = new SimpleDateFormat(\n                                                 schemaTO.getConversionPattern());\n-                                        String val = formatter.format(date);\n-                                        item.setModelObject(val);\n+\n+                                        if (!dateValue.equals(\"\")) {\n+                                            date = formatter.parse(\n+                                                    dateValue);\n+                                        } else {\n+                                            date = null;\n+                                        }\n+                                    } catch (ParseException e) {\n+                                        LOG.error(\n+                                                \"While parsing a date\",\n+                                                e);\n                                     }\n-                                }, schemaTO.getConversionPattern(),required,\n-                                        schemaTO.isReadonly(), form);\n+                                    return date;\n+                                }\n+\n+                                @Override\n+                                public void setObject(Serializable object) {\n+                                    Date date = (Date) object;\n+                                    Format formatter = new SimpleDateFormat(\n+                                            schemaTO.getConversionPattern());\n+                                    String val = formatter.format(date);\n+                                    item.setModelObject(val);\n+                                }\n+                            }, schemaTO.getConversionPattern(),\n+                                    required,\n+                                    schemaTO.isReadonly(), form);\n+                        }\n+\n+                        item.add(panel);\n                     }\n+                });\n \n-                    item.add(panel);\n-                }\n-            });\n+                AjaxButton addButton = new AjaxButton(\"add\",\n+                        new Model(getString(\"add\"))) {\n \n-            AjaxButton addButton = new AjaxButton(\"add\",\n-                    new Model(getString(\"add\"))) {\n+                    @Override\n+                    protected void onSubmit(AjaxRequestTarget target, Form form) {\n+                        schemaWrapper.getValues().add(\"\");\n \n-                @Override\n-                protected void onSubmit(AjaxRequestTarget target, Form form) {\n-                    schemaWrapper.getValues().add(\"\");\n+                        target.addComponent(container);\n+                    }\n+                };\n \n-                    target.addComponent(container);\n-                }\n-            };\n+                AjaxButton dropButton = new AjaxButton(\"drop\",\n+                        new Model(getString(\"drop\"))) {\n \n-            AjaxButton dropButton = new AjaxButton(\"drop\",\n-                    new Model(getString(\"drop\"))) {\n+                    @Override\n+                    protected void onSubmit(AjaxRequestTarget target, Form form) {\n+                        //Drop the last component added\n+                        schemaWrapper.getValues().remove(schemaWrapper.getValues().\n+                                size() - 1);\n \n-                @Override\n-                protected void onSubmit(AjaxRequestTarget target, Form form) {\n-                    //Drop the last component added\n-                    schemaWrapper.getValues().remove(schemaWrapper.getValues()\n-                            .size() - 1);\n+                        target.addComponent(container);\n+                    }\n+                };\n \n-                    target.addComponent(container);\n+                if (schemaTO.getType() == SchemaType.Boolean) {\n+                    addButton.setVisible(false);\n+                    dropButton.setVisible(false);\n                 }\n-            };\n \n-            if (schemaTO.getType().getClassName().equals(\"java.lang.Boolean\")) {\n-                addButton.setVisible(false);\n-                dropButton.setVisible(false);\n-            }\n+                addButton.setDefaultFormProcessing(false);\n+                addButton.setVisible(schemaTO.isMultivalue());\n \n-            addButton.setDefaultFormProcessing(false);\n-            addButton.setVisible(schemaTO.isMultivalue());\n+                dropButton.setDefaultFormProcessing(false);\n+                dropButton.setVisible(schemaTO.isMultivalue());\n \n-            dropButton.setDefaultFormProcessing(false);\n-            dropButton.setVisible(schemaTO.isMultivalue());\n+                if (schemaWrapper.getValues().size() == 1) {\n+                    dropButton.setVisible(false);\n+                }\n \n-            if (schemaWrapper.getValues().size() == 1) {\n-                dropButton.setVisible(false);\n+                item.add(addButton);\n+                item.add(dropButton);\n             }\n-\n-            item.add(addButton);\n-            item.add(dropButton);\n-        }\n         };\n \n         submit = new AjaxButton(\"submit\", new Model(getString(\"submit\"))) {\n \n             @Override\n             protected void onSubmit(AjaxRequestTarget target, Form form) {\n \n-                MembershipTO membershipTO = (MembershipTO) form\n-                        .getDefaultModelObject();\n+                MembershipTO membershipTO = (MembershipTO) form.\n+                        getDefaultModelObject();\n                 membershipTO.setAttributes(getMembershipAttributes());\n-                \n+\n                 UserModalPage userModalPage = (UserModalPage) basePage;\n \n-                if(createFlag)\n+                if (createFlag) {\n                     userModalPage.getMembershipTOs().add(membershipTO);\n-                else {\n+                } else {\n                     userModalPage.getMembershipTOs().remove(membershipTO);\n                     userModalPage.getMembershipTOs().add(membershipTO);\n                 }\n@@ -246,10 +248,11 @@ protected void onError(AjaxRequestTarget target, Form form) {\n \n         String allowedRoles = null;\n \n-        if(createFlag)\n-            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Users\",\"create\");\n-        else\n-            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Users\",\"update\");\n+        if (createFlag) {\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Users\", \"create\");\n+        } else {\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Users\", \"update\");\n+        }\n \n         MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER,\n                 allowedRoles);\n@@ -260,14 +263,14 @@ protected void onError(AjaxRequestTarget target, Form form) {\n         container = new WebMarkupContainer(\"container\");\n         container.add(userAttributesView);\n         container.setOutputMarkupId(true);\n-        \n+\n         form.add(new FeedbackPanel(\"feedback\").setOutputMarkupId(true));\n         form.add(container);\n \n         add(form);\n     }\n \n-        public List<AttributeTO> getMembershipAttributes() {\n+    public List<AttributeTO> getMembershipAttributes() {\n \n         List<AttributeTO> attributes = new ArrayList<AttributeTO>();\n \n@@ -290,25 +293,19 @@ public List<AttributeTO> getMembershipAttributes() {\n     }\n \n     public void setupSchemaWrappers(boolean create, MembershipTO membershipTO) {\n-\n         schemaWrappers = new ArrayList<SchemaWrapper>();\n         SchemaWrapper schemaWrapper;\n \n-        SchemaRestClient schemaRestClient = (SchemaRestClient) \n-                ((SyncopeApplication) Application.get()).getApplicationContext()\n-                .getBean(\"schemaRestClient\");\n-\n         List<SchemaTO> schemas = schemaRestClient.getAllMemberhipSchemas();\n \n         boolean found = false;\n \n-        if(create) {\n+        if (create) {\n             for (SchemaTO schema : schemas) {\n                 schemaWrapper = new SchemaWrapper(schema);\n                 schemaWrappers.add(schemaWrapper);\n             }\n-        }\n-        else {\n+        } else {\n             for (SchemaTO schema : schemas) {\n                 for (AttributeTO attribute : membershipTO.getAttributes()) {\n                     if (schema.getName().equals(attribute.getSchema())) {\n@@ -318,12 +315,12 @@ public void setupSchemaWrappers(boolean create, MembershipTO membershipTO) {\n                         found = true;\n                     }\n                 }\n-           if (!found) {\n-                schemaWrapper = new SchemaWrapper(schema);\n-                schemaWrappers.add(schemaWrapper);\n-            } else {\n-                found = false;\n-            }\n+                if (!found) {\n+                    schemaWrapper = new SchemaWrapper(schema);\n+                    schemaWrappers.add(schemaWrapper);\n+                } else {\n+                    found = false;\n+                }\n             }\n         }\n     }"},{"sha":"995cbd595a8eebfd24fa4af8e4406bfc8420a4d2","filename":"console/src/main/java/org/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":25,"deletions":29,"changes":54,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -23,7 +23,6 @@\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n-import org.apache.wicket.Application;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n@@ -51,9 +50,8 @@\n import org.syncope.client.to.ResourceTO;\n import org.syncope.client.to.SchemaMappingTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n-import org.syncope.console.SyncopeApplication;\n-import org.syncope.console.rest.ConnectorsRestClient;\n-import org.syncope.console.rest.ResourcesRestClient;\n+import org.syncope.console.rest.ConnectorRestClient;\n+import org.syncope.console.rest.ResourceRestClient;\n import org.syncope.console.rest.SchemaRestClient;\n import org.syncope.console.wicket.markup.html.form.UpdatingAutoCompleteTextField;\n import org.syncope.console.wicket.markup.html.form.UpdatingCheckBox;\n@@ -66,19 +64,25 @@\n  */\n public class ResourceModalPage extends SyncopeModalPage {\n \n-    public TextField resourceName;\n+    @SpringBean\n+    private SchemaRestClient schemaRestClient;\n \n-    public DropDownChoice connector;\n+    @SpringBean\n+    private ConnectorRestClient connectorRestClient;\n \n-    public CheckBox forceMandatoryConstraint;\n+    private TextField resourceName;\n+\n+    private DropDownChoice connector;\n+\n+    private CheckBox forceMandatoryConstraint;\n \n     private ConnectorInstanceTO connectorTO = new ConnectorInstanceTO();\n \n     private ResourceTO resource;\n \n-    public AjaxButton submit;\n+    private AjaxButton submit;\n \n-    public AjaxButton addSchemaMappingBtn;\n+    private AjaxButton addSchemaMappingBtn;\n \n     private List<String> accountIdAttributesNames;\n \n@@ -93,14 +97,12 @@ public class ResourceModalPage extends SyncopeModalPage {\n     /** Custom validation's errors map*/\n     private Map<String, String> errors = new HashMap<String, String>();\n \n-    ListView mappingUserSchemaView;\n+    private ListView mappingUserSchemaView;\n \n-    @SpringBean(name = \"resourcesRestClient\")\n-    ResourcesRestClient restClient;\n+    @SpringBean\n+    private ResourceRestClient restClient;\n \n-    WebMarkupContainer mappingUserSchemaContainer;\n-\n-    SchemaRestClient schemaRestClient;\n+    private WebMarkupContainer mappingUserSchemaContainer;\n \n     /**\n      *\n@@ -114,9 +116,6 @@ public ResourceModalPage(final BasePage basePage, final ModalWindow window,\n \n         this.resource = resourceTO;\n \n-        schemaRestClient = (SchemaRestClient) ((SyncopeApplication) Application.\n-                get()).getApplicationContext().getBean(\"schemaRestClient\");\n-\n         setupChoiceListsPopulators();\n \n         //setupSchemaMappingsList(resourceTO.getMappings());\n@@ -133,12 +132,6 @@ public ResourceModalPage(final BasePage basePage, final ModalWindow window,\n \n             @Override\n             protected Object load() {\n-\n-                ConnectorsRestClient connectorRestClient =\n-                        (ConnectorsRestClient) ((SyncopeApplication) Application.\n-                        get()).getApplicationContext().getBean(\n-                        \"connectorsRestClient\");\n-\n                 return connectorRestClient.getAllConnectors();\n             }\n         };\n@@ -212,7 +205,8 @@ protected void onUpdate(AjaxRequestTarget target) {\n                     }\n                 });\n                 item.add(new UpdatingTextField(\"field\",\n-                        new PropertyModel(mappingTO, \"destAttrName\")).setRequired(true).\n+                        new PropertyModel(mappingTO, \"destAttrName\")).\n+                        setRequired(true).\n                         setLabel(\n                         new Model(getString(\"fieldName\"))));\n \n@@ -309,7 +303,8 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n \n         resourceForm.add(addSchemaMappingBtn);\n \n-        submit = new IndicatingAjaxButton(\"submit\", new Model(getString(\"submit\"))) {\n+        submit = new IndicatingAjaxButton(\"submit\", new Model(\n+                getString(\"submit\"))) {\n \n             @Override\n             protected void onSubmit(AjaxRequestTarget target, Form form) {\n@@ -355,15 +350,16 @@ protected void onError(AjaxRequestTarget target, Form form) {\n \n         String allowedRoles;\n \n-        if(createFlag)\n+        if (createFlag) {\n             allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Resources\",\n                     \"create\");\n-        else\n+        } else {\n             allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Resources\",\n                     \"update\");\n+        }\n \n         MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE,\n-                        allowedRoles);\n+                allowedRoles);\n \n         resourceForm.add(submit);\n "},{"sha":"12bfe0751e095c2ff5d6483b41e54c7a2c97a5f2","filename":"console/src/main/java/org/syncope/console/pages/Resources.java","status":"modified","additions":108,"deletions":105,"changes":213,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FResources.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -29,8 +29,7 @@\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table\n-        .AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n@@ -49,7 +48,7 @@\n import org.syncope.client.to.ResourceTO;\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.Utility;\n-import org.syncope.console.rest.ResourcesRestClient;\n+import org.syncope.console.rest.ResourceRestClient;\n import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n import org.syncope.console.wicket.markup.html.form.EditLinkPanel;\n \n@@ -58,26 +57,29 @@\n  */\n public class Resources extends BasePage {\n \n-    @SpringBean(name = \"resourcesRestClient\")\n-    ResourcesRestClient restClient;\n+    @SpringBean\n+    private ResourceRestClient restClient;\n \n-    @SpringBean(name = \"utility\")\n-    Utility utility;\n+    @SpringBean\n+    private Utility utility;\n \n-    final ModalWindow createResourceWin;\n-    final ModalWindow editResourceWin;\n+    private final ModalWindow createResourceWin;\n \n-    final int WIN_INITIAL_HEIGHT = 515;\n-    final int WIN_INITIAL_WIDTH = 775;\n+    private final ModalWindow editResourceWin;\n \n-    WebMarkupContainer container;\n+    private static final int WIN_INITIAL_HEIGHT = 515;\n+\n+    private static final int WIN_INITIAL_WIDTH = 775;\n+\n+    private WebMarkupContainer container;\n \n     /*\n-     Response flag set by the Modal Window after the operation is completed:\n-     TRUE if the operation succedes, FALSE otherwise\n+    Response flag set by the Modal Window after the operation is completed:\n+    TRUE if the operation succedes, FALSE otherwise\n      */\n-    boolean operationResult = false;\n-    FeedbackPanel feedbackPanel;\n+    private boolean operationResult = false;\n+\n+    private FeedbackPanel feedbackPanel;\n \n     private int paginatorRows;\n \n@@ -88,67 +90,63 @@ public Resources(PageParameters parameters) {\n         add(editResourceWin = new ModalWindow(\"editResourceWin\"));\n \n         feedbackPanel = new FeedbackPanel(\"feedback\");\n-        feedbackPanel.setOutputMarkupId( true );\n+        feedbackPanel.setOutputMarkupId(true);\n \n         add(feedbackPanel);\n \n-        paginatorRows = utility.getPaginatorRowsToDisplay(Constants\n-                    .CONF_RESOURCES_PAGINATOR_ROWS);\n+        paginatorRows = utility.getPaginatorRowsToDisplay(\n+                Constants.CONF_RESOURCES_PAGINATOR_ROWS);\n \n         List<IColumn> columns = new ArrayList<IColumn>();\n \n         columns.add(new PropertyColumn(new Model(getString(\"name\")),\n                 \"name\", \"name\"));\n \n         columns.add(new AbstractColumn<ResourceTO>(new Model<String>(\n-                getString(\"edit\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<ResourceTO>>\n-                    cellItem, String componentId, IModel<ResourceTO> model)\n-            {\n-                    final ResourceTO resourceTO = model.getObject();\n+                getString(\"edit\"))) {\n \n-                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n+            public void populateItem(Item<ICellPopulator<ResourceTO>> cellItem, String componentId, IModel<ResourceTO> model) {\n+                final ResourceTO resourceTO = model.getObject();\n+\n+                AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n-                        editResourceWin.setPageCreator(new ModalWindow\n-                                .PageCreator() {\n+                        editResourceWin.setPageCreator(new ModalWindow.PageCreator() {\n \n                             public Page createPage() {\n-                                ResourceModalPage form = new ResourceModalPage\n-                                        (Resources.this, editResourceWin,\n+                                ResourceModalPage form = new ResourceModalPage(\n+                                        Resources.this, editResourceWin,\n                                         resourceTO, false);\n                                 return form;\n                             }\n                         });\n \n                         editResourceWin.show(target);\n                     }\n-                    };\n+                };\n+\n+                EditLinkPanel panel = new EditLinkPanel(componentId, model);\n+                panel.add(editLink);\n \n-                    EditLinkPanel panel = new EditLinkPanel(componentId, model);\n-                    panel.add(editLink);\n+                String allowedRoles = xmlRolesReader.getAllAllowedRoles(\n+                        \"Resources\", \"read\");\n \n-                    String allowedRoles = xmlRolesReader.getAllAllowedRoles(\n-                        \"Resources\",\"read\");\n-                    \n-                    MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n                         allowedRoles);\n \n-                    cellItem.add(panel);\n+                cellItem.add(panel);\n             }\n         });\n \n-        columns.add(new AbstractColumn<ResourceTO>(new Model<String>\n-                (getString(\"delete\"))) {\n-            public void populateItem(Item<ICellPopulator<ResourceTO>>\n-                    cellItem, String componentId, IModel<ResourceTO> model)\n-            {\n-                    final ResourceTO resourceTO = model.getObject();\n+        columns.add(new AbstractColumn<ResourceTO>(new Model<String>(getString(\n+                \"delete\"))) {\n \n-                    AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n+            public void populateItem(Item<ICellPopulator<ResourceTO>> cellItem, String componentId, IModel<ResourceTO> model) {\n+                final ResourceTO resourceTO = model.getObject();\n+\n+                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -159,31 +157,34 @@ public void onClick(AjaxRequestTarget target) {\n \n                         target.addComponent(container);\n                     }\n-                    \n+\n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.\n+                                getAjaxCallDecorator()) {\n+\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n                             public CharSequence preDecorateScript(CharSequence script) {\n-                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n-                                        +\"{\"+script+\"}\";\n+                                return \"if (confirm('\" + getString(\n+                                        \"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"}\";\n                             }\n                         };\n                     }\n-                 };\n-                    DeleteLinkPanel panel = new DeleteLinkPanel(componentId,\n-                            model);\n-                    panel.add(deleteLink);\n+                };\n+                DeleteLinkPanel panel = new DeleteLinkPanel(componentId,\n+                        model);\n+                panel.add(deleteLink);\n \n-                    String allowedRoles = xmlRolesReader.getAllAllowedRoles(\n-                        \"Resources\",\"delete\");\n+                String allowedRoles = xmlRolesReader.getAllAllowedRoles(\n+                        \"Resources\", \"delete\");\n \n-                    MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n                         allowedRoles);\n \n-                    cellItem.add(panel);\n+                cellItem.add(panel);\n             }\n         });\n \n@@ -221,8 +222,8 @@ public void onClick(AjaxRequestTarget target) {\n                 createResourceWin.setPageCreator(new ModalWindow.PageCreator() {\n \n                     public Page createPage() {\n-                        ResourceModalPage windows = new ResourceModalPage\n-                                (Resources.this, editResourceWin,\n+                        ResourceModalPage windows = new ResourceModalPage(\n+                                Resources.this, editResourceWin,\n                                 new ResourceTO(), true);\n                         return windows;\n                     }\n@@ -235,20 +236,21 @@ public Page createPage() {\n         Form paginatorForm = new Form(\"PaginatorForm\");\n \n         final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n-        new PropertyModel(this,\"paginatorRows\"),utility.paginatorRowsChooser());\n+                new PropertyModel(this, \"paginatorRows\"), utility.\n+                paginatorRowsChooser());\n \n-        rowsChooser.add(new AjaxFormComponentUpdatingBehavior( \"onchange\" ){\n-          protected void onUpdate( AjaxRequestTarget target )\n-            {\n-              utility.updatePaginatorRows(Constants.CONF_RESOURCES_PAGINATOR_ROWS,\n-                      paginatorRows);\n+        rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-              table.setRowsPerPage(paginatorRows);\n-              \n-              target.addComponent(container);\n-            }\n+            protected void onUpdate(AjaxRequestTarget target) {\n+                utility.updatePaginatorRows(\n+                        Constants.CONF_RESOURCES_PAGINATOR_ROWS,\n+                        paginatorRows);\n \n-          });\n+                table.setRowsPerPage(paginatorRows);\n+\n+                target.addComponent(container);\n+            }\n+        });\n \n         paginatorForm.add(rowsChooser);\n         add(paginatorForm);\n@@ -275,10 +277,10 @@ public void setWindowClosedCallback(ModalWindow window,\n \n                     public void onClose(AjaxRequestTarget target) {\n                         target.addComponent(container);\n-                        if(operationResult){\n-                        info(getString(\"operation_succeded\"));\n-                        target.addComponent(feedbackPanel);\n-                        operationResult = false;\n+                        if (operationResult) {\n+                            info(getString(\"operation_succeded\"));\n+                            target.addComponent(feedbackPanel);\n+                            operationResult = false;\n                         }\n                     }\n                 });\n@@ -291,7 +293,7 @@ class ResourcesProvider extends SortableDataProvider<ResourceTO> {\n \n         public ResourcesProvider() {\n             //Default sorting\n-            setSort(\"name\",true);\n+            setSort(\"name\", true);\n         }\n \n         @Override\n@@ -300,7 +302,7 @@ public Iterator<ResourceTO> iterator(int first, int count) {\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first+count).iterator();\n+            return list.subList(first, first + count).iterator();\n         }\n \n         @Override\n@@ -309,8 +311,7 @@ public int size() {\n         }\n \n         @Override\n-        public IModel<ResourceTO> model(final ResourceTO\n-                resource) {\n+        public IModel<ResourceTO> model(final ResourceTO resource) {\n             return new AbstractReadOnlyModel<ResourceTO>() {\n \n                 @Override\n@@ -320,39 +321,41 @@ public ResourceTO getObject() {\n             };\n         }\n \n-        public List<ResourceTO> getResourcesListDB(){\n-        List<ResourceTO> list = restClient.getAllResources();\n+        public List<ResourceTO> getResourcesListDB() {\n+            List<ResourceTO> list = restClient.getAllResources();\n \n-        return list;\n+            return list;\n         }\n \n         class SortableDataProviderComparator implements\n                 Comparator<ResourceTO>, Serializable {\n+\n             public int compare(final ResourceTO o1,\n                     final ResourceTO o2) {\n-                    PropertyModel<Comparable> model1 =\n-                            new PropertyModel<Comparable>(o1, getSort()\n-                            .getProperty());\n-                    PropertyModel<Comparable> model2 =\n-                            new PropertyModel<Comparable>(o2, getSort()\n-                            .getProperty());\n-\n-                    int result = 1;\n-\n-                    if(model1.getObject() == null && model2.getObject() == null)\n-                        result = 0;\n-                    else if(model1.getObject() == null)\n-                        result = 1;\n-                    else if(model2.getObject() == null)\n-                        result = -1;\n-                    else\n-                        result = ((Comparable)model1.getObject()).compareTo(\n-                                model2.getObject());\n-\n-                    result = getSort().isAscending() ? result : -result;\n-\n-                    return result;\n+                PropertyModel<Comparable> model1 =\n+                        new PropertyModel<Comparable>(o1,\n+                        getSort().getProperty());\n+                PropertyModel<Comparable> model2 =\n+                        new PropertyModel<Comparable>(o2,\n+                        getSort().getProperty());\n+\n+                int result = 1;\n+\n+                if (model1.getObject() == null && model2.getObject() == null) {\n+                    result = 0;\n+                } else if (model1.getObject() == null) {\n+                    result = 1;\n+                } else if (model2.getObject() == null) {\n+                    result = -1;\n+                } else {\n+                    result = ((Comparable) model1.getObject()).compareTo(\n+                            model2.getObject());\n+                }\n+\n+                result = getSort().isAscending() ? result : -result;\n+\n+                return result;\n             }\n-\t}\n+        }\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"ff9a37f6492df985bfbea81e6848c74f3ac442ee","filename":"console/src/main/java/org/syncope/console/pages/RoleModalPage.java","status":"modified","additions":16,"deletions":28,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoleModalPage.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -26,10 +26,6 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n-\n-import org.apache.wicket.Application;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.IAjaxCallDecorator;\n import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n@@ -51,20 +47,17 @@\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-\n import org.syncope.client.mod.AttributeMod;\n import org.syncope.client.mod.RoleMod;\n import org.syncope.client.to.AttributeTO;\n import org.syncope.client.to.ResourceTO;\n import org.syncope.client.to.RoleTO;\n import org.syncope.client.to.SchemaTO;\n-\n-import org.syncope.console.SyncopeApplication;\n import org.syncope.console.commons.SchemaWrapper;\n import org.syncope.console.commons.StringChoiceRenderer;\n-import org.syncope.console.rest.EntitlementsRestClient;\n-import org.syncope.console.rest.ResourcesRestClient;\n-import org.syncope.console.rest.RolesRestClient;\n+import org.syncope.console.rest.EntitlementRestClient;\n+import org.syncope.console.rest.ResourceRestClient;\n+import org.syncope.console.rest.RoleRestClient;\n import org.syncope.console.rest.SchemaRestClient;\n import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n@@ -76,11 +69,17 @@\n  */\n public class RoleModalPage extends SyncopeModalPage {\n \n-    @SpringBean(name = \"rolesRestClient\")\n-    private RolesRestClient roleRestClient;\n+    @SpringBean\n+    private RoleRestClient roleRestClient;\n+\n+    @SpringBean\n+    private EntitlementRestClient entitlementRestClient;\n \n-    @SpringBean(name = \"entitlementsRestClient\")\n-    private EntitlementsRestClient entitlementRestClient;\n+    @SpringBean\n+    private ResourceRestClient resourceRestClient;\n+\n+    @SpringBean\n+    private SchemaRestClient schemaRestClient;\n \n     private AjaxButton submit;\n \n@@ -177,11 +176,8 @@ public Serializable getObject() {\n                                         } else {\n                                             date = null;\n                                         }\n-                                    } catch (ParseException ex) {\n-                                        Logger.getLogger(\n-                                                RoleModalPage.class.getName()).\n-                                                log(\n-                                                Level.SEVERE, null, ex);\n+                                    } catch (ParseException e) {\n+                                        LOG.error(\"While parsing a date\", e);\n                                     }\n                                     return date;\n                                 }\n@@ -431,11 +427,7 @@ public List<ResourceTO> getAvailableResources(RoleTO roleTO) {\n \n         List<ResourceTO> resources = new ArrayList<ResourceTO>();\n \n-        ResourcesRestClient resourcesRestClient =\n-                (ResourcesRestClient) ((SyncopeApplication) Application.get()).\n-                getApplicationContext().getBean(\"resourcesRestClient\");\n-\n-        List<ResourceTO> resourcesTos = resourcesRestClient.getAllResources();\n+        List<ResourceTO> resourcesTos = resourceRestClient.getAllResources();\n \n         for (ResourceTO resourceTO : resourcesTos) {\n             resources.add(resourceTO);\n@@ -448,10 +440,6 @@ public void setupSchemaWrappers(boolean create, RoleTO roleTO) {\n         schemaWrappers = new ArrayList<SchemaWrapper>();\n         SchemaWrapper schemaWrapper;\n \n-        SchemaRestClient schemaRestClient =\n-                (SchemaRestClient) ((SyncopeApplication) Application.get()).\n-                getApplicationContext().getBean(\"schemaRestClient\");\n-\n         List<SchemaTO> schemas = schemaRestClient.getAllRoleSchemas();\n \n         boolean found = false;"},{"sha":"307f642af76db449edada955f04cc206311bd9ba","filename":"console/src/main/java/org/syncope/console/pages/Roles.java","status":"modified","additions":28,"deletions":28,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FRoles.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -22,41 +22,41 @@\n import org.apache.wicket.extensions.markup.html.tree.table.IColumn;\n import org.apache.wicket.extensions.markup.html.tree.table.PropertyTreeColumn;\n import org.apache.wicket.extensions.markup.html.tree.table.TreeTable;\n-import org.apache.wicket.extensions.markup.html.tree.table.ColumnLocation\n-        .Alignment;\n-import org.apache.wicket.extensions.markup.html.tree.table.ColumnLocation\n-        .Unit;\n+import org.apache.wicket.extensions.markup.html.tree.table.ColumnLocation.Alignment;\n+import org.apache.wicket.extensions.markup.html.tree.table.ColumnLocation.Unit;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.FeedbackPanel;\n import org.apache.wicket.markup.html.tree.AbstractTree;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n-import org.springframework.web.client.RestClientException;\n-import org.syncope.console.rest.RolesRestClient;\n+import org.syncope.console.rest.RoleRestClient;\n import org.syncope.console.wicket.markup.html.tree.SyncopeRoleTree;\n \n /**\n  * Roles WebPage.\n  */\n public class Roles extends BasePage {\n \n-    @SpringBean(name = \"rolesRestClient\")\n-    RolesRestClient restClient;\n+    @SpringBean\n+    private RoleRestClient restClient;\n \n     private TreeTable tree;\n \n-    ModalWindow createRoleWin = null;\n-    final int WIN_USER_HEIGHT = 680;\n-    final int WIN_USER_WIDTH = 900;\n+    private ModalWindow createRoleWin = null;\n \n-    WebMarkupContainer container;\n+    private static final int WIN_USER_HEIGHT = 680;\n+\n+    private static final int WIN_USER_WIDTH = 900;\n+\n+    private WebMarkupContainer container;\n \n     /*\n-     Response flag set by the Modal Window after the operation is completed\n+    Response flag set by the Modal Window after the operation is completed\n      */\n-    boolean operationResult = false;\n-    FeedbackPanel feedbackPanel;\n-    \n+    private boolean operationResult = false;\n+\n+    private FeedbackPanel feedbackPanel;\n+\n     public Roles(PageParameters parameters) {\n         super(parameters);\n \n@@ -71,15 +71,14 @@ public Roles(PageParameters parameters) {\n         container = new WebMarkupContainer(\"container\");\n \n         IColumn columns[] = new IColumn[]{\n-        new PropertyTreeColumn(new ColumnLocation(Alignment.LEFT, 30,\n+            new PropertyTreeColumn(new ColumnLocation(Alignment.LEFT, 30,\n             Unit.EM), getString(\"column1\"), \"userObject.treeNode.displayName\"),\n             new PropertyEditableColumn(new ColumnLocation(Alignment.LEFT, 20,\n-            Unit.EM), getString(\"column2\"), \"userObject.title\",createRoleWin,\n-            Roles.this),\n-            };\n+            Unit.EM), getString(\"column2\"), \"userObject.title\", createRoleWin,\n+            Roles.this),};\n \n         feedbackPanel = new FeedbackPanel(\"feedback\");\n-        feedbackPanel.setOutputMarkupId( true );\n+        feedbackPanel.setOutputMarkupId(true);\n \n         add(feedbackPanel);\n \n@@ -89,15 +88,15 @@ public Roles(PageParameters parameters) {\n         SyncopeRoleTree roleTree = new SyncopeRoleTree(restClient);\n \n         tree = new TreeTable(\"treeTable\", roleTree.createTreeModel(),\n-                   columns);\n-        \n+                columns);\n+\n         form.add(tree);\n         tree.getTreeState().expandAll();\n         tree.updateTree();\n \n         container.add(tree);\n         container.setOutputMarkupId(true);\n-        \n+\n         form.add(container);\n \n         setWindowClosedCallback(createRoleWin, container);\n@@ -116,10 +115,11 @@ public void setWindowClosedCallback(ModalWindow window,\n \n                     public void onClose(AjaxRequestTarget target) {\n                         target.addComponent(container);\n-                        \n-                        if(operationResult)\n+\n+                        if (operationResult) {\n                             getSession().info(getString(\"operation_succeded\"));\n-                    \n+                        }\n+\n                         setResponsePage(new Roles(null));\n                     }\n                 });\n@@ -139,4 +139,4 @@ public boolean isOperationResult() {\n     public void setOperationResult(boolean operationResult) {\n         this.operationResult = operationResult;\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"b13bebfa3c9e25d51d7b6aadb97ec504a711891f","filename":"console/src/main/java/org/syncope/console/pages/Schema.java","status":"modified","additions":644,"deletions":496,"changes":1140,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSchema.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -29,10 +29,8 @@\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table\n-        .AjaxFallbackDefaultDataTable;\n-import org.apache.wicket.extensions.markup.html.repeater.data.grid\n-        .ICellPopulator;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.PropertyColumn;\n@@ -59,48 +57,61 @@\n /**\n  * Schema WebPage.\n  */\n-public class Schema extends BasePage\n-{\n-    protected enum SchemaType {RoleSchema, UserSchema, MembershipSchema};\n+public class Schema extends BasePage {\n \n-    protected enum SchemaDerivedType {RoleDerivedSchema, UserDerivedSchema,\n-    MembershipDerivedSchema};\n+    private enum SchemaType {\n \n-    @SpringBean(name = \"schemaRestClient\")\n-    SchemaRestClient restClient;\n+        RoleSchema, UserSchema, MembershipSchema\n \n-    @SpringBean(name = \"utility\")\n-    Utility utility;\n+    };\n \n-    /*@SpringBean(name = \"xmlRolesReader\")\n-    XMLRolesReader xmlRolesReader;*/\n+    private enum SchemaDerivedType {\n \n-    final ModalWindow createUserSchemaWin;\n-    final ModalWindow editUserSchemaWin;\n+        RoleDerivedSchema, UserDerivedSchema,\n+        MembershipDerivedSchema\n \n-    final ModalWindow createUserDerivedSchemaWin;\n-    final ModalWindow editUserDerivedSchemaWin;\n+    };\n+    @SpringBean\n+    private SchemaRestClient restClient;\n \n-    final ModalWindow createRoleSchemaWin;\n-    final ModalWindow editRoleSchemaWin;\n-    \n-    final ModalWindow createRoleDerivedSchemaWin;\n-    final ModalWindow editRoleDerivedSchemaWin;\n+    @SpringBean\n+    private Utility utility;\n \n-    final ModalWindow createMembershipSchemaWin;\n-    final ModalWindow editMembershipSchemaWin;\n+    private final ModalWindow createUserSchemaWin;\n \n-    final ModalWindow createMembershipDerivedSchemaWin;\n-    final ModalWindow editMembershipDerivedSchemaWin;\n-    \n-    WebMarkupContainer userSchemaContainer;\n-    WebMarkupContainer userDerivedSchemaContainer;\n+    private final ModalWindow editUserSchemaWin;\n \n-    WebMarkupContainer roleSchemasContainer;\n-    WebMarkupContainer roleDerivedSchemasContainer;\n+    private final ModalWindow createUserDerivedSchemaWin;\n \n-    WebMarkupContainer membershipSchemaContainer;\n-    WebMarkupContainer membershipDerivedSchemaContainer;\n+    private final ModalWindow editUserDerivedSchemaWin;\n+\n+    private final ModalWindow createRoleSchemaWin;\n+\n+    private final ModalWindow editRoleSchemaWin;\n+\n+    private final ModalWindow createRoleDerivedSchemaWin;\n+\n+    private final ModalWindow editRoleDerivedSchemaWin;\n+\n+    private final ModalWindow createMembershipSchemaWin;\n+\n+    private final ModalWindow editMembershipSchemaWin;\n+\n+    private final ModalWindow createMembershipDerivedSchemaWin;\n+\n+    private final ModalWindow editMembershipDerivedSchemaWin;\n+\n+    private WebMarkupContainer userSchemaContainer;\n+\n+    private WebMarkupContainer userDerivedSchemaContainer;\n+\n+    private WebMarkupContainer roleSchemasContainer;\n+\n+    private WebMarkupContainer roleDerivedSchemasContainer;\n+\n+    private WebMarkupContainer membershipSchemaContainer;\n+\n+    private WebMarkupContainer membershipDerivedSchemaContainer;\n \n     private int userSchemaPageRows;\n \n@@ -115,72 +126,74 @@ protected enum SchemaDerivedType {RoleDerivedSchema, UserDerivedSchema,\n     private int membershipDerPageRows;\n \n     /*\n-     Response flag set by the Modal Window after the operation is completed\n+    Response flag set by the Modal Window after the operation is completed\n      */\n-    boolean operationResult = false;\n-    FeedbackPanel feedbackPanel;\n-    \n-    public Schema(PageParameters parameters)\n-    {\n+    private boolean operationResult = false;\n+\n+    private FeedbackPanel feedbackPanel;\n+\n+    public Schema(PageParameters parameters) {\n         super(parameters);\n \n         add(createRoleSchemaWin = new ModalWindow(\"createRoleSchemaWin\"));\n         add(editRoleSchemaWin = new ModalWindow(\"editRoleSchemaWin\"));\n \n-        add(createRoleDerivedSchemaWin\n-                = new ModalWindow(\"createRoleDerivedSchemaWin\"));\n+        add(createRoleDerivedSchemaWin = new ModalWindow(\n+                \"createRoleDerivedSchemaWin\"));\n \n-        add(editRoleDerivedSchemaWin\n-                = new ModalWindow(\"editRoleDerivedSchemaWin\"));\n+        add(editRoleDerivedSchemaWin = new ModalWindow(\n+                \"editRoleDerivedSchemaWin\"));\n \n         add(createUserSchemaWin = new ModalWindow(\"createUserSchemaWin\"));\n-        \n+\n         add(editUserSchemaWin = new ModalWindow(\"editUserSchemaWin\"));\n-        \n-        add(createUserDerivedSchemaWin\n-                = new ModalWindow(\"createUserDerSchemaWin\"));\n-        add(editUserDerivedSchemaWin = new ModalWindow(\"editUserDerSchemaWin\"));\n \n-        add(createMembershipSchemaWin\n-                = new ModalWindow(\"createMembershipSchemaWin\"));\n-        add(editMembershipSchemaWin = new ModalWindow(\"editMembershipSchemaWin\"));\n+        add(createUserDerivedSchemaWin = new ModalWindow(\n+                \"createUserDerSchemaWin\"));\n+        add(editUserDerivedSchemaWin = new ModalWindow(\n+                \"editUserDerSchemaWin\"));\n+\n+        add(createMembershipSchemaWin = new ModalWindow(\n+                \"createMembershipSchemaWin\"));\n+        add(editMembershipSchemaWin = new ModalWindow(\n+                \"editMembershipSchemaWin\"));\n \n-        add(createMembershipDerivedSchemaWin\n-                = new ModalWindow(\"createMembershipDerSchemaWin\"));\n-        add(editMembershipDerivedSchemaWin\n-                = new ModalWindow(\"editMembershipDerSchemaWin\"));\n+        add(createMembershipDerivedSchemaWin = new ModalWindow(\n+                \"createMembershipDerSchemaWin\"));\n+        add(editMembershipDerivedSchemaWin = new ModalWindow(\n+                \"editMembershipDerSchemaWin\"));\n \n         feedbackPanel = new FeedbackPanel(\"feedback\");\n-        feedbackPanel.setOutputMarkupId( true );\n-        \n+        feedbackPanel.setOutputMarkupId(true);\n+\n         add(feedbackPanel);\n \n-        rolePageRows = utility.getPaginatorRowsToDisplay(Constants\n-                .CONF_ROLE_SCHEMA_PAGINATOR_ROWS);\n+        rolePageRows = utility.getPaginatorRowsToDisplay(\n+                Constants.CONF_ROLE_SCHEMA_PAGINATOR_ROWS);\n \n-        roleDerPageRows = utility.getPaginatorRowsToDisplay(Constants\n-                .CONF_ROLE_DER_SCHEMA_PAGINATOR_ROWS);\n+        roleDerPageRows = utility.getPaginatorRowsToDisplay(\n+                Constants.CONF_ROLE_DER_SCHEMA_PAGINATOR_ROWS);\n \n-        userSchemaPageRows = utility.getPaginatorRowsToDisplay(Constants\n-                .CONF_USER_SCHEMA_PAGINATOR_ROWS);\n+        userSchemaPageRows = utility.getPaginatorRowsToDisplay(\n+                Constants.CONF_USER_SCHEMA_PAGINATOR_ROWS);\n \n-        userDerSchemaPageRows = utility.getPaginatorRowsToDisplay(Constants\n-                .CONF_USER_DER_SCHEMA_PAGINATOR_ROWS);\n+        userDerSchemaPageRows = utility.getPaginatorRowsToDisplay(\n+                Constants.CONF_USER_DER_SCHEMA_PAGINATOR_ROWS);\n \n-        membershipPageRows = utility.getPaginatorRowsToDisplay(Constants\n-                .CONF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS);\n+        membershipPageRows = utility.getPaginatorRowsToDisplay(\n+                Constants.CONF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS);\n \n-        membershipDerPageRows = utility.getPaginatorRowsToDisplay(Constants\n-                .CONF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS);\n+        membershipDerPageRows = utility.getPaginatorRowsToDisplay(\n+                Constants.CONF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS);\n \n         final String allowedCreateRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Schema\",\"create\");\n+                \"Schema\", \"create\");\n \n         final String allowedReadRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Schema\",\"read\");\n+                \"Schema\", \"read\");\n \n         final String allowedDeleteRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Schema\",\"delete\");\n+                \"Schema\", \"delete\");\n \n         List<IColumn> rolesColumns = new ArrayList<IColumn>();\n \n@@ -194,27 +207,32 @@ public Schema(PageParameters parameters)\n                 \"attributes\", \"attributes\"));\n \n         rolesColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n-                getString(\"name\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<SchemaTO>>\n-                    cellItem, String componentId, IModel<SchemaTO> model)\n-            {\n-                    final SchemaTO schemaTO = model.getObject();\n+                getString(\"name\"))) {\n+\n+            public void populateItem(\n+                    Item<ICellPopulator<SchemaTO>> cellItem,\n+                    String componentId, IModel<SchemaTO> model) {\n+\n+                final SchemaTO schemaTO = model.getObject();\n \n-                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n+                AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n-                        editRoleSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n+                        editRoleSchemaWin.setPageCreator(\n+                                new ModalWindow.PageCreator() {\n \n-                        public Page createPage() {\n-                            SchemaModalPage window = new SchemaModalPage(\n-                                    Schema.this, editRoleSchemaWin, schemaTO, false);\n-                            window.setEntity(SchemaModalPage.Entity.ROLE);\n-                            return window;\n-                        }\n-                        });\n+                                    public Page createPage() {\n+                                        SchemaModalPage window =\n+                                                new SchemaModalPage(\n+                                                Schema.this, editRoleSchemaWin,\n+                                                schemaTO, false);\n+                                        window.setEntity(\n+                                                SchemaModalPage.Entity.ROLE);\n+                                        return window;\n+                                    }\n+                                });\n \n                         editRoleSchemaWin.show(target);\n                     }\n@@ -223,22 +241,22 @@ public Page createPage() {\n                 EditLinkPanel panel = new EditLinkPanel(componentId, model);\n                 panel.add(editLink);\n \n-                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE, \n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n                         allowedReadRoles);\n \n                 cellItem.add(panel);\n             }\n         });\n \n-        rolesColumns.add(new AbstractColumn<SchemaTO>(new Model<String>\n-                (getString(\"delete\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<SchemaTO>>\n-                    cellItem, String componentId, IModel<SchemaTO> model)\n-            {\n-                    final SchemaTO schemaTO = model.getObject();\n+        rolesColumns.add(new AbstractColumn<SchemaTO>(\n+                new Model<String>(getString(\"delete\"))) {\n+\n+            public void populateItem(Item<ICellPopulator<SchemaTO>> cellItem,\n+                    String componentId, IModel<SchemaTO> model) {\n \n-                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n+                final SchemaTO schemaTO = model.getObject();\n+\n+                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -252,13 +270,18 @@ public void onClick(AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.\n+                                getAjaxCallDecorator()) {\n+\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(CharSequence script) {\n-                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n-                                        +\"{\"+script+\"}\";\n+                            public CharSequence preDecorateScript(\n+                                    CharSequence script) {\n+\n+                                return \"if (confirm('\" + getString(\n+                                        \"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"}\";\n                             }\n                         };\n                     }\n@@ -283,20 +306,21 @@ public CharSequence preDecorateScript(CharSequence script) {\n         Form rolesPaginatorForm = new Form(\"RolesPaginatorForm\");\n \n         final DropDownChoice rowsRoleChooser = new DropDownChoice(\"rowsChooser\",\n-        new PropertyModel(this,\"rolePageRows\"),utility.paginatorRowsChooser());\n+                new PropertyModel(this, \"rolePageRows\"), utility.\n+                paginatorRowsChooser());\n \n-        rowsRoleChooser.add(new AjaxFormComponentUpdatingBehavior( \"onchange\" ){\n-          protected void onUpdate( AjaxRequestTarget target )\n-            {\n-              utility.updatePaginatorRows(Constants\n-                      .CONF_ROLE_SCHEMA_PAGINATOR_ROWS, rolePageRows);\n+        rowsRoleChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-              tableRoles.setRowsPerPage(rolePageRows);\n-              \n-              target.addComponent(roleSchemasContainer);\n-            }\n+            protected void onUpdate(AjaxRequestTarget target) {\n+                utility.updatePaginatorRows(\n+                        Constants.CONF_ROLE_SCHEMA_PAGINATOR_ROWS,\n+                        rolePageRows);\n+\n+                tableRoles.setRowsPerPage(rolePageRows);\n \n-          });\n+                target.addComponent(roleSchemasContainer);\n+            }\n+        });\n \n         rolesPaginatorForm.add(rowsRoleChooser);\n         add(rolesPaginatorForm);\n@@ -306,33 +330,42 @@ protected void onUpdate( AjaxRequestTarget target )\n         columnsRolesDer.add(new PropertyColumn(new Model(getString(\"name\")),\n                 \"name\", \"name\"));\n \n-        columnsRolesDer.add(new PropertyColumn(new Model(getString(\"expression\")),\n+        columnsRolesDer.add(new PropertyColumn(\n+                new Model(getString(\"expression\")),\n                 \"expression\", \"expression\"));\n \n-        columnsRolesDer.add(new PropertyColumn(new Model(getString(\"attributes\")),\n+        columnsRolesDer.add(new PropertyColumn(\n+                new Model(getString(\"attributes\")),\n                 \"derivedAttributes\", \"derivedAttributes\"));\n \n         columnsRolesDer.add(new AbstractColumn<DerivedSchemaTO>(\n                 new Model<String>(getString(\"edit\"))) {\n-            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n-                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n-            {\n-                    final DerivedSchemaTO schemaTO = model.getObject();\n \n-                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n+            public void populateItem(\n+                    Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n+                    String componentId, IModel<DerivedSchemaTO> model) {\n+\n+                final DerivedSchemaTO schemaTO = model.getObject();\n+\n+                AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n-                        editRoleDerivedSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n+                        editRoleDerivedSchemaWin.setPageCreator(\n+                                new ModalWindow.PageCreator() {\n \n-                        public Page createPage() {\n-                            DerivedSchemaModalPage form = new DerivedSchemaModalPage\n-                                    (Schema.this, editRoleDerivedSchemaWin, schemaTO, false);\n-                            form.setEntity(DerivedSchemaModalPage.Entity.ROLE);\n-                            return form;\n-                        }\n-                        });\n+                                    public Page createPage() {\n+                                        DerivedSchemaModalPage form =\n+                                                new DerivedSchemaModalPage(\n+                                                Schema.this,\n+                                                editRoleDerivedSchemaWin,\n+                                                schemaTO, false);\n+                                        form.setEntity(\n+                                                DerivedSchemaModalPage.Entity.ROLE);\n+                                        return form;\n+                                    }\n+                                });\n \n                         editRoleDerivedSchemaWin.show(target);\n                     }\n@@ -341,23 +374,24 @@ public Page createPage() {\n                 EditLinkPanel panel = new EditLinkPanel(componentId, model);\n \n                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                allowedReadRoles);\n+                        allowedReadRoles);\n \n                 panel.add(editLink);\n \n                 cellItem.add(panel);\n             }\n         });\n \n-        columnsRolesDer.add(new AbstractColumn<DerivedSchemaTO>(new Model<String>\n-                (getString(\"delete\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n-                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n-            {\n-                    final DerivedSchemaTO schemaTO = model.getObject();\n+        columnsRolesDer.add(new AbstractColumn<DerivedSchemaTO>(\n+                new Model<String>(getString(\"delete\"))) {\n+\n+            public void populateItem(\n+                    Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n+                    String componentId, IModel<DerivedSchemaTO> model) {\n \n-                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n+                final DerivedSchemaTO schemaTO = model.getObject();\n+\n+                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -371,23 +405,27 @@ public void onClick(AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.\n+                                getAjaxCallDecorator()) {\n+\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(CharSequence script) {\n-                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n-                                        +\"{\"+script+\"}\";\n+                            public CharSequence preDecorateScript(\n+                                    CharSequence script) {\n+\n+                                return \"if (confirm('\" + getString(\n+                                        \"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"}\";\n                             }\n                         };\n                     }\n                 };\n \n-\n                 DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n \n                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                allowedDeleteRoles);\n+                        allowedDeleteRoles);\n \n                 panel.add(deleteLink);\n \n@@ -404,20 +442,22 @@ public CharSequence preDecorateScript(CharSequence script) {\n         Form rolesDerPaginatorForm = new Form(\"RolesDerPaginatorForm\");\n \n         DropDownChoice rowsRolesDerChooser = new DropDownChoice(\"rowsChooser\",\n-        new PropertyModel(this,\"roleDerPageRows\"),utility.paginatorRowsChooser());\n+                new PropertyModel(this, \"roleDerPageRows\"), utility.\n+                paginatorRowsChooser());\n \n-        rowsRolesDerChooser.add(new AjaxFormComponentUpdatingBehavior( \"onchange\" ){\n-          protected void onUpdate( AjaxRequestTarget target )\n-            {\n-              utility.updatePaginatorRows(Constants.\n-                      CONF_ROLE_DER_SCHEMA_PAGINATOR_ROWS, rolePageRows);\n+        rowsRolesDerChooser.add(\n+                new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-              tableRolesDer.setRowsPerPage(roleDerPageRows);\n+                    protected void onUpdate(AjaxRequestTarget target) {\n+                        utility.updatePaginatorRows(\n+                                Constants.CONF_ROLE_DER_SCHEMA_PAGINATOR_ROWS,\n+                                rolePageRows);\n \n-              target.addComponent(roleDerivedSchemasContainer);\n-            }\n+                        tableRolesDer.setRowsPerPage(roleDerPageRows);\n \n-          });\n+                        target.addComponent(roleDerivedSchemasContainer);\n+                    }\n+                });\n \n         rolesDerPaginatorForm.add(rowsRolesDerChooser);\n         add(rolesDerPaginatorForm);\n@@ -434,29 +474,32 @@ protected void onUpdate( AjaxRequestTarget target )\n                 \"attributes\", \"attributes\"));\n \n         userColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n-                getString(\"edit\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<SchemaTO>>\n-                    cellItem, String componentId, IModel<SchemaTO> model)\n-            {\n-                    final SchemaTO schemaTO = model.getObject();\n+                getString(\"edit\"))) {\n+\n+            public void populateItem(\n+                    Item<ICellPopulator<SchemaTO>> cellItem,\n+                    String componentId, IModel<SchemaTO> model) {\n+\n+                final SchemaTO schemaTO = model.getObject();\n \n-                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n+                AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n-                        editUserSchemaWin.setPageCreator(new ModalWindow\n-                                .PageCreator() {\n+                        editUserSchemaWin.setPageCreator(\n+                                new ModalWindow.PageCreator() {\n \n-                        public Page createPage() {\n-                            SchemaModalPage form = new SchemaModalPage(\n-                                    Schema.this, editUserSchemaWin, schemaTO,\n-                                    false);\n-                            form.setEntity(SchemaModalPage.Entity.USER);\n-                            return form;\n-                        }\n-                        });\n+                                    public Page createPage() {\n+                                        SchemaModalPage form =\n+                                                new SchemaModalPage(\n+                                                Schema.this, editUserSchemaWin,\n+                                                schemaTO, false);\n+                                        form.setEntity(\n+                                                SchemaModalPage.Entity.USER);\n+                                        return form;\n+                                    }\n+                                });\n \n                         editUserSchemaWin.show(target);\n                     }\n@@ -465,23 +508,24 @@ public Page createPage() {\n                 EditLinkPanel panel = new EditLinkPanel(componentId, model);\n \n                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                allowedReadRoles);\n+                        allowedReadRoles);\n \n                 panel.add(editLink);\n \n                 cellItem.add(panel);\n             }\n         });\n \n-        userColumns.add(new AbstractColumn<SchemaTO>(new Model<String>\n-                (getString(\"delete\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<SchemaTO>>\n-                    cellItem, String componentId, IModel<SchemaTO> model)\n-            {\n-                    final SchemaTO schemaTO = model.getObject();\n+        userColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(getString(\n+                \"delete\"))) {\n+\n+            public void populateItem(\n+                    Item<ICellPopulator<SchemaTO>> cellItem,\n+                    String componentId, IModel<SchemaTO> model) {\n \n-                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n+                final SchemaTO schemaTO = model.getObject();\n+\n+                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -495,13 +539,18 @@ public void onClick(AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.\n+                                getAjaxCallDecorator()) {\n+\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(CharSequence script) {\n-                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n-                                        +\"{\"+script+\"}\";\n+                            public CharSequence preDecorateScript(\n+                                    CharSequence script) {\n+\n+                                return \"if (confirm('\" + getString(\n+                                        \"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"}\";\n                             }\n                         };\n                     }\n@@ -511,7 +560,7 @@ public CharSequence preDecorateScript(CharSequence script) {\n                 DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n \n                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                allowedDeleteRoles);\n+                        allowedDeleteRoles);\n \n                 panel.add(deleteLink);\n \n@@ -527,22 +576,22 @@ public CharSequence preDecorateScript(CharSequence script) {\n \n         Form usersPaginatorForm = new Form(\"UsersPaginatorForm\");\n \n-        final DropDownChoice usersRowsChooser = new DropDownChoice(\"rowsChooser\",\n-               new PropertyModel(this,\"userSchemaPageRows\"),\n-               utility.paginatorRowsChooser());\n+        final DropDownChoice usersRowsChooser = new DropDownChoice(\n+                \"rowsChooser\", new PropertyModel(this, \"userSchemaPageRows\"),\n+                utility.paginatorRowsChooser());\n \n         usersRowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-          protected void onUpdate( AjaxRequestTarget target )\n-            {\n-              utility.updatePaginatorRows(Constants.CONF_USER_SCHEMA_PAGINATOR_ROWS,\n-                      userSchemaPageRows);\n \n-              tableUsers.setRowsPerPage(userSchemaPageRows);\n+            protected void onUpdate(AjaxRequestTarget target) {\n+                utility.updatePaginatorRows(\n+                        Constants.CONF_USER_SCHEMA_PAGINATOR_ROWS,\n+                        userSchemaPageRows);\n \n-              target.addComponent(userSchemaContainer);\n-            }\n+                tableUsers.setRowsPerPage(userSchemaPageRows);\n \n-          });\n+                target.addComponent(userSchemaContainer);\n+            }\n+        });\n \n         usersPaginatorForm.add(usersRowsChooser);\n         add(usersPaginatorForm);\n@@ -552,35 +601,42 @@ protected void onUpdate( AjaxRequestTarget target )\n         columnsUsersDer.add(new PropertyColumn(new Model(getString(\"name\")),\n                 \"name\", \"name\"));\n \n-        columnsUsersDer.add(new PropertyColumn(new Model(getString(\"expression\")),\n+        columnsUsersDer.add(new PropertyColumn(\n+                new Model(getString(\"expression\")),\n                 \"expression\", \"expression\"));\n \n-        columnsUsersDer.add(new PropertyColumn(new Model(getString(\"attributes\")),\n+        columnsUsersDer.add(new PropertyColumn(\n+                new Model(getString(\"attributes\")),\n                 \"derivedAttributes\", \"derivedAttributes\"));\n \n         columnsUsersDer.add(new AbstractColumn<DerivedSchemaTO>(\n                 new Model<String>(getString(\"edit\"))) {\n-            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n-                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n-            {\n-                    final DerivedSchemaTO schemaTO = model.getObject();\n \n-                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n+            public void populateItem(\n+                    Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n+                    String componentId, IModel<DerivedSchemaTO> model) {\n+\n+                final DerivedSchemaTO schemaTO = model.getObject();\n+\n+                AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n                         editUserDerivedSchemaWin.setPageCreator(\n                                 new ModalWindow.PageCreator() {\n \n-                        public Page createPage() {\n-                            DerivedSchemaModalPage window = new DerivedSchemaModalPage\n-                                    (Schema.this, editUserDerivedSchemaWin,\n-                                    schemaTO, false);\n-                            window.setEntity(DerivedSchemaModalPage.Entity.USER);\n-                            return window;\n-                        }\n-                        });\n+                                    public Page createPage() {\n+                                        DerivedSchemaModalPage window =\n+                                                new DerivedSchemaModalPage(\n+                                                Schema.this,\n+                                                editUserDerivedSchemaWin,\n+                                                schemaTO, false);\n+                                        window.setEntity(\n+                                                DerivedSchemaModalPage.Entity.USER);\n+                                        return window;\n+                                    }\n+                                });\n \n                         editUserDerivedSchemaWin.show(target);\n                     }\n@@ -589,23 +645,24 @@ public Page createPage() {\n                 EditLinkPanel panel = new EditLinkPanel(componentId, model);\n \n                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                allowedReadRoles);\n+                        allowedReadRoles);\n \n                 panel.add(editLink);\n \n                 cellItem.add(panel);\n             }\n         });\n \n-        columnsUsersDer.add(new AbstractColumn<DerivedSchemaTO>(new Model<String>\n-                (getString(\"delete\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n-                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n-            {\n-                    final DerivedSchemaTO schemaTO = model.getObject();\n+        columnsUsersDer.add(new AbstractColumn<DerivedSchemaTO>(\n+                new Model<String>(getString(\"delete\"))) {\n+\n+            public void populateItem(\n+                    Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n+                    String componentId, IModel<DerivedSchemaTO> model) {\n \n-                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n+                final DerivedSchemaTO schemaTO = model.getObject();\n+\n+                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -619,13 +676,18 @@ public void onClick(AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.\n+                                getAjaxCallDecorator()) {\n+\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(CharSequence script) {\n-                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n-                                        +\"{\"+script+\"}\";\n+                            public CharSequence preDecorateScript(\n+                                    CharSequence script) {\n+\n+                                return \"if (confirm('\" + getString(\n+                                        \"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"}\";\n                             }\n                         };\n                     }\n@@ -635,7 +697,7 @@ public CharSequence preDecorateScript(CharSequence script) {\n                 DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n \n                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                allowedDeleteRoles);\n+                        allowedDeleteRoles);\n \n                 panel.add(deleteLink);\n \n@@ -652,60 +714,66 @@ public CharSequence preDecorateScript(CharSequence script) {\n \n         final DropDownChoice usersDerRowsChooser = new DropDownChoice(\n                 \"rowsChooser\",\n-                new PropertyModel(this,\"userDerSchemaPageRows\"),\n+                new PropertyModel(this, \"userDerSchemaPageRows\"),\n                 utility.paginatorRowsChooser());\n \n-        usersDerRowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-          protected void onUpdate( AjaxRequestTarget target )\n-            {\n-              utility.updatePaginatorRows(Constants.CONF_USER_DER_SCHEMA_PAGINATOR_ROWS,\n-                      userDerSchemaPageRows);\n+        usersDerRowsChooser.add(\n+                new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-              tableUsersDer.setRowsPerPage(userDerSchemaPageRows);\n+                    protected void onUpdate(AjaxRequestTarget target) {\n+                        utility.updatePaginatorRows(\n+                                Constants.CONF_USER_DER_SCHEMA_PAGINATOR_ROWS,\n+                                userDerSchemaPageRows);\n \n-              target.addComponent(userDerivedSchemaContainer);\n-            }\n+                        tableUsersDer.setRowsPerPage(userDerSchemaPageRows);\n \n-          });\n+                        target.addComponent(userDerivedSchemaContainer);\n+                    }\n+                });\n \n         usersDerPaginatorForm.add(usersDerRowsChooser);\n         add(usersDerPaginatorForm);\n \n-       List<IColumn> membershipsColumns = new ArrayList<IColumn>();\n+        List<IColumn> membershipsColumns = new ArrayList<IColumn>();\n \n         membershipsColumns.add(new PropertyColumn(new Model(getString(\"name\")),\n                 \"name\", \"name\"));\n \n         membershipsColumns.add(new PropertyColumn(new Model(getString(\"type\")),\n                 \"type\", \"type\"));\n \n-        membershipsColumns.add(new PropertyColumn(new Model(getString(\"attributes\")),\n+        membershipsColumns.add(new PropertyColumn(new Model(getString(\n+                \"attributes\")),\n                 \"attributes\", \"attributes\"));\n \n         membershipsColumns.add(new AbstractColumn<SchemaTO>(new Model<String>(\n-                getString(\"name\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<SchemaTO>>\n-                    cellItem, String componentId, IModel<SchemaTO> model)\n-            {\n-                    final SchemaTO schemaTO = model.getObject();\n+                getString(\"name\"))) {\n+\n+            public void populateItem(\n+                    Item<ICellPopulator<SchemaTO>> cellItem,\n+                    String componentId, IModel<SchemaTO> model) {\n+\n+                final SchemaTO schemaTO = model.getObject();\n \n-                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n+                AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n-                        editMembershipSchemaWin.setPageCreator(new ModalWindow\n-                                .PageCreator() {\n+                        editMembershipSchemaWin.setPageCreator(\n+                                new ModalWindow.PageCreator() {\n \n-                        public Page createPage() {\n-                            SchemaModalPage form = new SchemaModalPage(\n-                                    Schema.this, editMembershipSchemaWin,\n-                                    schemaTO, false);\n-                            form.setEntity(SchemaModalPage.Entity.MEMBERSHIP);\n-                            return form;\n-                        }\n-                        });\n+                                    public Page createPage() {\n+                                        SchemaModalPage form =\n+                                                new SchemaModalPage(\n+                                                Schema.this,\n+                                                editMembershipSchemaWin,\n+                                                schemaTO, false);\n+                                        form.setEntity(\n+                                                SchemaModalPage.Entity.MEMBERSHIP);\n+                                        return form;\n+                                    }\n+                                });\n \n                         editMembershipSchemaWin.show(target);\n                     }\n@@ -714,23 +782,24 @@ public Page createPage() {\n                 EditLinkPanel panel = new EditLinkPanel(componentId, model);\n \n                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                allowedReadRoles);\n+                        allowedReadRoles);\n \n                 panel.add(editLink);\n \n                 cellItem.add(panel);\n             }\n         });\n \n-        membershipsColumns.add(new AbstractColumn<SchemaTO>(new Model<String>\n-                (getString(\"delete\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<SchemaTO>>\n-                    cellItem, String componentId, IModel<SchemaTO> model)\n-            {\n-                    final SchemaTO schemaTO = model.getObject();\n+        membershipsColumns.add(new AbstractColumn<SchemaTO>(\n+                new Model<String>(getString(\"delete\"))) {\n+\n+            public void populateItem(\n+                    Item<ICellPopulator<SchemaTO>> cellItem,\n+                    String componentId, IModel<SchemaTO> model) {\n+\n+                final SchemaTO schemaTO = model.getObject();\n \n-                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n+                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -744,13 +813,17 @@ public void onClick(AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.\n+                                getAjaxCallDecorator()) {\n+\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(CharSequence script) {\n-                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n-                                        +\"{\"+script+\"}\";\n+                            public CharSequence preDecorateScript(\n+                                    CharSequence script) {\n+                                return \"if (confirm('\" + getString(\n+                                        \"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"}\";\n                             }\n                         };\n                     }\n@@ -759,7 +832,7 @@ public CharSequence preDecorateScript(CharSequence script) {\n                 DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n \n                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                allowedDeleteRoles);\n+                        allowedDeleteRoles);\n \n                 panel.add(deleteLink);\n \n@@ -769,67 +842,77 @@ public CharSequence preDecorateScript(CharSequence script) {\n \n \n         final AjaxFallbackDefaultDataTable tableMemberships =\n-                new AjaxFallbackDefaultDataTable(\"datatable\", membershipsColumns,\n+                new AjaxFallbackDefaultDataTable(\n+                \"datatable\", membershipsColumns,\n                 new SchemaProvider(SchemaType.MembershipSchema),\n                 membershipPageRows);\n \n-       Form membershipPaginatorForm = new Form(\"MembershipPaginatorForm\");\n+        Form membershipPaginatorForm = new Form(\"MembershipPaginatorForm\");\n \n         final DropDownChoice membershipRowsChooser = new DropDownChoice(\n                 \"rowsChooser\",\n-                new PropertyModel(this,\"membershipPageRows\"),\n+                new PropertyModel(this, \"membershipPageRows\"),\n                 utility.paginatorRowsChooser());\n \n-        membershipRowsChooser.add(new AjaxFormComponentUpdatingBehavior\n-                (\"onchange\") { protected void onUpdate\n-                        ( AjaxRequestTarget target ) {\n-              utility.updatePaginatorRows(\n-                      Constants.CONF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS,\n-                      membershipPageRows);\n+        membershipRowsChooser.add(new AjaxFormComponentUpdatingBehavior(\n+                \"onchange\") {\n \n-              tableMemberships.setRowsPerPage(membershipPageRows);\n+            protected void onUpdate(AjaxRequestTarget target) {\n+                utility.updatePaginatorRows(\n+                        Constants.CONF_MEMBERSHIP_SCHEMA_PAGINATOR_ROWS,\n+                        membershipPageRows);\n \n-              target.addComponent(membershipSchemaContainer);\n-            }\n+                tableMemberships.setRowsPerPage(membershipPageRows);\n \n-          });\n+                target.addComponent(membershipSchemaContainer);\n+            }\n+        });\n \n         membershipPaginatorForm.add(membershipRowsChooser);\n         add(membershipPaginatorForm);\n \n         List<IColumn> columnsMembershipsDer = new ArrayList<IColumn>();\n \n-        columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\"name\")),\n+        columnsMembershipsDer.add(new PropertyColumn(\n+                new Model(getString(\"name\")),\n                 \"name\", \"name\"));\n \n-        columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\"expression\")),\n+        columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\n+                \"expression\")),\n                 \"expression\", \"expression\"));\n \n-        columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\"attributes\")),\n+        columnsMembershipsDer.add(new PropertyColumn(new Model(getString(\n+                \"attributes\")),\n                 \"derivedAttributes\", \"derivedAttributes\"));\n \n         columnsMembershipsDer.add(new AbstractColumn<DerivedSchemaTO>(\n                 new Model<String>(getString(\"edit\"))) {\n-            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n-                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n-            {\n-                    final DerivedSchemaTO schemaTO = model.getObject();\n \n-                    AjaxLink editLink = new AjaxLink(\"editLink\") {\n+            public void populateItem(\n+                    Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n+                    String componentId, IModel<DerivedSchemaTO> model) {\n+\n+                final DerivedSchemaTO schemaTO = model.getObject();\n+\n+                AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n                         editMembershipDerivedSchemaWin.setPageCreator(\n                                 new ModalWindow.PageCreator() {\n \n-                        public Page createPage() {\n-                            DerivedSchemaModalPage window = new DerivedSchemaModalPage\n-                                    (Schema.this, editMembershipDerivedSchemaWin, schemaTO, false);\n-                            window.setEntity(DerivedSchemaModalPage.Entity.MEMBERSHIP);\n-                            return window;\n-                        }\n-                        });\n+                                    public Page createPage() {\n+                                        DerivedSchemaModalPage window =\n+                                                new DerivedSchemaModalPage(\n+                                                Schema.this,\n+                                                editMembershipDerivedSchemaWin,\n+                                                schemaTO, false);\n+                                        window.setEntity(\n+                                                DerivedSchemaModalPage.Entity.MEMBERSHIP);\n+                                        return window;\n+                                    }\n+                                });\n \n                         editMembershipDerivedSchemaWin.show(target);\n                     }\n@@ -838,23 +921,24 @@ public Page createPage() {\n                 EditLinkPanel panel = new EditLinkPanel(componentId, model);\n \n                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                allowedReadRoles);\n+                        allowedReadRoles);\n \n                 panel.add(editLink);\n \n                 cellItem.add(panel);\n             }\n         });\n \n-        columnsMembershipsDer.add(new AbstractColumn<DerivedSchemaTO>(new Model<String>\n-                (getString(\"delete\")))\n-        {\n-            public void populateItem(Item<ICellPopulator<DerivedSchemaTO>>\n-                    cellItem, String componentId, IModel<DerivedSchemaTO> model)\n-            {\n-                    final DerivedSchemaTO schemaTO = model.getObject();\n+        columnsMembershipsDer.add(new AbstractColumn<DerivedSchemaTO>(\n+                new Model<String>(getString(\"delete\"))) {\n+\n+            public void populateItem(\n+                    Item<ICellPopulator<DerivedSchemaTO>> cellItem,\n+                    String componentId, IModel<DerivedSchemaTO> model) {\n+\n+                final DerivedSchemaTO schemaTO = model.getObject();\n \n-                     AjaxLink deleteLink = new AjaxLink(\"deleteLink\"){\n+                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n@@ -869,13 +953,17 @@ public void onClick(AjaxRequestTarget target) {\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.\n+                                getAjaxCallDecorator()) {\n+\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(CharSequence script) {\n-                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n-                                        +\"{\"+script+\"}\";\n+                            public CharSequence preDecorateScript(\n+                                    CharSequence script) {\n+                                return \"if (confirm('\" + getString(\n+                                        \"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"}\";\n                             }\n                         };\n                     }\n@@ -885,7 +973,7 @@ public CharSequence preDecorateScript(CharSequence script) {\n                 DeleteLinkPanel panel = new DeleteLinkPanel(componentId, model);\n \n                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                allowedDeleteRoles);\n+                        allowedDeleteRoles);\n \n                 panel.add(deleteLink);\n \n@@ -894,30 +982,32 @@ public CharSequence preDecorateScript(CharSequence script) {\n         });\n \n         final AjaxFallbackDefaultDataTable tableMembershipsDer =\n-                new AjaxFallbackDefaultDataTable(\"datatable\", columnsMembershipsDer,\n-                new DerivedSchemaProvider(SchemaDerivedType.MembershipDerivedSchema),\n+                new AjaxFallbackDefaultDataTable(\"datatable\",\n+                columnsMembershipsDer,\n+                new DerivedSchemaProvider(\n+                SchemaDerivedType.MembershipDerivedSchema),\n                 membershipDerPageRows);\n \n         Form membershipDerPaginatorForm = new Form(\"MembershipDerPaginatorForm\");\n \n         final DropDownChoice membershipDerRowsChooser = new DropDownChoice(\n                 \"rowsChooser\",\n-                new PropertyModel(this,\"membershipDerPageRows\"),\n+                new PropertyModel(this, \"membershipDerPageRows\"),\n                 utility.paginatorRowsChooser());\n \n-        membershipDerRowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-          protected void onUpdate( AjaxRequestTarget target )\n-            {\n-              utility.updatePaginatorRows(\n-                      Constants.CONF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS,\n-                      membershipDerPageRows);\n+        membershipDerRowsChooser.add(new AjaxFormComponentUpdatingBehavior(\n+                \"onchange\") {\n \n-              tableMembershipsDer.setRowsPerPage(membershipDerPageRows);\n+            protected void onUpdate(AjaxRequestTarget target) {\n+                utility.updatePaginatorRows(\n+                        Constants.CONF_MEMBERSHIP_DER_SCHEMA_PAGINATOR_ROWS,\n+                        membershipDerPageRows);\n \n-              target.addComponent(membershipDerivedSchemaContainer);\n-            }\n+                tableMembershipsDer.setRowsPerPage(membershipDerPageRows);\n \n-          });\n+                target.addComponent(membershipDerivedSchemaContainer);\n+            }\n+        });\n \n         membershipDerPaginatorForm.add(membershipDerRowsChooser);\n         add(membershipDerPaginatorForm);\n@@ -926,26 +1016,30 @@ protected void onUpdate( AjaxRequestTarget target )\n         roleSchemasContainer.add(tableRoles);\n         roleSchemasContainer.setOutputMarkupId(true);\n \n-        roleDerivedSchemasContainer = new WebMarkupContainer(\"roleDerivedSchemasContainer\");\n+        roleDerivedSchemasContainer = new WebMarkupContainer(\n+                \"roleDerivedSchemasContainer\");\n         roleDerivedSchemasContainer.add(tableRolesDer);\n         roleDerivedSchemasContainer.setOutputMarkupId(true);\n \n         userSchemaContainer = new WebMarkupContainer(\"userSchemaContainer\");\n         userSchemaContainer.add(tableUsers);\n         userSchemaContainer.setOutputMarkupId(true);\n \n-        userDerivedSchemaContainer = new WebMarkupContainer(\"userDerivedSchemaContainer\");\n+        userDerivedSchemaContainer = new WebMarkupContainer(\n+                \"userDerivedSchemaContainer\");\n         userDerivedSchemaContainer.add(tableUsersDer);\n         userDerivedSchemaContainer.setOutputMarkupId(true);\n \n-        membershipSchemaContainer = new WebMarkupContainer(\"membershipSchemaContainer\");\n+        membershipSchemaContainer = new WebMarkupContainer(\n+                \"membershipSchemaContainer\");\n         membershipSchemaContainer.add(tableMemberships);\n         membershipSchemaContainer.setOutputMarkupId(true);\n \n-        membershipDerivedSchemaContainer = new WebMarkupContainer(\"membershipDerivedSchemaContainer\");\n+        membershipDerivedSchemaContainer = new WebMarkupContainer(\n+                \"membershipDerivedSchemaContainer\");\n         membershipDerivedSchemaContainer.add(tableMembershipsDer);\n         membershipDerivedSchemaContainer.setOutputMarkupId(true);\n-        \n+\n         add(roleSchemasContainer);\n         add(roleDerivedSchemasContainer);\n \n@@ -970,19 +1064,19 @@ protected void onUpdate( AjaxRequestTarget target )\n         editUserDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         editUserDerivedSchemaWin.setPageMapName(\"modal-4\");\n         editUserDerivedSchemaWin.setCookieName(\"modal-4\");\n-        \n+\n         createRoleSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         createRoleSchemaWin.setPageMapName(\"modal-5\");\n         createRoleSchemaWin.setCookieName(\"modal-5\");\n-        \n+\n         editRoleSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         editRoleSchemaWin.setPageMapName(\"modal-6\");\n         editRoleSchemaWin.setCookieName(\"modal-6\");\n-        \n+\n         createRoleDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         createRoleDerivedSchemaWin.setPageMapName(\"modal-7\");\n         createRoleDerivedSchemaWin.setCookieName(\"modal-7\");\n-        \n+\n         editRoleDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n         editRoleDerivedSchemaWin.setPageMapName(\"modal-8\");\n         editRoleDerivedSchemaWin.setCookieName(\"modal-8\");\n@@ -995,152 +1089,195 @@ protected void onUpdate( AjaxRequestTarget target )\n         createMembershipSchemaWin.setPageMapName(\"modal-10\");\n         createMembershipSchemaWin.setCookieName(\"modal-10\");\n \n-        createMembershipDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        createMembershipDerivedSchemaWin.setCssClassName(\n+                ModalWindow.CSS_CLASS_GRAY);\n         createMembershipDerivedSchemaWin.setPageMapName(\"modal-11\");\n         createMembershipDerivedSchemaWin.setCookieName(\"modal-11\");\n \n-        editMembershipDerivedSchemaWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        editMembershipDerivedSchemaWin.setCssClassName(\n+                ModalWindow.CSS_CLASS_GRAY);\n         editMembershipDerivedSchemaWin.setPageMapName(\"modal-12\");\n         editMembershipDerivedSchemaWin.setCookieName(\"modal-12\");\n \n         setWindowClosedCallback(createUserSchemaWin, userSchemaContainer);\n         setWindowClosedCallback(editUserSchemaWin, userSchemaContainer);\n \n-        setWindowClosedCallback(createUserDerivedSchemaWin, userDerivedSchemaContainer);\n-        setWindowClosedCallback(editUserDerivedSchemaWin, userDerivedSchemaContainer);\n+        setWindowClosedCallback(createUserDerivedSchemaWin,\n+                userDerivedSchemaContainer);\n+        setWindowClosedCallback(editUserDerivedSchemaWin,\n+                userDerivedSchemaContainer);\n \n         setWindowClosedCallback(createRoleSchemaWin, roleSchemasContainer);\n         setWindowClosedCallback(editRoleSchemaWin, roleSchemasContainer);\n \n-        setWindowClosedCallback(createRoleDerivedSchemaWin, roleDerivedSchemasContainer);\n-        setWindowClosedCallback(editRoleDerivedSchemaWin, roleDerivedSchemasContainer);\n+        setWindowClosedCallback(createRoleDerivedSchemaWin,\n+                roleDerivedSchemasContainer);\n+        setWindowClosedCallback(editRoleDerivedSchemaWin,\n+                roleDerivedSchemasContainer);\n \n-        setWindowClosedCallback(createMembershipSchemaWin, membershipSchemaContainer);\n-        setWindowClosedCallback(editMembershipSchemaWin, membershipSchemaContainer);\n+        setWindowClosedCallback(createMembershipSchemaWin,\n+                membershipSchemaContainer);\n+        setWindowClosedCallback(editMembershipSchemaWin,\n+                membershipSchemaContainer);\n \n-        setWindowClosedCallback(createMembershipDerivedSchemaWin, membershipDerivedSchemaContainer);\n-        setWindowClosedCallback(editMembershipDerivedSchemaWin, membershipDerivedSchemaContainer);\n+        setWindowClosedCallback(createMembershipDerivedSchemaWin,\n+                membershipDerivedSchemaContainer);\n+        setWindowClosedCallback(editMembershipDerivedSchemaWin,\n+                membershipDerivedSchemaContainer);\n \n-        AjaxLink createRoleSchemaWinLink = new AjaxLink(\"createRoleSchemaWinLink\") {\n+        AjaxLink createRoleSchemaWinLink = new AjaxLink(\n+                \"createRoleSchemaWinLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n \n-                createRoleSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                    public Page createPage() {\n-                        SchemaModalPage form = new SchemaModalPage(Schema.this,\n-                                new ModalWindow(\"createRoleSchemaWin\"), null, true);\n-                        form.setEntity(SchemaModalPage.Entity.ROLE);\n-                        return form;\n-                    }\n-                });\n+                createRoleSchemaWin.setPageCreator(\n+                        new ModalWindow.PageCreator() {\n+\n+                            public Page createPage() {\n+                                SchemaModalPage form = new SchemaModalPage(\n+                                        Schema.this,\n+                                        new ModalWindow(\"createRoleSchemaWin\"),\n+                                        null,\n+                                        true);\n+                                form.setEntity(SchemaModalPage.Entity.ROLE);\n+                                return form;\n+                            }\n+                        });\n \n                 createRoleSchemaWin.show(target);\n             }\n         };\n \n-        MetaDataRoleAuthorizationStrategy.authorize(createRoleSchemaWinLink, ENABLE,\n-        allowedCreateRoles);\n-        \n+        MetaDataRoleAuthorizationStrategy.authorize(createRoleSchemaWinLink,\n+                ENABLE,\n+                allowedCreateRoles);\n+\n         add(createRoleSchemaWinLink);\n \n-        \n-       AjaxLink createRoleDerivedSchemaWinLink = new AjaxLink(\"createRoleDerivedSchemaWinLink\") {\n+\n+        AjaxLink createRoleDerivedSchemaWinLink = new AjaxLink(\n+                \"createRoleDerivedSchemaWinLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n \n-                createRoleDerivedSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                    public Page createPage() {\n-                        DerivedSchemaModalPage form = new DerivedSchemaModalPage(Schema.this,\n-                                new ModalWindow(\"createRoleDerivedSchemaWin\"), null, true);\n-                        form.setEntity(DerivedSchemaModalPage.Entity.ROLE);\n-                        return form;\n-                    }\n-                });\n+                createRoleDerivedSchemaWin.setPageCreator(\n+                        new ModalWindow.PageCreator() {\n+\n+                            public Page createPage() {\n+                                DerivedSchemaModalPage form =\n+                                        new DerivedSchemaModalPage(\n+                                        Schema.this,\n+                                        new ModalWindow(\n+                                        \"createRoleDerivedSchemaWin\"),\n+                                        null, true);\n+                                form.setEntity(\n+                                        DerivedSchemaModalPage.Entity.ROLE);\n+                                return form;\n+                            }\n+                        });\n \n                 createRoleDerivedSchemaWin.show(target);\n             }\n         };\n-        \n-        MetaDataRoleAuthorizationStrategy.authorize(createRoleDerivedSchemaWinLink, ENABLE, \n-        allowedCreateRoles);\n-        \n+\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                createRoleDerivedSchemaWinLink, ENABLE,\n+                allowedCreateRoles);\n+\n         add(createRoleDerivedSchemaWinLink);\n \n-        AjaxLink createUserSchemaWinLink = new AjaxLink(\"createUserSchemaWinLink\") {\n+        AjaxLink createUserSchemaWinLink = new AjaxLink(\n+                \"createUserSchemaWinLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n \n-                createUserSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                    public Page createPage() {\n-                        SchemaModalPage form = new SchemaModalPage(Schema.this,\n-                                new ModalWindow(\"createUserSchemaWin\"), null, true);\n-                        form.setEntity(SchemaModalPage.Entity.USER);\n-                        return form;\n-                    }\n-                });\n+                createUserSchemaWin.setPageCreator(\n+                        new ModalWindow.PageCreator() {\n+\n+                            public Page createPage() {\n+                                SchemaModalPage form = new SchemaModalPage(\n+                                        Schema.this,\n+                                        new ModalWindow(\"createUserSchemaWin\"),\n+                                        null,\n+                                        true);\n+                                form.setEntity(SchemaModalPage.Entity.USER);\n+                                return form;\n+                            }\n+                        });\n \n                 createUserSchemaWin.show(target);\n             }\n         };\n-        \n+\n         add(createUserSchemaWinLink);\n \n-        MetaDataRoleAuthorizationStrategy.authorize(createUserSchemaWinLink, ENABLE,\n-        allowedCreateRoles);\n+        MetaDataRoleAuthorizationStrategy.authorize(createUserSchemaWinLink,\n+                ENABLE,\n+                allowedCreateRoles);\n \n-        AjaxLink createUserDerSchemaWinLink = new AjaxLink(\"createUserDerSchemaWinLink\") {\n+        AjaxLink createUserDerSchemaWinLink = new AjaxLink(\n+                \"createUserDerSchemaWinLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n \n-            createUserDerivedSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n+                createUserDerivedSchemaWin.setPageCreator(\n+                        new ModalWindow.PageCreator() {\n \n-            public Page createPage() {\n-                DerivedSchemaModalPage form = new DerivedSchemaModalPage(Schema.this,\n-                        new ModalWindow(\"createUserDerSchemaModalWin\"), null, true);\n-                form.setEntity(DerivedSchemaModalPage.Entity.USER);\n+                            public Page createPage() {\n+                                DerivedSchemaModalPage form =\n+                                        new DerivedSchemaModalPage(\n+                                        Schema.this,\n+                                        new ModalWindow(\n+                                        \"createUserDerSchemaModalWin\"),\n+                                        null, true);\n+                                form.setEntity(\n+                                        DerivedSchemaModalPage.Entity.USER);\n \n-                return form;\n-            }\n-            });\n+                                return form;\n+                            }\n+                        });\n \n-            createUserDerivedSchemaWin.show(target);\n+                createUserDerivedSchemaWin.show(target);\n             }\n         };\n-        \n-        MetaDataRoleAuthorizationStrategy.authorize(createUserDerSchemaWinLink, \n+\n+        MetaDataRoleAuthorizationStrategy.authorize(createUserDerSchemaWinLink,\n                 ENABLE, allowedCreateRoles);\n-        \n+\n         add(createUserDerSchemaWinLink);\n \n-        \n+\n         AjaxLink createMembershipSchemaWinLink = new AjaxLink(\n-            \"createMembershipSchemaWinLink\") {\n+                \"createMembershipSchemaWinLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n \n-                createMembershipSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                    public Page createPage() {\n-                        SchemaModalPage form = new SchemaModalPage(Schema.this,\n-                                new ModalWindow(\"createMembershipSchemaModalWin\"), null, true);\n-                        form.setEntity(SchemaModalPage.Entity.MEMBERSHIP);\n-                        return form;\n-                    }\n-                });\n+                createMembershipSchemaWin.setPageCreator(\n+                        new ModalWindow.PageCreator() {\n+\n+                            public Page createPage() {\n+                                SchemaModalPage form = new SchemaModalPage(\n+                                        Schema.this,\n+                                        new ModalWindow(\n+                                        \"createMembershipSchemaModalWin\"),\n+                                        null, true);\n+                                form.setEntity(\n+                                        SchemaModalPage.Entity.MEMBERSHIP);\n+                                return form;\n+                            }\n+                        });\n \n                 createMembershipSchemaWin.show(target);\n             }\n         };\n \n-        MetaDataRoleAuthorizationStrategy.authorize(createMembershipSchemaWinLink,\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                createMembershipSchemaWinLink,\n                 ENABLE, allowedCreateRoles);\n \n         add(createMembershipSchemaWinLink);\n@@ -1151,25 +1288,31 @@ public Page createPage() {\n             @Override\n             public void onClick(AjaxRequestTarget target) {\n \n-            createMembershipDerivedSchemaWin.setPageCreator(new ModalWindow.PageCreator() {\n+                createMembershipDerivedSchemaWin.setPageCreator(\n+                        new ModalWindow.PageCreator() {\n \n-            public Page createPage() {\n-                DerivedSchemaModalPage form = new DerivedSchemaModalPage(Schema.this,\n-                        new ModalWindow(\"createMembershipDerivedSchemaWin\"),\n-                        null, true);\n-                form.setEntity(DerivedSchemaModalPage.Entity.MEMBERSHIP);\n+                            public Page createPage() {\n+                                DerivedSchemaModalPage form =\n+                                        new DerivedSchemaModalPage(\n+                                        Schema.this,\n+                                        new ModalWindow(\n+                                        \"createMembershipDerivedSchemaWin\"),\n+                                        null, true);\n+                                form.setEntity(\n+                                        DerivedSchemaModalPage.Entity.MEMBERSHIP);\n \n-                return form;\n-            }\n-            });\n+                                return form;\n+                            }\n+                        });\n \n-            createMembershipDerivedSchemaWin.show(target);\n+                createMembershipDerivedSchemaWin.show(target);\n             }\n         };\n \n-        MetaDataRoleAuthorizationStrategy.authorize(createMembershipDerSchemaWinLink,\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                createMembershipDerSchemaWinLink,\n                 ENABLE, allowedCreateRoles);\n-        \n+\n         add(createMembershipDerSchemaWinLink);\n     }\n \n@@ -1182,16 +1325,17 @@ public void setWindowClosedCallback(ModalWindow window,\n             final WebMarkupContainer container) {\n \n         window.setWindowClosedCallback(\n-            new ModalWindow.WindowClosedCallback() {\n-                public void onClose(AjaxRequestTarget target) {\n-                    target.addComponent(container);\n-                    if(operationResult){\n-                        info(getString(\"operation_succeded\"));  \n-                        target.addComponent(feedbackPanel);\n-                        operationResult = false;\n+                new ModalWindow.WindowClosedCallback() {\n+\n+                    public void onClose(AjaxRequestTarget target) {\n+                        target.addComponent(container);\n+                        if (operationResult) {\n+                            info(getString(\"operation_succeded\"));\n+                            target.addComponent(feedbackPanel);\n+                            operationResult = false;\n+                        }\n                     }\n-                }\n-            });\n+                });\n     }\n \n     public boolean isOperationResult() {\n@@ -1214,7 +1358,7 @@ public SchemaProvider(SchemaType schema) {\n             this.schema = schema;\n \n             //Default sorting\n-            setSort(\"name\",true);\n+            setSort(\"name\", true);\n         }\n \n         @Override\n@@ -1223,7 +1367,7 @@ public Iterator<SchemaTO> iterator(int first, int count) {\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first+count).iterator();\n+            return list.subList(first, first + count).iterator();\n         }\n \n         @Override\n@@ -1232,8 +1376,7 @@ public int size() {\n         }\n \n         @Override\n-        public IModel<SchemaTO> model(final SchemaTO\n-                user) {\n+        public IModel<SchemaTO> model(final SchemaTO user) {\n             return new AbstractReadOnlyModel<SchemaTO>() {\n \n                 @Override\n@@ -1243,48 +1386,51 @@ public SchemaTO getObject() {\n             };\n         }\n \n-        public List<SchemaTO> getAttributesSchemaListDB(){\n+        public List<SchemaTO> getAttributesSchemaListDB() {\n \n             List<SchemaTO> list = null;\n \n-            if(schema == SchemaType.RoleSchema)\n+            if (schema == SchemaType.RoleSchema) {\n                 list = restClient.getAllRoleSchemas();\n-            else if (schema == SchemaType.UserSchema)\n+            } else if (schema == SchemaType.UserSchema) {\n                 list = restClient.getAllUserSchemas();\n-            else if (schema == SchemaType.MembershipSchema)\n+            } else if (schema == SchemaType.MembershipSchema) {\n                 list = restClient.getAllMemberhipSchemas();\n+            }\n \n             return list;\n         }\n \n         class SortableDataProviderComparator implements\n                 Comparator<SchemaTO>, Serializable {\n+\n             public int compare(final SchemaTO o1,\n                     final SchemaTO o2) {\n-                    PropertyModel<Comparable> model1 =\n-                            new PropertyModel<Comparable>(o1, getSort()\n-                            .getProperty());\n-                    PropertyModel<Comparable> model2 =\n-                            new PropertyModel<Comparable>(o2, getSort()\n-                            .getProperty());\n-\n-                    int result = 1;\n-\n-                    if(model1.getObject() == null && model2.getObject() == null)\n-                        result = 0;\n-                    else if(model1.getObject() == null)\n-                        result = 1;\n-                    else if(model2.getObject() == null)\n-                        result = -1;\n-                    else\n-                        result = ((Comparable)model1.getObject()).compareTo(\n-                                model2.getObject());\n-\n-                    result = getSort().isAscending() ? result : -result;\n-\n-                    return result;\n+                PropertyModel<Comparable> model1 =\n+                        new PropertyModel<Comparable>(o1,\n+                        getSort().getProperty());\n+                PropertyModel<Comparable> model2 =\n+                        new PropertyModel<Comparable>(o2,\n+                        getSort().getProperty());\n+\n+                int result = 1;\n+\n+                if (model1.getObject() == null && model2.getObject() == null) {\n+                    result = 0;\n+                } else if (model1.getObject() == null) {\n+                    result = 1;\n+                } else if (model2.getObject() == null) {\n+                    result = -1;\n+                } else {\n+                    result = ((Comparable) model1.getObject()).compareTo(\n+                            model2.getObject());\n+                }\n+\n+                result = getSort().isAscending() ? result : -result;\n+\n+                return result;\n             }\n-\t}\n+        }\n     }\n \n     class DerivedSchemaProvider extends SortableDataProvider<DerivedSchemaTO> {\n@@ -1299,7 +1445,7 @@ public DerivedSchemaProvider(SchemaDerivedType schema) {\n             this.schema = schema;\n \n             //Default sorting\n-            setSort(\"name\",true);\n+            setSort(\"name\", true);\n         }\n \n         @Override\n@@ -1308,7 +1454,7 @@ public Iterator<DerivedSchemaTO> iterator(int first, int count) {\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first+count).iterator();\n+            return list.subList(first, first + count).iterator();\n         }\n \n         @Override\n@@ -1317,8 +1463,7 @@ public int size() {\n         }\n \n         @Override\n-        public IModel<DerivedSchemaTO> model(final DerivedSchemaTO\n-                schema) {\n+        public IModel<DerivedSchemaTO> model(final DerivedSchemaTO schema) {\n             return new AbstractReadOnlyModel<DerivedSchemaTO>() {\n \n                 @Override\n@@ -1328,47 +1473,50 @@ public DerivedSchemaTO getObject() {\n             };\n         }\n \n-        public List<DerivedSchemaTO> getAttributesSchemaListDB(){\n+        public List<DerivedSchemaTO> getAttributesSchemaListDB() {\n \n-        List<DerivedSchemaTO> list = null;\n+            List<DerivedSchemaTO> list = null;\n \n-        if(schema == SchemaDerivedType.RoleDerivedSchema)\n-            list = restClient.getAllRoleDerivedSchemas();\n-        else if (schema == SchemaDerivedType.UserDerivedSchema)\n-            list = restClient.getAllUserDerivedSchemas();\n-        else if (schema == SchemaDerivedType.MembershipDerivedSchema)\n-            list = restClient.getAllMembershipDerivedSchemas();\n+            if (schema == SchemaDerivedType.RoleDerivedSchema) {\n+                list = restClient.getAllRoleDerivedSchemas();\n+            } else if (schema == SchemaDerivedType.UserDerivedSchema) {\n+                list = restClient.getAllUserDerivedSchemas();\n+            } else if (schema == SchemaDerivedType.MembershipDerivedSchema) {\n+                list = restClient.getAllMembershipDerivedSchemas();\n+            }\n \n-        return list;\n+            return list;\n         }\n \n         class SortableDataProviderComparator implements\n                 Comparator<DerivedSchemaTO>, Serializable {\n+\n             public int compare(final DerivedSchemaTO o1,\n                     final DerivedSchemaTO o2) {\n-                    PropertyModel<Comparable> model1 =\n-                            new PropertyModel<Comparable>(o1, getSort()\n-                            .getProperty());\n-                    PropertyModel<Comparable> model2 =\n-                            new PropertyModel<Comparable>(o2, getSort()\n-                            .getProperty());\n-\n-                    int result = 1;\n-\n-                    if(model1.getObject() == null && model2.getObject() == null)\n-                        result = 0;\n-                    else if(model1.getObject() == null)\n-                        result = 1;\n-                    else if(model2.getObject() == null)\n-                        result = -1;\n-                    else\n-                        result = ((Comparable)model1.getObject()).compareTo(\n-                                model2.getObject());\n-\n-                    result = getSort().isAscending() ? result : -result;\n-\n-                    return result;\n+                PropertyModel<Comparable> model1 =\n+                        new PropertyModel<Comparable>(o1,\n+                        getSort().getProperty());\n+                PropertyModel<Comparable> model2 =\n+                        new PropertyModel<Comparable>(o2,\n+                        getSort().getProperty());\n+\n+                int result = 1;\n+\n+                if (model1.getObject() == null && model2.getObject() == null) {\n+                    result = 0;\n+                } else if (model1.getObject() == null) {\n+                    result = 1;\n+                } else if (model2.getObject() == null) {\n+                    result = -1;\n+                } else {\n+                    result = ((Comparable) model1.getObject()).compareTo(\n+                            model2.getObject());\n+                }\n+\n+                result = getSort().isAscending() ? result : -result;\n+\n+                return result;\n             }\n-\t}\n+        }\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"4f1df44573c00a12195500195d2a34de549464d3","filename":"console/src/main/java/org/syncope/console/pages/SyncopeModalPage.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncopeModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncopeModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FSyncopeModalPage.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -16,14 +16,22 @@\n \n import org.apache.wicket.markup.html.WebPage;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.syncope.console.commons.XMLRolesReader;\n \n /**\n  * Syncope Modal Window.\n  */\n public class SyncopeModalPage extends WebPage {\n \n-    @SpringBean(name = \"xmlRolesReader\")\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG = LoggerFactory.getLogger(\n+            BasePage.class);\n+\n+    @SpringBean\n     protected XMLRolesReader xmlRolesReader;\n \n }"},{"sha":"dbea2fec208c7bcbf389eb9b9a933feb4b05aaf7","filename":"console/src/main/java/org/syncope/console/pages/TaskModalPage.java","status":"modified","additions":135,"deletions":129,"changes":264,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTaskModalPage.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -25,17 +25,14 @@\n import java.util.Iterator;\n import java.util.List;\n import org.syncope.console.commons.Constants;\n-import org.apache.wicket.Application;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.IAjaxCallDecorator;\n import org.apache.wicket.ajax.calldecorator.AjaxPreprocessingCallDecorator;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n-import org.apache.wicket.authorization.strategies.role.metadata\n-        .MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.datetime.DateConverter;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table\n-        .AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n@@ -52,11 +49,11 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.syncope.client.to.TaskExecutionTO;\n import org.syncope.client.to.TaskTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n-import org.syncope.console.SyncopeApplication;\n-import org.syncope.console.rest.TasksRestClient;\n+import org.syncope.console.rest.TaskRestClient;\n import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n import org.syncope.console.wicket.markup.html.form.LinkPanel;\n \n@@ -65,18 +62,19 @@\n  */\n public class TaskModalPage extends SyncopeModalPage {\n \n-    public TextField id;\n-    \n-    public TextField accountId;\n-    \n-    public TextField resource;\n+    private TextField id;\n \n-    public Label dialogContent;\n+    private TextField accountId;\n \n-    TasksRestClient taskRestClient;\n+    private TextField resource;\n+\n+    private Label dialogContent;\n+\n+    @SpringBean\n+    private TaskRestClient taskRestClient;\n+\n+    private WebMarkupContainer container;\n \n-    WebMarkupContainer container;\n-    \n     /**\n      *\n      * @param basePage base\n@@ -87,10 +85,7 @@ public class TaskModalPage extends SyncopeModalPage {\n     public TaskModalPage(final BasePage basePage, final ModalWindow window,\n             final TaskTO taskTO) {\n \n-        taskRestClient = (TasksRestClient) ((SyncopeApplication) Application\n-                .get()).getApplicationContext().getBean(\"tasksRestClient\");\n-\n-        dialogContent = new Label(\"dialogContent\",new Model<String>(\"\"));\n+        dialogContent = new Label(\"dialogContent\", new Model<String>(\"\"));\n \n         add(dialogContent.setOutputMarkupId(true));\n \n@@ -127,95 +122,101 @@ public TaskModalPage(final BasePage basePage, final ModalWindow window,\n         columns.add(new PropertyColumn(new Model(getString(\"status\")),\n                 \"status\", \"status\"));\n \n-        columns.add(new AbstractColumn<TaskExecutionTO>(new Model<String>\n-                (getString(\"message\"))) {\n-            public void populateItem(Item<ICellPopulator<TaskExecutionTO>>\n-                    cellItem, String componentId, IModel<TaskExecutionTO> model)\n-            {\n-                    final TaskExecutionTO taskExecutionTO = model.getObject();\n+        columns.add(new AbstractColumn<TaskExecutionTO>(\n+                new Model<String>(getString(\"message\"))) {\n+\n+            public void populateItem(\n+                    Item<ICellPopulator<TaskExecutionTO>> cellItem,\n+                    String componentId, IModel<TaskExecutionTO> model) {\n \n-                    AjaxLink messageLink = new AjaxLink(\"link\") {\n+                final TaskExecutionTO taskExecutionTO = model.getObject();\n+\n+                AjaxLink messageLink = new AjaxLink(\"link\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n-                       dialogContent.setDefaultModelObject(\n-                               taskExecutionTO.getMessage());\n+                        dialogContent.setDefaultModelObject(\n+                                taskExecutionTO.getMessage());\n \n-                       target.addComponent(dialogContent);\n+                        target.addComponent(dialogContent);\n \n-                       target.appendJavascript(\"jQuery('#dialog')\" +\n-                               \".dialog('open')\");\n+                        target.appendJavascript(\"jQuery('#dialog')\"\n+                                + \".dialog('open')\");\n                     }\n                 };\n \n-               messageLink.add(new Label(\"linkTitle\",getString(\"showMessage\")));\n+                messageLink.add(new Label(\"linkTitle\",\n+                        getString(\"showMessage\")));\n \n-               LinkPanel panel = new LinkPanel(componentId);\n-               panel.add(messageLink);\n+                LinkPanel panel = new LinkPanel(componentId);\n+                panel.add(messageLink);\n \n-               cellItem.add(panel);\n+                cellItem.add(panel);\n             }\n         });\n \n-        columns.add(new AbstractColumn<TaskExecutionTO>(new Model<String>\n-                (getString(\"delete\"))) {\n-            public void populateItem(Item<ICellPopulator<TaskExecutionTO>>\n-                    cellItem, String componentId, IModel<TaskExecutionTO> model)\n-            {\n-                    final TaskExecutionTO taskExecutionTO = model.getObject();\n+        columns.add(new AbstractColumn<TaskExecutionTO>(\n+                new Model<String>(getString(\"delete\"))) {\n+\n+            public void populateItem(\n+                    Item<ICellPopulator<TaskExecutionTO>> cellItem,\n+                    String componentId, IModel<TaskExecutionTO> model) {\n \n-                    AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n+                final TaskExecutionTO taskExecutionTO = model.getObject();\n+\n+                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n                         boolean res = false;\n \n                         try {\n-                        res = taskRestClient.deleteTaskExecution(\n-                                taskExecutionTO.getId());\n-                        }\n-                        catch (SyncopeClientCompositeErrorException scce) {\n+                            res = taskRestClient.deleteTaskExecution(\n+                                    taskExecutionTO.getId());\n+                        } catch (SyncopeClientCompositeErrorException scce) {\n                             error(scce.getMessage());\n                         }\n \n-                        if(res)\n+                        if (res) {\n                             info(getString(\"operation_succeded\"));\n+                        }\n \n                         target.addComponent(form.get(\"feedback\"));\n                         target.addComponent(container);\n                     }\n \n-                   @Override\n+                    @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super\n-                                .getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.\n+                                getAjaxCallDecorator()) {\n+\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n                             public CharSequence preDecorateScript(\n                                     CharSequence script) {\n-                                return \"if (confirm('\"+\n-                                        getString(\"confirmDelete\")+\"'))\"\n-                                        +\"{\"+script+\"}\";\n+                                return \"if (confirm('\"\n+                                        + getString(\"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"}\";\n                             }\n                         };\n                     }\n-                 };\n-                    DeleteLinkPanel panel = new DeleteLinkPanel(componentId,\n-                            model);\n-                    panel.add(deleteLink);\n+                };\n+                DeleteLinkPanel panel = new DeleteLinkPanel(componentId,\n+                        model);\n+                panel.add(deleteLink);\n \n-                 String allowedRoles = null;\n+                String allowedRoles = null;\n \n-                 allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Tasks\",\n-                         \"delete\");\n+                allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Tasks\",\n+                        \"delete\");\n \n-                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                 allowedRoles);\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        allowedRoles);\n \n-                 cellItem.add(panel);\n+                cellItem.add(panel);\n             }\n         });\n \n@@ -232,7 +233,7 @@ public CharSequence preDecorateScript(\n         add(form);\n     }\n \n-  class TaskExecutionsProvider extends SortableDataProvider<TaskExecutionTO> {\n+    class TaskExecutionsProvider extends SortableDataProvider<TaskExecutionTO> {\n \n         private SortableDataProviderComparator comparator =\n                 new SortableDataProviderComparator();\n@@ -242,7 +243,7 @@ class TaskExecutionsProvider extends SortableDataProvider<TaskExecutionTO> {\n         public TaskExecutionsProvider(TaskTO taskTO) {\n             //Default sorting\n             this.taskTO = taskTO;\n-            setSort(\"startDate\",true);\n+            setSort(\"startDate\", true);\n         }\n \n         @Override\n@@ -251,7 +252,7 @@ public Iterator<TaskExecutionTO> iterator(int first, int count) {\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first+count).iterator();\n+            return list.subList(first, first + count).iterator();\n         }\n \n         @Override\n@@ -260,8 +261,9 @@ public int size() {\n         }\n \n         @Override\n-        public IModel<TaskExecutionTO> model(final TaskExecutionTO\n-                taskExecution) {\n+        public IModel<TaskExecutionTO> model(\n+                final TaskExecutionTO taskExecution) {\n+\n             return new AbstractReadOnlyModel<TaskExecutionTO>() {\n \n                 @Override\n@@ -271,78 +273,82 @@ public TaskExecutionTO getObject() {\n             };\n         }\n \n-        public List<TaskExecutionTO> getTasksListDB(){\n-            return  taskTO.getExecutions();\n+        public List<TaskExecutionTO> getTasksListDB() {\n+            return taskTO.getExecutions();\n         }\n \n         class SortableDataProviderComparator implements\n                 Comparator<TaskExecutionTO>, Serializable {\n+\n             public int compare(final TaskExecutionTO o1,\n                     final TaskExecutionTO o2) {\n-                    PropertyModel<Comparable> model1 =\n-                            new PropertyModel<Comparable>(o1, getSort()\n-                            .getProperty());\n-                    PropertyModel<Comparable> model2 =\n-                            new PropertyModel<Comparable>(o2, getSort()\n-                            .getProperty());\n-\n-                    int result = 1;\n-\n-                    if(model1.getObject() == null && model2.getObject() == null)\n-                        result = 0;\n-                    else if(model1.getObject() == null)\n-                        result = 1;\n-                    else if(model2.getObject() == null)\n-                        result = -1;\n-                    else\n-                        result = ((Comparable)model1.getObject()).compareTo(\n-                                model2.getObject());\n-\n-                    result = getSort().isAscending() ? result : -result;\n-\n-                    return result;\n+                PropertyModel<Comparable> model1 =\n+                        new PropertyModel<Comparable>(o1,\n+                        getSort().getProperty());\n+                PropertyModel<Comparable> model2 =\n+                        new PropertyModel<Comparable>(o2,\n+                        getSort().getProperty());\n+\n+                int result = 1;\n+\n+                if (model1.getObject() == null && model2.getObject() == null) {\n+                    result = 0;\n+                } else if (model1.getObject() == null) {\n+                    result = 1;\n+                } else if (model2.getObject() == null) {\n+                    result = -1;\n+                } else {\n+                    result = ((Comparable) model1.getObject()).compareTo(\n+                            model2.getObject());\n+                }\n+\n+                result = getSort().isAscending() ? result : -result;\n+\n+                return result;\n             }\n-\t}\n+        }\n     }\n \n-/**\n- * Format column's value as date string.\n- */\n-  public class DatePropertyColumn<T> extends PropertyColumn<T>\n-{\n-    private static final long serialVersionUID = 1L;\n-    private SimpleDateFormat formatter;\n-\n-    public DatePropertyColumn(IModel<String> displayModel, String sortProperty,\n-            String propertyExpression, DateConverter converter)\n-    {\n-      super(displayModel, sortProperty, propertyExpression);\n-\n-      String language = \"en\";\n-      if(getSession().getLocale() != null)\n-            language = getSession().getLocale().getLanguage();\n-\n-      if(\"it\".equals(language))\n-          formatter= new SimpleDateFormat(Constants.ITALIAN_DATE_FORMAT);\n-      else\n-          formatter= new SimpleDateFormat(Constants.ENGLISH_DATE_FORMAT);\n-    }\n+    /**\n+     * Format column's value as date string.\n+     */\n+    public class DatePropertyColumn<T> extends PropertyColumn<T> {\n+\n+        private static final long serialVersionUID = 1L;\n \n-    @SuppressWarnings(\"unchecked\")\n-    @Override\n-    public void populateItem(Item<ICellPopulator<T>> item, String componentId,\n-            IModel<T> rowModel)\n-    {   IModel date = (IModel<Date>) createLabelModel(rowModel);\n+        private SimpleDateFormat formatter;\n \n-        String convertedDate = \"\";\n+        public DatePropertyColumn(\n+                IModel<String> displayModel, String sortProperty,\n+                String propertyExpression, DateConverter converter) {\n+            super(displayModel, sortProperty, propertyExpression);\n \n-        if(date.getObject() != null) {\n-            convertedDate = formatter.format(date.getObject());\n-            item.add(new Label(componentId,convertedDate));\n+            String language = \"en\";\n+            if (getSession().getLocale() != null) {\n+                language = getSession().getLocale().getLanguage();\n+            }\n+\n+            if (\"it\".equals(language)) {\n+                formatter = new SimpleDateFormat(Constants.ITALIAN_DATE_FORMAT);\n+            } else {\n+                formatter = new SimpleDateFormat(Constants.ENGLISH_DATE_FORMAT);\n+            }\n         }\n-        else\n-            item.add(new Label(componentId,convertedDate));\n-    }\n \n+        @Override\n+        public void populateItem(\n+                Item<ICellPopulator<T>> item, String componentId,\n+                IModel<T> rowModel) {\n+            IModel date = (IModel<Date>) createLabelModel(rowModel);\n+\n+            String convertedDate = \"\";\n+\n+            if (date.getObject() != null) {\n+                convertedDate = formatter.format(date.getObject());\n+                item.add(new Label(componentId, convertedDate));\n+            } else {\n+                item.add(new Label(componentId, convertedDate));\n+            }\n+        }\n+    }\n }\n-}\n\\ No newline at end of file"},{"sha":"3db26c5e38fc8d991180f4108bc3af248d92f274","filename":"console/src/main/java/org/syncope/console/pages/Tasks.java","status":"modified","additions":139,"deletions":140,"changes":279,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FTasks.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -12,7 +12,6 @@\n  *  limitations under the License.\n  *  under the License.\n  */\n-\n package org.syncope.console.pages;\n \n import java.io.Serializable;\n@@ -30,8 +29,7 @@\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table\n-        .AjaxFallbackDefaultDataTable;\n+import org.apache.wicket.extensions.ajax.markup.html.repeater.data.table.AjaxFallbackDefaultDataTable;\n import org.apache.wicket.extensions.markup.html.repeater.data.grid.ICellPopulator;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.AbstractColumn;\n import org.apache.wicket.extensions.markup.html.repeater.data.table.IColumn;\n@@ -53,7 +51,7 @@\n import org.syncope.console.commons.Constants;\n import org.syncope.console.commons.Utility;\n import org.syncope.console.commons.XMLRolesReader;\n-import org.syncope.console.rest.TasksRestClient;\n+import org.syncope.console.rest.TaskRestClient;\n import org.syncope.console.wicket.markup.html.form.DeleteLinkPanel;\n import org.syncope.console.wicket.markup.html.form.EditLinkPanel;\n import org.syncope.console.wicket.markup.html.form.LinkPanel;\n@@ -63,30 +61,32 @@\n  */\n public class Tasks extends BasePage {\n \n-    @SpringBean(name = \"tasksRestClient\")\n-    TasksRestClient restClient;\n+    @SpringBean\n+    private TaskRestClient restClient;\n \n-    @SpringBean(name = \"utility\")\n-    Utility utility;\n+    @SpringBean\n+    private Utility utility;\n \n-    @SpringBean(name = \"xmlRolesReader\")\n-    XMLRolesReader xmlRolesReader;\n+    @SpringBean\n+    private XMLRolesReader xmlRolesReader;\n \n     private int paginatorRows;\n \n-    WebMarkupContainer container;\n+    private WebMarkupContainer container;\n \n     /*\n-     Response flag set by the Modal Window after the operation is completed:\n-     TRUE if the operation succedes, FALSE otherwise\n+    Response flag set by the Modal Window after the operation is completed:\n+    TRUE if the operation succedes, FALSE otherwise\n      */\n-    boolean operationResult = false;\n-    FeedbackPanel feedbackPanel;\n+    private boolean operationResult = false;\n+\n+    private FeedbackPanel feedbackPanel;\n+\n+    private ModalWindow window;\n \n-    ModalWindow window;\n+    private final int WIN_INITIAL_HEIGHT = 515;\n \n-    final int WIN_INITIAL_HEIGHT = 515;\n-    final int WIN_INITIAL_WIDTH = 775;\n+    private final int WIN_INITIAL_WIDTH = 775;\n \n     public Tasks(PageParameters parameters) {\n         super(parameters);\n@@ -95,9 +95,9 @@ public Tasks(PageParameters parameters) {\n \n         add(new FeedbackPanel(\"feedback\").setOutputMarkupId(true));\n \n-        paginatorRows = utility.getPaginatorRowsToDisplay(Constants\n-                    .CONF_TASKS_PAGINATOR_ROWS);\n-        \n+        paginatorRows = utility.getPaginatorRowsToDisplay(\n+                Constants.CONF_TASKS_PAGINATOR_ROWS);\n+\n         List<IColumn> columns = new ArrayList<IColumn>();\n \n         columns.add(new PropertyColumn(new Model(getString(\"id\")),\n@@ -106,32 +106,31 @@ public Tasks(PageParameters parameters) {\n         columns.add(new PropertyColumn(new Model(getString(\"accountId\")),\n                 \"accountId\", \"accountId\"));\n \n-        columns.add(new AbstractColumn<TaskTO>(new Model<String>\n-                (getString(\"open\"))) {\n-            public void populateItem(Item<ICellPopulator<TaskTO>>\n-                    cellItem, String componentId, IModel<TaskTO> model)\n-            {\n-                    final TaskTO taskTO = model.getObject();\n+        columns.add(new AbstractColumn<TaskTO>(new Model<String>(getString(\n+                \"open\"))) {\n+\n+            public void populateItem(Item<ICellPopulator<TaskTO>> cellItem,\n+                    String componentId, IModel<TaskTO> model) {\n+                final TaskTO taskTO = model.getObject();\n \n-                    AjaxLink viewLink = new AjaxLink(\"editLink\") {\n+                AjaxLink viewLink = new AjaxLink(\"editLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n-                         window.setPageCreator(new ModalWindow\n-                                .PageCreator() {\n+                        window.setPageCreator(new ModalWindow.PageCreator() {\n \n                             public Page createPage() {\n-                                TaskModalPage modalPage = new TaskModalPage\n-                                        (Tasks.this, window, taskTO);\n+                                TaskModalPage modalPage = new TaskModalPage(\n+                                        Tasks.this, window, taskTO);\n                                 return modalPage;\n                             }\n                         });\n \n                         window.show(target);\n \n                     }\n-                 };\n+                };\n                 EditLinkPanel panel = new EditLinkPanel(componentId,\n                         model);\n                 panel.add(viewLink);\n@@ -148,102 +147,102 @@ public Page createPage() {\n             }\n         });\n \n-        columns.add(new AbstractColumn<TaskTO>(new Model<String>\n-                (getString(\"execute\"))) {\n-            public void populateItem(Item<ICellPopulator<TaskTO>>\n-                    cellItem, String componentId, IModel<TaskTO> model)\n-            {\n-                    final TaskTO taskTO = model.getObject();\n+        columns.add(new AbstractColumn<TaskTO>(new Model<String>(getString(\n+                \"execute\"))) {\n \n-                    AjaxLink executeLink = new AjaxLink(\"link\") {\n+            public void populateItem(Item<ICellPopulator<TaskTO>> cellItem,\n+                    String componentId, IModel<TaskTO> model) {\n+                final TaskTO taskTO = model.getObject();\n+\n+                AjaxLink executeLink = new AjaxLink(\"link\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n                         boolean res = false;\n-                        \n+\n                         try {\n                             res = restClient.startTaskExecution(taskTO.getId());\n-                        }\n-                        catch (SyncopeClientCompositeErrorException scce) {\n+                        } catch (SyncopeClientCompositeErrorException scce) {\n                             error(scce.getMessage());\n                         }\n \n-                        if(res)\n+                        if (res) {\n                             getSession().info(getString(\"operation_succeded\"));\n+                        }\n \n                         target.addComponent(getPage().get(\"feedback\"));\n                         target.addComponent(container);\n                     }\n+                };\n \n-                 };\n+                executeLink.add(new Label(\"linkTitle\", getString(\"execute\")));\n \n-                 executeLink.add(new Label(\"linkTitle\",getString(\"execute\")));\n+                LinkPanel panel = new LinkPanel(componentId);\n+                panel.add(executeLink);\n \n-                 LinkPanel panel = new LinkPanel(componentId);\n-                 panel.add(executeLink);\n-\n-                 String allowedRoles = null;\n+                String allowedRoles = null;\n \n-                 allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Tasks\",\n-                         \"execute\");\n+                allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Tasks\",\n+                        \"execute\");\n \n-                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                 allowedRoles);\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        allowedRoles);\n \n-                 cellItem.add(panel);\n+                cellItem.add(panel);\n             }\n         });\n \n-        columns.add(new AbstractColumn<TaskTO>(new Model<String>\n-                (getString(\"delete\"))) {\n-            public void populateItem(Item<ICellPopulator<TaskTO>>\n-                    cellItem, String componentId, IModel<TaskTO> model)\n-            {\n-                    final TaskTO taskTO = model.getObject();\n+        columns.add(new AbstractColumn<TaskTO>(new Model<String>(getString(\n+                \"delete\"))) {\n \n-                    AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n+            public void populateItem(Item<ICellPopulator<TaskTO>> cellItem,\n+                    String componentId, IModel<TaskTO> model) {\n+                final TaskTO taskTO = model.getObject();\n+\n+                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n \n                         try {\n                             restClient.deleteTask(taskTO.getId());\n-                        }\n-                        catch (SyncopeClientCompositeErrorException scce) {\n+                        } catch (SyncopeClientCompositeErrorException scce) {\n                             error(scce.getMessage());\n                         }\n                         target.addComponent(container);\n                     }\n \n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super\n-                                .getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.\n+                                getAjaxCallDecorator()) {\n+\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n-                            public CharSequence preDecorateScript(CharSequence\n-                                    script) {\n-                                return \"if (confirm('\"+\n-                                        getString(\"confirmDelete\")+\"'))\"\n-                                        +\"{\"+script+\"}\";\n+                            public CharSequence preDecorateScript(\n+                                    CharSequence script) {\n+\n+                                return \"if (confirm('\"\n+                                        + getString(\"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"}\";\n                             }\n                         };\n                     }\n-                 };\n+                };\n                 DeleteLinkPanel panel = new DeleteLinkPanel(componentId,\n                         model);\n                 panel.add(deleteLink);\n \n-                 String allowedRoles = null;\n+                String allowedRoles = null;\n \n-                 allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Tasks\",\n-                         \"delete\");\n+                allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Tasks\",\n+                        \"delete\");\n \n-                 MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n-                 allowedRoles);\n+                MetaDataRoleAuthorizationStrategy.authorize(panel, ENABLE,\n+                        allowedRoles);\n \n-                 cellItem.add(panel);\n+                cellItem.add(panel);\n             }\n         });\n \n@@ -263,10 +262,10 @@ public CharSequence preDecorateScript(CharSequence\n \n                     public void onClose(AjaxRequestTarget target) {\n                         target.addComponent(container);\n-                        if(operationResult){\n-                        info(getString(\"operation_succeded\"));\n-                        target.addComponent(feedbackPanel);\n-                        operationResult = false;\n+                        if (operationResult) {\n+                            info(getString(\"operation_succeded\"));\n+                            target.addComponent(feedbackPanel);\n+                            operationResult = false;\n                         }\n                     }\n                 });\n@@ -280,34 +279,33 @@ public void onClose(AjaxRequestTarget target) {\n         Form paginatorForm = new Form(\"PaginatorForm\");\n \n         final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n-        new PropertyModel(this,\"paginatorRows\"),utility.paginatorRowsChooser());\n+                new PropertyModel(this, \"paginatorRows\"), utility.\n+                paginatorRowsChooser());\n \n-        rowsChooser.add(new AjaxFormComponentUpdatingBehavior( \"onchange\" ){\n-          protected void onUpdate( AjaxRequestTarget target )\n-            {\n-              utility.updatePaginatorRows(Constants.CONF_TASKS_PAGINATOR_ROWS,\n-                      paginatorRows);\n+        rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n \n-              table.setRowsPerPage(paginatorRows);\n+            protected void onUpdate(AjaxRequestTarget target) {\n+                utility.updatePaginatorRows(Constants.CONF_TASKS_PAGINATOR_ROWS,\n+                        paginatorRows);\n \n-              target.addComponent(container);\n-            }\n+                table.setRowsPerPage(paginatorRows);\n \n-          });\n+                target.addComponent(container);\n+            }\n+        });\n \n         paginatorForm.add(rowsChooser);\n         add(paginatorForm);\n     }\n \n-\n     class TasksProvider extends SortableDataProvider<TaskTO> {\n \n         private SortableDataProviderComparator comparator =\n                 new SortableDataProviderComparator();\n \n         public TasksProvider() {\n             //Default sorting\n-            setSort(\"id\",true);\n+            setSort(\"id\", true);\n         }\n \n         @Override\n@@ -316,7 +314,7 @@ public Iterator<TaskTO> iterator(int first, int count) {\n \n             Collections.sort(list, comparator);\n \n-            return list.subList(first, first+count).iterator();\n+            return list.subList(first, first + count).iterator();\n         }\n \n         @Override\n@@ -325,8 +323,7 @@ public int size() {\n         }\n \n         @Override\n-        public IModel<TaskTO> model(final TaskTO\n-                task) {\n+        public IModel<TaskTO> model(final TaskTO task) {\n             return new AbstractReadOnlyModel<TaskTO>() {\n \n                 @Override\n@@ -336,62 +333,64 @@ public TaskTO getObject() {\n             };\n         }\n \n-        public List<TaskTO> getTasksListDB(){\n-        List<TaskTO> list = restClient.getAllTasks();\n+        public List<TaskTO> getTasksListDB() {\n+            List<TaskTO> list = restClient.getAllTasks();\n \n-        //Mock task for test purpose\n+            //Mock task for test purpose\n         /*if(list == null || list.size() == 0) {\n-        list = new ArrayList<TaskTO>();\n-        \n-        TaskTO task1 = new TaskTO();\n-        task1.setAccountId(\"luisAccount\");\n-        task1.setId(1L);\n-        task1.setResource(\"testResource\");\n+            list = new ArrayList<TaskTO>();\n \n-        List executions = new ArrayList<TaskExecutionTO>();\n+            TaskTO task1 = new TaskTO();\n+            task1.setAccountId(\"luisAccount\");\n+            task1.setId(1L);\n+            task1.setResource(\"testResource\");\n \n-        TaskExecutionTO taskExecution = new TaskExecutionTO();\n-        taskExecution.setStartDate(new Date());\n-        taskExecution.setEndDate(new Date());\n-        taskExecution.setMessage(\"Prova\");\n-        taskExecution.setStatus(TaskExecutionStatus.CREATED);\n-        executions.add(taskExecution);\n+            List executions = new ArrayList<TaskExecutionTO>();\n \n-        task1.setExecutions(executions);\n+            TaskExecutionTO taskExecution = new TaskExecutionTO();\n+            taskExecution.setStartDate(new Date());\n+            taskExecution.setEndDate(new Date());\n+            taskExecution.setMessage(\"Prova\");\n+            taskExecution.setStatus(TaskExecutionStatus.CREATED);\n+            executions.add(taskExecution);\n \n-        list.add(task1);\n-        }*/\n+            task1.setExecutions(executions);\n \n-        return list;\n+            list.add(task1);\n+            }*/\n+\n+            return list;\n         }\n \n         class SortableDataProviderComparator implements\n                 Comparator<TaskTO>, Serializable {\n+\n             public int compare(final TaskTO o1,\n                     final TaskTO o2) {\n-                    PropertyModel<Comparable> model1 =\n-                            new PropertyModel<Comparable>(o1, getSort()\n-                            .getProperty());\n-                    PropertyModel<Comparable> model2 =\n-                            new PropertyModel<Comparable>(o2, getSort()\n-                            .getProperty());\n-\n-                    int result = 1;\n-\n-                    if(model1.getObject() == null && model2.getObject() == null)\n-                        result = 0;\n-                    else if(model1.getObject() == null)\n-                        result = 1;\n-                    else if(model2.getObject() == null)\n-                        result = -1;\n-                    else\n-                        result = ((Comparable)model1.getObject()).compareTo(\n-                                model2.getObject());\n-\n-                    result = getSort().isAscending() ? result : -result;\n-\n-                    return result;\n+                PropertyModel<Comparable> model1 =\n+                        new PropertyModel<Comparable>(o1,\n+                        getSort().getProperty());\n+                PropertyModel<Comparable> model2 =\n+                        new PropertyModel<Comparable>(o2,\n+                        getSort().getProperty());\n+\n+                int result = 1;\n+\n+                if (model1.getObject() == null && model2.getObject() == null) {\n+                    result = 0;\n+                } else if (model1.getObject() == null) {\n+                    result = 1;\n+                } else if (model2.getObject() == null) {\n+                    result = -1;\n+                } else {\n+                    result = ((Comparable) model1.getObject()).compareTo(\n+                            model2.getObject());\n+                }\n+\n+                result = getSort().isAscending() ? result : -result;\n+\n+                return result;\n             }\n-\t}\n+        }\n     }\n }"},{"sha":"129a996f4874f60ae93d6a0013c8ff12b39b3d77","filename":"console/src/main/java/org/syncope/console/pages/UserModalPage.java","status":"modified","additions":703,"deletions":668,"changes":1371,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -29,21 +29,20 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n import javax.swing.tree.DefaultMutableTreeNode;\n-import org.apache.wicket.Application;\n+import org.apache.wicket.Component;\n import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n-import org.apache.wicket.authorization.strategies.role.metadata\n-        .MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.behavior.AbstractBehavior;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n-\n import org.apache.wicket.extensions.markup.html.form.palette.Palette;\n+import org.apache.wicket.markup.ComponentTag;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n+import org.apache.wicket.markup.html.WebMarkupContainerWithAssociatedMarkup;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.ChoiceRenderer;\n import org.apache.wicket.markup.html.form.Form;\n@@ -60,6 +59,8 @@\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.syncope.client.mod.AttributeMod;\n import org.syncope.client.mod.MembershipMod;\n import org.syncope.client.mod.UserMod;\n@@ -70,914 +71,948 @@\n import org.syncope.client.to.SchemaTO;\n import org.syncope.client.to.UserTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n-import org.syncope.console.SyncopeApplication;\n import org.syncope.console.commons.SchemaWrapper;\n-import org.syncope.console.rest.ResourcesRestClient;\n-import org.syncope.console.rest.RolesRestClient;\n+import org.syncope.console.rest.ResourceRestClient;\n+import org.syncope.console.rest.RoleRestClient;\n import org.syncope.console.rest.SchemaRestClient;\n-import org.syncope.console.rest.UsersRestClient;\n-\n+import org.syncope.console.rest.UserRestClient;\n import org.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.syncope.console.wicket.markup.html.form.DateFieldPanel;\n import org.syncope.console.wicket.markup.html.tree.SyncopeRoleTree;\n import org.syncope.console.wicket.markup.html.tree.TreeModelBean;\n+import org.syncope.types.SchemaType;\n \n /**\n  * Modal window with User form.\n  */\n public class UserModalPage extends SyncopeModalPage {\n \n-@SpringBean(name = \"usersRestClient\")\n-UsersRestClient usersRestClient;\n+    /**\n+     * Logger.\n+     */\n+    private static final Logger LOG = LoggerFactory.getLogger(\n+            UserModalPage.class);\n \n-@SpringBean(name = \"rolesRestClient\")\n-RolesRestClient rolesRestClient;\n+    @SpringBean\n+    private UserRestClient userRestClient;\n \n-WebMarkupContainer container;\n-WebMarkupContainer membershipsContainer;\n+    @SpringBean\n+    private RoleRestClient roleRestClient;\n \n-AjaxButton submit;\n+    @SpringBean\n+    private ResourceRestClient resourceRestClient;\n \n-List<SchemaWrapper> schemaWrappers;\n-List<MembershipTO> membershipTOs;\n+    @SpringBean\n+    private SchemaRestClient schemaRestClient;\n \n-final ModalWindow createUserWin;\n+    private WebMarkupContainer container;\n \n-UserTO oldUser;\n-UserMod userMod;\n+    private WebMarkupContainer membershipsContainer;\n \n-Map rolesMap;\n-\n-/**\n- *\n- * @param basePage base\n- * @param modalWindow modal window\n- * @param connectorTO\n- * @param create : set to true only if a CREATE operation is required\n- */\n-public UserModalPage(final BasePage basePage, final ModalWindow window,\n-    final UserTO userTO, final boolean createFlag) {\n+    private AjaxButton submit;\n \n-if (!createFlag) {\n-    cloneOldUserTO(userTO);\n-}\n+    private List<SchemaWrapper> schemaWrappers;\n \n-setupRolesMap();\n+    private List<MembershipTO> membershipTOs;\n \n-add(createUserWin = new ModalWindow(\"membershipWin\"));\n+    private final ModalWindow createUserWin;\n \n-createUserWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n-createUserWin.setPageMapName(\"create-membership-modal\");\n-createUserWin.setCookieName(\"create-membership-modal\");\n+    private UserTO oldUser;\n \n-final Form userForm = new Form(\"UserForm\");\n+    private UserMod userMod;\n \n-userForm.setModel(new CompoundPropertyModel(userTO));\n+    private Map rolesMap;\n \n-setupSchemaWrappers(createFlag, userTO);\n-setupMemberships(createFlag, userTO);\n+    /**\n+     *\n+     * @param basePage base\n+     * @param modalWindow modal window\n+     * @param connectorTO\n+     * @param create : set to true only if a CREATE operation is required\n+     */\n+    public UserModalPage(final BasePage basePage, final ModalWindow window,\n+            final UserTO userTO, final boolean createFlag) {\n \n-final ListView userAttributesView = new ListView(\"userSchemas\",\n-        schemaWrappers) {\n+        if (!createFlag) {\n+            cloneOldUserTO(userTO);\n+        }\n \n-@Override\n-protected void populateItem(ListItem item) {\n-final SchemaWrapper schemaWrapper =\n-        (SchemaWrapper) item.getDefaultModelObject();\n+        setupRolesMap();\n \n-final SchemaTO schemaTO = schemaWrapper.getSchemaTO();\n+        createUserWin = new ModalWindow(\"membershipWin\");\n+        createUserWin.setCssClassName(ModalWindow.CSS_CLASS_GRAY);\n+        createUserWin.setPageMapName(\"create-membership-modal\");\n+        createUserWin.setCookieName(\"create-membership-modal\");\n+        add(createUserWin);\n \n-item.add(new Label(\"name\", schemaWrapper.getSchemaTO()\n-        .getName()));\n+        final Form userForm = new Form(\"UserForm\");\n \n-item.add(new ListView(\"fields\", schemaWrapper.getValues()) {\n+        userForm.setModel(new CompoundPropertyModel(userTO));\n \n-Panel panel;\n+        setupSchemaWrappers(createFlag, userTO);\n+        setupMemberships(createFlag, userTO);\n \n-    @Override\n-    protected void populateItem(final ListItem item) {\n+        final ListView userAttributesView = new ListView(\"userSchemas\",\n+                schemaWrappers) {\n \n-        String mandatoryCondition = schemaTO.getMandatoryCondition();\n-        boolean required = false;\n+            @Override\n+            protected void populateItem(ListItem item) {\n+                final SchemaWrapper schemaWrapper =\n+                        (SchemaWrapper) item.getDefaultModelObject();\n \n-        if (mandatoryCondition.equalsIgnoreCase(\"true\"))\n-            required = true;\n+                final SchemaTO schemaTO = schemaWrapper.getSchemaTO();\n \n-        if (schemaTO.getType().getClassName()\n-                .equals(\"java.lang.String\")) {\n-            panel = new AjaxTextFieldPanel(\"panel\",\n-                    schemaTO.getName(), new Model() {\n+                item.add(new Label(\"name\",\n+                        schemaWrapper.getSchemaTO().getName()));\n \n-                @Override\n-                public Serializable getObject() {\n-                    return (String) item.getModelObject();\n-                }\n+                item.add(new ListView(\"fields\", schemaWrapper.getValues()) {\n \n-                @Override\n-                public void setObject(Serializable object) {\n-                    item.setModelObject((String) object);\n-                }\n-            }, required,schemaTO.isReadonly());\n-        }\n-        else if (schemaTO.getType().getClassName()\n-                .equals(\"java.lang.Boolean\")) {\n-            panel = new AjaxCheckBoxPanel(\"panel\",\n-                    schemaTO.getName(), new Model() {\n-\n-                @Override\n-                public Serializable getObject() {\n-                    return (String) item.getModelObject();\n-                }\n+                    Panel panel;\n \n-                @Override\n-                public void setObject(Serializable object) {\n-                    Boolean val = (Boolean) object;\n-                    item.setModelObject(val.toString());\n-                }\n-            }, required, schemaTO.isReadonly());\n+                    @Override\n+                    protected void populateItem(final ListItem item) {\n \n-        } else if (schemaTO.getType().getClassName().equals(\"java.util.Date\")) {\n-            panel = new DateFieldPanel(\"panel\", schemaTO.getName(),\n-                    new Model() {\n+                        String mandatoryCondition = schemaTO.\n+                                getMandatoryCondition();\n+                        boolean required = false;\n \n-                        @Override\n-                        public Serializable getObject() {\n-                            DateFormat formatter = new SimpleDateFormat(\n-                                    schemaTO.getConversionPattern());\n-                            Date date = new Date();\n-                            try {\n-                                String dateValue = (String) item\n-                                        .getModelObject();\n-                                //Default value:yyyy-MM-dd\n-                                if(!dateValue.equals(\"\"))\n-                                    date = formatter.parse(dateValue);\n-                                else\n-                                    date = null;\n-                            } catch (ParseException ex) {\n-                                Logger.getLogger(\n-                                        RoleModalPage.class.getName())\n-                                        .log(Level.SEVERE, null, ex);\n-                            }\n-                            return date;\n+                        if (mandatoryCondition.equalsIgnoreCase(\"true\")) {\n+                            required = true;\n                         }\n \n-                        @Override\n-                        public void setObject(Serializable object) {\n-                            Date date = (Date) object;\n-                            Format formatter = new SimpleDateFormat(schemaTO\n-                                    .getConversionPattern());\n-                            String val = formatter.format(date);\n-                            item.setModelObject(val);\n+                        if (schemaTO.getType() == SchemaType.String) {\n+                            panel = new AjaxTextFieldPanel(\"panel\",\n+                                    schemaTO.getName(), new Model() {\n+\n+                                @Override\n+                                public Serializable getObject() {\n+                                    return (String) item.getModelObject();\n+                                }\n+\n+                                @Override\n+                                public void setObject(Serializable object) {\n+                                    item.setModelObject((String) object);\n+                                }\n+                            }, required, schemaTO.isReadonly());\n+                        } else if (schemaTO.getType() == SchemaType.Boolean) {\n+                            panel = new AjaxCheckBoxPanel(\"panel\",\n+                                    schemaTO.getName(), new Model() {\n+\n+                                @Override\n+                                public Serializable getObject() {\n+                                    return (String) item.getModelObject();\n+                                }\n+\n+                                @Override\n+                                public void setObject(Serializable object) {\n+                                    Boolean val = (Boolean) object;\n+                                    item.setModelObject(val.toString());\n+                                }\n+                            }, required, schemaTO.isReadonly());\n+\n+                        } else if (schemaTO.getType() == SchemaType.Date) {\n+                            panel = new DateFieldPanel(\"panel\",\n+                                    schemaTO.getName(), new Model() {\n+\n+                                @Override\n+                                public Serializable getObject() {\n+                                    DateFormat formatter =\n+                                            new SimpleDateFormat(\n+                                            schemaTO.getConversionPattern());\n+                                    Date date = new Date();\n+                                    try {\n+                                        String dateValue = (String) item.\n+                                                getModelObject();\n+                                        //Default value:yyyy-MM-dd\n+                                        if (!dateValue.equals(\"\")) {\n+                                            date = formatter.parse(\n+                                                    dateValue);\n+                                        } else {\n+                                            date = null;\n+                                        }\n+                                    } catch (ParseException e) {\n+                                        LOG.error(\"While parsing date\", e);\n+                                    }\n+                                    return date;\n+                                }\n+\n+                                @Override\n+                                public void setObject(Serializable object) {\n+                                    Date date = (Date) object;\n+                                    Format formatter = new SimpleDateFormat(\n+                                            schemaTO.getConversionPattern());\n+                                    String val = formatter.format(date);\n+                                    item.setModelObject(val);\n+                                }\n+                            }, schemaTO.getConversionPattern(),\n+                                    required,\n+                                    schemaTO.isReadonly(), userForm);\n+                        } else {\n+                            panel = new AjaxTextFieldPanel(\"panel\",\n+                                    schemaTO.getName(), new Model() {\n+\n+                                @Override\n+                                public Serializable getObject() {\n+                                    return (String) item.getModelObject();\n+                                }\n+\n+                                @Override\n+                                public void setObject(Serializable object) {\n+                                    item.setModelObject((String) object);\n+                                }\n+                            }, required, schemaTO.isReadonly());\n                         }\n-                    }, schemaTO.getConversionPattern(),required,\n-                            schemaTO.isReadonly(),userForm);\n-        } else {\n-            panel = new AjaxTextFieldPanel(\"panel\",\n-                    schemaTO.getName(), new Model() {\n-\n-                @Override\n-                public Serializable getObject() {\n-                    return (String) item.getModelObject();\n-                }\n-\n-                @Override\n-                public void setObject(Serializable object) {\n-                    item.setModelObject((String) object);\n-                }\n-            }, required,schemaTO.isReadonly());\n-        }\n \n-        item.add(panel);\n-    }\n-    });\n+                        item.add(panel);\n+                    }\n+                });\n \n-        AjaxButton addButton = new AjaxButton(\"add\",\n-                new Model(getString(\"add\"))) {\n+                AjaxButton addButton = new AjaxButton(\"add\",\n+                        new Model(getString(\"add\"))) {\n \n-            @Override\n-            protected void onSubmit(AjaxRequestTarget target,\n-                    Form form) {\n-                schemaWrapper.getValues().add(\"\");\n+                    @Override\n+                    protected void onSubmit(AjaxRequestTarget target,\n+                            Form form) {\n+                        schemaWrapper.getValues().add(\"\");\n \n-                target.addComponent(container);\n-            }\n-        };\n+                        target.addComponent(container);\n+                    }\n+                };\n \n-        AjaxButton dropButton = new AjaxButton(\"drop\",\n-                new Model(getString(\"drop\"))) {\n+                AjaxButton dropButton = new AjaxButton(\"drop\",\n+                        new Model(getString(\"drop\"))) {\n \n-            @Override\n-            protected void onSubmit(AjaxRequestTarget target,\n-                    Form form) {\n-                //Drop the last component added\n-                schemaWrapper.getValues().remove(schemaWrapper\n-                        .getValues().size() - 1);\n+                    @Override\n+                    protected void onSubmit(AjaxRequestTarget target,\n+                            Form form) {\n+                        //Drop the last component added\n+                        schemaWrapper.getValues().remove(\n+                                schemaWrapper.getValues().size() - 1);\n \n-                target.addComponent(container);\n-            }\n-        };\n+                        target.addComponent(container);\n+                    }\n+                };\n \n-        if (schemaTO.getType().getClassName()\n-                .equals(\"java.lang.Boolean\")) {\n-            addButton.setVisible(false);\n-            dropButton.setVisible(false);\n-        }\n+                if (schemaTO.getType() == SchemaType.Boolean) {\n+                    addButton.setVisible(false);\n+                    dropButton.setVisible(false);\n+                }\n \n-        addButton.setDefaultFormProcessing(false);\n-        addButton.setVisible(schemaTO.isMultivalue());\n+                addButton.setDefaultFormProcessing(false);\n+                addButton.setVisible(schemaTO.isMultivalue());\n \n-        dropButton.setDefaultFormProcessing(false);\n-        dropButton.setVisible(schemaTO.isMultivalue());\n+                dropButton.setDefaultFormProcessing(false);\n+                dropButton.setVisible(schemaTO.isMultivalue());\n \n-        if (schemaWrapper.getValues().size() == 1) {\n-            dropButton.setVisible(false);\n-        }\n+                if (schemaWrapper.getValues().size() == 1) {\n+                    dropButton.setVisible(false);\n+                }\n \n-        if(schemaTO.isReadonly()) {\n-            addButton.setEnabled(false);\n-            dropButton.setEnabled(false);\n-        }\n+                if (schemaTO.isReadonly()) {\n+                    addButton.setEnabled(false);\n+                    dropButton.setEnabled(false);\n+                }\n \n-        item.add(addButton);\n-        item.add(dropButton);\n-    }\n-};\n+                item.add(addButton);\n+                item.add(dropButton);\n+            }\n+        };\n \n-userForm.add(userAttributesView);\n+        userForm.add(userAttributesView);\n \n-ListModel<ResourceTO> selectedResources = new ListModel<ResourceTO>();\n-selectedResources.setObject(getSelectedResources(userTO));\n+        ListModel<ResourceTO> selectedResources = new ListModel<ResourceTO>();\n+        selectedResources.setObject(getSelectedResources(userTO));\n \n-ListModel<ResourceTO> availableResources = new ListModel<ResourceTO>();\n-availableResources.setObject(getAvailableResources(userTO));\n+        ListModel<ResourceTO> availableResources = new ListModel<ResourceTO>();\n+        availableResources.setObject(getAvailableResources(userTO));\n \n-ChoiceRenderer paletteRenderer = new ChoiceRenderer(\"name\", \"name\");\n-final Palette resourcesPalette = new Palette(\"resourcesPalette\", \n-        selectedResources, availableResources, paletteRenderer,\n-        8, false);\n-userForm.add(resourcesPalette);\n+        ChoiceRenderer paletteRenderer = new ChoiceRenderer(\"name\", \"name\");\n+        final Palette resourcesPalette = new Palette(\"resourcesPalette\",\n+                selectedResources, availableResources, paletteRenderer,\n+                8, false);\n+        userForm.add(resourcesPalette);\n \n-container = new WebMarkupContainer(\"container\");\n-container.add(userAttributesView);\n+        container = new WebMarkupContainer(\"container\");\n+        container.add(userAttributesView);\n \n-PasswordTextField password = new PasswordTextField(\"password\");\n-password.setRequired(createFlag);\n-password.setResetPassword(false);\n-container.add(password);\n+        PasswordTextField password = new PasswordTextField(\"password\");\n+        password.setRequired(createFlag);\n+        password.setResetPassword(true);\n+        container.add(password);\n \n-container.setOutputMarkupId(true);\n+        WebMarkupContainerWithAssociatedMarkup mandatoryPassword =\n+                new WebMarkupContainerWithAssociatedMarkup(\"mandatory_pwd\");\n+        mandatoryPassword.add(new AbstractBehavior() {\n \n-userForm.add(container);\n+            @Override\n+            public void onComponentTag(final Component component,\n+                    final ComponentTag tag) {\n \n-submit = new IndicatingAjaxButton (\"submit\", new Model(getString(\"submit\"))){\n+                if (!createFlag) {\n+                    tag.put(\"style\", \"display:none;\");\n+                }\n+            }\n+        });\n+        container.add(mandatoryPassword);\n \n-    @Override\n-    protected void onSubmit(AjaxRequestTarget target, Form form) {\n-        UserTO userTO = (UserTO) form.getDefaultModelObject();\n+        container.setOutputMarkupId(true);\n \n-        boolean res = false;\n+        userForm.add(container);\n \n-        try {\n-            userTO.setResources(getResourcesSet(resourcesPalette\n-                    .getModelCollection()));\n-            userTO.setAttributes(getUserAttributesList());\n-            userTO.setMemberships(getMembershipsSet());\n+        submit = new IndicatingAjaxButton(\"submit\", new Model(\n+                getString(\"submit\"))) {\n \n-            if (createFlag) {\n-                usersRestClient.createUser(userTO);\n-            } else {\n-                setupUserMod(userTO);\n+            @Override\n+            protected void onSubmit(AjaxRequestTarget target, Form form) {\n+                UserTO userTO = (UserTO) form.getDefaultModelObject();\n+\n+                boolean res = false;\n+\n+                try {\n+                    userTO.setResources(getResourcesSet(resourcesPalette.\n+                            getModelCollection()));\n+                    userTO.setAttributes(getUserAttributesList());\n+                    userTO.setMemberships(getMembershipsSet());\n+\n+                    if (createFlag) {\n+                        userRestClient.createUser(userTO);\n+                    } else {\n+                        setupUserMod(userTO);\n+\n+                        //Update user just if it is changed\n+                        if (userMod != null) {\n+                            res = userRestClient.updateUser(userMod);\n+                            if (!res) {\n+                                error(getString(\"error_updating\"));\n+                            }\n \n-                //Update user just if it is changed\n-                if(userMod != null){\n+                            Users callerPage = (Users) basePage;\n+                            callerPage.setOperationResult(true);\n+                        }\n \n-                res = usersRestClient.updateUser(userMod);\n+                    }\n \n-                if (!res)\n-                    error(getString(\"error_updating\"));\n+                    window.close(target);\n \n-                Users callerPage = (Users) basePage;\n-                callerPage.setOperationResult(true);\n+                } catch (SyncopeClientCompositeErrorException e) {\n+                    LOG.error(\"While creating or updating user\", e);\n+                    error(getString(\"error\") + \":\" + e.getMessage());\n                 }\n+            }\n \n+            @Override\n+            protected void onError(AjaxRequestTarget target, Form form) {\n+                target.addComponent(form.get(\"feedback\"));\n             }\n+        };\n \n-            window.close(target);\n+        String allowedRoles = null;\n \n-        } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n-            error(getString(\"error\") + \":\" + e.getMessage());\n+        if (createFlag) {\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Users\", \"create\");\n+        } else {\n+            allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Users\", \"update\");\n         }\n-    }\n-\n-    @Override\n-    protected void onError(AjaxRequestTarget target, Form form) {\n-        target.addComponent(form.get(\"feedback\"));\n-    }\n-\n-//    @Override\n-//    protected IAjaxCallDecorator getAjaxCallDecorator() {\n-//        return new AjaxPostprocessingCallDecorator(super.getAjaxCallDecorator()) {\n-//            private static final long serialVersionUID = 1L;\n-//\n-//            @Override\n-//            public CharSequence postDecorateScript(CharSequence script) {\n-//                return script + \"for(i = 0;i<document.forms[0].length;i++) \" +\n-//                        \"{document.forms[0].elements[i].disabled ='disabled'}\";\n-//            }\n-//        };\n-//    }\n-};\n-\n-String allowedRoles = null;\n \n-if(createFlag)\n-    allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Users\",\"create\");\n-else\n-    allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Users\",\"update\");\n+        MetaDataRoleAuthorizationStrategy.authorize(\n+                submit, RENDER, allowedRoles);\n \n-MetaDataRoleAuthorizationStrategy.authorize(submit, RENDER, allowedRoles);\n+        userForm.add(submit);\n \n-userForm.add(submit);\n-\n-userForm.add(new FeedbackPanel(\"feedback\").setOutputMarkupId(true));\n+        userForm.add(new FeedbackPanel(\"feedback\").setOutputMarkupId(true));\n \n //Roles Tab\n-SyncopeRoleTree roleTree = new SyncopeRoleTree(rolesRestClient);\n+        SyncopeRoleTree roleTree = new SyncopeRoleTree(roleRestClient);\n \n-BaseTree tree;\n+        BaseTree tree;\n \n-tree = new LinkTree(\"treeTable\", roleTree.createTreeModel()) {\n+        tree = new LinkTree(\"treeTable\", roleTree.createTreeModel()) {\n \n-    @Override\n-    protected IModel<Object> getNodeTextModel(IModel<Object> model) {\n-        return new PropertyModel(model, \"userObject.treeNode.displayName\");\n-    }\n+            @Override\n+            protected IModel<Object> getNodeTextModel(IModel<Object> model) {\n+                return new PropertyModel(model,\n+                        \"userObject.treeNode.displayName\");\n+            }\n \n-    @Override\n-    protected void onNodeLinkClicked(final Object node,\n-            final BaseTree tree, final AjaxRequestTarget target) {\n+            @Override\n+            protected void onNodeLinkClicked(final Object node,\n+                    final BaseTree tree, final AjaxRequestTarget target) {\n \n-        DefaultMutableTreeNode syncopeTreeNode =\n-                (DefaultMutableTreeNode) node;\n-        final TreeModelBean treeModel = (TreeModelBean) syncopeTreeNode\n-                .getUserObject();\n+                DefaultMutableTreeNode syncopeTreeNode =\n+                        (DefaultMutableTreeNode) node;\n+                final TreeModelBean treeModel = (TreeModelBean) syncopeTreeNode.\n+                        getUserObject();\n \n-        if (treeModel.getTreeNode() != null) {\n+                if (treeModel.getTreeNode() != null) {\n \n-            createUserWin.setPageCreator(new ModalWindow.PageCreator() {\n+                    createUserWin.setPageCreator(new ModalWindow.PageCreator() {\n \n-                MembershipTO membershipTO;\n+                        private MembershipTO membershipTO;\n \n-                @Override\n-                public Page createPage() {\n+                        @Override\n+                        public Page createPage() {\n \n-                    membershipTO = new MembershipTO();\n-                    membershipTO.setRoleId(treeModel.getTreeNode()\n-                            .getId());\n-                    String title = treeModel.getTreeNode().getName();\n+                            membershipTO = new MembershipTO();\n+                            membershipTO.setRoleId(\n+                                    treeModel.getTreeNode().getId());\n+                            String title = treeModel.getTreeNode().getName();\n \n-                    MembershipModalPage form =\n-                            new MembershipModalPage(getPage(),\n-                            createUserWin, membershipTO, true);\n+                            MembershipModalPage form =\n+                                    new MembershipModalPage(getPage(),\n+                                    createUserWin, membershipTO, true);\n \n-                    return form;\n+                            return form;\n+                        }\n+                    });\n+                    createUserWin.show(target);\n                 }\n-            });\n-            createUserWin.show(target);\n-        }\n-    }\n-};\n+            }\n+        };\n \n-tree.getTreeState().expandAll();\n-tree.updateTree();\n+        tree.getTreeState().expandAll();\n+        tree.updateTree();\n \n-userForm.add(tree);\n+        userForm.add(tree);\n \n \n-ListView membershipsView = new ListView(\"memberships\", membershipTOs) {\n+        ListView membershipsView = new ListView(\"memberships\", membershipTOs) {\n \n-    @Override\n-    protected void populateItem(final ListItem item) {\n-        final MembershipTO membershipTO =\n-                (MembershipTO) item.getDefaultModelObject();\n+            @Override\n+            protected void populateItem(final ListItem item) {\n+                final MembershipTO membershipTO =\n+                        (MembershipTO) item.getDefaultModelObject();\n \n-        item.add(new Label(\"roleId\", new Model(membershipTO.getRoleId())));\n-        item.add(new Label(\"roleName\", new Model((String) rolesMap\n-                .get(membershipTO.getRoleId()))));\n+                item.add(\n+                        new Label(\"roleId\", new Model(\n+                        membershipTO.getRoleId())));\n+                item.add(new Label(\"roleName\",\n+                        new Model((String) rolesMap.get(\n+                        membershipTO.getRoleId()))));\n \n-        AjaxLink editLink = new AjaxLink(\"editLink\") {\n+                AjaxLink editLink = new AjaxLink(\"editLink\") {\n \n-            @Override\n-            public void onClick(AjaxRequestTarget target) {\n-                createUserWin.setPageCreator(new ModalWindow.PageCreator() {\n+                    @Override\n+                    public void onClick(AjaxRequestTarget target) {\n+                        createUserWin.setPageCreator(\n+                                new ModalWindow.PageCreator() {\n \n-                    public Page createPage() {\n+                                    public Page createPage() {\n \n-                        MembershipModalPage window = new MembershipModalPage(\n-                                getPage(), createUserWin, membershipTO, false);\n+                                        MembershipModalPage window =\n+                                                new MembershipModalPage(\n+                                                getPage(), createUserWin,\n+                                                membershipTO,\n+                                                false);\n \n-                        return window;\n+                                        return window;\n \n+                                    }\n+                                });\n+                        createUserWin.show(target);\n                     }\n-                });\n-                createUserWin.show(target);\n-            }\n-        };\n-        item.add(editLink);\n+                };\n+                item.add(editLink);\n \n-        AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n+                AjaxLink deleteLink = new AjaxLink(\"deleteLink\") {\n \n-            @Override\n-            public void onClick(AjaxRequestTarget target) {\n-                int componentId = new Integer(getParent().getId());\n-                membershipTOs.remove(componentId);\n+                    @Override\n+                    public void onClick(AjaxRequestTarget target) {\n+                        int componentId = new Integer(getParent().getId());\n+                        membershipTOs.remove(componentId);\n \n-                target.addComponent(membershipsContainer);\n+                        target.addComponent(membershipsContainer);\n+                    }\n+                };\n+                item.add(deleteLink);\n             }\n         };\n-        item.add(deleteLink);\n-    }\n-};\n \n-membershipsContainer = new WebMarkupContainer(\"membershipsContainer\");\n-membershipsContainer.add(membershipsView);\n-membershipsContainer.setOutputMarkupId(true);\n+        membershipsContainer = new WebMarkupContainer(\"membershipsContainer\");\n+        membershipsContainer.add(membershipsView);\n+        membershipsContainer.setOutputMarkupId(true);\n \n-setWindowClosedCallback(createUserWin, membershipsContainer);\n+        setWindowClosedCallback(createUserWin, membershipsContainer);\n \n-userForm.add(membershipsContainer);\n-add(userForm);\n-}\n-\n-/**\n- * Originals : user's resources\n- * @param userTO\n- * @return\n- */\n-public List<ResourceTO> getSelectedResources(UserTO userTO) {\n-    List<ResourceTO> resources = new ArrayList<ResourceTO>();\n-    ResourceTO clusterableResourceTO;\n-\n-    for (String resourceName : userTO.getResources()) {\n-        clusterableResourceTO = new ResourceTO();\n-        clusterableResourceTO.setName(resourceName);\n-        resources.add(clusterableResourceTO);\n+        userForm.add(membershipsContainer);\n+        add(userForm);\n     }\n-    return resources;\n-}\n \n-/**\n- * Destinations : available resources\n- * @param userTO\n- * @return\n- */\n-public List<ResourceTO> getAvailableResources(UserTO userTO) {\n+    /**\n+     * Originals : user's resources\n+     * @param userTO\n+     * @return\n+     */\n+    public List<ResourceTO> getSelectedResources(UserTO userTO) {\n+        List<ResourceTO> resources = new ArrayList<ResourceTO>();\n+        ResourceTO clusterableResourceTO;\n \n-    List<ResourceTO> resources = new ArrayList<ResourceTO>();\n+        for (String resourceName : userTO.getResources()) {\n+            clusterableResourceTO = new ResourceTO();\n+            clusterableResourceTO.setName(resourceName);\n+            resources.add(clusterableResourceTO);\n+        }\n+        return resources;\n+    }\n+\n+    /**\n+     * Destinations : available resources\n+     * @param userTO\n+     * @return\n+     */\n+    public List<ResourceTO> getAvailableResources(UserTO userTO) {\n \n-    ResourcesRestClient resourcesRestClient = (ResourcesRestClient)\n-            ((SyncopeApplication) Application.get()).getApplicationContext()\n-            .getBean(\"resourcesRestClient\");\n+        List<ResourceTO> resources = new ArrayList<ResourceTO>();\n \n-    List<ResourceTO> resourcesTos = resourcesRestClient.getAllResources();\n+        List<ResourceTO> resourcesTos = resourceRestClient.getAllResources();\n \n-    for (ResourceTO resourceTO : resourcesTos)\n+        for (ResourceTO resourceTO : resourcesTos) {\n             resources.add(resourceTO);\n+        }\n \n-    return resources;\n-}\n+        return resources;\n+    }\n \n-/**\n- * Create a copy of old userTO object.\n- * @param userTO\n- */\n-public void cloneOldUserTO(UserTO userTO) {\n+    /**\n+     * Create a copy of old userTO object.\n+     * @param userTO\n+     */\n+    public void cloneOldUserTO(UserTO userTO) {\n \n-    oldUser = new UserTO();\n+        oldUser = new UserTO();\n \n-    oldUser.setId(userTO.getId());\n-    oldUser.setPassword(userTO.getPassword());\n+        oldUser.setId(userTO.getId());\n+        oldUser.setPassword(userTO.getPassword());\n \n-    AttributeTO tempAttr;\n-    for(AttributeTO attribute : userTO.getAttributes()) {\n-        tempAttr = new AttributeTO();\n-        tempAttr.setReadonly(attribute.isReadonly());\n+        AttributeTO tempAttr;\n+        for (AttributeTO attribute : userTO.getAttributes()) {\n+            tempAttr = new AttributeTO();\n+            tempAttr.setReadonly(attribute.isReadonly());\n \n-        tempAttr.setSchema(attribute.getSchema());\n+            tempAttr.setSchema(attribute.getSchema());\n \n-        for (String tempVal : attribute.getValues() )\n-            tempAttr.getValues().add(tempVal);\n+            for (String tempVal : attribute.getValues()) {\n+                tempAttr.getValues().add(tempVal);\n+            }\n \n-        oldUser.getAttributes().add(tempAttr);\n-    }\n+            oldUser.getAttributes().add(tempAttr);\n+        }\n \n-    oldUser.setResources(userTO.getResources());\n-    oldUser.setMemberships(new ArrayList<MembershipTO>());\n+        oldUser.setResources(userTO.getResources());\n+        oldUser.setMemberships(new ArrayList<MembershipTO>());\n \n-    MembershipTO membership;\n+        MembershipTO membership;\n \n-    for (MembershipTO membershipTO : userTO.getMemberships()) {\n-        membership = new MembershipTO();\n-        membership.setId(membershipTO.getId());\n-        membership.setRoleId(membershipTO.getRoleId());\n-        membership.setAttributes(membershipTO.getAttributes());\n-        oldUser.getMemberships().add(membership);\n+        for (MembershipTO membershipTO : userTO.getMemberships()) {\n+            membership = new MembershipTO();\n+            membership.setId(membershipTO.getId());\n+            membership.setRoleId(membershipTO.getRoleId());\n+            membership.setAttributes(membershipTO.getAttributes());\n+            oldUser.getMemberships().add(membership);\n+        }\n     }\n-}\n \n-/**\n- * Populate a roles hashmap of type (roleId,roleName)\n- */\n-public void setupRolesMap() {\n+    /**\n+     * Populate a roles hashmap of type (roleId,roleName)\n+     */\n+    public void setupRolesMap() {\n \n-    rolesMap = new HashMap();\n+        rolesMap = new HashMap();\n \n-    List<RoleTO> roleTOs = rolesRestClient.getAllRoles();\n+        List<RoleTO> roleTOs = roleRestClient.getAllRoles();\n \n-    for (RoleTO roleTO : roleTOs) {\n-        rolesMap.put(roleTO.getId(), roleTO.getName());\n+        for (RoleTO roleTO : roleTOs) {\n+            rolesMap.put(roleTO.getId(), roleTO.getName());\n+        }\n     }\n-}\n-\n-/**\n- * Set a WindowClosedCallback for a ModalWindow instance.\n- * @param window\n- * @param container\n- */\n-public void setWindowClosedCallback(ModalWindow window,\n-        final WebMarkupContainer container) {\n \n-    window.setWindowClosedCallback(\n-            new ModalWindow.WindowClosedCallback() {\n+    /**\n+     * Set a WindowClosedCallback for a ModalWindow instance.\n+     * @param window\n+     * @param container\n+     */\n+    public void setWindowClosedCallback(ModalWindow window,\n+            final WebMarkupContainer container) {\n \n-                public void onClose(AjaxRequestTarget target) {\n-                    target.addComponent(container);\n-                }\n-            });\n-}\n+        window.setWindowClosedCallback(\n+                new ModalWindow.WindowClosedCallback() {\n \n-/**\n- * Initialize the SchemaWrapper collection\n- * @param create\n- * @param userTO\n- */\n-public void setupSchemaWrappers(boolean create, UserTO userTO) {\n+                    public void onClose(AjaxRequestTarget target) {\n+                        target.addComponent(container);\n+                    }\n+                });\n+    }\n \n-    schemaWrappers = new ArrayList<SchemaWrapper>();\n-    SchemaWrapper schemaWrapper;\n+    /**\n+     * Initialize the SchemaWrapper collection\n+     * @param create\n+     * @param userTO\n+     */\n+    public void setupSchemaWrappers(boolean create, UserTO userTO) {\n \n-    SchemaRestClient schemaRestClient = (SchemaRestClient)\n-            ((SyncopeApplication) Application.get()).getApplicationContext()\n-            .getBean(\"schemaRestClient\");\n+        schemaWrappers = new ArrayList<SchemaWrapper>();\n+        SchemaWrapper schemaWrapper;\n \n-    List<SchemaTO> schemas = schemaRestClient.getAllUserSchemas();\n+        List<SchemaTO> schemas = schemaRestClient.getAllUserSchemas();\n \n-    boolean found = false;\n+        boolean found = false;\n \n-    if (create) {\n-        for (SchemaTO schema : schemas) {\n-            schemaWrapper = new SchemaWrapper(schema);\n-            schemaWrappers.add(schemaWrapper);\n-        }\n-    } else {\n-        for (SchemaTO schema : schemas) {\n-            for (AttributeTO attribute : userTO.getAttributes()) {\n-                if (schema.getName().equals(attribute.getSchema())) {\n-                    schemaWrapper = new SchemaWrapper(schema);\n+        if (create) {\n+            for (SchemaTO schema : schemas) {\n+                schemaWrapper = new SchemaWrapper(schema);\n+                schemaWrappers.add(schemaWrapper);\n+            }\n+        } else {\n+            for (SchemaTO schema : schemas) {\n+                for (AttributeTO attribute : userTO.getAttributes()) {\n+                    if (schema.getName().equals(attribute.getSchema())) {\n+                        schemaWrapper = new SchemaWrapper(schema);\n \n-                    schemaWrapper.setValues(attribute.getValues());\n+                        schemaWrapper.setValues(attribute.getValues());\n \n+                        schemaWrappers.add(schemaWrapper);\n+                        found = true;\n+                    }\n+                }\n+                if (!found) {\n+                    schemaWrapper = new SchemaWrapper(schema);\n                     schemaWrappers.add(schemaWrapper);\n-                    found = true;\n+                } else {\n+                    found = false;\n                 }\n             }\n-            if (!found) {\n-                schemaWrapper = new SchemaWrapper(schema);\n-                schemaWrappers.add(schemaWrapper);\n-            } else {\n-                found = false;\n-            }\n         }\n     }\n-}\n \n-/**\n- * Initialize the membershipTOs\n- * @param creation flag: true if a new User is being created, false otherwise\n- * @param userTO object\n- */\n-public void setupMemberships(boolean create, UserTO userTO) {\n+    /**\n+     * Initialize the membershipTOs\n+     * @param creation flag: true if a new User is being created, false otherwise\n+     * @param userTO object\n+     */\n+    public void setupMemberships(boolean create, UserTO userTO) {\n \n-    membershipTOs = new ArrayList<MembershipTO>();\n+        membershipTOs = new ArrayList<MembershipTO>();\n \n-    if (!create) {\n-        List<MembershipTO> memberships = userTO.getMemberships();\n+        if (!create) {\n+            List<MembershipTO> memberships = userTO.getMemberships();\n \n-        for (MembershipTO membership : memberships) {\n-            membershipTOs.add(membership);\n+            for (MembershipTO membership : memberships) {\n+                membershipTOs.add(membership);\n+            }\n         }\n     }\n-}\n \n-/**\n- * Initialize the user's attributes\n- * @param creation flag: true if a new User is being created, false otherwise\n- * @param userTO object\n- */\n-public List<AttributeTO> getUserAttributesList() {\n+    /**\n+     * Initialize the user's attributes\n+     * @param creation flag: true if a new User is being created, false otherwise\n+     * @param userTO object\n+     */\n+    public List<AttributeTO> getUserAttributesList() {\n+\n+        List<AttributeTO> attributes = new ArrayList<AttributeTO>();\n \n-    List<AttributeTO> attributes = new ArrayList<AttributeTO>();\n+        AttributeTO attribute;\n \n-    AttributeTO attribute;\n+        for (SchemaWrapper schemaWrapper : schemaWrappers) {\n \n-    for (SchemaWrapper schemaWrapper : schemaWrappers) {\n+            attribute = new AttributeTO();\n+            attribute.setSchema(schemaWrapper.getSchemaTO().getName());\n+            attribute.setValues(new ArrayList<String>());\n+            attribute.setReadonly(schemaWrapper.getSchemaTO().isReadonly());\n \n-        attribute = new AttributeTO();\n-        attribute.setSchema(schemaWrapper.getSchemaTO().getName());\n-        attribute.setValues(new ArrayList<String>());\n-        attribute.setReadonly(schemaWrapper.getSchemaTO().isReadonly());\n+            for (String value : schemaWrapper.getValues()) {\n+                attribute.getValues().add(value);\n+            }\n \n-        for (String value : schemaWrapper.getValues()) {\n-            attribute.getValues().add(value);\n+            attributes.add(attribute);\n         }\n \n-        attributes.add(attribute);\n+        return attributes;\n     }\n \n-    return attributes;\n-}\n+    /**\n+     * Convert a memberships ArrayList in a memberships HashSet list.\n+     * @return Set<MembershipTO> selected for a new user.\n+     */\n+    public List<MembershipTO> getMembershipsSet() {\n \n-/**\n- * Convert a memberships ArrayList in a memberships HashSet list.\n- * @return Set<MembershipTO> selected for a new user.\n- */\n-public List<MembershipTO> getMembershipsSet() {\n+        List<MembershipTO> memberships = new ArrayList<MembershipTO>();\n \n-    List<MembershipTO> memberships = new ArrayList<MembershipTO>();\n+        for (MembershipTO membership : membershipTOs) {\n+            memberships.add(membership);\n+        }\n \n-    for (MembershipTO membership : membershipTOs) {\n-        memberships.add(membership);\n+        return memberships;\n     }\n \n-    return memberships;\n-}\n+    /**\n+     * Covert a resources List<String> to Set<String>.\n+     * @return Set<String>\n+     */\n+    public Set<String> getResourcesSet(Collection<ResourceTO> resourcesList) {\n+        Set<String> resourcesSet = new HashSet<String>();\n \n-/**\n- * Covert a resources List<String> to Set<String>.\n- * @return Set<String>\n- */\n-public Set<String> getResourcesSet(Collection<ResourceTO> resourcesList) {\n-    Set<String> resourcesSet = new HashSet<String>();\n+        for (ResourceTO resourceTO : resourcesList) {\n+            resourcesSet.add(resourceTO.getName());\n+        }\n \n-   for (ResourceTO resourceTO : resourcesList) {\n-        resourcesSet.add(resourceTO.getName());\n+        return resourcesSet;\n     }\n \n-    return resourcesSet;\n-}\n+    public List<MembershipTO> getMembershipTOs() {\n+        return membershipTOs;\n+    }\n \n-public List<MembershipTO> getMembershipTOs() {\n-    return membershipTOs;\n-}\n+    public void setMembershipTOs(List<MembershipTO> membershipTOs) {\n+        this.membershipTOs = membershipTOs;\n+    }\n \n-public void setMembershipTOs(List<MembershipTO> membershipTOs) {\n-    this.membershipTOs = membershipTOs;\n-}\n+    /**\n+     * Updates the modified user object.\n+     * @param updated userTO\n+     * @return\n+     */\n+    public void setupUserMod(UserTO userTO) {\n \n-/**\n- * Updates the modified user object.\n- * @param updated userTO\n- * @return\n- */\n-public void setupUserMod(UserTO userTO) {\n+        //1.Check if the password has been changed and update it\n+        if (!oldUser.getPassword().equals(userTO.getPassword())) {\n+            userMod = new UserMod();\n+            userMod.setPassword(userTO.getPassword());\n+        }\n \n-    //1.Check if the password has been changed and update it\n-    if (!oldUser.getPassword().equals(userTO.getPassword())) {\n-        userMod = new UserMod();\n-        userMod.setPassword(userTO.getPassword());\n-    }\n+        //2.Update user's schema attributes\n+        for (AttributeTO attributeTO : userTO.getAttributes()) {\n+            searchAndUpdateAttribute(attributeTO);\n+        }\n \n-    //2.Update user's schema attributes\n-    for (AttributeTO attributeTO : userTO.getAttributes()) {\n-        searchAndUpdateAttribute(attributeTO);\n-    }\n+        //3.Update user's resources\n+        for (String resource : userTO.getResources()) {\n+            searchAndAddResource(resource);\n+        }\n \n-    //3.Update user's resources\n-    for (String resource : userTO.getResources()) {\n-        searchAndAddResource(resource);\n-    }\n \n+        for (String resource : oldUser.getResources()) {\n+            searchAndDropResource(resource, userTO);\n+        }\n \n-    for (String resource : oldUser.getResources()) {\n-        searchAndDropResource(resource, userTO);\n-    }\n+        //4.Update user's memberships\n+        for (MembershipTO membership : userTO.getMemberships()) {\n+            searchAndUpdateMembership(membership);\n+        }\n \n-    //4.Update user's memberships\n-    for (MembershipTO membership : userTO.getMemberships()) {\n-        searchAndUpdateMembership(membership);\n-    }\n+        for (MembershipTO membership : oldUser.getMemberships()) {\n+            searchAndDropMembership(membership, userTO);\n+        }\n \n-    for (MembershipTO membership : oldUser.getMemberships()) {\n-        searchAndDropMembership(membership, userTO);\n+        if (userMod != null) {\n+            userMod.setId(oldUser.getId());\n+        }\n     }\n \n-    if(userMod != null)\n-        userMod.setId(oldUser.getId());\n-}\n-\n-public void searchAndUpdateAttribute(AttributeTO attributeTO) {\n-    boolean found = false;\n-    boolean changed = false;\n+    public void searchAndUpdateAttribute(AttributeTO attributeTO) {\n+        boolean found = false;\n+        boolean changed = false;\n \n-    AttributeMod attributeMod = new AttributeMod();\n-    attributeMod.setSchema(attributeTO.getSchema());\n+        AttributeMod attributeMod = new AttributeMod();\n+        attributeMod.setSchema(attributeTO.getSchema());\n \n-    for (AttributeTO oldAttribute : oldUser.getAttributes()) {\n-        if (attributeTO.getSchema().equals(oldAttribute.getSchema())) {\n+        for (AttributeTO oldAttribute : oldUser.getAttributes()) {\n+            if (attributeTO.getSchema().equals(oldAttribute.getSchema())) {\n \n-            if (!attributeTO.equals(oldAttribute) && !oldAttribute\n-                    .isReadonly()) {\n+                if (!attributeTO.equals(oldAttribute) && !oldAttribute.\n+                        isReadonly()) {\n \n-                if (attributeTO.getValues().size() > 1)\n-                    attributeMod.setValuesToBeAdded(attributeTO.getValues());\n-                else\n-                    attributeMod.addValueToBeAdded(attributeTO.getValues()\n-                            .iterator().next());\n+                    if (attributeTO.getValues().size() > 1) {\n+                        attributeMod.setValuesToBeAdded(\n+                                attributeTO.getValues());\n+                    } else {\n+                        attributeMod.addValueToBeAdded(\n+                                attributeTO.getValues().iterator().next());\n+                    }\n \n-                if(userMod == null)\n-                    userMod = new UserMod();\n+                    if (userMod == null) {\n+                        userMod = new UserMod();\n+                    }\n \n-                userMod.addAttributeToBeRemoved(oldAttribute.getSchema());\n-                userMod.addAttributeToBeUpdated(attributeMod);\n+                    userMod.addAttributeToBeRemoved(oldAttribute.getSchema());\n+                    userMod.addAttributeToBeUpdated(attributeMod);\n \n-                changed = true;\n-                break;\n-            }\n+                    changed = true;\n+                    break;\n+                }\n                 found = true;\n+            }\n         }\n-    }\n \n-    if (!found & !changed && !attributeTO.isReadonly() &&\n-            attributeTO.getValues() != null) {\n+        if (!found & !changed && !attributeTO.isReadonly()\n+                && attributeTO.getValues() != null) {\n \n-        if(attributeTO.getValues().iterator().next() != null ){\n-            attributeMod.setValuesToBeAdded(attributeTO.getValues());\n+            if (attributeTO.getValues().iterator().next() != null) {\n+                attributeMod.setValuesToBeAdded(attributeTO.getValues());\n \n-        if(userMod == null)\n-            userMod = new UserMod();\n+                if (userMod == null) {\n+                    userMod = new UserMod();\n+                }\n \n-            userMod.addAttributeToBeUpdated(attributeMod);\n+                userMod.addAttributeToBeUpdated(attributeMod);\n+            } else {\n+                attributeMod = null;\n+            }\n         }\n-        else attributeMod = null;\n     }\n-}\n \n-/**\n- * Search for a resource and add that one to the UserMod object if\n- * it doesn't exist.\n- * @param resource, new resource added\n- */\n-public void searchAndAddResource(String resource) {\n-    boolean found = false;\n-\n-    /* Check if the current resource was existent before the update and in this\n-     case just ignore it */\n-    for (String oldResource : oldUser.getResources()) {\n-        if (resource.equals(oldResource)) {\n-            found = true;\n+    /**\n+     * Search for a resource and add that one to the UserMod object if\n+     * it doesn't exist.\n+     * @param resource, new resource added\n+     */\n+    public void searchAndAddResource(String resource) {\n+        boolean found = false;\n+\n+        /* Check if the current resource was existent before the update and in this\n+        case just ignore it */\n+        for (String oldResource : oldUser.getResources()) {\n+            if (resource.equals(oldResource)) {\n+                found = true;\n+            }\n         }\n-    }\n \n-    if (!found) {\n-        if(userMod == null)\n-          userMod = new UserMod();\n+        if (!found) {\n+            if (userMod == null) {\n+                userMod = new UserMod();\n+            }\n \n-          userMod.addResourceToBeAdded(resource);\n+            userMod.addResourceToBeAdded(resource);\n+        }\n     }\n-}\n \n-/**\n- * Search for a resource and drop that one from the UserMod object if\n- * it doesn't exist anymore.\n- * @param resource\n- * @param userTO\n- */\n-public void searchAndDropResource(String resource, UserTO userTO) {\n-    boolean found = false;\n-\n-    /*Check if the current resource was existent before the update and in this \n-     case just ignore it */\n-    for (String newResource : userTO.getResources()) {\n-        if (resource.equals(newResource)) {\n-            found = true;\n+    /**\n+     * Search for a resource and drop that one from the UserMod object if\n+     * it doesn't exist anymore.\n+     * @param resource\n+     * @param userTO\n+     */\n+    public void searchAndDropResource(String resource, UserTO userTO) {\n+        boolean found = false;\n+\n+        /*Check if the current resource was existent before the update and in this\n+        case just ignore it */\n+        for (String newResource : userTO.getResources()) {\n+            if (resource.equals(newResource)) {\n+                found = true;\n+            }\n         }\n-    }\n \n-    if (!found) {\n-       if(userMod == null)\n-           userMod = new UserMod();\n-        userMod.addResourceToBeRemoved(resource);\n+        if (!found) {\n+            if (userMod == null) {\n+                userMod = new UserMod();\n+            }\n+            userMod.addResourceToBeRemoved(resource);\n+        }\n     }\n-}\n \n-/**\n- * Update the Membership.\n- * @param new membershipTO\n- */\n-public void searchAndUpdateMembership(MembershipTO newMembership) {\n-    boolean found = false;\n-    boolean attrFound = false;\n+    /**\n+     * Update the Membership.\n+     * @param new membershipTO\n+     */\n+    public void searchAndUpdateMembership(MembershipTO newMembership) {\n+        boolean found = false;\n+        boolean attrFound = false;\n \n-    MembershipMod membershipMod = new MembershipMod();\n-    membershipMod.setRole(newMembership.getRoleId());\n+        MembershipMod membershipMod = new MembershipMod();\n+        membershipMod.setRole(newMembership.getRoleId());\n \n-    AttributeMod attributeMod;\n+        AttributeMod attributeMod;\n \n-    //1. If the membership exists update it\n-    for (MembershipTO oldMembership : oldUser.getMemberships()) {\n-        if (newMembership.getRoleId() == oldMembership.getRoleId()) {\n+        //1. If the membership exists update it\n+        for (MembershipTO oldMembership : oldUser.getMemberships()) {\n+            if (newMembership.getRoleId() == oldMembership.getRoleId()) {\n \n-            for (AttributeTO newAttribute : newMembership.getAttributes()) {\n-                for (AttributeTO oldAttribute : oldMembership.getAttributes()) {\n+                for (AttributeTO newAttribute : newMembership.getAttributes()) {\n+                    for (AttributeTO oldAttribute : oldMembership.getAttributes()) {\n \n-                    if(oldAttribute.getSchema().equals(newAttribute.getSchema())) {\n+                        if (oldAttribute.getSchema().equals(newAttribute.\n+                                getSchema())) {\n \n-                        attributeMod = new AttributeMod();\n-                        attributeMod.setSchema(newAttribute.getSchema());\n+                            attributeMod = new AttributeMod();\n+                            attributeMod.setSchema(newAttribute.getSchema());\n \n-                        attributeMod.setValuesToBeAdded(newAttribute.getValues());\n+                            attributeMod.setValuesToBeAdded(newAttribute.\n+                                    getValues());\n \n+                            membershipMod.addAttributeToBeUpdated(attributeMod);\n+                            //membershipMod.addAttributeToBeRemoved(oldAttribute.getSchema());\n+                            attrFound = true;\n+                            break;\n+                        }\n+                    }\n+                    if (!attrFound) {\n+                        attributeMod = new AttributeMod();\n+                        attributeMod.setSchema(newAttribute.getSchema());\n+                        attributeMod.setValuesToBeAdded(\n+                                newAttribute.getValues());\n                         membershipMod.addAttributeToBeUpdated(attributeMod);\n-                        //membershipMod.addAttributeToBeRemoved(oldAttribute.getSchema());\n-                        attrFound = true;\n-                        break;\n                     }\n+                    attrFound = false;\n                 }\n-                if(!attrFound) {\n-                    attributeMod = new AttributeMod();\n-                    attributeMod.setSchema(newAttribute.getSchema());\n-                    attributeMod.setValuesToBeAdded(newAttribute.getValues());\n-                    membershipMod.addAttributeToBeUpdated(attributeMod);\n-                }\n-                attrFound = false;\n-            }\n \n-            if(userMod == null)\n-                userMod = new UserMod();\n+                if (userMod == null) {\n+                    userMod = new UserMod();\n+                }\n \n-            userMod.addMembershipToBeRemoved(oldMembership.getId());\n-            userMod.addMembershipToBeAdded(membershipMod);\n+                userMod.addMembershipToBeRemoved(oldMembership.getId());\n+                userMod.addMembershipToBeAdded(membershipMod);\n \n-            found = true;\n-            break;\n+                found = true;\n+                break;\n+            }\n         }\n-    }\n \n-    //2.Otherwise, if it doesn't exist, create it from scratch\n-    if (!found) {\n-        Set<AttributeMod> attributes = new HashSet<AttributeMod>();\n+        //2.Otherwise, if it doesn't exist, create it from scratch\n+        if (!found) {\n+            Set<AttributeMod> attributes = new HashSet<AttributeMod>();\n \n-        for (AttributeTO newAttribute : newMembership.getAttributes()) {\n-            attributeMod = new AttributeMod();\n-            attributeMod.setSchema(newAttribute.getSchema());\n-            attributeMod.setValuesToBeAdded(newAttribute.getValues());\n+            for (AttributeTO newAttribute : newMembership.getAttributes()) {\n+                attributeMod = new AttributeMod();\n+                attributeMod.setSchema(newAttribute.getSchema());\n+                attributeMod.setValuesToBeAdded(newAttribute.getValues());\n \n-            attributes.add(attributeMod);\n-        }\n+                attributes.add(attributeMod);\n+            }\n \n-        membershipMod.setAttributesToBeUpdated(attributes);\n+            membershipMod.setAttributesToBeUpdated(attributes);\n \n-        if(userMod == null)\n-           userMod = new UserMod();\n+            if (userMod == null) {\n+                userMod = new UserMod();\n+            }\n \n-        userMod.addMembershipToBeAdded(membershipMod);\n+            userMod.addMembershipToBeAdded(membershipMod);\n+        }\n     }\n-}\n \n-/**\n- * Drop membership not present anymore.\n- * @param membershipTO\n- * @param userTO\n- */\n-public void searchAndDropMembership(MembershipTO oldMembership,\n-        UserTO userTO) {\n-    boolean found = false;\n-\n-    /*Check if the current resource was existent before the update and\n-     in this case just ignore it*/\n-    for (MembershipTO newMembership : userTO.getMemberships()) {\n-        if (newMembership.getId() == oldMembership.getId()) {\n-            found = true;\n+    /**\n+     * Drop membership not present anymore.\n+     * @param membershipTO\n+     * @param userTO\n+     */\n+    public void searchAndDropMembership(MembershipTO oldMembership,\n+            UserTO userTO) {\n+        boolean found = false;\n+\n+        /*Check if the current resource was existent before the update and\n+        in this case just ignore it*/\n+        for (MembershipTO newMembership : userTO.getMemberships()) {\n+            if (newMembership.getId() == oldMembership.getId()) {\n+                found = true;\n+            }\n         }\n-    }\n \n-    if (!found) {\n-        if(userMod == null)\n-           userMod = new UserMod();\n+        if (!found) {\n+            if (userMod == null) {\n+                userMod = new UserMod();\n+            }\n \n-        userMod.addMembershipToBeRemoved(oldMembership.getId());\n+            userMod.addMembershipToBeRemoved(oldMembership.getId());\n+        }\n     }\n }\n-}\n\\ No newline at end of file"},{"sha":"fb256c3b070e600f24ef54626ca762e2b3d7ee93","filename":"console/src/main/java/org/syncope/console/pages/Users.java","status":"modified","additions":494,"deletions":440,"changes":934,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -28,8 +28,7 @@\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n-import org.apache.wicket.authorization.strategies.role.metadata\n-        .MetaDataRoleAuthorizationStrategy;\n+import org.apache.wicket.authorization.strategies.role.metadata.MetaDataRoleAuthorizationStrategy;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.modal.ModalWindow;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n@@ -40,7 +39,6 @@\n import org.apache.wicket.markup.html.list.ListView;\n import org.apache.wicket.markup.html.list.PageableListView;\n import org.apache.wicket.markup.html.panel.FeedbackPanel;\n-import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.Model;\n@@ -60,9 +58,9 @@\n import org.syncope.console.commons.SearchConditionWrapper.OperationType;\n import org.syncope.console.commons.Utility;\n import org.syncope.console.rest.SchemaRestClient;\n-import org.syncope.console.rest.ConfigurationsRestClient;\n-import org.syncope.console.rest.RolesRestClient;\n-import org.syncope.console.rest.UsersRestClient;\n+import org.syncope.console.rest.ConfigurationRestClient;\n+import org.syncope.console.rest.RoleRestClient;\n+import org.syncope.console.rest.UserRestClient;\n import org.syncope.console.wicket.markup.html.form.UpdatingCheckBox;\n import org.syncope.console.wicket.markup.html.form.UpdatingDropDownChoice;\n import org.syncope.console.wicket.markup.html.form.UpdatingTextField;\n@@ -72,82 +70,103 @@\n  */\n public class Users extends BasePage {\n \n-    @SpringBean(name = \"usersRestClient\")\n-    private UsersRestClient usersRestClient;\n+    @SpringBean\n+    private UserRestClient userRestClient;\n \n-    @SpringBean(name = \"schemaRestClient\")\n+    @SpringBean\n     private SchemaRestClient schemaRestClient;\n \n-    @SpringBean(name = \"rolesRestClient\")\n-    private RolesRestClient rolesRestClient;\n+    @SpringBean\n+    private RoleRestClient roleRestClient;\n \n-    @SpringBean(name = \"configurationsRestClient\")\n-    private ConfigurationsRestClient configurationsRestClient;\n+    @SpringBean\n+    private ConfigurationRestClient confRestClient;\n \n-    @SpringBean(name = \"utility\")\n-    Utility utility;\n+    @SpringBean\n+    private Utility utility;\n \n-    final ModalWindow createUserWin;\n-    final ModalWindow editUserWin;\n-    final ModalWindow changeAttribsViewWin;\n+    private final ModalWindow createUserWin;\n \n-    final int WIN_ATTRIBUTES_HEIGHT = 515;\n-    final int WIN_ATTRIBUTES_WIDTH = 775;\n+    private final ModalWindow editUserWin;\n \n-    final int WIN_USER_HEIGHT = 680;\n-    final int WIN_USER_WIDTH = 1133;\n+    private final ModalWindow changeAttribsViewWin;\n \n-    WebMarkupContainer usersTableSearchContainer;\n-    WebMarkupContainer searchResultsContainer;\n-    WebMarkupContainer usersTableContainer;\n+    private final static int WIN_ATTRIBUTES_HEIGHT = 515;\n+\n+    private final static int WIN_ATTRIBUTES_WIDTH = 775;\n+\n+    private final static int WIN_USER_HEIGHT = 680;\n+\n+    private final static int WIN_USER_WIDTH = 1133;\n+\n+    private WebMarkupContainer usersTableSearchContainer;\n+\n+    private WebMarkupContainer searchResultsContainer;\n+\n+    private WebMarkupContainer usersTableContainer;\n \n     /*\n-     Response flag set by the Modal Window after the operation is completed\n+    Response flag set by the Modal Window after the operation is completed\n      */\n-    boolean operationResult = false;\n+    private boolean operationResult = false;\n \n-    FeedbackPanel feedbackPanel;\n-    List<SearchConditionWrapper> searchConditionsList;\n+    private FeedbackPanel feedbackPanel;\n \n-    List<UserTO> searchMatchedUsers;\n+    private List<SearchConditionWrapper> searchConditionsList;\n+\n+    private List<UserTO> searchMatchedUsers;\n \n     private int paginatorRows;\n+\n     private int paginatorSearchRows;\n \n-    int currentViewPage = 1;\n-    int currentSearchPage = 1;\n+    private int currentViewPage = 1;\n+\n+    private int currentSearchPage = 1;\n \n     /** Ajax Links for User's view paginator**/\n-    AjaxLink incrementUserViewLink;\n-    AjaxLink decrementUserViewLink;\n-    AjaxLink firstPageLink;\n-    AjaxLink lastPageLink;\n-    \n+    private AjaxLink incrementUserViewLink;\n+\n+    private AjaxLink decrementUserViewLink;\n+\n+    private AjaxLink firstPageLink;\n+\n+    private AjaxLink lastPageLink;\n+\n     /** Labels for Users' view paginator*/\n-    Label pageRecordFrom;\n-    Label pageRecordTo;\n-    Label totalRecords;\n+    private Label pageRecordFrom;\n+\n+    private Label pageRecordTo;\n+\n+    private Label totalRecords;\n \n     /** Ajax Links for Users' search paginator */\n-    AjaxLink incrementUserLinkSearch;\n-    AjaxLink decrementUserLinkSearch;\n-    AjaxLink firstPageLinkSearch;\n-    AjaxLink lastPageLinkSearch;\n+    private AjaxLink incrementUserLinkSearch;\n+\n+    private AjaxLink decrementUserLinkSearch;\n+\n+    private AjaxLink firstPageLinkSearch;\n+\n+    private AjaxLink lastPageLinkSearch;\n \n     /** Labels for Users' search paginator */\n-    Label pageRecordFromSearch;\n-    Label pageRecordToSearch;\n-    Label totalRecordsSearch;\n+    private Label pageRecordFromSearch;\n+\n+    private Label pageRecordToSearch;\n+\n+    private Label totalRecordsSearch;\n+\n+    private List<String> columnsList;\n \n-    List<String> columnsList;\n+    private NodeCond nodeCond;\n \n-    NodeCond nodeCond;\n+    private PaginatedResult paginatedUsers;\n \n-    PaginatedResult paginatedUsers;\n-    PaginatedResult paginatedSearchUsers;\n+    private PaginatedResult paginatedSearchUsers;\n \n-    ListView pageLinksView;\n-    ListView pageLinksSearchView;\n+    private ListView pageLinksView;\n+\n+    private ListView pageLinksSearchView;\n \n     public Users(PageParameters parameters) {\n         super(parameters);\n@@ -169,11 +188,11 @@ public Users(PageParameters parameters) {\n         final IModel columns = new LoadableDetachableModel() {\n \n             protected Object load() {\n-                ConfigurationTO configuration = configurationsRestClient\n-                        .readConfiguration(\"users.attributes.view\");\n+                ConfigurationTO configuration = confRestClient.\n+                        readConfiguration(\"users.attributes.view\");\n                 columnsList = new ArrayList<String>();\n \n-                if (configuration != null && configuration.getConfValue() \n+                if (configuration != null && configuration.getConfValue()\n                         != null) {\n                     String conf = configuration.getConfValue();\n                     StringTokenizer st = new StringTokenizer(conf, \";\");\n@@ -188,7 +207,7 @@ protected Object load() {\n             }\n         };\n \n-       ListView columnsView = new ListView(\"usersSchema\",columns) {\n+        ListView columnsView = new ListView(\"usersSchema\", columns) {\n \n             @Override\n             protected void populateItem(final ListItem item) {\n@@ -200,27 +219,27 @@ protected void populateItem(final ListItem item) {\n         };\n \n \n-        paginatorRows = utility.getPaginatorRowsToDisplay(Constants\n-                    .CONF_USERS_PAGINATOR_ROWS);\n+        paginatorRows = utility.getPaginatorRowsToDisplay(\n+                Constants.CONF_USERS_PAGINATOR_ROWS);\n \n-        paginatorSearchRows = utility.getPaginatorRowsToDisplay(Constants\n-                    .CONF_USERS_SEARCH_PAGINATOR_ROWS);\n+        paginatorSearchRows = utility.getPaginatorRowsToDisplay(\n+                Constants.CONF_USERS_SEARCH_PAGINATOR_ROWS);\n \n         setupPaginatedUsers();\n \n         IModel usersModel = new LoadableDetachableModel() {\n-        \n+\n             @Override\n             protected Object load() {\n-                paginatedUsers = usersRestClient\n-                        .getPaginatedUser(currentViewPage, paginatorRows);\n+                paginatedUsers = userRestClient.getPaginatedUser(\n+                        currentViewPage, paginatorRows);\n \n                 //Refresh links just after the selecting page click\n-                if(incrementUserViewLink != null && decrementUserViewLink != null\n+                if (incrementUserViewLink != null && decrementUserViewLink != null\n                         && firstPageLink != null && lastPageLink != null) {\n-                    int totalPages =  (int) Math.ceil(\n-                            paginatedUsers.getTotalRecords().doubleValue()/\n-                        new Double(paginatedUsers.getPageSize()));\n+                    int totalPages = (int) Math.ceil(\n+                            paginatedUsers.getTotalRecords().doubleValue()\n+                            / new Double(paginatedUsers.getPageSize()));\n \n                     if (currentViewPage == totalPages) {\n                         incrementUserViewLink.setEnabled(false);\n@@ -232,29 +251,31 @@ protected Object load() {\n \n                     if (currentViewPage == 1) {\n                         decrementUserViewLink.setEnabled(false);\n-                    } else \n+                    } else {\n                         decrementUserViewLink.setEnabled(true);\n+                    }\n \n                     if (totalPages == 1 || currentViewPage == 1) {\n                         firstPageLink.setEnabled(false);\n-                    } else\n+                    } else {\n                         firstPageLink.setEnabled(true);\n+                    }\n                 }\n \n-                if(pageRecordFrom != null && pageRecordTo != null\n+                if (pageRecordFrom != null && pageRecordTo != null\n                         && totalRecords != null) {\n \n                     //Records indexes for paginator's labels\n                     int firstPageRecord = 1;\n                     int lastPageRecord = paginatedUsers.getRecordsInPage();\n \n                     if (paginatedUsers.getPageNumber() > 1) {\n-                        firstPageRecord = (paginatedUsers.getPageSize() *\n-                                (paginatedUsers.getPageNumber() - 1)) + 1;\n+                        firstPageRecord = (paginatedUsers.getPageSize()\n+                                * (paginatedUsers.getPageNumber() - 1)) + 1;\n \n-                        lastPageRecord = (paginatedUsers.getPageSize() *\n-                                (paginatedUsers.getPageNumber() - 1)) +\n-                                paginatedUsers.getRecordsInPage();\n+                        lastPageRecord = (paginatedUsers.getPageSize()\n+                                * (paginatedUsers.getPageNumber() - 1))\n+                                + paginatedUsers.getRecordsInPage();\n                     }\n \n                     pageRecordFrom.setDefaultModelObject(\n@@ -276,7 +297,7 @@ protected Object load() {\n         usersTableContainer = new WebMarkupContainer(\"usersTableContainer\");\n \n         final PageableListView usersView = new PageableListView(\"results\",\n-                    usersModel, paginatorRows) {\n+                usersModel, paginatorRows) {\n \n             @Override\n             protected void populateItem(final ListItem item) {\n@@ -294,34 +315,34 @@ protected void populateItem(final ListItem item) {\n                     item.add(new Label(\"token\", getString(\"tokenNotValued\")));\n                 }\n \n-                item.add(new ListView(\"selectedAttributes\", attributesToDisplay(userTO)) {\n+                item.add(new ListView(\"selectedAttributes\", attributesToDisplay(\n+                        userTO)) {\n \n                     @Override\n                     protected void populateItem(ListItem item) {\n                         AttributeWrapper attribute =\n                                 (AttributeWrapper) item.getDefaultModelObject();\n \n-                        for(String name : columnsList){\n+                        for (String name : columnsList) {\n \n-                             if( name.equalsIgnoreCase(attribute.getKey())) {\n-                                 item.add(new Label(\"name\",attribute.getValue()));\n-                             }\n-                             else if(!name.equalsIgnoreCase(attribute.getKey())) {\n-\n-                             }\n+                            if (name.equalsIgnoreCase(attribute.getKey())) {\n+                                item.add(new Label(\"name\", attribute.getValue()));\n+                            } else if (!name.equalsIgnoreCase(attribute.\n+                                    getKey())) {\n+                            }\n \n                         }\n \n                     }\n-\n                 });\n \n                 AjaxLink editLink = new AjaxLink(\"editLink\",\n                         new Model(getString(\"edit\"))) {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n-                     final UserTO userTO = (UserTO) item.getDefaultModelObject();\n+                        final UserTO userTO = (UserTO) item.\n+                                getDefaultModelObject();\n \n                         editUserWin.setPageCreator(new ModalWindow.PageCreator() {\n \n@@ -334,7 +355,6 @@ public Page createPage() {\n \n                         editUserWin.show(target);\n                     }\n-\n                 };\n \n                 item.add(editLink);\n@@ -344,24 +364,27 @@ public Page createPage() {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n-                        usersRestClient.deleteUser(String\n-                                .valueOf(userTO.getId()));\n+                        userRestClient.deleteUser(\n+                                String.valueOf(userTO.getId()));\n \n                         info(getString(\"operation_succeded\"));\n                         target.addComponent(feedbackPanel);\n \n                         target.addComponent(usersTableSearchContainer);\n                     }\n-                    \n+\n                     @Override\n                     protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                        return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n+                        return new AjaxPreprocessingCallDecorator(super.\n+                                getAjaxCallDecorator()) {\n+\n                             private static final long serialVersionUID = 1L;\n \n                             @Override\n                             public CharSequence preDecorateScript(CharSequence script) {\n-                                return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n-                                        +\"{\"+script+\"}\";\n+                                return \"if (confirm('\" + getString(\n+                                        \"confirmDelete\") + \"'))\"\n+                                        + \"{\" + script + \"}\";\n                             }\n                         };\n                     }\n@@ -372,12 +395,12 @@ public CharSequence preDecorateScript(CharSequence script) {\n         usersTableContainer.add(usersView);\n         usersTableContainer.setOutputMarkupId(true);\n \n-        incrementUserViewLink = new AjaxLink(\"incrementLink\"){\n+        incrementUserViewLink = new AjaxLink(\"incrementLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n                 currentViewPage++;\n-                \n+\n                 //Update pageLinks on paginator\n                 List<Integer> pageIdList = getPaginatorIndexes();\n                 pageLinksView.setList(pageIdList);\n@@ -387,10 +410,10 @@ public void onClick(AjaxRequestTarget target) {\n             }\n         };\n \n-        int totalPages =  (int) Math.ceil(paginatedUsers.getTotalRecords()\n-                .doubleValue()/new Double(paginatedUsers.getPageSize()));\n+        int totalPages = (int) Math.ceil(paginatedUsers.getTotalRecords().\n+                doubleValue() / new Double(paginatedUsers.getPageSize()));\n \n-        firstPageLink = new AjaxLink(\"firstPageLink\"){\n+        firstPageLink = new AjaxLink(\"firstPageLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n@@ -405,12 +428,12 @@ public void onClick(AjaxRequestTarget target) {\n             }\n         };\n \n-        lastPageLink = new AjaxLink(\"lastPageLink\"){\n+        lastPageLink = new AjaxLink(\"lastPageLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n-                int totalPages =  (int) Math.ceil(paginatedUsers\n-                        .getTotalRecords().doubleValue()/ new Double(\n+                int totalPages = (int) Math.ceil(paginatedUsers.getTotalRecords().\n+                        doubleValue() / new Double(\n                         paginatedUsers.getPageSize()));\n                 currentViewPage = totalPages;\n \n@@ -423,7 +446,7 @@ public void onClick(AjaxRequestTarget target) {\n             }\n         };\n \n-       decrementUserViewLink = new AjaxLink(\"decrementLink\"){\n+        decrementUserViewLink = new AjaxLink(\"decrementLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n@@ -438,17 +461,19 @@ public void onClick(AjaxRequestTarget target) {\n             }\n         };\n \n-        if(currentViewPage == totalPages) {\n+        if (currentViewPage == totalPages) {\n             incrementUserViewLink.setEnabled(false);\n             lastPageLink.setEnabled(false);\n         }\n \n-        if(currentViewPage == 1)\n+        if (currentViewPage == 1) {\n             decrementUserViewLink.setEnabled(false);\n+        }\n \n-        if(totalPages == 1 || currentViewPage == 1)\n+        if (totalPages == 1 || currentViewPage == 1) {\n             firstPageLink.setEnabled(false);\n-        \n+        }\n+\n         //Add to usersTableSearchContainer users' list navigation controls\n         usersTableContainer.add(incrementUserViewLink);\n         //usersTableContainer.add(currentPageUserViewLabel);\n@@ -459,13 +484,13 @@ public void onClick(AjaxRequestTarget target) {\n         int firstPageRecord = 1;\n         int lastPageRecord = paginatedUsers.getRecordsInPage();\n \n-        if(paginatedUsers.getPageNumber() > 1) {\n-          firstPageRecord = (paginatedUsers.getPageSize() *\n-                             (paginatedUsers.getPageNumber()-1) ) + 1;\n-          \n-          lastPageRecord = (paginatedUsers.getPageSize() *\n-                             (paginatedUsers.getPageNumber()-1) ) +\n-                             paginatedUsers.getRecordsInPage();\n+        if (paginatedUsers.getPageNumber() > 1) {\n+            firstPageRecord = (paginatedUsers.getPageSize()\n+                    * (paginatedUsers.getPageNumber() - 1)) + 1;\n+\n+            lastPageRecord = (paginatedUsers.getPageSize()\n+                    * (paginatedUsers.getPageNumber() - 1))\n+                    + paginatedUsers.getRecordsInPage();\n         }\n \n         usersTableContainer.add(pageRecordFrom = new Label(\"pageRecordFrom\",\n@@ -475,8 +500,8 @@ public void onClick(AjaxRequestTarget target) {\n                 new Model<String>(String.valueOf(lastPageRecord))));\n \n         usersTableContainer.add(totalRecords = new Label(\"totalRecords\",\n-                new Model<String>(String.valueOf(paginatedUsers\n-                .getTotalRecords()))));\n+                new Model<String>(String.valueOf(\n+                paginatedUsers.getTotalRecords()))));\n \n         usersTableContainer.add(decrementUserViewLink);\n \n@@ -488,31 +513,32 @@ public void onClick(AjaxRequestTarget target) {\n             @Override\n             protected void populateItem(ListItem item) {\n                 final int pageId = (Integer) item.getDefaultModelObject();\n-                \n-                AjaxLink pageLink = new AjaxLink(\"pageLink\"){\n \n-                @Override\n-                public void onClick(AjaxRequestTarget target) {\n-                    currentViewPage = pageId;\n+                AjaxLink pageLink = new AjaxLink(\"pageLink\") {\n+\n+                    @Override\n+                    public void onClick(AjaxRequestTarget target) {\n+                        currentViewPage = pageId;\n+\n+                        //Update pageLinks on paginator\n+                        List<Integer> pageIdList = getPaginatorSearchIndexes();\n+                        pageLinksSearchView.setList(pageIdList);\n+                        target.addChildren(pageLinksSearchView, AjaxLink.class);\n \n-                    //Update pageLinks on paginator\n-                    List<Integer> pageIdList = getPaginatorSearchIndexes();\n-                    pageLinksSearchView.setList(pageIdList);\n-                    target.addChildren(pageLinksSearchView, AjaxLink.class);\n+                        target.addComponent(usersTableContainer);\n+                    }\n+                };\n \n-                    target.addComponent(usersTableContainer);\n+                if (currentViewPage == pageId) {\n+                    pageLink.setEnabled(false);\n+                } else {\n+                    pageLink.setEnabled(true);\n                 }\n-            };\n-\n-            if(currentViewPage == pageId)\n-                pageLink.setEnabled(false);\n-            else\n-                pageLink.setEnabled(true);\n-            \n-            pageLink.add(new Label(\"name\",new Model<String>(\n-                    String.valueOf(pageId))));\n-            \n-            item.add(pageLink);\n+\n+                pageLink.add(new Label(\"name\", new Model<String>(\n+                        String.valueOf(pageId))));\n+\n+                item.add(pageLink);\n             }\n         };\n \n@@ -551,8 +577,9 @@ public void onClose(AjaxRequestTarget target) {\n                             getSession().info(getString(\"operation_succeded\"));\n                             setResponsePage(Users.class);\n                         } //When the window is closed without calling backend\n-                        else\n+                        else {\n                             target.addComponent(feedbackPanel);\n+                        }\n                     }\n                 });\n \n@@ -576,30 +603,31 @@ public Page createPage() {\n \n         String allowedRoles = null;\n \n-        allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Users\",\"create\");\n+        allowedRoles = xmlRolesReader.getAllAllowedRoles(\"Users\", \"create\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(createUserLink, ENABLE,\n                 allowedRoles);\n-                \n+\n         add(createUserLink);\n \n         Form paginatorForm = new Form(\"PaginatorForm\");\n \n         final DropDownChoice rowsChooser = new DropDownChoice(\"rowsChooser\",\n-        new PropertyModel(this,\"paginatorRows\"),utility.paginatorRowsChooser());\n-\n-        rowsChooser.add(new AjaxFormComponentUpdatingBehavior( \"onchange\" ){\n-          protected void onUpdate( AjaxRequestTarget target )\n-            {\n-              utility.updatePaginatorRows(Constants.CONF_USERS_PAGINATOR_ROWS,\n-                      paginatorRows);\n-\n-              usersView.setRowsPerPage(paginatorRows);\n-              \n-              //Reload page\n-              setResponsePage(Users.class);\n+                new PropertyModel(this, \"paginatorRows\"), utility.\n+                paginatorRowsChooser());\n+\n+        rowsChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+            protected void onUpdate(AjaxRequestTarget target) {\n+                utility.updatePaginatorRows(Constants.CONF_USERS_PAGINATOR_ROWS,\n+                        paginatorRows);\n+\n+                usersView.setRowsPerPage(paginatorRows);\n+\n+                //Reload page\n+                setResponsePage(Users.class);\n             }\n-          });\n+        });\n \n         paginatorForm.add(rowsChooser);\n         add(paginatorForm);\n@@ -613,13 +641,14 @@ public void onClick(AjaxRequestTarget target) {\n                 changeAttribsViewWin.setPageCreator(\n                         new ModalWindow.PageCreator() {\n \n-                    public Page createPage() {\n-                        DisplayAttributesModalPage window =\n-                                new DisplayAttributesModalPage(Users.this,\n-                                changeAttribsViewWin, true);\n-                        return window;\n-                    }\n-                });\n+                            public Page createPage() {\n+                                DisplayAttributesModalPage window =\n+                                        new DisplayAttributesModalPage(\n+                                        Users.this,\n+                                        changeAttribsViewWin, true);\n+                                return window;\n+                            }\n+                        });\n \n                 changeAttribsViewWin.show(target);\n             }\n@@ -632,7 +661,7 @@ public Page createPage() {\n \n         MetaDataRoleAuthorizationStrategy.authorize(changeAttributesViewLink,\n                 RENDER, allowedViewRoles);\n-        \n+\n         add(changeAttributesViewLink);\n \n         //TAB 2 - Search section start\n@@ -646,12 +675,13 @@ protected Object load() {\n         final IModel roleNames = new LoadableDetachableModel() {\n \n             protected Object load() {\n-                List<RoleTO> roleTOs = rolesRestClient.getAllRoles();\n+                List<RoleTO> roleTOs = roleRestClient.getAllRoles();\n \n                 List<String> roleNames = new ArrayList<String>();\n \n-                for (RoleTO role : roleTOs)\n+                for (RoleTO role : roleTOs) {\n                     roleNames.add(role.getName());\n+                }\n \n                 return roleNames;\n             }\n@@ -667,8 +697,7 @@ protected Object load() {\n         final IModel filterTypes = new LoadableDetachableModel() {\n \n             protected Object load() {\n-                return Arrays.asList(SearchConditionWrapper.FilterType\n-                        .values());\n+                return Arrays.asList(SearchConditionWrapper.FilterType.values());\n             }\n         };\n \n@@ -686,28 +715,30 @@ protected void populateItem(final ListItem item) {\n                 final SearchConditionWrapper searchCondition =\n                         (SearchConditionWrapper) item.getDefaultModelObject();\n \n-                if (item.getIndex() == 0) \n+                if (item.getIndex() == 0) {\n                     item.add(new Label(\"operationType\", \"\"));\n-                else \n-                    item.add(new Label(\"operationType\", searchCondition\n-                            .getOperationType().toString()));\n+                } else {\n+                    item.add(new Label(\"operationType\", searchCondition.\n+                            getOperationType().toString()));\n+                }\n \n                 item.add(new UpdatingCheckBox(\"notOperator\",\n                         new PropertyModel(searchCondition,\n                         \"notOperator\")));\n \n                 final UpdatingDropDownChoice filterNameChooser =\n-                       new UpdatingDropDownChoice(\"filterName\",\n-                       new PropertyModel(searchCondition, \"filterName\"),\n-                       null);\n-                \n-                if(searchCondition.getFilterType() == null)\n+                        new UpdatingDropDownChoice(\"filterName\",\n+                        new PropertyModel(searchCondition, \"filterName\"),\n+                        null);\n+\n+                if (searchCondition.getFilterType() == null) {\n                     filterNameChooser.setChoices(Collections.emptyList());\n-                else if(searchCondition.getFilterType() ==\n-                        SearchConditionWrapper.FilterType.ATTRIBUTE)\n-                            filterNameChooser.setChoices(userAttributes);\n-                else\n+                } else if (searchCondition.getFilterType()\n+                        == SearchConditionWrapper.FilterType.ATTRIBUTE) {\n+                    filterNameChooser.setChoices(userAttributes);\n+                } else {\n                     filterNameChooser.setChoices(roleNames);\n+                }\n \n                 filterNameChooser.setRequired(true);\n \n@@ -718,15 +749,15 @@ else if(searchCondition.getFilterType() ==\n                         attributeTypes);\n \n                 item.add(type);\n-                \n+\n                 final UpdatingTextField filterValue = new UpdatingTextField(\n                         \"filterValue\", new PropertyModel(searchCondition,\n                         \"filterValue\"));\n \n                 item.add(filterValue);\n \n-                if(searchCondition.getFilterType() ==\n-                        SearchConditionWrapper.FilterType.MEMBERSHIP) {\n+                if (searchCondition.getFilterType()\n+                        == SearchConditionWrapper.FilterType.MEMBERSHIP) {\n \n                     type.setEnabled(false);\n                     type.setRequired(false);\n@@ -757,28 +788,28 @@ else if(searchCondition.getFilterType() ==\n                 filterTypeChooser.add(new AjaxFormComponentUpdatingBehavior(\n                         \"onchange\") {\n \n-                protected void onUpdate(AjaxRequestTarget target) {\n-                    filterNameChooser.setChoices(new LoadableDetachableModel() {\n+                    protected void onUpdate(AjaxRequestTarget target) {\n+                        filterNameChooser.setChoices(new LoadableDetachableModel() {\n \n-                        @Override\n-                        protected Object load() {\n-                            SearchConditionWrapper.FilterType schemaType =\n-                                    searchCondition.getFilterType();\n+                            @Override\n+                            protected Object load() {\n+                                SearchConditionWrapper.FilterType schemaType =\n+                                        searchCondition.getFilterType();\n \n-                            if (schemaType ==  SearchConditionWrapper.\n-                                    FilterType.ATTRIBUTE) {\n+                                if (schemaType == SearchConditionWrapper.FilterType.ATTRIBUTE) {\n \n-                                return userAttributes;\n-                            } else {\n+                                    return userAttributes;\n+                                } else {\n \n-                                return roleNames;\n-                            }\n+                                    return roleNames;\n+                                }\n \n-                        }\n-                    });\n-                    target.addComponent(filterNameChooser);\n-                    target.addComponent(usersTableSearchContainer);\n-                }});\n+                            }\n+                        });\n+                        target.addComponent(filterNameChooser);\n+                        target.addComponent(usersTableSearchContainer);\n+                    }\n+                });\n \n                 filterTypeChooser.setRequired(true);\n \n@@ -847,79 +878,82 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n             @Override\n             protected Object load() {\n \n-                if(nodeCond != null) {\n+                if (nodeCond != null) {\n \n-                 paginatedSearchUsers = usersRestClient.paginatedSearchUser(\n-                         nodeCond, currentSearchPage, paginatorSearchRows);\n+                    paginatedSearchUsers = userRestClient.paginatedSearchUser(\n+                            nodeCond, currentSearchPage, paginatorSearchRows);\n+\n+                    //Refresh links just after the selecting page click\n+                    if (incrementUserLinkSearch != null && decrementUserLinkSearch != null\n+                            && firstPageLinkSearch != null && lastPageLinkSearch != null) {\n+                        int totalPages = (int) Math.ceil(\n+                                paginatedSearchUsers.getTotalRecords().\n+                                doubleValue()\n+                                / new Double(paginatedSearchUsers.getPageSize()));\n+\n+                        if (currentSearchPage == totalPages) {\n+                            incrementUserLinkSearch.setEnabled(false);\n+                            lastPageLinkSearch.setEnabled(false);\n+                        } else {\n+                            incrementUserLinkSearch.setEnabled(true);\n+                            lastPageLinkSearch.setEnabled(true);\n+                        }\n \n-                //Refresh links just after the selecting page click\n-                if(incrementUserLinkSearch != null && decrementUserLinkSearch != null\n-                        && firstPageLinkSearch != null && lastPageLinkSearch != null) {\n-                    int totalPages =  (int) Math.ceil(\n-                            paginatedSearchUsers.getTotalRecords().doubleValue()/\n-                        new Double(paginatedSearchUsers.getPageSize()));\n-\n-                    if (currentSearchPage == totalPages) {\n-                        incrementUserLinkSearch.setEnabled(false);\n-                        lastPageLinkSearch.setEnabled(false);\n-                    } else {\n-                        incrementUserLinkSearch.setEnabled(true);\n-                        lastPageLinkSearch.setEnabled(true);\n+                        if (currentSearchPage > 1) {\n+                            decrementUserLinkSearch.setEnabled(true);\n+                        } else {\n+                            decrementUserLinkSearch.setEnabled(false);\n+                        }\n+\n+                        if (totalPages == 1 || currentSearchPage == 1) {\n+                            firstPageLinkSearch.setEnabled(false);\n+                        } else {\n+                            firstPageLinkSearch.setEnabled(true);\n+                        }\n                     }\n \n-                    if( currentSearchPage > 1 ){\n-                        decrementUserLinkSearch.setEnabled(true);\n-                    } else\n-                         decrementUserLinkSearch.setEnabled(false);\n+                    if (pageRecordFromSearch != null && pageRecordToSearch != null\n+                            && totalRecordsSearch != null) {\n \n-                    if (totalPages == 1 || currentSearchPage == 1) {\n-                        firstPageLinkSearch.setEnabled(false);\n-                    } else\n-                        firstPageLinkSearch.setEnabled(true);\n-                }\n+                        //Records indexes for paginator's labels\n+                        int firstPageRecord = 1;\n+                        int lastPageRecord = paginatedSearchUsers.\n+                                getRecordsInPage();\n \n-                if(pageRecordFromSearch != null && pageRecordToSearch != null\n-                        && totalRecordsSearch != null) {\n+                        if (paginatedSearchUsers.getPageNumber() > 1) {\n+                            firstPageRecord = (paginatedSearchUsers.getPageSize()\n+                                    * (paginatedSearchUsers.getPageNumber() - 1)) + 1;\n \n-                    //Records indexes for paginator's labels\n-                    int firstPageRecord = 1;\n-                    int lastPageRecord = paginatedSearchUsers.getRecordsInPage();\n-\n-                    if (paginatedSearchUsers.getPageNumber() > 1) {\n-                        firstPageRecord = (paginatedSearchUsers.getPageSize() *\n-                                (paginatedSearchUsers.getPageNumber() - 1)) + 1;\n-\n-                        lastPageRecord = (paginatedSearchUsers.getPageSize() *\n-                                (paginatedSearchUsers.getPageNumber() - 1)) +\n-                                paginatedSearchUsers.getRecordsInPage();\n-                    }\n+                            lastPageRecord = (paginatedSearchUsers.getPageSize()\n+                                    * (paginatedSearchUsers.getPageNumber() - 1))\n+                                    + paginatedSearchUsers.getRecordsInPage();\n+                        }\n \n-                    if(paginatedSearchUsers.getRecordsInPage() == 0) {\n-                        lastPageRecord = 0;\n-                        firstPageRecord = 0;\n+                        if (paginatedSearchUsers.getRecordsInPage() == 0) {\n+                            lastPageRecord = 0;\n+                            firstPageRecord = 0;\n \n-                        firstPageLinkSearch.setEnabled(false);\n-                        incrementUserLinkSearch.setEnabled(false);\n-                        lastPageLinkSearch.setEnabled(false);\n-                        incrementUserLinkSearch.setEnabled(false);\n-                    }\n+                            firstPageLinkSearch.setEnabled(false);\n+                            incrementUserLinkSearch.setEnabled(false);\n+                            lastPageLinkSearch.setEnabled(false);\n+                            incrementUserLinkSearch.setEnabled(false);\n+                        }\n \n-                    pageRecordFromSearch.setDefaultModelObject(\n-                            String.valueOf(firstPageRecord));\n+                        pageRecordFromSearch.setDefaultModelObject(\n+                                String.valueOf(firstPageRecord));\n \n-                    pageRecordToSearch.setDefaultModelObject(\n-                            String.valueOf(lastPageRecord));\n+                        pageRecordToSearch.setDefaultModelObject(\n+                                String.valueOf(lastPageRecord));\n \n-                    totalRecordsSearch.setDefaultModelObject(String.valueOf(\n-                            paginatedSearchUsers.getTotalRecords()));\n+                        totalRecordsSearch.setDefaultModelObject(String.valueOf(\n+                                paginatedSearchUsers.getTotalRecords()));\n \n                     }\n                     return paginatedSearchUsers.getRecords();\n+                } else {\n+                    return new ArrayList();\n                 }\n \n-                 else\n-                    return new ArrayList();\n-                \n             }\n         };\n \n@@ -968,15 +1002,14 @@ public Page createPage() {\n \n                     @Override\n                     public void onClick(AjaxRequestTarget target) {\n-                        usersRestClient.deleteUser(String\n-                                .valueOf(userTO.getId()));\n+                        userRestClient.deleteUser(\n+                                String.valueOf(userTO.getId()));\n \n                         info(getString(\"operation_succeded\"));\n                         target.addComponent(feedbackPanel);\n \n                         target.addComponent(usersTableContainer);\n                     }\n-\n                 });\n             }\n         };\n@@ -987,8 +1020,7 @@ public void onClick(AjaxRequestTarget target) {\n         searchResultsContainer.add(resultsView);\n \n         /** SEARCH PAGiNATOR START */\n-\n-         incrementUserLinkSearch = new AjaxLink(\"incrementLink\"){\n+        incrementUserLinkSearch = new AjaxLink(\"incrementLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n@@ -1005,11 +1037,13 @@ public void onClick(AjaxRequestTarget target) {\n \n         //Check if it is not null\n         int totalSearchPages = 0;\n-        if(paginatedSearchUsers != null)\n-            totalSearchPages =  (int) Math.ceil(paginatedSearchUsers.getTotalRecords()\n-                    .doubleValue()/new Double(paginatedSearchUsers.getPageSize()));\n+        if (paginatedSearchUsers != null) {\n+            totalSearchPages = (int) Math.ceil(paginatedSearchUsers.\n+                    getTotalRecords().doubleValue() / new Double(paginatedSearchUsers.\n+                    getPageSize()));\n+        }\n \n-        firstPageLinkSearch = new AjaxLink(\"firstPageLink\"){\n+        firstPageLinkSearch = new AjaxLink(\"firstPageLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n@@ -1024,12 +1058,12 @@ public void onClick(AjaxRequestTarget target) {\n             }\n         };\n \n-        lastPageLinkSearch = new AjaxLink(\"lastPageLink\"){\n+        lastPageLinkSearch = new AjaxLink(\"lastPageLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n-                int totalPages =  (int) Math.ceil(paginatedSearchUsers\n-                        .getTotalRecords().doubleValue()/ new Double(\n+                int totalPages = (int) Math.ceil(paginatedSearchUsers.\n+                        getTotalRecords().doubleValue() / new Double(\n                         paginatedSearchUsers.getPageSize()));\n                 currentSearchPage = totalPages;\n \n@@ -1042,7 +1076,7 @@ public void onClick(AjaxRequestTarget target) {\n             }\n         };\n \n-       decrementUserLinkSearch = new AjaxLink(\"decrementLink\"){\n+        decrementUserLinkSearch = new AjaxLink(\"decrementLink\") {\n \n             @Override\n             public void onClick(AjaxRequestTarget target) {\n@@ -1057,25 +1091,27 @@ public void onClick(AjaxRequestTarget target) {\n             }\n         };\n \n-         if(currentSearchPage <= totalSearchPages) {\n+        if (currentSearchPage <= totalSearchPages) {\n             incrementUserLinkSearch.setEnabled(false);\n             lastPageLinkSearch.setEnabled(false);\n         }\n \n-        if(currentSearchPage <= 1)\n+        if (currentSearchPage <= 1) {\n             decrementUserLinkSearch.setEnabled(false);\n+        }\n \n-        if(totalPages == 1 || currentSearchPage == 1)\n+        if (totalPages == 1 || currentSearchPage == 1) {\n             firstPageLinkSearch.setEnabled(false);\n+        }\n \n-        if(currentSearchPage <= 1 && paginatedSearchUsers == null) {\n+        if (currentSearchPage <= 1 && paginatedSearchUsers == null) {\n             incrementUserLinkSearch.setEnabled(false);\n             lastPageLinkSearch.setEnabled(false);\n             firstPageLinkSearch.setEnabled(false);\n             decrementUserLinkSearch.setEnabled(false);\n-        }\n-        else if (currentSearchPage > 1 && currentSearchPage <= totalPages)\n+        } else if (currentSearchPage > 1 && currentSearchPage <= totalPages) {\n             decrementUserLinkSearch.setEnabled(true);\n+        }\n \n         searchResultsContainer.add(incrementUserLinkSearch);\n         searchResultsContainer.add(firstPageLinkSearch);\n@@ -1085,36 +1121,39 @@ else if (currentSearchPage > 1 && currentSearchPage <= totalPages)\n         int firstPageRecordSearch = 1;\n         int lastPageRecordSearch = 1;\n \n-        if(paginatedSearchUsers != null){\n-        lastPageRecordSearch = paginatedSearchUsers.getRecordsInPage();\n+        if (paginatedSearchUsers != null) {\n+            lastPageRecordSearch = paginatedSearchUsers.getRecordsInPage();\n \n-        if(paginatedSearchUsers.getPageNumber() > 1) {\n-          firstPageRecordSearch = (paginatedSearchUsers.getPageSize() *\n-                             (paginatedSearchUsers.getPageNumber()-1) ) + 1;\n+            if (paginatedSearchUsers.getPageNumber() > 1) {\n+                firstPageRecordSearch = (paginatedSearchUsers.getPageSize()\n+                        * (paginatedSearchUsers.getPageNumber() - 1)) + 1;\n \n-          lastPageRecordSearch = (paginatedSearchUsers.getPageSize() *\n-                             (paginatedSearchUsers.getPageNumber()-1) ) +\n-                             paginatedSearchUsers.getRecordsInPage();\n-        }\n-        }\n-        else {\n-         firstPageRecordSearch = 0;\n-         lastPageRecordSearch = 0;\n+                lastPageRecordSearch = (paginatedSearchUsers.getPageSize()\n+                        * (paginatedSearchUsers.getPageNumber() - 1))\n+                        + paginatedSearchUsers.getRecordsInPage();\n+            }\n+        } else {\n+            firstPageRecordSearch = 0;\n+            lastPageRecordSearch = 0;\n         }\n \n-        searchResultsContainer.add(pageRecordFromSearch = new Label(\"pageRecordFrom\",\n+        searchResultsContainer.add(pageRecordFromSearch = new Label(\n+                \"pageRecordFrom\",\n                 new Model<String>(String.valueOf(firstPageRecordSearch))));\n \n         searchResultsContainer.add(pageRecordToSearch = new Label(\"pageRecordTo\",\n                 new Model<String>(String.valueOf(lastPageRecordSearch))));\n \n-        if(paginatedSearchUsers != null)\n-            searchResultsContainer.add(totalRecordsSearch = new Label(\"totalRecords\",\n-                    new Model<String>(String.valueOf(paginatedSearchUsers\n-                    .getTotalRecords()))));\n-        else\n-            searchResultsContainer.add(totalRecordsSearch = new Label(\"totalRecords\",\n+        if (paginatedSearchUsers != null) {\n+            searchResultsContainer.add(totalRecordsSearch = new Label(\n+                    \"totalRecords\",\n+                    new Model<String>(String.valueOf(paginatedSearchUsers.\n+                    getTotalRecords()))));\n+        } else {\n+            searchResultsContainer.add(totalRecordsSearch = new Label(\n+                    \"totalRecords\",\n                     new Model<String>(\"0\")));\n+        }\n \n         searchResultsContainer.add(decrementUserLinkSearch);\n \n@@ -1127,50 +1166,53 @@ else if (currentSearchPage > 1 && currentSearchPage <= totalPages)\n             protected void populateItem(ListItem item) {\n                 final int pageId = (Integer) item.getDefaultModelObject();\n \n-                AjaxLink pageLink = new AjaxLink(\"pageLink\"){\n+                AjaxLink pageLink = new AjaxLink(\"pageLink\") {\n \n-                @Override\n-                public void onClick(AjaxRequestTarget target) {\n-                    currentSearchPage = pageId;\n-                    target.addComponent(searchResultsContainer);\n-                }\n-            };\n+                    @Override\n+                    public void onClick(AjaxRequestTarget target) {\n+                        currentSearchPage = pageId;\n+                        target.addComponent(searchResultsContainer);\n+                    }\n+                };\n \n-            if(currentSearchPage == pageId)\n-                pageLink.setEnabled(false);\n-            else\n-                pageLink.setEnabled(true);\n+                if (currentSearchPage == pageId) {\n+                    pageLink.setEnabled(false);\n+                } else {\n+                    pageLink.setEnabled(true);\n+                }\n \n-            pageLink.add(new Label(\"name\",new Model<String>(\n-                    String.valueOf(pageId))));\n+                pageLink.add(new Label(\"name\", new Model<String>(\n+                        String.valueOf(pageId))));\n \n-            item.add(pageLink);\n+                item.add(pageLink);\n             }\n         };\n \n         searchResultsContainer.add(pageLinksSearchView);\n \n         /** SEARCH PAGiNATOR END */\n-\n         //Display warning message if no search matches have been found\n         final Label noResults = new Label(\"noResults\", new Model<String>(\"\"));\n         noResults.setOutputMarkupId(true);\n         searchResultsContainer.add(noResults);\n \n         setWindowClosedCallback(editUserWin, searchResultsContainer);\n \n-        form.add(new IndicatingAjaxButton(\"search\", new Model(getString(\"search\"))) {\n+        form.add(new IndicatingAjaxButton(\"search\", new Model(\n+                getString(\"search\"))) {\n \n             @Override\n             protected void onSubmit(AjaxRequestTarget target, Form form) {\n \n-                nodeCond =  buildSearchExpression(searchConditionsList);\n+                nodeCond = buildSearchExpression(searchConditionsList);\n \n                 if (nodeCond != null) {\n \n                     try {\n-                        paginatedSearchUsers = usersRestClient.paginatedSearchUser(\n-                                 nodeCond, currentSearchPage = 1, paginatorSearchRows);\n+                        paginatedSearchUsers = userRestClient.\n+                                paginatedSearchUser(\n+                                nodeCond, currentSearchPage = 1,\n+                                paginatorSearchRows);\n \n                         //Clean the feedback panel if the operation succedes\n                         target.addComponent(form.get(\"feedback\"));\n@@ -1180,19 +1222,20 @@ protected void onSubmit(AjaxRequestTarget target, Form form) {\n                         pageLinksSearchView.setList(pageIdList);\n                         target.addChildren(pageLinksSearchView, AjaxLink.class);\n                     } catch (HttpServerErrorException e) {\n-                        e.printStackTrace();\n+                        LOG.error(\"While searching users\", e);\n                         error(e.getMessage());\n                         return;\n                     }\n                 } else {\n                     error(getString(\"search_error\"));\n                 }\n \n-                if(paginatedSearchUsers.getRecords().isEmpty())\n+                if (paginatedSearchUsers.getRecords().isEmpty()) {\n                     noResults.setDefaultModel(new Model<String>(\n                             getString(\"search_noResults\")));\n-                else\n-                     noResults.setDefaultModel(new Model<String>(\"\"));\n+                } else {\n+                    noResults.setDefaultModel(new Model<String>(\"\"));\n+                }\n \n                 target.addComponent(searchResultsContainer);\n             }\n@@ -1209,19 +1252,22 @@ protected void onError(AjaxRequestTarget target, Form form) {\n \n         Form paginatorSearchForm = new Form(\"PaginatorSearchForm\");\n \n-        final DropDownChoice rowsSearchChooser = new DropDownChoice(\"rowsSearchChooser\",\n-        new PropertyModel(this,\"paginatorSearchRows\"),utility.paginatorRowsChooser());\n+        final DropDownChoice rowsSearchChooser = new DropDownChoice(\n+                \"rowsSearchChooser\",\n+                new PropertyModel(this, \"paginatorSearchRows\"), utility.\n+                paginatorRowsChooser());\n \n-        rowsSearchChooser.add(new AjaxFormComponentUpdatingBehavior( \"onchange\" ){\n-          protected void onUpdate( AjaxRequestTarget target )\n-            {\n-                utility.updatePaginatorRows(Constants.CONF_USERS_SEARCH_PAGINATOR_ROWS,\n+        rowsSearchChooser.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+            protected void onUpdate(AjaxRequestTarget target) {\n+                utility.updatePaginatorRows(\n+                        Constants.CONF_USERS_SEARCH_PAGINATOR_ROWS,\n                         paginatorSearchRows);\n \n                 resultsView.setRowsPerPage(paginatorSearchRows);\n \n                 //Re-execute the query\n-                paginatedSearchUsers = usersRestClient.paginatedSearchUser(\n+                paginatedSearchUsers = userRestClient.paginatedSearchUser(\n                         nodeCond, currentSearchPage = 1, paginatorSearchRows);\n \n                 //Update pageLinks on paginator\n@@ -1231,7 +1277,7 @@ protected void onUpdate( AjaxRequestTarget target )\n \n                 target.addComponent(searchResultsContainer);\n             }\n-          });\n+        });\n \n         paginatorSearchForm.add(rowsSearchChooser);\n \n@@ -1240,63 +1286,66 @@ protected void onUpdate( AjaxRequestTarget target )\n \n     public PaginatedResult getPaginatedUsers(int page, int size) {\n \n-         PaginatedResult paginatedResult =\n-                 usersRestClient.getPaginatedUser(page, size);\n+        PaginatedResult paginatedResult =\n+                userRestClient.getPaginatedUser(page, size);\n \n-         return paginatedResult;\n+        return paginatedResult;\n     }\n \n     /**\n      * Refresh paginator after page link click.\n      */\n-    public List<Integer> getPaginatorIndexes(){\n-      int totalPages =  (int) Math.ceil(paginatedUsers.getTotalRecords()\n-                .doubleValue()/new Double(paginatedUsers.getPageSize()));\n+    public List<Integer> getPaginatorIndexes() {\n+        int totalPages = (int) Math.ceil(paginatedUsers.getTotalRecords().\n+                doubleValue() / new Double(paginatedUsers.getPageSize()));\n \n         //Build pages link for paginator\n         List<Integer> pageIdList = new ArrayList<Integer>();\n \n         int startIndex = 1;\n \n-        if(totalPages > 10) {\n-            if (currentViewPage < 10)\n+        if (totalPages > 10) {\n+            if (currentViewPage < 10) {\n                 startIndex = 1;\n-            else\n+            } else {\n                 startIndex = currentViewPage - 2;\n+            }\n         }\n \n         int endIndex = totalPages;\n \n-        if(totalPages > 10) {\n+        if (totalPages > 10) {\n \n-            if(startIndex +9 <= totalPages)\n-                endIndex = startIndex +9;\n-            else\n+            if (startIndex + 9 <= totalPages) {\n+                endIndex = startIndex + 9;\n+            } else {\n                 endIndex = startIndex + (totalPages - startIndex);\n+            }\n         }\n \n-        for(int i = startIndex; i <= endIndex; i++ ) {\n+        for (int i = startIndex; i <= endIndex; i++) {\n             pageIdList.add(i);\n         }\n \n         return pageIdList;\n     }\n \n-     /**\n+    /**\n      * Return the user's attributes columnsList to display, ordered\n      * @param userTO instance\n      * @return attributes columnsList to view depending the selection\n      */\n-      public List<AttributeWrapper> attributesToDisplay(UserTO user) {\n+    public List<AttributeWrapper> attributesToDisplay(UserTO user) {\n         List<AttributeTO> attributes = user.getAttributes();\n         List<AttributeWrapper> attributesList = new ArrayList<AttributeWrapper>();\n \n         ConfigurationTO configuration =\n-                configurationsRestClient.readConfiguration(\"users.attributes.view\");\n+                confRestClient.readConfiguration(\n+                \"users.attributes.view\");\n         columnsList = new ArrayList<String>();\n \n         if (configuration != null && configuration.getConfValue() != null\n-                &&!configuration.getConfValue().equals(\"\")) {\n+                && !configuration.getConfValue().equals(\"\")) {\n             String conf = configuration.getConfValue();\n             StringTokenizer st = new StringTokenizer(conf, \";\");\n \n@@ -1309,29 +1358,29 @@ public List<AttributeWrapper> attributesToDisplay(UserTO user) {\n \n         AttributeWrapper attributeWrapper = null;\n \n-            boolean found = false;\n-            for (String name : columnsList) {\n-               for (AttributeTO attribute : attributes) {\n+        boolean found = false;\n+        for (String name : columnsList) {\n+            for (AttributeTO attribute : attributes) {\n                 if (name.equals(attribute.getSchema()) && !found) {\n                     attributeWrapper = new AttributeWrapper();\n                     attributeWrapper.setKey(attribute.getSchema());\n-                        for(String value : attribute.getValues()){\n-                            attributeWrapper.setValue(value);\n-                         found=true;\n-                        }\n+                    for (String value : attribute.getValues()) {\n+                        attributeWrapper.setValue(value);\n+                        found = true;\n+                    }\n                     attributesList.add(attributeWrapper);\n                 }\n             }\n-               //case the attribute's value is blank\n-               if(!found){\n-               attributeWrapper = new AttributeWrapper();\n-               attributeWrapper.setKey(name);\n-               attributeWrapper.setValue(\"\");\n-\n-               attributesList.add(attributeWrapper);\n-               }\n-               else\n-               found = false;\n+            //case the attribute's value is blank\n+            if (!found) {\n+                attributeWrapper = new AttributeWrapper();\n+                attributeWrapper.setKey(name);\n+                attributeWrapper.setValue(\"\");\n+\n+                attributesList.add(attributeWrapper);\n+            } else {\n+                found = false;\n+            }\n         }\n \n         return attributesList;\n@@ -1388,107 +1437,107 @@ public NodeCond buildSearchExpression(\n \n         AttributeCond attributeCond = null;\n         MembershipCond membershipCond = null;\n-        \n+\n         List<SearchConditionWrapper> subList = null;\n \n-        SearchConditionWrapper searchConditionWrapper = conditions.iterator()\n-                .next();\n+        SearchConditionWrapper searchConditionWrapper = conditions.iterator().\n+                next();\n \n-        if(searchConditionWrapper.getFilterType() ==\n-                SearchConditionWrapper.FilterType.ATTRIBUTE) {\n+        if (searchConditionWrapper.getFilterType()\n+                == SearchConditionWrapper.FilterType.ATTRIBUTE) {\n \n             attributeCond = new AttributeCond();\n             attributeCond.setSchema(searchConditionWrapper.getFilterName());\n             attributeCond.setType(searchConditionWrapper.getType());\n             attributeCond.setExpression(searchConditionWrapper.getFilterValue());\n \n-        }\n-\n-        else {\n+        } else {\n \n-        membershipCond = new MembershipCond();\n-        membershipCond.setRoleName(searchConditionWrapper.getFilterName());\n+            membershipCond = new MembershipCond();\n+            membershipCond.setRoleName(searchConditionWrapper.getFilterName());\n \n         }\n \n         if (conditions.size() == 1) {\n \n-             if(searchConditionWrapper.getFilterType() ==\n-                SearchConditionWrapper.FilterType.ATTRIBUTE) {\n-                      if (searchConditionWrapper.isNotOperator()) {\n+            if (searchConditionWrapper.getFilterType()\n+                    == SearchConditionWrapper.FilterType.ATTRIBUTE) {\n+                if (searchConditionWrapper.isNotOperator()) {\n                     return NodeCond.getNotLeafCond(attributeCond);\n                 } else {\n                     return NodeCond.getLeafCond(attributeCond);\n                 }\n-             }\n-             else {\n-                   if (searchConditionWrapper.isNotOperator()) {\n+            } else {\n+                if (searchConditionWrapper.isNotOperator()) {\n                     return NodeCond.getNotLeafCond(membershipCond);\n                 } else {\n                     return NodeCond.getLeafCond(membershipCond);\n                 }\n-             }\n+            }\n \n         } else {\n \n             subList = conditions.subList(1, conditions.size());\n \n             searchConditionWrapper = subList.iterator().next();\n \n-            if (searchConditionWrapper.getOperationType() ==\n-                    SearchConditionWrapper.OperationType.AND) {\n+            if (searchConditionWrapper.getOperationType()\n+                    == SearchConditionWrapper.OperationType.AND) {\n \n-                if(searchConditionWrapper.getFilterType() ==\n-                SearchConditionWrapper.FilterType.ATTRIBUTE) {\n+                if (searchConditionWrapper.getFilterType()\n+                        == SearchConditionWrapper.FilterType.ATTRIBUTE) {\n \n-                    if(attributeCond != null)\n-                    return NodeCond.getAndCond(\n-                            NodeCond.getLeafCond(attributeCond),\n-                            buildSearchExpression(\n-                            new ArrayList<SearchConditionWrapper>(subList)));\n-                    else\n+                    if (attributeCond != null) {\n                         return NodeCond.getAndCond(\n-                            NodeCond.getLeafCond(membershipCond),\n-                            buildSearchExpression(\n-                            new ArrayList<SearchConditionWrapper>(subList)));\n+                                NodeCond.getLeafCond(attributeCond),\n+                                buildSearchExpression(\n+                                new ArrayList<SearchConditionWrapper>(subList)));\n+                    } else {\n+                        return NodeCond.getAndCond(\n+                                NodeCond.getLeafCond(membershipCond),\n+                                buildSearchExpression(\n+                                new ArrayList<SearchConditionWrapper>(subList)));\n+                    }\n                 } else {\n-                   if(attributeCond != null)\n-                    return NodeCond.getAndCond(\n-                        NodeCond.getLeafCond(attributeCond),\n-                        buildSearchExpression(\n-                        new ArrayList<SearchConditionWrapper>(subList)));\n-                   else\n-                       return NodeCond.getAndCond(\n-                        NodeCond.getLeafCond(membershipCond),\n-                        buildSearchExpression(\n-                        new ArrayList<SearchConditionWrapper>(subList)));\n+                    if (attributeCond != null) {\n+                        return NodeCond.getAndCond(\n+                                NodeCond.getLeafCond(attributeCond),\n+                                buildSearchExpression(\n+                                new ArrayList<SearchConditionWrapper>(subList)));\n+                    } else {\n+                        return NodeCond.getAndCond(\n+                                NodeCond.getLeafCond(membershipCond),\n+                                buildSearchExpression(\n+                                new ArrayList<SearchConditionWrapper>(subList)));\n+                    }\n                 }\n \n             } else {\n-                if(searchConditionWrapper.getFilterType() ==\n-                SearchConditionWrapper.FilterType.ATTRIBUTE) {\n-                if(attributeCond != null)\n-                return NodeCond.getOrCond(\n-                        NodeCond.getLeafCond(attributeCond),\n-                        buildSearchExpression(\n-                        new ArrayList<SearchConditionWrapper>(subList)));\n-                else\n-                return NodeCond.getOrCond(\n-                        NodeCond.getLeafCond(membershipCond),\n-                        buildSearchExpression(\n-                        new ArrayList<SearchConditionWrapper>(subList)));\n-                }\n-                else {\n-                   if(attributeCond != null)\n-                   return NodeCond.getOrCond(\n-                        NodeCond.getLeafCond(attributeCond),\n-                        buildSearchExpression(\n-                        new ArrayList<SearchConditionWrapper>(subList)));\n-                   else\n-                   return NodeCond.getOrCond(\n-                        NodeCond.getLeafCond(membershipCond),\n-                        buildSearchExpression(\n-                        new ArrayList<SearchConditionWrapper>(subList)));\n+                if (searchConditionWrapper.getFilterType()\n+                        == SearchConditionWrapper.FilterType.ATTRIBUTE) {\n+                    if (attributeCond != null) {\n+                        return NodeCond.getOrCond(\n+                                NodeCond.getLeafCond(attributeCond),\n+                                buildSearchExpression(\n+                                new ArrayList<SearchConditionWrapper>(subList)));\n+                    } else {\n+                        return NodeCond.getOrCond(\n+                                NodeCond.getLeafCond(membershipCond),\n+                                buildSearchExpression(\n+                                new ArrayList<SearchConditionWrapper>(subList)));\n+                    }\n+                } else {\n+                    if (attributeCond != null) {\n+                        return NodeCond.getOrCond(\n+                                NodeCond.getLeafCond(attributeCond),\n+                                buildSearchExpression(\n+                                new ArrayList<SearchConditionWrapper>(subList)));\n+                    } else {\n+                        return NodeCond.getOrCond(\n+                                NodeCond.getLeafCond(membershipCond),\n+                                buildSearchExpression(\n+                                new ArrayList<SearchConditionWrapper>(subList)));\n+                    }\n                 }\n             }\n         }\n@@ -1498,45 +1547,49 @@ public NodeCond buildSearchExpression(\n      *  Init users to display.\n      */\n     public void setupPaginatedUsers() {\n-        paginatedUsers = usersRestClient\n-                        .getPaginatedUser(currentViewPage, paginatorRows);\n+        paginatedUsers = userRestClient.getPaginatedUser(currentViewPage,\n+                paginatorRows);\n     }\n \n     /**\n      * Refresh paginator search after page link click.\n      */\n-    public List<Integer> getPaginatorSearchIndexes(){\n+    public List<Integer> getPaginatorSearchIndexes() {\n         int totalPages;\n \n-        if(paginatedSearchUsers != null)\n-         totalPages =  (int) Math.ceil(paginatedSearchUsers.getTotalRecords()\n-                .doubleValue()/new Double(paginatedSearchUsers.getPageSize()));\n-        else\n-            totalPages =  0;\n+        if (paginatedSearchUsers != null) {\n+            totalPages = (int) Math.ceil(paginatedSearchUsers.getTotalRecords().\n+                    doubleValue() / new Double(\n+                    paginatedSearchUsers.getPageSize()));\n+        } else {\n+            totalPages = 0;\n+        }\n \n         //Build pages link for paginator\n         List<Integer> pageIdList = new ArrayList<Integer>();\n \n         int startIndex = 1;\n \n-        if(totalPages > 10) {\n-            if (currentSearchPage < 10)\n+        if (totalPages > 10) {\n+            if (currentSearchPage < 10) {\n                 startIndex = 1;\n-            else\n+            } else {\n                 startIndex = currentSearchPage - 2;\n+            }\n         }\n \n         int endIndex = totalPages;\n \n-        if(totalPages > 10) {\n+        if (totalPages > 10) {\n \n-            if(startIndex +9 <= totalPages)\n-                endIndex = startIndex +9;\n-            else\n+            if (startIndex + 9 <= totalPages) {\n+                endIndex = startIndex + 9;\n+            } else {\n                 endIndex = startIndex + (totalPages - startIndex);\n+            }\n         }\n \n-        for(int i = startIndex; i <= endIndex; i++ ) {\n+        for (int i = startIndex; i <= endIndex; i++) {\n             pageIdList.add(i);\n         }\n \n@@ -1549,6 +1602,7 @@ public List<Integer> getPaginatorSearchIndexes(){\n     public class AttributeWrapper implements Serializable {\n \n         private String key;\n+\n         private String value;\n \n         public String getKey() {\n@@ -1567,4 +1621,4 @@ public void setValue(String value) {\n             this.value = value;\n         }\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"0487f981ca5d731106c8feae7366cc9bcf1579d1","filename":"console/src/main/java/org/syncope/console/pages/WelcomePage.java","status":"modified","additions":24,"deletions":25,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fpages%2FWelcomePage.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -29,106 +29,105 @@\n  */\n public class WelcomePage extends WebPage {\n \n-    @SpringBean(name = \"xmlRolesReader\")\n-    protected XMLRolesReader xmlRolesReader;\n+    @SpringBean\n+    private XMLRolesReader xmlRolesReader;\n \n-    public WelcomePage(PageParameters parameters) {\n+    public WelcomePage(final PageParameters parameters) {\n         super(parameters);\n \n         BookmarkablePageLink schemaLink = new BookmarkablePageLink(\"schema\",\n                 Schema.class);\n \n         String allowedSchemaRoles = xmlRolesReader.getAllAllowedRoles(\"Schema\",\n-                        \"list\");\n+                \"list\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(schemaLink, ENABLE,\n-                        allowedSchemaRoles);\n+                allowedSchemaRoles);\n \n         add(schemaLink);\n \n         BookmarkablePageLink usersLink = new BookmarkablePageLink(\"users\",\n                 Users.class);\n \n         String allowedUsersRoles = xmlRolesReader.getAllAllowedRoles(\"Users\",\n-                        \"list\");\n+                \"list\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(usersLink, ENABLE,\n-                        allowedUsersRoles);\n+                allowedUsersRoles);\n \n         add(usersLink);\n \n-        BookmarkablePageLink rolesLink= new BookmarkablePageLink(\"roles\",\n+        BookmarkablePageLink rolesLink = new BookmarkablePageLink(\"roles\",\n                 Roles.class);\n \n         String allowedRoleRoles = xmlRolesReader.getAllAllowedRoles(\"Roles\",\n-                        \"list\");\n+                \"list\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(rolesLink, ENABLE,\n-                        allowedRoleRoles);\n+                allowedRoleRoles);\n \n         add(rolesLink);\n \n         BookmarkablePageLink resourcesLink = new BookmarkablePageLink(\n                 \"resources\", Resources.class);\n \n         String allowedResourcesRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Resources\",\"list\");\n+                \"Resources\", \"list\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(resourcesLink, ENABLE,\n-                        allowedResourcesRoles);\n+                allowedResourcesRoles);\n \n         add(resourcesLink);\n \n         BookmarkablePageLink connectorsLink =\n                 new BookmarkablePageLink(\"connectors\", Connectors.class);\n \n         String allowedConnectorsRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Connectors\",\"list\");\n+                \"Connectors\", \"list\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(connectorsLink, ENABLE,\n-                        allowedConnectorsRoles);\n+                allowedConnectorsRoles);\n \n         add(connectorsLink);\n \n         BookmarkablePageLink reportLink = new BookmarkablePageLink(\n                 \"report\", Report.class);\n \n         String allowedReportRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Report\",\"list\");\n+                \"Report\", \"list\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(reportLink, ENABLE,\n-                        allowedReportRoles);\n+                allowedReportRoles);\n \n         add(reportLink);\n \n         BookmarkablePageLink configurationLink = new BookmarkablePageLink(\n                 \"configuration\", Configuration.class);\n \n         String allowedConfigurationRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Configuration\",\"list\");\n+                \"Configuration\", \"list\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(configurationLink, ENABLE,\n-                        allowedConfigurationRoles);\n+                allowedConfigurationRoles);\n \n         add(configurationLink);\n \n         BookmarkablePageLink taskLink = new BookmarkablePageLink(\"task\",\n                 Tasks.class);\n \n         String allowedTasksRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Tasks\",\"list\");\n+                \"Tasks\", \"list\");\n \n         MetaDataRoleAuthorizationStrategy.authorize(taskLink, ENABLE,\n-                        allowedTasksRoles);\n+                allowedTasksRoles);\n \n         add(taskLink);\n \n         add(new BookmarkablePageLink(\"logout\", Logout.class));\n \n         SyncopeSession session = (SyncopeSession) getSession();\n \n-        add(new Label(\"username\",new Model<String>(session.getUser()\n-                .getUsername())));\n-\n+        add(new Label(\"username\", new Model<String>(session.getUser().\n+                getUsername())));\n     }\n }"},{"sha":"b00468a385ebdb1d272c92eda0b4a3ece911bd68","filename":"console/src/main/java/org/syncope/console/rest/AbstractBaseRestClient.java","status":"renamed","additions":12,"deletions":19,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FAbstractBaseRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FAbstractBaseRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FAbstractBaseRestClient.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -14,30 +14,23 @@\n  */\n package org.syncope.console.rest;\n \n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.client.RestTemplate;\n \n-/**\n- * Base Rest client for invoking rest services.\n- */\n-public class RestClient {\n+public abstract class AbstractBaseRestClient {\n+\n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG = LoggerFactory.getLogger(\n+            AbstractBaseRestClient.class);\n \n+    @Autowired\n     protected RestTemplate restTemplate;\n \n+    @Autowired\n     protected String baseURL;\n \n-    public RestTemplate getRestTemplate() {\n-        return restTemplate;\n-    }\n-\n-    public void setRestTemplate(RestTemplate restTemplate) {\n-        this.restTemplate = restTemplate;\n-    }\n-\n-    public String getBaseURL() {\n-        return baseURL;\n-    }\n-\n-    public void setBaseURL(String baseURL) {\n-        this.baseURL = baseURL;\n-    }\n }","previous_filename":"console/src/main/java/org/syncope/console/rest/RestClient.java"},{"sha":"87e45a76020a4e1326587915dd260b9a8e580235","filename":"console/src/main/java/org/syncope/console/rest/ConfigurationRestClient.java","status":"renamed","additions":29,"deletions":44,"changes":73,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConfigurationRestClient.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -17,44 +17,44 @@\n import java.io.UnsupportedEncodingException;\n import java.util.Arrays;\n import java.util.List;\n+import org.springframework.stereotype.Component;\n import org.springframework.web.client.HttpStatusCodeException;\n-import org.springframework.web.client.RestClientException;\n import org.syncope.client.to.ConfigurationTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n \n /**\n  * Console client for invoking Rest Connectors services.\n  */\n-public class ConfigurationsRestClient {\n-\n-    RestClient restClient;\n+@Component\n+public class ConfigurationRestClient extends AbstractBaseRestClient {\n \n     /**\n      * Get all stored configurations.\n      * @return ConfigurationTOs\n      */\n-    public List<ConfigurationTO> getAllConfigurations() throws\n-            RestClientException {\n+    public List<ConfigurationTO> getAllConfigurations()\n+            throws SyncopeClientCompositeErrorException {\n+\n         List<ConfigurationTO> configurations = null;\n \n-        configurations = Arrays.asList(restClient.getRestTemplate()\n-                .getForObject(restClient.getBaseURL() +\n-                \"configuration/list.json\",ConfigurationTO[].class));\n+        configurations = Arrays.asList(\n+                restTemplate.getForObject(baseURL\n+                + \"configuration/list.json\", ConfigurationTO[].class));\n \n         return configurations;\n     }\n \n-   /**\n+    /**\n      * Load an existent configuration.\n      * @return ConfigurationTO object if the configuration exists,\n      * null otherwise\n      */\n-    public ConfigurationTO readConfiguration(String confKey) throws\n-            SyncopeClientCompositeErrorException, RestClientException {\n+    public ConfigurationTO readConfiguration(String confKey)\n+            throws SyncopeClientCompositeErrorException {\n \n-        ConfigurationTO configurationTO = restClient.getRestTemplate()\n-                .getForObject(restClient.getBaseURL() +\n-                \"configuration/read/{confKey}.json\", ConfigurationTO.class,\n+        ConfigurationTO configurationTO =\n+                restTemplate.getForObject(baseURL\n+                + \"configuration/read/{confKey}.json\", ConfigurationTO.class,\n                 confKey);\n \n \n@@ -68,9 +68,9 @@ public ConfigurationTO readConfiguration(String confKey) throws\n      */\n     public boolean createConfiguration(ConfigurationTO configurationTO) {\n \n-        ConfigurationTO newConfigurationTO = restClient.getRestTemplate()\n-                .postForObject(\n-                restClient.getBaseURL() + \"configuration/create\",\n+        ConfigurationTO newConfigurationTO =\n+                restTemplate.postForObject(baseURL\n+                + \"configuration/create\",\n                 configurationTO, ConfigurationTO.class);\n \n         return (configurationTO.equals(newConfigurationTO)) ? true : false;\n@@ -83,9 +83,9 @@ public boolean createConfiguration(ConfigurationTO configurationTO) {\n      */\n     public boolean updateConfiguration(ConfigurationTO configurationTO) {\n \n-        ConfigurationTO newConfigurationTO = restClient.getRestTemplate()\n-                .postForObject(\n-                restClient.getBaseURL() + \"configuration/update\",\n+        ConfigurationTO newConfigurationTO =\n+                restTemplate.postForObject(baseURL\n+                + \"configuration/update\",\n                 configurationTO, ConfigurationTO.class);\n \n         return (configurationTO.equals(newConfigurationTO)) ? true : false;\n@@ -95,27 +95,12 @@ public boolean updateConfiguration(ConfigurationTO configurationTO) {\n      * Deelete a configuration by confKey\n      * @throws UnsupportedEncodingException\n      */\n-    public void deleteConfiguration(String confKey) throws\n+    public void deleteConfiguration(String confKey)\n+            throws\n             UnsupportedEncodingException, HttpStatusCodeException {\n \n-            restClient.getRestTemplate().delete( restClient.getBaseURL()\n-                    + \"configuration/delete/{confKey}.json\",\n-                    confKey);\n-    }\n-\n-    /**\n-     * Getter for restClient attribute.\n-     * @return RestClient instance\n-     */\n-    public RestClient getRestClient() {\n-        return restClient;\n-    }\n-\n-    /**\n-     * Setter for restClient attribute.\n-     * @param restClient instance\n-     */\n-    public void setRestClient(RestClient restClient) {\n-        this.restClient = restClient;\n+        restTemplate.delete(baseURL\n+                + \"configuration/delete/{confKey}.json\",\n+                confKey);\n     }\n-}\n\\ No newline at end of file\n+}","previous_filename":"console/src/main/java/org/syncope/console/rest/ConfigurationsRestClient.java"},{"sha":"d4bd332eb331553a12db3b10fa723eaa4e8e81fd","filename":"console/src/main/java/org/syncope/console/rest/ConnectorRestClient.java","status":"renamed","additions":34,"deletions":45,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -16,16 +16,16 @@\n \n import java.util.Arrays;\n import java.util.List;\n+import org.springframework.stereotype.Component;\n import org.syncope.client.to.ConnectorBundleTO;\n import org.syncope.client.to.ConnectorInstanceTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n \n /**\n  * Console client for invoking Rest Connectors services.\n  */\n-public class ConnectorsRestClient {\n-\n-    RestClient restClient;\n+@Component\n+public class ConnectorRestClient extends AbstractBaseRestClient {\n \n     /**\n      * Get all connectors.\n@@ -34,8 +34,8 @@ public class ConnectorsRestClient {\n     public List<ConnectorInstanceTO> getAllConnectors() {\n         List<ConnectorInstanceTO> connectors = null;\n \n-        connectors = Arrays.asList(restClient.getRestTemplate().getForObject(\n-                restClient.getBaseURL() + \"connector/list.json\", \n+        connectors = Arrays.asList(restTemplate.getForObject(\n+                baseURL + \"connector/list.json\",\n                 ConnectorInstanceTO[].class));\n \n         return connectors;\n@@ -46,14 +46,14 @@ public List<ConnectorInstanceTO> getAllConnectors() {\n      * @param schemaTO\n      */\n     public void createConnector(ConnectorInstanceTO connectorTO) {\n-      ConnectorInstanceTO actual = null;\n+        ConnectorInstanceTO actual = null;\n \n         try {\n-       actual = restClient.getRestTemplate().postForObject(restClient.getBaseURL() +\n-                \"connector/create.json\", connectorTO, ConnectorInstanceTO.class);\n-        }\n-        catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            actual = restTemplate.postForObject(baseURL\n+                    + \"connector/create.json\", connectorTO,\n+                    ConnectorInstanceTO.class);\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While creating a connector\", e);\n         }\n     }\n \n@@ -66,12 +66,11 @@ public ConnectorInstanceTO readConnector(String name) {\n         ConnectorInstanceTO schema = null;\n \n         try {\n-        schema = restClient.getRestTemplate().getForObject\n-                (restClient.getBaseURL() + \"connector/read/\" + name + \".json\",\n-                  ConnectorInstanceTO.class);\n-        }\n-        catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            schema = restTemplate.getForObject(\n+                    baseURL + \"connector/read/\" + name + \".json\",\n+                    ConnectorInstanceTO.class);\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While reading a connector\", e);\n         }\n \n         return schema;\n@@ -83,12 +82,12 @@ public ConnectorInstanceTO readConnector(String name) {\n      */\n     public void updateConnector(ConnectorInstanceTO connectorTO) {\n         try {\n-        restClient.getRestTemplate().postForObject\n-                (restClient.getBaseURL() + \"connector/update.json\", connectorTO,\n-                 ConnectorInstanceTO.class);\n-        }\n-        catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            restTemplate.postForObject(\n+                    baseURL + \"connector/update.json\",\n+                    connectorTO,\n+                    ConnectorInstanceTO.class);\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While updating a connector\", e);\n         }\n     }\n \n@@ -99,34 +98,24 @@ public void updateConnector(ConnectorInstanceTO connectorTO) {\n      */\n     public void deleteConnector(Long id) {\n         try {\n-        restClient.getRestTemplate().delete(restClient.getBaseURL() +\n-                \"connector/delete/{connectorId}.json\",id.toString());\n-        }\n-        catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            restTemplate.delete(baseURL\n+                    + \"connector/delete/{connectorId}.json\", id.toString());\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While deleting a connector\", e);\n         }\n     }\n \n     public List<ConnectorBundleTO> getAllBundles() {\n         List<ConnectorBundleTO> bundles = null;\n \n         try {\n-        bundles = Arrays.asList(restClient.getRestTemplate().getForObject(\n-                restClient.getBaseURL() + \"connector/getBundles.json\",\n-                ConnectorBundleTO[].class));\n-        }\n-        catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            bundles = Arrays.asList(restTemplate.getForObject(\n+                    baseURL + \"connector/getBundles.json\",\n+                    ConnectorBundleTO[].class));\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While getting connector bundles\", e);\n         }\n \n         return bundles;\n     }\n-\n-    public RestClient getRestClient() {\n-        return restClient;\n-    }\n-\n-    public void setRestClient(RestClient restClient) {\n-        this.restClient = restClient;\n-    }\n-}\n\\ No newline at end of file\n+}","previous_filename":"console/src/main/java/org/syncope/console/rest/ConnectorsRestClient.java"},{"sha":"5b581baeca80f5c33321c3fd01fed57be6568c08","filename":"console/src/main/java/org/syncope/console/rest/EntitlementRestClient.java","status":"renamed","additions":6,"deletions":14,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FEntitlementRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FEntitlementRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FEntitlementRestClient.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -16,14 +16,14 @@\n \n import java.util.Arrays;\n import java.util.List;\n+import org.springframework.stereotype.Component;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n \n /**\n  * Console client for invoking Rest Resources services.\n  */\n-public class EntitlementsRestClient {\n-\n-    private RestClient restClient;\n+@Component\n+public class EntitlementRestClient extends AbstractBaseRestClient {\n \n     /**\n      * Get all Entitlements.\n@@ -34,21 +34,13 @@ public List<String> getAllEntitlements() {\n \n         try {\n             entitlements = Arrays.asList(\n-                    restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL() + \"auth/allentitlements.json\",\n+                    restTemplate.getForObject(\n+                    baseURL + \"auth/allentitlements.json\",\n                     String[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While reading all the entitlements\", e);\n         }\n \n         return entitlements;\n     }\n-\n-    public RestClient getRestClient() {\n-        return restClient;\n-    }\n-\n-    public void setRestClient(RestClient restClient) {\n-        this.restClient = restClient;\n-    }\n }","previous_filename":"console/src/main/java/org/syncope/console/rest/EntitlementsRestClient.java"},{"sha":"6e35a8472a24da4b0820878396f46b022867937d","filename":"console/src/main/java/org/syncope/console/rest/ResourceRestClient.java","status":"renamed","additions":31,"deletions":45,"changes":76,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -16,15 +16,15 @@\n \n import java.util.Arrays;\n import java.util.List;\n+import org.springframework.stereotype.Component;\n import org.syncope.client.to.ResourceTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n \n /**\n  * Console client for invoking Rest Resources services.\n  */\n-public class ResourcesRestClient {\n-\n-    RestClient restClient;\n+@Component\n+public class ResourceRestClient extends AbstractBaseRestClient {\n \n     /**\n      * Get all Connectors.\n@@ -33,13 +33,12 @@ public class ResourcesRestClient {\n     public List<ResourceTO> getAllResources() {\n         List<ResourceTO> resources = null;\n \n-        try{\n-        resources = Arrays.asList(restClient.getRestTemplate()\n-                .getForObject(restClient.getBaseURL() + \"resource/list.json\",\n-                ResourceTO[].class));\n-        }\n-        catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+        try {\n+            resources = Arrays.asList(restTemplate.getForObject(\n+                    baseURL + \"resource/list.json\",\n+                    ResourceTO[].class));\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While reading all resources\", e);\n         }\n \n         return resources;\n@@ -50,12 +49,11 @@ public List<ResourceTO> getAllResources() {\n      * @param resourceTO\n      */\n     public void createResource(ResourceTO resourceTO) {\n-        try{\n-        restClient.getRestTemplate().postForObject(restClient.getBaseURL() +\n-                \"resource/create\", resourceTO, ResourceTO.class);\n-        }\n-        catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+        try {\n+            restTemplate.postForObject(baseURL\n+                    + \"resource/create\", resourceTO, ResourceTO.class);\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While creating a resource\", e);\n         }\n     }\n \n@@ -68,12 +66,11 @@ public ResourceTO readResource(String name) {\n         ResourceTO resourceTO = null;\n \n         try {\n-        resourceTO = restClient.getRestTemplate().getForObject\n-                (restClient.getBaseURL() + \"resource/read/\" + name + \".json\",\n-                ResourceTO.class);\n-        }\n-        catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            resourceTO = restTemplate.getForObject(\n+                    baseURL + \"resource/read/\" + name + \".json\",\n+                    ResourceTO.class);\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While reading a resource\", e);\n         }\n         return resourceTO;\n     }\n@@ -86,12 +83,11 @@ public void updateResource(ResourceTO resourceTO) {\n         ResourceTO newResourceTO;\n \n         try {\n-        newResourceTO = restClient.getRestTemplate().postForObject\n-                (restClient.getBaseURL() + \"resource/update.json\", resourceTO,\n-                ResourceTO.class);\n-        }\n-        catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            newResourceTO = restTemplate.postForObject(\n+                    baseURL + \"resource/update.json\", resourceTO,\n+                    ResourceTO.class);\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While updating a resource\", e);\n         }\n \n     }\n@@ -102,20 +98,10 @@ public void updateResource(ResourceTO resourceTO) {\n      */\n     public void deleteResource(String name) {\n         try {\n-        restClient.getRestTemplate().delete(restClient.getBaseURL() +\n-                \"resource/delete/{resourceName}.json\",name);\n+            restTemplate.delete(baseURL\n+                    + \"resource/delete/{resourceName}.json\", name);\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While deleting a resource\", e);\n         }\n-        catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n-        }\n-\n-    }\n-\n-    public RestClient getRestClient() {\n-        return restClient;\n-    }\n-\n-    public void setRestClient(RestClient restClient) {\n-        this.restClient = restClient;\n     }\n-}\n\\ No newline at end of file\n+}","previous_filename":"console/src/main/java/org/syncope/console/rest/ResourcesRestClient.java"},{"sha":"c62ade0168ebab66ee63b44ada504a05f1ba6907","filename":"console/src/main/java/org/syncope/console/rest/RoleRestClient.java","status":"renamed","additions":35,"deletions":45,"changes":80,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FRoleRestClient.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -16,29 +16,33 @@\n \n import java.util.Arrays;\n import java.util.List;\n-import org.springframework.web.client.RestClientException;\n+import org.springframework.stereotype.Component;\n import org.syncope.client.mod.RoleMod;\n import org.syncope.client.to.RoleTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n \n /**\n  * Console client for invoking Rest Role's services.\n  */\n-public class RolesRestClient {\n-\n-    RestClient restClient;\n+@Component\n+public class RoleRestClient extends AbstractBaseRestClient {\n \n     /**\n      * Get all Roles.\n      * @return SchemaTOs\n      */\n     public List<RoleTO> getAllRoles()\n-            throws SyncopeClientCompositeErrorException, RestClientException {\n+            throws SyncopeClientCompositeErrorException {\n+\n         List<RoleTO> roles = null;\n \n-        roles =  Arrays.asList(restClient.getRestTemplate().getForObject(\n-                restClient.getBaseURL() + \"role/list.json\", RoleTO[].class));\n-        \n+        try {\n+            roles = Arrays.asList(restTemplate.getForObject(\n+                    baseURL + \"role/list.json\", RoleTO[].class));\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While listing all roles\", e);\n+        }\n+\n         return roles;\n     }\n \n@@ -47,13 +51,11 @@ public List<RoleTO> getAllRoles()\n      * @param roleTO\n      */\n     public void createRole(RoleTO roleTO) {\n-        RoleTO newRoleTO;\n-        try{\n-        newRoleTO = restClient.getRestTemplate().postForObject(\n-                restClient.getBaseURL() + \"role/create\", roleTO, RoleTO.class);\n-        }\n-        catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+        try {\n+            restTemplate.postForObject(\n+                    baseURL + \"role/create\", roleTO, RoleTO.class);\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While creating a role\", e);\n         }\n     }\n \n@@ -66,12 +68,11 @@ public RoleTO readRole(Long id) {\n         RoleTO roleTO = null;\n \n         try {\n-        roleTO = restClient.getRestTemplate().getForObject\n-                (restClient.getBaseURL() + \"role/read/{roleId}.json\",\n-                 RoleTO.class, id);\n-        }\n-        catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            roleTO = restTemplate.getForObject(\n+                    baseURL + \"role/read/{roleId}.json\",\n+                    RoleTO.class, id);\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While reading a role\", e);\n         }\n         return roleTO;\n     }\n@@ -85,39 +86,28 @@ public boolean updateRole(RoleMod roleMod) {\n         RoleTO newRoleTO = null;\n \n         try {\n-        newRoleTO = restClient.getRestTemplate().postForObject\n-                (restClient.getBaseURL() + \"role/update\", roleMod,\n-                RoleTO.class);\n-        }\n-        catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            newRoleTO = restTemplate.postForObject(\n+                    baseURL + \"role/update\", roleMod,\n+                    RoleTO.class);\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While updating a role\", e);\n             return false;\n         }\n \n         return true;\n     }\n-    \n+\n     /**\n      * Delete an already existent role by its name.\n      * @param name (e.g.:surname)\n      * @return schemaTO\n      */\n     public void deleteRole(Long id) {\n         try {\n-        restClient.getRestTemplate().delete(restClient.getBaseURL() +\n-                \"role/delete/{roleId}.json\",id);\n+            restTemplate.delete(baseURL\n+                    + \"role/delete/{roleId}.json\", id);\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While deleting a role\", e);\n         }\n-        catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n-        }\n-\n-    }\n-\n-    public RestClient getRestClient() {\n-        return restClient;\n-    }\n-\n-    public void setRestClient(RestClient restClient) {\n-        this.restClient = restClient;\n     }\n-}\n\\ No newline at end of file\n+}","previous_filename":"console/src/main/java/org/syncope/console/rest/RolesRestClient.java"},{"sha":"ca0372bf0705d6459ba3e9b711f169b3bce1fde5","filename":"console/src/main/java/org/syncope/console/rest/SchemaRestClient.java","status":"modified","additions":101,"deletions":135,"changes":236,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -2,9 +2,9 @@\n  *  Licensed under the Apache License, Version 2.0 (the \"License\");\n  *  you may not use this file except in compliance with the License.\n  *  You may obtain a copy of the License at\n- * \n+ *\n  *       http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing, software\n  *  distributed under the License is distributed on an \"AS IS\" BASIS,\n  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -18,25 +18,16 @@\n import java.util.Arrays;\n import java.util.List;\n import java.util.Set;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.web.client.RestClientException;\n+import org.springframework.stereotype.Component;\n import org.syncope.client.to.DerivedSchemaTO;\n import org.syncope.client.to.SchemaTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n-import org.syncope.types.SyncopeClientExceptionType;\n \n /**\n  * Console client for invoking rest schema services.\n  */\n-public class SchemaRestClient {\n-\n-    /**\n-     * Logger.\n-     */\n-    private static final Logger LOG =\n-            LoggerFactory.getLogger(SchemaRestClient.class);\n-    protected RestClient restClient;\n+@Component\n+public class SchemaRestClient extends AbstractBaseRestClient {\n \n     /**\n      * Get all user's schemas.\n@@ -47,20 +38,11 @@ public List<SchemaTO> getAllUserSchemas() {\n \n         try {\n             userSchemas = Arrays.asList(\n-                    restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL() + \"schema/user/list.json\",\n+                    restTemplate.getForObject(\n+                    baseURL + \"schema/user/list.json\",\n                     SchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n-            for (SyncopeClientExceptionType exceptionType :\n-                    SyncopeClientExceptionType.values()) {\n-                if (e.hasException(exceptionType)) {\n-                    LOG.error(exceptionType.toString());\n-                    LOG.error(e.getException(exceptionType).\n-                            getElements().toString());\n-                }\n-            }\n-        } catch (RestClientException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While getting all user schemas\", e);\n         }\n \n         return userSchemas;\n@@ -72,16 +54,14 @@ public List<SchemaTO> getAllUserSchemas() {\n      */\n     public List<String> getAllUserSchemasNames() {\n \n-        List<SchemaTO>  userSchemas = null;\n+        List<SchemaTO> userSchemas = null;\n         List<String> schemasNames = new ArrayList<String>();\n         try {\n-            userSchemas = Arrays.asList(restClient.getRestTemplate()\n-                    .getForObject(restClient.getBaseURL()\n+            userSchemas = Arrays.asList(restTemplate.getForObject(\n+                    baseURL\n                     + \"schema/user/list.json\", SchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n-        } catch (RestClientException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While getting all user schema names\", e);\n         }\n \n         for (SchemaTO schemaTO : userSchemas) {\n@@ -100,11 +80,11 @@ public List<DerivedSchemaTO> getAllUserDerivedSchemas() {\n         List<DerivedSchemaTO> userDerivedSchemas = null;\n         try {\n             userDerivedSchemas = Arrays.asList(\n-                    restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL() + \"derivedSchema/user/list.json\",\n+                    restTemplate.getForObject(\n+                    baseURL + \"derivedSchema/user/list.json\",\n                     DerivedSchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While getting all user derived schemas\", e);\n         }\n         return userDerivedSchemas;\n     }\n@@ -118,13 +98,11 @@ public List<String> getAllUserDerivedSchemasNames() {\n         List<DerivedSchemaTO> userDerivedSchemas = null;\n         List<String> userDerivedSchemasNames = new ArrayList<String>();\n         try {\n-            userDerivedSchemas = Arrays.asList(restClient.getRestTemplate()\n-                    .getForObject(restClient.getBaseURL()\n+            userDerivedSchemas = Arrays.asList(restTemplate.getForObject(\n+                    baseURL\n                     + \"derivedSchema/user/list.json\", DerivedSchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n-        } catch (RestClientException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While getting all user derived schema names\", e);\n         }\n \n         for (DerivedSchemaTO schemaTO : userDerivedSchemas) {\n@@ -140,10 +118,10 @@ public List<String> getAllUserDerivedSchemasNames() {\n      */\n     public void createUserSchema(SchemaTO schemaTO) {\n         try {\n-            restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n+            restTemplate.postForObject(baseURL\n                     + \"schema/user/create\", schemaTO, SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While creating a user schema\", e);\n         }\n     }\n \n@@ -156,11 +134,11 @@ public SchemaTO readUserSchema(String name) {\n         SchemaTO schema = null;\n \n         try {\n-            schema = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL()\n+            schema = restTemplate.getForObject(\n+                    baseURL\n                     + \"schema/user/read/\" + name + \".json\", SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While reading a user schema\", e);\n         }\n         return schema;\n     }\n@@ -171,10 +149,10 @@ public SchemaTO readUserSchema(String name) {\n      */\n     public void updateUserSchema(SchemaTO schemaTO) {\n         try {\n-            restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n+            restTemplate.postForObject(baseURL\n                     + \"schema/user/update\", schemaTO, SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While updating a user schema\", e);\n         }\n     }\n \n@@ -185,10 +163,10 @@ public void updateUserSchema(SchemaTO schemaTO) {\n      */\n     public void deleteUserSchema(String name) {\n         try {\n-            restClient.getRestTemplate().delete(restClient.getBaseURL()\n+            restTemplate.delete(baseURL\n                     + \"schema/user/delete/\" + name + \".json\");\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While deleting a user schema\", e);\n         }\n     }\n \n@@ -198,11 +176,11 @@ public void deleteUserSchema(String name) {\n      */\n     public void createUserDerivedSchema(DerivedSchemaTO schemaTO) {\n         try {\n-            restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n+            restTemplate.postForObject(baseURL\n                     + \"derivedSchema/user/create\", schemaTO,\n                     DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While creating a derived user schema\", e);\n         }\n     }\n \n@@ -214,12 +192,12 @@ public void createUserDerivedSchema(DerivedSchemaTO schemaTO) {\n     public DerivedSchemaTO readUserDerivedSchema(String name) {\n         DerivedSchemaTO derivedSchemaTO = null;\n         try {\n-            derivedSchemaTO = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL()\n+            derivedSchemaTO = restTemplate.getForObject(\n+                    baseURL\n                     + \"derivedSchema/user/read/\" + name + \".json\",\n                     DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While reading a derived user schema\", e);\n         }\n         return derivedSchemaTO;\n     }\n@@ -230,13 +208,12 @@ public DerivedSchemaTO readUserDerivedSchema(String name) {\n      */\n     public void updateUserDerivedSchema(DerivedSchemaTO schemaTO) {\n         try {\n-            restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n+            restTemplate.postForObject(baseURL\n                     + \"derivedSchema/user/update\", schemaTO,\n                     DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While updating a derived user schema\", e);\n         }\n-\n     }\n \n     /**\n@@ -246,36 +223,26 @@ public void updateUserDerivedSchema(DerivedSchemaTO schemaTO) {\n      */\n     public void deleteUserDerivedSchema(String name) {\n         try {\n-            restClient.getRestTemplate().delete(restClient.getBaseURL()\n+            restTemplate.delete(baseURL\n                     + \"derivedSchema/user/delete/\" + name + \".json\");\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While deleting a derived user schema\", e);\n         }\n     }\n \n-    public RestClient getRestClient() {\n-        return restClient;\n-    }\n-\n-    public void setRestClient(RestClient restClient) {\n-        this.restClient = restClient;\n-    }\n-\n     /**\n      * Get all role's schemas.\n      * @return SchemaTOs\n      */\n     public List<SchemaTO> getAllRoleSchemas() {\n \n-         List<SchemaTO> roleSchemas = null;\n+        List<SchemaTO> roleSchemas = null;\n \n         try {\n-            roleSchemas = Arrays.asList(restClient.getRestTemplate()\n-                    .getForObject(restClient.getBaseURL() +\n-                    \"schema/role/list.json\", SchemaTO[].class));\n+            roleSchemas = Arrays.asList(restTemplate.getForObject(\n+                    baseURL + \"schema/role/list.json\", SchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n-        } catch (RestClientException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While creating a derived user schema\", e);\n         }\n \n         return roleSchemas;\n@@ -291,12 +258,10 @@ public List<String> getAllRoleSchemasNames() {\n         List<String> roleSchemasNames = new ArrayList<String>();\n \n         try {\n-            roleSchemas = Arrays.asList(restClient.getRestTemplate()\n-                    .getForObject( restClient.getBaseURL() +\n-                    \"schema/role/list.json\", SchemaTO[].class));\n+            roleSchemas = Arrays.asList(restTemplate.getForObject(\n+                    baseURL + \"schema/role/list.json\", SchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n-        } catch (RestClientException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While getting all role schema names\", e);\n         }\n \n         for (SchemaTO schemaTO : roleSchemas) {\n@@ -316,12 +281,10 @@ public List<String> getAllMembershipSchemasNames() {\n         List<String> membershipSchemasNames = new ArrayList<String>();\n \n         try {\n-            membershipSchemas = Arrays.asList(restClient.getRestTemplate()\n-                    .getForObject( restClient.getBaseURL() +\n-                    \"schema/membership/list.json\", SchemaTO[].class));\n+            membershipSchemas = Arrays.asList(restTemplate.getForObject(\n+                    baseURL + \"schema/membership/list.json\", SchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n-        } catch (RestClientException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While getting all membership schema names\", e);\n         }\n \n         for (SchemaTO schemaTO : membershipSchemas) {\n@@ -337,10 +300,10 @@ public List<String> getAllMembershipSchemasNames() {\n      */\n     public void createRoleSchema(SchemaTO schemaTO) {\n         try {\n-            restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n+            restTemplate.postForObject(baseURL\n                     + \"schema/role/create\", schemaTO, SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While creating a role schema\", e);\n         }\n     }\n \n@@ -353,11 +316,11 @@ public SchemaTO readRoleSchema(String name) {\n         SchemaTO schema = null;\n \n         try {\n-            schema = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL()\n+            schema = restTemplate.getForObject(\n+                    baseURL\n                     + \"schema/role/read/\" + name + \".json\", SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While reading a role schema\", e);\n         }\n         return schema;\n     }\n@@ -368,11 +331,11 @@ public SchemaTO readRoleSchema(String name) {\n      */\n     public void updateRoleSchema(SchemaTO schemaTO) {\n         try {\n-            SchemaTO updatedTO = restClient.getRestTemplate().postForObject(\n-                    restClient.getBaseURL()\n+            SchemaTO updatedTO = restTemplate.postForObject(\n+                    baseURL\n                     + \"schema/role/update\", schemaTO, SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While updating a role schema\", e);\n         }\n     }\n \n@@ -383,10 +346,10 @@ public void updateRoleSchema(SchemaTO schemaTO) {\n      */\n     public void deleteRoleSchema(String name) {\n         try {\n-            restClient.getRestTemplate().delete(restClient.getBaseURL()\n+            restTemplate.delete(baseURL\n                     + \"schema/role/delete/\" + name + \".json\");\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While deleting a role schema\", e);\n         }\n     }\n \n@@ -395,14 +358,16 @@ public void deleteRoleSchema(String name) {\n      * @return DerivedSchemaTOs\n      */\n     public List<DerivedSchemaTO> getAllRoleDerivedSchemas() {\n-        List<DerivedSchemaTO>  roleDerivedSchemas = null;\n+        List<DerivedSchemaTO> roleDerivedSchemas = null;\n \n         try {\n-            roleDerivedSchemas = Arrays.asList(restClient.getRestTemplate()\n-                    .getForObject(restClient.getBaseURL() +\n-                    \"derivedSchema/role/list.json\", DerivedSchemaTO[].class));\n+            roleDerivedSchemas = Arrays.asList(restTemplate.getForObject(\n+                    baseURL\n+                    + \"derivedSchema/role/list.json\", DerivedSchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While getting all role derived schemas\", e);\n         }\n+\n         return roleDerivedSchemas;\n     }\n \n@@ -412,11 +377,11 @@ public List<DerivedSchemaTO> getAllRoleDerivedSchemas() {\n      */\n     public void createRoleDerivedSchema(DerivedSchemaTO schemaTO) {\n         try {\n-            restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n+            restTemplate.postForObject(baseURL\n                     + \"derivedSchema/role/create\", schemaTO,\n                     DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While creating a role derived schema\", e);\n         }\n     }\n \n@@ -429,12 +394,12 @@ public DerivedSchemaTO readRoleDerivedSchema(String name) {\n         DerivedSchemaTO derivedSchemaTO = null;\n \n         try {\n-            derivedSchemaTO = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL()\n+            derivedSchemaTO = restTemplate.getForObject(\n+                    baseURL\n                     + \"derivedSchema/role/read/\" + name + \".json\",\n                     DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While reading a role derived schema\", e);\n         }\n         return derivedSchemaTO;\n     }\n@@ -446,11 +411,11 @@ public DerivedSchemaTO readRoleDerivedSchema(String name) {\n     public void updateRoleDerivedSchema(DerivedSchemaTO schemaTO) {\n \n         try {\n-            restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n+            restTemplate.postForObject(baseURL\n                     + \"derivedSchema/role/update\", schemaTO,\n                     DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While updating a role derived schema\", e);\n         }\n     }\n \n@@ -461,10 +426,10 @@ public void updateRoleDerivedSchema(DerivedSchemaTO schemaTO) {\n      */\n     public void deleteRoleDerivedSchema(String name) {\n         try {\n-            restClient.getRestTemplate().delete(restClient.getBaseURL()\n+            restTemplate.delete(baseURL\n                     + \"derivedSchema/role/delete/\" + name + \".json\");\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While deleting a role derived schema\", e);\n         }\n     }\n \n@@ -477,12 +442,11 @@ public List<SchemaTO> getAllMemberhipSchemas() {\n         List<SchemaTO> memberhipSchemas = null;\n \n         try {\n-            memberhipSchemas = Arrays.asList(restClient.getRestTemplate()\n-                    .getForObject(restClient.getBaseURL()\n+            memberhipSchemas = Arrays.asList(restTemplate.getForObject(\n+                    baseURL\n                     + \"schema/membership/list.json\", SchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n-        } catch (RestClientException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While getting all membership schemas\", e);\n         }\n \n         return memberhipSchemas;\n@@ -494,10 +458,10 @@ public List<SchemaTO> getAllMemberhipSchemas() {\n      */\n     public void createMemberhipSchema(SchemaTO schemaTO) {\n         try {\n-            restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n+            restTemplate.postForObject(baseURL\n                     + \"schema/membership/create\", schemaTO, SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While creating a membership schema\", e);\n         }\n     }\n \n@@ -510,12 +474,12 @@ public SchemaTO readMemberhipSchema(String name) {\n         SchemaTO schema = null;\n \n         try {\n-            schema = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL()\n+            schema = restTemplate.getForObject(\n+                    baseURL\n                     + \"schema/membership/read/\" + name + \".json\",\n                     SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While reading a membership schema\", e);\n         }\n         return schema;\n     }\n@@ -526,11 +490,11 @@ public SchemaTO readMemberhipSchema(String name) {\n      */\n     public void updateMemberhipSchema(SchemaTO schemaTO) {\n         try {\n-            SchemaTO updatedTO = restClient.getRestTemplate().postForObject(\n-                    restClient.getBaseURL()\n+            SchemaTO updatedTO = restTemplate.postForObject(\n+                    baseURL\n                     + \"schema/membership/update\", schemaTO, SchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While updating a membership schema\", e);\n         }\n     }\n \n@@ -541,10 +505,10 @@ public void updateMemberhipSchema(SchemaTO schemaTO) {\n      */\n     public void deleteMemberhipSchema(String name) {\n         try {\n-            restClient.getRestTemplate().delete(restClient.getBaseURL()\n+            restTemplate.delete(baseURL\n                     + \"schema/membership/delete/\" + name + \".json\");\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While deleting a membership schema\", e);\n         }\n     }\n \n@@ -555,11 +519,11 @@ public Set<String> getAllValidatorClasses() {\n         Set<String> validators = null;\n \n         try {\n-            validators = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL() + \"configuration/validators.json\",\n+            validators = restTemplate.getForObject(\n+                    baseURL + \"configuration/validators.json\",\n                     Set.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While getting all validators\", e);\n         }\n         return validators;\n     }\n@@ -572,12 +536,14 @@ public List<DerivedSchemaTO> getAllMembershipDerivedSchemas() {\n         List<DerivedSchemaTO> roleDerivedSchemas = null;\n \n         try {\n-            roleDerivedSchemas = Arrays.asList(restClient.getRestTemplate()\n-                    .getForObject( restClient.getBaseURL() +\n-                    \"derivedSchema/membership/list.json\",\n+            roleDerivedSchemas = Arrays.asList(restTemplate.getForObject(\n+                    baseURL\n+                    + \"derivedSchema/membership/list.json\",\n                     DerivedSchemaTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While getting all membership derived schemas\", e);\n         }\n+\n         return roleDerivedSchemas;\n     }\n \n@@ -587,11 +553,11 @@ public List<DerivedSchemaTO> getAllMembershipDerivedSchemas() {\n      */\n     public void createMembershipDerivedSchema(DerivedSchemaTO schemaTO) {\n         try {\n-            restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n+            restTemplate.postForObject(baseURL\n                     + \"derivedSchema/membership/create\", schemaTO,\n                     DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While creating a membership derived schema\", e);\n         }\n     }\n \n@@ -604,12 +570,12 @@ public DerivedSchemaTO readMembershipDerivedSchema(String name) {\n         DerivedSchemaTO derivedSchemaTO = null;\n \n         try {\n-            derivedSchemaTO = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL()\n+            derivedSchemaTO = restTemplate.getForObject(\n+                    baseURL\n                     + \"derivedSchema/membership/read/\" + name + \".json\",\n                     DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While reading a membership derived schema\", e);\n         }\n         return derivedSchemaTO;\n     }\n@@ -621,11 +587,11 @@ public DerivedSchemaTO readMembershipDerivedSchema(String name) {\n     public void updateMembershipDerivedSchema(DerivedSchemaTO schemaTO) {\n \n         try {\n-            restClient.getRestTemplate().postForObject(restClient.getBaseURL()\n+            restTemplate.postForObject(baseURL\n                     + \"derivedSchema/membership/update\", schemaTO,\n                     DerivedSchemaTO.class);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While updating a membership derived schema\", e);\n         }\n     }\n \n@@ -636,10 +602,10 @@ public void updateMembershipDerivedSchema(DerivedSchemaTO schemaTO) {\n      */\n     public void deleteMembershipDerivedSchema(String name) {\n         try {\n-            restClient.getRestTemplate().delete(restClient.getBaseURL()\n+            restTemplate.delete(baseURL\n                     + \"derivedSchema/membership/delete/\" + name + \".json\");\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While deleting a membership derived schema\", e);\n         }\n     }\n }"},{"sha":"d150fd1466aa5dc9a0524b3c1d634e840776d196","filename":"console/src/main/java/org/syncope/console/rest/TaskRestClient.java","status":"renamed","additions":35,"deletions":56,"changes":91,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FTaskRestClient.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -16,6 +16,7 @@\n \n import java.util.Arrays;\n import java.util.List;\n+import org.springframework.stereotype.Component;\n import org.syncope.client.to.TaskExecutionTO;\n import org.syncope.client.to.TaskTO;\n import org.syncope.client.validation.SyncopeClientCompositeErrorException;\n@@ -24,9 +25,8 @@\n /**\n  * Console client for invoking Rest Tasks services.\n  */\n-public class TasksRestClient {\n-\n-    RestClient restClient;\n+@Component\n+public class TaskRestClient extends AbstractBaseRestClient {\n \n     /**\n      * Get all stored tasks.\n@@ -35,28 +35,27 @@ public class TasksRestClient {\n     public List<TaskTO> getAllTasks() {\n \n         List<TaskTO> tasks = Arrays.asList(\n-                restClient.getRestTemplate().getForObject(\n-                restClient.getBaseURL() + \"task/list.json\",\n+                restTemplate.getForObject(\n+                baseURL + \"task/list.json\",\n                 TaskTO[].class));\n \n         return tasks;\n \n     }\n \n-   /**\n+    /**\n      * Load an existent task.\n      * @return TaskTO object if the configuration exists, null otherwise\n      */\n     public TaskTO readTask(String taskId) {\n \n-        TaskTO taskTO;\n+        TaskTO taskTO = null;\n         try {\n-            taskTO = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL() + \"task/read/{taskId}\",\n+            taskTO = restTemplate.getForObject(\n+                    baseURL + \"task/read/{taskId}\",\n                     TaskTO.class, taskId);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n-            return null;\n+            LOG.error(\"While reading a task\", e);\n         }\n \n         return taskTO;\n@@ -68,8 +67,8 @@ public TaskTO readTask(String taskId) {\n      */\n     public List<TaskExecutionTO> listExecutions() {\n         List<TaskExecutionTO> executions = Arrays.asList(\n-                restClient.getRestTemplate().getForObject(\n-                restClient.getBaseURL() + \"task/execution/list\",\n+                restTemplate.getForObject(\n+                baseURL + \"task/execution/list\",\n                 TaskExecutionTO[].class));\n \n         return executions;\n@@ -82,13 +81,11 @@ public List<TaskExecutionTO> listExecutions() {\n     public void deleteTask(Long taskId) {\n \n         try {\n-         restClient.getRestTemplate().delete(\n-                 restClient.getBaseURL() + \"task/delete/{taskId}\", taskId);\n-         } catch (SyncopeClientCompositeErrorException scce) {\n-             scce.printStackTrace();\n-             throw scce;\n-         }\n-\n+            restTemplate.delete(\n+                    baseURL + \"task/delete/{taskId}\", taskId);\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While deleting a task\", e);\n+        }\n     }\n \n     /**\n@@ -98,18 +95,17 @@ public void deleteTask(Long taskId) {\n      *                  FALSE otherwise\n      */\n     public boolean startTaskExecution(Long taskId) {\n-        TaskExecutionTO execution;\n-\n-         try {\n-            execution = restClient.getRestTemplate().getForObject(\n-            restClient.getBaseURL() + \"task/execute/{taskId}\",\n-            TaskExecutionTO.class, taskId);\n-         } catch (SyncopeClientCompositeErrorException scce) {\n-             scce.printStackTrace();\n-             throw scce;\n-         }\n-\n-        return (execution.getStatus() == TaskExecutionStatus.SUBMITTED);\n+        boolean result = false;\n+        try {\n+            TaskExecutionTO execution = restTemplate.getForObject(\n+                    baseURL + \"task/execute/{taskId}\",\n+                    TaskExecutionTO.class, taskId);\n+            result = (execution.getStatus() == TaskExecutionStatus.SUBMITTED);\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While starting a task\", e);\n+        }\n+\n+        return result;\n     }\n \n     /**\n@@ -118,30 +114,13 @@ public boolean startTaskExecution(Long taskId) {\n      */\n     public boolean deleteTaskExecution(Long execId) {\n \n-         try {\n-                restClient.getRestTemplate().delete(restClient.getBaseURL() +\n-                        \"task/execution/delete/{execId}\", execId);\n-         } catch (SyncopeClientCompositeErrorException scce) {\n-             scce.printStackTrace();\n-             throw scce;\n-         }\n-\n-        return true;\n+        try {\n+            restTemplate.delete(baseURL\n+                    + \"task/execution/delete/{execId}\", execId);\n+        } catch (SyncopeClientCompositeErrorException e) {\n+            LOG.error(\"While deletring a task execution\", e);\n         }\n \n-    /**\n-     * Getter for restClient attribute.\n-     * @return RestClient instance\n-     */\n-    public RestClient getRestClient() {\n-        return restClient;\n-    }\n-\n-    /**\n-     * Setter for restClient attribute.\n-     * @param restClient instance\n-     */\n-    public void setRestClient(RestClient restClient) {\n-        this.restClient = restClient;\n+        return true;\n     }\n-}\n\\ No newline at end of file\n+}","previous_filename":"console/src/main/java/org/syncope/console/rest/TasksRestClient.java"},{"sha":"c397b2f9024acfc457b57fab6a669a6a8b2c846c","filename":"console/src/main/java/org/syncope/console/rest/UserRestClient.java","status":"renamed","additions":31,"deletions":60,"changes":91,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Frest%2FUserRestClient.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -16,6 +16,7 @@\n \n import java.util.Arrays;\n import java.util.List;\n+import org.springframework.stereotype.Component;\n import org.springframework.web.client.HttpServerErrorException;\n import org.syncope.client.mod.UserMod;\n import org.syncope.client.to.ConfigurationTO;\n@@ -28,50 +29,29 @@\n /**\n  * Console client for invoking rest users services.\n  */\n-public class UsersRestClient {\n-\n-    protected RestClient restClient;\n+@Component\n+public class UserRestClient extends AbstractBaseRestClient {\n \n     public List<UserTO> getAllUsers() {\n         List<UserTO> users = null;\n         try {\n-            users = Arrays.asList(restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL()\n-                    + \"user/list.json\", UserTO[].class));\n+            users = Arrays.asList(restTemplate.getForObject(\n+                    baseURL + \"user/list.json\", UserTO[].class));\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While listing all users\", e);\n         }\n         return users;\n     }\n \n-    /*public List<UserTO> getPaginatedUsersList(int page, int size) {\n-        List<UserTO> users = null;\n-        try {\n-            final PaginatedResult paginatedResult =\n-                    restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL()\n-                    + \"user/paginatedList/{page}/{size}\",\n-                    PaginatedResult.class, page, size);\n-\n-            users = paginatedResult.getRecords();\n-\n-        } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n-        }\n-        return users;\n-    }*/\n-\n     /**\n      * Create a new user and start off the workflow.\n      * @param userTO instance\n      */\n     public void createUser(UserTO userTO)\n             throws SyncopeClientCompositeErrorException {\n-        UserTO newUserTO;\n \n         // Create user\n-        newUserTO = restClient.getRestTemplate().postForObject(\n-                restClient.getBaseURL()\n+        restTemplate.postForObject(baseURL\n                 + \"user/create\", userTO, UserTO.class);\n     }\n \n@@ -81,35 +61,35 @@ public void createUser(UserTO userTO)\n      * @return true is the opertion ends succesfully, false otherwise\n      */\n     public boolean updateUser(UserMod userModTO)\n-            throws\n-            SyncopeClientCompositeErrorException {\n+            throws SyncopeClientCompositeErrorException {\n+\n         UserTO newUserTO = null;\n \n-        newUserTO = restClient.getRestTemplate().postForObject(\n-                restClient.getBaseURL()\n+        newUserTO = restTemplate.postForObject(\n+                baseURL\n                 + \"user/update\", userModTO, UserTO.class);\n \n         return userModTO.getId() == newUserTO.getId();\n     }\n \n     public void deleteUser(String id) {\n         try {\n-            restClient.getRestTemplate().delete(restClient.getBaseURL()\n+            restTemplate.delete(baseURL\n                     + \"user/delete/{userId}\", new Integer(id));\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While deleting a user\", e);\n         }\n     }\n \n     public UserTO getUser(String id) {\n         UserTO userTO = null;\n         try {\n-            userTO = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL()\n+            userTO = restTemplate.getForObject(\n+                    baseURL\n                     + \"user/read/{userId}.json\",\n                     UserTO.class, id);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While reading a user\", e);\n         }\n         return userTO;\n     }\n@@ -123,8 +103,8 @@ public boolean createConfigurationAttributes(\n             ConfigurationTO configurationTO) {\n \n         ConfigurationTO newConfigurationTO =\n-                restClient.getRestTemplate().postForObject(\n-                restClient.getBaseURL() + \"configuration/create\",\n+                restTemplate.postForObject(\n+                baseURL + \"configuration/create\",\n                 configurationTO, ConfigurationTO.class);\n \n         return configurationTO.equals(newConfigurationTO);\n@@ -138,9 +118,8 @@ public boolean createConfigurationAttributes(\n     public boolean updateConfigurationAttributes(\n             ConfigurationTO configurationTO) {\n \n-        ConfigurationTO newConfigurationTO = restClient.getRestTemplate().\n-                postForObject(restClient.getBaseURL()\n-                + \"configuration/update\",\n+        ConfigurationTO newConfigurationTO = restTemplate.postForObject(\n+                baseURL + \"configuration/update\",\n                 configurationTO, ConfigurationTO.class);\n \n         return configurationTO.equals(newConfigurationTO);\n@@ -155,12 +134,12 @@ public ConfigurationTO readConfigurationDisplayAttributes() {\n \n         ConfigurationTO configurationTO;\n         try {\n-            configurationTO = restClient.getRestTemplate().getForObject(\n-                    restClient.getBaseURL() + \"configuration/read/{confKey}\",\n+            configurationTO = restTemplate.getForObject(\n+                    baseURL + \"configuration/read/{confKey}\",\n                     ConfigurationTO.class,\n                     Constants.CONF_USERS_ATTRIBUTES_VIEW);\n         } catch (SyncopeClientCompositeErrorException e) {\n-            e.printStackTrace();\n+            LOG.error(\"While reading a conf key\", e);\n             return null;\n         }\n \n@@ -176,8 +155,8 @@ public List<UserTO> searchUsers(NodeCond nodeSearchCondition)\n             throws HttpServerErrorException {\n         List<UserTO> matchedUsers = null;\n \n-        matchedUsers = Arrays.asList(restClient.getRestTemplate().postForObject(\n-                restClient.getBaseURL() + \"user/search\",\n+        matchedUsers = Arrays.asList(restTemplate.postForObject(\n+                baseURL + \"user/search\",\n                 nodeSearchCondition, UserTO[].class));\n \n         return matchedUsers;\n@@ -194,8 +173,8 @@ public List<UserTO> paginatedSearchUsers(NodeCond nodeSearchCondition,\n         List<UserTO> matchedUsers = null;\n \n         final PaginatedResult paginatedResult =\n-                restClient.getRestTemplate().postForObject(\n-                restClient.getBaseURL() + \"user/paginatedSearch/{page}/{size}\",\n+                restTemplate.postForObject(\n+                baseURL + \"user/paginatedSearch/{page}/{size}\",\n                 nodeSearchCondition, PaginatedResult.class, page, size);\n \n         matchedUsers = paginatedResult.getRecords();\n@@ -208,8 +187,8 @@ public PaginatedResult paginatedSearchUser(NodeCond nodeSearchCondition,\n             throws HttpServerErrorException {\n \n         PaginatedResult paginatedResult =\n-                restClient.getRestTemplate().postForObject(\n-                restClient.getBaseURL() + \"user/paginatedSearch/{page}/{size}\",\n+                restTemplate.postForObject(\n+                baseURL + \"user/paginatedSearch/{page}/{size}\",\n                 nodeSearchCondition, PaginatedResult.class, page, size);\n \n         return paginatedResult;\n@@ -219,18 +198,10 @@ public PaginatedResult getPaginatedUser(int page, int size)\n             throws HttpServerErrorException {\n \n         PaginatedResult paginatedResult =\n-                restClient.getRestTemplate().getForObject(\n-                restClient.getBaseURL() + \"user/paginatedList/{page}/{size}\",\n+                restTemplate.getForObject(\n+                baseURL + \"user/paginatedList/{page}/{size}\",\n                 PaginatedResult.class, page, size);\n \n         return paginatedResult;\n     }\n-\n-    public RestClient getRestClient() {\n-        return restClient;\n-    }\n-\n-    public void setRestClient(RestClient restClient) {\n-        this.restClient = restClient;\n-    }\n }","previous_filename":"console/src/main/java/org/syncope/console/rest/UsersRestClient.java"},{"sha":"a060c1d51c9a6b124fb788de4623b1f78f81ec05","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/tree/NodeEditablePanel.java","status":"modified","additions":105,"deletions":97,"changes":202,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FNodeEditablePanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FNodeEditablePanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FNodeEditablePanel.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -32,19 +32,21 @@\n import org.syncope.console.pages.BasePage;\n import org.syncope.console.pages.RoleModalPage;\n import org.syncope.console.pages.Roles;\n-import org.syncope.console.rest.RolesRestClient;\n+import org.syncope.console.rest.RoleRestClient;\n \n /**\n  * Panel for a node element form.\n  */\n public class NodeEditablePanel extends Panel {\n-    @SpringBean(name = \"rolesRestClient\")\n-    RolesRestClient restClient;\n \n-    @SpringBean(name = \"xmlRolesReader\")\n-    protected XMLRolesReader xmlRolesReader;\n+    @SpringBean\n+    private RoleRestClient restClient;\n+\n+    @SpringBean\n+    private XMLRolesReader xmlRolesReader;\n+\n+    private Fragment fragment;\n \n-    Fragment fragment;\n     /**\n      * Panel constructor.\n      *\n@@ -57,99 +59,105 @@ public class NodeEditablePanel extends Panel {\n      * @param window\n      *            Modal window to open\n      */\n-    public NodeEditablePanel(String id, final Long idRole,IModel inputModel,\n-                               final ModalWindow window,final BasePage basePage) {\n+    public NodeEditablePanel(String id, final Long idRole, IModel inputModel,\n+            final ModalWindow window, final BasePage basePage) {\n         super(id);\n \n-        if (idRole == -1)\n-            fragment = new Fragment(\"menuPanel\", \"frag2\",this);\n-        else {\n-            fragment = new Fragment(\"menuPanel\", \"frag1\",this);\n-\n-        AjaxLink createRoleLink = new AjaxLink(\"createRoleLink\") {\n-\n-            @Override\n-            public void onClick(AjaxRequestTarget target) {\n-                window.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                    public Page createPage() {\n-                        RoleTO roleTO = new RoleTO();\n-                        roleTO.setParent(idRole);\n-                        RoleModalPage form = new RoleModalPage\n-                                (basePage,window, roleTO, true);\n-                        return form;\n-                    }\n-                });\n-\n-                window.show(target);\n-            }\n-        };\n-\n-        String allowedCreateRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Roles\",\"create\");\n-        MetaDataRoleAuthorizationStrategy.authorize(createRoleLink, ENABLE,\n-                allowedCreateRoles);\n-\n-        fragment.add(createRoleLink);\n-\n-        AjaxLink updateRoleLink = new AjaxLink(\"updateRoleLink\") {\n-\n-            @Override\n-            public void onClick(AjaxRequestTarget target) {\n-                window.setPageCreator(new ModalWindow.PageCreator() {\n-\n-                    public Page createPage() {\n-                        RoleTO roleTO = restClient.readRole(idRole);\n-                        RoleModalPage form =\n-                                new RoleModalPage(basePage, window, roleTO, false);\n-                        return form;\n-                    }\n-                });\n-\n-                window.show(target);\n-            }\n-        };\n-\n-        String allowedReadRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Roles\",\"read\");\n-        MetaDataRoleAuthorizationStrategy.authorize(updateRoleLink, ENABLE,\n-                allowedReadRoles);\n-        \n-        fragment.add(updateRoleLink);\n-\n-        AjaxLink dropRoleLink = new AjaxLink(\"dropRoleLink\") {\n-\n-            @Override\n-            public void onClick(AjaxRequestTarget target) {\n-                restClient.deleteRole(idRole);\n-\n-                getSession().info(getString(\"operation_succeded\"));\n-\n-                setResponsePage(new Roles(null));\n-            }\n-\n-            @Override\n-            protected IAjaxCallDecorator getAjaxCallDecorator() {\n-                return new AjaxPreprocessingCallDecorator(super.getAjaxCallDecorator()) {\n-                    private static final long serialVersionUID = 1L;\n-\n-                    @Override\n-                    public CharSequence preDecorateScript(CharSequence script) {\n-                        return \"if (confirm('\"+getString(\"confirmDelete\")+\"'))\"\n-                                +\"{\"+script+\"}\";\n-                    }\n-                };\n-            }\n-        };\n-\n-        String allowedDropRoles = xmlRolesReader.getAllAllowedRoles(\n-                \"Roles\",\"delete\");\n-        MetaDataRoleAuthorizationStrategy.authorize(dropRoleLink, ENABLE,\n-                allowedDropRoles);\n-\n-        fragment.add(dropRoleLink);\n-    }\n+        if (idRole == -1) {\n+            fragment = new Fragment(\"menuPanel\", \"frag2\", this);\n+        } else {\n+            fragment = new Fragment(\"menuPanel\", \"frag1\", this);\n+\n+            AjaxLink createRoleLink = new AjaxLink(\"createRoleLink\") {\n+\n+                @Override\n+                public void onClick(AjaxRequestTarget target) {\n+                    window.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                        public Page createPage() {\n+                            RoleTO roleTO = new RoleTO();\n+                            roleTO.setParent(idRole);\n+                            RoleModalPage form = new RoleModalPage(basePage,\n+                                    window, roleTO, true);\n+                            return form;\n+                        }\n+                    });\n+\n+                    window.show(target);\n+                }\n+            };\n+\n+            String allowedCreateRoles = xmlRolesReader.getAllAllowedRoles(\n+                    \"Roles\", \"create\");\n+            MetaDataRoleAuthorizationStrategy.authorize(createRoleLink, ENABLE,\n+                    allowedCreateRoles);\n+\n+            fragment.add(createRoleLink);\n+\n+            AjaxLink updateRoleLink = new AjaxLink(\"updateRoleLink\") {\n+\n+                @Override\n+                public void onClick(AjaxRequestTarget target) {\n+                    window.setPageCreator(new ModalWindow.PageCreator() {\n+\n+                        public Page createPage() {\n+                            RoleTO roleTO = restClient.readRole(idRole);\n+                            RoleModalPage form =\n+                                    new RoleModalPage(basePage, window, roleTO,\n+                                    false);\n+                            return form;\n+                        }\n+                    });\n+\n+                    window.show(target);\n+                }\n+            };\n+\n+            String allowedReadRoles = xmlRolesReader.getAllAllowedRoles(\n+                    \"Roles\", \"read\");\n+            MetaDataRoleAuthorizationStrategy.authorize(updateRoleLink, ENABLE,\n+                    allowedReadRoles);\n+\n+            fragment.add(updateRoleLink);\n+\n+            AjaxLink dropRoleLink = new AjaxLink(\"dropRoleLink\") {\n+\n+                @Override\n+                public void onClick(AjaxRequestTarget target) {\n+                    restClient.deleteRole(idRole);\n+\n+                    getSession().info(getString(\"operation_succeded\"));\n+\n+                    setResponsePage(new Roles(null));\n+                }\n+\n+                @Override\n+                protected IAjaxCallDecorator getAjaxCallDecorator() {\n+                    return new AjaxPreprocessingCallDecorator(super.\n+                            getAjaxCallDecorator()) {\n+\n+                        private static final long serialVersionUID = 1L;\n+\n+                        @Override\n+                        public CharSequence preDecorateScript(\n+                                CharSequence script) {\n+\n+                            return \"if (confirm('\"\n+                                    + getString(\"confirmDelete\") + \"'))\"\n+                                    + \"{\" + script + \"}\";\n+                        }\n+                    };\n+                }\n+            };\n+\n+            String allowedDropRoles = xmlRolesReader.getAllAllowedRoles(\n+                    \"Roles\", \"delete\");\n+            MetaDataRoleAuthorizationStrategy.authorize(dropRoleLink, ENABLE,\n+                    allowedDropRoles);\n+\n+            fragment.add(dropRoleLink);\n+        }\n \n-    add(fragment);\n+        add(fragment);\n     }\n }"},{"sha":"31216d054b53a644d82dde8d9d72c2366c0e8724","filename":"console/src/main/java/org/syncope/console/wicket/markup/html/tree/SyncopeRoleTree.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FSyncopeRoleTree.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FSyncopeRoleTree.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fsyncope%2Fconsole%2Fwicket%2Fmarkup%2Fhtml%2Ftree%2FSyncopeRoleTree.java?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -24,16 +24,16 @@\n import javax.swing.tree.TreeModel;\n import org.springframework.web.client.RestClientException;\n import org.syncope.client.to.RoleTO;\n-import org.syncope.console.rest.RolesRestClient;\n+import org.syncope.console.rest.RoleRestClient;\n \n /**\n  *\n  */\n public class SyncopeRoleTree {\n     List<Long> parentsId;\n-    RolesRestClient restClient;\n+    RoleRestClient restClient;\n \n-    public SyncopeRoleTree(RolesRestClient restClient) {\n+    public SyncopeRoleTree(RoleRestClient restClient) {\n         this.restClient = restClient;\n     }\n "},{"sha":"79461d937545aa6f3ab040af1acd83955a30ec76","filename":"console/src/main/resources/applicationContext.xml","status":"modified","additions":13,"deletions":43,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2FapplicationContext.xml?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -15,7 +15,9 @@\n        http://www.springframework.org/schema/tx\n        http://www.springframework.org/schema/tx/spring-tx.xsd\n        http://www.springframework.org/schema/aop\n-              http://www.springframework.org/schema/aop/spring-aop-2.5.xsd\">\n+       http://www.springframework.org/schema/aop/spring-aop.xsd\">\n+\n+    <context:component-scan base-package=\"org.syncope.console.rest\"/>\n \n     <bean id=\"propertyConfigurer\"\n           class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n@@ -26,6 +28,14 @@\n         </property>\n     </bean>\n \n+    <bean id=\"baseURL\" class=\"java.lang.String\">\n+        <constructor-arg value=\"${baseURL}\"/>\n+    </bean>\n+\n+    <bean id=\"authorizations\" class=\"java.lang.String\">\n+        <constructor-arg value=\"authorizations.xml\"/>\n+    </bean>\n+\n     <bean id=\"syncopeApplication\" class=\"org.syncope.console.SyncopeApplication\"/>\n \n     <bean id=\"jacksonObjectMapper\" class=\"org.codehaus.jackson.map.ObjectMapper\"/>\n@@ -61,48 +71,8 @@\n         <aop:scoped-proxy/>\n     </bean>\n \n-    <bean id=\"restClient\" class=\"org.syncope.console.rest.RestClient\" scope=\"prototype\">\n-        <property name=\"restTemplate\" ref=\"restTemplate\"/>\n-        <property name=\"baseURL\" value=\"${baseURL}\"/>\n-    </bean>\n-\n-    <bean id=\"schemaRestClient\" class=\"org.syncope.console.rest.SchemaRestClient\">\n-        <property name=\"restClient\" ref=\"restClient\"/>\n-    </bean>\n-\n-    <bean id=\"connectorsRestClient\" class=\"org.syncope.console.rest.ConnectorsRestClient\">\n-        <property name=\"restClient\" ref=\"restClient\"/>\n-    </bean>\n-\n-    <bean id=\"resourcesRestClient\" class=\"org.syncope.console.rest.ResourcesRestClient\">\n-        <property name=\"restClient\" ref=\"restClient\"/>\n-    </bean>\n-\n-    <bean id=\"usersRestClient\" class=\"org.syncope.console.rest.UsersRestClient\">\n-        <property name=\"restClient\" ref=\"restClient\"/>\n-    </bean>\n-\n-    <bean id=\"rolesRestClient\" class=\"org.syncope.console.rest.RolesRestClient\">\n-        <property name=\"restClient\" ref=\"restClient\"/>\n-    </bean>\n+    <bean id=\"utility\" class=\"org.syncope.console.commons.Utility\"/>\n \n-    <bean id=\"configurationsRestClient\" class=\"org.syncope.console.rest.ConfigurationsRestClient\">\n-        <property name=\"restClient\" ref=\"restClient\"/>\n-    </bean>\n-\n-    <bean id=\"tasksRestClient\" class=\"org.syncope.console.rest.TasksRestClient\">\n-        <property name=\"restClient\" ref=\"restClient\"/>\n-    </bean>\n+    <bean id=\"xmlRolesReader\" class=\"org.syncope.console.commons.XMLRolesReader\"/>\n \n-    <bean id=\"entitlementsRestClient\" class=\"org.syncope.console.rest.EntitlementsRestClient\">\n-        <property name=\"restClient\" ref=\"restClient\"/>\n-    </bean>\n-\n-    <bean id=\"utility\" class=\"org.syncope.console.commons.Utility\">\n-        <property name=\"configurationsRestClient\" ref=\"configurationsRestClient\"/>\n-    </bean>\n-\n-    <bean id=\"xmlRolesReader\" class=\"org.syncope.console.commons.XMLRolesReader\">\n-        <constructor-arg value=\"authorizations.xml\"/>\n-    </bean>\n </beans>"},{"sha":"4adfc6bae3881bed5210577f54ce3a5b601e5eca","filename":"console/src/main/resources/logback.xml","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fresources%2Flogback.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fresources%2Flogback.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Flogback.xml?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -47,6 +47,25 @@\n         <appender-ref ref=\"test\"/>\n     </logger>\n \n+    <logger name=\"org.apache.wicket\" additivity=\"false\">\n+        <level value=\"INFO\"/>\n+        <appender-ref ref=\"main\"/>\n+    </logger>\n+\n+    <logger name=\"org.springframework\" additivity=\"false\">\n+        <level value=\"INFO\"/>\n+        <appender-ref ref=\"main\"/>\n+    </logger>\n+\n+    <logger name=\"org.apache.commons.httpclient\" additivity=\"false\">\n+        <level value=\"INFO\"/>\n+        <appender-ref ref=\"test\"/>\n+    </logger>\n+    <logger name=\"httpclient\" additivity=\"false\">\n+        <level value=\"INFO\"/>\n+        <appender-ref ref=\"test\"/>\n+    </logger>\n+    \n     <root>\n         <priority value=\"INFO\"/>\n         <appender-ref ref=\"main\"/>"},{"sha":"8b2a9ea0d5243f581bcf26de9a1d25e883adf02e","filename":"console/src/main/resources/org/syncope/console/pages/BasePage.html","status":"modified","additions":86,"deletions":26,"changes":112,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FBasePage.html?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -1,3 +1,4 @@\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n <!--\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n@@ -12,29 +13,88 @@\n  limitations under the License.\n  under the License.\n -->\n-<wicket:head>\n-    <style type=\"text/css\">\n-    /* WICKET DATATABLE HEADERS */\n-    .headers {\n-       border: 1px solid #aaaaaa;\n-       background: #cccccc url(css/images/ui-bg_highlight-soft_75_cccccc_1x100.png)\n-           50% 50% repeat-x;\n-    }\n-\n-    em {\n-        font-size: inherit;\n-        color: gray;\n-    }\n-\n-    em img {\n-        opacity:0.4;\n-        filter:alpha(opacity=40);\n-    }\n-    </style>\n-</wicket:head>\n-\n-<wicket:extend>\n-    \n-    <wicket:child />\n-    \n-</wicket:extend>\n\\ No newline at end of file\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"it\" xml:lang=\"it\">\n+    <head>\n+        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n+        <meta http-equiv=\"Content-Style-Type\" content=\"text/css\"/>\n+        <meta http-equiv=\"Content-Script-Type\" content=\"text/javascript\"/>\n+\n+        <title>Syncope</title>\n+\n+        <link rel=\"shortcut icon\" type=\"image/png\" href=\"img/favicon.png\" />\n+\n+        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.button.css\" />\n+        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.core.css\" />\n+        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.dialog.css\" />\n+        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.resizable.css\" />\n+        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.tabs.css\" />\n+        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.theme.css\" />\n+        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/ui.tabs.css\" media=\"all\"/>\n+        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/stile_sy.css\" media=\"all\"/>\n+\n+        <script type=\"text/javascript\" src=\"scripts/jquery-1.4.2.min.js\"></script>\n+        <script type=\"text/javascript\" src=\"scripts/jquery-ui-1.8.5.custom.min.js\"></script>\n+\n+        <script type=\"text/javascript\">\n+            $(document).ready(function() {\n+                $(\"#tabs\").tabs();\n+            });\n+\n+            /** Add rollover effect to tables supporting Ajax events (live)*/\n+            $('table.ui-widget.ui-widget-content.table-hover tbody tr')\n+            .live('mouseover mouseout', function(event) {\n+                if (event.type == 'mouseover') {\n+                    $(this).addClass('selectedRow');\n+                } else if (event.type == 'mouseout') {\n+                    $(this).removeClass('selectedRow');\n+                }\n+            });\n+        </script>\n+\n+        <style type=\"text/css\">\n+            .feedbackPanelERROR {\n+                color: black;\n+                font-weight: bold;\n+                margin: 0px;\n+                list-style-type: none;\n+                background:url(\"css/images/ui-bg_highlight-soft_75_cccccc_1x100_red.png\") repeat-x scroll 50% 50% #CCCCCC;\n+                -moz-border-radius: 3px;\n+                -webkit-border-radius: 3px;\n+                border: 1px solid gray;\n+                border-radius: 3px;\n+                padding: 5px;\n+            }\n+\n+            .feedbackPanelERROR span {\n+                background: url(\"css/images/warning.png\") no-repeat left;\n+                border:0 none;\n+                font-size:12px;\n+                padding-left: 24px;\n+            }\n+\n+            .selectedRow {\n+                background-color: #eef1f1; /* alternative: LemonChiffon */\n+            }\n+\n+            /* WICKET DATATABLE HEADERS */\n+            .headers {\n+                border: 1px solid #aaaaaa;\n+                background: #cccccc url(css/images/ui-bg_highlight-soft_75_cccccc_1x100.png)\n+                    50% 50% repeat-x;\n+            }\n+\n+            em {\n+                font-size: inherit;\n+                color: gray;\n+            }\n+\n+            em img {\n+                opacity:0.4;\n+                filter:alpha(opacity=40);\n+            }\n+        </style>\n+    </head>\n+    <body>\n+        <wicket:child />\n+    </body>\n+</html>\n\\ No newline at end of file"},{"sha":"31f56753884e5a5dbf39383ef5f4797b9df4dd43","filename":"console/src/main/resources/org/syncope/console/pages/CustomizableBasePage.html","status":"removed","additions":0,"deletions":83,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FCustomizableBasePage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ce711379cde24edf004fd82a87556d569786a654/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FCustomizableBasePage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FCustomizableBasePage.html?ref=ce711379cde24edf004fd82a87556d569786a654","patch":"@@ -1,83 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-<!--\n- Licensed under the Apache License, Version 2.0 (the \"License\");\n- you may not use this file except in compliance with the License.\n- You may obtain a copy of the License at\n-\n-      http://www.apache.org/licenses/LICENSE-2.0\n-\n- Unless required by applicable law or agreed to in writing, software\n- distributed under the License is distributed on an \"AS IS\" BASIS,\n- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- See the License for the specific language governing permissions and\n- limitations under the License.\n- under the License.\n--->\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"it\" xml:lang=\"it\">\n-    <head>\n-        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n-        <meta http-equiv=\"Content-Style-Type\" content=\"text/css\"/>\n-        <meta http-equiv=\"Content-Script-Type\" content=\"text/javascript\"/>\n-\n-        <title>Syncope</title>\n-\n-        <link rel=\"shortcut icon\" type=\"image/png\" href=\"img/favicon.png\" />\n-\n-        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.button.css\" />\n-        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.core.css\" />\n-        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.dialog.css\" />\n-        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.resizable.css\" />\n-        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.tabs.css\" />\n-        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery.ui.theme.css\" />\n-        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/ui.tabs.css\" media=\"all\"/>\n-        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/stile_sy.css\" media=\"all\"/>\n-\n-        <script type=\"text/javascript\" src=\"scripts/jquery-1.4.2.min.js\"></script>\n-        <script type=\"text/javascript\" src=\"scripts/jquery-ui-1.8.5.custom.min.js\"></script>\n-\n-        <script type=\"text/javascript\">\n-            $(document).ready(function() {\n-                $(\"#tabs\").tabs();\n-            });\n-            \n-            /** Add rollover effect to tables supporting Ajax events (live)*/\n-            $('table.ui-widget.ui-widget-content.table-hover tbody tr')\n-            .live('mouseover mouseout', function(event) {\n-              if (event.type == 'mouseover') {\n-                $(this).addClass('selectedRow');\n-              } else if (event.type == 'mouseout') {\n-                 $(this).removeClass('selectedRow');\n-              }\n-            });\n-        </script>\n-\n-        <style type=\"text/css\">\n-            .feedbackPanelERROR {\n-                color: black;\n-                font-weight: bold;\n-                margin: 0px;\n-                list-style-type: none;\n-                background:url(\"css/images/ui-bg_highlight-soft_75_cccccc_1x100_red.png\") repeat-x scroll 50% 50% #CCCCCC;\n-                -moz-border-radius: 3px;\n-                -webkit-border-radius: 3px;\n-                border: 1px solid gray;\n-                border-radius: 3px;\n-                padding: 5px;\n-            }\n-\n-            .feedbackPanelERROR span {\n-                background: url(\"css/images/warning.png\") no-repeat left;\n-                border:0 none;\n-                font-size:12px;\n-                padding-left: 24px;\n-            }\n-\n-            .selectedRow {\n-                  background-color: #eef1f1; /* alternative: LemonChiffon */\n-            }\n-        </style>\n-    </head>\n-    <body>\n-        <wicket:child />\n-    </body>\n-</html>\n\\ No newline at end of file"},{"sha":"f8cecbf1531b161222b19b60ff41490f7c33b740","filename":"console/src/main/resources/org/syncope/console/pages/UserModalPage.html","status":"modified","additions":89,"deletions":90,"changes":179,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fsyncope%2Fconsole%2Fpages%2FUserModalPage.html?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -42,110 +42,109 @@\n \n <wicket:extend>\n     <div style=\"margin:10px\" title=\"Create new User\">\n-    <p class=\"ui-widget ui-corner-all ui-widget-header\">\n+        <p class=\"ui-widget ui-corner-all ui-widget-header\">\n         <wicket:message key=\"title\"/>\n-    </p>\n+        </p>\n \n-    <form wicket:id=\"UserForm\">\n-        <div wicket:id=\"feedback\" style=\"color:red\"/>\n-        <div id=\"tabs\">\n-            <ul>\n-                <li  class=\"tabs-selected\"><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n-                <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n-                <li><a href=\"#tabs-4\"><span><wicket:message key=\"tab4\"/></span></a></li>\n-            </ul>\n-            <div id=\"tabs-1\">\n-                <table class=\"stripedTable\" style=\"font-size:1.1em;border:none\" wicket:id=\"container\" width=\"100%\">\n-                    <tr wicket:id=\"userSchemas\">\n-                        <td><span wicket:id=\"name\"/></td>\n-                        <td>\n-                            <span wicket:id=\"fields\">\n-                                <span wicket:id=\"panel\">\n-                                    [panel for dynamic input type markup]\n+        <form wicket:id=\"UserForm\">\n+            <div wicket:id=\"feedback\" style=\"color:red\"/>\n+            <div id=\"tabs\">\n+                <ul>\n+                    <li  class=\"tabs-selected\"><a href=\"#tabs-1\"><span><wicket:message key=\"tab1\"/></span></a></li>\n+                    <li><a href=\"#tabs-3\"><span><wicket:message key=\"tab3\"/></span></a></li>\n+                    <li><a href=\"#tabs-4\"><span><wicket:message key=\"tab4\"/></span></a></li>\n+                </ul>\n+                <div id=\"tabs-1\">\n+                    <table class=\"stripedTable\" style=\"font-size:1.1em;border:none\" wicket:id=\"container\" width=\"100%\">\n+                        <tr wicket:id=\"userSchemas\">\n+                            <td><span wicket:id=\"name\"/></td>\n+                            <td>\n+                                <span wicket:id=\"fields\">\n+                                    <span wicket:id=\"panel\">\n+                                        [panel for dynamic input type markup]\n+                                    </span>\n                                 </span>\n-                            </span>\n-                            <input type=\"button\" wicket:id=\"add\"/>\n-                            <input type=\"button\" wicket:id=\"drop\"/>\n-                        </td>\n-                    </tr>\n-                    <tr>\n-                        <td>\n-                            <wicket:message key=\"password\"/>\n+                                <input type=\"button\" wicket:id=\"add\"/>\n+                                <input type=\"button\" wicket:id=\"drop\"/>\n+                            </td>\n+                        </tr>\n+                        <tr>\n+                            <td>\n+                        <wicket:message key=\"password\"/>\n                         </td>\n                         <td>\n                             <input type=\"password\" class=\"text ui-widget-content ui-corner-all\" size=\"40px\" style=\"margin-bottom:10px;padding:.4em;\" wicket:id=\"password\"/>\n-                            <span>*\n-                            </span>\n+                            <span wicket:id=\"mandatory_pwd\">*</span>\n                         </td>\n-                    </tr>\n-                    <!-- each time this table is rendered, stripe rows' color -->\n-                    <script type=\"text/javascript\">\n-                        $(function() {\n-                            $('.stripedTable tr:even').addClass(\"alt\");\n-                        });\n-                    </script>\n-                </table>\n-            </div>\n+                        </tr>\n+                        <!-- each time this table is rendered, stripe rows' color -->\n+                        <script type=\"text/javascript\">\n+                            $(function() {\n+                                $('.stripedTable tr:even').addClass(\"alt\");\n+                            });\n+                        </script>\n+                    </table>\n+                </div>\n \n-            <div id=\"tabs-3\">\n+                <div id=\"tabs-3\">\n \n-                <span wicket:id=\"resourcesPalette\"/>\n+                    <span wicket:id=\"resourcesPalette\"/>\n \n-            </div>\n-            <div id=\"tabs-4\">\n-                <p class=\"ui-widget ui-corner-all ui-widget-header\">\n+                </div>\n+                <div id=\"tabs-4\">\n+                    <p class=\"ui-widget ui-corner-all ui-widget-header\">\n                     <wicket:message key=\"membership_availability\"/>\n-                </p>\n+                    </p>\n+\n+                    <div wicket:id=\"treeTable\"\n+                         style=\"width: 100%;display:block;margin:auto;\"\n+                         class=\"role-tree\"/>\n \n-                <div wicket:id=\"treeTable\"\n-                     style=\"width: 100%;display:block;margin:auto;\"\n-                     class=\"role-tree\"/>\n-                \n-                 <p class=\"ui-widget ui-corner-all ui-widget-header\">\n+                    <p class=\"ui-widget ui-corner-all ui-widget-header\">\n                     <wicket:message key=\"membership_text\"/>\n-                </p>\n-                \n-                <table id=\"users\" class=\"roleTable\"\n-                       style=\"font-size:1.1em\" wicket:id=\"membershipsContainer\"\n-                        cellpadding=\"5px\" cellspacing=\"2px\">\n-                   <thead>\n-                        <tr class=\"ui-widget-header\">\n-                            <th><wicket:message key=\"id\"/></th>\n-                            <th><wicket:message key=\"name\"/></th>\n-                            <th><wicket:message key=\"edit\"/></th>\n-                            <th><wicket:message key=\"delete\"/></th>\n-                        </tr>\n-                    </thead>\n-                    <tbody>\n-                        <tr wicket:id=\"memberships\">\n-                            <td>\n-                                <span wicket:id=\"roleId\"/>\n-                            </td>\n-                            <td>\n-                                <span wicket:id=\"roleName\"/>\n-                            </td>\n-                             <td>\n-                                <a href=\"#\" wicket:id=\"editLink\">\n-                                    <wicket:message key=\"edit\"/>\n-                                </a>\n-                            </td>\n-                            <td>\n-                                <a href=\"#\" wicket:id=\"deleteLink\">\n-                                    <wicket:message key=\"delete\"/>\n-                                </a>\n-                            </td>\n+                    </p>\n+\n+                    <table id=\"users\" class=\"roleTable\"\n+                           style=\"font-size:1.1em\" wicket:id=\"membershipsContainer\"\n+                           cellpadding=\"5px\" cellspacing=\"2px\">\n+                        <thead>\n+                            <tr class=\"ui-widget-header\">\n+                                <th><wicket:message key=\"id\"/></th>\n+                        <th><wicket:message key=\"name\"/></th>\n+                        <th><wicket:message key=\"edit\"/></th>\n+                        <th><wicket:message key=\"delete\"/></th>\n                         </tr>\n-                    </tbody>\n-                </table>\n+                        </thead>\n+                        <tbody>\n+                            <tr wicket:id=\"memberships\">\n+                                <td>\n+                                    <span wicket:id=\"roleId\"/>\n+                                </td>\n+                                <td>\n+                                    <span wicket:id=\"roleName\"/>\n+                                </td>\n+                                <td>\n+                                    <a href=\"#\" wicket:id=\"editLink\">\n+                                        <wicket:message key=\"edit\"/>\n+                                    </a>\n+                                </td>\n+                                <td>\n+                                    <a href=\"#\" wicket:id=\"deleteLink\">\n+                                        <wicket:message key=\"delete\"/>\n+                                    </a>\n+                                </td>\n+                            </tr>\n+                        </tbody>\n+                    </table>\n+                </div>\n+            </div>\n+            <div>\n+                &nbsp;\n+            </div>\n+            <div style=\"bottom:0\">\n+                <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"submit\"/>\n             </div>\n-        </div>\n-        <div>\n-            &nbsp;\n-        </div>\n-        <div style=\"bottom:0\">\n-            <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"submit\"/>\n-        </div>\n-    </form>\n-    <div wicket:id=\"membershipWin\"/>\n+        </form>\n+        <div wicket:id=\"membershipWin\"/>\n     </div>\n </wicket:extend>\n\\ No newline at end of file"},{"sha":"8a7dc3c3a109c128183039b704fa921213d54bfd","filename":"console/src/main/webapp/WEB-INF/web.xml","status":"modified","additions":28,"deletions":35,"changes":63,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/console%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fwebapp%2FWEB-INF%2Fweb.xml?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -18,50 +18,43 @@\n         http://java.sun.com/xml/ns/javaee/web-app_2_4.xsd\">\n \n     <display-name>Syncope console</display-name>\n-    <servlet>\n-        <servlet-name>SyncopeApplication</servlet-name>\n-        <servlet-class>\n-            org.apache.wicket.protocol.http.WicketServlet\n-        </servlet-class>\n-        <init-param>\n-            <param-name>applicationFactoryClassName</param-name>\n-            <param-value>\n-                org.apache.wicket.spring.SpringWebApplicationFactory\n-            </param-value>\n-        </init-param>\n-        <load-on-startup>1</load-on-startup>\n-    </servlet>\n-\n-    <servlet-mapping>\n-        <servlet-name>SyncopeApplication</servlet-name>\n-        <url-pattern>/*</url-pattern>\n-    </servlet-mapping>\n-\n-    <!-- SESSION TIMEOUT (MINUTES)-->\n-    <session-config>\n-        <session-timeout>30</session-timeout>\n-    </session-config>\n \n     <context-param>\n-        <param-name>contextConfigLocation</param-name>\n-        <param-value>/WEB-INF/classes/applicationContext.xml\n-        </param-value>\n+        <param-name>configuration</param-name>\n+        <param-value>development</param-value>\n     </context-param>\n \n     <context-param>\n-        <param-name>configuration</param-name>\n-        <param-value>development</param-value>\n+        <param-name>contextConfigLocation</param-name>\n+        <param-value>classpath:applicationContext.xml</param-value>\n     </context-param>\n \n     <listener>\n-        <listener-class>\n-            org.springframework.web.context.ContextLoaderListener\n-        </listener-class>\n+        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n     </listener>\n-\n     <listener>\n-        <listener-class>\n-                org.springframework.web.context.request.RequestContextListener\n-        </listener-class>\n+        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>\n     </listener>\n+\n+    <filter>\n+        <filter-name>SyncopeConsole</filter-name>\n+        <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>\n+        <init-param>\n+            <param-name>applicationFactoryClassName</param-name>\n+            <param-value>org.apache.wicket.spring.SpringWebApplicationFactory</param-value>\n+        </init-param>\n+    </filter>\n+    \n+    <filter-mapping>\n+        <filter-name>SyncopeConsole</filter-name>\n+        <url-pattern>/*</url-pattern>\n+        <dispatcher>REQUEST</dispatcher>\n+        <dispatcher>INCLUDE</dispatcher>\n+    </filter-mapping>\n+\n+    <!-- SESSION TIMEOUT (MINUTES)-->\n+    <session-config>\n+        <session-timeout>30</session-timeout>\n+    </session-config>\n+\n </web-app>"},{"sha":"9b0607a609d1b6a45cc1d8bb5deb235afbf3db2d","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=b0b6396c93c6a0972493f1f998ac6aaf7ee6b77a","patch":"@@ -115,7 +115,7 @@\n         <hibernate-validator.version>4.0.2.GA</hibernate-validator.version>\n         <ehcache.version>2.3.0</ehcache.version>\n \n-        <wicket.version>1.4.14</wicket.version>\n+        <wicket.version>1.4.15</wicket.version>\n \n         <org.apache.cxf.version>2.2.9</org.apache.cxf.version>\n "}]}