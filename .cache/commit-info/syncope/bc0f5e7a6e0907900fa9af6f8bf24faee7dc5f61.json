{"sha":"bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmJjMGY1ZTdhNmUwOTA3OTAwZmE5YWY2ZjhiZjI0ZmFlZTdkYzVmNjE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-01-03T17:34:01Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-01-03T17:34:01Z"},"message":"[SYNCOPE-260] Merge from 1_0_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1428498 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"06084f1640283edb4950db62353d62dfd905a8e5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/06084f1640283edb4950db62353d62dfd905a8e5"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"21be94b13abdcafd52388788283e01a2f82ecd88","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/21be94b13abdcafd52388788283e01a2f82ecd88","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/21be94b13abdcafd52388788283e01a2f82ecd88"}],"stats":{"total":895,"additions":484,"deletions":411},"files":[{"sha":"4a06e4771c662869476a7add80311077c8bceb63","filename":"console/src/main/java/org/apache/syncope/console/commons/PreferenceManager.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FPreferenceManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FPreferenceManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fcommons%2FPreferenceManager.java?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -148,7 +148,7 @@ public void set(final Request request, final Response response, final Map<String\n         try {\n             cookieUtils.save(PREFMAN_KEY, new String(Base64.encodeBase64(setPrefs(current).getBytes())));\n         } catch (IOException e) {\n-            LOG.error(\"Could not save {} info: {}\", new Object[]{getClass().getSimpleName(), current, e});\n+            LOG.error(\"Could not save {} info: {}\", getClass().getSimpleName(), current, e);\n         }\n     }\n \n@@ -166,7 +166,7 @@ public void set(final Request request, final Response response, final String key\n         try {\n             cookieUtils.save(PREFMAN_KEY, new String(Base64.encodeBase64(setPrefs(current).getBytes())));\n         } catch (IOException e) {\n-            LOG.error(\"Could not save {} info: {}\", new Object[]{getClass().getSimpleName(), current, e});\n+            LOG.error(\"Could not save {} info: {}\", getClass().getSimpleName(), current, e);\n         }\n     }\n "},{"sha":"71b029b31c0910dcad4e8d0f6216b42e92c68acf","filename":"console/src/main/java/org/apache/syncope/console/pages/ReportletConfModalPage.java","status":"modified","additions":10,"deletions":3,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FReportletConfModalPage.java?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -113,6 +113,7 @@ public ReportletConfModalPage(final ReportletConf reportletConf, final ModalWind\n \n         final AjaxDropDownChoicePanel<String> reportletClass = new AjaxDropDownChoicePanel<String>(\"reportletClass\",\n                 \"reportletClass\", new IModel<String>() {\n+\n             private static final long serialVersionUID = -2316468110411802130L;\n \n             @Override\n@@ -142,6 +143,7 @@ public void detach() {\n         ((DropDownChoice) reportletClass.getField()).setNullValid(true);\n         reportletClass.addRequiredLabel();\n         reportletClass.getField().add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n             private static final long serialVersionUID = 5538299138211283825L;\n \n             @Override\n@@ -156,6 +158,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         propertiesContainer.add(buildPropView());\n \n         final AjaxButton submit = new AjaxButton(\"apply\", new ResourceModel(\"apply\")) {\n+\n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n@@ -189,6 +192,7 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n         form.add(submit);\n \n         final IndicatingAjaxButton cancel = new IndicatingAjaxButton(\"cancel\", new ResourceModel(\"cancel\")) {\n+\n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n@@ -231,6 +235,7 @@ private FieldPanel buildSinglePanel(final Class<?> type, final String fieldName,\n \n     private ListView<String> buildPropView() {\n         LoadableDetachableModel<List<String>> propViewModel = new LoadableDetachableModel<List<String>>() {\n+\n             private static final long serialVersionUID = 5275935387613157437L;\n \n             @Override\n@@ -249,6 +254,7 @@ protected List<String> load() {\n         };\n \n         propView = new ListView<String>(\"propView\", propViewModel) {\n+\n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n@@ -262,8 +268,8 @@ protected void populateItem(final ListItem<String> item) {\n                 try {\n                     field = ReportletConfModalPage.this.reportletConf.getClass().getDeclaredField(fieldName);\n                 } catch (Exception e) {\n-                    LOG.error(\"Could not find field {} in class {}\", new Object[]{fieldName,\n-                                ReportletConfModalPage.this.reportletConf.getClass(), e});\n+                    LOG.error(\"Could not find field {} in class {}\", fieldName,\n+                            ReportletConfModalPage.this.reportletConf.getClass(), e);\n                 }\n                 if (field == null) {\n                     return;\n@@ -285,7 +291,8 @@ protected void populateItem(final ListItem<String> item) {\n \n                     Class<?> listItemType = String.class;\n                     if (field.getGenericType() instanceof ParameterizedType) {\n-                        listItemType = (Class<?>) ((ParameterizedType) field.getGenericType()).getActualTypeArguments()[0];\n+                        listItemType =\n+                                (Class<?>) ((ParameterizedType) field.getGenericType()).getActualTypeArguments()[0];\n                     }\n \n                     FormAttributeField annotation = field.getAnnotation(FormAttributeField.class);"},{"sha":"9b4af5e3e0673efd123436a89e4e71842ab9c337","filename":"console/src/main/java/org/apache/syncope/console/pages/ResourceModalPage.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.java?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -26,6 +26,7 @@\n import org.apache.syncope.console.pages.panels.ResourceMappingPanel;\n import org.apache.syncope.console.pages.panels.ResourceSecurityPanel;\n import org.apache.syncope.console.rest.ResourceRestClient;\n+import org.apache.syncope.types.AttributableType;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n@@ -63,9 +64,10 @@ public ResourceModalPage(final PageReference pageref, final ModalWindow window,\n         //--------------------------------\n \n         //--------------------------------\n-        // Resource mapping panel\n+        // Resource mapping panels\n         //--------------------------------\n-        form.add(new ResourceMappingPanel(\"mapping\", resourceTO));\n+        form.add(new ResourceMappingPanel(\"umapping\", resourceTO, AttributableType.USER));\n+        form.add(new ResourceMappingPanel(\"rmapping\", resourceTO, AttributableType.ROLE));\n         //--------------------------------\n \n         //--------------------------------"},{"sha":"183ade18849177623986d1e930e3b932eabaf109","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/PoliciesPanel.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -22,7 +22,6 @@\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n-\n import org.apache.wicket.Page;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n@@ -185,8 +184,8 @@ public void onClick(final AjaxRequestTarget target) {\n                         } catch (SyncopeClientCompositeErrorException e) {\n                             error(getString(\"operation_error\"));\n \n-                            LOG.error(\"While deleting resource {}({})\", new Object[] { accountPolicyTO.getId(),\n-                                    accountPolicyTO.getDescription() }, e);\n+                            LOG.error(\"While deleting resource {}({})\", accountPolicyTO.getId(),\n+                                    accountPolicyTO.getDescription(), e);\n                         }\n \n                         target.add(container);\n@@ -293,7 +292,7 @@ public Iterator<PolicyTO> iterator(final long first, final long count) {\n \n             Collections.sort(policies, comparator);\n \n-            return policies.subList((int)first, (int)first + (int)count).iterator();\n+            return policies.subList((int) first, (int) first + (int) count).iterator();\n         }\n \n         @Override"},{"sha":"4db545bc00b013c450d2fdc12589bee4cb98ac80","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourceMappingPanel.java","status":"modified","additions":91,"deletions":88,"changes":179,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.java?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -39,7 +39,10 @@\n import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.ConnConfProperty;\n import org.apache.syncope.types.IntMappingType;\n+import org.apache.wicket.Component;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.ajax.attributes.AjaxCallListener;\n+import org.apache.wicket.ajax.attributes.AjaxRequestAttributes;\n import org.apache.wicket.ajax.form.AjaxFormComponentUpdatingBehavior;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.event.IEvent;\n@@ -55,116 +58,133 @@\n import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.apache.wicket.Component;\n-import org.apache.wicket.ajax.attributes.AjaxCallListener;\n-import org.apache.wicket.ajax.attributes.AjaxRequestAttributes;\n \n /**\n  * Resource mapping panel.\n  */\n public class ResourceMappingPanel extends Panel {\n \n-    /**\n-     * Serial verion UID.\n-     */\n     private static final long serialVersionUID = -7982691107029848579L;\n \n     /**\n      * Logger.\n      */\n-    protected static final Logger LOG = LoggerFactory.getLogger(ResourceMappingPanel.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(ResourceMappingPanel.class);\n+\n+    /**\n+     * OnChange event name.\n+     */\n+    private static final String ON_CHANGE = \"onchange\";\n+\n+    /**\n+     * Mapping field style sheet.\n+     */\n+    private static final String FIELD_STYLE = \"ui-widget-content ui-corner-all short_fixedsize\";\n+\n+    /**\n+     * Mapping field style sheet.\n+     */\n+    private static final String DEF_FIELD_STYLE = \"ui-widget-content ui-corner-all\";\n+\n+    /**\n+     * Mapping field style sheet.\n+     */\n+    private static final String SHORT_FIELD_STYLE = \"ui-widget-content ui-corner-all veryshort_fixedsize\";\n \n     /**\n      * Schema rest client.\n      */\n     @SpringBean\n-    private transient SchemaRestClient schemaRestClient;\n+    private SchemaRestClient schemaRestClient;\n \n     /**\n      * ConnInstance rest client.\n      */\n     @SpringBean\n-    private transient ConnectorRestClient connRestClient;\n+    private ConnectorRestClient connRestClient;\n \n     /**\n      * Resource schema name.\n      */\n-    private transient List<String> schemaNames;\n+    private final List<String> schemaNames;\n \n     /**\n      * Internal attribute types.\n      */\n-    private transient List<IntMappingType> attrTypes = new ArrayList<IntMappingType>();\n+    private final List<IntMappingType> attrTypes = new ArrayList<IntMappingType>();\n \n     /**\n      * Add mapping button.\n      */\n-    private final transient AjaxButton addMappingBtn;\n+    private final AjaxButton addMappingBtn;\n \n     /**\n      * All mappings.\n      */\n-    private final transient ListView mappings;\n+    private final ListView mappings;\n \n     /**\n      * External resource to be updated.\n      */\n-    private final transient ResourceTO resourceTO;\n+    private final ResourceTO resourceTO;\n+\n+    private final AttributableType attrType;\n \n     /**\n      * Mapping container.\n      */\n-    private final transient WebMarkupContainer mappingContainer;\n+    private final WebMarkupContainer mappingContainer;\n \n     /**\n      * AccountLink container.\n      */\n-    private final transient WebMarkupContainer accountLinkContainer;\n+    private final WebMarkupContainer accountLinkContainer;\n \n-    /**\n-     * OnChange event name.\n-     */\n-    private static String onchange = \"onchange\";\n-\n-    /**\n-     * Mapping field style sheet.\n-     */\n-    private static String fieldStyle = \"ui-widget-content ui-corner-all short_fixedsize\";\n+    private MappingTO getMapping() {\n+        MappingTO result = null;\n \n-    /**\n-     * Mapping field style sheet.\n-     */\n-    private static String defFieldStyle = \"ui-widget-content ui-corner-all\";\n+        if (AttributableType.USER == attrType) {\n+            if (this.resourceTO.getUmapping() == null) {\n+                this.resourceTO.setUmapping(new MappingTO());\n+            }\n+            result = this.resourceTO.getUmapping();\n+        }\n+        if (AttributableType.ROLE == attrType) {\n+            if (this.resourceTO.getRmapping() == null) {\n+                this.resourceTO.setRmapping(new MappingTO());\n+            }\n+            result = this.resourceTO.getRmapping();\n+        }\n \n-    /**\n-     * Mapping field style sheet.\n-     */\n-    private static String shortFieldStyle = \"ui-widget-content ui-corner-all veryshort_fixedsize\";\n+        return result;\n+    }\n \n     /**\n      * Attribute Mapping Panel.\n      *\n      * @param panelid panel id.\n      * @param resourceTO external resource.\n      */\n-    public ResourceMappingPanel(final String panelid, final ResourceTO resourceTO) {\n-\n+    public ResourceMappingPanel(final String panelid, final ResourceTO resourceTO, final AttributableType attrType) {\n         super(panelid);\n         setOutputMarkupId(true);\n \n         this.resourceTO = resourceTO;\n-        if (resourceTO.getUmapping() == null) {\n-            resourceTO.setUmapping(new MappingTO());\n-        }\n+        this.attrType = attrType;\n \n-        initResourceSchemaNames();\n+        if (this.resourceTO.getConnectorId() != null && this.resourceTO.getConnectorId() > 0) {\n+            schemaNames =\n+                    getResourceSchemaNames(this.resourceTO.getConnectorId(), this.resourceTO.getConnConfProperties());\n+        } else {\n+            schemaNames = Collections.<String>emptyList();\n+        }\n \n         accountLinkContainer = new WebMarkupContainer(\"accountLinkContainer\");\n         accountLinkContainer.setOutputMarkupId(true);\n         add(accountLinkContainer);\n \n         boolean accountLinkEnabled = false;\n-        if (resourceTO.getUmapping().getAccountLink() != null) {\n+        if (getMapping().getAccountLink() != null) {\n             accountLinkEnabled = true;\n         }\n         final AjaxCheckBoxPanel accountLinkCheckbox = new AjaxCheckBoxPanel(\"accountLinkCheckbox\",\n@@ -175,7 +195,7 @@ public ResourceMappingPanel(final String panelid, final ResourceTO resourceTO) {\n         accountLinkContainer.add(accountLinkCheckbox);\n \n         final AjaxTextFieldPanel accountLink = new AjaxTextFieldPanel(\"accountLink\", new ResourceModel(\"accountLink\",\n-                \"accountLink\").getObject(), new PropertyModel<String>(resourceTO.getUmapping(), \"accountLink\"));\n+                \"accountLink\").getObject(), new PropertyModel<String>(getMapping(), \"accountLink\"));\n         accountLink.setEnabled(accountLinkEnabled);\n \n         accountLinkContainer.add(accountLink);\n@@ -203,26 +223,21 @@ protected void onUpdate(final AjaxRequestTarget target) {\n         mappingContainer.setOutputMarkupId(true);\n         add(mappingContainer);\n \n-        mappings = new ListView<MappingItemTO>(\"mappings\", resourceTO.getUmapping().getItems()) {\n+        mappings = new ListView<MappingItemTO>(\"mappings\", getMapping().getItems()) {\n \n-            /**\n-             * Serial version UID.\n-             */\n             private static final long serialVersionUID = 4949588177564901031L;\n \n             @Override\n             protected void populateItem(final ListItem<MappingItemTO> item) {\n \n                 final MappingItemTO mapItem = item.getModelObject();\n \n-                final AttributableType entity;\n+                AttributableType entity = null;\n                 if (mapItem.getIntMappingType() != null) {\n                     entity = mapItem.getIntMappingType().getAttributableType();\n-                } else {\n-                    entity = null;\n                 }\n-\n-                attrTypes = getAttributeTypes(entity);\n+                attrTypes.clear();\n+                attrTypes.addAll(getAttributeTypes(entity));\n \n                 item.add(new AjaxDecoratedCheckbox(\"toRemove\", new Model<Boolean>(Boolean.FALSE)) {\n \n@@ -231,25 +246,25 @@ protected void populateItem(final ListItem<MappingItemTO> item) {\n                     @Override\n                     protected void onUpdate(final AjaxRequestTarget target) {\n                         int index = -1;\n-                        for (int i = 0; i < resourceTO.getUmapping().getItems().size() && index == -1; i++) {\n-                            if (mapItem.equals(resourceTO.getUmapping().getItems().get(i))) {\n+                        for (int i = 0; i < getMapping().getItems().size() && index == -1; i++) {\n+                            if (mapItem.equals(getMapping().getItems().get(i))) {\n                                 index = i;\n                             }\n                         }\n \n                         if (index != -1) {\n-                            resourceTO.getUmapping().getItems().remove(index);\n+                            getMapping().getItems().remove(index);\n                             item.getParent().removeAll();\n                             target.add(mappingContainer);\n                         }\n                     }\n \n                     @Override\n-                    protected void updateAjaxAttributes(AjaxRequestAttributes attributes) {\n+                    protected void updateAjaxAttributes(final AjaxRequestAttributes attributes) {\n                         super.updateAjaxAttributes(attributes);\n \n                         final AjaxCallListener ajaxCallListener = new AjaxCallListener() {\n-                            \n+\n                             private static final long serialVersionUID = 7160235486520935153L;\n \n                             @Override\n@@ -265,7 +280,7 @@ public CharSequence getPrecondition(final Component component) {\n                         getString(\"intAttrNames\"), new PropertyModel<String>(mapItem, \"intAttrName\"));\n                 intAttrNames.setChoices(schemaNames);\n                 intAttrNames.setRequired(true);\n-                intAttrNames.setStyleSheet(fieldStyle);\n+                intAttrNames.setStyleSheet(FIELD_STYLE);\n                 item.add(intAttrNames);\n \n                 final AjaxDropDownChoicePanel<IntMappingType> typesPanel =\n@@ -277,25 +292,25 @@ public CharSequence getPrecondition(final Component component) {\n \n                 typesPanel.setRequired(true);\n                 typesPanel.setChoices(attrTypes);\n-                typesPanel.setStyleSheet(fieldStyle);\n+                typesPanel.setStyleSheet(FIELD_STYLE);\n                 item.add(typesPanel);\n \n                 final AjaxDropDownChoicePanel mappingTypesPanel = new AjaxDropDownChoicePanel(\"mappingTypes\",\n                         new ResourceModel(\"mappingTypes\", \"mappingTypes\").getObject(), new Model(entity));\n \n                 mappingTypesPanel.setChoices(Arrays.asList(AttributableType.values()));\n-                mappingTypesPanel.setStyleSheet(defFieldStyle);\n+                mappingTypesPanel.setStyleSheet(DEF_FIELD_STYLE);\n \n                 item.add(mappingTypesPanel);\n \n-                mappingTypesPanel.getField().add(new AjaxFormComponentUpdatingBehavior(onchange) {\n+                mappingTypesPanel.getField().add(new AjaxFormComponentUpdatingBehavior(ON_CHANGE) {\n \n                     private static final long serialVersionUID = -1107858522700306810L;\n \n                     @Override\n                     protected void onUpdate(final AjaxRequestTarget target) {\n-\n-                        attrTypes = getAttributeTypes((AttributableType) mappingTypesPanel.getModelObject());\n+                        attrTypes.clear();\n+                        attrTypes.addAll(getAttributeTypes((AttributableType) mappingTypesPanel.getModelObject()));\n \n                         typesPanel.setChoices(attrTypes);\n                         List<String> emptyList = Collections.emptyList();\n@@ -308,11 +323,9 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 });\n \n                 final FieldPanel extAttrName;\n-\n                 if (schemaNames.isEmpty()) {\n                     extAttrName = new AjaxTextFieldPanel(\"extAttrName\", new ResourceModel(\"extAttrNames\",\n                             \"extAttrNames\").getObject(), new PropertyModel<String>(mapItem, \"extAttrName\"));\n-\n                 } else {\n                     extAttrName = new AjaxDropDownChoicePanel<String>(\"extAttrName\", new ResourceModel(\"extAttrNames\",\n                             \"extAttrNames\").getObject(), new PropertyModel(mapItem, \"extAttrName\"));\n@@ -324,11 +337,10 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                     required = true;\n                 }\n \n-\n                 extAttrName.setRequired(required);\n                 extAttrName.setEnabled(required);\n \n-                extAttrName.setStyleSheet(fieldStyle);\n+                extAttrName.setStyleSheet(FIELD_STYLE);\n                 item.add(extAttrName);\n \n                 final AjaxTextFieldPanel mandatory = new AjaxTextFieldPanel(\"mandatoryCondition\", new ResourceModel(\n@@ -337,14 +349,14 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n                 mandatory.setChoices(Arrays.asList(new String[]{\"true\", \"false\"}));\n \n-                mandatory.setStyleSheet(shortFieldStyle);\n+                mandatory.setStyleSheet(SHORT_FIELD_STYLE);\n \n                 item.add(mandatory);\n \n                 final AjaxCheckBoxPanel accountId = new AjaxCheckBoxPanel(\"accountId\", new ResourceModel(\"accountId\",\n                         \"accountId\").getObject(), new PropertyModel(mapItem, \"accountid\"));\n \n-                accountId.getField().add(new AjaxFormComponentUpdatingBehavior(onchange) {\n+                accountId.getField().add(new AjaxFormComponentUpdatingBehavior(ON_CHANGE) {\n \n                     private static final long serialVersionUID = -1107858522700306810L;\n \n@@ -362,7 +374,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 final AjaxCheckBoxPanel password = new AjaxCheckBoxPanel(\"password\", new ResourceModel(\"password\",\n                         \"password\").getObject(), new PropertyModel(mapItem, \"password\"));\n \n-                password.getField().add(new AjaxFormComponentUpdatingBehavior(onchange) {\n+                password.getField().add(new AjaxFormComponentUpdatingBehavior(ON_CHANGE) {\n \n                     private static final long serialVersionUID = -1107858522700306810L;\n \n@@ -379,8 +391,11 @@ protected void onUpdate(final AjaxRequestTarget target) {\n                 });\n \n                 item.add(password);\n+                if (AttributableType.USER != ResourceMappingPanel.this.attrType) {\n+                    password.setVisible(false);\n+                }\n \n-                typesPanel.getField().add(new AjaxFormComponentUpdatingBehavior(onchange) {\n+                typesPanel.getField().add(new AjaxFormComponentUpdatingBehavior(ON_CHANGE) {\n \n                     private static final long serialVersionUID = -1107858522700306810L;\n \n@@ -408,7 +423,7 @@ protected void onUpdate(final AjaxRequestTarget target) {\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                resourceTO.getUmapping().getItems().add(new MappingItemTO());\n+                getMapping().getItems().add(new MappingItemTO());\n                 target.add(mappingContainer);\n             }\n \n@@ -419,20 +434,8 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n         };\n \n         addMappingBtn.setDefaultFormProcessing(false);\n-        addMappingBtn.setEnabled(resourceTO.getConnectorId() != null && resourceTO.getConnectorId() > 0);\n+        addMappingBtn.setEnabled(this.resourceTO.getConnectorId() != null && this.resourceTO.getConnectorId() > 0);\n         mappingContainer.add(addMappingBtn);\n-\n-    }\n-\n-    /**\n-     * Initialize resource schema names.\n-     */\n-    private void initResourceSchemaNames() {\n-        if (resourceTO != null && resourceTO.getConnectorId() != null && resourceTO.getConnectorId() > 0) {\n-            schemaNames = getResourceSchemaNames(resourceTO.getConnectorId(), resourceTO.getConnConfProperties());\n-        } else {\n-            schemaNames = Collections.emptyList();\n-        }\n     }\n \n     /**\n@@ -446,13 +449,11 @@ private List<String> getResourceSchemaNames(final Long connectorId, final Set<Co\n         final List<String> names = new ArrayList<String>();\n \n         try {\n-\n             final ConnInstanceTO connInstanceTO = new ConnInstanceTO();\n             connInstanceTO.setId(connectorId);\n             connInstanceTO.setConfiguration(conf);\n \n             names.addAll(connRestClient.getSchemaNames(connInstanceTO));\n-\n         } catch (Exception e) {\n             LOG.warn(\"Error retrieving resource schema names\", e);\n         }\n@@ -462,9 +463,7 @@ private List<String> getResourceSchemaNames(final Long connectorId, final Set<Co\n \n     @Override\n     public void onEvent(final IEvent<?> event) {\n-\n         if (event.getPayload() instanceof ConnConfModEvent) {\n-\n             final AjaxRequestTarget target = ((ConnConfModEvent) event.getPayload()).getTarget();\n \n             final List<ConnConfProperty> conf = ((ConnConfModEvent) event.getPayload()).getConfiguration();\n@@ -473,7 +472,9 @@ public void onEvent(final IEvent<?> event) {\n \n             addMappingBtn.setEnabled(resourceTO.getConnectorId() != null && resourceTO.getConnectorId() > 0);\n \n-            schemaNames = getResourceSchemaNames(resourceTO.getConnectorId(), new HashSet<ConnConfProperty>(conf));\n+            schemaNames.clear();\n+            schemaNames.addAll(\n+                    getResourceSchemaNames(resourceTO.getConnectorId(), new HashSet<ConnConfProperty>(conf)));\n \n             target.add(mappingContainer);\n         }\n@@ -517,6 +518,8 @@ private void setAttrNames(final IntMappingType type, final AjaxDropDownChoicePan\n                 case UserId:\n                 case Password:\n                 case Username:\n+                case RoleId:\n+                case RoleName:\n                 default:\n                     toBeUpdated.setRequired(false);\n                     toBeUpdated.setEnabled(false);"},{"sha":"469d653649974621164ba880b0efeeabf33f8f45","filename":"console/src/main/resources/org/apache/syncope/console/pages/ResourceModalPage.html","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.html?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -49,21 +49,23 @@\n       <div id=\"tabs\">\n         <ul>\n           <li  class=\"tabs-selected\"><a href=\"#resource\"><span><wicket:message key=\"resource\"/></span></a></li>\n-          <li><a href=\"#mappings\"><span><wicket:message key=\"mappings\"/></span></a></li>\n+          <li><a href=\"#umapping\"><span><wicket:message key=\"umapping\"/></span></a></li>\n+          <li><a href=\"#rmapping\"><span><wicket:message key=\"rmapping\"/></span></a></li>\n           <li><a href=\"#connectorProperties\"><span><wicket:message key=\"connectorProperties\"/></span></a></li>\n           <li><a href=\"#security\"><span><wicket:message key=\"security\"/></span></a></li>\n         </ul>\n         <div id=\"resource\">\n           <span wicket:id=\"details\">[details]</span>\n         </div>\n-        <div id=\"mappings\">\n-          <span wicket:id=\"mapping\">[mapping]</span>\n+        <div id=\"umapping\">\n+          <span wicket:id=\"umapping\">[umapping]</span>\n+        </div>\n+        <div id=\"rmapping\">\n+          <span wicket:id=\"rmapping\">[rmapping]</span>\n         </div>\n-\n         <div id=\"connectorProperties\">\n           <span wicket:id=\"connconf\">[connconf]</span>\n         </div>\n-\n         <div id=\"security\">\n           <span wicket:id=\"security\">[security]</span>\n         </div>"},{"sha":"3045981b5cf9232d85c5972911e8150c16b1839a","filename":"console/src/main/resources/org/apache/syncope/console/pages/ResourceModalPage.properties","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage.properties?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -14,8 +14,8 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-resource=Resource Details\n-mappings=Schema Mappings\n+resource=Resource details\n+umapping=User mapping\n connectorProperties=Connector properties\n security=Security\n create_attribute=Create new resource\n@@ -25,7 +25,7 @@ existing_resources=Existing resources\n action=Action\n edit_attribute=Edit resource\n title=Resource\n-extAttrNames=External Attributes\n+extAttrNames=External attributes\n intMappingTypes=Internal mapping types\n entity=Entity\n roleSchema=Role Schema\n@@ -35,7 +35,7 @@ password=Password\n mappingUserSchema=Mapping User Schema\n mappingRoleSchema=Mapping Role Schema\n delete=Delete\n-intAttrNames=Internal Attributes\n+intAttrNames=Internal attributes\n enforceMandatoryCondition=Enforce mandatory condition\n fieldName=Field name\n \n@@ -50,9 +50,10 @@ deleteTraceLevel=Delete trace level\n syncTraceLevel=Synchronization trace level\n propagationPriority=Propagation priority\n propagationPrimary=Propagation primary\n-resetToken=Reset Token\n+resetToken=Reset token\n \n success_connection=Successful connection\n error_connection=Connection failure\n check=Check connection\n actionsClass=Actions class\n+rmapping=Role mapping"},{"sha":"7e0f1a59b8da66cadc8da7e849e687d1e4c275b1","filename":"console/src/main/resources/org/apache/syncope/console/pages/ResourceModalPage_it.properties","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResourceModalPage_it.properties?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -15,7 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n resource=Dettagli Risorsa\n-mappings=Schema Mapping\n+umapping=Mapping utenti\n connectorProperties=Propriet\\u00e0\\u00a0 Connettore\n security=Sicurezza\n \n@@ -51,9 +51,10 @@ deleteTraceLevel=Livello di tracciamento delle cancellazioni\n syncTraceLevel=Livello di tracciamento delle sincronizzazioni\n propagationPriority=Priorit\\u00e0 in propagazione\n propagationPrimary=Primaria in propagazione\n-resetToken=Reset Token\n+resetToken=Reset token\n \n success_connection=Connessione avvenuta con successo\n error_connection=Connessione non riuscita\n check=Verifica connessione\n actionsClass=Classe azioni\n+rmapping=Mapping ruoli"},{"sha":"4e545127b93f289985ef39656b77d6b3dc644fff","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/ResourceMappingPanel.html","status":"modified","additions":94,"deletions":96,"changes":190,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourceMappingPanel.html?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -16,101 +16,99 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<html>\n-    <wicket:panel>\n-        <div id=\"formtable\">\n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_field all_dynamicsize\">\n-                    <table id=\"mappingUserSchema\"\n-                           class=\"ui-widget ui-widget-content ui-corner-all\"\n-                           style=\"font-size: 1em;margin-top:2px;\"\n-                           width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\"\n-                           wicket:id=\"mappingContainer\">\n-                        <thead>\n-                            <tr class=\"ui-widget-header\">\n-                                <th><wicket:message key=\"delete\"/></th>\n-                        <th><wicket:message key=\"entity\"/></th>\n-                        <th><wicket:message key=\"intMappingTypes\"/></th>\n-                        <th><wicket:message key=\"intAttrNames\"/></th>\n-                        <th><wicket:message key=\"extAttrNames\"/></th>\n-                        <th><wicket:message key=\"mandatoryCondition\"/></th>\n-                        <th><wicket:message key=\"accountId\"/></th>\n-                        <th><wicket:message key=\"password\"/></th>\n-                        </tr>\n-                        </thead>\n-                        <tfoot>\n-                            <tr>\n-                                <td colspan=\"7\" style=\"padding: 5px\">\n-                                    <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n-                                           wicket:id=\"addUserSchemaMappingBtn\" />\n-                                </td>\n-                            </tr>\n-                        </tfoot>\n-                        <tbody>\n-                            <tr wicket:id=\"mappings\">\n-                                <td align=\"center\" valign=\"middle\">\n-                                    <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n-                                </td>\n-                                <td align=\"center\" valign=\"middle\">\n-                                    <span wicket:id=\"mappingTypes\">[mappingTypes]</span>\n-                                </td>\n-                                <td align=\"center\" valign=\"middle\">\n-                                    <span wicket:id=\"intMappingTypes\">[intMappingTypes]</span>\n-                                </td>\n-                                <td align=\"center\" valign=\"middle\">\n-                                    <span wicket:id=\"intAttrNames\">[intAttrNames]</span>\n-                                </td>\n-                                <td align=\"center\" valign=\"middle\">\n-                                    <span wicket:id=\"extAttrName\">[extAttrName]</span>\n-                                </td>\n-                                <td align=\"center\" valign=\"middle\">\n-                                    <span wicket:id=\"mandatoryCondition\">[mandatoryCondition]</span>\n-                                </td>\n-                                <td align=\"center\" valign=\"middle\">\n-                                    <span wicket:id=\"accountId\">[accountId]</span>\n-                                </td>\n-                                <td align=\"center\" valign=\"middle\">\n-                                    <span wicket:id=\"password\">[password]</span>\n-                                </td>\n-                            </tr>\n-                        </tbody>\n-                    </table>\n-                </div>\n-            </div>\n+<wicket:panel>\n+  <div id=\"formtable\">\n+    <div class=\"tablerow\">\n+      <div class=\"tablecolumn_field all_dynamicsize\">\n+        <table id=\"mappingUserSchema\"\n+               class=\"ui-widget ui-widget-content ui-corner-all\"\n+               style=\"font-size: 1em;margin-top:2px;\"\n+               width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\"\n+               wicket:id=\"mappingContainer\">\n+          <thead>\n+            <tr class=\"ui-widget-header\">\n+              <th><wicket:message key=\"delete\"/></th>\n+          <th><wicket:message key=\"entity\"/></th>\n+          <th><wicket:message key=\"intMappingTypes\"/></th>\n+          <th><wicket:message key=\"intAttrNames\"/></th>\n+          <th><wicket:message key=\"extAttrNames\"/></th>\n+          <th><wicket:message key=\"mandatoryCondition\"/></th>\n+          <th><wicket:message key=\"accountId\"/></th>\n+          <th><wicket:message key=\"password\"/></th>\n+          </tr>\n+          </thead>\n+          <tfoot>\n+            <tr>\n+              <td colspan=\"7\" style=\"padding: 5px\">\n+                <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"\n+                       wicket:id=\"addUserSchemaMappingBtn\" />\n+              </td>\n+            </tr>\n+          </tfoot>\n+          <tbody>\n+            <tr wicket:id=\"mappings\">\n+              <td align=\"center\" valign=\"middle\">\n+                <input type=\"checkbox\" class=\"text ui-widget-content ui-corner-all\"  wicket:id=\"toRemove\"/>\n+              </td>\n+              <td align=\"center\" valign=\"middle\">\n+                <span wicket:id=\"mappingTypes\">[mappingTypes]</span>\n+              </td>\n+              <td align=\"center\" valign=\"middle\">\n+                <span wicket:id=\"intMappingTypes\">[intMappingTypes]</span>\n+              </td>\n+              <td align=\"center\" valign=\"middle\">\n+                <span wicket:id=\"intAttrNames\">[intAttrNames]</span>\n+              </td>\n+              <td align=\"center\" valign=\"middle\">\n+                <span wicket:id=\"extAttrName\">[extAttrName]</span>\n+              </td>\n+              <td align=\"center\" valign=\"middle\">\n+                <span wicket:id=\"mandatoryCondition\">[mandatoryCondition]</span>\n+              </td>\n+              <td align=\"center\" valign=\"middle\">\n+                <span wicket:id=\"accountId\">[accountId]</span>\n+              </td>\n+              <td align=\"center\" valign=\"middle\">\n+                <span wicket:id=\"password\">[password]</span>\n+              </td>\n+            </tr>\n+          </tbody>\n+        </table>\n+      </div>\n+    </div>\n \n-            <div class=\"tablerow\">\n-                <div class=\"tablecolumn_field all_dynamicsize\">\n-                    <table id=\"accountLinkTable\"\n-                           class=\"ui-widget ui-widget-content ui-corner-all\"\n-                           style=\"font-size: 1em;margin-top:2px;\"\n-                           border-width=\"1px;\" border-color=\"#cccccc;\" border-style=\"solid;\"\n-                           width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\"\n-                           wicket:id=\"accountLinkContainer\">\n-                        <thead>\n-                            <tr class=\"ui-widget-header\">\n-                                <th width=\"10%\" align=\"left\"><wicket:message key=\"enable\"/></th>\n-                                <th align=\"left\"><wicket:message key=\"accountLink\"/></th>\n-                            </tr>\n-                        </thead>\n-                        <tbody>\n-                            <tr>\n-                                <td width=\"10%\" align=\"left\" valign=\"middle\">\n-                                    <span wicket:id=\"accountLinkCheckbox\">[accountLinkCheckbox]</span>\n-                                </td>\n-                                <td align=\"left\" valign=\"middle\">\n-                                    <span wicket:id=\"accountLink\">[accountLink]</span>\n-                                </td>\n-                            </tr>\n-                        </tbody>\n-                    </table>\n-                </div>\n-            </div>\n-        </div>\n+    <div class=\"tablerow\">\n+      <div class=\"tablecolumn_field all_dynamicsize\">\n+        <table id=\"accountLinkTable\"\n+               class=\"ui-widget ui-widget-content ui-corner-all\"\n+               style=\"font-size: 1em;margin-top:2px;\"\n+               border-width=\"1px;\" border-color=\"#cccccc;\" border-style=\"solid;\"\n+               width=\"100%\" cellpadding=\"2px\" cellspacing=\"1px\"\n+               wicket:id=\"accountLinkContainer\">\n+          <thead>\n+            <tr class=\"ui-widget-header\">\n+              <th width=\"10%\" align=\"left\"><wicket:message key=\"enable\"/></th>\n+          <th align=\"left\"><wicket:message key=\"accountLink\"/></th>\n+          </tr>\n+          </thead>\n+          <tbody>\n+            <tr>\n+              <td width=\"10%\" align=\"left\" valign=\"middle\">\n+                <span wicket:id=\"accountLinkCheckbox\">[accountLinkCheckbox]</span>\n+              </td>\n+              <td align=\"left\" valign=\"middle\">\n+                <span wicket:id=\"accountLink\">[accountLink]</span>\n+              </td>\n+            </tr>\n+          </tbody>\n+        </table>\n+      </div>\n+    </div>\n+  </div>\n \n-        <script type=\"text/javascript\">\n-            $(function() {\n-                $('div#mappings div#formtable div.tablerow:even').addClass(\"alt\");\n-            });\n-        </script>\n-    </wicket:panel>\n-</html>\n+  <script type=\"text/javascript\">\n+    $(function() {\n+      $('div#mappings div#formtable div.tablerow:even').addClass(\"alt\");\n+    });\n+  </script>\n+</wicket:panel>"},{"sha":"41c1083c640489b310ee6b7ef1b25beab709bf34","filename":"core/src/main/java/org/apache/syncope/core/init/ConnInstanceLoader.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FConnInstanceLoader.java?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -144,8 +144,7 @@ public void load() {\n                 LOG.info(\"Registering resource-connector pair {}-{}\", resource, resource.getConnector());\n                 registerConnector(resource);\n             } catch (Exception e) {\n-                LOG.error(\"While registering resource-connector pair {}-{}\", new Object[]{resource,\n-                            resource.getConnector(), e});\n+                LOG.error(\"While registering resource-connector pair {}-{}\", resource, resource.getConnector(), e);\n             }\n         }\n "},{"sha":"4643e7c626ba8f3642a09e89cf74de92c9a3e5eb","filename":"core/src/main/java/org/apache/syncope/core/init/JobInstanceLoader.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Finit%2FJobInstanceLoader.java?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -171,8 +171,8 @@ public void registerJob(final Task task, final String jobClassName, final String\n                 try {\n                     syncActionsClass = Class.forName(jobActionsClassName);\n                 } catch (Exception e) {\n-                    LOG.error(\"Class {} not found, reverting to {}\", new Object[]{jobActionsClassName,\n-                                syncActionsClass.getName(), e});\n+                    LOG.error(\"Class {} not found, reverting to {}\", jobActionsClassName,\n+                            syncActionsClass.getName(), e);\n                 }\n             }\n             SyncActions syncActions = (SyncActions) ApplicationContextProvider.getBeanFactory()."},{"sha":"6cfb9df731875eb4df21f66a0d51750690eeecb9","filename":"core/src/main/java/org/apache/syncope/core/notification/NotificationJob.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationJob.java?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -102,8 +102,7 @@ private void init() {\n         smtpUsername = confDAO.find(\"smtp.username\", \"\").getValue();\n         smtpPassword = confDAO.find(\"smtp.password\", \"\").getValue();\n \n-        LOG.debug(\"SMTP details fetched: {}:{} / {}:[PASSWORD_NOT_SHOWN]\",\n-                new Object[]{smtpHost, smtpPort, smtpUsername});\n+        LOG.debug(\"SMTP details fetched: {}:{} / {}:[PASSWORD_NOT_SHOWN]\", smtpHost, smtpPort, smtpUsername);\n     }\n \n     public TaskExec executeSingle(final NotificationTask task) {"},{"sha":"33ba14e3a525c3f4ddfa279b018d6a9f538364a4","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AbstractAttributable.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAbstractAttributable.java?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -42,10 +42,10 @@ public <T extends AbstractAttr> T getAttribute(final String schemaName) {\n \n     public <T extends AbstractDerAttr> T getDerivedAttribute(final String derivedSchemaName) {\n         T result = null;\n-        for (Iterator<? extends AbstractDerAttr> itor = getDerivedAttributes().iterator(); result == null\n-                && itor.hasNext();) {\n+        for (Iterator<? extends AbstractDerAttr> itor = getDerivedAttributes().iterator();\n+                result == null && itor.hasNext();) {\n \n-            final T derivedAttribute = (T) itor.next();\n+            T derivedAttribute = (T) itor.next();\n             if (derivedAttribute.getDerivedSchema() != null\n                     && derivedSchemaName.equals(derivedAttribute.getDerivedSchema().getName())) {\n \n@@ -58,10 +58,10 @@ public <T extends AbstractDerAttr> T getDerivedAttribute(final String derivedSch\n \n     public <T extends AbstractVirAttr> T getVirtualAttribute(final String virtualSchemaName) {\n         T result = null;\n-        for (Iterator<? extends AbstractVirAttr> itor = getVirtualAttributes().iterator(); result == null\n-                && itor.hasNext();) {\n+        for (Iterator<? extends AbstractVirAttr> itor = getVirtualAttributes().iterator();\n+                result == null && itor.hasNext();) {\n \n-            final T virtualAttribute = (T) itor.next();\n+            T virtualAttribute = (T) itor.next();\n             if (virtualAttribute.getVirtualSchema() != null\n                     && virtualSchemaName.equals(virtualAttribute.getVirtualSchema().getName())) {\n \n@@ -76,7 +76,7 @@ protected Map<AbstractSchema, AbstractAttr> getAttrMap() {\n         final Map<AbstractSchema, AbstractAttr> map = new HashMap<AbstractSchema, AbstractAttr>();\n \n         for (AbstractAttr attr : getAttributes()) {\n-            map.put((AbstractSchema) attr.getSchema(), attr);\n+            map.put(attr.getSchema(), attr);\n         }\n \n         return map;\n@@ -86,7 +86,7 @@ protected Map<AbstractDerSchema, AbstractDerAttr> getDerAttrMap() {\n         final Map<AbstractDerSchema, AbstractDerAttr> map = new HashMap<AbstractDerSchema, AbstractDerAttr>();\n \n         for (AbstractDerAttr attr : getDerivedAttributes()) {\n-            map.put((AbstractDerSchema) attr.getDerivedSchema(), attr);\n+            map.put(attr.getDerivedSchema(), attr);\n         }\n \n         return map;\n@@ -96,7 +96,7 @@ protected Map<AbstractVirSchema, AbstractVirAttr> getVirAttrMap() {\n         final Map<AbstractVirSchema, AbstractVirAttr> map = new HashMap<AbstractVirSchema, AbstractVirAttr>();\n \n         for (AbstractVirAttr attr : getVirtualAttributes()) {\n-            map.put((AbstractVirSchema) attr.getVirtualSchema(), attr);\n+            map.put(attr.getVirtualSchema(), attr);\n         }\n \n         return map;"},{"sha":"d1b621fec8317eb055c872cfea371db255d2bd00","filename":"core/src/main/java/org/apache/syncope/core/policy/AccountPolicyEnforcer.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2FAccountPolicyEnforcer.java?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -24,8 +24,7 @@\n \n public interface AccountPolicyEnforcer {\n \n-\tpublic abstract void enforce(AccountPolicySpec policy, PolicyType type,\n-\t\t\tSyncopeUser user) throws AccountPolicyException,\n-\t\t\tPolicyEnforceException;\n-\n-}\n\\ No newline at end of file\n+    public abstract void enforce(AccountPolicySpec policy, PolicyType type,\n+            SyncopeUser user) throws AccountPolicyException,\n+            PolicyEnforceException;\n+}"},{"sha":"2d95b2864761c8e41fe36aa0935a601c633fc762","filename":"core/src/main/java/org/apache/syncope/core/policy/impl/AccountPolicyEnforcerImpl.java","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2Fimpl%2FAccountPolicyEnforcerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2Fimpl%2FAccountPolicyEnforcerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpolicy%2Fimpl%2FAccountPolicyEnforcerImpl.java?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -18,10 +18,10 @@\n  */\n package org.apache.syncope.core.policy.impl;\n \n+import java.util.AbstractMap.SimpleEntry;\n import java.util.List;\n import java.util.Map;\n import java.util.regex.Pattern;\n-import org.apache.commons.collections.keyvalue.DefaultMapEntry;\n import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n@@ -32,15 +32,16 @@\n import org.apache.syncope.core.propagation.PropagationManager;\n import org.apache.syncope.core.propagation.PropagationTaskExecutor;\n import org.apache.syncope.core.rest.data.UserDataBinder;\n-import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n import org.apache.syncope.core.workflow.WorkflowResult;\n+import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n import org.apache.syncope.types.AccountPolicySpec;\n import org.apache.syncope.types.PolicyType;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n-public class AccountPolicyEnforcerImpl extends PolicyEnforcer<AccountPolicySpec, SyncopeUser> implements AccountPolicyEnforcer {\n+public class AccountPolicyEnforcerImpl extends PolicyEnforcer<AccountPolicySpec, SyncopeUser>\n+        implements AccountPolicyEnforcer {\n \n     @Autowired\n     private UserWorkflowAdapter uwfAdapter;\n@@ -61,8 +62,8 @@ public class AccountPolicyEnforcerImpl extends PolicyEnforcer<AccountPolicySpec,\n     private static final Pattern UCPATTERN = Pattern.compile(\"[A-Z0-9-_@. ]+\");\n \n     /* (non-Javadoc)\n-\t * @see org.apache.syncope.core.policy.AccountPolicyEnforcer#enforce(org.apache.syncope.types.AccountPolicySpec, org.apache.syncope.types.PolicyType, org.apache.syncope.core.persistence.beans.user.SyncopeUser)\n-\t */\n+     * @see AccountPolicyEnforcer#enforce(AccountPolicySpec, PolicyType, SyncopeUser)\n+     */\n     @Override\n     public void enforce(final AccountPolicySpec policy, final PolicyType type, final SyncopeUser user)\n             throws AccountPolicyException, PolicyEnforceException {\n@@ -129,7 +130,7 @@ public void enforce(final AccountPolicySpec policy, final PolicyType type, final\n                 if (policy.isPropagateSuspension()) {\n                     final List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n                             new WorkflowResult<Map.Entry<Long, Boolean>>(\n-                            new DefaultMapEntry(updated.getResult(), Boolean.FALSE),\n+                            new SimpleEntry<Long, Boolean>(updated.getResult(), Boolean.FALSE),\n                             updated.getPropByRes(), updated.getPerformedTasks()));\n \n                     taskExecutor.execute(tasks);"},{"sha":"9bbfe526de4baf6ef314ca8da07b906b95fd3765","filename":"core/src/main/java/org/apache/syncope/core/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -102,7 +102,7 @@ protected PropagationActions getPropagationActions(final ExternalResource resour\n                         createBean(actionsClass, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, true);\n             } catch (ClassNotFoundException e) {\n                 LOG.error(\"Invalid PropagationAction class name '{}' for resource {}\",\n-                        new Object[]{resource, resource.getPropagationActionsClassName(), e});\n+                        resource, resource.getPropagationActionsClassName(), e);\n             }\n         }\n "},{"sha":"8d2018733c46ed5a51d72f16e09251ab75aada96","filename":"core/src/main/java/org/apache/syncope/core/propagation/PropagationManager.java","status":"modified","additions":54,"deletions":25,"changes":79,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FPropagationManager.java?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -18,14 +18,14 @@\n  */\n package org.apache.syncope.core.propagation;\n \n+import java.util.AbstractMap.SimpleEntry;\n import java.util.ArrayList;\n import java.util.Collections;\n+import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n-import java.util.Map.Entry;\n import java.util.Set;\n-import org.apache.commons.collections.keyvalue.DefaultMapEntry;\n import org.apache.commons.jexl2.JexlContext;\n import org.apache.commons.jexl2.MapContext;\n import org.apache.commons.lang.StringUtils;\n@@ -201,7 +201,7 @@ protected List<PropagationTask> getCreateTaskIds(final AbstractAttributable attr\n             propByRes.get(ResourceOperation.CREATE).removeAll(syncResourceNames);\n         }\n \n-        return createTasks(attributable, password, enable, false, propByRes);\n+        return createTasks(attributable, password, null, null, enable, false, propByRes);\n     }\n \n     /**\n@@ -349,7 +349,16 @@ protected List<PropagationTask> getUpdateTaskIds(final AbstractAttributable attr\n             localPropByRes.get(ResourceOperation.DELETE).removeAll(syncResourceNames);\n         }\n \n-        return createTasks(attributable, password, enable, false, localPropByRes);\n+        Map<String, AttributeMod> vAttrsToBeUpdatedMap = null;\n+        if (vAttrsToBeUpdated != null) {\n+            vAttrsToBeUpdatedMap = new HashMap<String, AttributeMod>();\n+            for (AttributeMod attrMod : vAttrsToBeUpdated) {\n+                vAttrsToBeUpdatedMap.put(attrMod.getSchema(), attrMod);\n+            }\n+        }\n+\n+        return createTasks(attributable, password,\n+                vAttrsToBeRemoved, vAttrsToBeUpdatedMap, enable, false, localPropByRes);\n     }\n \n     /**\n@@ -428,7 +437,7 @@ protected List<PropagationTask> getDeleteTaskIds(final AbstractAttributable attr\n         if (syncResourceName != null) {\n             propByRes.get(ResourceOperation.DELETE).remove(syncResourceName);\n         }\n-        return createTasks(attributable, null, false, true, propByRes);\n+        return createTasks(attributable, null, null, null, false, true, propByRes);\n     }\n \n     /**\n@@ -438,11 +447,14 @@ protected List<PropagationTask> getDeleteTaskIds(final AbstractAttributable attr\n      * @param mapItem mapping item for the given attribute\n      * @param subject given user\n      * @param password clear-text password\n+     * @param vAttrsToBeRemoved virtual attributes to be removed\n+     * @param vAttrsToBeUpdated virtual attributes to be added\n      * @return account link + prepared attribute\n      * @throws ClassNotFoundException if schema type for given mapping does not exists in current class loader\n      */\n     protected <T extends AbstractAttributable> Map.Entry<String, Attribute> prepareAttribute(\n-            final AbstractMappingItem mapItem, final T subject, final String password)\n+            final AbstractMappingItem mapItem, final T subject, final String password,\n+            final Set<String> vAttrsToBeRemoved, final Map<String, AttributeMod> vAttrsToBeUpdated)\n             throws ClassNotFoundException {\n \n         final List<AbstractAttributable> attributables = new ArrayList<AbstractAttributable>();\n@@ -472,20 +484,30 @@ protected <T extends AbstractAttributable> Map.Entry<String, Attribute> prepareA\n             default:\n         }\n \n-        final Entry<AbstractSchema, List<AbstractAttrValue>> entry =\n-                MappingUtil.getIntValues(mapItem, attributables, password, schemaDAO);\n+        final List<AbstractAttrValue> values =\n+                MappingUtil.getIntValues(mapItem, attributables, password, vAttrsToBeRemoved, vAttrsToBeUpdated);\n+\n+        AbstractSchema schema = null;\n+        final SchemaType schemaType;\n+        switch (mapItem.getIntMappingType()) {\n+            case UserSchema:\n+            case RoleSchema:\n+            case MembershipSchema:\n+                schema = schemaDAO.find(mapItem.getIntAttrName(),\n+                        MappingUtil.getIntMappingTypeClass(mapItem.getIntMappingType()));\n+                schemaType = schema == null ? SchemaType.String : schema.getType();\n+                break;\n \n-        final List<AbstractAttrValue> values = entry.getValue();\n-        final AbstractSchema schema = entry.getKey();\n-        final SchemaType schemaType = schema == null ? SchemaType.String : schema.getType();\n+            default:\n+                schemaType = SchemaType.String;\n+        }\n \n         final String extAttrName = mapItem.getExtAttrName();\n \n         LOG.debug(\"Define mapping for: \"\n                 + \"\\n* ExtAttrName \" + extAttrName\n                 + \"\\n* is accountId \" + mapItem.isAccountid()\n-                + \"\\n* is password \"\n-                + (mapItem.isPassword() || mapItem.getIntMappingType().equals(IntMappingType.Password))\n+                + \"\\n* is password \" + (mapItem.isPassword() || mapItem.getIntMappingType() == IntMappingType.Password)\n                 + \"\\n* mandatory condition \" + mapItem.getMandatoryCondition()\n                 + \"\\n* Schema \" + mapItem.getIntAttrName()\n                 + \"\\n* IntMappingType \" + mapItem.getIntMappingType().toString()\n@@ -505,15 +527,15 @@ protected <T extends AbstractAttributable> Map.Entry<String, Attribute> prepareA\n         Map.Entry<String, Attribute> result;\n \n         if (mapItem.isAccountid()) {\n-            result = new DefaultMapEntry(objValues.iterator().next().toString(), null);\n+            result = new SimpleEntry<String, Attribute>(objValues.iterator().next().toString(), null);\n         } else if (mapItem.isPassword()) {\n-            result = new DefaultMapEntry(null,\n+            result = new SimpleEntry<String, Attribute>(null,\n                     AttributeBuilder.buildPassword(objValues.iterator().next().toString().toCharArray()));\n         } else {\n             if (schema != null && schema.isMultivalue()) {\n-                result = new DefaultMapEntry(null, AttributeBuilder.build(extAttrName, objValues));\n+                result = new SimpleEntry<String, Attribute>(null, AttributeBuilder.build(extAttrName, objValues));\n             } else {\n-                result = new DefaultMapEntry(null, objValues.isEmpty()\n+                result = new SimpleEntry<String, Attribute>(null, objValues.isEmpty()\n                         ? AttributeBuilder.build(extAttrName)\n                         : AttributeBuilder.build(extAttrName, objValues.iterator().next()));\n             }\n@@ -528,17 +550,20 @@ protected <T extends AbstractAttributable> Map.Entry<String, Attribute> prepareA\n      * @param <T> user / role\n      * @param subject given user / role\n      * @param password clear-text password\n+     * @param vAttrsToBeRemoved virtual attributes to be removed\n+     * @param vAttrsToBeUpdated virtual attributes to be added\n      * @param enable whether user must be enabled or not\n      * @param resource target resource\n      * @param attrUtil attributable util to get info about subject\n      * @return account link + prepared attributes\n      */\n     protected <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> prepareAttributes(final T subject,\n-            final String password, final Boolean enable, final ExternalResource resource,\n+            final String password, final Set<String> vAttrsToBeRemoved,\n+            final Map<String, AttributeMod> vAttrsToBeUpdated, final Boolean enable, final ExternalResource resource,\n             final AttributableUtil attrUtil) {\n \n         LOG.debug(\"Preparing resource attributes for {} on resource {} with attributes {}\",\n-                new Object[]{subject, resource, subject.getAttributes()});\n+                subject, resource, subject.getAttributes());\n \n         Set<Attribute> attributes = new HashSet<Attribute>();\n         String accountId = null;\n@@ -547,7 +572,8 @@ protected <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> pre\n             LOG.debug(\"Processing schema {}\", mapping.getIntAttrName());\n \n             try {\n-                Map.Entry<String, Attribute> preparedAttribute = prepareAttribute(mapping, subject, password);\n+                Map.Entry<String, Attribute> preparedAttribute = prepareAttribute(\n+                        mapping, subject, password, vAttrsToBeRemoved, vAttrsToBeUpdated);\n \n                 if (preparedAttribute.getKey() != null) {\n                     accountId = preparedAttribute.getKey();\n@@ -606,7 +632,7 @@ protected <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> pre\n             attributes.add(AttributeBuilder.buildEnabled(enable));\n         }\n \n-        return new DefaultMapEntry(accountId, attributes);\n+        return new SimpleEntry<String, Set<Attribute>>(accountId, attributes);\n     }\n \n     /**\n@@ -615,13 +641,16 @@ protected <T extends AbstractAttributable> Map.Entry<String, Set<Attribute>> pre\n      * @param <T> user / role\n      * @param subject user / role to be provisioned\n      * @param password cleartext password to be provisioned\n+     * @param vAttrsToBeRemoved virtual attributes to be removed\n+     * @param vAttrsToBeUpdated virtual attributes to be added\n      * @param enable whether user must be enabled or not\n      * @param deleteOnResource whether user / role must be deleted anyway from external resource or not\n      * @param propByRes operation to be performed per resource\n      * @return list of propagation tasks created\n      */\n-    protected <T extends AbstractAttributable> List<PropagationTask> createTasks(final T subject,\n-            final String password, final Boolean enable, final boolean deleteOnResource,\n+    protected <T extends AbstractAttributable> List<PropagationTask> createTasks(final T subject, final String password,\n+            final Set<String> vAttrsToBeRemoved, final Map<String, AttributeMod> vAttrsToBeUpdated,\n+            final Boolean enable, final boolean deleteOnResource,\n             final PropagationByResource propByRes) {\n \n         LOG.debug(\"Provisioning subject {}:\\n{}\", subject, propByRes);\n@@ -651,8 +680,8 @@ protected <T extends AbstractAttributable> List<PropagationTask> createTasks(fin\n                     task.setPropagationMode(resource.getPropagationMode());\n                     task.setOldAccountId(propByRes.getOldAccountId(resource.getName()));\n \n-                    Map.Entry<String, Set<Attribute>> preparedAttrs =\n-                            prepareAttributes(subject, password, enable, resource, attrUtil);\n+                    Map.Entry<String, Set<Attribute>> preparedAttrs = prepareAttributes(subject, password,\n+                            vAttrsToBeRemoved, vAttrsToBeUpdated, enable, resource, attrUtil);\n                     task.setAccountId(preparedAttrs.getKey());\n                     task.setAttributes(preparedAttrs.getValue());\n "},{"sha":"d49ea78c39ea17205b58c5bb9ee927853ddd656f","filename":"core/src/main/java/org/apache/syncope/core/report/UserReportlet.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Freport%2FUserReportlet.java?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -131,8 +131,8 @@ private void doExtractAttributes(final ContentHandler handler, final AbstractAtt\n                         handler.endElement(\"\", \"\", \"value\");\n                     }\n                 } else {\n-                    LOG.debug(\"{} not found for {}[{}]\", new Object[]{attrName,\n-                                attributableTO.getClass().getSimpleName(), attributableTO.getId()});\n+                    LOG.debug(\"{} not found for {}[{}]\", attrName,\n+                            attributableTO.getClass().getSimpleName(), attributableTO.getId());\n                 }\n \n                 handler.endElement(\"\", \"\", \"attribute\");\n@@ -157,8 +157,8 @@ private void doExtractAttributes(final ContentHandler handler, final AbstractAtt\n                         handler.endElement(\"\", \"\", \"value\");\n                     }\n                 } else {\n-                    LOG.debug(\"{} not found for {}[{}]\", new Object[]{attrName,\n-                                attributableTO.getClass().getSimpleName(), attributableTO.getId()});\n+                    LOG.debug(\"{} not found for {}[{}]\", attrName,\n+                                attributableTO.getClass().getSimpleName(), attributableTO.getId());\n                 }\n \n                 handler.endElement(\"\", \"\", \"derivedAttribute\");\n@@ -183,8 +183,8 @@ private void doExtractAttributes(final ContentHandler handler, final AbstractAtt\n                         handler.endElement(\"\", \"\", \"value\");\n                     }\n                 } else {\n-                    LOG.debug(\"{} not found for {}[{}]\", new Object[]{attrName,\n-                                attributableTO.getClass().getSimpleName(), attributableTO.getId()});\n+                    LOG.debug(\"{} not found for {}[{}]\", attrName,\n+                                attributableTO.getClass().getSimpleName(), attributableTO.getId());\n                 }\n \n                 handler.endElement(\"\", \"\", \"virtualAttribute\");"},{"sha":"928e6de52b759f7df06b58472600f3fb0fc4560d","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ConnInstanceController.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FConnInstanceController.java?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -257,8 +257,8 @@ public List<ConnBundleTO> getBundles(@RequestParam(value = \"lang\", required = fa\n \n                 ConnectorKey key = bundle.getConnectorKey();\n \n-                LOG.debug(\"\\nBundle name: {}\" + \"\\nBundle version: {}\" + \"\\nBundle class: {}\", new Object[]{\n-                            key.getBundleName(), key.getBundleVersion(), key.getConnectorName()});\n+                LOG.debug(\"\\nBundle name: {}\" + \"\\nBundle version: {}\" + \"\\nBundle class: {}\",\n+                        key.getBundleName(), key.getBundleVersion(), key.getConnectorName());\n \n                 connectorBundleTO.setBundleName(key.getBundleName());\n                 connectorBundleTO.setConnectorName(key.getConnectorName());"},{"sha":"e20f6f7235a9df40c8298aebfc855c6448494af8","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FUserController.java?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -18,14 +18,14 @@\n  */\n package org.apache.syncope.core.rest.controller;\n \n+import java.util.AbstractMap.SimpleEntry;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n import javax.servlet.http.HttpServletResponse;\n-import org.apache.commons.collections.keyvalue.DefaultMapEntry;\n import org.apache.syncope.client.mod.UserMod;\n import org.apache.syncope.client.search.NodeCond;\n import org.apache.syncope.client.to.MembershipTO;\n@@ -485,9 +485,8 @@ public UserTO executeWorkflow(@RequestBody final UserTO userTO, @PathVariable(\"t\n         WorkflowResult<Long> updated = uwfAdapter.execute(userTO, taskId);\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n-                new WorkflowResult<Map.Entry<Long, Boolean>>(new DefaultMapEntry(updated.getResult(), null),\n-                updated.getPropByRes(),\n-                updated.getPerformedTasks()));\n+                new WorkflowResult<Map.Entry<Long, Boolean>>(new SimpleEntry<Long, Boolean>(updated.getResult(), null),\n+                updated.getPropByRes(), updated.getPerformedTasks()));\n \n         taskExecutor.execute(tasks);\n \n@@ -559,7 +558,7 @@ public UserTO submitForm(@RequestBody final WorkflowFormTO form)\n \n         List<PropagationTask> tasks = propagationManager.getUserUpdateTaskIds(\n                 new WorkflowResult<Map.Entry<Long, Boolean>>(\n-                new DefaultMapEntry(updated.getResult().getKey(), Boolean.TRUE),\n+                new SimpleEntry<Long, Boolean>(updated.getResult().getKey(), Boolean.TRUE),\n                 updated.getPropByRes(),\n                 updated.getPerformedTasks()),\n                 updated.getResult().getValue(),"},{"sha":"d33b123be7821b38a3eda19c4d8df8b6b6136045","filename":"core/src/main/java/org/apache/syncope/core/util/MappingUtil.java","status":"modified","additions":42,"deletions":97,"changes":139,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -25,13 +25,12 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n-import org.apache.commons.collections.keyvalue.DefaultMapEntry;\n+import org.apache.syncope.client.mod.AttributeMod;\n import org.apache.syncope.core.persistence.beans.AbstractAttr;\n import org.apache.syncope.core.persistence.beans.AbstractAttrValue;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.persistence.beans.AbstractDerAttr;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n-import org.apache.syncope.core.persistence.beans.AbstractSchema;\n import org.apache.syncope.core.persistence.beans.AbstractVirAttr;\n import org.apache.syncope.core.persistence.beans.membership.MDerSchema;\n import org.apache.syncope.core.persistence.beans.membership.MSchema;\n@@ -46,7 +45,6 @@\n import org.apache.syncope.core.persistence.beans.user.UDerSchema;\n import org.apache.syncope.core.persistence.beans.user.USchema;\n import org.apache.syncope.core.persistence.beans.user.UVirSchema;\n-import org.apache.syncope.core.persistence.dao.SchemaDAO;\n import org.apache.syncope.types.IntMappingType;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -92,41 +90,39 @@ public static <T extends AbstractMappingItem> Set<T> getMatchingMappingItems(fin\n     /**\n      * Get attribute values.\n      *\n-     * @param mapping mapping\n+     * @param mappingItem mapping item\n      * @param attributables list of attributables\n      * @param password password\n      * @param schemaDAO schema DAO\n-     * @return schema and attribute values.\n+     * @return attribute values.\n      */\n-    public static Map.Entry<AbstractSchema, List<AbstractAttrValue>> getIntValues(final AbstractMappingItem mapping,\n-            final List<AbstractAttributable> attributables, final String password, final SchemaDAO schemaDAO) {\n+    public static List<AbstractAttrValue> getIntValues(final AbstractMappingItem mappingItem,\n+            final List<AbstractAttributable> attributables, final String password,\n+            final Set<String> vAttrsToBeRemoved, final Map<String, AttributeMod> vAttrsToBeUpdated) {\n \n-        LOG.debug(\"Get attributes for '{}' and mapping type '{}'\", attributables, mapping.getIntMappingType());\n-\n-        AbstractSchema schema = null;\n+        LOG.debug(\"Get attributes for '{}' and mapping type '{}'\", attributables, mappingItem.getIntMappingType());\n \n         List<AbstractAttrValue> values = new ArrayList<AbstractAttrValue>();\n \n-        switch (mapping.getIntMappingType()) {\n+        switch (mappingItem.getIntMappingType()) {\n             case UserSchema:\n             case RoleSchema:\n             case MembershipSchema:\n-                schema = schemaDAO.find(mapping.getIntAttrName(),\n-                        MappingUtil.getIntMappingTypeClass(mapping.getIntMappingType()));\n-\n                 for (AbstractAttributable attributable : attributables) {\n-                    final AbstractAttr attr = attributable.getAttribute(mapping.getIntAttrName());\n-\n-                    if (attr != null && attr.getValues() != null) {\n-                        values.addAll(schema.isUniqueConstraint()\n-                                ? Collections.singletonList(attr.getUniqueValue()) : attr.getValues());\n+                    final AbstractAttr attr = attributable.getAttribute(mappingItem.getIntAttrName());\n+                    if (attr != null) {\n+                        if (attr.getUniqueValue() != null) {\n+                            values.add(attr.getUniqueValue());\n+                        } else if (attr.getValues() != null) {\n+                            values.addAll(attr.getValues());\n+                        }\n                     }\n \n                     LOG.debug(\"Retrieved attribute {}\"\n                             + \"\\n* IntAttrName {}\"\n                             + \"\\n* IntMappingType {}\"\n                             + \"\\n* Attribute values {}\",\n-                            new Object[]{attr, mapping.getIntAttrName(), mapping.getIntMappingType(), values});\n+                            attr, mappingItem.getIntAttrName(), mappingItem.getIntMappingType(), values);\n                 }\n \n                 break;\n@@ -135,41 +131,53 @@ public static Map.Entry<AbstractSchema, List<AbstractAttrValue>> getIntValues(fi\n             case RoleVirtualSchema:\n             case MembershipVirtualSchema:\n                 for (AbstractAttributable attributable : attributables) {\n-                    AbstractVirAttr virAttr = attributable.getVirtualAttribute(mapping.getIntAttrName());\n-\n+                    AbstractVirAttr virAttr = attributable.getVirtualAttribute(mappingItem.getIntAttrName());\n                     if (virAttr != null) {\n-                        for (String value : virAttr.getValues()) {\n-                            AbstractAttrValue attrValue = new UAttrValue();\n-                            attrValue.setStringValue(value);\n-                            values.add(attrValue);\n+                        if (virAttr.getValues() != null) {\n+                            for (String value : virAttr.getValues()) {\n+                                AbstractAttrValue attrValue = new UAttrValue();\n+                                attrValue.setStringValue(value);\n+                                values.add(attrValue);\n+                            }\n+                        }\n+                        if (vAttrsToBeRemoved != null && vAttrsToBeUpdated != null) {\n+                            if (vAttrsToBeUpdated.containsKey(mappingItem.getIntAttrName())) {\n+                                virAttr.setValues(vAttrsToBeUpdated.get(mappingItem.getIntAttrName()).\n+                                        getValuesToBeAdded());\n+                            } else if (vAttrsToBeRemoved.contains(mappingItem.getIntAttrName())) {\n+                                virAttr.getValues().clear();\n+                            } else {\n+                                throw new RuntimeException(\"Virtual attribute has not to be updated\");\n+                            }\n                         }\n                     }\n \n                     LOG.debug(\"Retrieved virtual attribute {}\"\n                             + \"\\n* IntAttrName {}\"\n                             + \"\\n* IntMappingType {}\"\n                             + \"\\n* Attribute values {}\",\n-                            new Object[]{virAttr, mapping.getIntAttrName(), mapping.getIntMappingType(), values});\n+                            virAttr, mappingItem.getIntAttrName(), mappingItem.getIntMappingType(), values);\n                 }\n                 break;\n \n             case UserDerivedSchema:\n             case RoleDerivedSchema:\n             case MembershipDerivedSchema:\n                 for (AbstractAttributable attributable : attributables) {\n-                    AbstractDerAttr derAttr = attributable.getDerivedAttribute(mapping.getIntAttrName());\n+                    AbstractDerAttr derAttr = attributable.getDerivedAttribute(mappingItem.getIntAttrName());\n                     if (derAttr != null) {\n                         AbstractAttrValue attrValue = (attributable instanceof SyncopeRole)\n                                 ? new RAttrValue() : new UAttrValue();\n                         attrValue.setStringValue(derAttr.getValue(attributable.getAttributes()));\n                         values.add(attrValue);\n                     }\n \n-                    LOG.debug(\"Retrieved attribute {}\"\n+                    LOG.\n+                            debug(\"Retrieved attribute {}\"\n                             + \"\\n* IntAttrName {}\"\n                             + \"\\n* IntMappingType {}\"\n                             + \"\\n* Attribute values {}\",\n-                            new Object[]{derAttr, mapping.getIntAttrName(), mapping.getIntMappingType(), values});\n+                            derAttr, mappingItem.getIntAttrName(), mappingItem.getIntMappingType(), values);\n                 }\n                 break;\n \n@@ -216,71 +224,7 @@ public static Map.Entry<AbstractSchema, List<AbstractAttrValue>> getIntValues(fi\n \n         LOG.debug(\"Retrieved values '{}'\", values);\n \n-        return new DefaultMapEntry(schema, values);\n-    }\n-\n-    public static List<String> getIntValueAsStrings(final AbstractAttributable attributable,\n-            final AbstractMappingItem mapItem, final String clearPassword) {\n-\n-        List<String> value = new ArrayList<String>();\n-\n-        if (mapItem != null) {\n-            switch (mapItem.getIntMappingType()) {\n-                case Username:\n-                    if (!(attributable instanceof SyncopeUser)) {\n-                        throw new ClassCastException(\"mappingtype is Username, but attributable is not SyncopeUser: \"\n-                                + attributable.getClass().getName());\n-                    }\n-                    value.add(((SyncopeUser) attributable).getUsername());\n-                    break;\n-\n-                case Password:\n-                    if (clearPassword != null) {\n-                        value.add(clearPassword);\n-                    }\n-                    break;\n-\n-                case UserSchema:\n-                case RoleSchema:\n-                case MembershipSchema:\n-                    AbstractAttr abstractAttr = attributable.getAttribute(mapItem.getIntAttrName());\n-                    if (abstractAttr != null && abstractAttr.getValues() != null) {\n-                        value.addAll(abstractAttr.getValuesAsStrings());\n-                    }\n-                    break;\n-\n-                case UserVirtualSchema:\n-                case RoleVirtualSchema:\n-                case MembershipVirtualSchema:\n-                    AbstractVirAttr abstractVirAttr = attributable.getVirtualAttribute(mapItem.getIntAttrName());\n-                    if (abstractVirAttr != null && abstractVirAttr.getValues() != null) {\n-                        value.addAll(abstractVirAttr.getValues());\n-                    }\n-                    break;\n-\n-                case UserDerivedSchema:\n-                case RoleDerivedSchema:\n-                case MembershipDerivedSchema:\n-                    AbstractDerAttr abstractDerAttr = attributable.getDerivedAttribute(mapItem.getIntAttrName());\n-                    if (abstractDerAttr != null) {\n-                        String abstractDerAttrValue = abstractDerAttr.getValue(attributable.getAttributes());\n-                        if (abstractDerAttrValue != null) {\n-                            value.add(abstractDerAttrValue);\n-                        }\n-                    }\n-                    break;\n-\n-                default:\n-            }\n-        }\n-\n-        return value;\n-    }\n-\n-    public static List<String> getIntValueAsStrings(final AbstractAttributable attributable,\n-            final AbstractMappingItem mapItem) {\n-\n-        return getIntValueAsStrings(attributable, mapItem, null);\n+        return values;\n     }\n \n     /**\n@@ -293,10 +237,11 @@ public static List<String> getIntValueAsStrings(final AbstractAttributable attri\n     public static String getAccountIdValue(final AbstractAttributable attributable,\n             final AbstractMappingItem accountIdItem) {\n \n-        final List<String> values = getIntValueAsStrings(attributable, accountIdItem);\n+        List<AbstractAttrValue> values = getIntValues(\n+                accountIdItem, Collections.<AbstractAttributable>singletonList(attributable), null, null, null);\n         return values == null || values.isEmpty()\n                 ? null\n-                : values.get(0);\n+                : values.get(0).getValueAsString();\n     }\n \n     /**"},{"sha":"897134bfa8ed077f4171cb9c426bce2bbffdc006","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/NoOpUserWorkflowAdapter.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2FNoOpUserWorkflowAdapter.java?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -18,11 +18,11 @@\n  */\n package org.apache.syncope.core.workflow.user;\n \n+import java.util.AbstractMap.SimpleEntry;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n-import org.apache.commons.collections.keyvalue.DefaultMapEntry;\n import org.apache.syncope.client.mod.UserMod;\n import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.client.to.WorkflowDefinitionTO;\n@@ -85,8 +85,8 @@ public WorkflowResult<Map.Entry<Long, Boolean>> create(final UserTO userTO, fina\n         final PropagationByResource propByRes = new PropagationByResource();\n         propByRes.set(ResourceOperation.CREATE, user.getResourceNames());\n \n-        return new WorkflowResult<Map.Entry<Long, Boolean>>(new DefaultMapEntry(user.getId(), propagateEnable),\n-                propByRes, \"create\");\n+        return new WorkflowResult<Map.Entry<Long, Boolean>>(new SimpleEntry<Long, Boolean>(user.getId(),\n+                propagateEnable), propByRes, \"create\");\n     }\n \n     @Override\n@@ -112,7 +112,8 @@ protected WorkflowResult<Map.Entry<Long, Boolean>> doUpdate(final SyncopeUser us\n \n         SyncopeUser updated = userDAO.save(user);\n \n-        return new WorkflowResult<Map.Entry<Long, Boolean>>(new DefaultMapEntry(updated.getId(), true), propByRes,\n+        return new WorkflowResult<Map.Entry<Long, Boolean>>(new SimpleEntry<Long, Boolean>(updated.getId(), true),\n+                propByRes,\n                 \"update\");\n     }\n "},{"sha":"5c9d61588cc4ce825a9b8a82fa6e45071621fec2","filename":"core/src/main/java/org/apache/syncope/core/workflow/user/activiti/ActivitiUserWorkflowAdapter.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fworkflow%2Fuser%2Factiviti%2FActivitiUserWorkflowAdapter.java?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -26,6 +26,7 @@\n import java.io.Reader;\n import java.io.StringWriter;\n import java.io.Writer;\n+import java.util.AbstractMap.SimpleEntry;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n@@ -52,7 +53,6 @@\n import org.activiti.engine.repository.ProcessDefinition;\n import org.activiti.engine.runtime.ProcessInstance;\n import org.activiti.engine.task.Task;\n-import org.apache.commons.collections.keyvalue.DefaultMapEntry;\n import org.apache.commons.lang.StringUtils;\n import org.apache.syncope.client.mod.UserMod;\n import org.apache.syncope.client.to.UserTO;\n@@ -252,8 +252,8 @@ public WorkflowResult<Map.Entry<Long, Boolean>> create(final UserTO userTO, fina\n             }\n         }\n \n-        return new WorkflowResult<Map.Entry<Long, Boolean>>(new DefaultMapEntry(user.getId(), propagateEnable),\n-                propByRes, getPerformedTasks(user));\n+        return new WorkflowResult<Map.Entry<Long, Boolean>>(\n+                new SimpleEntry<Long, Boolean>(user.getId(), propagateEnable), propByRes, getPerformedTasks(user));\n     }\n \n     private Set<String> doExecuteTask(final SyncopeUser user, final String task,\n@@ -325,8 +325,8 @@ protected WorkflowResult<Map.Entry<Long, Boolean>> doUpdate(final SyncopeUser us\n \n         Boolean propagateEnable = (Boolean) runtimeService.getVariable(user.getWorkflowId(), PROPAGATE_ENABLE);\n \n-        return new WorkflowResult<Map.Entry<Long, Boolean>>(new DefaultMapEntry(updated.getId(), propagateEnable),\n-                propByRes, task);\n+        return new WorkflowResult<Map.Entry<Long, Boolean>>(new SimpleEntry<Long, Boolean>(\n+                updated.getId(), propagateEnable), propByRes, task);\n     }\n \n     @Override\n@@ -600,7 +600,7 @@ private Map.Entry<Task, TaskFormData> checkTask(final String taskId, final Strin\n             }\n         }\n \n-        return new DefaultMapEntry(task, formData);\n+        return new SimpleEntry<Task, TaskFormData>(task, formData);\n     }\n \n     @Override\n@@ -668,7 +668,7 @@ public WorkflowResult<Map.Entry<Long, String>> submitForm(final WorkflowFormTO f\n             clearPassword = decrypt(encryptedPwd);\n         }\n \n-        return new WorkflowResult<Map.Entry<Long, String>>(new DefaultMapEntry(updated.getId(), clearPassword),\n-                propByRes, postTasks);\n+        return new WorkflowResult<Map.Entry<Long, String>>(new SimpleEntry<Long, String>(updated.getId(),\n+                clearPassword), propByRes, postTasks);\n     }\n }"},{"sha":"c2b4b82d7521c44e03c1e0a483ad9309e4c6631d","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":118,"deletions":30,"changes":148,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=bc0f5e7a6e0907900fa9af6f8bf24faee7dc5f61","patch":"@@ -18,12 +18,7 @@\n  */\n package org.apache.syncope.core.rest;\n \n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertNull;\n-import static org.junit.Assert.assertTrue;\n-import static org.junit.Assert.fail;\n+import static org.junit.Assert.*;\n \n import java.text.DateFormat;\n import java.text.SimpleDateFormat;\n@@ -32,7 +27,6 @@\n import java.util.Date;\n import java.util.List;\n import java.util.Map;\n-\n import org.apache.http.auth.UsernamePasswordCredentials;\n import org.apache.http.impl.client.DefaultHttpClient;\n import org.apache.syncope.client.http.PreemptiveAuthHttpRequestFactory;\n@@ -73,7 +67,13 @@\n \n @FixMethodOrder(MethodSorters.JVM)\n public class UserTestITCase extends AbstractTest {\n-\t\n+\n+    private ConnObjectTO readUserConnObj(String resourceName, String userId) {\n+        return restTemplate.getForObject(BASE_URL\n+                + \"/resource/{resourceName}/read/USER/{objectId}.json\", ConnObjectTO.class,\n+                resourceName, userId);\n+    }\n+\n     public static UserTO getSampleTO(final String email) {\n         UserTO userTO = new UserTO();\n         userTO.setPassword(\"password123\");\n@@ -100,7 +100,7 @@ public void selfRead() {\n                 requestFactory.getAuthScope(), new UsernamePasswordCredentials(\"user1\", \"password\"));\n \n         try {\n-        \tuserService.read(1l);\n+            userService.read(1l);\n             fail();\n         } catch (HttpClientErrorException e) {\n             assertEquals(HttpStatus.FORBIDDEN, e.getStatusCode());\n@@ -218,7 +218,7 @@ public void issue186() {\n \n         SyncopeClientException sce = null;\n         try {\n-        \tuserTO = userService.update(userMod.getId(), userMod);\n+            userTO = userService.update(userMod.getId(), userMod);\n         } catch (SyncopeClientCompositeErrorException scce) {\n             sce = scce.getException(SyncopeClientExceptionType.RequiredValuesMissing);\n         }\n@@ -248,7 +248,7 @@ public void issue186() {\n \n         sce = null;\n         try {\n-        \tuserTO = userService.update(userMod.getId(), userMod);\n+            userTO = userService.update(userMod.getId(), userMod);\n         } catch (SyncopeClientCompositeErrorException scce) {\n             sce = scce.getException(SyncopeClientExceptionType.Propagation);\n         }\n@@ -299,7 +299,7 @@ public void testEnforceMandatoryConditionOnDerived() {\n \n         SyncopeClientException sce = null;\n         try {\n-        \tuserTO = userService.create(userTO);\n+            userTO = userService.create(userTO);\n         } catch (SyncopeClientCompositeErrorException scce) {\n             sce = scce.getException(SyncopeClientExceptionType.RequiredValuesMissing);\n         }\n@@ -373,7 +373,7 @@ public void createWithInvalidUsername() {\n         membershipTO.setRoleId(7L);\n \n         userTO.addMembership(membershipTO);\n-        \n+\n         userService.create(userTO);\n     }\n \n@@ -460,7 +460,7 @@ public void create() {\n         assertNotNull(newUserTO.getCreationDate());\n \n         // 2. check for virtual attribute value\n-        newUserTO = userService.read(newUserTO.getId()); \n+        newUserTO = userService.read(newUserTO.getId());\n         assertNotNull(newUserTO);\n \n         assertNotNull(newUserTO.getVirtualAttributeMap());\n@@ -494,7 +494,7 @@ public void create() {\n         assertEquals(maxTaskExecutions, taskTO.getExecutions().size());\n \n         // 3. verify password\n-        Boolean verify =userService.verifyPassword(newUserTO.getUsername(), \"password123\");\n+        Boolean verify = userService.verifyPassword(newUserTO.getUsername(), \"password123\");\n         assertTrue(verify);\n \n         verify = userService.verifyPassword(newUserTO.getUsername(), \"passwordXX\");\n@@ -587,7 +587,7 @@ public void createWithReject() {\n \n         // 2. request if there is any pending task for user just created\n         WorkflowFormTO form = userService.getFormForUser(userTO.getId());\n-        \n+\n         assertNotNull(form);\n         assertNotNull(form.getTaskId());\n         assertNull(form.getOwner());\n@@ -600,7 +600,7 @@ public void createWithReject() {\n \n         SyncopeClientException sce = null;\n         try {\n-        \tuserService.claimForm(form.getTaskId());\n+            userService.claimForm(form.getTaskId());\n         } catch (SyncopeClientCompositeErrorException scce) {\n             sce = scce.getException(SyncopeClientExceptionType.Workflow);\n         }\n@@ -707,7 +707,7 @@ public void createWithApproval() {\n     @Test\n     public void delete() {\n         try {\n-        \tuserService.delete(0l);\n+            userService.delete(0l);\n         } catch (HttpStatusCodeException e) {\n             assertEquals(HttpStatus.NOT_FOUND, e.getStatusCode());\n         }\n@@ -760,7 +760,7 @@ public void deleteByUsername() {\n         assertTrue(userTO.getPropagationTOs().get(0).getStatus().isSuccessful());\n \n         try {\n-        \tuserService.read(userTO.getId());\n+            userService.read(userTO.getId());\n         } catch (HttpStatusCodeException e) {\n             assertEquals(HttpStatus.NOT_FOUND, e.getStatusCode());\n         }\n@@ -1084,7 +1084,7 @@ public void createActivate() {\n \n         assertEquals(\"created\", userTO.getStatus());\n \n-\t\tuserTO = userService.activate(userTO.getId(), userTO.getToken());\n+        userTO = userService.activate(userTO.getId(), userTO.getToken());\n \n         assertNotNull(userTO);\n         assertNull(userTO.getToken());\n@@ -1112,7 +1112,7 @@ public void createActivateByUsername() {\n         assertEquals(\"created\", userTO.getStatus());\n \n         userTO = userService.activateByUsername(userTO.getUsername(), userTO.getToken());\n-        \n+\n \n         assertNotNull(userTO);\n         assertNull(userTO.getToken());\n@@ -1439,7 +1439,7 @@ public void roleAttrPropagation() {\n         assertNotNull(actual.getDerivedAttributeMap().get(\"csvuserid\"));\n \n         String userId = actual.getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0);\n-\t\tConnObjectTO connObjectTO = readUserConnObj(\"resource-csv\", userId);\n+        ConnObjectTO connObjectTO = readUserConnObj(\"resource-csv\", userId);\n         assertNotNull(connObjectTO);\n         assertEquals(\"sx-dx\", connObjectTO.getAttributeMap().get(\"ROLE\").getValues().get(0));\n     }\n@@ -1468,7 +1468,7 @@ public void membershipAttrPropagation() {\n         assertNotNull(actual.getDerivedAttributeMap().get(\"csvuserid\"));\n \n         String userId = actual.getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0);\n-\t\tConnObjectTO connObjectTO = readUserConnObj(\"resource-csv\", userId);\n+        ConnObjectTO connObjectTO = readUserConnObj(\"resource-csv\", userId);\n         assertNotNull(connObjectTO);\n         assertEquals(\"sx-dx\", connObjectTO.getAttributeMap().get(\"MEMBERSHIP\").getValues().get(0));\n     }\n@@ -1533,7 +1533,7 @@ public void issueSYNCOPE108() {\n         assertEquals(1, actual.getResources().size());\n \n         String userId = actual.getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0);\n-\t\tConnObjectTO connObjectTO = readUserConnObj(\"resource-csv\", userId);\n+        ConnObjectTO connObjectTO = readUserConnObj(\"resource-csv\", userId);\n         assertNotNull(connObjectTO);\n \n         // -----------------------------------\n@@ -1585,7 +1585,7 @@ public void issueSYNCOPE108() {\n         Throwable t = null;\n \n         try {\n-        \treadUserConnObj(\"resource-csv\", userId);\n+            readUserConnObj(\"resource-csv\", userId);\n         } catch (SyncopeClientCompositeErrorException e) {\n             assertNotNull(e.getException(SyncopeClientExceptionType.NotFound));\n             t = e;\n@@ -1719,9 +1719,97 @@ public void issueSYNCOPE51() {\n         assertEquals(defaultConfigurationTO, oldConfTO);\n     }\n \n-\tprivate ConnObjectTO readUserConnObj(String resourceName, String userId) {\n-\t\treturn restTemplate.getForObject(BASE_URL\n-                + \"/resource/{resourceName}/read/USER/{objectId}.json\", ConnObjectTO.class,\n-                resourceName, userId);\n-\t}\n+    @Test\n+    public void issueSYNCOPE260() {\n+        // ----------------------------------\n+        // create user and check virtual attribute value propagation\n+        // ----------------------------------\n+        UserTO userTO = getSampleTO(\"syncope260@apache.org\");\n+        userTO.addResource(\"ws-target-resource-2\");\n+\n+        userTO = restTemplate.postForObject(BASE_URL + \"user/create\", userTO, UserTO.class);\n+        assertNotNull(userTO);\n+        assertFalse(userTO.getPropagationTOs().isEmpty());\n+        assertEquals(\"ws-target-resource-2\", userTO.getPropagationTOs().get(0).getResourceName());\n+        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationTOs().get(0).getStatus());\n+\n+        ConnObjectTO connObjectTO = readUserConnObj(\"ws-target-resource-2\", userTO.getUsername());\n+        assertNotNull(connObjectTO);\n+        assertEquals(\"virtualvalue\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n+        // ----------------------------------\n+\n+        // ----------------------------------\n+        // update user virtual attribute and check virtual attribute value update propagation\n+        // ----------------------------------\n+        UserMod userMod = new UserMod();\n+        userMod.setId(userTO.getId());\n+\n+        AttributeMod attrMod = new AttributeMod();\n+        attrMod.setSchema(\"virtualdata\");\n+        attrMod.addValueToBeRemoved(\"virtualvalue\");\n+        attrMod.addValueToBeAdded(\"virtualvalue2\");\n+\n+        userMod.addVirtualAttributeToBeUpdated(attrMod);\n+\n+        userTO = restTemplate.postForObject(BASE_URL + \"user/update\", userMod, UserTO.class);\n+        assertNotNull(userTO);\n+        assertFalse(userTO.getPropagationTOs().isEmpty());\n+        assertEquals(\"ws-target-resource-2\", userTO.getPropagationTOs().get(0).getResourceName());\n+        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationTOs().get(0).getStatus());\n+\n+        connObjectTO = readUserConnObj(\"ws-target-resource-2\", userTO.getUsername());\n+        assertNotNull(connObjectTO);\n+        assertEquals(\"virtualvalue2\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n+        // ----------------------------------\n+\n+        // ----------------------------------\n+        // update user attribute and check virtual attribute value (unchanged)\n+        // ----------------------------------\n+        userMod = new UserMod();\n+        userMod.setId(userTO.getId());\n+\n+        attrMod = new AttributeMod();\n+        attrMod.setSchema(\"surname\");\n+        attrMod.addValueToBeRemoved(\"Surname\");\n+        attrMod.addValueToBeAdded(\"Surname2\");\n+\n+        userMod.addAttributeToBeUpdated(attrMod);\n+\n+        userTO = restTemplate.postForObject(BASE_URL + \"user/update\", userMod, UserTO.class);\n+        assertNotNull(userTO);\n+        assertFalse(userTO.getPropagationTOs().isEmpty());\n+        assertEquals(\"ws-target-resource-2\", userTO.getPropagationTOs().get(0).getResourceName());\n+        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationTOs().get(0).getStatus());\n+\n+        connObjectTO = readUserConnObj(\"ws-target-resource-2\", userTO.getUsername());\n+        assertNotNull(connObjectTO);\n+        assertEquals(\"Surname2\", connObjectTO.getAttributeMap().get(\"SURNAME\").getValues().get(0));\n+\n+        // attribute \"name\" mapped on virtual attribute \"virtualdata\" shouldn't be changed\n+        assertFalse(connObjectTO.getAttributeMap().get(\"NAME\").getValues().isEmpty());\n+        assertEquals(\"virtualvalue2\", connObjectTO.getAttributeMap().get(\"NAME\").getValues().get(0));\n+        // ----------------------------------\n+\n+        // ----------------------------------\n+        // remove user virtual attribute and check virtual attribute value (reset)\n+        // ----------------------------------\n+        userMod = new UserMod();\n+        userMod.setId(userTO.getId());\n+        userMod.addVirtualAttributeToBeRemoved(\"virtualdata\");\n+\n+        userTO = restTemplate.postForObject(BASE_URL + \"user/update\", userMod, UserTO.class);\n+        assertNotNull(userTO);\n+        assertTrue(userTO.getVirtualAttributes().isEmpty());\n+        assertFalse(userTO.getPropagationTOs().isEmpty());\n+        assertEquals(\"ws-target-resource-2\", userTO.getPropagationTOs().get(0).getResourceName());\n+        assertEquals(PropagationTaskExecStatus.SUBMITTED, userTO.getPropagationTOs().get(0).getStatus());\n+\n+        connObjectTO = readUserConnObj(\"ws-target-resource-2\", userTO.getUsername());\n+        assertNotNull(connObjectTO);\n+\n+        // attribute \"name\" mapped on virtual attribute \"virtualdata\" should be reset\n+        assertTrue(connObjectTO.getAttributeMap().get(\"NAME\").getValues() == null\n+                || connObjectTO.getAttributeMap().get(\"NAME\").getValues().isEmpty());\n+        // ----------------------------------\n+    }\n }"}]}