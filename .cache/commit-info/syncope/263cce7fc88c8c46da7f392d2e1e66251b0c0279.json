{"sha":"263cce7fc88c8c46da7f392d2e1e66251b0c0279","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjI2M2NjZTdmYzg4YzhjNDZkYTdmMzkyZDJlMWU2NjI1MWIwYzAyNzk=","commit":{"author":{"name":"Federico Palmitesta","email":"federico.palmitesta@gmail.com","date":"2019-10-31T13:14:20Z"},"committer":{"name":"Francesco Chicchiricc√≤","email":"ilgrosso@apache.org","date":"2019-10-31T14:17:03Z"},"message":"[SYNCOPE-1500] Allow single import from External Resource (#137)","tree":{"sha":"cdb64a966a4cd1e2618759d8a47962217893f550","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/cdb64a966a4cd1e2618759d8a47962217893f550"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/263cce7fc88c8c46da7f392d2e1e66251b0c0279","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/263cce7fc88c8c46da7f392d2e1e66251b0c0279","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/263cce7fc88c8c46da7f392d2e1e66251b0c0279","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/263cce7fc88c8c46da7f392d2e1e66251b0c0279/comments","author":{"login":"FedericoPalmitesta","id":23123123,"node_id":"MDQ6VXNlcjIzMTIzMTIz","avatar_url":"https://avatars.githubusercontent.com/u/23123123?v=4","gravatar_id":"","url":"https://api.github.com/users/FedericoPalmitesta","html_url":"https://github.com/FedericoPalmitesta","followers_url":"https://api.github.com/users/FedericoPalmitesta/followers","following_url":"https://api.github.com/users/FedericoPalmitesta/following{/other_user}","gists_url":"https://api.github.com/users/FedericoPalmitesta/gists{/gist_id}","starred_url":"https://api.github.com/users/FedericoPalmitesta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FedericoPalmitesta/subscriptions","organizations_url":"https://api.github.com/users/FedericoPalmitesta/orgs","repos_url":"https://api.github.com/users/FedericoPalmitesta/repos","events_url":"https://api.github.com/users/FedericoPalmitesta/events{/privacy}","received_events_url":"https://api.github.com/users/FedericoPalmitesta/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"96bb915d19c492c51c1b8b49ecf5250cf2098c2e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/96bb915d19c492c51c1b8b49ecf5250cf2098c2e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/96bb915d19c492c51c1b8b49ecf5250cf2098c2e"}],"stats":{"total":206,"additions":186,"deletions":20},"files":[{"sha":"a996c7ed52d2e440a415bd2b6f8013ba84c14c05","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/ConnObjectListViewPanel.java","status":"modified","additions":92,"deletions":15,"changes":107,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/263cce7fc88c8c46da7f392d2e1e66251b0c0279/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/263cce7fc88c8c46da7f392d2e1e66251b0c0279/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjectListViewPanel.java?ref=263cce7fc88c8c46da7f392d2e1e66251b0c0279","patch":"@@ -18,6 +18,9 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import de.agilecoders.wicket.core.markup.html.bootstrap.components.PopoverBehavior;\n+import de.agilecoders.wicket.core.markup.html.bootstrap.components.PopoverConfig;\n+import de.agilecoders.wicket.core.markup.html.bootstrap.components.TooltipConfig;\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collections;\n@@ -33,17 +36,24 @@\n import org.apache.syncope.client.console.panels.search.SearchClausePanel;\n import org.apache.syncope.client.console.panels.search.SearchUtils;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.rest.ReconciliationRestClient;\n import org.apache.syncope.client.console.rest.ResourceRestClient;\n import org.apache.syncope.client.console.wicket.extensions.markup.html.repeater.data.table.CollectionPanel;\n import org.apache.syncope.client.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.client.lib.SyncopeClient;\n+import org.apache.syncope.client.ui.commons.Constants;\n+import org.apache.syncope.client.ui.commons.status.StatusUtils;\n import org.apache.syncope.client.ui.commons.wicket.markup.html.bootstrap.tabs.Accordion;\n import org.apache.syncope.common.lib.Attr;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.common.lib.types.IdMEntitlement;\n import org.apache.syncope.common.lib.SyncopeConstants;\n+import org.apache.syncope.common.lib.to.ReconStatus;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n+import org.apache.syncope.common.lib.types.IdRepoEntitlement;\n+import org.apache.syncope.common.lib.types.MatchType;\n+import org.apache.syncope.common.rest.api.beans.ReconQuery;\n import org.apache.wicket.Component;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -65,10 +75,10 @@ public abstract class ConnObjectListViewPanel extends Panel {\n \n     private static final long serialVersionUID = 4986172040062752781L;\n \n-    private final AnyTypeRestClient anyTypeRestClient = new AnyTypeRestClient();\n-\n     private static final int SIZE = 10;\n \n+    private static final String STATUS = \"Status\";\n+\n     private String nextPageCookie;\n \n     private AbstractSearchPanel searchPanel;\n@@ -139,12 +149,43 @@ public void onClick(final AjaxRequestTarget target) {\n \n             @Override\n             protected Component getValueComponent(final String key, final ConnObjectTO bean) {\n-                Optional<Attr> attrTO =\n-                        bean.getAttrs().stream().filter(object -> object.getSchema().equals(key)).findAny();\n-\n-                return attrTO.isEmpty() || attrTO.get().getValues().isEmpty()\n-                        ? new Label(\"field\", StringUtils.EMPTY)\n-                        : new CollectionPanel(\"field\", attrTO.get().getValues());\n+                if (StringUtils.equals(key, STATUS)) {\n+                    ReconStatus status = ReconciliationRestClient.status(\n+                            new ReconQuery.Builder(anyType, resource.getKey()).\n+                            connObjectKeyValue(bean.getAttr(ConnIdSpecialName.UID).get().getValues().get(0)).build());\n+\n+                    return status.getOnSyncope() == null\n+                            ? StatusUtils.getLabel(\"field\", \"notfound icon\", \"Not found\", Constants.NOT_FOUND_ICON)\n+                            : new Label(\"field\", Model.of()).add(new PopoverBehavior(\n+                                    Model.<String>of(),\n+                                    Model.of(status.getAnyKey()),\n+                                    new PopoverConfig().\n+                                            withTitle(status.getMatchType() == MatchType.LINKED_ACCOUNT\n+                                                    ? MatchType.LINKED_ACCOUNT.name() + \", \" + AnyTypeKind.USER\n+                                                    : status.getAnyTypeKind().name()).\n+                                            withPlacement(TooltipConfig.Placement.left)) {\n+\n+                                private static final long serialVersionUID = -7867802555691605021L;\n+\n+                                @Override\n+                                protected String createRelAttribute() {\n+                                    return \"field\";\n+                                }\n+\n+                                @Override\n+                                public void onComponentTag(final Component component, final ComponentTag tag) {\n+                                    super.onComponentTag(component, tag);\n+                                    tag.put(\"class\", Constants.ACTIVE_ICON);\n+                                }\n+                            });\n+                } else {\n+                    Optional<Attr> attr =\n+                            bean.getAttrs().stream().filter(object -> object.getSchema().equals(key)).findAny();\n+\n+                    return !attr.isPresent() || attr.get().getValues().isEmpty()\n+                            ? new Label(\"field\", StringUtils.EMPTY)\n+                            : new CollectionPanel(\"field\", attr.get().getValues());\n+                }\n             }\n \n         };\n@@ -166,6 +207,30 @@ public void onClick(final AjaxRequestTarget target, final ConnObjectTO modelObje\n                 withChecks(ListViewPanel.CheckAvailability.NONE).\n                 setReuseItem(false);\n \n+        if (!StringUtils.equals(anyType, SyncopeConstants.REALM_ANYTYPE)) {\n+            builder.addAction(new ActionLink<ConnObjectTO>() {\n+\n+                private static final long serialVersionUID = 6377238742125L;\n+\n+                @Override\n+                public void onClick(final AjaxRequestTarget target, final ConnObjectTO modelObject) {\n+                    String connObjectKeyValue = modelObject.getAttr(ConnIdSpecialName.UID).get().getValues().get(0);\n+                    String anyKey = ReconciliationRestClient.status(new ReconQuery.Builder(anyType, resource.getKey()).\n+                            connObjectKeyValue(connObjectKeyValue).build()).getAnyKey();\n+\n+                    pullConnObject(\n+                            connObjectKeyValue,\n+                            target,\n+                            resource.getKey(),\n+                            anyType,\n+                            StringUtils.isNotBlank(anyKey),\n+                            pageRef);\n+                }\n+            }, ActionLink.ActionType.RECONCILIATION_PULL, IdRepoEntitlement.TASK_EXECUTE);\n+\n+            builder.includes(STATUS);\n+        }\n+\n         add(builder.build(\"objs\"));\n \n         arrows = new WebMarkupContainer(\"arrows\");\n@@ -177,7 +242,7 @@ public void onClick(final AjaxRequestTarget target, final ConnObjectTO modelObje\n \n             @Override\n             public void onClick(final AjaxRequestTarget target) {\n-                final List<ConnObjectTO> listOfItems = reloadItems(resource.getKey(), anyType, nextPageCookie, null);\n+                List<ConnObjectTO> listOfItems = reloadItems(resource.getKey(), anyType, nextPageCookie, getFiql());\n                 target.add(arrows);\n                 send(ConnObjectListViewPanel.this, Broadcast.DEPTH, new ListViewReload<>(listOfItems, target));\n             }\n@@ -193,11 +258,8 @@ public boolean isVisible() {\n     public void onEvent(final IEvent<?> event) {\n         if (event.getPayload() instanceof SearchClausePanel.SearchEvent) {\n             this.nextPageCookie = null;\n-            final AjaxRequestTarget target = SearchClausePanel.SearchEvent.class.cast(event.getPayload()).getTarget();\n-            List<ConnObjectTO> listOfItems = reloadItems(resource.getKey(), anyType, null, SearchUtils.buildFIQL(\n-                    ConnObjectListViewPanel.this.searchPanel.getModel().getObject(),\n-                    SyncopeClient.getConnObjectTOFiqlSearchConditionBuilder(),\n-                    ConnObjectListViewPanel.this.searchPanel.getAvailableSchemaTypes()));\n+            AjaxRequestTarget target = SearchClausePanel.SearchEvent.class.cast(event.getPayload()).getTarget();\n+            List<ConnObjectTO> listOfItems = reloadItems(resource.getKey(), anyType, null, getFiql());\n             target.add(arrows);\n             send(ConnObjectListViewPanel.this, Broadcast.DEPTH, new ListViewReload<>(listOfItems, target));\n         } else {\n@@ -207,6 +269,14 @@ public void onEvent(final IEvent<?> event) {\n \n     protected abstract void viewConnObject(ConnObjectTO connObjectTO, AjaxRequestTarget target);\n \n+    protected abstract void pullConnObject(\n+            String connObjectTO,\n+            AjaxRequestTarget target,\n+            String resource,\n+            String anyType,\n+            boolean isOnSyncope,\n+            PageReference pageRef);\n+\n     private List<ConnObjectTO> reloadItems(\n             final String resource,\n             final String anyType,\n@@ -235,9 +305,16 @@ private AbstractSearchPanel getSearchPanel(final String id, final String anyType\n \n         AnyTypeKind anyTypeKind = anyType.equals(SyncopeConstants.REALM_ANYTYPE)\n                 ? AnyTypeKind.ANY_OBJECT\n-                : anyTypeRestClient.read(anyType).getKind();\n+                : AnyTypeRestClient.read(anyType).getKind();\n \n         return new ConnObjectSearchPanel.Builder(resource, anyTypeKind, anyType,\n                 new ListModel<>(clauses)).required(true).enableSearch().build(id);\n     }\n+\n+    private String getFiql() {\n+        return SearchUtils.buildFIQL(\n+                searchPanel.getModel().getObject(),\n+                SyncopeClient.getConnObjectTOFiqlSearchConditionBuilder(),\n+                searchPanel.getAvailableSchemaTypes());\n+    }\n }"},{"sha":"709e4a3745ff447898d955d64bef98808a535a47","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/panels/ConnObjects.java","status":"modified","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/263cce7fc88c8c46da7f392d2e1e66251b0c0279/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/263cce7fc88c8c46da7f392d2e1e66251b0c0279/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FConnObjects.java?ref=263cce7fc88c8c46da7f392d2e1e66251b0c0279","patch":"@@ -22,12 +22,14 @@\n import java.util.stream.Collectors;\n import org.apache.syncope.client.ui.commons.Constants;\n import org.apache.syncope.client.console.rest.AnyTypeRestClient;\n+import org.apache.syncope.client.console.status.ReconTaskPanel;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.ui.commons.panels.ModalPanel;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n import org.apache.syncope.common.lib.to.ProvisionTO;\n+import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.to.ResourceTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.wicket.PageReference;\n@@ -124,5 +126,30 @@ protected void viewConnObject(final ConnObjectTO connObjectTO, final AjaxRequest\n                     target);\n         }\n \n+        @Override\n+        protected void pullConnObject(\n+                final String connObjectKeyValue,\n+                final AjaxRequestTarget target,\n+                final String resource,\n+                final String anyType,\n+                final boolean isOnSyncope,\n+                final PageReference pageRef) {\n+            anyTypes.setEnabled(false);\n+            target.add(anyTypes);\n+\n+            connObjects.next(\"PULL \" + resource,\n+                    new ReconTaskPanel(\n+                            resource,\n+                            new PullTaskTO(),\n+                            anyType,\n+                            null,\n+                            connObjectKeyValue,\n+                            isOnSyncope,\n+                            connObjects,\n+                            pageRef),\n+                    target\n+            );\n+        }\n+\n     }\n }"},{"sha":"31c0af043d2a2b88d45b0f6ff5f27832377021a8","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/status/AnyStatusDirectoryPanel.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/263cce7fc88c8c46da7f392d2e1e66251b0c0279/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/263cce7fc88c8c46da7f392d2e1e66251b0c0279/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FAnyStatusDirectoryPanel.java?ref=263cce7fc88c8c46da7f392d2e1e66251b0c0279","patch":"@@ -213,6 +213,7 @@ public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n                                     new PushTaskTO(),\n                                     anyTO.getType(),\n                                     anyTO.getKey(),\n+                                    true,\n                                     multiLevelPanelRef,\n                                     pageRef),\n                             target);\n@@ -233,6 +234,7 @@ public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n                                     new PullTaskTO(),\n                                     anyTO.getType(),\n                                     anyTO.getKey(),\n+                                    true,\n                                     multiLevelPanelRef,\n                                     pageRef),\n                             target);"},{"sha":"c1ff9a9a436d91e9a3324d753b504878d0145bc0","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/status/ReconTaskPanel.java","status":"modified","additions":41,"deletions":1,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/263cce7fc88c8c46da7f392d2e1e66251b0c0279/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FReconTaskPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/263cce7fc88c8c46da7f392d2e1e66251b0c0279/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FReconTaskPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FReconTaskPanel.java?ref=263cce7fc88c8c46da7f392d2e1e66251b0c0279","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.status;\n \n+import java.util.Comparator;\n import java.util.List;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;\n@@ -26,21 +27,25 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.ImplementationRestClient;\n+import org.apache.syncope.client.console.rest.RealmRestClient;\n import org.apache.syncope.client.console.rest.ReconciliationRestClient;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxDropDownChoicePanel;\n import org.apache.syncope.client.ui.commons.markup.html.form.AjaxPalettePanel;\n+import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.ProvisioningTaskTO;\n import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.to.PushTaskTO;\n import org.apache.syncope.common.lib.types.IdMImplementationType;\n+import org.apache.syncope.common.lib.to.RealmTO;\n import org.apache.syncope.common.lib.types.MatchingRule;\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n import org.apache.syncope.common.rest.api.beans.ReconQuery;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink;\n+import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.model.CompoundPropertyModel;\n import org.apache.wicket.model.IModel;\n@@ -83,12 +88,45 @@ public ReconTaskPanel(\n             final ProvisioningTaskTO taskTO,\n             final String anyType,\n             final String anyKey,\n+            final boolean isOnSyncope,\n+            final MultilevelPanel multiLevelPanelRef,\n+            final PageReference pageRef) {\n+        this(resource, taskTO, anyType, anyKey, null, isOnSyncope, multiLevelPanelRef, pageRef);\n+    }\n+\n+    public ReconTaskPanel(\n+            final String resource,\n+            final ProvisioningTaskTO taskTO,\n+            final String anyType,\n+            final String anyKey,\n+            final String connObjectKeyValue,\n+            final boolean isOnSyncope,\n             final MultilevelPanel multiLevelPanelRef,\n             final PageReference pageRef) {\n \n         Form<ProvisioningTaskTO> form = new Form<>(\"form\", new CompoundPropertyModel<>(taskTO));\n         add(form);\n \n+        if (taskTO instanceof PushTaskTO) {\n+            form.add(new Label(\"realm\", \"\"));\n+        } else {\n+            AjaxDropDownChoicePanel<String> realm = new AjaxDropDownChoicePanel<>(\n+                    \"realm\", \"destinationRealm\", new PropertyModel<>(taskTO, \"destinationRealm\"), false);\n+            form.add(realm);\n+            realm.addRequiredLabel();\n+            realm.setOutputMarkupId(true);\n+\n+            if (isOnSyncope) {\n+                realm.getField().setModelObject(SyncopeConstants.ROOT_REALM);\n+                realm.setVisible(false);\n+            } else {\n+                realm.setChoices(RealmRestClient.list().stream().\n+                        sorted(Comparator.comparing(RealmTO::getName)).\n+                        map(RealmTO::getFullPath).\n+                        collect(Collectors.toList()));\n+            }\n+        }\n+\n         AjaxPalettePanel<String> actions = new AjaxPalettePanel.Builder<String>().\n                 setAllowMoveAll(true).setAllowOrder(true).\n                 build(\"actions\",\n@@ -135,7 +173,9 @@ public ReconTaskPanel(\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target) {\n-                ReconQuery reconQuery = new ReconQuery.Builder(anyType, resource).anyKey(anyKey).build();\n+                ReconQuery reconQuery = new ReconQuery.Builder(anyType, resource).\n+                        anyKey(anyKey).\n+                        connObjectKeyValue(connObjectKeyValue).build();\n                 try {\n                     if (taskTO instanceof PushTaskTO) {\n                         ReconciliationRestClient.push(reconQuery, (PushTaskTO) form.getModelObject());"},{"sha":"2ec8b9d79db13806f82cd5cb28fd3806c9a6b560","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/status/ResourceStatusDirectoryPanel.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/263cce7fc88c8c46da7f392d2e1e66251b0c0279/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/263cce7fc88c8c46da7f392d2e1e66251b0c0279/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FResourceStatusDirectoryPanel.java?ref=263cce7fc88c8c46da7f392d2e1e66251b0c0279","patch":"@@ -143,6 +143,7 @@ public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n                                 new PushTaskTO(),\n                                 type,\n                                 bean.getKey(),\n+                                true,\n                                 multiLevelPanelRef,\n                                 pageRef),\n                         target);\n@@ -168,6 +169,7 @@ public void onClick(final AjaxRequestTarget target, final StatusBean bean) {\n                                 new PullTaskTO(),\n                                 type,\n                                 bean.getKey(),\n+                                true,\n                                 multiLevelPanelRef,\n                                 pageRef),\n                         target);"},{"sha":"7ec28d6de7bdd8953a6b2d729d4223b0fb587b63","filename":"client/idm/console/src/main/resources/org/apache/syncope/client/console/status/ReconTaskPanel.html","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/263cce7fc88c8c46da7f392d2e1e66251b0c0279/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FReconTaskPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/263cce7fc88c8c46da7f392d2e1e66251b0c0279/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FReconTaskPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FReconTaskPanel.html?ref=263cce7fc88c8c46da7f392d2e1e66251b0c0279","patch":"@@ -22,6 +22,7 @@\n       <div class=\"form-group form-palette\">\n         <span wicket:id=\"actions\">[actions]</span>\n       </div>\n+      <div class=\"form-group\"><span wicket:id=\"realm\">[realm]</span></div>\n       <div class=\"form-group\"><span wicket:id=\"matchingRule\">[matchingRule]</span></div>\n       <div class=\"form-group\"><span wicket:id=\"unmatchingRule\">[unmatchingRule]</span></div>\n       <div class=\"form-group\"><span wicket:id=\"performCreate\">[performCreate]</span></div>"},{"sha":"40ceae5f80e014164ddb843910ce08756eb11d1f","filename":"client/idrepo/common-ui/src/main/java/org/apache/syncope/client/ui/commons/status/StatusUtils.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/263cce7fc88c8c46da7f392d2e1e66251b0c0279/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FStatusUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/263cce7fc88c8c46da7f392d2e1e66251b0c0279/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FStatusUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fcommon-ui%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fui%2Fcommons%2Fstatus%2FStatusUtils.java?ref=263cce7fc88c8c46da7f392d2e1e66251b0c0279","patch":"@@ -141,7 +141,7 @@ public static Label getStatusImage(final String componentId, final Status status\n             case CREATED:\n                 alt = \"created icon\";\n                 title = \"Created\";\n-                clazz = Constants.UNDEFINED_ICON;\n+                clazz = Constants.CREATED_ICON;\n                 break;\n \n             case SUSPENDED:\n@@ -203,7 +203,7 @@ public static Label getStatusImage(final String componentId, final ExecStatus st\n         return getLabel(componentId, alt, title, clazz);\n     }\n \n-    private static Label getLabel(final String componentId, final String alt, final String title, final String clazz) {\n+    public static Label getLabel(final String componentId, final String alt, final String title, final String clazz) {\n         return new Label(componentId, StringUtils.EMPTY) {\n \n             private static final long serialVersionUID = 4755868673082976208L;"},{"sha":"bc3f667e999d6e38142a2a1984429d7743f70b2d","filename":"client/idrepo/console/src/main/resources/META-INF/resources/css/syncopeConsole.scss","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/263cce7fc88c8c46da7f392d2e1e66251b0c0279/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.scss","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/263cce7fc88c8c46da7f392d2e1e66251b0c0279/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.scss","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2FMETA-INF%2Fresources%2Fcss%2FsyncopeConsole.scss?ref=263cce7fc88c8c46da7f392d2e1e66251b0c0279","patch":"@@ -43,6 +43,17 @@ body {\n   background-image: linear-gradient($background_console_darker, $background_console_dark);\n }\n \n+.table {\n+  > tbody {\n+    > tr {\n+      > td {\n+        &.list_view_panel_labels {\n+          vertical-align: middle;\n+        }\n+      }\n+    }\n+  }\n+}\n \n \n /* Login"},{"sha":"400b2a017075ed8caa0dcc017380ab281a1d9804","filename":"client/idrepo/console/src/main/resources/org/apache/syncope/client/console/panels/ListViewPanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/263cce7fc88c8c46da7f392d2e1e66251b0c0279/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/263cce7fc88c8c46da7f392d2e1e66251b0c0279/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidrepo%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.html?ref=263cce7fc88c8c46da7f392d2e1e66251b0c0279","patch":"@@ -45,7 +45,7 @@ <h3 class=\"box-title\">\n                     <td id=\"check\">\n                       <input type=\"checkbox\" wicket:id=\"check\"/>\n                     </td>\n-                    <td wicket:id=\"fields\" class=\"col_width\"><span wicket:id=\"field\"/></td>\n+                    <td wicket:id=\"fields\" class=\"col_width list_view_panel_labels\"><span wicket:id=\"field\"/></td>\n                     <td>\n                       <div class=\"listview-actions\">\n                         <span wicket:id=\"actions\">[actions]</span>"},{"sha":"e8a9cce78778ab21cfc0fc83c0037a8f2f674539","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/utils/ConnObjectUtils.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/263cce7fc88c8c46da7f392d2e1e66251b0c0279/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/263cce7fc88c8c46da7f392d2e1e66251b0c0279/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java?ref=263cce7fc88c8c46da7f392d2e1e66251b0c0279","patch":"@@ -42,6 +42,7 @@\n import org.apache.syncope.core.persistence.api.dao.UserDAO;\n import org.apache.syncope.core.persistence.api.entity.user.User;\n import org.apache.syncope.core.persistence.api.dao.RealmDAO;\n+import org.apache.syncope.core.persistence.api.entity.AnyTypeClass;\n import org.apache.syncope.core.persistence.api.entity.AnyUtilsFactory;\n import org.apache.syncope.core.persistence.api.entity.Realm;\n import org.apache.syncope.core.persistence.api.entity.policy.PasswordPolicy;\n@@ -291,8 +292,11 @@ public <U extends AnyUR> U getAnyUR(\n             default:\n         }\n \n-        // SYNCOPE-1343, remove null or empty values from the patch plain attributes\n         if (anyUR != null) {\n+            // ensure not to include incidental realm changes in the patch\n+            anyUR.setRealm(null);\n+\n+            // SYNCOPE-1343, remove null or empty values from the patch plain attributes\n             AnyOperations.cleanEmptyAttrs(updated, anyUR);\n         }\n         return anyUR;\n@@ -303,6 +307,8 @@ private <T extends AnyTO> T getAnyTOFromConnObject(\n \n         T anyTO = anyUtilsFactory.getInstance(provision.getAnyType().getKind()).newAnyTO();\n         anyTO.setType(provision.getAnyType().getKey());\n+        anyTO.getAuxClasses().addAll(provision.getAuxClasses().stream().\n+                map(AnyTypeClass::getKey).collect(Collectors.toList()));\n \n         // 1. fill with data from connector object\n         anyTO.setRealm(pullTask.getDestinationRealm().getFullPath());"}]}