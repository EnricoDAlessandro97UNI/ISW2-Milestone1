{"sha":"0438111af1088172eeb05c61d571dae2b80406b1","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjA0MzgxMTFhZjEwODgxNzJlZWIwNWM2MWQ1NzFkYWUyYjgwNDA2YjE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-03-22T13:55:04Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2013-03-22T13:55:04Z"},"message":"[SYNCOPE-341] Merge from 1_0_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1459775 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"91a065a8119fa296a5892d0a04b41439910e9ba4","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/91a065a8119fa296a5892d0a04b41439910e9ba4"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/0438111af1088172eeb05c61d571dae2b80406b1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0438111af1088172eeb05c61d571dae2b80406b1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0438111af1088172eeb05c61d571dae2b80406b1","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0438111af1088172eeb05c61d571dae2b80406b1/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"17ec66673c565e62319fb0408bd424e8440e1ad5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/17ec66673c565e62319fb0408bd424e8440e1ad5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/17ec66673c565e62319fb0408bd424e8440e1ad5"}],"stats":{"total":275,"additions":135,"deletions":140},"files":[{"sha":"d864a09bf053611c3bf621285ecd687114c4005b","filename":"console/src/main/java/org/apache/syncope/console/pages/DisplayAttributesModalPage.java","status":"modified","additions":83,"deletions":109,"changes":192,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0438111af1088172eeb05c61d571dae2b80406b1/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0438111af1088172eeb05c61d571dae2b80406b1/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.java?ref=0438111af1088172eeb05c61d571dae2b80406b1","patch":"@@ -26,10 +26,8 @@\n import java.util.Map;\n import org.apache.commons.lang.ArrayUtils;\n import org.apache.syncope.common.to.UserTO;\n-import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.console.commons.Constants;\n import org.apache.syncope.console.commons.PreferenceManager;\n-import org.apache.syncope.console.rest.SchemaRestClient;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n@@ -52,6 +50,7 @@\n /**\n  * Modal window with Display attributes form.\n  */\n+@SuppressWarnings({\"unchecked\", \"rawtypes\"})\n public class DisplayAttributesModalPage extends BaseModalPage {\n \n     private static final long serialVersionUID = -4274117450918385110L;\n@@ -70,100 +69,75 @@ public class DisplayAttributesModalPage extends BaseModalPage {\n     @SpringBean\n     private PreferenceManager prefMan;\n \n-    /**\n-     * Schema rest client.\n-     */\n-    @SpringBean\n-    private SchemaRestClient schemaRestClient;\n+    private final List<String> selectedDetails;\n \n-    final private IModel<List<String>> dnames = new LoadableDetachableModel<List<String>>() {\n+    private final List<String> selectedSchemas;\n \n-        private static final long serialVersionUID = 5275935387613157437L;\n+    private final List<String> selectedDerSchemas;\n \n-        @Override\n-        protected List<String> load() {\n+    private final List<String> selectedVirSchemas;\n \n-            final List<String> details = new ArrayList<String>();\n+    public DisplayAttributesModalPage(final PageReference pageRef, final ModalWindow window,\n+            final List<String> schemaNames, final List<String> dSchemaNames, final List<String> vSchemaNames) {\n \n-            Class<?> clazz = UserTO.class;\n+        super();\n \n-            // loop on class and all superclasses searching for field\n-            while (clazz != null && clazz != Object.class) {\n-                for (Field field : clazz.getDeclaredFields()) {\n-                    if (!ArrayUtils.contains(ATTRIBUTES_TO_HIDE, field.getName())) {\n-                        details.add(field.getName());\n-                    }\n-                }\n-                clazz = clazz.getSuperclass();\n-            }\n+        final IModel<List<String>> fnames = new LoadableDetachableModel<List<String>>() {\n \n-            Collections.reverse(details);\n-            return details;\n-        }\n-    };\n+            private static final long serialVersionUID = 5275935387613157437L;\n \n-    final private IModel<List<String>> names = new LoadableDetachableModel<List<String>>() {\n+            @Override\n+            protected List<String> load() {\n \n-        private static final long serialVersionUID = 5275935387613157437L;\n+                final List<String> details = new ArrayList<String>();\n \n-        @Override\n-        protected List<String> load() {\n+                Class<?> clazz = UserTO.class;\n \n-            List<String> schemas = schemaRestClient.getSchemaNames(AttributableType.USER);\n+                // loop on class and all superclasses searching for field\n+                while (clazz != null && clazz != Object.class) {\n+                    for (Field field : clazz.getDeclaredFields()) {\n+                        if (!ArrayUtils.contains(ATTRIBUTES_TO_HIDE, field.getName())) {\n+                            details.add(field.getName());\n+                        }\n+                    }\n+                    clazz = clazz.getSuperclass();\n+                }\n \n-            if (schemas == null) {\n-                schemas = new ArrayList<String>();\n+                Collections.reverse(details);\n+                return details;\n             }\n+        };\n \n-            return schemas;\n-        }\n-    };\n-\n-    final private IModel<List<String>> dsnames = new LoadableDetachableModel<List<String>>() {\n-\n-        private static final long serialVersionUID = 5275935387613157437L;\n-\n-        @Override\n-        protected List<String> load() {\n+        final IModel<List<String>> names = new LoadableDetachableModel<List<String>>() {\n \n-            List<String> schemas = schemaRestClient.getDerivedSchemaNames(AttributableType.USER);\n+            private static final long serialVersionUID = 5275935387613157437L;\n \n-            if (schemas == null) {\n-                schemas = new ArrayList<String>();\n+            @Override\n+            protected List<String> load() {\n+                return schemaNames;\n             }\n+        };\n \n-            return schemas;\n-        }\n-    };\n-\n-    final private IModel<List<String>> vsnames = new LoadableDetachableModel<List<String>>() {\n-\n-        private static final long serialVersionUID = 5275935387613157437L;\n-\n-        @Override\n-        protected List<String> load() {\n+        final IModel<List<String>> dsnames = new LoadableDetachableModel<List<String>>() {\n \n-            List<String> schemas = schemaRestClient.getVirtualSchemaNames(AttributableType.USER);\n+            private static final long serialVersionUID = 5275935387613157437L;\n \n-            if (schemas == null) {\n-                schemas = new ArrayList<String>();\n+            @Override\n+            protected List<String> load() {\n+                return dSchemaNames;\n             }\n+        };\n \n-            return schemas;\n-        }\n-    };\n+        final IModel<List<String>> vsnames = new LoadableDetachableModel<List<String>>() {\n \n-    private final List<String> selectedDetails;\n+            private static final long serialVersionUID = 5275935387613157437L;\n \n-    private final List<String> selectedSchemas;\n-\n-    private final List<String> selectedVirSchemas;\n-\n-    private final List<String> selectedDerSchemas;\n+            @Override\n+            protected List<String> load() {\n+                return vSchemaNames;\n+            }\n+        };\n \n-    public DisplayAttributesModalPage(final PageReference pageRef, final ModalWindow window) {\n-\n-        super();\n \n         final Form form = new Form(\"form\");\n         form.setModel(new CompoundPropertyModel(this));\n@@ -172,26 +146,31 @@ public DisplayAttributesModalPage(final PageReference pageRef, final ModalWindow\n \n         selectedSchemas = prefMan.getList(getRequest(), Constants.PREF_USERS_ATTRIBUTES_VIEW);\n \n-        selectedVirSchemas = prefMan.getList(getRequest(), Constants.PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW);\n-\n         selectedDerSchemas = prefMan.getList(getRequest(), Constants.PREF_USERS_DERIVED_ATTRIBUTES_VIEW);\n \n+        selectedVirSchemas = prefMan.getList(getRequest(), Constants.PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW);\n+\n         final CheckGroup dgroup = new CheckGroup(\"dCheckGroup\", new PropertyModel(this, \"selectedDetails\"));\n         form.add(dgroup);\n \n-        final ListView<String> details = new ListView<String>(\"details\", dnames) {\n+        final ListView<String> details = new ListView<String>(\"details\", fnames) {\n \n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n-            protected void populateItem(ListItem<String> item) {\n+            protected void populateItem(final ListItem<String> item) {\n                 item.add(new Check(\"dcheck\", item.getModel()));\n                 item.add(new Label(\"dname\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n             }\n         };\n         dgroup.add(details);\n \n-        if (names.getObject() != null && !names.getObject().isEmpty()) {\n+        if (names.getObject() == null || names.getObject().isEmpty()) {\n+            final Fragment fragment = new Fragment(\"schemas\", \"emptyFragment\", form);\n+            form.add(fragment);\n+\n+            selectedSchemas.clear();\n+        } else {\n             final Fragment fragment = new Fragment(\"schemas\", \"sfragment\", form);\n             form.add(fragment);\n \n@@ -209,61 +188,56 @@ protected void populateItem(ListItem<String> item) {\n                 }\n             };\n             sgroup.add(schemas);\n-        } else {\n-            final Fragment fragment = new Fragment(\"schemas\", \"emptyFragment\", form);\n-            form.add(fragment);\n-\n-            selectedSchemas.clear();\n         }\n \n-        if (vsnames.getObject() != null && !vsnames.getObject().isEmpty()) {\n-            final Fragment fragment = new Fragment(\"vschemas\", \"vsfragment\", form);\n+        if (dsnames.getObject() == null || dsnames.getObject().isEmpty()) {\n+            final Fragment fragment = new Fragment(\"dschemas\", \"emptyFragment\", form);\n             form.add(fragment);\n \n-            final CheckGroup vsgroup = new CheckGroup(\"vsCheckGroup\", new PropertyModel(this, \"selectedVirSchemas\"));\n-            fragment.add(vsgroup);\n+            selectedDerSchemas.clear();\n+        } else {\n+            final Fragment fragment = new Fragment(\"dschemas\", \"dsfragment\", form);\n+            form.add(fragment);\n \n-            final ListView<String> virSchemas = new ListView<String>(\"virSchemas\", vsnames) {\n+            final CheckGroup dsgroup = new CheckGroup(\"dsCheckGroup\", new PropertyModel(this, \"selectedDerSchemas\"));\n+            fragment.add(dsgroup);\n+\n+            final ListView<String> derSchemas = new ListView<String>(\"derSchemas\", dsnames) {\n \n                 private static final long serialVersionUID = 9101744072914090143L;\n \n                 @Override\n                 protected void populateItem(ListItem<String> item) {\n-                    item.add(new Check(\"vscheck\", item.getModel()));\n-                    item.add(new Label(\"vsname\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n+                    item.add(new Check(\"dscheck\", item.getModel()));\n+                    item.add(new Label(\"dsname\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n                 }\n             };\n-            vsgroup.add(virSchemas);\n-        } else {\n+            dsgroup.add(derSchemas);\n+        }\n+\n+        if (vsnames.getObject() == null || vsnames.getObject().isEmpty()) {\n             final Fragment fragment = new Fragment(\"vschemas\", \"emptyFragment\", form);\n             form.add(fragment);\n \n             selectedVirSchemas.clear();\n-        }\n-\n-        if (dsnames.getObject() != null && !dsnames.getObject().isEmpty()) {\n-            final Fragment fragment = new Fragment(\"dschemas\", \"dsfragment\", form);\n+        } else {\n+            final Fragment fragment = new Fragment(\"vschemas\", \"vsfragment\", form);\n             form.add(fragment);\n \n-            final CheckGroup dsgroup = new CheckGroup(\"dsCheckGroup\", new PropertyModel(this, \"selectedDerSchemas\"));\n-            fragment.add(dsgroup);\n+            final CheckGroup vsgroup = new CheckGroup(\"vsCheckGroup\", new PropertyModel(this, \"selectedVirSchemas\"));\n+            fragment.add(vsgroup);\n \n-            final ListView<String> derSchemas = new ListView<String>(\"derSchemas\", dsnames) {\n+            final ListView<String> virSchemas = new ListView<String>(\"virSchemas\", vsnames) {\n \n                 private static final long serialVersionUID = 9101744072914090143L;\n \n                 @Override\n                 protected void populateItem(ListItem<String> item) {\n-                    item.add(new Check(\"dscheck\", item.getModel()));\n-                    item.add(new Label(\"dsname\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n+                    item.add(new Check(\"vscheck\", item.getModel()));\n+                    item.add(new Label(\"vsname\", new ResourceModel(item.getModelObject(), item.getModelObject())));\n                 }\n             };\n-            dsgroup.add(derSchemas);\n-        } else {\n-            final Fragment fragment = new Fragment(\"dschemas\", \"emptyFragment\", form);\n-            form.add(fragment);\n-\n-            selectedDerSchemas.clear();\n+            vsgroup.add(virSchemas);\n         }\n \n         final AjaxButton submit = new IndicatingAjaxButton(\"submit\", new ResourceModel(\"submit\")) {\n@@ -272,8 +246,8 @@ protected void populateItem(ListItem<String> item) {\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                if (selectedDetails.size() + selectedSchemas.size() + selectedVirSchemas.size()\n-                        + selectedDerSchemas.size() > MAX_SELECTIONS) {\n+                if (selectedDetails.size() + selectedSchemas.size() + selectedVirSchemas.size() + selectedDerSchemas.size()\n+                        > MAX_SELECTIONS) {\n \n                     error(getString(\"tooManySelections\"));\n                     onError(target, form);\n@@ -284,10 +258,10 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n \n                     prefs.put(Constants.PREF_USERS_ATTRIBUTES_VIEW, selectedSchemas);\n \n-                    prefs.put(Constants.PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW, selectedVirSchemas);\n-\n                     prefs.put(Constants.PREF_USERS_DERIVED_ATTRIBUTES_VIEW, selectedDerSchemas);\n \n+                    prefs.put(Constants.PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW, selectedVirSchemas);\n+\n                     prefMan.setList(getRequest(), getResponse(), prefs);\n \n                     ((BasePage) pageRef.getPage()).setModalResult(true);"},{"sha":"e682897a32fc61e1e5ee66c0e4f9ee6c17512c57","filename":"console/src/main/java/org/apache/syncope/console/pages/Users.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0438111af1088172eeb05c61d571dae2b80406b1/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0438111af1088172eeb05c61d571dae2b80406b1/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FUsers.java?ref=0438111af1088172eeb05c61d571dae2b80406b1","patch":"@@ -105,25 +105,25 @@ public Page createPage() {\n         final ClearIndicatingAjaxButton searchButton =\n                 new ClearIndicatingAjaxButton(\"search\", new ResourceModel(\"search\"), getPageReference()) {\n \n-                    private static final long serialVersionUID = -958724007591692537L;\n+            private static final long serialVersionUID = -958724007591692537L;\n \n-                    @Override\n-                    protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n-                        final NodeCond searchCond = searchPanel.buildSearchCond();\n-                        LOG.debug(\"Node condition \" + searchCond);\n+            @Override\n+            protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> form) {\n+                final NodeCond searchCond = searchPanel.buildSearchCond();\n+                LOG.debug(\"Node condition \" + searchCond);\n \n-                        doSearch(target, searchCond, searchResult);\n+                doSearch(target, searchCond, searchResult);\n \n-                        Session.get().getFeedbackMessages().clear();\n-                        target.add(searchPanel.getSearchFeedback());\n-                    }\n+                Session.get().getFeedbackMessages().clear();\n+                target.add(searchPanel.getSearchFeedback());\n+            }\n \n-                    @Override\n-                    protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n+            @Override\n+            protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n \n-                        target.add(searchPanel.getSearchFeedback());\n-                    }\n-                };\n+                target.add(searchPanel.getSearchFeedback());\n+            }\n+        };\n \n         searchForm.add(searchButton);\n         searchForm.setDefaultButton(searchButton);"},{"sha":"e484d706a2880c5caf6efcd08029d2171d3c5a29","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AbstractSearchResultPanel.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0438111af1088172eeb05c61d571dae2b80406b1/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0438111af1088172eeb05c61d571dae2b80406b1/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchResultPanel.java?ref=0438111af1088172eeb05c61d571dae2b80406b1","patch":"@@ -194,11 +194,13 @@ protected <T extends AbstractAttributableTO> AbstractSearchResultPanel(final Str\n         container.setOutputMarkupId(true);\n         add(container);\n \n+        rows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_USERS_PAGINATOR_ROWS);\n+    }\n+\n+    protected void initResultTable() {\n         // ---------------------------\n         // Result table initialization\n         // ---------------------------\n-        // preferences and container must be not null to use it ...\n-        rows = prefMan.getPaginatorRows(getRequest(), Constants.PREF_USERS_PAGINATOR_ROWS);\n         updateResultTable(false);\n         // ---------------------------\n "},{"sha":"9cea3409b126be3af3339ef94833fc4259c860b8","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/RoleSearchResultPanel.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0438111af1088172eeb05c61d571dae2b80406b1/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0438111af1088172eeb05c61d571dae2b80406b1/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleSearchResultPanel.java?ref=0438111af1088172eeb05c61d571dae2b80406b1","patch":"@@ -56,6 +56,7 @@ public <T extends AbstractAttributableTO> RoleSearchResultPanel(final String id,\n             final AbstractAttributableRestClient restClient) {\n \n         super(id, filtered, searchCond, callerRef, restClient);\n+        initResultTable();\n     }\n \n     @Override"},{"sha":"0c99fd150bccd77e6501b8aea77689036066944b","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/RoleTabPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0438111af1088172eeb05c61d571dae2b80406b1/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0438111af1088172eeb05c61d571dae2b80406b1/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FRoleTabPanel.java?ref=0438111af1088172eeb05c61d571dae2b80406b1","patch":"@@ -87,4 +87,4 @@ protected void onSubmitInternal(final AjaxRequestTarget target, final Form<?> fo\n         form.add(userListContainer);\n         add(form);\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"49280a4d547f28e6a3358cf19bfc83eeb0b54584","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/SelectOnlyUserSearchResultPanel.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0438111af1088172eeb05c61d571dae2b80406b1/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSelectOnlyUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0438111af1088172eeb05c61d571dae2b80406b1/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSelectOnlyUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FSelectOnlyUserSearchResultPanel.java?ref=0438111af1088172eeb05c61d571dae2b80406b1","patch":"@@ -54,12 +54,6 @@ public <T extends AbstractAttributableTO> SelectOnlyUserSearchResultPanel(final\n \n         this.pageRef = pageRef;\n         this.window = window;\n-\n-        container.get(\"reload\").setEnabled(false);\n-        container.get(\"reload\").setVisible(false);\n-\n-        container.get(\"displayAttrsLink\").setEnabled(false);\n-        container.get(\"displayAttrsLink\").setVisible(false);\n     }\n \n     @Override"},{"sha":"2db95b4e3c66f65b529ec082d04612e00443f942","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/UserSearchResultPanel.java","status":"modified","additions":31,"deletions":5,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0438111af1088172eeb05c61d571dae2b80406b1/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0438111af1088172eeb05c61d571dae2b80406b1/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FUserSearchResultPanel.java?ref=0438111af1088172eeb05c61d571dae2b80406b1","patch":"@@ -27,6 +27,7 @@\n import org.apache.syncope.common.search.NodeCond;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.SchemaType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n import org.apache.syncope.console.commons.Constants;\n@@ -35,6 +36,7 @@\n import org.apache.syncope.console.pages.ResultStatusModalPage;\n import org.apache.syncope.console.pages.StatusModalPage;\n import org.apache.syncope.console.rest.AbstractAttributableRestClient;\n+import org.apache.syncope.console.rest.SchemaRestClient;\n import org.apache.syncope.console.rest.UserRestClient;\n import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.ActionColumn;\n import org.apache.syncope.console.wicket.extensions.markup.html.repeater.data.table.AttrColumn;\n@@ -52,6 +54,7 @@\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.ResourceModel;\n+import org.apache.wicket.spring.injection.annot.SpringBean;\n import org.springframework.util.ReflectionUtils;\n \n public class UserSearchResultPanel extends AbstractSearchResultPanel {\n@@ -60,10 +63,26 @@ public class UserSearchResultPanel extends AbstractSearchResultPanel {\n \n     private final static String PAGEID = \"Users\";\n \n+    @SpringBean\n+    private SchemaRestClient schemaRestClient;\n+\n+    private final List<String> schemaNames;\n+\n+    private final List<String> dSchemaNames;\n+\n+    private final List<String> vSchemaNames;\n+\n     public <T extends AbstractAttributableTO> UserSearchResultPanel(final String id, final boolean filtered,\n-            final NodeCond searchCond, final PageReference callerRef, final AbstractAttributableRestClient restClient) {\n+            final NodeCond searchCond, final PageReference callerRef,\n+            final AbstractAttributableRestClient restClient) {\n \n         super(id, filtered, searchCond, callerRef, restClient);\n+\n+        this.schemaNames = schemaRestClient.getSchemaNames(AttributableType.USER);\n+        this.dSchemaNames = schemaRestClient.getDerivedSchemaNames(AttributableType.USER);\n+        this.vSchemaNames = schemaRestClient.getVirtualSchemaNames(AttributableType.USER);\n+\n+        initResultTable();\n     }\n \n     @Override\n@@ -85,15 +104,21 @@ protected List<IColumn<AbstractAttributableTO, String>> getColumns() {\n         }\n \n         for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_ATTRIBUTES_VIEW)) {\n-            columns.add(new AttrColumn(name, SchemaType.NORMAL));\n+            if (schemaNames.contains(name)) {\n+                columns.add(new AttrColumn(name, SchemaType.NORMAL));\n+            }\n         }\n \n         for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_DERIVED_ATTRIBUTES_VIEW)) {\n-            columns.add(new AttrColumn(name, SchemaType.DERIVED));\n+            if (dSchemaNames.contains(name)) {\n+                columns.add(new AttrColumn(name, SchemaType.DERIVED));\n+            }\n         }\n \n         for (String name : prefMan.getList(getRequest(), Constants.PREF_USERS_VIRTUAL_ATTRIBUTES_VIEW)) {\n-            columns.add(new AttrColumn(name, SchemaType.VIRTUAL));\n+            if (vSchemaNames.contains(name)) {\n+                columns.add(new AttrColumn(name, SchemaType.VIRTUAL));\n+            }\n         }\n \n         // Add defaults in case of no selection\n@@ -206,7 +231,8 @@ public void onClick(final AjaxRequestTarget target) {\n \n                             @Override\n                             public Page createPage() {\n-                                return new DisplayAttributesModalPage(page.getPageReference(), displaymodal);\n+                                return new DisplayAttributesModalPage(page.getPageReference(), displaymodal,\n+                                        schemaNames, dSchemaNames, vSchemaNames);\n                             }\n                         });\n "},{"sha":"6c97618801c69806d0ccd5d54b0793f4b20c1c96","filename":"console/src/main/java/org/apache/syncope/console/rest/SchemaRestClient.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0438111af1088172eeb05c61d571dae2b80406b1/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0438111af1088172eeb05c61d571dae2b80406b1/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FSchemaRestClient.java?ref=0438111af1088172eeb05c61d571dae2b80406b1","patch":"@@ -120,7 +120,6 @@ public List<DerivedSchemaTO> getDerivedSchemas(final AttributableType type) {\n      * @return List of derived schema names.\n      */\n     public List<String> getDerivedSchemaNames(final AttributableType type) {\n-\n         final List<String> userDerivedSchemasNames = new ArrayList<String>();\n \n         try {\n@@ -145,7 +144,6 @@ public List<String> getDerivedSchemaNames(final AttributableType type) {\n      */\n     @SuppressWarnings(\"unchecked\")\n     public List<VirtualSchemaTO> getVirtualSchemas(final AttributableType type) {\n-\n         List<VirtualSchemaTO> userVirtualSchemas = null;\n \n         try {"},{"sha":"487165b9a2fe0ace670c0e41a2dbca6caef90382","filename":"console/src/main/resources/org/apache/syncope/console/pages/panels/AbstractSearchResultPanel.html","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/0438111af1088172eeb05c61d571dae2b80406b1/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchResultPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/0438111af1088172eeb05c61d571dae2b80406b1/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchResultPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchResultPanel.html?ref=0438111af1088172eeb05c61d571dae2b80406b1","patch":"@@ -16,7 +16,7 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<html>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n   <wicket:panel>\n \n     <div wicket:id=\"container\">"}]}