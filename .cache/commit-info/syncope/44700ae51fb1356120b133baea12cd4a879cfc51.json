{"sha":"44700ae51fb1356120b133baea12cd4a879cfc51","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ0NzAwYWU1MWZiMTM1NjEyMGIxMzNiYWVhMTJjZDRhODc5Y2ZjNTE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-12-30T13:16:18Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-12-30T13:16:18Z"},"message":"Upgrading to Commons JEXL 3.0","tree":{"sha":"41f07471f087c60ab259ca063c6b728c8a8276c0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/41f07471f087c60ab259ca063c6b728c8a8276c0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/44700ae51fb1356120b133baea12cd4a879cfc51","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/44700ae51fb1356120b133baea12cd4a879cfc51","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/44700ae51fb1356120b133baea12cd4a879cfc51","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/44700ae51fb1356120b133baea12cd4a879cfc51/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"421c0f8b431ddc34fffc3670c6d019b4333fd80b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/421c0f8b431ddc34fffc3670c6d019b4333fd80b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/421c0f8b431ddc34fffc3670c6d019b4333fd80b"}],"stats":{"total":89,"additions":45,"deletions":44},"files":[{"sha":"44e1df136f8c904f1d4e0b43d412d2dfc9c49366","filename":"core/misc/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44700ae51fb1356120b133baea12cd4a879cfc51/core%2Fmisc%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44700ae51fb1356120b133baea12cd4a879cfc51/core%2Fmisc%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fpom.xml?ref=44700ae51fb1356120b133baea12cd4a879cfc51","patch":"@@ -54,7 +54,7 @@ under the License.\n     </dependency>\n     <dependency>\n       <groupId>org.apache.commons</groupId>\n-      <artifactId>commons-jexl</artifactId>\n+      <artifactId>commons-jexl3</artifactId>\n     </dependency>\n     <dependency>\n       <groupId>commons-codec</groupId>"},{"sha":"d115ea9f4096904ab00eae19a7d353337144d7e9","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/jexl/ClassFreeUberspect.java","status":"renamed","additions":10,"deletions":12,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44700ae51fb1356120b133baea12cd4a879cfc51/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fjexl%2FClassFreeUberspect.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44700ae51fb1356120b133baea12cd4a879cfc51/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fjexl%2FClassFreeUberspect.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fjexl%2FClassFreeUberspect.java?ref=44700ae51fb1356120b133baea12cd4a879cfc51","patch":"@@ -18,26 +18,24 @@\n  */\n package org.apache.syncope.core.misc.jexl;\n \n-import org.apache.commons.jexl2.JexlInfo;\n-import org.apache.commons.jexl2.introspection.JexlMethod;\n-import org.apache.commons.jexl2.introspection.JexlPropertyGet;\n-import org.apache.commons.jexl2.introspection.UberspectImpl;\n-import org.apache.commons.logging.Log;\n+import org.apache.commons.jexl3.internal.introspection.Uberspect;\n+import org.apache.commons.jexl3.introspection.JexlMethod;\n+import org.apache.commons.jexl3.introspection.JexlPropertyGet;\n \n-class ClassFreeUberspectImpl extends UberspectImpl {\n+class ClassFreeUberspect extends Uberspect {\n \n-    ClassFreeUberspectImpl(final Log runtimeLogger) {\n-        super(runtimeLogger);\n+    ClassFreeUberspect() {\n+        super(null, null);\n     }\n \n     @Override\n-    public JexlPropertyGet getPropertyGet(final Object obj, final Object identifier, final JexlInfo info) {\n-        return \"class\".equals(identifier) ? null : super.getPropertyGet(obj, identifier, info);\n+    public JexlPropertyGet getPropertyGet(final Object obj, final Object identifier) {\n+        return \"class\".equals(identifier) ? null : super.getPropertyGet(obj, identifier);\n     }\n \n     @Override\n-    public JexlMethod getMethod(final Object obj, final String method, final Object[] args, final JexlInfo info) {\n-        return \"getClass\".equals(method) ? null : super.getMethod(obj, method, args, info);\n+    public JexlMethod getMethod(final Object obj, final String method, final Object... args) {\n+        return \"getClass\".equals(method) ? null : super.getMethod(obj, method, args);\n     }\n \n }","previous_filename":"core/misc/src/main/java/org/apache/syncope/core/misc/jexl/ClassFreeUberspectImpl.java"},{"sha":"b03c0273313af1e8c0b95528456fdad2cb83f3fd","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/jexl/JexlUtils.java","status":"modified","additions":16,"deletions":13,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44700ae51fb1356120b133baea12cd4a879cfc51/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fjexl%2FJexlUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44700ae51fb1356120b133baea12cd4a879cfc51/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fjexl%2FJexlUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Fjexl%2FJexlUtils.java?ref=44700ae51fb1356120b133baea12cd4a879cfc51","patch":"@@ -26,11 +26,12 @@\n import java.util.Date;\n import java.util.List;\n import java.util.Map;\n-import org.apache.commons.jexl2.Expression;\n-import org.apache.commons.jexl2.JexlContext;\n-import org.apache.commons.jexl2.JexlEngine;\n-import org.apache.commons.jexl2.JexlException;\n-import org.apache.commons.jexl2.MapContext;\n+import org.apache.commons.jexl3.JexlBuilder;\n+import org.apache.commons.jexl3.JexlContext;\n+import org.apache.commons.jexl3.JexlEngine;\n+import org.apache.commons.jexl3.JexlException;\n+import org.apache.commons.jexl3.JexlExpression;\n+import org.apache.commons.jexl3.MapContext;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.to.AnyTO;\n@@ -58,11 +59,13 @@ public final class JexlUtils {\n     private static JexlEngine getEngine() {\n         synchronized (LOG) {\n             if (JEXL_ENGINE == null) {\n-                JEXL_ENGINE = new JexlEngine(new ClassFreeUberspectImpl(null), null, null, null);\n-                JEXL_ENGINE.setClassLoader(new EmptyClassLoader());\n-                JEXL_ENGINE.setCache(512);\n-                JEXL_ENGINE.setLenient(true);\n-                JEXL_ENGINE.setSilent(false);\n+                JEXL_ENGINE = new JexlBuilder().\n+                        uberspect(new ClassFreeUberspect()).\n+                        loader(new EmptyClassLoader()).\n+                        cache(512).\n+                        silent(false).\n+                        strict(false).\n+                        create();\n             }\n         }\n \n@@ -87,7 +90,7 @@ public static String evaluate(final String expression, final JexlContext jexlCon\n \n         if (StringUtils.isNotBlank(expression) && jexlContext != null) {\n             try {\n-                Expression jexlExpression = getEngine().createExpression(expression);\n+                JexlExpression jexlExpression = getEngine().createExpression(expression);\n                 Object evaluated = jexlExpression.evaluate(jexlContext);\n                 if (evaluated != null) {\n                     result = evaluated.toString();\n@@ -128,8 +131,8 @@ public static JexlContext addFieldsToContext(final Object object, final JexlCont\n                         context.set(fieldName, fieldValue == null\n                                 ? StringUtils.EMPTY\n                                 : (type.equals(Date.class)\n-                                        ? FormatUtils.format((Date) fieldValue, false)\n-                                        : fieldValue));\n+                                ? FormatUtils.format((Date) fieldValue, false)\n+                                : fieldValue));\n \n                         LOG.debug(\"Add field {} with value {}\", fieldName, fieldValue);\n                     } catch (Exception iae) {"},{"sha":"6fde3ea10d922c0023eaac30c05b55887ca5d940","filename":"core/misc/src/main/java/org/apache/syncope/core/misc/utils/MappingUtils.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44700ae51fb1356120b133baea12cd4a879cfc51/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Futils%2FMappingUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44700ae51fb1356120b133baea12cd4a879cfc51/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Futils%2FMappingUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fmisc%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fmisc%2Futils%2FMappingUtils.java?ref=44700ae51fb1356120b133baea12cd4a879cfc51","patch":"@@ -25,8 +25,8 @@\n import java.util.List;\n import java.util.Set;\n import org.apache.commons.collections4.ListUtils;\n-import org.apache.commons.jexl2.JexlContext;\n-import org.apache.commons.jexl2.MapContext;\n+import org.apache.commons.jexl3.JexlContext;\n+import org.apache.commons.jexl3.MapContext;\n import org.apache.commons.lang3.ClassUtils;\n import org.apache.commons.lang3.SerializationUtils;\n import org.apache.commons.lang3.StringUtils;"},{"sha":"8a56ad7d18f257bff8d8125e82a94aefc163ce3a","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/dao/AbstractAnyDAO.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44700ae51fb1356120b133baea12cd4a879cfc51/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44700ae51fb1356120b133baea12cd4a879cfc51/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fdao%2FAbstractAnyDAO.java?ref=44700ae51fb1356120b133baea12cd4a879cfc51","patch":"@@ -30,9 +30,9 @@\n import javax.persistence.NoResultException;\n import javax.persistence.Query;\n import javax.persistence.TemporalType;\n-import org.apache.commons.jexl2.parser.Parser;\n-import org.apache.commons.jexl2.parser.ParserConstants;\n-import org.apache.commons.jexl2.parser.Token;\n+import org.apache.commons.jexl3.parser.Parser;\n+import org.apache.commons.jexl3.parser.ParserConstants;\n+import org.apache.commons.jexl3.parser.Token;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.core.persistence.api.dao.AnyDAO;\n@@ -226,13 +226,13 @@ private List<String> split(final String attrValue, final List<String> literals)\n      * @return where clauses to use to build the query\n      */\n     private Set<String> getWhereClause(final String expression, final String value) {\n-        final Parser parser = new Parser(new StringReader(expression));\n+        Parser parser = new Parser(new StringReader(expression));\n \n         // Schema names\n-        final List<String> identifiers = new ArrayList<>();\n+        List<String> identifiers = new ArrayList<>();\n \n         // Literals\n-        final List<String> literals = new ArrayList<>();\n+        List<String> literals = new ArrayList<>();\n \n         // Get schema names and literals\n         for (Token token = parser.getNextToken(); token != null && StringUtils.isNotBlank(token.toString());\n@@ -269,21 +269,21 @@ public int compare(final String t, final String t1) {\n         });\n \n         // Split value on provided literals\n-        final List<String> attrValues = split(value, literals);\n+        List<String> attrValues = split(value, literals);\n \n         if (attrValues.size() != identifiers.size()) {\n             LOG.error(\"Ambiguous JEXL expression resolution.\");\n             throw new IllegalArgumentException(\"literals and values have different size\");\n         }\n \n         // clauses to be used with INTERSECTed queries\n-        final Set<String> clauses = new HashSet<>();\n+        Set<String> clauses = new HashSet<>();\n \n         // builder to build the clauses\n-        final StringBuilder bld = new StringBuilder();\n+        StringBuilder bld = new StringBuilder();\n \n         // Contains used identifiers in order to avoid replications\n-        final Set<String> used = new HashSet<>();\n+        Set<String> used = new HashSet<>();\n \n         // Create several clauses: one for eanch identifiers\n         for (int i = 0; i < identifiers.size(); i++) {"},{"sha":"ccff7951c96e58109ad21e9742e906d874cee2f4","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/DerAttrHandlerImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44700ae51fb1356120b133baea12cd4a879cfc51/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDerAttrHandlerImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44700ae51fb1356120b133baea12cd4a879cfc51/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDerAttrHandlerImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FDerAttrHandlerImpl.java?ref=44700ae51fb1356120b133baea12cd4a879cfc51","patch":"@@ -22,8 +22,8 @@\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Set;\n-import org.apache.commons.jexl2.JexlContext;\n-import org.apache.commons.jexl2.MapContext;\n+import org.apache.commons.jexl3.JexlContext;\n+import org.apache.commons.jexl3.MapContext;\n import org.apache.syncope.core.misc.jexl.JexlUtils;\n import org.apache.syncope.core.persistence.api.entity.Any;\n import org.apache.syncope.core.persistence.api.entity.AnyUtilsFactory;"},{"sha":"9a7214cc44d319beb8e0fcafddc9c62cf9fa9bf3","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/LDAPMembershipPropagationActions.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44700ae51fb1356120b133baea12cd4a879cfc51/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44700ae51fb1356120b133baea12cd4a879cfc51/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java?ref=44700ae51fb1356120b133baea12cd4a879cfc51","patch":"@@ -22,8 +22,8 @@\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n-import org.apache.commons.jexl2.JexlContext;\n-import org.apache.commons.jexl2.MapContext;\n+import org.apache.commons.jexl3.JexlContext;\n+import org.apache.commons.jexl3.MapContext;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.core.persistence.api.dao.UserDAO;"},{"sha":"f722c6d238570455e080b64b0b63d51a13aa057b","filename":"pom.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/44700ae51fb1356120b133baea12cd4a879cfc51/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/44700ae51fb1356120b133baea12cd4a879cfc51/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=44700ae51fb1356120b133baea12cd4a879cfc51","patch":"@@ -356,7 +356,7 @@ under the License.\n \n     <commons-io.version>2.4</commons-io.version>\n     <commons-codec.version>1.10</commons-codec.version>\n-    <commons-jexl.version>2.1.1</commons-jexl.version>\n+    <commons-jexl.version>3.0</commons-jexl.version>\n     <commons-lang.version>3.4</commons-lang.version>\n     <commons-collection.version>4.1</commons-collection.version>\n     <commons-logging.version>1.1.3</commons-logging.version>\n@@ -689,7 +689,7 @@ under the License.\n       </dependency>\n       <dependency>\n         <groupId>org.apache.commons</groupId>\n-        <artifactId>commons-jexl</artifactId>\n+        <artifactId>commons-jexl3</artifactId>\n         <version>${commons-jexl.version}</version>\n       </dependency>\n       <dependency>"}]}