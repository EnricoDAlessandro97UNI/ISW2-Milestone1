{"sha":"648c6071a6b5f37509a21de3f429a554940da30b","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjY0OGM2MDcxYTZiNWYzNzUwOWEyMWRlM2Y0MjlhNTU0OTQwZGEzMGI=","commit":{"author":{"name":"Misagh Moayyed","email":"mm1844@gmail.com","date":"2020-01-16T18:20:51Z"},"committer":{"name":"Misagh Moayyed","email":"mm1844@gmail.com","date":"2020-01-17T08:30:27Z"},"message":"fix parameter placeholders for log messages","tree":{"sha":"995804b00c23b1328517ec4bb95cff18c65c0721","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/995804b00c23b1328517ec4bb95cff18c65c0721"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/648c6071a6b5f37509a21de3f429a554940da30b","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEElUyo8doQ6pkfeJVxEb3Dumou+aoFAl4hcKMACgkQEb3Dumou\n+aovBwf/b9jZPwkytboFTA+pu27GGfOdMmqSnnfjjMItC/3EH68qj+LpSl83ndqB\nbyeEYcwWNoFXX89K4C4ILrBM5upEukNe4RyeB11dH6f5TAARVROJeiBHyjAzfXDt\nFZJUq3CUJb0vzQkUW1F/u09PycFw+7pM0W7vzrU2jy35ajpKnJztAFFIanK7yukJ\nNXAixESuyh1/35H+j6FXbZQ7R5LE9MweIumuMlhCO125pA2oiuyl+4gCG2wXSG1Q\niHQmWse18dbL9mdSZZ5+zYln4KTCXiZLvVXQ3RZfk0/xW9+MT8t56a1tM6L9itP8\ny+T3gzgKwzW4TbqBcgElhR1pB1e5qA==\n=H5F1\n-----END PGP SIGNATURE-----","payload":"tree 995804b00c23b1328517ec4bb95cff18c65c0721\nparent 302c1fb00c70dafebb71b7ae4398ba23f0270b92\nauthor Misagh Moayyed <mm1844@gmail.com> 1579198851 +0400\ncommitter Misagh Moayyed <mm1844@gmail.com> 1579249827 +0400\n\nfix parameter placeholders for log messages\n"}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/648c6071a6b5f37509a21de3f429a554940da30b","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/648c6071a6b5f37509a21de3f429a554940da30b","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/648c6071a6b5f37509a21de3f429a554940da30b/comments","author":{"login":"mmoayyed","id":1205228,"node_id":"MDQ6VXNlcjEyMDUyMjg=","avatar_url":"https://avatars.githubusercontent.com/u/1205228?v=4","gravatar_id":"","url":"https://api.github.com/users/mmoayyed","html_url":"https://github.com/mmoayyed","followers_url":"https://api.github.com/users/mmoayyed/followers","following_url":"https://api.github.com/users/mmoayyed/following{/other_user}","gists_url":"https://api.github.com/users/mmoayyed/gists{/gist_id}","starred_url":"https://api.github.com/users/mmoayyed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmoayyed/subscriptions","organizations_url":"https://api.github.com/users/mmoayyed/orgs","repos_url":"https://api.github.com/users/mmoayyed/repos","events_url":"https://api.github.com/users/mmoayyed/events{/privacy}","received_events_url":"https://api.github.com/users/mmoayyed/received_events","type":"User","site_admin":false},"committer":{"login":"mmoayyed","id":1205228,"node_id":"MDQ6VXNlcjEyMDUyMjg=","avatar_url":"https://avatars.githubusercontent.com/u/1205228?v=4","gravatar_id":"","url":"https://api.github.com/users/mmoayyed","html_url":"https://github.com/mmoayyed","followers_url":"https://api.github.com/users/mmoayyed/followers","following_url":"https://api.github.com/users/mmoayyed/following{/other_user}","gists_url":"https://api.github.com/users/mmoayyed/gists{/gist_id}","starred_url":"https://api.github.com/users/mmoayyed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmoayyed/subscriptions","organizations_url":"https://api.github.com/users/mmoayyed/orgs","repos_url":"https://api.github.com/users/mmoayyed/repos","events_url":"https://api.github.com/users/mmoayyed/events{/privacy}","received_events_url":"https://api.github.com/users/mmoayyed/received_events","type":"User","site_admin":false},"parents":[{"sha":"302c1fb00c70dafebb71b7ae4398ba23f0270b92","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/302c1fb00c70dafebb71b7ae4398ba23f0270b92","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/302c1fb00c70dafebb71b7ae4398ba23f0270b92"}],"stats":{"total":13,"additions":7,"deletions":6},"files":[{"sha":"dfcd6a9e520c3ab1b0ffac1b6a90ee57dd250358","filename":"client/idm/console/src/main/java/org/apache/syncope/client/console/status/ReconTaskPanel.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/648c6071a6b5f37509a21de3f429a554940da30b/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FReconTaskPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/648c6071a6b5f37509a21de3f429a554940da30b/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FReconTaskPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fidm%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FReconTaskPanel.java?ref=648c6071a6b5f37509a21de3f429a554940da30b","patch":"@@ -185,7 +185,8 @@ protected void onSubmit(final AjaxRequestTarget target) {\n \n                     SyncopeConsoleSession.get().info(getString(Constants.OPERATION_SUCCEEDED));\n                 } catch (Exception e) {\n-                    LOG.error(\"While attempting reconciliation on {}\", reconQuery, form.getModelObject(), e);\n+                    LOG.error(\"While attempting reconciliation using query {} on {}\",\n+                        reconQuery, form.getModelObject(), e);\n                     SyncopeConsoleSession.get().error(resource + \": \"\n                             + (StringUtils.isBlank(e.getMessage())\n                             ? e.getClass().getName()"},{"sha":"a9ecdb04517cda2960e4fc38aea8665ddaee6e4f","filename":"core/idrepo/logic/src/main/java/org/apache/syncope/core/logic/init/ClassPathScanImplementationLookup.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/648c6071a6b5f37509a21de3f429a554940da30b/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/648c6071a6b5f37509a21de3f429a554940da30b/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fidrepo%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FClassPathScanImplementationLookup.java?ref=648c6071a6b5f37509a21de3f429a554940da30b","patch":"@@ -116,7 +116,7 @@ public void load() {\n                 scanner.addIncludeFilter(new AssignableTypeFilter(\n                         ClassUtils.resolveClassName(typeInterface, ClassUtils.getDefaultClassLoader())));\n             } catch (IllegalArgumentException e) {\n-                LOG.error(\"Could not find class {}, ignoring...\", e);\n+                LOG.error(\"Could not find class, ignoring...\", e);\n             }\n         });\n "},{"sha":"1a4e5c4c4f1eda0a134de6f3bb97fe28615b06c4","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/LDAPMembershipPropagationActions.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/648c6071a6b5f37509a21de3f429a554940da30b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/648c6071a6b5f37509a21de3f429a554940da30b/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FLDAPMembershipPropagationActions.java?ref=648c6071a6b5f37509a21de3f429a554940da30b","patch":"@@ -128,7 +128,7 @@ public void before(final PropagationTask task, final ConnectorObject beforeObj)\n                                 forEach(value -> groups.add(String.valueOf(value)));\n                     }\n                 }\n-                LOG.debug(\"Add ldapGroups to attributes: {}\" + groups);\n+                LOG.debug(\"Add ldapGroups to attributes: {}\", groups);\n                 attributes.add(AttributeBuilder.build(getGroupMembershipAttrName(), groups));\n \n                 task.setAttributes(attributes);"},{"sha":"f988610a571d30263e7b7e633eec1bf46e05648a","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/SAML2IdPLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/648c6071a6b5f37509a21de3f429a554940da30b/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2IdPLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/648c6071a6b5f37509a21de3f429a554940da30b/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2IdPLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2IdPLogic.java?ref=648c6071a6b5f37509a21de3f429a554940da30b","patch":"@@ -77,7 +77,7 @@ private SAML2IdPTO complete(final SAML2IdP idp, final SAML2IdPTO idpTO) {\n             try {\n                 idpEntity = cache.put(idp);\n             } catch (Exception e) {\n-                LOG.error(\"Could not build SAML 2.0 IdP with key \", idp.getEntityID(), e);\n+                LOG.error(\"Could not build SAML 2.0 IdP with key {}\", idp.getEntityID(), e);\n             }\n         }\n "},{"sha":"cb73614f0609c66266048402a18babc4463ca012","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/SAML2SPLogic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/648c6071a6b5f37509a21de3f429a554940da30b/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/648c6071a6b5f37509a21de3f429a554940da30b/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java?ref=648c6071a6b5f37509a21de3f429a554940da30b","patch":"@@ -242,7 +242,7 @@ private SAML2IdPEntity getIdP(final String entityID) {\n             try {\n                 idp = cache.put(saml2IdP);\n             } catch (Exception e) {\n-                LOG.error(\"Could not build SAML 2.0 IdP with key \", entityID, e);\n+                LOG.error(\"Could not build SAML 2.0 IdP with key {}\", entityID, e);\n                 SyncopeClientException sce = SyncopeClientException.build(ClientExceptionType.Unknown);\n                 sce.getElements().add(e.getMessage());\n                 throw sce;"},{"sha":"a8d4997f7072d1657099861ee5ab686fa6f0e849","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/init/SAML2SPLoader.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/648c6071a6b5f37509a21de3f429a554940da30b/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPLoader.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/648c6071a6b5f37509a21de3f429a554940da30b/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPLoader.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2Finit%2FSAML2SPLoader.java?ref=648c6071a6b5f37509a21de3f429a554940da30b","patch":"@@ -147,7 +147,7 @@ public void load(final String domain, final DataSource datasource) {\n                 try {\n                     cache.put(idp);\n                 } catch (Exception e) {\n-                    LOG.error(\"Could not cache the SAML 2.0 IdP with key \", idp.getEntityID(), e);\n+                    LOG.error(\"Could not cache the SAML 2.0 IdP with key {}\", idp.getEntityID(), e);\n                 }\n             });\n             return null;"}]}