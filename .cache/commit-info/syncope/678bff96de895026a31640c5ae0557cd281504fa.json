{"sha":"678bff96de895026a31640c5ae0557cd281504fa","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjY3OGJmZjk2ZGU4OTUwMjZhMzE2NDBjNWFlMDU1N2NkMjgxNTA0ZmE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-09-26T10:15:47Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2017-09-26T10:21:47Z"},"message":"Member -> static method cleanup","tree":{"sha":"0a22e9a73c4bec1c9a10189908a5f8d49a10038a","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/0a22e9a73c4bec1c9a10189908a5f8d49a10038a"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/678bff96de895026a31640c5ae0557cd281504fa","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/678bff96de895026a31640c5ae0557cd281504fa","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/678bff96de895026a31640c5ae0557cd281504fa","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/678bff96de895026a31640c5ae0557cd281504fa/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"3765af711f79103bc71cc2d35d46e5df439cb0d6","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/3765af711f79103bc71cc2d35d46e5df439cb0d6","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/3765af711f79103bc71cc2d35d46e5df439cb0d6"}],"stats":{"total":102,"additions":51,"deletions":51},"files":[{"sha":"36b646e22660ac112250d7c343fc3767c921741f","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ResourceLogic.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/678bff96de895026a31640c5ae0557cd281504fa/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/678bff96de895026a31640c5ae0557cd281504fa/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FResourceLogic.java?ref=678bff96de895026a31640c5ae0557cd281504fa","patch":"@@ -107,9 +107,6 @@ public class ResourceLogic extends AbstractTransactionalLogic<ResourceTO> {\n     @Autowired\n     private ResourceDataBinder binder;\n \n-    @Autowired\n-    private ConnObjectUtils connObjectUtils;\n-\n     @Autowired\n     private MappingManager mappingManager;\n \n@@ -351,7 +348,7 @@ public ConnObjectTO readConnObject(final String key, final String anyTypeKey, fi\n             attributes.add(connectorObject.getName());\n         }\n \n-        return connObjectUtils.getConnObjectTO(connectorObject);\n+        return ConnObjectUtils.getConnObjectTO(connectorObject);\n     }\n \n     @PreAuthorize(\"hasRole('\" + StandardEntitlement.RESOURCE_LIST_CONNOBJECT + \"')\")\n@@ -398,7 +395,7 @@ public Pair<SearchResult, List<ConnObjectTO>> listConnObjects(final String key,\n \n             @Override\n             public boolean handle(final ConnectorObject connectorObject) {\n-                connObjects.add(connObjectUtils.getConnObjectTO(connectorObject));\n+                connObjects.add(ConnObjectUtils.getConnObjectTO(connectorObject));\n                 // safety protection against uncontrolled result size\n                 count++;\n                 return count < size;"},{"sha":"80512f62a95a9461c3a552e7b477d7a6805b4219","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/AbstractPropagationTaskExecutor.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/678bff96de895026a31640c5ae0557cd281504fa/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/678bff96de895026a31640c5ae0557cd281504fa/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FAbstractPropagationTaskExecutor.java?ref=678bff96de895026a31640c5ae0557cd281504fa","patch":"@@ -513,12 +513,8 @@ protected abstract void doExecute(\n             Collection<PropagationTask> tasks, PropagationReporter reporter, boolean nullPriorityAsync);\n \n     @Override\n-    public PropagationReporter execute(\n-            final Collection<PropagationTask> tasks,\n-            final boolean nullPriorityAsync) {\n-\n-        PropagationReporter reporter =\n-                ApplicationContextProvider.getBeanFactory().getBean(PropagationReporter.class);\n+    public PropagationReporter execute(final Collection<PropagationTask> tasks, final boolean nullPriorityAsync) {\n+        PropagationReporter reporter = new DefaultPropagationReporter();\n         try {\n             doExecute(tasks, reporter, nullPriorityAsync);\n         } catch (PropagationException e) {"},{"sha":"c07431ccec89f2ce7a76b9641cae73eb36d2f163","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/propagation/DefaultPropagationReporter.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/678bff96de895026a31640c5ae0557cd281504fa/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationReporter.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/678bff96de895026a31640c5ae0557cd281504fa/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationReporter.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Fpropagation%2FDefaultPropagationReporter.java?ref=678bff96de895026a31640c5ae0557cd281504fa","patch":"@@ -31,15 +31,11 @@\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.springframework.beans.factory.annotation.Autowired;\n \n public class DefaultPropagationReporter implements PropagationReporter {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(DefaultPropagationReporter.class);\n \n-    @Autowired\n-    protected ConnObjectUtils connObjectUtils;\n-\n     protected final List<PropagationStatus> statuses = new ArrayList<>();\n \n     protected boolean add(final PropagationStatus status) {\n@@ -62,11 +58,11 @@ public void onSuccessOrNonPriorityResourceFailures(\n         status.setFailureReason(failureReason);\n \n         if (beforeObj != null) {\n-            status.setBeforeObj(connObjectUtils.getConnObjectTO(beforeObj));\n+            status.setBeforeObj(ConnObjectUtils.getConnObjectTO(beforeObj));\n         }\n \n         if (afterObj != null) {\n-            status.setAfterObj(connObjectUtils.getConnObjectTO(afterObj));\n+            status.setAfterObj(ConnObjectUtils.getConnObjectTO(afterObj));\n         }\n \n         add(status);"},{"sha":"c49c84a9b0bfe78465f93b8222fb62a646bedcfb","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/utils/ConnObjectUtils.java","status":"modified","additions":45,"deletions":33,"changes":78,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/678bff96de895026a31640c5ae0557cd281504fa/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/678bff96de895026a31640c5ae0557cd281504fa/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2Futils%2FConnObjectUtils.java?ref=678bff96de895026a31640c5ae0557cd281504fa","patch":"@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import java.util.Set;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.syncope.common.lib.AnyOperations;\n import org.apache.syncope.common.lib.patch.AnyPatch;\n@@ -49,6 +50,7 @@\n import org.identityconnectors.common.security.GuardedByteArray;\n import org.identityconnectors.common.security.GuardedString;\n import org.identityconnectors.common.security.SecurityUtil;\n+import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.ConnectorObject;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -103,6 +105,49 @@ public static String getPassword(final Object pwd) {\n         return result.toString();\n     }\n \n+    /**\n+     * Builds {@link ConnObjectTO} out of {@link ConnectorObject}.\n+     *\n+     * @param connObject connector object.\n+     * @return transfer object\n+     */\n+    public static ConnObjectTO getConnObjectTO(final ConnectorObject connObject) {\n+        return connObject == null ? new ConnObjectTO() : getConnObjectTO(connObject.getAttributes());\n+    }\n+\n+    /**\n+     * Builds {@link ConnObjectTO} out of a collection of {@link Attribute} instances.\n+     *\n+     * @param attrs attributes\n+     * @return transfer object\n+     */\n+    public static ConnObjectTO getConnObjectTO(final Set<Attribute> attrs) {\n+        final ConnObjectTO connObjectTO = new ConnObjectTO();\n+\n+        if (attrs != null) {\n+            attrs.stream().map(attr -> {\n+                AttrTO attrTO = new AttrTO();\n+                attrTO.setSchema(attr.getName());\n+                if (attr.getValue() != null) {\n+                    attr.getValue().stream().filter(value -> value != null).forEachOrdered(value -> {\n+                        if (value instanceof GuardedString || value instanceof GuardedByteArray) {\n+                            attrTO.getValues().add(getPassword(value));\n+                        } else if (value instanceof byte[]) {\n+                            attrTO.getValues().add(Base64.encode((byte[]) value));\n+                        } else {\n+                            attrTO.getValues().add(value.toString());\n+                        }\n+                    });\n+                }\n+                return attrTO;\n+            }).forEach(attrTO -> {\n+                connObjectTO.getAttrs().add(attrTO);\n+            });\n+        }\n+\n+        return connObjectTO;\n+    }\n+\n     /**\n      * Build a UserTO / GroupTO / AnyObjectTO out of connector object attributes and schema mapping.\n      *\n@@ -272,37 +317,4 @@ private <T extends AnyTO> T getAnyTOFromConnObject(\n \n         return anyTO;\n     }\n-\n-    /**\n-     * Get connector object TO from a connector object.\n-     *\n-     * @param connObject connector object.\n-     * @return connector object TO.\n-     */\n-    public ConnObjectTO getConnObjectTO(final ConnectorObject connObject) {\n-        final ConnObjectTO connObjectTO = new ConnObjectTO();\n-\n-        if (connObject != null) {\n-            connObject.getAttributes().stream().map(attr -> {\n-                AttrTO attrTO = new AttrTO();\n-                attrTO.setSchema(attr.getName());\n-                if (attr.getValue() != null) {\n-                    attr.getValue().stream().filter(value -> value != null).forEachOrdered(value -> {\n-                        if (value instanceof GuardedString || value instanceof GuardedByteArray) {\n-                            attrTO.getValues().add(getPassword(value));\n-                        } else if (value instanceof byte[]) {\n-                            attrTO.getValues().add(Base64.encode((byte[]) value));\n-                        } else {\n-                            attrTO.getValues().add(value.toString());\n-                        }\n-                    });\n-                }\n-                return attrTO;\n-            }).forEachOrdered((attrTO) -> {\n-                connObjectTO.getAttrs().add(attrTO);\n-            });\n-        }\n-\n-        return connObjectTO;\n-    }\n }"},{"sha":"5b7871a67543d325b40f91c3a3a5b9c78794a1f3","filename":"core/provisioning-java/src/main/resources/provisioningContext.xml","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/678bff96de895026a31640c5ae0557cd281504fa/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/678bff96de895026a31640c5ae0557cd281504fa/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fresources%2FprovisioningContext.xml?ref=678bff96de895026a31640c5ae0557cd281504fa","patch":"@@ -107,7 +107,6 @@ under the License.\n   </bean>\n \n   <bean class=\"org.apache.syncope.core.provisioning.java.propagation.PropagationManagerImpl\"/>\n-  <bean class=\"org.apache.syncope.core.provisioning.java.propagation.DefaultPropagationReporter\" scope=\"prototype\"/>\n \n   <bean id=\"virAttrCache\" class=\"${virAttrCache}\" scope=\"singleton\">\n     <constructor-arg value=\"60\"/>"}]}