{"sha":"83509d7eb8322ba8066f9278c25ba38a829cb439","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjgzNTA5ZDdlYjgzMjJiYTgwNjZmOTI3OGMyNWJhMzhhODI5Y2I0Mzk=","commit":{"author":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-12-18T09:41:08Z"},"committer":{"name":"fmartelli","email":"fabio.martelli@gmail.com","date":"2015-12-18T09:41:08Z"},"message":"[SYNCOPE-156] some fixes improve derived and virtual attributes management","tree":{"sha":"073cdc3e7530b4be6941a56695c8ba7e6717bf4e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/073cdc3e7530b4be6941a56695c8ba7e6717bf4e"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/83509d7eb8322ba8066f9278c25ba38a829cb439","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/83509d7eb8322ba8066f9278c25ba38a829cb439","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/83509d7eb8322ba8066f9278c25ba38a829cb439","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/83509d7eb8322ba8066f9278c25ba38a829cb439/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"288179f2639cb13e1dfc7f7b5869f9d5cbd58861","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/288179f2639cb13e1dfc7f7b5869f9d5cbd58861","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/288179f2639cb13e1dfc7f7b5869f9d5cbd58861"}],"stats":{"total":93,"additions":56,"deletions":37},"files":[{"sha":"365d0c718701545441e3d66a2f4976cb180e9fec","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AbstractSearchPanel.java","status":"modified","additions":11,"deletions":3,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/83509d7eb8322ba8066f9278c25ba38a829cb439/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/83509d7eb8322ba8066f9278c25ba38a829cb439/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAbstractSearchPanel.java?ref=83509d7eb8322ba8066f9278c25ba38a829cb439","patch":"@@ -77,6 +77,8 @@ public abstract class AbstractSearchPanel extends Panel {\n \n     protected final AnyTypeKind typeKind;\n \n+    protected final String type;\n+\n     protected final boolean required;\n \n     protected final boolean enableSearch;\n@@ -108,13 +110,19 @@ public Builder<T> required(final boolean required) {\n         public abstract T build(final String id);\n     }\n \n-    protected AbstractSearchPanel(final String id, final AnyTypeKind typeKind, final Builder<?> builder) {\n+    protected AbstractSearchPanel(final String id, final AnyTypeKind kind, final Builder<?> builder) {\n+        this(id, kind, kind.name(), builder);\n+    }\n+\n+    protected AbstractSearchPanel(\n+            final String id, final AnyTypeKind kind, final String type, final Builder<?> builder) {\n \n         super(id);\n         populate();\n \n         this.model = builder.model;\n-        this.typeKind = typeKind;\n+        this.typeKind = kind;\n+        this.type = type;\n         this.required = builder.required;\n         this.enableSearch = builder.enableSearch;\n \n@@ -186,7 +194,7 @@ protected List<String> load() {\n             @Override\n             protected List<String> load() {\n                 return CollectionUtils.collect(schemaRestClient.getSchemas(SchemaType.PLAIN,\n-                        anyTypeRestClient.get(typeKind.name()).getClasses().toArray(new String[] {})),\n+                        anyTypeRestClient.get(type).getClasses().toArray(new String[] {})),\n                         new Transformer<AbstractSchemaTO, String>() {\n \n                     @Override"},{"sha":"369c99ba513599756402f504b1de014b464de7c1","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/AnyObjectSearchPanel.java","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/83509d7eb8322ba8066f9278c25ba38a829cb439/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/83509d7eb8322ba8066f9278c25ba38a829cb439/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FAnyObjectSearchPanel.java?ref=83509d7eb8322ba8066f9278c25ba38a829cb439","patch":"@@ -38,20 +38,27 @@ public static class Builder extends AbstractSearchPanel.Builder<AnyObjectSearchP\n \n         private static final long serialVersionUID = 6308997285778809578L;\n \n-        public Builder(final IModel<List<SearchClause>> model) {\n+        private final String type;\n+\n+        public Builder(final String type, final IModel<List<SearchClause>> model) {\n             super(model);\n+            this.type = type;\n         }\n \n         @Override\n         public AnyObjectSearchPanel build(final String id) {\n-            return new AnyObjectSearchPanel(id, AnyTypeKind.ANY_OBJECT, this);\n+            return new AnyObjectSearchPanel(id, AnyTypeKind.ANY_OBJECT, type, this);\n         }\n     }\n \n     protected AnyObjectSearchPanel(final String id, final AnyTypeKind kind, final Builder builder) {\n         super(id, kind, builder);\n     }\n \n+    protected AnyObjectSearchPanel(final String id, final AnyTypeKind kind, final String type, final Builder builder) {\n+        super(id, kind, type, builder);\n+    }\n+\n     @Override\n     protected void populate() {\n         super.populate();"},{"sha":"2d01fc2c1d486a2cc0d98f283540af70424245ea","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/UserSearchPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/83509d7eb8322ba8066f9278c25ba38a829cb439/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/83509d7eb8322ba8066f9278c25ba38a829cb439/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FUserSearchPanel.java?ref=83509d7eb8322ba8066f9278c25ba38a829cb439","patch":"@@ -31,7 +31,7 @@ public static class Builder extends AnyObjectSearchPanel.Builder {\n         private static final long serialVersionUID = 6308997285778809578L;\n \n         public Builder(final IModel<List<SearchClause>> model) {\n-            super(model);\n+            super(AnyTypeKind.USER.name(), model);\n         }\n \n         @Override"},{"sha":"662908289026566acda9dea9c9a1a841f3b03e36","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/DerAttrs.java","status":"modified","additions":19,"deletions":16,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/83509d7eb8322ba8066f9278c25ba38a829cb439/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/83509d7eb8322ba8066f9278c25ba38a829cb439/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDerAttrs.java?ref=83509d7eb8322ba8066f9278c25ba38a829cb439","patch":"@@ -61,30 +61,33 @@ protected List<AttrTO> load() {\n                         anyTypeRestClient.getAnyTypeClass(getAllAuxClasses().toArray(new String[] {})),\n                         new Transformer<AnyTypeClassTO, String>() {\n \n-                            @Override\n-                            public String transform(final AnyTypeClassTO input) {\n-                                return input.getKey();\n-                            }\n-                        }, new ArrayList<String>(Arrays.asList(anyTypeClass)));\n+                    @Override\n+                    public String transform(final AnyTypeClassTO input) {\n+                        return input.getKey();\n+                    }\n+                }, new ArrayList<String>(Arrays.asList(anyTypeClass)));\n \n                 final List<DerSchemaTO> derSchemas\n                         = schemaRestClient.getSchemas(SchemaType.DERIVED, classes.toArray(new String[] {}));\n \n                 final Map<String, AttrTO> currents = entityTO.getDerAttrMap();\n                 entityTO.getDerAttrs().clear();\n \n-                return CollectionUtils.collect(derSchemas, new Transformer<DerSchemaTO, AttrTO>() {\n+                // This conversion from set to lis is required by the ListView.\n+                // Didn't performed by using collect parameter because entityTO change is required.\n+                return new ArrayList<AttrTO>(\n+                        CollectionUtils.collect(derSchemas, new Transformer<DerSchemaTO, AttrTO>() {\n \n-                    @Override\n-                    public AttrTO transform(final DerSchemaTO input) {\n-                        AttrTO attrTO = currents.get(input.getKey());\n-                        if (attrTO == null) {\n-                            attrTO = new AttrTO();\n-                            attrTO.setSchema(input.getKey());\n-                        }\n-                        return attrTO;\n-                    }\n-                }, new ArrayList<>(entityTO.getDerAttrs()));\n+                            @Override\n+                            public AttrTO transform(final DerSchemaTO input) {\n+                                AttrTO attrTO = currents.get(input.getKey());\n+                                if (attrTO == null) {\n+                                    attrTO = new AttrTO();\n+                                    attrTO.setSchema(input.getKey());\n+                                }\n+                                return attrTO;\n+                            }\n+                        }, entityTO.getDerAttrs()));\n             }\n         };\n "},{"sha":"8df2cddfa0f76363babaf84cfaba7b55bf0fc414","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/DynamicMemberships.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/83509d7eb8322ba8066f9278c25ba38a829cb439/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/83509d7eb8322ba8066f9278c25ba38a829cb439/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FDynamicMemberships.java?ref=83509d7eb8322ba8066f9278c25ba38a829cb439","patch":"@@ -104,7 +104,7 @@ protected void populateItem(final ListItem<AnyTypeTO> item) {\n                     @Override\n                     public Panel getPanel(final String panelId) {\n                         return new AnyObjectSearchPanel.Builder(\n-                                new MapOfListModel<SearchClause>(groupHandler, \"aDynClauses\", key)).\n+                                key, new MapOfListModel<SearchClause>(groupHandler, \"aDynClauses\", key)).\n                                 required(false).build(panelId);\n                     }\n                 }), Model.of(StringUtils.isBlank(groupHandler.getADynMembershipConds().get(key)) ? -1 : 0))"},{"sha":"6ac91b1a7019d59eb3d2b999682dfe19338d970c","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/Roles.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/83509d7eb8322ba8066f9278c25ba38a829cb439/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/83509d7eb8322ba8066f9278c25ba38a829cb439/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FRoles.java?ref=83509d7eb8322ba8066f9278c25ba38a829cb439","patch":"@@ -35,8 +35,6 @@ public class Roles extends WizardStep {\n \n     private static final long serialVersionUID = 552437609667518888L;\n \n-    private final RoleRestClient roleRestClient = new RoleRestClient();\n-\n     public <T extends AnyTO> Roles(final UserTO entityTO) {\n         this.setOutputMarkupId(true);\n \n@@ -56,6 +54,6 @@ public String transform(final RoleTO input) {\n \n         add(new AjaxPalettePanel.Builder<String>().build(\"dynroles\",\n                 new PropertyModel<List<String>>(entityTO, \"dynRoles\"),\n-                new ListModel<>(allRoles)).setOutputMarkupId(true));\n+                new ListModel<>(allRoles)).setEnabled(false).setOutputMarkupId(true));\n     }\n }"},{"sha":"2f69864eb0e1a98356ae5accbb4bc914c0de9361","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/any/VirAttrs.java","status":"modified","additions":12,"deletions":10,"changes":22,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/83509d7eb8322ba8066f9278c25ba38a829cb439/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/83509d7eb8322ba8066f9278c25ba38a829cb439/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fany%2FVirAttrs.java?ref=83509d7eb8322ba8066f9278c25ba38a829cb439","patch":"@@ -59,19 +59,21 @@ protected List<AttrTO> load() {\n                         anyTypeRestClient.getAnyTypeClass(getAllAuxClasses().toArray(new String[] {})),\n                         new Transformer<AnyTypeClassTO, String>() {\n \n-                            @Override\n-                            public String transform(final AnyTypeClassTO input) {\n-                                return input.getKey();\n-                            }\n-                        }, new ArrayList<String>(Arrays.asList(anyTypeClass)));\n+                    @Override\n+                    public String transform(final AnyTypeClassTO input) {\n+                        return input.getKey();\n+                    }\n+                }, new ArrayList<String>(Arrays.asList(anyTypeClass)));\n \n                 final List<VirSchemaTO> virSchemas\n                         = schemaRestClient.getSchemas(SchemaType.VIRTUAL, classes.toArray(new String[] {}));\n \n                 final Map<String, AttrTO> currents = entityTO.getVirAttrMap();\n                 entityTO.getVirAttrs().clear();\n \n-                return CollectionUtils.collect(virSchemas, new Transformer<VirSchemaTO, AttrTO>() {\n+                // This conversion from set to lis is required by the ListView.\n+                // Didn't performed by using collect parameter because entityTO change is required.\n+                return new ArrayList<>(CollectionUtils.collect(virSchemas, new Transformer<VirSchemaTO, AttrTO>() {\n \n                     @Override\n                     public AttrTO transform(final VirSchemaTO input) {\n@@ -87,7 +89,7 @@ public AttrTO transform(final VirSchemaTO input) {\n                         attrTO.setReadonly(input.isReadonly());\n                         return attrTO;\n                     }\n-                }, new ArrayList<>(entityTO.getVirAttrs()));\n+                }, entityTO.getVirAttrs()));\n             }\n         };\n \n@@ -120,9 +122,9 @@ protected void populateItem(final ListItem<AttrTO> item) {\n \n                 item.add(new MultiFieldPanel.Builder<String>(\n                         new PropertyModel<List<String>>(attrTO, \"values\")).build(\n-                                \"panel\",\n-                                attrTO.getSchema(),\n-                                panel).setEnabled(!attrTO.isReadonly()));\n+                        \"panel\",\n+                        attrTO.getSchema(),\n+                        panel).setEnabled(!attrTO.isReadonly()));\n             }\n         };\n "},{"sha":"0c1a72761fdbf53ebd8d8f7d78060665fa4347ae","filename":"client/console/src/main/resources/org/apache/syncope/client/console/panels/ListViewPanel.html","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/83509d7eb8322ba8066f9278c25ba38a829cb439/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/83509d7eb8322ba8066f9278c25ba38a829cb439/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FListViewPanel.html?ref=83509d7eb8322ba8066f9278c25ba38a829cb439","patch":"@@ -54,7 +54,8 @@ <h3 class=\"box-title\">\n                   </tr>\n                 </span>\n \n-              </tbody></table>\n+              </tbody>\n+            </table>\n           </div><!-- /.box-body -->\n         </div><!-- /.box -->\n       </div>"}]}