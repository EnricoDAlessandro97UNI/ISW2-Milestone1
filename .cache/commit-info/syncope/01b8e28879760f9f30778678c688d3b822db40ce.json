{"sha":"01b8e28879760f9f30778678c688d3b822db40ce","node_id":"C_kwDOJfYA1toAKDAxYjhlMjg4Nzk3NjBmOWYzMDc3ODY3OGM2ODhkM2I4MjJkYjQwY2U","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-09-27T15:28:01Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2021-09-27T15:35:46Z"},"message":"Re-enabling SCIM","tree":{"sha":"c7f2b0bb39367edb2df0ecc8a47880a587f12da5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c7f2b0bb39367edb2df0ecc8a47880a587f12da5"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/01b8e28879760f9f30778678c688d3b822db40ce","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/01b8e28879760f9f30778678c688d3b822db40ce","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/01b8e28879760f9f30778678c688d3b822db40ce","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/01b8e28879760f9f30778678c688d3b822db40ce/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"b3699afb8ae96330f91f9984fa54fdfb9126affc","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b3699afb8ae96330f91f9984fa54fdfb9126affc","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b3699afb8ae96330f91f9984fa54fdfb9126affc"}],"stats":{"total":34,"additions":14,"deletions":20},"files":[{"sha":"f96c374d6103704b12bb42b81963b87f79ce4210","filename":"ext/scimv2/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/SCIMConfServiceImpl.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01b8e28879760f9f30778678c688d3b822db40ce/ext%2Fscimv2%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSCIMConfServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01b8e28879760f9f30778678c688d3b822db40ce/ext%2Fscimv2%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSCIMConfServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FSCIMConfServiceImpl.java?ref=01b8e28879760f9f30778678c688d3b822db40ce","patch":"@@ -39,5 +39,4 @@ public SCIMConf get() {\n     public void set(final SCIMConf conf) {\n         manager.set(conf);\n     }\n-\n }"},{"sha":"1046020cdd9f3e5ba0ba0789c5f3b5c669921556","filename":"ext/scimv2/scim-rest-cxf/src/main/java/org/apache/syncope/ext/scimv2/cxf/SCIMv2RESTCXFContext.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01b8e28879760f9f30778678c688d3b822db40ce/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FSCIMv2RESTCXFContext.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01b8e28879760f9f30778678c688d3b822db40ce/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FSCIMv2RESTCXFContext.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Fscim-rest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fext%2Fscimv2%2Fcxf%2FSCIMv2RESTCXFContext.java?ref=01b8e28879760f9f30778678c688d3b822db40ce","patch":"@@ -67,13 +67,13 @@ public SCIMExceptionMapper scimExceptionMapper() {\n         return new SCIMExceptionMapper();\n     }\n \n-    @ConditionalOnMissingBean\n+    @ConditionalOnMissingBean(name = \"scimAddETagFilter\")\n     @Bean\n     public AddETagFilter scimAddETagFilter() {\n         return new AddETagFilter();\n     }\n \n-    @ConditionalOnMissingBean\n+    @ConditionalOnMissingBean(name = \"scimv2Container\")\n     @Bean\n     public Server scimv2Container() {\n         SpringJAXRSServerFactoryBean scimv2Container = new SpringJAXRSServerFactoryBean();"},{"sha":"a35e571a218cc2b00602b658b93dfbae96cf836f","filename":"fit/core-reference/src/test/java/org/apache/syncope/fit/core/SCIMITCase.java","status":"modified","additions":12,"deletions":17,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/01b8e28879760f9f30778678c688d3b822db40ce/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/01b8e28879760f9f30778678c688d3b822db40ce/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/fit%2Fcore-reference%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Ffit%2Fcore%2FSCIMITCase.java?ref=01b8e28879760f9f30778678c688d3b822db40ce","patch":"@@ -63,7 +63,7 @@\n import org.apache.syncope.ext.scimv2.api.type.Resource;\n import org.apache.syncope.ext.scimv2.cxf.SCIMJacksonJsonProvider;\n import org.apache.syncope.fit.AbstractITCase;\n-import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.BeforeAll;\n import org.junit.jupiter.api.Test;\n \n public class SCIMITCase extends AbstractITCase {\n@@ -101,19 +101,19 @@ public class SCIMITCase extends AbstractITCase {\n         CONF.getUserConf().getEmails().add(email);\n     }\n \n-    private static boolean isSCIMAvailable(final WebClient webClient) {\n-        synchronized (LOG) {\n-            if (ENABLED == null) {\n-                try {\n-                    Response response = webClient.path(\"ServiceProviderConfig\").get();\n-                    ENABLED = response.getStatus() == 200;\n-                } catch (Exception e) {\n-                    // ignore\n-                    ENABLED = false;\n-                }\n+    @BeforeAll\n+    public static void isSCIMAvailable() {\n+        if (ENABLED == null) {\n+            try {\n+                Response response = webClient().path(\"ServiceProviderConfig\").get();\n+                ENABLED = response.getStatus() == 200;\n+            } catch (Exception e) {\n+                // ignore\n+                ENABLED = false;\n             }\n         }\n-        return ENABLED;\n+\n+        assumeTrue(ENABLED);\n     }\n \n     private static WebClient webClient() {\n@@ -123,11 +123,6 @@ private static WebClient webClient() {\n                 header(HttpHeaders.AUTHORIZATION, \"Bearer \" + adminClient.getJWT());\n     }\n \n-    @BeforeEach\n-    public void check() {\n-        assumeTrue(isSCIMAvailable(webClient()));\n-    }\n-\n     @Test\n     public void serviceProviderConfig() {\n         Response response = webClient().path(\"ServiceProviderConfig\").get();"}]}