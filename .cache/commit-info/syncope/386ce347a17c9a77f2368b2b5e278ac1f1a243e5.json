{"sha":"386ce347a17c9a77f2368b2b5e278ac1f1a243e5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjM4NmNlMzQ3YTE3YzlhNzdmMjM2OGIyYjVlMjc4YWMxZjFhMjQzZTU=","commit":{"author":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2013-02-11T10:32:31Z"},"committer":{"name":"Colm O Heigeartaigh","email":"coheigea@apache.org","date":"2013-02-11T10:32:31Z"},"message":"[SYNCOPE-215] - Committing Fabio's modified patch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1444727 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2ade38b1fa7c1ba8a3cf5c20b258675154591cea","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/2ade38b1fa7c1ba8a3cf5c20b258675154591cea"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/386ce347a17c9a77f2368b2b5e278ac1f1a243e5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/386ce347a17c9a77f2368b2b5e278ac1f1a243e5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/386ce347a17c9a77f2368b2b5e278ac1f1a243e5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/386ce347a17c9a77f2368b2b5e278ac1f1a243e5/comments","author":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"committer":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","site_admin":false},"parents":[{"sha":"c3210f8f8d807ac5d2a037d9e0c083f8d863edc9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/c3210f8f8d807ac5d2a037d9e0c083f8d863edc9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/c3210f8f8d807ac5d2a037d9e0c083f8d863edc9"}],"stats":{"total":98,"additions":84,"deletions":14},"files":[{"sha":"68ce27423a8347fb9efb705679ca6e2f604480cf","filename":"console/src/main/java/org/apache/syncope/console/pages/VirtualSchemaModalPage.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/386ce347a17c9a77f2368b2b5e278ac1f1a243e5/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/386ce347a17c9a77f2368b2b5e278ac1f1a243e5/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.java?ref=386ce347a17c9a77f2368b2b5e278ac1f1a243e5","patch":"@@ -22,6 +22,7 @@\n import org.apache.syncope.common.to.VirtualSchemaTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.validation.SyncopeClientCompositeErrorException;\n+import org.apache.syncope.console.wicket.markup.html.form.AjaxCheckBoxPanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -61,6 +62,9 @@ public void setSchemaModalPage(final PageReference callerPageRef, final ModalWin\n         name.addRequiredLabel();\n \n         name.setEnabled(createFlag);\n+        \n+        final AjaxCheckBoxPanel readonly = new AjaxCheckBoxPanel(\"readonly\", getString(\"readonly\"),\n+                                                                 new PropertyModel<Boolean>(schema, \"readonly\"));\n \n         final IndicatingAjaxButton submit = new IndicatingAjaxButton(\"apply\", new ResourceModel(\"submit\")) {\n \n@@ -121,6 +125,7 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n         MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE, allowedRoles);\n \n         schemaForm.add(name);\n+        schemaForm.add(readonly);\n \n         schemaForm.add(submit);\n         schemaForm.add(cancel);"},{"sha":"aa8728e01a375b30f2ae1f25baaa2a8875ac72d5","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/VirtualAttributesPanel.java","status":"modified","additions":69,"deletions":14,"changes":83,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/386ce347a17c9a77f2368b2b5e278ac1f1a243e5/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/386ce347a17c9a77f2368b2b5e278ac1f1a243e5/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FVirtualAttributesPanel.java?ref=386ce347a17c9a77f2368b2b5e278ac1f1a243e5","patch":"@@ -18,12 +18,16 @@\n  */\n package org.apache.syncope.console.pages.panels;\n \n+import java.util.ArrayList;\n+import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n \n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.AttributeTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.UserTO;\n+import org.apache.syncope.common.to.VirtualSchemaTO;\n import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.console.rest.SchemaRestClient;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxDecoratedCheckbox;\n@@ -64,22 +68,33 @@ public <T extends AbstractAttributableTO> VirtualAttributesPanel(final String id\n \n         setOutputMarkupId(true);\n \n-        final IModel<List<String>> virtualSchemaNames = new LoadableDetachableModel<List<String>>() {\n+        final IModel<Map<String, VirtualSchemaTO>> schemas = new LoadableDetachableModel<Map<String, VirtualSchemaTO>>() {\n \n-            private static final long serialVersionUID = 5275935387613157437L;\n+            private static final long serialVersionUID = -5489981430516587774L;\n \n             @Override\n-            protected List<String> load() {\n+            protected Map<String, VirtualSchemaTO> load() {\n+                final List<VirtualSchemaTO> schemaTOs;\n                 if (entityTO instanceof RoleTO) {\n-                    return schemaRestClient.getVirtualSchemaNames(AttributableType.ROLE);\n+                    schemaTOs = schemaRestClient.getVirtualSchemas(AttributableType.ROLE);\n                 } else if (entityTO instanceof UserTO) {\n-                    return schemaRestClient.getVirtualSchemaNames(AttributableType.USER);\n+                    schemaTOs = schemaRestClient.getVirtualSchemas(AttributableType.USER);\n                 } else {\n-                    return schemaRestClient.getVirtualSchemaNames(AttributableType.MEMBERSHIP);\n+                    schemaTOs = schemaRestClient.getVirtualSchemas(AttributableType.MEMBERSHIP);\n                 }\n+\n+                final Map<String, VirtualSchemaTO> schemas = new HashMap<String, VirtualSchemaTO>();\n+\n+                for (VirtualSchemaTO schemaTO : schemaTOs) {\n+                    schemas.put(schemaTO.getName(), schemaTO);\n+                }\n+\n+                return schemas;\n             }\n         };\n \n+        final List<String> virtualSchemaNames = new ArrayList<String>(schemas.getObject().keySet());\n+\n         final WebMarkupContainer attributesContainer = new WebMarkupContainer(\"virAttrContainer\");\n \n         attributesContainer.setOutputMarkupId(true);\n@@ -141,6 +156,30 @@ public CharSequence getPrecondition(final Component component) {\n                     }\n                 });\n \n+                if (attributeTO.getValues().isEmpty()) {\n+                    attributeTO.addValue(\"\");\n+                }\n+\n+                if (attributeTO.getSchema() != null) {\n+                    VirtualSchemaTO attributeSchema = schemas.getObject().get(attributeTO.getSchema());\n+                    if (attributeSchema != null) {\n+                        attributeTO.setReadonly(attributeSchema.isReadonly());\n+                    }\n+                }\n+\n+                final AjaxTextFieldPanel panel;\n+                final MultiValueSelectorPanel multiPanel;\n+                if (templateMode) {\n+                    panel = new AjaxTextFieldPanel(\"values\", \"values\", new Model<String>());\n+                    panel.setReadOnly(attributeTO.isReadonly());\n+                    multiPanel = null;\n+                } else {\n+                    panel = new AjaxTextFieldPanel(\"panel\", \"values\", new Model<String>(null));\n+                    panel.setReadOnly(attributeTO.isReadonly());\n+                    multiPanel = new MultiValueSelectorPanel(\"values\", new PropertyModel<List<String>>(attributeTO,\n+                            \"values\"), panel);\n+                }\n+\n                 final DropDownChoice<String> schemaChoice = new DropDownChoice<String>(\"schema\",\n                         new PropertyModel<String>(attributeTO, \"schema\"), virtualSchemaNames,\n                         new ChoiceRenderer<String>() {\n@@ -162,25 +201,41 @@ public Object getDisplayValue(final String object) {\n                     private static final long serialVersionUID = -1107858522700306810L;\n \n                     @Override\n-                    protected void onUpdate(final AjaxRequestTarget art) {\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n \n                         attributeTO.setSchema(schemaChoice.getModelObject());\n+\n+                        VirtualSchemaTO attributeSchema =\n+                                schemas.getObject().get(attributeTO.getSchema());\n+                        if (attributeSchema != null) {\n+                            attributeTO.setReadonly(attributeSchema.isReadonly());\n+                            panel.setReadOnly(attributeTO.isReadonly());\n+                        }\n+\n+                        if (multiPanel != null) {\n+                            multiPanel.getView().setEnabled(false);\n+                        }\n+                    }\n+                });\n+\n+                schemaChoice.add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+\n+                    private static final long serialVersionUID = -1107858522700306810L;\n+\n+                    @Override\n+                    protected void onUpdate(final AjaxRequestTarget target) {\n+                        target.add(attributesContainer);\n                     }\n                 });\n \n                 schemaChoice.setOutputMarkupId(true);\n                 schemaChoice.setRequired(true);\n                 item.add(schemaChoice);\n \n-                if (attributeTO.getValues().isEmpty()) {\n-                    attributeTO.addValue(\"\");\n-                }\n-\n                 if (templateMode) {\n-                    item.add(new AjaxTextFieldPanel(\"values\", \"values\", new Model<String>()));\n+                    item.add(panel);\n                 } else {\n-                    item.add(new MultiValueSelectorPanel(\"values\", new PropertyModel<List<String>>(attributeTO,\n-                            \"values\"), new AjaxTextFieldPanel(\"panel\", \"values\", new Model<String>(null))));\n+                    item.add(multiPanel);\n                 }\n             }\n         };"},{"sha":"c83b14c92152ea186f2458f1f9780480840015bb","filename":"console/src/main/resources/org/apache/syncope/console/pages/VirtualSchemaModalPage.html","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/386ce347a17c9a77f2368b2b5e278ac1f1a243e5/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/386ce347a17c9a77f2368b2b5e278ac1f1a243e5/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.html?ref=386ce347a17c9a77f2368b2b5e278ac1f1a243e5","patch":"@@ -29,6 +29,14 @@\n                     <span wicket:id=\"name\">[name]</span>\n                 </div>\n             </div>\n+            <div class=\"tablerow\">\n+                <div class=\"tablecolumn_label short_dynamicsize\">\n+                    <label for=\"readonly\" class=\"onerowlabel\"><wicket:message key=\"readonly\"/></label>\n+                </div>\n+                <div class=\"tablecolumn_field medium_dynamicsize\">\n+                    <span wicket:id=\"readonly\">[readonly]</span>\n+                </div>\n+            </div>\n         </div>\n         <div style=\"margin: 10px 0px 0\">\n             <input type=\"submit\""},{"sha":"33f5af159c43fa186d7a188b0070ef313ce648d5","filename":"console/src/main/resources/org/apache/syncope/console/pages/VirtualSchemaModalPage.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/386ce347a17c9a77f2368b2b5e278ac1f1a243e5/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/386ce347a17c9a77f2368b2b5e278ac1f1a243e5/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage.properties?ref=386ce347a17c9a77f2368b2b5e278ac1f1a243e5","patch":"@@ -20,3 +20,4 @@ existing_schemas=Existing Schemas:\n edit_attribute=Edit attribute\n attributes=Virtual attributes\n title=Virtual Schema\n+readonly=Read-only"},{"sha":"8c66de16810938f52d4d26f0b38bc68d8fc4a361","filename":"console/src/main/resources/org/apache/syncope/console/pages/VirtualSchemaModalPage_it.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/386ce347a17c9a77f2368b2b5e278ac1f1a243e5/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/386ce347a17c9a77f2368b2b5e278ac1f1a243e5/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FVirtualSchemaModalPage_it.properties?ref=386ce347a17c9a77f2368b2b5e278ac1f1a243e5","patch":"@@ -20,3 +20,4 @@ existing_schemas=Schemi presenti:\n edit_attribute=Modifica attributo\n attributes=Attributi virtuali\n title=Schema Virtuale\n+readonly=Read-only"}]}