{"sha":"857f02a0cbc0d6662ac98bcf3e7934557a761212","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjg1N2YwMmEwY2JjMGQ2NjYyYWM5OGJjZjNlNzkzNDU1N2E3NjEyMTI=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-04-30T10:11:50Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2015-04-30T10:11:50Z"},"message":"[SYNCOPE-663] Throwing new IgnoreException from SyncActions' or PushActions's methods will make the related user / role to get ignored by the sync / push process","tree":{"sha":"5a3596dd17c3b629727fdc210553241ea08b3f3f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/5a3596dd17c3b629727fdc210553241ea08b3f3f"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/857f02a0cbc0d6662ac98bcf3e7934557a761212","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/857f02a0cbc0d6662ac98bcf3e7934557a761212","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/857f02a0cbc0d6662ac98bcf3e7934557a761212","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/857f02a0cbc0d6662ac98bcf3e7934557a761212/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"fa3223faf3038f5346377025b125728ca11f0d3f","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/fa3223faf3038f5346377025b125728ca11f0d3f","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/fa3223faf3038f5346377025b125728ca11f0d3f"}],"stats":{"total":325,"additions":206,"deletions":119},"files":[{"sha":"a6e544251f7a8fb6d600894d0a7bbcad7a7e892e","filename":"console/src/main/java/org/apache/syncope/console/pages/SecurityQuestionModalPage.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857f02a0cbc0d6662ac98bcf3e7934557a761212/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSecurityQuestionModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857f02a0cbc0d6662ac98bcf3e7934557a761212/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSecurityQuestionModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FSecurityQuestionModalPage.java?ref=857f02a0cbc0d6662ac98bcf3e7934557a761212","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.console.pages;\n \n-import static org.apache.syncope.console.pages.AbstractBasePage.FORM;\n-\n import org.apache.syncope.common.SyncopeClientException;\n import org.apache.syncope.common.to.SecurityQuestionTO;\n import org.apache.syncope.console.commons.Constants;"},{"sha":"475216296673f50e5509c80a1dfce749b94afa68","filename":"console/src/test/java/org/apache/syncope/console/EditProfileTestITCase.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857f02a0cbc0d6662ac98bcf3e7934557a761212/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FEditProfileTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857f02a0cbc0d6662ac98bcf3e7934557a761212/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FEditProfileTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FEditProfileTestITCase.java?ref=857f02a0cbc0d6662ac98bcf3e7934557a761212","patch":"@@ -19,7 +19,6 @@\n package org.apache.syncope.console;\n \n import java.util.concurrent.TimeUnit;\n-import static org.apache.syncope.console.AbstractTest.ADMIN;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n@@ -36,21 +35,21 @@ public class EditProfileTestITCase extends AbstractTest {\n     public void setUp() throws Exception {\n         seleniumDriver = new FirefoxDriver();\n         //selenium = new WebDriverBackedSelenium(seleniumDriver, BASE_URL);\n-        seleniumDriver.get(BASE_URL);        \n+        seleniumDriver.get(BASE_URL);\n         wait = new WebDriverWait(seleniumDriver, 6);\n-        \n+\n     }\n \n     @Test\n     public void selfRegistration() {\n         seleniumDriver.findElement(By.xpath(\"//div/div[2]/div[1]/span/a/span\")).click();\n-        \n+\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//iframe\")));\n         seleniumDriver.switchTo().frame(0);\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//span[contains(text(),'Attributes')]\")));\n         seleniumDriver.switchTo().defaultContent();\n-        seleniumDriver.findElement(By.xpath(\"//a[@class='w_close']\")).click();               \n+        seleniumDriver.findElement(By.xpath(\"//a[@class='w_close']\")).click();\n \n         // only to have some \"Logout\" available for @After\n         seleniumDriver.get(BASE_URL);\n@@ -62,7 +61,7 @@ public void selfRegistration() {\n         seleniumDriver.findElement(By.name(\"p::submit\")).click();\n         seleniumDriver.manage().timeouts().pageLoadTimeout(30, TimeUnit.SECONDS);\n     }\n-    \n+\n     @Test\n     public void editUserProfile() {\n         WebElement element = seleniumDriver.findElement(By.name(\"userId\"));\n@@ -75,7 +74,7 @@ public void editUserProfile() {\n         seleniumDriver.findElement(By.xpath(\"//div[@id='username']/a\")).click();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//iframe\")));\n-        seleniumDriver.switchTo().frame(0);        \n+        seleniumDriver.switchTo().frame(0);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//span[contains(text(),'Attributes')]\")));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//input[@value='rossini']\")));\n         seleniumDriver.switchTo().defaultContent();"},{"sha":"a64bdb5ed55553fd2b7e870973dc0337e440a562","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/RoleController.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FRoleController.java?ref=857f02a0cbc0d6662ac98bcf3e7934557a761212","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.core.rest.controller;\n \n-import static org.apache.syncope.core.rest.controller.AbstractController.LOG;\n-\n import java.lang.reflect.Method;\n import java.util.ArrayList;\n import java.util.Collection;"},{"sha":"893c35f7ab20279415f89161ce44398edf03f07e","filename":"core/src/main/java/org/apache/syncope/core/sync/IgnoreProvisionException.java","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FIgnoreProvisionException.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FIgnoreProvisionException.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FIgnoreProvisionException.java?ref=857f02a0cbc0d6662ac98bcf3e7934557a761212","patch":"@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.syncope.core.sync;\n+\n+/**\n+ * Raised by {@link SyncActions} or {@link PushActions} methods when the given subject is to be ignored for\n+ * synchronization / push.\n+ */\n+public class IgnoreProvisionException extends RuntimeException {\n+\n+    private static final long serialVersionUID = -8803817097998786364L;\n+\n+}"},{"sha":"a020aac55fe9935f7794ca705d10f5494dba451b","filename":"core/src/main/java/org/apache/syncope/core/sync/PushActions.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FPushActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FPushActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FPushActions.java?ref=857f02a0cbc0d6662ac98bcf3e7934557a761212","patch":"@@ -18,15 +18,14 @@\n  */\n package org.apache.syncope.core.sync;\n \n-import java.util.Map;\n-import java.util.Set;\n import org.apache.syncope.core.persistence.beans.AbstractAttributable;\n import org.apache.syncope.core.sync.impl.AbstractSyncopeResultHandler;\n-import org.identityconnectors.framework.common.objects.Attribute;\n import org.quartz.JobExecutionException;\n \n /**\n  * Interface for actions to be performed during PushJob execution.\n+ * <br/>\n+ * All methods can throw {@link IgnoreProvisionException} to make the current subject ignored by the push process.\n  */\n public interface PushActions extends AbstractSyncActions<AbstractSyncopeResultHandler<?, ?>> {\n "},{"sha":"c169f8ce317b42827739f41f35bd58feb4e86c2c","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncActions.java","status":"modified","additions":34,"deletions":30,"changes":64,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncActions.java?ref=857f02a0cbc0d6662ac98bcf3e7934557a761212","patch":"@@ -26,6 +26,9 @@\n \n /**\n  * Interface for actions to be performed during SyncJob execution.\n+ * <br/>\n+ * All methods can throw {@link IgnoreProvisionException} to make the current subject ignored by the synchronization\n+ * process.\n  */\n public interface SyncActions extends AbstractSyncActions<AbstractSyncopeResultHandler<?, ?>> {\n \n@@ -41,9 +44,9 @@ public interface SyncActions extends AbstractSyncActions<AbstractSyncopeResultHa\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends AbstractAttributableTO> SyncDelta beforeProvision(\n-            final SyncProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final T subject) throws JobExecutionException;\n+            SyncProfile<?, ?> profile,\n+            SyncDelta delta,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before creating (and linking to the resource) a synchronized user / role locally.\n@@ -57,9 +60,9 @@ <T extends AbstractAttributableTO> SyncDelta beforeProvision(\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends AbstractAttributableTO> SyncDelta beforeAssign(\n-            final SyncProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final T subject) throws JobExecutionException;\n+            SyncProfile<?, ?> profile,\n+            SyncDelta delta,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before unlinking resource from the synchronized user / role and de-provisioning.\n@@ -73,9 +76,9 @@ <T extends AbstractAttributableTO> SyncDelta beforeAssign(\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends AbstractAttributableTO> SyncDelta beforeUnassign(\n-            final SyncProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final T subject) throws JobExecutionException;\n+            SyncProfile<?, ?> profile,\n+            SyncDelta delta,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before de-provisioning action only.\n@@ -89,9 +92,9 @@ <T extends AbstractAttributableTO> SyncDelta beforeUnassign(\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends AbstractAttributableTO> SyncDelta beforeDeprovision(\n-            final SyncProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final T subject) throws JobExecutionException;\n+            SyncProfile<?, ?> profile,\n+            SyncDelta delta,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before unlinking resource from the synchronized user / role.\n@@ -105,9 +108,9 @@ <T extends AbstractAttributableTO> SyncDelta beforeDeprovision(\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends AbstractAttributableTO> SyncDelta beforeUnlink(\n-            final SyncProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final T subject) throws JobExecutionException;\n+            SyncProfile<?, ?> profile,\n+            SyncDelta delta,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before linking resource to the synchronized user / role.\n@@ -121,9 +124,9 @@ <T extends AbstractAttributableTO> SyncDelta beforeUnlink(\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends AbstractAttributableTO> SyncDelta beforeLink(\n-            final SyncProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final T subject) throws JobExecutionException;\n+            SyncProfile<?, ?> profile,\n+            SyncDelta delta,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed before to update a synchronized user / role locally.\n@@ -138,10 +141,10 @@ <T extends AbstractAttributableTO> SyncDelta beforeLink(\n      * @throws JobExecutionException in case of generic failure.\n      */\n     <T extends AbstractAttributableTO, K extends AbstractAttributableMod> SyncDelta beforeUpdate(\n-            final SyncProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final T subject,\n-            final K subjectMod)\n+            SyncProfile<?, ?> profile,\n+            SyncDelta delta,\n+            T subject,\n+            K subjectMod)\n             throws JobExecutionException;\n \n     /**\n@@ -154,22 +157,23 @@ <T extends AbstractAttributableTO, K extends AbstractAttributableMod> SyncDelta\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends AbstractAttributableTO> SyncDelta beforeDelete(\n-            final SyncProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final T subject) throws JobExecutionException;\n+            SyncProfile<?, ?> profile,\n+            SyncDelta delta,\n+            T subject) throws JobExecutionException;\n \n     /**\n      * Action to be executed after each local user / role synchronization.\n      *\n      * @param profile profile of the synchronization being executed.\n-     * @param delta retrieved synchronization information (may be modified by 'beforeProvision/beforeUpdate/beforeDelete')\n+     * @param delta retrieved synchronization information (may be modified by\n+     * 'beforeProvision/beforeUpdate/beforeDelete')\n      * @param subject synchronized local user / role\n      * @param result global synchronization results at the current synchronization step\n      * @throws JobExecutionException in case of generic failure\n      */\n     <T extends AbstractAttributableTO> void after(\n-            final SyncProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final T subject,\n-            final SyncResult result) throws JobExecutionException;\n+            SyncProfile<?, ?> profile,\n+            SyncDelta delta,\n+            T subject,\n+            SyncResult result) throws JobExecutionException;\n }"},{"sha":"d95cad9ce9a30fe6a14bfcf8f95f4ea445c4d534","filename":"core/src/main/java/org/apache/syncope/core/sync/SyncResult.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncResult.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncResult.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FSyncResult.java?ref=857f02a0cbc0d6662ac98bcf3e7934557a761212","patch":"@@ -28,9 +28,13 @@\n import org.apache.syncope.common.types.TraceLevel;\n \n public class SyncResult {\n+\n     public enum Status {\n+\n         SUCCESS,\n+        IGNORE,\n         FAILURE\n+\n     }\n \n     private String message;\n@@ -115,8 +119,8 @@ public String getReportString(final TraceLevel level) {\n             // All\n             return String.format(\"%s %s (id/name): %d/%s %s\", operation, status, id, name,\n                     StringUtils.isBlank(message)\n-                    ? \"\"\n-                    : \"with message: \" + message);\n+                            ? \"\"\n+                            : \"with message: \" + message);\n         }\n     }\n "},{"sha":"e360f43954dbda2db0791e5ffb28abbe34b66d6e","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSubjectPushResultHandler.java","status":"modified","additions":19,"deletions":14,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectPushResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectPushResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectPushResultHandler.java?ref=857f02a0cbc0d6662ac98bcf3e7934557a761212","patch":"@@ -19,15 +19,14 @@\n package org.apache.syncope.core.sync.impl;\n \n import static org.apache.syncope.core.sync.impl.AbstractSyncopeResultHandler.LOG;\n+\n import java.util.ArrayList;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Set;\n import org.apache.commons.lang3.exception.ExceptionUtils;\n import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.mod.MembershipMod;\n-import org.apache.syncope.common.to.AbstractSubjectTO;\n-import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.AuditElements;\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.IntMappingType;\n@@ -42,6 +41,7 @@\n import org.apache.syncope.core.persistence.beans.membership.Membership;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.propagation.PropagationByResource;\n+import org.apache.syncope.core.sync.IgnoreProvisionException;\n import org.apache.syncope.core.sync.PushActions;\n import org.apache.syncope.core.sync.SyncResult;\n import org.apache.syncope.core.util.AttributableUtil;\n@@ -52,33 +52,38 @@\n \n public abstract class AbstractSubjectPushResultHandler extends AbstractSyncopeResultHandler<PushTask, PushActions> {\n \n-    protected abstract AttributableUtil getAttributableUtil();\n-\n-    protected abstract String getName(final AbstractSubject subject);\n+    protected abstract String getName(AbstractSubject subject);\n \n     protected abstract AbstractMapping getMapping();\n \n-    protected abstract AbstractSubjectTO getSubjectTO(final long id);\n+    protected abstract AbstractSubject getSubject(long id);\n \n-    protected abstract AbstractSubject getSubject(final long id);\n+    protected abstract AbstractSubject deprovision(AbstractSubject sbj);\n \n-    protected abstract AbstractSubject deprovision(final AbstractSubject sbj);\n+    protected abstract AbstractSubject provision(AbstractSubject sbj, Boolean enabled);\n \n-    protected abstract AbstractSubject provision(final AbstractSubject sbj, final Boolean enabled);\n+    protected abstract AbstractSubject link(AbstractSubject sbj, Boolean unlink);\n \n-    protected abstract AbstractSubject link(final AbstractSubject sbj, final Boolean unlink);\n+    protected abstract AbstractSubject unassign(AbstractSubject sbj);\n \n-    protected abstract AbstractSubject unassign(final AbstractSubject sbj);\n+    protected abstract AbstractSubject assign(AbstractSubject sbj, Boolean enabled);\n \n-    protected abstract AbstractSubject assign(final AbstractSubject sbj, Boolean enabled);\n-\n-    protected abstract ConnectorObject getRemoteObject(final String accountId);\n+    protected abstract ConnectorObject getRemoteObject(String accountId);\n \n     @Transactional\n     public boolean handle(final long subjectId) {\n         try {\n             doHandle(subjectId);\n             return true;\n+        } catch (IgnoreProvisionException e) {\n+            SyncResult result = new SyncResult();\n+            result.setOperation(ResourceOperation.NONE);\n+            result.setSubjectType(getAttributableUtil().getType());\n+            result.setStatus(SyncResult.Status.IGNORE);\n+            result.setId(subjectId);\n+\n+            LOG.warn(\"Ignoring during synchronization\", e);\n+            return true;\n         } catch (JobExecutionException e) {\n             LOG.error(\"Synchronization failed\", e);\n             return false;"},{"sha":"6b6c6472aee23cd06ddaa5f553eaab13902e8665","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSubjectSyncResultHandler.java","status":"modified","additions":26,"deletions":19,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSubjectSyncResultHandler.java?ref=857f02a0cbc0d6662ac98bcf3e7934557a761212","patch":"@@ -20,8 +20,6 @@\n \n import org.apache.syncope.core.sync.SyncUtilities;\n \n-import static org.apache.syncope.core.sync.impl.AbstractSyncopeResultHandler.LOG;\n-\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n@@ -40,6 +38,7 @@\n import org.apache.syncope.core.propagation.PropagationException;\n import org.apache.syncope.core.rest.controller.UnauthorizedRoleException;\n import org.apache.syncope.core.rest.data.AttributableTransformer;\n+import org.apache.syncope.core.sync.IgnoreProvisionException;\n import org.apache.syncope.core.sync.SyncActions;\n import org.apache.syncope.core.sync.SyncResult;\n import org.apache.syncope.core.util.AttributableUtil;\n@@ -61,26 +60,22 @@ public abstract class AbstractSubjectSyncResultHandler extends AbstractSyncopeRe\n     @Autowired\n     protected UserDAO userDAO;\n \n-    protected abstract AttributableUtil getAttributableUtil();\n-\n     protected abstract String getName(AbstractSubjectTO subjectTO);\n \n-    protected abstract AbstractSubjectTO getSubjectTO(long id);\n-\n     protected abstract AbstractSubjectMod getSubjectMod(AbstractSubjectTO subjectTO, SyncDelta delta);\n \n-    protected abstract AbstractSubjectTO create(AbstractSubjectTO subjectTO, SyncDelta _delta, SyncResult result);\n+    protected abstract AbstractSubjectTO doCreate(AbstractSubjectTO subjectTO, SyncDelta _delta, SyncResult result);\n \n-    protected abstract AbstractSubjectTO link(AbstractSubjectTO before, SyncResult result, boolean unlink)\n+    protected abstract AbstractSubjectTO doLink(AbstractSubjectTO before, SyncResult result, boolean unlink)\n             throws Exception;\n \n-    protected abstract AbstractSubjectTO update(AbstractSubjectTO before, AbstractSubjectMod subjectMod,\n+    protected abstract AbstractSubjectTO doUpdate(AbstractSubjectTO before, AbstractSubjectMod subjectMod,\n             SyncDelta delta, SyncResult result)\n             throws Exception;\n \n-    protected abstract void deprovision(Long id, boolean unlink) throws Exception;\n+    protected abstract void doDeprovision(Long id, boolean unlink) throws Exception;\n \n-    protected abstract void delete(Long id);\n+    protected abstract void doDelete(Long id);\n \n     @Override\n     public boolean handle(final SyncDelta delta) {\n@@ -91,6 +86,16 @@ public boolean handle(final SyncDelta delta) {\n \n             doHandle(delta, profile.getResults());\n             return true;\n+        } catch (IgnoreProvisionException e) {\n+            SyncResult result = new SyncResult();\n+            result.setOperation(ResourceOperation.NONE);\n+            result.setSubjectType(getAttributableUtil().getType());\n+            result.setStatus(SyncResult.Status.IGNORE);\n+            result.setId(0L);\n+            result.setName(delta.getObject().getName().getNameValue());\n+\n+            LOG.warn(\"Ignoring during synchronization\", e);\n+            return true;\n         } catch (JobExecutionException e) {\n             LOG.error(\"Synchronization failed\", e);\n             return false;\n@@ -99,6 +104,7 @@ public boolean handle(final SyncDelta delta) {\n \n     protected List<SyncResult> assign(final SyncDelta delta, final AttributableUtil attrUtil)\n             throws JobExecutionException {\n+\n         if (!profile.getSyncTask().isPerformCreate()) {\n             LOG.debug(\"SyncTask not configured for create\");\n             return Collections.<SyncResult>emptyList();\n@@ -134,8 +140,9 @@ protected List<SyncResult> assign(final SyncDelta delta, final AttributableUtil\n         return Collections.singletonList(result);\n     }\n \n-    protected List<SyncResult> create(final SyncDelta delta, final AttributableUtil attrUtil)\n+    protected List<SyncResult> provision(final SyncDelta delta, final AttributableUtil attrUtil)\n             throws JobExecutionException {\n+\n         if (!profile.getSyncTask().isPerformCreate()) {\n             LOG.debug(\"SyncTask not configured for create\");\n             return Collections.<SyncResult>emptyList();\n@@ -181,7 +188,7 @@ private void create(\n         Result resultStatus;\n \n         try {\n-            AbstractSubjectTO actual = create(subjectTO, delta, result);\n+            AbstractSubjectTO actual = doCreate(subjectTO, delta, result);\n             result.setName(getName(actual));\n             output = actual;\n             resultStatus = Result.SUCCESS;\n@@ -256,7 +263,7 @@ protected List<SyncResult> update(SyncDelta delta, final List<Long> subjects, fi\n                             delta = action.beforeUpdate(this.getProfile(), delta, before, attributableMod);\n                         }\n \n-                        final AbstractSubjectTO updated = update(before, attributableMod, delta, result);\n+                        final AbstractSubjectTO updated = doUpdate(before, attributableMod, delta, result);\n \n                         for (SyncActions action : profile.getActions()) {\n                             action.after(this.getProfile(), delta, updated, result);\n@@ -340,7 +347,7 @@ protected List<SyncResult> deprovision(\n                             }\n                         }\n \n-                        deprovision(id, unlink);\n+                        doDeprovision(id, unlink);\n                         output = getSubjectTO(id);\n \n                         for (SyncActions action : profile.getActions()) {\n@@ -426,7 +433,7 @@ protected List<SyncResult> link(\n                             }\n                         }\n \n-                        output = link(before, result, unlink);\n+                        output = doLink(before, result, unlink);\n \n                         for (SyncActions action : profile.getActions()) {\n                             action.after(this.getProfile(), delta, AbstractSubjectTO.class.cast(output), result);\n@@ -491,7 +498,7 @@ protected List<SyncResult> delete(SyncDelta delta, final List<Long> subjects, fi\n                     }\n \n                     try {\n-                        delete(id);\n+                        doDelete(id);\n                         output = null;\n                         resultStatus = Result.SUCCESS;\n                     } catch (Exception e) {\n@@ -552,7 +559,7 @@ private List<SyncResult> ignore(SyncDelta delta, final AttributableUtil attrUtil\n      * @param delta returned by the underlying profile.getConnector()\n      * @throws JobExecutionException in case of synchronization failure.\n      */\n-    protected final void doHandle(final SyncDelta delta, final Collection<SyncResult> syncResults)\n+    protected void doHandle(final SyncDelta delta, final Collection<SyncResult> syncResults)\n             throws JobExecutionException {\n \n         final AttributableUtil attrUtil = getAttributableUtil();\n@@ -593,7 +600,7 @@ protected final void doHandle(final SyncDelta delta, final Collection<SyncResult\n                             profile.getResults().addAll(assign(delta, attrUtil));\n                             break;\n                         case PROVISION:\n-                            profile.getResults().addAll(create(delta, attrUtil));\n+                            profile.getResults().addAll(provision(delta, attrUtil));\n                             break;\n                         case IGNORE:\n                             profile.getResults().addAll(ignore(delta, attrUtil, false));"},{"sha":"e174971055227192f07ddd42056115bc5c917be3","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSyncJob.java","status":"modified","additions":39,"deletions":18,"changes":57,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncJob.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncJob.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncJob.java?ref=857f02a0cbc0d6662ac98bcf3e7934557a761212","patch":"@@ -117,13 +117,15 @@ protected String createReport(final List<SyncResult> syncResults, final TraceLev\n         List<SyncResult> uSuccDelete = new ArrayList<SyncResult>();\n         List<SyncResult> uFailDelete = new ArrayList<SyncResult>();\n         List<SyncResult> uSuccNone = new ArrayList<SyncResult>();\n+        List<SyncResult> uIgnore = new ArrayList<SyncResult>();\n         List<SyncResult> rSuccCreate = new ArrayList<SyncResult>();\n         List<SyncResult> rFailCreate = new ArrayList<SyncResult>();\n         List<SyncResult> rSuccUpdate = new ArrayList<SyncResult>();\n         List<SyncResult> rFailUpdate = new ArrayList<SyncResult>();\n         List<SyncResult> rSuccDelete = new ArrayList<SyncResult>();\n         List<SyncResult> rFailDelete = new ArrayList<SyncResult>();\n         List<SyncResult> rSuccNone = new ArrayList<SyncResult>();\n+        List<SyncResult> rIgnore = new ArrayList<SyncResult>();\n \n         for (SyncResult syncResult : syncResults) {\n             switch (syncResult.getStatus()) {\n@@ -237,6 +239,20 @@ protected String createReport(final List<SyncResult> syncResults, final TraceLev\n                     }\n                     break;\n \n+                case IGNORE:\n+                    switch (syncResult.getSubjectType()) {\n+                        case USER:\n+                            uIgnore.add(syncResult);\n+                            break;\n+\n+                        case ROLE:\n+                            rIgnore.add(syncResult);\n+                            break;\n+\n+                        default:\n+                    }\n+                    break;\n+\n                 default:\n             }\n         }\n@@ -249,15 +265,16 @@ protected String createReport(final List<SyncResult> syncResults, final TraceLev\n                 append(' ').\n                 append(\"[deleted/failures]: \").append(uSuccDelete.size()).append('/').append(uFailDelete.size()).\n                 append(' ').\n-                append(\"[ignored]: \").append(uSuccNone.size()).append('\\n');\n+                append(\"[no operation/ignored]: \").append(uSuccNone.size()).append('/').append(uIgnore.size()).\n+                append('\\n');\n         report.append(\"Roles \").\n                 append(\"[created/failures]: \").append(rSuccCreate.size()).append('/').append(rFailCreate.size()).\n                 append(' ').\n                 append(\"[updated/failures]: \").append(rSuccUpdate.size()).append('/').append(rFailUpdate.size()).\n                 append(' ').\n                 append(\"[deleted/failures]: \").append(rSuccDelete.size()).append('/').append(rFailDelete.size()).\n                 append(' ').\n-                append(\"[ignored]: \").append(rSuccNone.size());\n+                append(\"[no operation/ignored]: \").append(rSuccNone.size()).append('/').append(rIgnore.size());\n \n         // Failures\n         if (syncTraceLevel == TraceLevel.FAILURES || syncTraceLevel == TraceLevel.ALL) {\n@@ -290,22 +307,26 @@ protected String createReport(final List<SyncResult> syncResults, final TraceLev\n \n         // Succeeded, only if on 'ALL' level\n         if (syncTraceLevel == TraceLevel.ALL) {\n-            report.append(\"\\n\\nUsers created:\\n\")\n-                    .append(SyncResult.produceReport(uSuccCreate, syncTraceLevel))\n-                    .append(\"\\nUsers updated:\\n\")\n-                    .append(SyncResult.produceReport(uSuccUpdate, syncTraceLevel))\n-                    .append(\"\\nUsers deleted:\\n\")\n-                    .append(SyncResult.produceReport(uSuccDelete, syncTraceLevel))\n-                    .append(\"\\nUsers ignored:\\n\")\n-                    .append(SyncResult.produceReport(uSuccNone, syncTraceLevel));\n-            report.append(\"\\n\\nRoles created:\\n\")\n-                    .append(SyncResult.produceReport(rSuccCreate, syncTraceLevel))\n-                    .append(\"\\nRoles updated:\\n\")\n-                    .append(SyncResult.produceReport(rSuccUpdate, syncTraceLevel))\n-                    .append(\"\\nRoles deleted:\\n\")\n-                    .append(SyncResult.produceReport(rSuccDelete, syncTraceLevel))\n-                    .append(\"\\nRoles ignored:\\n\")\n-                    .append(SyncResult.produceReport(rSuccNone, syncTraceLevel));\n+            report.append(\"\\n\\nUsers created:\\n\").\n+                    append(SyncResult.produceReport(uSuccCreate, syncTraceLevel)).\n+                    append(\"\\nUsers updated:\\n\").\n+                    append(SyncResult.produceReport(uSuccUpdate, syncTraceLevel)).\n+                    append(\"\\nUsers deleted:\\n\").\n+                    append(SyncResult.produceReport(uSuccDelete, syncTraceLevel)).\n+                    append(\"\\nUsers no CRUD:\\n\").\n+                    append(SyncResult.produceReport(uSuccNone, syncTraceLevel)).\n+                    append(\"\\nUsers no operation:\\n\").\n+                    append(SyncResult.produceReport(uIgnore, syncTraceLevel));\n+            report.append(\"\\n\\nRoles created:\\n\").\n+                    append(SyncResult.produceReport(rSuccCreate, syncTraceLevel)).\n+                    append(\"\\nRoles updated:\\n\").\n+                    append(SyncResult.produceReport(rSuccUpdate, syncTraceLevel)).\n+                    append(\"\\nRoles deleted:\\n\").\n+                    append(SyncResult.produceReport(rSuccDelete, syncTraceLevel)).\n+                    append(\"\\nRoles no operation:\\n\").\n+                    append(SyncResult.produceReport(rSuccNone, syncTraceLevel)).\n+                    append(\"\\nRoles ignored:\\n\").\n+                    append(SyncResult.produceReport(rIgnore, syncTraceLevel));\n         }\n \n         return report.toString();"},{"sha":"3ac390f591f7c747acbeedee58f162082ba0461f","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/AbstractSyncopeResultHandler.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncopeResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncopeResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FAbstractSyncopeResultHandler.java?ref=857f02a0cbc0d6662ac98bcf3e7934557a761212","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.sync.impl;\n \n+import org.apache.syncope.common.to.AbstractSubjectTO;\n import org.apache.syncope.core.sync.SyncProfile;\n import org.apache.syncope.core.audit.AuditManager;\n import org.apache.syncope.core.connid.ConnObjectUtil;\n@@ -28,6 +29,7 @@\n import org.apache.syncope.core.rest.data.RoleDataBinder;\n import org.apache.syncope.core.rest.data.UserDataBinder;\n import org.apache.syncope.core.sync.AbstractSyncActions;\n+import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.workflow.role.RoleWorkflowAdapter;\n import org.apache.syncope.core.workflow.user.UserWorkflowAdapter;\n import org.slf4j.Logger;\n@@ -40,7 +42,7 @@\n      * Logger.\n      */\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractSyncopeResultHandler.class);\n-    \n+\n     /**\n      * User data binder.\n      */\n@@ -100,11 +102,16 @@\n      */\n     protected SyncProfile<T, A> profile;\n \n+    protected abstract AttributableUtil getAttributableUtil();\n+\n+    protected abstract AbstractSubjectTO getSubjectTO(long id);\n+\n     public void setProfile(final SyncProfile<T, A> profile) {\n         this.profile = profile;\n     }\n \n     public SyncProfile<T, A> getProfile() {\n         return profile;\n     }\n+\n }"},{"sha":"72ab83ddd6aae2d0f8bc5d1c672c2a683d0d9cd0","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/RoleSyncResultHandler.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRoleSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRoleSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FRoleSyncResultHandler.java?ref=857f02a0cbc0d6662ac98bcf3e7934557a761212","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.sync.impl;\n \n-import static org.apache.syncope.core.sync.impl.AbstractSyncopeResultHandler.LOG;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n@@ -80,7 +79,7 @@ protected AbstractSubjectMod getSubjectMod(\n     }\n \n     @Override\n-    protected AbstractSubjectTO create(\n+    protected AbstractSubjectTO doCreate(\n             final AbstractSubjectTO subjectTO, final SyncDelta _delta, final SyncResult result) {\n \n         RoleTO roleTO = RoleTO.class.cast(subjectTO);\n@@ -107,7 +106,7 @@ protected AbstractSubjectTO create(\n     }\n \n     @Override\n-    protected AbstractSubjectTO link(\n+    protected AbstractSubjectTO doLink(\n             final AbstractSubjectTO before,\n             final SyncResult result,\n             final boolean unlink)\n@@ -126,7 +125,7 @@ protected AbstractSubjectTO link(\n     }\n \n     @Override\n-    protected AbstractSubjectTO update(\n+    protected AbstractSubjectTO doUpdate(\n             final AbstractSubjectTO before,\n             final AbstractSubjectMod subjectMod,\n             final SyncDelta delta,\n@@ -160,7 +159,7 @@ protected AbstractSubjectTO update(\n     }\n \n     @Override\n-    protected void deprovision(final Long id, final boolean unlink) {\n+    protected void doDeprovision(final Long id, final boolean unlink) {\n \n         taskExecutor.execute(\n                 propagationManager.getRoleDeleteTaskIds(id, profile.getSyncTask().getResource().getName()));\n@@ -173,7 +172,7 @@ protected void deprovision(final Long id, final boolean unlink) {\n     }\n \n     @Override\n-    protected void delete(final Long id) {\n+    protected void doDelete(final Long id) {\n         try {\n             taskExecutor.execute(\n                     propagationManager.getRoleDeleteTaskIds(id, profile.getSyncTask().getResource().getName()));"},{"sha":"979feb31332f2f1d580922fba72ec0ee50e31fbc","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/UserSyncResultHandler.java","status":"modified","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FUserSyncResultHandler.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FUserSyncResultHandler.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FUserSyncResultHandler.java?ref=857f02a0cbc0d6662ac98bcf3e7934557a761212","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.syncope.core.sync.impl;\n \n-import static org.apache.syncope.core.sync.impl.AbstractSyncopeResultHandler.LOG;\n-\n import java.util.AbstractMap;\n import java.util.Collections;\n import java.util.HashSet;\n@@ -74,7 +72,7 @@ protected AbstractSubjectMod getSubjectMod(\n     }\n \n     @Override\n-    protected AbstractSubjectTO create(\n+    protected AbstractSubjectTO doCreate(\n             final AbstractSubjectTO subjectTO, final SyncDelta delta, final SyncResult result) {\n \n         UserTO userTO = UserTO.class.cast(subjectTO);\n@@ -98,7 +96,7 @@ protected AbstractSubjectTO create(\n     }\n \n     @Override\n-    protected AbstractSubjectTO link(\n+    protected AbstractSubjectTO doLink(\n             final AbstractSubjectTO before,\n             final SyncResult result,\n             final boolean unlink)\n@@ -117,7 +115,7 @@ protected AbstractSubjectTO link(\n     }\n \n     @Override\n-    protected AbstractSubjectTO update(\n+    protected AbstractSubjectTO doUpdate(\n             final AbstractSubjectTO before,\n             final AbstractSubjectMod subjectMod,\n             final SyncDelta delta,\n@@ -174,7 +172,7 @@ protected AbstractSubjectTO update(\n     }\n \n     @Override\n-    protected void deprovision(\n+    protected void doDeprovision(\n             final Long id,\n             final boolean unlink) {\n \n@@ -189,7 +187,7 @@ protected void deprovision(\n     }\n \n     @Override\n-    protected void delete(final Long id) {\n+    protected void doDelete(final Long id) {\n         try {\n             taskExecutor.execute(\n                     propagationManager.getUserDeleteTaskIds(id, profile.getSyncTask().getResource().getName()));"},{"sha":"01e5520d2479c83e8572c857101339cbf32b57b5","filename":"core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java?ref=857f02a0cbc0d6662ac98bcf3e7934557a761212","patch":"@@ -18,7 +18,6 @@\n  */\n package org.apache.syncope.core.rest;\n \n-import static org.apache.syncope.core.rest.AbstractTest.userService;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;"},{"sha":"afc05e4762cb5c8755400efa2f4ac8f99e9fe4cb","filename":"core/src/test/java/org/apache/syncope/core/rest/ResourceTestITCase.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FResourceTestITCase.java?ref=857f02a0cbc0d6662ac98bcf3e7934557a761212","patch":"@@ -299,8 +299,9 @@ public void updateWithException() {\n         try {\n             ResourceTO resourceTO = new ResourceTO();\n             resourceTO.setName(\"resourcenotfound\");\n-\n             resourceService.update(resourceTO.getName(), resourceTO);\n+\n+            fail();\n         } catch (SyncopeClientException e) {\n             assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n@@ -357,6 +358,7 @@ public void update() {\n     public void deleteWithException() {\n         try {\n             resourceService.delete(\"resourcenotfound\");\n+            fail();\n         } catch (SyncopeClientException e) {\n             assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }\n@@ -390,6 +392,7 @@ public void delete() {\n \n         try {\n             resourceService.read(resourceName);\n+            fail();\n         } catch (SyncopeClientException e) {\n             assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n         }"},{"sha":"5823f9b6f251e6ec01ecf54da4645dabda86d914","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":10,"deletions":3,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=857f02a0cbc0d6662ac98bcf3e7934557a761212","patch":"@@ -382,8 +382,7 @@ public void sync() throws Exception {\n             assertEquals(1, userTO.getMemberships().size());\n             assertTrue(userTO.getMemberships().get(0).getAttrMap().containsKey(\"subscriptionDate\"));\n \n-            // Unmatching --> Assign (link)\n-            // SYNCOPE-658\n+            // Unmatching --> Assign (link) - SYNCOPE-658\n             assertTrue(userTO.getResources().contains(RESOURCE_NAME_CSV));\n             int counter = 0;\n             for (AttributeTO attributeTO : userTO.getDerAttrs()) {\n@@ -397,10 +396,18 @@ public void sync() throws Exception {\n             assertNotNull(userTO);\n             assertEquals(\"TYPE_8\", userTO.getAttrMap().get(\"type\").getValues().get(0));\n \n+            // Check for ignored user - SYNCOPE-663\n+            try {\n+                readUser(\"test2\");\n+                fail();\n+            } catch (SyncopeClientException e) {\n+                assertEquals(Response.Status.NOT_FOUND, e.getType().getResponseStatus());\n+            }\n+\n             // check for sync results\n             int usersPost = userService.list(1, 1).getTotalCount();\n             assertNotNull(usersPost);\n-            assertEquals(usersPre + 9, usersPost);\n+            assertEquals(usersPre + 8, usersPost);\n \n             // Check for issue 215:\n             // * expected disabled user test1"},{"sha":"610d9e9e47125031756a47fc4156c1e943c06380","filename":"core/src/test/java/org/apache/syncope/core/sync/TestSyncActions.java","status":"modified","additions":13,"deletions":3,"changes":16,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FTestSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/857f02a0cbc0d6662ac98bcf3e7934557a761212/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FTestSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2FTestSyncActions.java?ref=857f02a0cbc0d6662ac98bcf3e7934557a761212","patch":"@@ -22,6 +22,7 @@\n import org.apache.syncope.common.mod.AttributeMod;\n import org.apache.syncope.common.to.AbstractAttributableTO;\n import org.apache.syncope.common.to.AttributeTO;\n+import org.apache.syncope.common.to.UserTO;\n import org.identityconnectors.framework.common.objects.SyncDelta;\n import org.quartz.JobExecutionException;\n \n@@ -31,9 +32,7 @@ public class TestSyncActions extends DefaultSyncActions {\n \n     @Override\n     public <T extends AbstractAttributableTO> SyncDelta beforeProvision(\n-            final SyncProfile<?, ?> profile,\n-            final SyncDelta delta,\n-            final T subject) throws JobExecutionException {\n+            final SyncProfile<?, ?> profile, final SyncDelta delta, final T subject) throws JobExecutionException {\n \n         AttributeTO attrTO = null;\n         for (int i = 0; i < subject.getAttrs().size(); i++) {\n@@ -52,6 +51,17 @@ public <T extends AbstractAttributableTO> SyncDelta beforeProvision(\n         return delta;\n     }\n \n+    @Override\n+    public <T extends AbstractAttributableTO> SyncDelta beforeAssign(\n+            final SyncProfile<?, ?> profile, final SyncDelta delta, final T subject) throws JobExecutionException {\n+\n+        if (subject instanceof UserTO && \"test2\".equals(UserTO.class.cast(subject).getUsername())) {\n+            throw new IgnoreProvisionException();\n+        }\n+\n+        return delta;\n+    }\n+\n     @Override\n     public <T extends AbstractAttributableTO, K extends AbstractAttributableMod> SyncDelta beforeUpdate(\n             final SyncProfile<?, ?> profile,"}]}