{"sha":"1335bb533339ff8ad710f8e29351da2b6deecde5","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjEzMzViYjUzMzMzOWZmOGFkNzEwZjhlMjkzNTFkYTJiNmRlZWNkZTU=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2013-01-23T13:22:43Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2013-01-23T13:22:43Z"},"message":"SYNCOPE-229 Allow to change bundle version for an existing connector\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1437380 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8a28616c342bd1cf6eb970a6a1c800f3d5214ef0","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/8a28616c342bd1cf6eb970a6a1c800f3d5214ef0"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1335bb533339ff8ad710f8e29351da2b6deecde5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1335bb533339ff8ad710f8e29351da2b6deecde5","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1335bb533339ff8ad710f8e29351da2b6deecde5","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1335bb533339ff8ad710f8e29351da2b6deecde5/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"44c907020df2ed8a89c16157f4b9c3c46dd78ed9","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/44c907020df2ed8a89c16157f4b9c3c46dd78ed9","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/44c907020df2ed8a89c16157f4b9c3c46dd78ed9"}],"stats":{"total":314,"additions":154,"deletions":160},"files":[{"sha":"031885c7038bdc4bb57bc849d0070857889b2ef0","filename":"console/src/main/java/org/apache/syncope/console/pages/ConnectorModalPage.java","status":"modified","additions":128,"deletions":131,"changes":259,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1335bb533339ff8ad710f8e29351da2b6deecde5/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1335bb533339ff8ad710f8e29351da2b6deecde5/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.java?ref=1335bb533339ff8ad710f8e29351da2b6deecde5","patch":"@@ -22,9 +22,11 @@\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.EnumSet;\n+import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n-\n+import java.util.Map;\n+import org.apache.commons.lang.ArrayUtils;\n import org.apache.commons.lang.StringUtils;\n import org.apache.syncope.common.to.ConnBundleTO;\n import org.apache.syncope.common.to.ConnInstanceTO;\n@@ -52,7 +54,6 @@\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.CheckBoxMultipleChoice;\n-import org.apache.wicket.markup.html.form.ChoiceRenderer;\n import org.apache.wicket.markup.html.form.DropDownChoice;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.form.PasswordTextField;\n@@ -86,7 +87,7 @@ public class ConnectorModalPage extends BaseModalPage {\n     @SpringBean\n     private ConnectorRestClient restClient;\n \n-    private CheckBoxMultipleChoice capabilitiesPalette;\n+    private CheckBoxMultipleChoice<ConnectorCapability> capabilitiesPalette;\n \n     private WebMarkupContainer propertiesContainer;\n \n@@ -101,7 +102,7 @@ public ConnectorModalPage(final PageReference callerPageRef, final ModalWindow w\n \n         super();\n \n-        selectedCapabilities = new ArrayList(connectorTO.getId() == 0\n+        selectedCapabilities = new ArrayList<ConnectorCapability>(connectorTO.getId() == 0\n                 ? EnumSet.noneOf(ConnectorCapability.class)\n                 : connectorTO.getCapabilities());\n \n@@ -114,100 +115,57 @@ protected List<ConnectorCapability> load() {\n             }\n         };\n \n-        final IModel<List<ConnBundleTO>> bundles = new LoadableDetachableModel<List<ConnBundleTO>>() {\n-            private static final long serialVersionUID = 5275935387613157437L;\n-\n-            @Override\n-            protected List<ConnBundleTO> load() {\n-                return restClient.getAllBundles();\n+        final Map<String, Map<String, ConnBundleTO>> mapConnBundleTO = new HashMap<String, Map<String, ConnBundleTO>>();\n+        for (ConnBundleTO connBundleTO : restClient.getAllBundles()) {\n+            if (!mapConnBundleTO.containsKey(connBundleTO.getBundleName())) {\n+                mapConnBundleTO.put(connBundleTO.getBundleName(), new HashMap<String, ConnBundleTO>());\n             }\n-        };\n+            final Map<String, ConnBundleTO> bundleMap = mapConnBundleTO.get(connBundleTO.getBundleName());\n+            if (!bundleMap.containsKey(connBundleTO.getVersion())) {\n+                bundleMap.put(connBundleTO.getVersion(), connBundleTO);\n+            }\n+        }\n \n-        bundleTO = getSelectedBundleTO(bundles.getObject(), connectorTO);\n+        bundleTO = getSelectedBundleTO(mapConnBundleTO, connectorTO);\n         properties = fillProperties(bundleTO, connectorTO);\n \n-        final AjaxTextFieldPanel connectorName = new AjaxTextFieldPanel(\n-                \"connectorName\", \"connector name\", new PropertyModel<String>(connectorTO, \"connectorName\"));\n-        connectorName.setOutputMarkupId(true);\n-        connectorName.setEnabled(false);\n-\n         final AjaxTextFieldPanel displayName = new AjaxTextFieldPanel(\n                 \"displayName\", \"display name\", new PropertyModel<String>(connectorTO, \"displayName\"));\n         displayName.setOutputMarkupId(true);\n         displayName.addRequiredLabel();\n \n-        final AjaxTextFieldPanel version = new AjaxTextFieldPanel(\n-                \"version\", \"version\", new PropertyModel<String>(connectorTO, \"version\"));\n-        displayName.setOutputMarkupId(true);\n-        version.setEnabled(false);\n+        final AjaxDropDownChoicePanel<String> bundleName =\n+                new AjaxDropDownChoicePanel<String>(\"connectorName\", \"connectorName\",\n+                new Model<String>(bundleTO != null ? bundleTO.getBundleName() : null));\n \n-        final AjaxDropDownChoicePanel<ConnBundleTO> bundle =\n-                new AjaxDropDownChoicePanel<ConnBundleTO>(\"bundle\", \"bundle\", new Model<ConnBundleTO>(bundleTO));\n-        bundle.setStyleSheet(\"long_dynamicsize\");\n-        bundle.setChoices(bundles.getObject());\n-        bundle.setChoiceRenderer(new ChoiceRenderer<ConnBundleTO>() {\n-            private static final long serialVersionUID = -1945543182376191187L;\n+        ((DropDownChoice) bundleName.getField()).setNullValid(true);\n \n-            @Override\n-            public Object getDisplayValue(final ConnBundleTO object) {\n-                return object.getBundleName() + \" \" + object.getVersion();\n-            }\n+        bundleName.setStyleSheet(\"long_dynamicsize\");\n+        bundleName.setChoices(new ArrayList<String>(mapConnBundleTO.keySet()));\n+        bundleName.setRequired(true);\n+        bundleName.addRequiredLabel();\n+        bundleName.setOutputMarkupId(true);\n+        bundleName.setEnabled(connectorTO.getId() == 0);\n+        bundleName.getField().setOutputMarkupId(true);\n \n-            @Override\n-            public String getIdValue(final ConnBundleTO object, final int index) {\n-                // idValue must include version as well in order to cope\n-                // with multiple version of the same bundle.\n-                return object.getBundleName() + \"#\" + object.getVersion();\n-            }\n-        });\n+        final AjaxDropDownChoicePanel<String> version =\n+                new AjaxDropDownChoicePanel<String>(\"version\", \"version\",\n+                new Model<String>(bundleTO != null ? bundleTO.getVersion() : null));\n \n-        ((DropDownChoice) bundle.getField()).setNullValid(true);\n-        bundle.setRequired(true);\n-        bundle.getField().add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n-            private static final long serialVersionUID = -1107858522700306810L;\n+        version.setStyleSheet(\"long_dynamicsize\");\n+        version.setChoices(bundleTO != null\n+                ? new ArrayList<String>(mapConnBundleTO.get(connectorTO.getBundleName()).keySet())\n+                : new ArrayList<String>());\n \n-            @Override\n-            protected void onUpdate(final AjaxRequestTarget target) {\n-                // reset all information stored in connectorTO\n-                connectorTO.setConfiguration(new HashSet<ConnConfProperty>());\n-\n-                ((DropDownChoice) bundle.getField()).setNullValid(false);\n-                target.add(bundle.getField());\n-\n-                target.add(connectorName);\n-                target.add(version);\n-\n-                target.add(propertiesContainer);\n-            }\n-        });\n-        bundle.getField().setModel(new IModel<ConnBundleTO>() {\n-            private static final long serialVersionUID = -3736598995576061229L;\n-\n-            @Override\n-            public ConnBundleTO getObject() {\n-                return bundleTO;\n-            }\n-\n-            @Override\n-            public void setObject(final ConnBundleTO object) {\n-                if (object != null && connectorTO != null) {\n-                    connectorTO.setBundleName(object.getBundleName());\n-                    connectorTO.setVersion(object.getVersion());\n-                    connectorTO.setConnectorName(object.getConnectorName());\n-                    properties = fillProperties(object, connectorTO);\n-                    bundleTO = object;\n-                }\n-            }\n-\n-            @Override\n-            public void detach() {\n-            }\n-        });\n-        bundle.addRequiredLabel();\n-        bundle.setEnabled(connectorTO.getId() == 0);\n+        version.setRequired(true);\n+        version.addRequiredLabel();\n+        version.setEnabled(connectorTO != null && connectorTO.getBundleName() != null);\n+        version.setOutputMarkupId(true);\n+        version.addRequiredLabel();\n+        version.getField().setOutputMarkupId(true);\n \n         final ListView<ConnConfProperty> view = new ListView<ConnConfProperty>(\n-                \"connectorProperties\", new PropertyModel(this, \"properties\")) {\n+                \"connectorProperties\", new PropertyModel<List<ConnConfProperty>>(this, \"properties\")) {\n             private static final long serialVersionUID = 9101744072914090143L;\n \n             @Override\n@@ -231,7 +189,8 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n                         || GUARDED_STRING.equalsIgnoreCase(property.getSchema().getType())\n                         || GUARDED_BYTE_ARRAY.equalsIgnoreCase(property.getSchema().getType())) {\n \n-                    field = new AjaxPasswordFieldPanel(\"panel\", label.getDefaultModelObjectAsString(), new Model());\n+                    field = new AjaxPasswordFieldPanel(\"panel\",\n+                            label.getDefaultModelObjectAsString(), new Model<String>());\n \n                     ((PasswordTextField) field.getField()).setResetPassword(false);\n \n@@ -249,14 +208,17 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n                     }\n \n                     if (NUMBER.contains(propertySchemaClass)) {\n-                        field = new AjaxNumberFieldPanel(\"panel\", label.getDefaultModelObjectAsString(), new Model(),\n+                        field = new AjaxNumberFieldPanel(\"panel\",\n+                                label.getDefaultModelObjectAsString(), new Model<Number>(),\n                                 ClassUtils.resolvePrimitiveIfNecessary(propertySchemaClass));\n \n                         required = property.getSchema().isRequired();\n                     } else if (Boolean.class.equals(propertySchemaClass) || boolean.class.equals(propertySchemaClass)) {\n-                        field = new AjaxCheckBoxPanel(\"panel\", label.getDefaultModelObjectAsString(), new Model());\n+                        field = new AjaxCheckBoxPanel(\"panel\",\n+                                label.getDefaultModelObjectAsString(), new Model<Boolean>());\n                     } else {\n-                        field = new AjaxTextFieldPanel(\"panel\", label.getDefaultModelObjectAsString(), new Model());\n+                        field = new AjaxTextFieldPanel(\"panel\",\n+                                label.getDefaultModelObjectAsString(), new Model<String>());\n \n                         required = property.getSchema().isRequired();\n                     }\n@@ -287,28 +249,53 @@ protected void populateItem(final ListItem<ConnConfProperty> item) {\n                 }\n \n                 final AjaxCheckBoxPanel overridable = new AjaxCheckBoxPanel(\"connPropAttrOverridable\",\n-                        \"connPropAttrOverridable\", new PropertyModel(property, \"overridable\"));\n-\n+                        \"connPropAttrOverridable\", new PropertyModel<Boolean>(property, \"overridable\"));\n+                \n                 item.add(overridable);\n                 connectorTO.addConfiguration(property);\n             }\n         };\n \n-        final Form connectorForm = new Form(\"form\");\n-        connectorForm.setModel(new CompoundPropertyModel(connectorTO));\n+        view.setOutputMarkupId(true);\n \n-        final Form connectorPropForm = new Form(\"connectorPropForm\");\n-        connectorPropForm.setModel(new CompoundPropertyModel(connectorTO));\n-        connectorPropForm.setOutputMarkupId(true);\n+        bundleName.getField().add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+            private static final long serialVersionUID = -1107858522700306810L;\n \n-        propertiesContainer = new WebMarkupContainer(\"container\");\n-        propertiesContainer.setOutputMarkupId(true);\n-        propertiesContainer.add(connectorPropForm);\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+                ((DropDownChoice) bundleName.getField()).setNullValid(false);\n+                // reset all information stored in connectorTO\n+                connectorTO.setConfiguration(new HashSet<ConnConfProperty>());\n+                connectorTO.setBundleName(bundleName.getField().getModelObject().toString());\n+                connectorTO.setVersion(null);\n+                properties.clear();\n+                version.setEnabled(connectorTO.getBundleName() != null);\n+                version.getField().setModelValue(null);\n+                version.setChoices(new ArrayList<String>(mapConnBundleTO.get(connectorTO.getBundleName()).keySet()));\n+                target.add(bundleName);\n+                target.add(version);\n+                target.add(propertiesContainer);\n+            }\n+        });\n \n-        connectorForm.add(propertiesContainer);\n-        connectorPropForm.add(view);\n+        version.getField().add(new AjaxFormComponentUpdatingBehavior(\"onchange\") {\n+            private static final long serialVersionUID = -1107858522700306810L;\n+\n+            @Override\n+            protected void onUpdate(final AjaxRequestTarget target) {\n+\n+                connectorTO.setVersion(version.getField().getModelObject().toString());\n+                connectorTO.setDisplayName(displayName.getModelObject());\n+                bundleTO = getSelectedBundleTO(mapConnBundleTO, connectorTO);\n+                properties.clear();\n+                properties = fillProperties(bundleTO, connectorTO);\n+                target.add(bundleName);\n+                target.add(version);\n+                target.add(propertiesContainer);\n+            }\n+        });\n \n-        final AjaxLink check = new IndicatingAjaxLink(\"check\", new ResourceModel(\"check\")) {\n+        final AjaxLink<String> check = new IndicatingAjaxLink<String>(\"check\", new ResourceModel(\"check\")) {\n             private static final long serialVersionUID = -7978723352517770644L;\n \n             @Override\n@@ -326,16 +313,16 @@ public void onClick(final AjaxRequestTarget target) {\n             }\n         };\n \n-        connectorPropForm.add(check);\n-\n         final AjaxButton submit = new IndicatingAjaxButton(\"apply\", new Model<String>(getString(\"submit\"))) {\n             private static final long serialVersionUID = -958724007591692537L;\n \n             @Override\n             protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n-                final ConnInstanceTO conn = (ConnInstanceTO) form.getDefaultModelObject();\n+                final ConnInstanceTO conn = (ConnInstanceTO) form.getModelObject();\n \n                 conn.setBundleName(bundleTO.getBundleName());\n+                conn.setVersion(bundleTO.getVersion());\n+                conn.setConfiguration(new HashSet<ConnConfProperty>(view.getModelObject()));\n \n                 // Set the model object's capabilites to capabilitiesPalette's converted Set\n                 conn.setCapabilities(selectedCapabilities.isEmpty()\n@@ -346,7 +333,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     if (connectorTO.getId() == 0) {\n                         restClient.create(conn);\n                     } else {\n-                        restClient.update(conn);\n+                            restClient.update(conn);\n                     }\n \n                     ((Resources) callerPageRef.getPage()).setModalResult(true);\n@@ -378,7 +365,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n             protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n             }\n         };\n-        \n+\n         cancel.setDefaultFormProcessing(false);\n \n         String roles = connectorTO.getId() == 0\n@@ -387,62 +374,72 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n \n         MetaDataRoleAuthorizationStrategy.authorize(submit, ENABLE, roles);\n \n-        connectorForm.add(connectorName);\n+        capabilitiesPalette = new CheckBoxMultipleChoice<ConnectorCapability>(\"capabilitiesPalette\", new PropertyModel<List<ConnectorCapability>>(this,\n+                \"selectedCapabilities\"), capabilities);\n+\n+        final Form<ConnInstanceTO> connectorForm = new Form<ConnInstanceTO>(\"form\");\n+        connectorForm.setModel(new CompoundPropertyModel<ConnInstanceTO>(connectorTO));\n+        connectorForm.setOutputMarkupId(true);\n+\n+        final Form<ConnInstanceTO> connectorPropForm = new Form<ConnInstanceTO>(\"connectorPropForm\");\n+        connectorPropForm.setModel(new CompoundPropertyModel<ConnInstanceTO>(connectorTO));\n+        connectorPropForm.setOutputMarkupId(true);\n+\n+        propertiesContainer = new WebMarkupContainer(\"container\");\n+        propertiesContainer.setOutputMarkupId(true);\n+        propertiesContainer.add(connectorPropForm);\n+\n+        connectorForm.add(propertiesContainer);\n+        connectorPropForm.add(view);\n+        connectorPropForm.add(check);\n+\n+        connectorForm.add(bundleName);\n         connectorForm.add(displayName);\n-        connectorForm.add(bundle);\n         connectorForm.add(version);\n-\n-        capabilitiesPalette = new CheckBoxMultipleChoice(\"capabilitiesPalette\", new PropertyModel(this,\n-                \"selectedCapabilities\"), capabilities);\n         connectorForm.add(capabilitiesPalette);\n-\n         connectorForm.add(submit);\n         connectorForm.add(cancel);\n-\n         add(connectorForm);\n     }\n \n-    private ConnBundleTO getSelectedBundleTO(final List<ConnBundleTO> bundles, final ConnInstanceTO connTO) {\n-        // -------------------------------------\n-        // Manage bundle and connector beans\n-        // -------------------------------------\n+    private ConnBundleTO getSelectedBundleTO(final Map<String, Map<String, ConnBundleTO>> bundles, final ConnInstanceTO connTO) {\n \n         if (connTO != null && StringUtils.isNotBlank(connTO.getBundleName())\n                 && StringUtils.isNotBlank(connTO.getVersion())) {\n \n-            for (ConnBundleTO to : bundles) {\n-                if (to.getVersion().equals(connTO.getVersion()) && to.getBundleName().equals(connTO.getBundleName())) {\n-                    connTO.setConnectorName(to.getConnectorName());\n-                    connTO.setVersion(to.getVersion());\n-\n-                    return to;\n+            for (String bKey : bundles.keySet()) {\n+                if (bKey.equals(connTO.getBundleName())) {\n+                    for (String vKey : bundles.get(bKey).keySet()) {\n+                        ConnBundleTO to = bundles.get(bKey).get(vKey);\n+                        if (to.getVersion().equals(connTO.getVersion())) {\n+                            connTO.setConnectorName(to.getConnectorName());\n+                            connTO.setVersion(to.getVersion());\n+                            return to;\n+                        }\n+                    }\n                 }\n             }\n         }\n-\n         return null;\n     }\n \n     private List<ConnConfProperty> fillProperties(final ConnBundleTO bundleTO, final ConnInstanceTO connTO) {\n-        // -------------------------------------\n-        // Manage bundle properties\n-        // -------------------------------------\n+\n         final List<ConnConfProperty> props = new ArrayList<ConnConfProperty>();\n \n-        if (connTO.getId() == 0 && bundleTO != null) {\n+        if (bundleTO != null) {\n             for (ConnConfPropSchema key : bundleTO.getProperties()) {\n                 final ConnConfProperty propertyTO = new ConnConfProperty();\n                 propertyTO.setSchema(key);\n+                if (connTO.getId() != 0 && connTO.getConfigurationMap().containsKey(key.getName())) {\n+                    propertyTO.setValues(connTO.getConfigurationMap().get(key.getName()).getValues());\n+                    propertyTO.setOverridable(connTO.getConfigurationMap().get(key.getName()).isOverridable());              \n+                }\n                 props.add(propertyTO);\n             }\n-        } else {\n-            props.addAll(connTO.getConfiguration());\n         }\n-\n         // re-order properties\n         Collections.sort(props);\n-        // -------------------------------------\n-\n         return props;\n     }\n "},{"sha":"fed1ce22c82e7b865a366ea7ac599443a35d47fe","filename":"console/src/main/java/org/apache/syncope/console/rest/ConnectorRestClient.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1335bb533339ff8ad710f8e29351da2b6deecde5/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1335bb533339ff8ad710f8e29351da2b6deecde5/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FConnectorRestClient.java?ref=1335bb533339ff8ad710f8e29351da2b6deecde5","patch":"@@ -132,10 +132,11 @@ private Set<ConnConfProperty> filterProperties(final Set<ConnConfProperty> prope\n             prop.setOverridable(property.isOverridable());\n \n             final List<Object> parsed = new ArrayList<Object>();\n-\n-            for (Object obj : property.getValues()) {\n-                if (obj != null && !obj.toString().isEmpty()) {\n-                    parsed.add(obj);\n+            if (property.getValues() != null) {\n+                for (Object obj : property.getValues()) {\n+                    if (obj != null && !obj.toString().isEmpty()) {\n+                        parsed.add(obj);\n+                    }\n                 }\n             }\n             prop.setValues(parsed);"},{"sha":"29b02661b4a6f71a85fb66024bed8c522735023d","filename":"console/src/main/resources/org/apache/syncope/console/pages/ConnectorModalPage.html","status":"modified","additions":1,"deletions":10,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1335bb533339ff8ad710f8e29351da2b6deecde5/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1335bb533339ff8ad710f8e29351da2b6deecde5/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConnectorModalPage.html?ref=1335bb533339ff8ad710f8e29351da2b6deecde5","patch":"@@ -50,21 +50,12 @@\n             </div>\n           </div>\n \n-          <div class=\"tablerow\">\n-            <div class=\"tablecolumn_label short_dynamicsize\">\n-              <label for=\"bundleName\"><wicket:message key=\"bundleName\"/></label>\n-            </div>\n-            <div class=\"tablecolumn_field medium_dynamicsize\">\n-              <span wicket:id=\"bundle\">[bundle]</span>\n-            </div>\n-          </div>\n-\n           <div class=\"tablerow\">\n             <div class=\"tablecolumn_label short_dynamicsize\">\n               <label for=\"name\"><wicket:message key=\"name\"/></label>\n             </div>\n             <div class=\"tablecolumn_field medium_dynamicsize\">\n-              <span wicket:id=\"connectorName\">[name]</span>\n+              <span wicket:id=\"connectorName\">[connectorName]</span>\n             </div>\n           </div>\n "},{"sha":"ff295a881e0e5437500fe6d10ae3f1c8c3fb4aab","filename":"console/src/test/java/org/apache/syncope/console/ConnInstanceTestITCase.java","status":"modified","additions":19,"deletions":14,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1335bb533339ff8ad710f8e29351da2b6deecde5/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1335bb533339ff8ad710f8e29351da2b6deecde5/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2FConnInstanceTestITCase.java?ref=1335bb533339ff8ad710f8e29351da2b6deecde5","patch":"@@ -54,15 +54,17 @@ public void browseCreateModal() {\n \n         selenium.click(\"//div[3]/div[2]/a\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//input[@name='version:textField']\\\");\", \"30000\");\n+        selenium.waitForCondition(\"\"\n+                + \"selenium.isElementPresent(\\\"//div[2]/form/div[2]/div/div/div[3]/div[2]/span/select\\\");\", \"30000\");\n+        selenium.select(\"//select[@name='connectorName:dropDownChoiceField']\",\n+                \"label=org.connid.bundles.soap\");\n+        selenium.select(\"//select[@name='version:dropDownChoiceField']\",\n+                \"label=1.2.4\");\n \n-        selenium.select(\"//select[@name='bundle:dropDownChoiceField']\",\n-                \"label=org.connid.bundles.soap \" + connidSoapVersion);\n+        selenium.click(\"//div[2]/form/div[2]/ul/li[2]/a/span\");\n+        selenium.click(\"//div[2]/form/div[2]/ul/li[1]/a/span\");\n \n-        selenium.click(\"//div[@id='tabs']/ul/li[2]/a/span\");\n-        selenium.click(\"//form/div[@id='tabs']/ul/li[1]/a/span\");\n-\n-        assertTrue(selenium.isElementPresent(\"//form/div[2]/div/div/div[4]/div[2]\"));\n+        assertTrue(selenium.isElementPresent(\"//form/div[2]/div/div/div[3]/div[2]/\"));\n \n         selenium.click(\"css=a.w_close\");\n     }\n@@ -76,14 +78,15 @@ public void browseEditModal() {\n         selenium.click(\"//div[3]/ul/li[2]/a\");\n         selenium.click(\"//tr[4]/td[6]/div/span[8]/a\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//input[@name='version:textField']\\\");\", \"30000\");\n-\n+        selenium.waitForCondition(\"\"\n+                + \"selenium.isElementPresent(\\\"//div[2]/form/div[2]/div/div/div[3]/div[2]/span/select\\\");\", \"30000\");\n+        \n         assertEquals(\"ConnInstance103\", selenium.getAttribute(\"//input[@name='displayName:textField']/@value\"));\n \n-        assertEquals(\"org.connid.bundles.soap#\" + connidSoapVersion, selenium\n-                .getSelectedValue(\"//select[@name='bundle:dropDownChoiceField']\"));\n+        assertEquals(\"org.connid.bundles.soap\", selenium\n+                .getSelectedLabel(\"//select[@name='connectorName:dropDownChoiceField']\"));\n \n-        selenium.click(\"//div[@id='tabs']/ul/li[2]/a/span\");\n+        selenium.click(\"//div[2]/form/div[2]/ul/li[2]/a/span\");\n         selenium.click(\"css=a.w_close\");\n     }\n \n@@ -111,11 +114,13 @@ public void checkConnection() {\n         selenium.click(\"//div[3]/ul/li[2]/a\");\n         selenium.click(\"//tr[2]/td[6]/div/span[8]/a\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\" + \"\\\"//input[@name='version:textField']\\\");\", \"30000\");\n+        selenium.waitForCondition(\n+                \"selenium.isElementPresent(\\\"//select[@name='version:dropDownChoiceField']\\\");\", \"30000\");\n \n         selenium.click(\"//div[2]/form/div[2]/ul/li[2]/a\");\n \n-        selenium.waitForCondition(\"selenium.isElementPresent(\\\"//input[@name='version:textField']\\\");\", \"30000\");\n+        selenium.waitForCondition(\n+                \"selenium.isElementPresent(\\\"//div[2]/form/div[2]/div/div/div[3]/div[2]/span/select\\\");\", \"30000\");\n \n         selenium.click(\"//div[2]/form/div[2]/div[2]/div/span/div[2]/div[29]/a/img\");\n "},{"sha":"c9191c3c3d8bc023014c44837dd528be2a9d7a90","filename":"pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1335bb533339ff8ad710f8e29351da2b6deecde5/pom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1335bb533339ff8ad710f8e29351da2b6deecde5/pom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/pom.xml?ref=1335bb533339ff8ad710f8e29351da2b6deecde5","patch":"@@ -305,7 +305,7 @@ under the License.\n         \n     <cocoon.version>3.0.0-alpha-3</cocoon.version>\n \n-    <wicket.version>6.4.0</wicket.version>\n+    <wicket.version>6.5.0</wicket.version>\n \n     <groovy.version>1.6.9</groovy.version>\n "}]}