{"sha":"db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRiN2JkNGQ4Y2E4NzEyM2UyZmU4YTBiNTExNGI5M2U3ZTVhOGQ0MDE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-11-15T12:28:55Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2012-11-15T12:28:55Z"},"message":"Initial support for propagating role owner (via derived attribute)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/syncope/branches/DEV_ROLE_PROVISIONING@1409754 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c6da1f345c469b37471e866f79877964ccac81ad","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/c6da1f345c469b37471e866f79877964ccac81ad"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"f4e3ea25e44c708b79980b07d23916ab4af25eb2","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/f4e3ea25e44c708b79980b07d23916ab4af25eb2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/f4e3ea25e44c708b79980b07d23916ab4af25eb2"}],"stats":{"total":117,"additions":60,"deletions":57},"files":[{"sha":"2f205b9f0fe5ca608e5f797bebe3082d393f701f","filename":"core/src/main/java/org/apache/syncope/core/rest/controller/ResourceController.java","status":"modified","additions":12,"deletions":8,"changes":20,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcontroller%2FResourceController.java?ref=db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401","patch":"@@ -31,12 +31,13 @@\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.dao.ConnInstanceDAO;\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n-import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.propagation.ConnectorFacadeProxy;\n import org.apache.syncope.core.rest.data.ResourceDataBinder;\n+import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.ConnBundleManager;\n import org.apache.syncope.core.util.ConnObjectUtil;\n import org.apache.syncope.core.util.NotFoundException;\n+import org.apache.syncope.types.AttributableType;\n import org.apache.syncope.types.AuditElements;\n import org.apache.syncope.types.AuditElements.Category;\n import org.apache.syncope.types.AuditElements.ResourceSubCategory;\n@@ -71,9 +72,6 @@ public class ResourceController extends AbstractController {\n     @Autowired\n     private ConnInstanceDAO connInstanceDAO;\n \n-    @Autowired\n-    private RoleDAO roleDAO;\n-\n     @Autowired\n     private ResourceDataBinder binder;\n \n@@ -204,20 +202,26 @@ public List<ResourceTO> list(@RequestParam(required = false, value = \"connInstan\n \n     @PreAuthorize(\"hasRole('RESOURCE_GETOBJECT')\")\n     @Transactional(readOnly = true)\n-    @RequestMapping(method = RequestMethod.GET, value = \"/{resourceName}/read/{objectId}\")\n+    @RequestMapping(method = RequestMethod.GET, value = \"/{resourceName}/read/{type}/{objectId}\")\n     public ConnObjectTO getObject(@PathVariable(\"resourceName\") final String resourceName,\n-            @PathVariable(\"objectId\") final String objectId)\n+            @PathVariable(\"type\") final AttributableType type, @PathVariable(\"objectId\") final String objectId)\n             throws NotFoundException {\n \n         ExternalResource resource = resourceDAO.find(resourceName);\n         if (resource == null) {\n             throw new NotFoundException(\"Resource '\" + resourceName + \"'\");\n         }\n \n+        if (AttributableType.MEMBERSHIP == type) {\n+        }\n+\n+        AttributableUtil attrUtil = AttributableUtil.getInstance(type);\n+        ObjectClass objectClass = AttributableType.USER == type ? ObjectClass.ACCOUNT : ObjectClass.GROUP;\n+\n         final ConnectorFacadeProxy connector = connLoader.getConnector(resource);\n \n-        final ConnectorObject connectorObject = connector.getObject(ObjectClass.ACCOUNT, new Uid(objectId),\n-                connector.getOperationOptions(resource.getUmapping().getItems()));\n+        final ConnectorObject connectorObject = connector.getObject(objectClass, new Uid(objectId),\n+                connector.getOperationOptions(attrUtil.getMappingItems(resource)));\n \n         if (connectorObject == null) {\n             throw new NotFoundException(\"Object \" + objectId + \" not found on resource \" + resourceName);"},{"sha":"62443cd49a25b7d19489e5075c62d5610ae4e7ca","filename":"core/src/main/java/org/apache/syncope/core/util/MappingUtil.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Futil%2FMappingUtil.java?ref=db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401","patch":"@@ -37,6 +37,7 @@\n import org.apache.syncope.core.persistence.beans.membership.MDerSchema;\n import org.apache.syncope.core.persistence.beans.membership.MSchema;\n import org.apache.syncope.core.persistence.beans.membership.MVirSchema;\n+import org.apache.syncope.core.persistence.beans.role.RAttrValue;\n import org.apache.syncope.core.persistence.beans.role.RDerSchema;\n import org.apache.syncope.core.persistence.beans.role.RSchema;\n import org.apache.syncope.core.persistence.beans.role.RVirSchema;\n@@ -158,9 +159,9 @@ public static Map.Entry<AbstractSchema, List<AbstractAttrValue>> getIntValues(fi\n             case MembershipDerivedSchema:\n                 for (AbstractAttributable attributable : attributables) {\n                     AbstractDerAttr derAttr = attributable.getDerivedAttribute(mapping.getIntAttrName());\n-\n                     if (derAttr != null) {\n-                        AbstractAttrValue attrValue = new UAttrValue();\n+                        AbstractAttrValue attrValue = (attributable instanceof SyncopeRole)\n+                                ? new RAttrValue() : new UAttrValue();\n                         attrValue.setStringValue(derAttr.getValue(attributable.getAttributes()));\n                         values.add(attrValue);\n                     }"},{"sha":"305b95d817df7e17199ec5d914eaddc60812e140","filename":"core/src/test/java/org/apache/syncope/core/rest/RoleTestITCase.java","status":"modified","additions":19,"deletions":11,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FRoleTestITCase.java?ref=db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401","patch":"@@ -29,6 +29,7 @@\n import org.apache.syncope.client.mod.AttributeMod;\n import org.apache.syncope.client.mod.RoleMod;\n import org.apache.syncope.client.to.AttributeTO;\n+import org.apache.syncope.client.to.ConnObjectTO;\n import org.apache.syncope.client.to.RoleTO;\n import org.apache.syncope.client.to.UserTO;\n import org.apache.syncope.client.validation.SyncopeClientCompositeErrorException;\n@@ -79,22 +80,29 @@ public void create() {\n         icon.addValue(\"anIcon\");\n         roleTO.addAttribute(icon);\n \n+        AttributeTO ownerDN = new AttributeTO();\n+        ownerDN.setSchema(\"ownerDN\");\n+        roleTO.addDerivedAttribute(ownerDN);\n+\n+        roleTO.setRoleOwner(8L);\n+\n         roleTO.addResource(\"resource-ldap\");\n \n-        RoleTO actual = restTemplate.postForObject(BASE_URL + \"role/create\", roleTO, RoleTO.class);\n+        roleTO = restTemplate.postForObject(BASE_URL + \"role/create\", roleTO, RoleTO.class);\n+        assertNotNull(roleTO);\n \n-        roleTO.setId(actual.getId());\n-        roleTO.setPasswordPolicy(4L);\n-        roleTO.setPropagationTOs(actual.getPropagationTOs());\n-        assertEquals(roleTO, actual);\n+        assertNotNull(roleTO.getAccountPolicy());\n+        assertEquals(6L, (long) roleTO.getAccountPolicy());\n \n-        assertNotNull(actual.getAccountPolicy());\n-        assertEquals(6L, (long) actual.getAccountPolicy());\n+        assertNotNull(roleTO.getPasswordPolicy());\n+        assertEquals(4L, (long) roleTO.getPasswordPolicy());\n \n-        assertNotNull(actual.getPasswordPolicy());\n-        assertEquals(4L, (long) actual.getPasswordPolicy());\n+        assertTrue(roleTO.getResources().contains(\"resource-ldap\"));\n \n-        assertTrue(actual.getResources().contains(\"resource-ldap\"));\n+        ConnObjectTO connObjectTO = restTemplate.getForObject(BASE_URL\n+                + \"/resource/resource-ldap/read/ROLE/lastRole.json\", ConnObjectTO.class);\n+        assertNotNull(connObjectTO);\n+        assertNotNull(connObjectTO.getAttributeMap().get(\"owner\"));\n     }\n \n     @Test\n@@ -129,7 +137,7 @@ public void delete() {\n \n         roleTO = restTemplate.postForObject(BASE_URL + \"role/create\", roleTO, RoleTO.class);\n         assertNotNull(roleTO);\n-        \n+\n         RoleTO deletedRole = restTemplate.getForObject(BASE_URL + \"role/delete/{roleId}\", RoleTO.class, roleTO.getId());\n         assertNotNull(deletedRole);\n "},{"sha":"81035289aed3fd48719f35bff3933710d1384302","filename":"core/src/test/java/org/apache/syncope/core/rest/UserTestITCase.java","status":"modified","additions":19,"deletions":33,"changes":52,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FUserTestITCase.java?ref=db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401","patch":"@@ -1475,44 +1475,39 @@ public void suspendReactivateOnResource() {\n         assertNotNull(dbTableUID);\n \n         ConnObjectTO connObjectTO = restTemplate.getForObject(BASE_URL\n-                + \"/resource/{resourceName}/read/{objectId}.json\", ConnObjectTO.class, dbTable.getName(), dbTableUID);\n-\n+                + \"/resource/{resourceName}/read/USER/{objectId}.json\", ConnObjectTO.class,\n+                dbTable.getName(), dbTableUID);\n         assertFalse(Boolean.parseBoolean(connObjectTO.getAttributeMap().get(OperationalAttributes.ENABLE_NAME).\n                 getValues().\n                 get(0)));\n \n         String ldapUID = userTO.getUsername();\n         assertNotNull(ldapUID);\n \n-        connObjectTO = restTemplate.getForObject(BASE_URL + \"/resource/{resourceName}/read/{objectId}.json\",\n+        connObjectTO = restTemplate.getForObject(BASE_URL + \"/resource/{resourceName}/read/USER/{objectId}.json\",\n                 ConnObjectTO.class, ldap.getName(), ldapUID);\n-\n         assertNotNull(connObjectTO);\n \n         query = \"?resourceNames=\" + ldap.getName() + \"&performLocally=false\"; // check also performLocally\n \n         userTO = restTemplate.getForObject(BASE_URL + \"user/reactivate/\" + userTO.getId() + query, UserTO.class);\n-\n         assertNotNull(userTO);\n         assertEquals(\"suspended\", userTO.getStatus());\n \n-        connObjectTO = restTemplate.getForObject(BASE_URL + \"/resource/{resourceName}/read/{objectId}.json\",\n+        connObjectTO = restTemplate.getForObject(BASE_URL + \"/resource/{resourceName}/read/USER/{objectId}.json\",\n                 ConnObjectTO.class, dbTable.getName(), dbTableUID);\n-\n         assertFalse(Boolean.parseBoolean(connObjectTO.getAttributeMap().get(OperationalAttributes.ENABLE_NAME).\n                 getValues().\n                 get(0)));\n \n         query = \"?resourceNames=\" + dbTable.getName() + \"&performLocally=true\"; // check also performLocally\n \n         userTO = restTemplate.getForObject(BASE_URL + \"user/reactivate/\" + userTO.getId() + query, UserTO.class);\n-\n         assertNotNull(userTO);\n         assertEquals(\"active\", userTO.getStatus());\n \n-        connObjectTO = restTemplate.getForObject(BASE_URL + \"/resource/{resourceName}/read/{objectId}.json\",\n+        connObjectTO = restTemplate.getForObject(BASE_URL + \"/resource/{resourceName}/read/USER/{objectId}.json\",\n                 ConnObjectTO.class, dbTable.getName(), dbTableUID);\n-\n         assertTrue(Boolean.parseBoolean(connObjectTO.getAttributeMap().get(OperationalAttributes.ENABLE_NAME).\n                 getValues().\n                 get(0)));\n@@ -1730,11 +1725,9 @@ public void roleAttrPropagation() {\n         assertNotNull(actual.getDerivedAttributeMap().get(\"csvuserid\"));\n \n         ConnObjectTO connObjectTO = restTemplate.getForObject(BASE_URL\n-                + \"/resource/{resourceName}/read/{objectId}.json\", ConnObjectTO.class, \"resource-csv\", actual.\n-                getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0));\n-\n+                + \"/resource/{resourceName}/read/USER/{objectId}.json\", ConnObjectTO.class, \"resource-csv\",\n+                actual.getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0));\n         assertNotNull(connObjectTO);\n-\n         assertEquals(\"sx-dx\", connObjectTO.getAttributeMap().get(\"ROLE\").getValues().get(0));\n     }\n \n@@ -1777,11 +1770,9 @@ public void membershipAttrPropagation() {\n         assertNotNull(actual.getDerivedAttributeMap().get(\"csvuserid\"));\n \n         ConnObjectTO connObjectTO = restTemplate.getForObject(BASE_URL\n-                + \"/resource/{resourceName}/read/{objectId}.json\", ConnObjectTO.class, \"resource-csv\", actual.\n-                getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0));\n-\n+                + \"/resource/{resourceName}/read/USER/{objectId}.json\", ConnObjectTO.class, \"resource-csv\",\n+                actual.getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0));\n         assertNotNull(connObjectTO);\n-\n         assertEquals(\"sx-dx\", connObjectTO.getAttributeMap().get(\"MEMBERSHIP\").getValues().get(0));\n     }\n \n@@ -1853,9 +1844,8 @@ public void issueSYNCOPE108() {\n         assertEquals(1, actual.getResources().size());\n \n         ConnObjectTO connObjectTO = restTemplate.getForObject(BASE_URL\n-                + \"/resource/{resourceName}/read/{objectId}.json\", ConnObjectTO.class, \"resource-csv\", actual.\n-                getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0));\n-\n+                + \"/resource/{resourceName}/read/USER/{objectId}.json\", ConnObjectTO.class, \"resource-csv\",\n+                actual.getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0));\n         assertNotNull(connObjectTO);\n \n         // -----------------------------------\n@@ -1871,9 +1861,8 @@ public void issueSYNCOPE108() {\n         assertEquals(1, actual.getMemberships().size());\n \n         connObjectTO = restTemplate.getForObject(BASE_URL\n-                + \"/resource/{resourceName}/read/{objectId}.json\", ConnObjectTO.class, \"resource-csv\",\n+                + \"/resource/{resourceName}/read/USER/{objectId}.json\", ConnObjectTO.class, \"resource-csv\",\n                 actual.getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0));\n-\n         assertNotNull(connObjectTO);\n         // -----------------------------------\n \n@@ -1891,9 +1880,8 @@ public void issueSYNCOPE108() {\n         assertFalse(actual.getResources().isEmpty());\n \n         connObjectTO = restTemplate.getForObject(BASE_URL\n-                + \"/resource/{resourceName}/read/{objectId}.json\", ConnObjectTO.class, \"resource-csv\", actual.\n-                getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0));\n-\n+                + \"/resource/{resourceName}/read/USER/{objectId}.json\", ConnObjectTO.class, \"resource-csv\",\n+                actual.getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0));\n         assertNotNull(connObjectTO);\n         // -----------------------------------\n \n@@ -1914,8 +1902,8 @@ public void issueSYNCOPE108() {\n \n         try {\n             restTemplate.getForObject(BASE_URL\n-                    + \"/resource/{resourceName}/read/{objectId}.json\", ConnObjectTO.class, \"resource-csv\", actual.\n-                    getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0));\n+                    + \"/resource/{resourceName}/read/USER/{objectId}.json\", ConnObjectTO.class, \"resource-csv\",\n+                    actual.getDerivedAttributeMap().get(\"csvuserid\").getValues().get(0));\n         } catch (SyncopeClientCompositeErrorException e) {\n             assertNotNull(e.getException(SyncopeClientExceptionType.NotFound));\n             t = e;\n@@ -1960,11 +1948,10 @@ public void issueSYNCOPE111() {\n         assertEquals(2, actual.getMemberships().size());\n \n         ConnObjectTO connObjectTO = restTemplate.getForObject(\n-                BASE_URL + \"/resource/{resourceName}/read/{objectId}.json\",\n+                BASE_URL + \"/resource/{resourceName}/read/USER/{objectId}.json\",\n                 ConnObjectTO.class,\n                 \"resource-ldap\",\n                 userTO.getUsername());\n-\n         assertNotNull(connObjectTO);\n \n         postalAddress = connObjectTO.getAttributeMap().get(\"postalAddress\");\n@@ -1993,11 +1980,10 @@ public void issueSYNCOPE111() {\n         assertEquals(1, actual.getMemberships().size());\n \n         connObjectTO = restTemplate.getForObject(\n-                BASE_URL + \"/resource/{resourceName}/read/{objectId}.json\",\n+                BASE_URL + \"/resource/{resourceName}/read/USER/{objectId}.json\",\n                 ConnObjectTO.class,\n                 \"resource-ldap\",\n                 userTO.getUsername());\n-\n         assertNotNull(connObjectTO);\n \n         postalAddress = connObjectTO.getAttributeMap().get(\"postalAddress\");\n@@ -2030,7 +2016,7 @@ public void issueSYNCOPE185() {\n         // 3. try (and fail) to find this user on the external LDAP resource\n         SyncopeClientException sce = null;\n         try {\n-            restTemplate.getForObject(BASE_URL + \"/resource/{resourceName}/read/{objectId}.json\",\n+            restTemplate.getForObject(BASE_URL + \"/resource/{resourceName}/read/USER/{objectId}.json\",\n                     ConnObjectTO.class, \"resource-ldap\", userTO.getUsername());\n             fail(\"This entry should not be present on this resource\");\n         } catch (SyncopeClientCompositeErrorException sccee) {"},{"sha":"68d4a58c1948cd9c627f4992a3dfc6f7734689bd","filename":"core/src/test/resources/content.xml","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=db7bd4d8ca87123e2fe8a0b5114b93e7e5a8d401","patch":"@@ -209,6 +209,10 @@ under the License.\n     \n   <!-- rderiveddata is used to verify der schema deletion -->\n   <RDerSchema name=\"rderivedschema\" expression=\"rderived_sx + '-' + rderived_dx\"/>\n+\n+  <!-- used for RMapping below -->  \n+  <RDerSchema name=\"ownerDN\" \n+              expression=\"!empty(roleOwner) ? 'cn=' + roleOwner.name + ',ou=groups,o=isp': (!empty(userOwner) ? 'uid=' +  userOwner.username + ',ou=people,o=isp' : '')\"/>\n   \n   <RAttr id=\"1004\" owner_id=\"12\" schema_name=\"title\"/>\n   <RAttrValue attribute_id=\"1004\" id=\"94\" stringValue=\"r12\"/>\n@@ -562,9 +566,9 @@ under the License.\n   <RMappingItem id=\"1\" accountid=\"1\" password=\"0\" mapping_id=\"1\"\n                 extAttrName=\"__NAME__\" intAttrName=\"roleName\" intMappingType=\"RoleName\"\n                 mandatoryCondition=\"true\"/>\n-  <!--<RMappingItem id=\"2\" accountid=\"0\" password=\"0\" mapping_id=\"1\"\n-                extAttrName=\"owner\" intAttrName=\"roleOwnerDN\" intMappingType=\"RoleDerSchema\"\n-                mandatoryCondition=\"false\"/>-->\n+  <RMappingItem id=\"2\" accountid=\"0\" password=\"0\" mapping_id=\"1\"\n+                extAttrName=\"owner\" intAttrName=\"ownerDN\" intMappingType=\"RoleDerivedSchema\"\n+                mandatoryCondition=\"false\"/>\n   <RMappingItem id=\"3\" accountid=\"0\" password=\"0\" mapping_id=\"1\"\n                 extAttrName=\"description\" intAttrName=\"title\" intMappingType=\"RoleSchema\"\n                 mandatoryCondition=\"false\"/>"}]}