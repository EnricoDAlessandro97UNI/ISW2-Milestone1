{"sha":"dab16ce325b527a03ed2347cf7c54d45691674c7","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmRhYjE2Y2UzMjViNTI3YTAzZWQyMzQ3Y2Y3YzU0ZDQ1NjkxNjc0Yzc=","commit":{"author":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2013-11-18T16:35:55Z"},"committer":{"name":"Marco Di Sabatino Di Diodoro","email":"mdisabatino@apache.org","date":"2013-11-18T16:35:55Z"},"message":"SYNCOPE-436 fix test for readonly virtual attributes\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1543069 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"044a195e42f6076a5f0a35479775afe75d0267cd","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/044a195e42f6076a5f0a35479775afe75d0267cd"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/dab16ce325b527a03ed2347cf7c54d45691674c7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dab16ce325b527a03ed2347cf7c54d45691674c7","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/dab16ce325b527a03ed2347cf7c54d45691674c7","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/dab16ce325b527a03ed2347cf7c54d45691674c7/comments","author":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"committer":{"login":"mdisabatino","id":1792527,"node_id":"MDQ6VXNlcjE3OTI1Mjc=","avatar_url":"https://avatars.githubusercontent.com/u/1792527?v=4","gravatar_id":"","url":"https://api.github.com/users/mdisabatino","html_url":"https://github.com/mdisabatino","followers_url":"https://api.github.com/users/mdisabatino/followers","following_url":"https://api.github.com/users/mdisabatino/following{/other_user}","gists_url":"https://api.github.com/users/mdisabatino/gists{/gist_id}","starred_url":"https://api.github.com/users/mdisabatino/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mdisabatino/subscriptions","organizations_url":"https://api.github.com/users/mdisabatino/orgs","repos_url":"https://api.github.com/users/mdisabatino/repos","events_url":"https://api.github.com/users/mdisabatino/events{/privacy}","received_events_url":"https://api.github.com/users/mdisabatino/received_events","type":"User","site_admin":false},"parents":[{"sha":"b5c8dea012a09fccd75a1f91d50c653aa4255a6e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/b5c8dea012a09fccd75a1f91d50c653aa4255a6e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/b5c8dea012a09fccd75a1f91d50c653aa4255a6e"}],"stats":{"total":38,"additions":5,"deletions":33},"files":[{"sha":"75c62de444201a56227c3648e30c5f465630a48b","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":5,"deletions":33,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/dab16ce325b527a03ed2347cf7c54d45691674c7/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/dab16ce325b527a03ed2347cf7c54d45691674c7/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=dab16ce325b527a03ed2347cf7c54d45691674c7","patch":"@@ -381,13 +381,13 @@ public void reconcileFromLDAP()\n         SyncTaskTO task = taskService.read(TaskType.SYNCHRONIZATION, 11L);\n         assertNotNull(task);\n \n-        //  add role template\n+        //  add user template\n         final UserTO userTemplate = task.getUserTemplate();\n         userTemplate.setResources(Collections.singleton(\"resource-ldap\"));\n         userTemplate.addVirtualAttribute(attributeTO(\"virtualReadOnly\", \"\"));\n \n         task.setUserTemplate(userTemplate);\n-        \n+\n         //  add role template\n         final RoleTO roleTemplate = new RoleTO();\n         roleTemplate.setParent(8L);\n@@ -423,6 +423,9 @@ public void reconcileFromLDAP()\n         final List<UserTO> matchingUsers = userService.search(NodeCond.getLeafCond(usernameLeafCond));\n         assertNotNull(matchingUsers);\n         assertEquals(1, matchingUsers.size());\n+        // Check for SYNCOPE-436\n+        assertEquals(\"syncFromLDAP\", matchingUsers.get(0).\n+                getVirtualAttributeMap().get(\"virtualReadOnly\").getValues().get(0));\n \n         final RoleTO roleTO = matchingRoles.iterator().next();\n         assertNotNull(roleTO);\n@@ -937,35 +940,4 @@ public void removeTestUsers() {\n             }\n         }\n     }\n-\n-    @Test\n-    public void issueSYNCOPE436() throws InvalidSearchConditionException {\n-\n-        SyncTaskTO task = taskService.read(TaskType.SYNCHRONIZATION, 11L);\n-        assertNotNull(task);\n-\n-        final UserTO template = task.getUserTemplate();\n-        template.setResources(Collections.singleton(\"resource-ldap\"));\n-        template.addVirtualAttribute(attributeTO(\"virtualReadOnly\", \"\"));\n-        task.setUserTemplate(template);\n-\n-        taskService.update(task.getId(), task);\n-        TaskExecTO execution = execSyncTask(11L, 50, false);\n-\n-        final String status = execution.getStatus();\n-        assertNotNull(status);\n-        assertTrue(PropagationTaskExecStatus.valueOf(status).isSuccessful());\n-\n-        final AttributableCond usernameLeafCond = new AttributableCond(AttributeCond.Type.EQ);\n-        usernameLeafCond.setSchema(\"username\");\n-        usernameLeafCond.setExpression(\"syncFromLDAP\");\n-\n-        final List<UserTO> matchingUsers = userService.search(NodeCond.getLeafCond(usernameLeafCond));\n-        assertNotNull(matchingUsers);\n-        assertEquals(1, matchingUsers.size());\n-\n-        final UserTO syncUser = matchingUsers.iterator().next();\n-        final AttributeTO virAttributeTO = syncUser.getVirtualAttributeMap().get(\"virtualReadOnly\");\n-        assertEquals(\"syncFromLDAP\", virAttributeTO.getValues().get(0));\n-    }\n }\n\\ No newline at end of file"}]}