{"sha":"480bf39866537034c13eb7bc524a2baa1ba33898","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjQ4MGJmMzk4NjY1MzcwMzRjMTNlYjdiYzUyNGEyYmFhMWJhMzM4OTg=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-02-14T14:24:17Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-02-14T14:24:17Z"},"message":"SYNCOPE-307: virtual attribute values must be retrieved before the propByRes purge - merged from branch 1_0_X\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1446200 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"98c5ec07531e42276852e164d6601c455e82bb08","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/98c5ec07531e42276852e164d6601c455e82bb08"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/480bf39866537034c13eb7bc524a2baa1ba33898","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/480bf39866537034c13eb7bc524a2baa1ba33898","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/480bf39866537034c13eb7bc524a2baa1ba33898","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/480bf39866537034c13eb7bc524a2baa1ba33898/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"60c21d72a62fb78c2b3a91c2ec0724dfe225827e","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/60c21d72a62fb78c2b3a91c2ec0724dfe225827e","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/60c21d72a62fb78c2b3a91c2ec0724dfe225827e"}],"stats":{"total":39,"additions":18,"deletions":21},"files":[{"sha":"eaf06eceb89b97f47df4a82e21a87ad1ff70e76e","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PropagationManager.java","status":"modified","additions":18,"deletions":21,"changes":39,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/480bf39866537034c13eb7bc524a2baa1ba33898/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/480bf39866537034c13eb7bc524a2baa1ba33898/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPropagationManager.java?ref=480bf39866537034c13eb7bc524a2baa1ba33898","patch":"@@ -518,22 +518,36 @@ protected <T extends AbstractAttributable> List<PropagationTask> createTasks(fin\n \n         LOG.debug(\"Provisioning subject {}:\\n{}\", subject, propByRes);\n \n+        final AttributableUtil attrUtil = AttributableUtil.getInstance(subject);\n+\n+        if (!propByRes.get(ResourceOperation.CREATE).isEmpty()\n+                && vAttrsToBeRemoved != null && vAttrsToBeUpdated != null) {\n+            connObjectUtil.retrieveVirAttrValues(subject, attrUtil);\n+\n+            // update vAttrsToBeUpdated as well\n+            for (AbstractVirAttr virAttr : subject.getVirtualAttributes()) {\n+                final String schema = virAttr.getVirtualSchema().getName();\n+\n+                final AttributeMod attributeMod = new AttributeMod();\n+                attributeMod.setSchema(schema);\n+                attributeMod.setValuesToBeAdded(virAttr.getValues());\n+\n+                vAttrsToBeUpdated.put(schema, attributeMod);\n+            }\n+        }\n+\n         // Avoid duplicates - see javadoc\n         propByRes.purge();\n         LOG.debug(\"After purge: {}\", propByRes);\n \n         final List<PropagationTask> tasks = new ArrayList<PropagationTask>();\n \n-        boolean virAttrRerieved = false;\n-\n         for (ResourceOperation operation : ResourceOperation.values()) {\n             for (String resourceName : propByRes.get(operation)) {\n                 final ExternalResource resource = resourceDAO.find(resourceName);\n                 if (resource == null) {\n                     LOG.error(\"Invalid resource name specified: {}, ignoring...\", resourceName);\n                 } else {\n-                    AttributableUtil attrUtil = AttributableUtil.getInstance(subject);\n-\n                     PropagationTask task = new PropagationTask();\n                     task.setResource(resource);\n                     task.setObjectClassName(connObjectUtil.fromAttributable(subject).getObjectClassValue());\n@@ -545,23 +559,6 @@ protected <T extends AbstractAttributable> List<PropagationTask> createTasks(fin\n                     task.setPropagationMode(resource.getPropagationMode());\n                     task.setOldAccountId(propByRes.getOldAccountId(resource.getName()));\n \n-                    if (operation == ResourceOperation.CREATE && !virAttrRerieved\n-                            && vAttrsToBeRemoved != null && vAttrsToBeUpdated != null) {\n-                        connObjectUtil.retrieveVirAttrValues(subject, attrUtil);\n-                        virAttrRerieved = true;\n-\n-                        // update vAttrsToBeUpdated as well\n-                        for (AbstractVirAttr virAttr : subject.getVirtualAttributes()) {\n-                            final String schema = virAttr.getVirtualSchema().getName();\n-\n-                            final AttributeMod attributeMod = new AttributeMod();\n-                            attributeMod.setSchema(schema);\n-                            attributeMod.setValuesToBeAdded(virAttr.getValues());\n-\n-                            vAttrsToBeUpdated.put(schema, attributeMod);\n-                        }\n-                    }\n-\n                     Map.Entry<String, Set<Attribute>> preparedAttrs = prepareAttributes(subject, password,\n                             vAttrsToBeRemoved, vAttrsToBeUpdated, enable, resource);\n                     task.setAccountId(preparedAttrs.getKey());"}]}