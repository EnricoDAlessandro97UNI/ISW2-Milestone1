{"sha":"1fd1ffdfc1ada531ed190e404c7d883099169b71","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjFmZDFmZmRmYzFhZGE1MzFlZDE5MGU0MDRjN2Q4ODMwOTkxNjliNzE=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-11-07T12:32:30Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2018-11-07T12:38:38Z"},"message":"[SYNCOPE-1392] Removal of ReflectionToStringBuilder and reflection-based EqualsBuilder and HashCodeBuilder from Common Lib and Console","tree":{"sha":"e06893d1098dcfefdc4e3d9fa0fbc2771a245fbe","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/e06893d1098dcfefdc4e3d9fa0fbc2771a245fbe"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/1fd1ffdfc1ada531ed190e404c7d883099169b71","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1fd1ffdfc1ada531ed190e404c7d883099169b71","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/1fd1ffdfc1ada531ed190e404c7d883099169b71","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/1fd1ffdfc1ada531ed190e404c7d883099169b71/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"a8a131e609f5603ded90df652c4745cbd21d5861","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/a8a131e609f5603ded90df652c4745cbd21d5861","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/a8a131e609f5603ded90df652c4745cbd21d5861"}],"stats":{"total":2337,"additions":1966,"deletions":371},"files":[{"sha":"3a5c766e28c55a0dd9a4a14f7935d6de943be6bc","filename":"client/console/src/main/java/org/apache/syncope/client/console/commons/status/StatusBean.java","status":"modified","additions":37,"deletions":7,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fcommons%2Fstatus%2FStatusBean.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -21,8 +21,7 @@\n import java.io.Serializable;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n-import org.apache.commons.lang3.builder.ToStringStyle;\n+import org.apache.commons.lang3.builder.ToStringBuilder;\n import org.apache.syncope.common.lib.to.AnyObjectTO;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n@@ -98,17 +97,48 @@ public void setLinked(final boolean linked) {\n     }\n \n     @Override\n-    public String toString() {\n-        return ReflectionToStringBuilder.toString(this, ToStringStyle.JSON_STYLE);\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(key).\n+                append(name).\n+                append(resource).\n+                append(connObjectLink).\n+                append(status).\n+                append(linked).\n+                build();\n     }\n \n     @Override\n     public boolean equals(final Object obj) {\n-        return EqualsBuilder.reflectionEquals(this, obj);\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final StatusBean other = (StatusBean) obj;\n+        return new EqualsBuilder().\n+                append(key, other.key).\n+                append(name, other.name).\n+                append(resource, other.resource).\n+                append(connObjectLink, other.connObjectLink).\n+                append(status, other.status).\n+                append(linked, other.linked).\n+                build();\n     }\n \n     @Override\n-    public int hashCode() {\n-        return HashCodeBuilder.reflectionHashCode(this);\n+    public String toString() {\n+        return new ToStringBuilder(this).\n+                append(key).\n+                append(name).\n+                append(resource).\n+                append(connObjectLink).\n+                append(status).\n+                append(linked).\n+                build();\n     }\n }"},{"sha":"58e1a4e0f20816aea66746c6be5b8ea54c02aded","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/AbstractLogsPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractLogsPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractLogsPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FAbstractLogsPanel.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.client.console.panels;\n \n+import java.io.Serializable;\n import java.util.Arrays;\n import java.util.List;\n import org.apache.commons.lang3.StringUtils;\n@@ -26,7 +27,6 @@\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.wicket.ajax.form.IndicatorAjaxFormComponentUpdatingBehavior;\n import org.apache.syncope.client.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.log.LoggerTO;\n import org.apache.syncope.common.lib.types.LoggerLevel;\n@@ -42,7 +42,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public abstract class AbstractLogsPanel<T extends AbstractBaseBean> extends Panel {\n+public abstract class AbstractLogsPanel<T extends Serializable> extends Panel {\n \n     private static final Logger LOG = LoggerFactory.getLogger(AbstractLogsPanel.class);\n "},{"sha":"5848b7a1e0da1bcb3ca4ee1f98f75ed87a11ee99","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/HistoryConfList.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FHistoryConfList.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -20,10 +20,10 @@\n \n import java.io.Serializable;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.to.AnyTO;\n import org.apache.syncope.common.lib.to.ConnInstanceHistoryConfTO;\n import org.apache.syncope.common.lib.to.ConnInstanceTO;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.ResourceHistoryConfTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n@@ -38,7 +38,7 @@ public <T extends AnyTO> HistoryConfList(\n             final BaseModal<?> baseModal,\n             final String entityKey,\n             final PageReference pageReference,\n-            final AbstractBaseBean modelObj) {\n+            final EntityTO modelObj) {\n \n         super(BaseModal.CONTENT_ID);\n "},{"sha":"8e4a0f48da06bf136e26650268d6c2f7b06624c0","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/TypesDirectoryPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypesDirectoryPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypesDirectoryPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2FTypesDirectoryPanel.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -21,11 +21,11 @@\n import de.agilecoders.wicket.core.markup.html.bootstrap.dialog.Modal;\n import org.apache.syncope.client.console.commons.DirectoryDataProvider;\n import org.apache.syncope.client.console.rest.RestClient;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.wicket.PageReference;\n \n public abstract class TypesDirectoryPanel<\n-        T extends AbstractBaseBean, DP extends DirectoryDataProvider<T>, E extends RestClient>\n+        T extends EntityTO, DP extends DirectoryDataProvider<T>, E extends RestClient>\n         extends DirectoryPanel<T, T, DP, E> {\n \n     private static final long serialVersionUID = 7890071604330629259L;"},{"sha":"2953787b87abb0a95efb6226a37534be4cb15b2a","filename":"client/console/src/main/java/org/apache/syncope/client/console/panels/search/SearchClause.java","status":"modified","additions":34,"deletions":7,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClause.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClause.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fpanels%2Fsearch%2FSearchClause.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -21,8 +21,7 @@\n import java.io.Serializable;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n-import org.apache.commons.lang3.builder.ToStringStyle;\n+import org.apache.commons.lang3.builder.ToStringBuilder;\n \n public final class SearchClause implements Serializable {\n \n@@ -116,17 +115,45 @@ public void setValue(final String value) {\n     }\n \n     @Override\n-    public boolean equals(final Object obj) {\n-        return EqualsBuilder.reflectionEquals(this, obj);\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(operator).\n+                append(type).\n+                append(property).\n+                append(comparator).\n+                append(value).\n+                build();\n     }\n \n     @Override\n-    public int hashCode() {\n-        return HashCodeBuilder.reflectionHashCode(this);\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final SearchClause other = (SearchClause) obj;\n+        return new EqualsBuilder().\n+                append(operator, other.operator).\n+                append(type, other.type).\n+                append(property, other.property).\n+                append(comparator, other.comparator).\n+                append(value, other.value).\n+                build();\n     }\n \n     @Override\n     public String toString() {\n-        return ReflectionToStringBuilder.toString(this, ToStringStyle.JSON_STYLE);\n+        return new ToStringBuilder(this).\n+                append(operator).\n+                append(type).\n+                append(property).\n+                append(comparator).\n+                append(value).\n+                build();\n     }\n }"},{"sha":"50b14cd6533a93494b04827f2e7925e2b858d05b","filename":"client/console/src/main/java/org/apache/syncope/client/console/status/StatusModal.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fstatus%2FStatusModal.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -25,11 +25,11 @@\n import org.apache.syncope.client.console.panels.MultilevelPanel;\n import org.apache.syncope.client.console.rest.AbstractAnyRestClient;\n import org.apache.syncope.client.console.wicket.markup.html.bootstrap.dialog.BaseModal;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.wicket.PageReference;\n import org.apache.wicket.markup.html.panel.Panel;\n \n-public abstract class StatusModal<T extends AbstractBaseBean> extends Panel implements ModalPanel {\n+public abstract class StatusModal<T extends EntityTO> extends Panel implements ModalPanel {\n \n     private static final long serialVersionUID = 1066124171682570080L;\n "},{"sha":"8c461dd104ddae77a5e093bd31f7b481f9ff7fb2","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/reconciliation/Any.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FAny.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FAny.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FAny.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,11 +18,11 @@\n  */\n package org.apache.syncope.client.console.widgets.reconciliation;\n \n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n-public class Any extends AbstractBaseBean {\n+public class Any implements Serializable {\n \n     private static final long serialVersionUID = 2421645848049271898L;\n "},{"sha":"2d35e144b86961b4029639eee9698e13ae13b936","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/reconciliation/Anys.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FAnys.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FAnys.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FAnys.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,11 +18,11 @@\n  */\n package org.apache.syncope.client.console.widgets.reconciliation;\n \n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n-public class Anys extends AbstractBaseBean {\n+public class Anys implements Serializable {\n \n     private static final long serialVersionUID = -2482591351364634179L;\n "},{"sha":"175d9de4590d3881a2249a57f3109d21d5da956a","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/reconciliation/Missing.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FMissing.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FMissing.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FMissing.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,9 +18,9 @@\n  */\n package org.apache.syncope.client.console.widgets.reconciliation;\n \n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import java.io.Serializable;\n \n-public class Missing extends AbstractBaseBean {\n+public class Missing implements Serializable {\n \n     private static final long serialVersionUID = -4779715117027316991L;\n \n@@ -40,5 +40,4 @@ public String getResource() {\n     public String getConnObjectKeyValue() {\n         return connObjectKeyValue;\n     }\n-\n }"},{"sha":"696d807baa57f6ef716e75c56ceca31bd308cd61","filename":"client/console/src/main/java/org/apache/syncope/client/console/widgets/reconciliation/ReconciliationReport.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FReconciliationReport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FReconciliationReport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwidgets%2Freconciliation%2FReconciliationReport.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,12 +18,12 @@\n  */\n package org.apache.syncope.client.console.widgets.reconciliation;\n \n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Date;\n import java.util.List;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n-public class ReconciliationReport extends AbstractBaseBean {\n+public class ReconciliationReport implements Serializable {\n \n     private static final long serialVersionUID = 931063230006747313L;\n "},{"sha":"da3162e988b3e1ff55791a0df6671f0160358c67","filename":"client/console/src/main/java/org/apache/syncope/client/console/wizards/resources/AbstractConnConfPanel.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/client%2Fconsole%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fclient%2Fconsole%2Fwizards%2Fresources%2FAbstractConnConfPanel.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -24,7 +24,7 @@\n import org.apache.syncope.client.console.commons.Constants;\n import org.apache.syncope.client.console.pages.BasePage;\n import org.apache.syncope.client.console.wicket.markup.html.list.ConnConfPropertyListView;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n@@ -36,7 +36,7 @@\n import org.apache.wicket.model.LoadableDetachableModel;\n import org.apache.wicket.model.ResourceModel;\n \n-public abstract class AbstractConnConfPanel<T extends AbstractBaseBean> extends WizardStep implements ICondition {\n+public abstract class AbstractConnConfPanel<T extends EntityTO> extends WizardStep implements ICondition {\n \n     private static final long serialVersionUID = -2025535531121434050L;\n "},{"sha":"4562f702b12a55cf96bd1cd4c3f754b7acba8d00","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/AbstractBaseBean.java","status":"removed","additions":0,"deletions":55,"changes":55,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/a8a131e609f5603ded90df652c4745cbd21d5861/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAbstractBaseBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/a8a131e609f5603ded90df652c4745cbd21d5861/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAbstractBaseBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FAbstractBaseBean.java?ref=a8a131e609f5603ded90df652c4745cbd21d5861","patch":"@@ -1,55 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.syncope.common.lib;\n-\n-import java.io.Serializable;\n-import javax.xml.bind.annotation.XmlSeeAlso;\n-import javax.xml.bind.annotation.XmlType;\n-import org.apache.commons.lang3.builder.EqualsBuilder;\n-import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n-import org.apache.commons.lang3.builder.ToStringStyle;\n-import org.apache.syncope.common.lib.to.TaskTO;\n-import org.apache.syncope.common.lib.to.AnyObjectTO;\n-import org.apache.syncope.common.lib.to.ReportTO;\n-import org.apache.syncope.common.lib.to.GroupTO;\n-import org.apache.syncope.common.lib.to.UserTO;\n-\n-@XmlType\n-// Reporting here only classes used via PagedResult\n-@XmlSeeAlso({ TaskTO.class, ReportTO.class, GroupTO.class, UserTO.class, AnyObjectTO.class })\n-public abstract class AbstractBaseBean implements Serializable {\n-\n-    private static final long serialVersionUID = 3119542005279892164L;\n-\n-    @Override\n-    public boolean equals(final Object obj) {\n-        return EqualsBuilder.reflectionEquals(this, obj);\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return HashCodeBuilder.reflectionHashCode(this);\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return ReflectionToStringBuilder.toString(this, ToStringStyle.JSON_STYLE);\n-    }\n-}"},{"sha":"8ba3b4a27e514742f4cde1547fd5de60f85e94d8","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/info/JavaImplInfo.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FJavaImplInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FJavaImplInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FJavaImplInfo.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -19,18 +19,18 @@\n package org.apache.syncope.common.lib.info;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.HashSet;\n import java.util.Set;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.ImplementationType;\n \n @XmlRootElement(name = \"javaImplInfo\")\n @XmlType\n-public class JavaImplInfo extends AbstractBaseBean {\n+public class JavaImplInfo implements Serializable {\n \n     private static final long serialVersionUID = 4036793959111794959L;\n \n@@ -52,5 +52,4 @@ public void setType(final ImplementationType type) {\n     public Set<String> getClasses() {\n         return classes;\n     }\n-\n }"},{"sha":"b7cb8148b1dd950579c4018f9b3f09ae2b8e2589","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/info/NumbersInfo.java","status":"modified","additions":53,"deletions":3,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FNumbersInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FNumbersInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FNumbersInfo.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -19,18 +19,20 @@\n package org.apache.syncope.common.lib.info;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.HashMap;\n import java.util.Map;\n import javax.xml.bind.annotation.XmlEnum;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n \n @XmlRootElement(name = \"numbersInfo\")\n @XmlType\n-public class NumbersInfo extends AbstractBaseBean {\n+public class NumbersInfo implements Serializable {\n \n     private static final long serialVersionUID = 7691187370598649583L;\n \n@@ -63,7 +65,6 @@ public static int getScore(final String name) {\n             }\n             return score;\n         }\n-\n     }\n \n     private int totalUsers;\n@@ -194,4 +195,53 @@ public Map<String, Boolean> getConfCompleteness() {\n         return confCompleteness;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(totalUsers).\n+                append(usersByRealm).\n+                append(usersByStatus).\n+                append(totalGroups).\n+                append(groupsByRealm).\n+                append(anyType1).\n+                append(totalAny1).\n+                append(any1ByRealm).\n+                append(anyType2).\n+                append(totalAny2).\n+                append(any2ByRealm).\n+                append(totalResources).\n+                append(totalRoles).\n+                append(confCompleteness).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final NumbersInfo other = (NumbersInfo) obj;\n+        return new EqualsBuilder().\n+                append(totalUsers, other.totalUsers).\n+                append(totalGroups, other.totalGroups).\n+                append(totalResources, other.totalResources).\n+                append(totalRoles, other.totalRoles).\n+                append(anyType1, other.anyType1).\n+                append(anyType2, other.anyType2).\n+                append(usersByRealm, other.usersByRealm).\n+                append(usersByStatus, other.usersByStatus).\n+                append(groupsByRealm, other.groupsByRealm).\n+                append(totalAny1, other.totalAny1).\n+                append(any1ByRealm, other.any1ByRealm).\n+                append(totalAny2, other.totalAny2).\n+                append(any2ByRealm, other.any2ByRealm).\n+                append(confCompleteness, other.confCompleteness).\n+                build();\n+    }\n }"},{"sha":"6ea0e93a8442bb98828691e37ae041abb61723ac","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/info/PlatformInfo.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FPlatformInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FPlatformInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FPlatformInfo.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -20,6 +20,7 @@\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.HashSet;\n import java.util.List;\n@@ -29,12 +30,11 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.ImplementationType;\n \n @XmlRootElement(name = \"platformInfo\")\n @XmlType\n-public class PlatformInfo extends AbstractBaseBean {\n+public class PlatformInfo implements Serializable {\n \n     private static final long serialVersionUID = -7941853999417673827L;\n "},{"sha":"5d12ad17ca65fa25d219d5d24936748817685cf2","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/info/SystemInfo.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FSystemInfo.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FSystemInfo.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Finfo%2FSystemInfo.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -19,17 +19,17 @@\n package org.apache.syncope.common.lib.info;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.Queue;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.collections.CircularFifoQueue;\n \n @XmlRootElement(name = \"systemInfo\")\n @XmlType\n-public class SystemInfo extends AbstractBaseBean {\n+public class SystemInfo implements Serializable {\n \n     private static final long serialVersionUID = -352727968865892499L;\n \n@@ -94,7 +94,7 @@ public Queue<LoadInstant> getLoad() {\n \n     @XmlRootElement(name = \"loadInstant\")\n     @XmlType\n-    public static class LoadInstant extends AbstractBaseBean {\n+    public static class LoadInstant implements Serializable {\n \n         private static final long serialVersionUID = 1700788373758716478L;\n "},{"sha":"7836a76d7795596956f0a051653b45d46b5907e7","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/log/EventCategory.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FEventCategory.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FEventCategory.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FEventCategory.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -19,18 +19,18 @@\n package org.apache.syncope.common.lib.log;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.AuditElements;\n \n @XmlRootElement(name = \"eventCategory\")\n @XmlType\n-public class EventCategory extends AbstractBaseBean {\n+public class EventCategory implements Serializable {\n \n     private static final long serialVersionUID = -4340060002701633401L;\n "},{"sha":"85c3d28a9774954fc8c0cf286db298c57c1b29b7","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/log/LogAppender.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLogAppender.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLogAppender.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLogAppender.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,9 +18,9 @@\n  */\n package org.apache.syncope.common.lib.log;\n \n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import java.io.Serializable;\n \n-public class LogAppender extends AbstractBaseBean {\n+public class LogAppender implements Serializable {\n \n     private static final long serialVersionUID = 5975199884460548302L;\n \n@@ -33,5 +33,4 @@ public String getName() {\n     public void setName(final String name) {\n         this.name = name;\n     }\n-\n }"},{"sha":"f6dc3a33812aa021e991e2e4ac13f29576d08fe8","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/log/LogStatement.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLogStatement.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLogStatement.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLogStatement.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,14 +18,14 @@\n  */\n package org.apache.syncope.common.lib.log;\n \n+import java.io.Serializable;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.LoggerLevel;\n \n @XmlRootElement(name = \"logStatement\")\n @XmlType\n-public class LogStatement extends AbstractBaseBean {\n+public class LogStatement implements Serializable {\n \n     private static final long serialVersionUID = -2931205859104653385L;\n "},{"sha":"a18860f86f83af4e0716b751bc9f800b437666ef","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/log/LoggerTO.java","status":"modified","additions":30,"deletions":2,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLoggerTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLoggerTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Flog%2FLoggerTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,15 +18,17 @@\n  */\n package org.apache.syncope.common.lib.log;\n \n+import java.io.Serializable;\n import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.LoggerLevel;\n \n @XmlRootElement(name = \"logger\")\n @XmlType\n-public class LoggerTO extends AbstractBaseBean {\n+public class LoggerTO implements Serializable {\n \n     private static final long serialVersionUID = -7794833835668648505L;\n \n@@ -50,4 +52,30 @@ public String getKey() {\n     public void setKey(final String key) {\n         this.key = key;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(key).\n+                append(level).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final LoggerTO other = (LoggerTO) obj;\n+        return new EqualsBuilder().\n+                append(key, other.key).\n+                append(level, other.level).\n+                build();\n+    }\n }"},{"sha":"522f2d903649678dfbdf983658044111f0a434ed","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/AbstractPatch.java","status":"modified","additions":27,"deletions":2,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAbstractPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAbstractPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAbstractPatch.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,14 +18,16 @@\n  */\n package org.apache.syncope.common.lib.patch;\n \n+import java.io.Serializable;\n import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.PatchOperation;\n \n @XmlType\n @XmlSeeAlso({ AbstractPatchItem.class, AttrPatch.class, MembershipPatch.class, RelationshipPatch.class })\n-public abstract class AbstractPatch extends AbstractBaseBean {\n+public abstract class AbstractPatch implements Serializable {\n \n     private static final long serialVersionUID = -4729181508529829580L;\n \n@@ -66,4 +68,27 @@ public void setOperation(final PatchOperation operation) {\n         this.operation = operation;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(operation).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final AbstractPatch other = (AbstractPatch) obj;\n+        return new EqualsBuilder().\n+                append(operation, other.operation).\n+                build();\n+    }\n }"},{"sha":"84e24d583351d3a170820a6fc6c804ae342b9d11","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/AbstractPatchItem.java","status":"modified","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAbstractPatchItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAbstractPatchItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAbstractPatchItem.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -22,6 +22,8 @@\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlType\n @XmlSeeAlso({ AbstractReplacePatchItem.class, LongPatchItem.class, StringPatchItem.class })\n@@ -51,4 +53,30 @@ public void setValue(final T value) {\n         this.value = value;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(value).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        @SuppressWarnings(\"unchecked\")\n+        final AbstractPatchItem<T> other = (AbstractPatchItem<T>) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(value, other.value).\n+                build();\n+    }\n }"},{"sha":"febdfee4e17ff41f3e5be6cbcd5082311acb8c46","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/AbstractReplacePatchItem.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAbstractReplacePatchItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAbstractReplacePatchItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAbstractReplacePatchItem.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -44,5 +44,4 @@ public AbstractReplacePatchItem() {\n     public void setOperation(final PatchOperation operation) {\n         // fixed\n     }\n-\n }"},{"sha":"50965a1002bdfce2ec49219f1a3aa76b2af7a265","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/AnyObjectPatch.java","status":"modified","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAnyObjectPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAnyObjectPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAnyObjectPatch.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -26,6 +26,8 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlRootElement(name = \"anyObjectPatch\")\n @XmlType\n@@ -74,4 +76,33 @@ public boolean isEmpty() {\n         return super.isEmpty() && name == null && relationships.isEmpty() && memberships.isEmpty();\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(name).\n+                append(relationships).\n+                append(memberships).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final AnyObjectPatch other = (AnyObjectPatch) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(name, other.name).\n+                append(relationships, other.relationships).\n+                append(memberships, other.memberships).\n+                build();\n+    }\n }"},{"sha":"d91c5a2e289a65723cdc32530d40bc78f4ffb00d","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/AnyPatch.java","status":"modified","additions":40,"deletions":2,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAnyPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAnyPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAnyPatch.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -23,6 +23,7 @@\n import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n import io.swagger.v3.oas.annotations.media.Schema;\n+import java.io.Serializable;\n import java.util.HashSet;\n import java.util.Set;\n import javax.ws.rs.PathParam;\n@@ -31,15 +32,16 @@\n import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.to.AttrTO;\n \n @XmlType\n @XmlSeeAlso({ UserPatch.class, GroupPatch.class, AnyObjectPatch.class })\n @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"@class\")\n @JsonPropertyOrder(value = { \"@class\", \"key\" })\n @Schema(subTypes = { UserPatch.class, GroupPatch.class, AnyObjectPatch.class }, discriminatorProperty = \"@class\")\n-public abstract class AnyPatch extends AbstractBaseBean implements AttributablePatch {\n+public abstract class AnyPatch implements Serializable, AttributablePatch {\n \n     private static final long serialVersionUID = -7445489774552440544L;\n \n@@ -125,4 +127,40 @@ public boolean isEmpty() {\n                 && plainAttrs.isEmpty() && virAttrs.isEmpty()\n                 && resources.isEmpty();\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(discriminator).\n+                append(key).\n+                append(realm).\n+                append(auxClasses).\n+                append(plainAttrs).\n+                append(virAttrs).\n+                append(resources).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final AnyPatch other = (AnyPatch) obj;\n+        return new EqualsBuilder().\n+                append(discriminator, other.discriminator).\n+                append(key, other.key).\n+                append(realm, other.realm).\n+                append(auxClasses, other.auxClasses).\n+                append(plainAttrs, other.plainAttrs).\n+                append(virAttrs, other.virAttrs).\n+                append(resources, other.resources).\n+                build();\n+    }\n }"},{"sha":"b5b343d5a3e12a708664de0a94a1edec88205ac9","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/AssociationPatch.java","status":"modified","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAssociationPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAssociationPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAssociationPatch.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -22,6 +22,8 @@\n import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.ResourceAssociationAction;\n \n @XmlRootElement(name = \"associationPatch\")\n@@ -104,4 +106,32 @@ public ResourceAssociationAction getAction() {\n     public void setAction(final ResourceAssociationAction action) {\n         this.action = action;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(key).\n+                append(action).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final AssociationPatch other = (AssociationPatch) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(key, other.key).\n+                append(action, other.action).\n+                build();\n+    }\n }"},{"sha":"f22937dd0050b606c185c42f38f0cb10800d5622","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/AttrPatch.java","status":"modified","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAttrPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAttrPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FAttrPatch.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -21,6 +21,8 @@\n import com.fasterxml.jackson.annotation.JsonIgnore;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.to.AttrTO;\n \n @XmlRootElement(name = \"attrPatch\")\n@@ -57,4 +59,30 @@ public void setAttrTO(final AttrTO attrTO) {\n     public boolean isEmpty() {\n         return attrTO == null || attrTO.getValues().isEmpty();\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(attrTO).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final AttrPatch other = (AttrPatch) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(attrTO, other.attrTO).\n+                build();\n+    }\n }"},{"sha":"aeea67ac5ed4346cab78e7b034755e3a4a59ddc9","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/BooleanReplacePatchItem.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FBooleanReplacePatchItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FBooleanReplacePatchItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FBooleanReplacePatchItem.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -33,6 +33,5 @@ public static class Builder extends AbstractReplacePatchItem.Builder<Boolean, Bo\n         protected BooleanReplacePatchItem newInstance() {\n             return new BooleanReplacePatchItem();\n         }\n-\n     }\n }"},{"sha":"518d1453cffd6caf40734dfb7b35f07f700e92a8","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/DeassociationPatch.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FDeassociationPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FDeassociationPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FDeassociationPatch.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -19,6 +19,7 @@\n package org.apache.syncope.common.lib.patch;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n@@ -28,12 +29,11 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n \n @XmlRootElement(name = \"deassociationPatch\")\n @XmlType\n-public class DeassociationPatch extends AbstractBaseBean {\n+public class DeassociationPatch implements Serializable {\n \n     private static final long serialVersionUID = 6295778399633883767L;\n "},{"sha":"ab12e8740e75c569a829263cc33f5c2aaaa318e5","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/GroupPatch.java","status":"modified","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FGroupPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FGroupPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FGroupPatch.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -31,6 +31,8 @@\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n import org.apache.syncope.common.lib.to.TypeExtensionTO;\n \n@@ -117,4 +119,39 @@ public boolean isEmpty() {\n                 && name == null && userOwner == null && groupOwner == null;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(name).\n+                append(userOwner).\n+                append(groupOwner).\n+                append(udynMembershipCond).\n+                append(adynMembershipConds).\n+                append(typeExtensions).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final GroupPatch other = (GroupPatch) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(name, other.name).\n+                append(userOwner, other.userOwner).\n+                append(groupOwner, other.groupOwner).\n+                append(udynMembershipCond, other.udynMembershipCond).\n+                append(adynMembershipConds, other.adynMembershipConds).\n+                append(typeExtensions, other.typeExtensions).\n+                build();\n+    }\n }"},{"sha":"c1e0ca59ffab3ad82aff7b9ddc05c09977c85b25","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/LongPatchItem.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FLongPatchItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FLongPatchItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FLongPatchItem.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -33,6 +33,5 @@ public static class Builder extends AbstractPatchItem.Builder<Long, LongPatchIte\n         protected LongPatchItem newInstance() {\n             return new LongPatchItem();\n         }\n-\n     }\n }"},{"sha":"000da10aca51b7ea38bb19e1941f6bfd65266e6d","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/MembershipPatch.java","status":"modified","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FMembershipPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FMembershipPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FMembershipPatch.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -25,6 +25,8 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.to.AttrTO;\n \n @XmlRootElement(name = \"membershipPatch\")\n@@ -73,4 +75,34 @@ public Set<AttrTO> getPlainAttrs() {\n     public Set<AttrTO> getVirAttrs() {\n         return virAttrs;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(group).\n+                append(plainAttrs).\n+                append(virAttrs).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final MembershipPatch other = (MembershipPatch) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(group, other.group).\n+                append(plainAttrs, other.plainAttrs).\n+                append(virAttrs, other.virAttrs).\n+                build();\n+    }\n }"},{"sha":"5bdd5ff84b28c416bed5a6f54a7f878bcd83b122","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/PasswordPatch.java","status":"modified","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FPasswordPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FPasswordPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FPasswordPatch.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -28,6 +28,8 @@\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlRootElement(name = \"passwordPatch\")\n @XmlType\n@@ -94,4 +96,31 @@ public List<String> getResources() {\n         return resources;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(onSyncope).\n+                append(resources).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final PasswordPatch other = (PasswordPatch) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(onSyncope, other.onSyncope).\n+                append(resources, other.resources).\n+                build();\n+    }\n }"},{"sha":"8cdf925090b593ee4d4ad91370f34bf86694374b","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/RelationshipPatch.java","status":"modified","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FRelationshipPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FRelationshipPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FRelationshipPatch.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -20,6 +20,8 @@\n \n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.to.RelationshipTO;\n \n @XmlRootElement(name = \"relationshipPatch\")\n@@ -51,4 +53,29 @@ public void setRelationshipTO(final RelationshipTO relationshipTO) {\n         this.relationshipTO = relationshipTO;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(relationshipTO).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final RelationshipPatch other = (RelationshipPatch) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(relationshipTO, other.relationshipTO).\n+                build();\n+    }\n }"},{"sha":"6c4dbc57aa18f040049d78219f7709a61c799993","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/ResourceDeassociationPatch.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FResourceDeassociationPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FResourceDeassociationPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FResourceDeassociationPatch.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -19,19 +19,19 @@\n package org.apache.syncope.common.lib.patch;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.ResourceDeassociationAction;\n \n @XmlRootElement(name = \"resourceDeassociationPatch\")\n @XmlType\n-public class ResourceDeassociationPatch extends AbstractBaseBean {\n+public class ResourceDeassociationPatch implements Serializable {\n \n     private static final long serialVersionUID = -9116268525079837276L;\n "},{"sha":"fe4277a3c3faa15b6421b99cdce6e5d43de9ba5f","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/StatusPatch.java","status":"modified","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FStatusPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FStatusPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FStatusPatch.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -22,6 +22,8 @@\n import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.StatusPatchType;\n \n @XmlRootElement(name = \"statusPatch\")\n@@ -120,4 +122,33 @@ public void setToken(final String token) {\n         this.token = token;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(key).\n+                append(type).\n+                append(token).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final StatusPatch other = (StatusPatch) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(key, other.key).\n+                append(type, other.type).\n+                append(token, other.token).\n+                build();\n+    }\n }"},{"sha":"6ed2ea351e72560c3da21c1f309a264267dc8e49","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/StringPatchItem.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FStringPatchItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FStringPatchItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FStringPatchItem.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -33,6 +33,5 @@ public static class Builder extends AbstractPatchItem.Builder<String, StringPatc\n         protected StringPatchItem newInstance() {\n             return new StringPatchItem();\n         }\n-\n     }\n }"},{"sha":"7c1f5511dc1cb4dfaeb539a0b1c9bf980aa05aa7","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/StringReplacePatchItem.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FStringReplacePatchItem.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FStringReplacePatchItem.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FStringReplacePatchItem.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -35,6 +35,5 @@ public static class Builder extends AbstractReplacePatchItem.Builder<String, Str\n         protected StringReplacePatchItem newInstance() {\n             return new StringReplacePatchItem();\n         }\n-\n     }\n }"},{"sha":"fe1e34af13633b4606b804a1f7a183bd954c66b7","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/patch/UserPatch.java","status":"modified","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FUserPatch.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FUserPatch.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpatch%2FUserPatch.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -26,6 +26,8 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlRootElement(name = \"userPatch\")\n @XmlType\n@@ -124,4 +126,43 @@ public boolean isEmpty() {\n                 && username == null && password == null && securityQuestion == null && securityAnswer == null\n                 && mustChangePassword == null && relationships.isEmpty() && memberships.isEmpty() && roles.isEmpty();\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(username).\n+                append(password).\n+                append(securityQuestion).\n+                append(securityAnswer).\n+                append(mustChangePassword).\n+                append(relationships).\n+                append(memberships).\n+                append(roles).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final UserPatch other = (UserPatch) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(username, other.username).\n+                append(securityQuestion, other.securityQuestion).\n+                append(securityAnswer, other.securityAnswer).\n+                append(mustChangePassword, other.mustChangePassword).\n+                append(relationships, other.relationships).\n+                append(memberships, other.memberships).\n+                append(roles, other.roles).\n+                build();\n+    }\n }"},{"sha":"9509b025ad534f8ea604f2e211f254114d01eec6","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/policy/AbstractAccountRuleConf.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractAccountRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractAccountRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractAccountRuleConf.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,14 +18,14 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n+import java.io.Serializable;\n import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlType\n @XmlSeeAlso({ DefaultAccountRuleConf.class })\n-public abstract class AbstractAccountRuleConf extends AbstractBaseBean implements AccountRuleConf {\n+public abstract class AbstractAccountRuleConf implements Serializable, AccountRuleConf {\n \n     private static final long serialVersionUID = -4080475005967851092L;\n "},{"sha":"147d06ac6a50a3322d5de4107e3e4ac227f06382","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/policy/AbstractCorrelationRuleConf.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractCorrelationRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractCorrelationRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractCorrelationRuleConf.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,14 +18,14 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n+import java.io.Serializable;\n import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlType\n @XmlSeeAlso({ DefaultPullCorrelationRuleConf.class, DefaultPushCorrelationRuleConf.class })\n-public abstract class AbstractCorrelationRuleConf extends AbstractBaseBean implements RuleConf {\n+public abstract class AbstractCorrelationRuleConf implements Serializable, RuleConf {\n \n     private static final long serialVersionUID = -4080475005967851092L;\n "},{"sha":"fec3921b47e95e69dd58d1c88ec6b421c2a18a67","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/policy/AbstractPasswordRuleConf.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractPasswordRuleConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractPasswordRuleConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FAbstractPasswordRuleConf.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,14 +18,14 @@\n  */\n package org.apache.syncope.common.lib.policy;\n \n+import java.io.Serializable;\n import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlType\n @XmlSeeAlso({ DefaultPasswordRuleConf.class })\n-public abstract class AbstractPasswordRuleConf extends AbstractBaseBean implements PasswordRuleConf {\n+public abstract class AbstractPasswordRuleConf implements Serializable, PasswordRuleConf {\n \n     private static final long serialVersionUID = -5814018872387142339L;\n "},{"sha":"624b640530a9cafe0c9a41304543ee30450fedb7","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/policy/PolicyTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fpolicy%2FPolicyTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -31,7 +31,6 @@\n import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.to.EntityTO;\n \n @XmlRootElement(name = \"policy\")\n@@ -42,7 +41,7 @@\n @Schema(\n         subTypes = { AccountPolicyTO.class, PasswordPolicyTO.class, PullPolicyTO.class },\n         discriminatorProperty = \"@class\")\n-public abstract class PolicyTO extends AbstractBaseBean implements EntityTO {\n+public abstract class PolicyTO implements EntityTO {\n \n     private static final long serialVersionUID = -2903888572649721035L;\n "},{"sha":"0818e41f20c4ae696c02e48a42972d982ba13a9f","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/report/AbstractReportletConf.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAbstractReportletConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAbstractReportletConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Freport%2FAbstractReportletConf.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,16 +18,16 @@\n  */\n package org.apache.syncope.common.lib.report;\n \n+import java.io.Serializable;\n import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlType\n @XmlSeeAlso({\n     StaticReportletConf.class, UserReportletConf.class, GroupReportletConf.class,\n     AuditReportletConf.class, ReconciliationReportletConf.class })\n-public abstract class AbstractReportletConf extends AbstractBaseBean implements ReportletConf {\n+public abstract class AbstractReportletConf implements Serializable, ReportletConf {\n \n     private static final long serialVersionUID = -6130008602014516608L;\n "},{"sha":"741083cc72a53fc9417ccadc1c5ca768a329f909","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractAnnotatedBean.java","status":"modified","additions":32,"deletions":2,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractAnnotatedBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractAnnotatedBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractAnnotatedBean.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,18 +18,19 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import com.fasterxml.jackson.annotation.JsonIgnore;\n import io.swagger.v3.oas.annotations.media.Schema;\n import java.util.Date;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n /**\n  * Abstract wrapper for common system information.\n  */\n @XmlType\n-public class AbstractAnnotatedBean extends AbstractBaseBean {\n+public abstract class AbstractAnnotatedBean implements EntityTO {\n \n     private static final long serialVersionUID = -930797879027642457L;\n \n@@ -122,6 +123,35 @@ public String getETagValue() {\n         return etagDate == null\n                 ? StringUtils.EMPTY\n                 : String.valueOf(etagDate.getTime());\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(creator).\n+                append(creationDate).\n+                append(lastModifier).\n+                append(lastChangeDate).\n+                build();\n+    }\n \n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final AbstractAnnotatedBean other = (AbstractAnnotatedBean) obj;\n+        return new EqualsBuilder().\n+                append(creator, other.creator).\n+                append(creationDate, other.creationDate).\n+                append(lastModifier, other.lastModifier).\n+                append(lastChangeDate, other.lastChangeDate).\n+                build();\n     }\n }"},{"sha":"08c229327ca3f2075e6c53fc4d162302cf4e596e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractHistoryConf.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractHistoryConf.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractHistoryConf.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractHistoryConf.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -23,12 +23,11 @@\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"abstractHistoryConf\")\n @XmlType\n @XmlSeeAlso({ ConnInstanceHistoryConfTO.class, ResourceHistoryConfTO.class })\n-public abstract class AbstractHistoryConf extends AbstractBaseBean implements EntityTO {\n+public abstract class AbstractHistoryConf implements EntityTO {\n \n     private static final long serialVersionUID = -8001640160293506651L;\n \n@@ -68,5 +67,4 @@ public void setCreation(final Date creation) {\n                 ? null\n                 : new Date(creation.getTime());\n     }\n-\n }"},{"sha":"f6fb7aac17cae52e3854a6935eacc9008fa1e38d","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AbstractStartEndBean.java","status":"modified","additions":30,"deletions":2,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractStartEndBean.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractStartEndBean.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAbstractStartEndBean.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -19,12 +19,14 @@\n package org.apache.syncope.common.lib.to;\n \n import io.swagger.v3.oas.annotations.media.Schema;\n+import java.io.Serializable;\n import java.util.Date;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlType\n-public class AbstractStartEndBean extends AbstractBaseBean {\n+public class AbstractStartEndBean implements Serializable {\n \n     private static final long serialVersionUID = 2399577415544539917L;\n \n@@ -57,4 +59,30 @@ public void setEnd(final Date end) {\n                 ? null\n                 : new Date(end.getTime());\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(start).\n+                append(end).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final AbstractStartEndBean other = (AbstractStartEndBean) obj;\n+        return new EqualsBuilder().\n+                append(start, other.start).\n+                append(end, other.end).\n+                build();\n+    }\n }"},{"sha":"6dd39b38dbd2df7043a6087630944b5fff1b4a91","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AccessTokenTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAccessTokenTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAccessTokenTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAccessTokenTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -21,11 +21,10 @@\n import java.util.Date;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"accessToken\")\n @XmlType\n-public class AccessTokenTO extends AbstractBaseBean implements EntityTO {\n+public class AccessTokenTO implements EntityTO {\n \n     private static final long serialVersionUID = 6577639976115661357L;\n "},{"sha":"a2b6a44f5a442c7fee88e108345af9462d9f8be0","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AnyObjectTO.java","status":"modified","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyObjectTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyObjectTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyObjectTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -29,6 +29,8 @@\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlRootElement(name = \"anyObject\")\n @XmlType\n@@ -99,4 +101,36 @@ public List<MembershipTO> getMemberships() {\n     public List<MembershipTO> getDynMemberships() {\n         return dynMemberships;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(name).\n+                append(relationships).\n+                append(memberships).\n+                append(dynMemberships).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final AnyObjectTO other = (AnyObjectTO) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(name, other.name).\n+                append(relationships, other.relationships).\n+                append(memberships, other.memberships).\n+                append(dynMemberships, other.dynMemberships).\n+                build();\n+    }\n }"},{"sha":"d8bd896088bc1b324f4765fae845ae013f84a330","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTO.java","status":"modified","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -33,6 +33,8 @@\n import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlType\n @XmlSeeAlso({ UserTO.class, GroupTO.class, AnyObjectTO.class })\n@@ -175,4 +177,47 @@ public Set<String> getResources() {\n         return resources;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(key).\n+                append(type).\n+                append(realm).\n+                append(dynRealms).\n+                append(status).\n+                append(auxClasses).\n+                append(plainAttrs).\n+                append(derAttrs).\n+                append(virAttrs).\n+                append(resources).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final AnyTO other = (AnyTO) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(key, other.key).\n+                append(type, other.type).\n+                append(realm, other.realm).\n+                append(dynRealms, other.dynRealms).\n+                append(status, other.status).\n+                append(auxClasses, other.auxClasses).\n+                append(plainAttrs, other.plainAttrs).\n+                append(derAttrs, other.derAttrs).\n+                append(virAttrs, other.virAttrs).\n+                append(resources, other.resources).\n+                build();\n+    }\n }"},{"sha":"dd3166cf9421bd77472e34664c85ded84f924608","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTypeClassTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeClassTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeClassTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeClassTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -26,11 +26,10 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"anyTypeClass\")\n @XmlType\n-public class AnyTypeClassTO extends AbstractBaseBean implements EntityTO {\n+public class AnyTypeClassTO implements EntityTO {\n \n     private static final long serialVersionUID = -591757688607551266L;\n "},{"sha":"5537535fe29843ef2e537dabc4f3e648b6d863cd","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AnyTypeTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAnyTypeTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -26,12 +26,11 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n \n @XmlRootElement(name = \"anyType\")\n @XmlType\n-public class AnyTypeTO extends AbstractBaseBean implements EntityTO {\n+public class AnyTypeTO implements EntityTO {\n \n     private static final long serialVersionUID = 6771657557616874373L;\n "},{"sha":"72833869516dd17921df6475803421dd9e04f489","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ApplicationTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FApplicationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FApplicationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FApplicationTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -26,11 +26,10 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"application\")\n @XmlType\n-public class ApplicationTO extends AbstractBaseBean implements EntityTO {\n+public class ApplicationTO implements EntityTO {\n \n     private static final long serialVersionUID = -4117796727736925215L;\n "},{"sha":"570d91fe8f141f2b749700eb256ea97255b9daf4","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/AttrTO.java","status":"modified","additions":30,"deletions":2,"changes":32,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttrTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttrTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FAttrTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,8 +18,8 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n@@ -29,10 +29,12 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlRootElement(name = \"attribute\")\n @XmlType\n-public class AttrTO extends AbstractBaseBean {\n+public class AttrTO implements Serializable {\n \n     private static final long serialVersionUID = 4941691338796323623L;\n \n@@ -102,4 +104,30 @@ public void setSchema(final String schema) {\n     public List<String> getValues() {\n         return values;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(schema).\n+                append(values).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final AttrTO other = (AttrTO) obj;\n+        return new EqualsBuilder().\n+                append(schema, other.schema).\n+                append(values, other.values).\n+                build();\n+    }\n }"},{"sha":"080996034d9b8a19efc641dcad7fd07f3e9fe1e2","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ConnBundleTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnBundleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnBundleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnBundleTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -19,18 +19,18 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.ConnConfPropSchema;\n \n @XmlRootElement(name = \"connectorBundle\")\n @XmlType\n-public class ConnBundleTO extends AbstractBaseBean {\n+public class ConnBundleTO implements Serializable {\n \n     private static final long serialVersionUID = 7215115961910138005L;\n "},{"sha":"5b9c0ee5e25a676247035991903310bd149c0e36","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ConnIdObjectClassTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnIdObjectClassTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnIdObjectClassTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnIdObjectClassTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -19,20 +19,20 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n /**\n  * Metadata description of ConnId ObjectClass.\n  */\n @XmlRootElement(name = \"connIdObjectClass\")\n @XmlType\n-public class ConnIdObjectClassTO extends AbstractBaseBean {\n+public class ConnIdObjectClassTO implements Serializable {\n \n     private static final long serialVersionUID = -3719658595689434648L;\n "},{"sha":"3b5db38afa58e551f3f52f5a94ce8d1838754ba2","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ConnInstanceTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnInstanceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnInstanceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnInstanceTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -30,13 +30,12 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.types.ConnectorCapability;\n \n @XmlRootElement(name = \"connInstance\")\n @XmlType\n-public class ConnInstanceTO extends AbstractBaseBean implements EntityTO {\n+public class ConnInstanceTO implements EntityTO {\n \n     private static final long serialVersionUID = 2707778645445168671L;\n "},{"sha":"e6301b556e7a6013170e9be023a4dedfe3c2bb28","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ConnObjectTO.java","status":"modified","additions":28,"deletions":2,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnObjectTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnObjectTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnObjectTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -20,18 +20,20 @@\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.LinkedHashSet;\n import java.util.Optional;\n import java.util.Set;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlRootElement(name = \"connObject\")\n @XmlType\n-public class ConnObjectTO extends AbstractBaseBean {\n+public class ConnObjectTO implements Serializable {\n \n     private static final long serialVersionUID = 5139554911265442497L;\n \n@@ -48,4 +50,28 @@ public Set<AttrTO> getAttrs() {\n     public Optional<AttrTO> getAttr(final String schema) {\n         return attrs.stream().filter(attr -> attr.getSchema().equals(schema)).findFirst();\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(attrs).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final ConnObjectTO other = (ConnObjectTO) obj;\n+        return new EqualsBuilder().\n+                append(attrs, other.attrs).\n+                build();\n+    }\n }"},{"sha":"f92709bbaeced59643d9816e73fb2bc2502016f7","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ConnPoolConfTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnPoolConfTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnPoolConfTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FConnPoolConfTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,13 +18,13 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import java.io.Serializable;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n \n @XmlRootElement(name = \"connPoolConf\")\n @XmlType\n-public class ConnPoolConfTO extends AbstractBaseBean {\n+public class ConnPoolConfTO implements Serializable {\n \n     private static final long serialVersionUID = -214360178113476623L;\n "},{"sha":"5477fca25c9c94bacce1fd5eb3fec597ac7bba02","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/DerSchemaTO.java","status":"modified","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDerSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDerSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDerSchemaTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -23,6 +23,8 @@\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlRootElement(name = \"derSchema\")\n @XmlType\n@@ -48,4 +50,30 @@ public String getExpression() {\n     public void setExpression(final String expression) {\n         this.expression = expression;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(expression).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final DerSchemaTO other = (DerSchemaTO) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(expression, other.expression).\n+                build();\n+    }\n }"},{"sha":"4e9c1d9468532caaaf2335c3ba4c9189e1c0acfc","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/DomainTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDomainTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDomainTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDomainTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -20,12 +20,11 @@\n \n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n \n @XmlRootElement(name = \"domain\")\n @XmlType\n-public class DomainTO extends AbstractBaseBean implements EntityTO {\n+public class DomainTO implements EntityTO {\n \n     private static final long serialVersionUID = -7938075259986084934L;\n "},{"sha":"ee5d5bc1b7ecdb3097dd1380fd635301c4420382","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/DynRealmTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDynRealmTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDynRealmTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FDynRealmTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -25,12 +25,11 @@\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n \n @XmlRootElement(name = \"dynRealm\")\n @XmlType\n-public class DynRealmTO extends AbstractBaseBean implements EntityTO {\n+public class DynRealmTO implements EntityTO {\n \n     private static final long serialVersionUID = 4560822655754800031L;\n "},{"sha":"378b814727fb9ee0822be0175a0fe34812ab8d73","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ErrorTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FErrorTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FErrorTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FErrorTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -19,18 +19,18 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n \n @XmlRootElement(name = \"error\")\n @XmlType\n-public class ErrorTO extends AbstractBaseBean {\n+public class ErrorTO implements Serializable {\n \n     private static final long serialVersionUID = 2435764161719225927L;\n "},{"sha":"7ff6e99df7cc1e375e9ad870a150778ea6570825","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ExecTO.java","status":"modified","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FExecTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FExecTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FExecTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -20,6 +20,8 @@\n \n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.JobType;\n \n @XmlRootElement(name = \"exec\")\n@@ -89,4 +91,40 @@ public String getStatus() {\n     public void setStatus(final String status) {\n         this.status = status;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(key).\n+                append(jobType).\n+                append(refKey).\n+                append(refDesc).\n+                append(status).\n+                append(message).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final ExecTO other = (ExecTO) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(key, other.key).\n+                append(jobType, other.jobType).\n+                append(refKey, other.refKey).\n+                append(refDesc, other.refDesc).\n+                append(status, other.status).\n+                append(message, other.message).\n+                build();\n+    }\n }"},{"sha":"cc01edac4e29c9d6f05004e6df0ee696670894f8","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/GroupTO.java","status":"modified","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FGroupTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -32,6 +32,8 @@\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n \n@@ -168,4 +170,39 @@ public List<TypeExtensionTO> getTypeExtensions() {\n         return typeExtensions;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(name).\n+                append(userOwner).\n+                append(groupOwner).\n+                append(udynMembershipCond).\n+                append(adynMembershipConds).\n+                append(typeExtensions).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final GroupTO other = (GroupTO) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(name, other.name).\n+                append(userOwner, other.userOwner).\n+                append(groupOwner, other.groupOwner).\n+                append(udynMembershipCond, other.udynMembershipCond).\n+                append(adynMembershipConds, other.adynMembershipConds).\n+                append(typeExtensions, other.typeExtensions).\n+                build();\n+    }\n }"},{"sha":"cae2fb6e9de776b16a5dee809b01b4f3b496f8bd","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ImplementationTO.java","status":"modified","additions":32,"deletions":2,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FImplementationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FImplementationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FImplementationTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -21,13 +21,14 @@\n import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.ImplementationEngine;\n import org.apache.syncope.common.lib.types.ImplementationType;\n \n @XmlRootElement(name = \"implementation\")\n @XmlType\n-public class ImplementationTO extends AbstractBaseBean implements EntityTO {\n+public class ImplementationTO implements EntityTO {\n \n     private static final long serialVersionUID = 2703397698393060586L;\n \n@@ -75,4 +76,33 @@ public void setBody(final String body) {\n         this.body = body;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(key).\n+                append(engine).\n+                append(type).\n+                append(body).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final ImplementationTO other = (ImplementationTO) obj;\n+        return new EqualsBuilder().\n+                append(key, other.key).\n+                append(engine, other.engine).\n+                append(type, other.type).\n+                append(body, other.body).\n+                build();\n+    }\n }"},{"sha":"27066bee578f3b23b918d3d822d02c6357f200d4","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ItemTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FItemTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FItemTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FItemTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -25,12 +25,11 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.MappingPurpose;\n \n @XmlRootElement(name = \"item\")\n @XmlType\n-public class ItemTO extends AbstractBaseBean implements EntityTO {\n+public class ItemTO implements EntityTO {\n \n     private static final long serialVersionUID = 2983498836767176862L;\n "},{"sha":"188c9cbfcfafdb8d064694916fca2bfe2630bd2a","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/JobTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FJobTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FJobTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FJobTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,15 +18,15 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n+import java.io.Serializable;\n import java.util.Date;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.JobType;\n \n @XmlRootElement(name = \"job\")\n @XmlType\n-public class JobTO extends AbstractBaseBean {\n+public class JobTO implements Serializable {\n \n     private static final long serialVersionUID = -7254450981751326711L;\n "},{"sha":"fcbb1860de6b5d6d3e8ce234e3ea78a791d60b81","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/MailTemplateTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMailTemplateTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMailTemplateTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMailTemplateTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -21,11 +21,10 @@\n import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"mailTemplate\")\n @XmlType\n-public class MailTemplateTO extends AbstractBaseBean implements EntityTO {\n+public class MailTemplateTO implements EntityTO {\n \n     private static final long serialVersionUID = 8389755049666062735L;\n "},{"sha":"cdad73155781be00bda3b9557f1474a00eddef7e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/MappingTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMappingTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -19,17 +19,17 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"mapping\")\n @XmlType\n-public class MappingTO extends AbstractBaseBean implements ItemContainerTO {\n+public class MappingTO implements ItemContainerTO, Serializable {\n \n     private static final long serialVersionUID = 8447688036282611118L;\n "},{"sha":"7696c089bf20f561a833e6da8efa159ba93b077d","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/MembershipTO.java","status":"modified","additions":36,"deletions":2,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FMembershipTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -20,18 +20,20 @@\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.HashSet;\n import java.util.Optional;\n import java.util.Set;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlRootElement(name = \"membership\")\n @XmlType\n-public class MembershipTO extends AbstractBaseBean implements AttributableTO {\n+public class MembershipTO implements Serializable, AttributableTO {\n \n     private static final long serialVersionUID = 5992828670273935861L;\n \n@@ -122,4 +124,36 @@ public Set<AttrTO> getVirAttrs() {\n     public Optional<AttrTO> getVirAttr(final String schema) {\n         return virAttrs.stream().filter(attr -> attr.getSchema().equals(schema)).findFirst();\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(groupKey).\n+                append(groupName).\n+                append(plainAttrs).\n+                append(derAttrs).\n+                append(virAttrs).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final MembershipTO other = (MembershipTO) obj;\n+        return new EqualsBuilder().\n+                append(groupKey, other.groupKey).\n+                append(groupName, other.groupName).\n+                append(plainAttrs, other.plainAttrs).\n+                append(derAttrs, other.derAttrs).\n+                append(virAttrs, other.virAttrs).\n+                build();\n+    }\n }"},{"sha":"f42145967d7218673faaa65b690e9e9bfb4dfda4","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/NotificationTO.java","status":"modified","additions":51,"deletions":2,"changes":53,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -29,13 +29,14 @@\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n import org.apache.syncope.common.lib.types.TraceLevel;\n \n @XmlRootElement(name = \"notification\")\n @XmlType\n-public class NotificationTO extends AbstractBaseBean implements EntityTO {\n+public class NotificationTO implements EntityTO {\n \n     private static final long serialVersionUID = -6145117115632592612L;\n \n@@ -167,4 +168,52 @@ public boolean isActive() {\n     public void setActive(final boolean active) {\n         this.active = active;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(key).\n+                append(events).\n+                append(abouts).\n+                append(recipientsFIQL).\n+                append(staticRecipients).\n+                append(recipientAttrName).\n+                append(selfAsRecipient).\n+                append(recipientsProvider).\n+                append(sender).\n+                append(subject).\n+                append(template).\n+                append(traceLevel).\n+                append(active).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final NotificationTO other = (NotificationTO) obj;\n+        return new EqualsBuilder().\n+                append(key, other.key).\n+                append(events, other.events).\n+                append(abouts, other.abouts).\n+                append(recipientsFIQL, other.recipientsFIQL).\n+                append(staticRecipients, other.staticRecipients).\n+                append(recipientAttrName, other.recipientAttrName).\n+                append(selfAsRecipient, other.selfAsRecipient).\n+                append(recipientsProvider, other.recipientsProvider).\n+                append(sender, other.sender).\n+                append(subject, other.subject).\n+                append(template, other.template).\n+                append(traceLevel, other.traceLevel).\n+                append(active, other.active).\n+                build();\n+    }\n }"},{"sha":"5ea661858cb201113e93748eb380996ae1b938c1","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/NotificationTaskTO.java","status":"modified","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FNotificationTaskTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -27,6 +27,8 @@\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.TraceLevel;\n \n@@ -153,4 +155,48 @@ public TraceLevel getTraceLevel() {\n     public void setTraceLevel(final TraceLevel traceLevel) {\n         this.traceLevel = traceLevel;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(notification).\n+                append(anyTypeKind).\n+                append(entityKey).\n+                append(recipients).\n+                append(sender).\n+                append(subject).\n+                append(textBody).\n+                append(htmlBody).\n+                append(executed).\n+                append(traceLevel).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final NotificationTaskTO other = (NotificationTaskTO) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(notification, other.notification).\n+                append(anyTypeKind, other.anyTypeKind).\n+                append(entityKey, other.entityKey).\n+                append(recipients, other.recipients).\n+                append(sender, other.sender).\n+                append(subject, other.subject).\n+                append(textBody, other.textBody).\n+                append(htmlBody, other.htmlBody).\n+                append(executed, other.executed).\n+                append(traceLevel, other.traceLevel).\n+                build();\n+    }\n }"},{"sha":"950b78bc23b517dce26200b0eb29b8deacbeab89","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/OrgUnitTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOrgUnitTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOrgUnitTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOrgUnitTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -25,11 +25,10 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"orgUnit\")\n @XmlType\n-public class OrgUnitTO extends AbstractBaseBean implements EntityTO, ItemContainerTO {\n+public class OrgUnitTO implements EntityTO, ItemContainerTO {\n \n     private static final long serialVersionUID = -1868877794174953177L;\n "},{"sha":"15f78487a4d4b85561ce47379b6bf6d83784f6d3","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/PagedConnObjectTOResult.java","status":"modified","additions":35,"deletions":2,"changes":37,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPagedConnObjectTOResult.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPagedConnObjectTOResult.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPagedConnObjectTOResult.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -19,18 +19,20 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.net.URI;\n import java.util.ArrayList;\n import java.util.List;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlRootElement(name = \"pagedConnObjectResult\")\n @XmlType\n-public class PagedConnObjectTOResult extends AbstractBaseBean {\n+public class PagedConnObjectTOResult implements Serializable {\n \n     private static final long serialVersionUID = -2832908019064402976L;\n \n@@ -117,4 +119,35 @@ public List<ConnObjectTO> getResult() {\n         return result;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(next).\n+                append(result).\n+                append(pagedResultsCookie).\n+                append(remainingPagedResults).\n+                append(allResultsReturned).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final PagedConnObjectTOResult other = (PagedConnObjectTOResult) obj;\n+        return new EqualsBuilder().\n+                append(next, other.next).\n+                append(result, other.result).\n+                append(pagedResultsCookie, other.pagedResultsCookie).\n+                append(remainingPagedResults, other.remainingPagedResults).\n+                append(allResultsReturned, other.allResultsReturned).\n+                build();\n+    }\n }"},{"sha":"f5ec00fe7f8e4a72309b401e374fb3e2ef581381","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/PagedResult.java","status":"modified","additions":38,"deletions":2,"changes":40,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPagedResult.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPagedResult.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPagedResult.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -20,18 +20,20 @@\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+import java.io.Serializable;\n import java.net.URI;\n import java.util.ArrayList;\n import java.util.List;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlRootElement(name = \"pagedResult\")\n @XmlType\n-public class PagedResult<T extends AbstractBaseBean> extends AbstractBaseBean {\n+public class PagedResult<T extends Serializable> implements Serializable {\n \n     private static final long serialVersionUID = 3472875885259250934L;\n \n@@ -95,4 +97,38 @@ public void setTotalCount(final int totalCount) {\n         this.totalCount = totalCount;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(prev).\n+                append(next).\n+                append(result).\n+                append(page).\n+                append(size).\n+                append(totalCount).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        @SuppressWarnings(\"unchecked\")\n+        final PagedResult<T> other = (PagedResult<T>) obj;\n+        return new EqualsBuilder().\n+                append(prev, other.prev).\n+                append(next, other.next).\n+                append(result, other.result).\n+                append(page, other.page).\n+                append(size, other.size).\n+                append(totalCount, other.totalCount).\n+                build();\n+    }\n }"},{"sha":"338b642fe549ce93ad762eb3f11f05e0dffa60cc","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/PlainSchemaTO.java","status":"modified","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPlainSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPlainSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPlainSchemaTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -25,6 +25,8 @@\n import javax.xml.bind.annotation.XmlType;\n \n import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.common.lib.types.CipherAlgorithm;\n \n@@ -165,4 +167,51 @@ public void setMimeType(final String mimeType) {\n         this.mimeType = mimeType;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(type).\n+                append(mandatoryCondition).\n+                append(multivalue).\n+                append(uniqueConstraint).\n+                append(readonly).\n+                append(conversionPattern).\n+                append(validator).\n+                append(enumerationKeys).\n+                append(enumerationValues).\n+                append(secretKey).\n+                append(cipherAlgorithm).\n+                append(mimeType).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final PlainSchemaTO other = (PlainSchemaTO) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(type, other.type).\n+                append(mandatoryCondition, other.mandatoryCondition).\n+                append(multivalue, other.multivalue).\n+                append(uniqueConstraint, other.uniqueConstraint).\n+                append(readonly, other.readonly).\n+                append(conversionPattern, other.conversionPattern).\n+                append(validator, other.validator).\n+                append(enumerationKeys, other.enumerationKeys).\n+                append(enumerationValues, other.enumerationValues).\n+                append(secretKey, other.secretKey).\n+                append(cipherAlgorithm, other.cipherAlgorithm).\n+                append(mimeType, other.mimeType).\n+                build();\n+    }\n }"},{"sha":"228bc995baa0fe8a9c1ceedb79f90a75716ff6b4","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/PrivilegeTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPrivilegeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPrivilegeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPrivilegeTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -21,11 +21,10 @@\n import io.swagger.v3.oas.annotations.media.Schema;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"privilege\")\n @XmlType\n-public class PrivilegeTO extends AbstractBaseBean implements EntityTO {\n+public class PrivilegeTO implements EntityTO {\n \n     private static final long serialVersionUID = 5461846770586031758L;\n "},{"sha":"c6d1e0e24e51479f137db504c45a60644c6d5638","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/PropagationStatus.java","status":"modified","additions":36,"deletions":2,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationStatus.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationStatus.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationStatus.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,17 +18,19 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import java.io.Serializable;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.ExecStatus;\n \n /**\n  * Single propagation status.\n  */\n @XmlRootElement(name = \"propagationStatus\")\n @XmlType\n-public class PropagationStatus extends AbstractBaseBean {\n+public class PropagationStatus implements Serializable {\n \n     private static final long serialVersionUID = 3921498450222857690L;\n \n@@ -96,4 +98,36 @@ public String getFailureReason() {\n     public void setFailureReason(final String failureReason) {\n         this.failureReason = failureReason;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(beforeObj).\n+                append(afterObj).\n+                append(resource).\n+                append(status).\n+                append(failureReason).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final PropagationStatus other = (PropagationStatus) obj;\n+        return new EqualsBuilder().\n+                append(beforeObj, other.beforeObj).\n+                append(afterObj, other.afterObj).\n+                append(resource, other.resource).\n+                append(status, other.status).\n+                append(failureReason, other.failureReason).\n+                build();\n+    }\n }"},{"sha":"5b06fcc9979b221a9426871cba3e5f4cb9759aa2","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/PropagationTaskTO.java","status":"modified","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPropagationTaskTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -24,6 +24,8 @@\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n \n@@ -147,4 +149,46 @@ public String getEntityKey() {\n     public void setEntityKey(final String entityKey) {\n         this.entityKey = entityKey;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(operation).\n+                append(connObjectKey).\n+                append(oldConnObjectKey).\n+                append(attributes).\n+                append(resource).\n+                append(objectClassName).\n+                append(anyTypeKind).\n+                append(anyType).\n+                append(entityKey).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final PropagationTaskTO other = (PropagationTaskTO) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(operation, other.operation).\n+                append(connObjectKey, other.connObjectKey).\n+                append(oldConnObjectKey, other.oldConnObjectKey).\n+                append(attributes, other.attributes).\n+                append(resource, other.resource).\n+                append(objectClassName, other.objectClassName).\n+                append(anyTypeKind, other.anyTypeKind).\n+                append(anyType, other.anyType).\n+                append(entityKey, other.entityKey).\n+                build();\n+    }\n }"},{"sha":"ec271e9cc1af42f5fddfe80d5235e12c213f8015","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ProvisionTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisionTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisionTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisionTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -25,11 +25,10 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"provision\")\n @XmlType\n-public class ProvisionTO extends AbstractBaseBean implements EntityTO {\n+public class ProvisionTO implements EntityTO {\n \n     private static final long serialVersionUID = 8298910216218007927L;\n "},{"sha":"09bae8a6f8212cc8af9498f824d695503841a256","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ProvisioningResult.java","status":"modified","additions":30,"deletions":4,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningResult.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningResult.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningResult.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -20,6 +20,7 @@\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n import javax.xml.bind.annotation.XmlElement;\n@@ -28,12 +29,13 @@\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.jaxb.XmlEntityTOAdapter;\n \n @XmlRootElement(name = \"provisioningResult\")\n @XmlType\n-public class ProvisioningResult<E extends EntityTO> extends AbstractBaseBean {\n+public class ProvisioningResult<E extends EntityTO> implements Serializable {\n \n     private static final long serialVersionUID = 351317476398082746L;\n \n@@ -49,8 +51,8 @@ public E getEntity() {\n         return entity;\n     }\n \n-    public void setEntity(final E any) {\n-        this.entity = any;\n+    public void setEntity(final E entity) {\n+        this.entity = entity;\n     }\n \n     @XmlElementWrapper(name = \"propagationStatuses\")\n@@ -60,4 +62,28 @@ public List<PropagationStatus> getPropagationStatuses() {\n         return propagationStatuses;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(entity).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        @SuppressWarnings(\"unchecked\")\n+        final ProvisioningResult<E> other = (ProvisioningResult<E>) obj;\n+        return new EqualsBuilder().\n+                append(entity, other.entity).\n+                build();\n+    }\n }"},{"sha":"c1f8540b9319ac098e0b1efc0af75551512bcd88","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ProvisioningTaskTO.java","status":"modified","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FProvisioningTaskTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -27,6 +27,8 @@\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.MatchingRule;\n import org.apache.syncope.common.lib.types.UnmatchingRule;\n \n@@ -119,4 +121,44 @@ public MatchingRule getMatchingRule() {\n     public void setMatchingRule(final MatchingRule matchigRule) {\n         this.matchingRule = matchigRule;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(resource).\n+                append(performCreate).\n+                append(performUpdate).\n+                append(performDelete).\n+                append(syncStatus).\n+                append(unmatchingRule).\n+                append(matchingRule).\n+                append(actions).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final ProvisioningTaskTO other = (ProvisioningTaskTO) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(resource, other.resource).\n+                append(performCreate, other.performCreate).\n+                append(performUpdate, other.performUpdate).\n+                append(performDelete, other.performDelete).\n+                append(syncStatus, other.syncStatus).\n+                append(unmatchingRule, other.unmatchingRule).\n+                append(matchingRule, other.matchingRule).\n+                append(actions, other.actions).\n+                build();\n+    }\n }"},{"sha":"f32b554082acf380b341be7f48f2ac37c3b06188","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/PullTaskTO.java","status":"modified","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPullTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPullTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPullTaskTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -29,6 +29,8 @@\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n import org.apache.syncope.common.lib.types.PullMode;\n \n@@ -101,4 +103,35 @@ public void setRemediation(final boolean remediation) {\n         this.remediation = remediation;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(pullMode).\n+                append(reconFilterBuilder).\n+                append(destinationRealm).\n+                append(remediation).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final PullTaskTO other = (PullTaskTO) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(pullMode, other.pullMode).\n+                append(reconFilterBuilder, other.reconFilterBuilder).\n+                append(destinationRealm, other.destinationRealm).\n+                append(remediation, other.remediation).\n+                build();\n+    }\n }"},{"sha":"a1eaf1170abaf1cd61819a2b5a227a2681350c53","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/PushTaskTO.java","status":"modified","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPushTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPushTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FPushTaskTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -29,6 +29,8 @@\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n \n @XmlRootElement(name = \"pushTask\")\n@@ -66,4 +68,32 @@ public void setSourceRealm(final String sourceRealm) {\n     public Map<String, String> getFilters() {\n         return filters;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(sourceRealm).\n+                append(filters).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final PushTaskTO other = (PushTaskTO) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(sourceRealm, other.sourceRealm).\n+                append(filters, other.filters).\n+                build();\n+    }\n }"},{"sha":"c38fc8545b4e4b0b8f70a1eca9ac974cf7701b2e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/RealmTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRealmTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -31,12 +31,11 @@\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n \n @XmlRootElement(name = \"realm\")\n @XmlType\n-public class RealmTO extends AbstractBaseBean implements EntityTO, TemplatableTO {\n+public class RealmTO implements EntityTO, TemplatableTO {\n \n     private static final long serialVersionUID = 516330662956254391L;\n "},{"sha":"04577c89b4fa26fe5bcc5a9d416ef4941855a9a7","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ReconStatus.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReconStatus.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReconStatus.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReconStatus.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.common.lib.to;\n \n import io.swagger.v3.oas.annotations.media.Schema;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import java.io.Serializable;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n \n@@ -28,7 +28,7 @@\n  */\n @XmlRootElement(name = \"reconStatus\")\n @XmlType\n-public class ReconStatus extends AbstractBaseBean {\n+public class ReconStatus implements Serializable {\n \n     private static final long serialVersionUID = -8516345256596521490L;\n "},{"sha":"efc9d76d1d8594ce6c42610feef6845465be53a0","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/RelationshipTO.java","status":"modified","additions":34,"deletions":2,"changes":36,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,13 +18,15 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n+import java.io.Serializable;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlRootElement(name = \"relationship\")\n @XmlType\n-public class RelationshipTO extends AbstractBaseBean {\n+public class RelationshipTO implements Serializable {\n \n     private static final long serialVersionUID = 360672942026613929L;\n \n@@ -94,4 +96,34 @@ public String getOtherEndName() {\n     public void setOtherEndName(final String otherEndName) {\n         this.otherEndName = otherEndName;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(type).\n+                append(otherEndType).\n+                append(otherEndKey).\n+                append(otherEndName).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final RelationshipTO other = (RelationshipTO) obj;\n+        return new EqualsBuilder().\n+                append(type, other.type).\n+                append(otherEndType, other.otherEndType).\n+                append(otherEndKey, other.otherEndKey).\n+                append(otherEndName, other.otherEndName).\n+                build();\n+    }\n }"},{"sha":"5db2ac41ddc93a26838324963454b1bb1d978168","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/RelationshipTypeTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTypeTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTypeTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRelationshipTypeTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -21,11 +21,10 @@\n import javax.ws.rs.Path;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"relationshipType\")\n @XmlType\n-public class RelationshipTypeTO extends AbstractBaseBean implements EntityTO {\n+public class RelationshipTypeTO implements EntityTO {\n \n     private static final long serialVersionUID = -1884088415277925817L;\n "},{"sha":"4354b556ac07bbca446747aeeb7df46c43ec1e27","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/RemediationTO.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRemediationTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRemediationTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRemediationTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -23,13 +23,12 @@\n import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.patch.AnyPatch;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n \n @XmlRootElement(name = \"remediation\")\n @XmlType\n-public class RemediationTO extends AbstractBaseBean implements EntityTO {\n+public class RemediationTO implements EntityTO {\n \n     private static final long serialVersionUID = 3983540425142284975L;\n \n@@ -160,5 +159,4 @@ public String getRemoteName() {\n     public void setRemoteName(final String remoteName) {\n         this.remoteName = remoteName;\n     }\n-\n }"},{"sha":"3de4ad19b2af588a9a5fa375f5535b80779f725b","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ReportTO.java","status":"modified","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -27,6 +27,8 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlRootElement(name = \"report\")\n @XmlType\n@@ -135,4 +137,47 @@ public void setTemplate(final String template) {\n         this.template = template;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(key).\n+                append(name).\n+                append(reportlets).\n+                append(cronExpression).\n+                append(executions).\n+                append(latestExecStatus).\n+                append(lastExec).\n+                append(nextExec).\n+                append(active).\n+                append(template).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final ReportTO other = (ReportTO) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(key, other.key).\n+                append(name, other.name).\n+                append(reportlets, other.reportlets).\n+                append(cronExpression, other.cronExpression).\n+                append(executions, other.executions).\n+                append(latestExecStatus, other.latestExecStatus).\n+                append(lastExec, other.lastExec).\n+                append(nextExec, other.nextExec).\n+                append(active, other.active).\n+                append(template, other.template).\n+                build();\n+    }\n }"},{"sha":"8a7d8e670685a425eba38e2e3601b9345cc4fa22","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ReportTemplateTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTemplateTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTemplateTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FReportTemplateTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -21,11 +21,10 @@\n import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"reportTemplate\")\n @XmlType\n-public class ReportTemplateTO extends AbstractBaseBean implements EntityTO {\n+public class ReportTemplateTO implements EntityTO {\n \n     private static final long serialVersionUID = 7776679004906244896L;\n "},{"sha":"52682996f57062ac2793a9dff402dc2aa72c64e4","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ResourceHistoryConfTO.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceHistoryConfTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceHistoryConfTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceHistoryConfTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -36,5 +36,4 @@ public ResourceTO getResourceTO() {\n     public void setResourceTO(final ResourceTO resourceTO) {\n         this.resourceTO = resourceTO;\n     }\n-\n }"},{"sha":"b96a2068bc8386185a71067dc04de60896e482eb","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/ResourceTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FResourceTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -30,14 +30,13 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.ConnConfProperty;\n import org.apache.syncope.common.lib.types.ConnectorCapability;\n import org.apache.syncope.common.lib.types.TraceLevel;\n \n @XmlRootElement(name = \"resource\")\n @XmlType\n-public class ResourceTO extends AbstractBaseBean implements EntityTO {\n+public class ResourceTO implements EntityTO {\n \n     private static final long serialVersionUID = -9193551354041698963L;\n "},{"sha":"d9d3aee70d8bdf5a67551fd5083187564394f03d","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/RoleTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRoleTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRoleTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FRoleTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -28,11 +28,10 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"role\")\n @XmlType\n-public class RoleTO extends AbstractBaseBean implements EntityTO {\n+public class RoleTO implements EntityTO {\n \n     private static final long serialVersionUID = 4560822655754800031L;\n "},{"sha":"0ad6af22c19738d2ec254136084cc9675effacb5","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/SchedTaskTO.java","status":"modified","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchedTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchedTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchedTaskTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -26,6 +26,8 @@\n import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlRootElement(name = \"schedTask\")\n @XmlType\n@@ -126,4 +128,44 @@ public boolean isActive() {\n     public void setActive(final boolean active) {\n         this.active = active;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(startAt).\n+                append(cronExpression).\n+                append(jobDelegate).\n+                append(name).\n+                append(description).\n+                append(lastExec).\n+                append(nextExec).\n+                append(active).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final SchedTaskTO other = (SchedTaskTO) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(startAt, other.startAt).\n+                append(cronExpression, other.cronExpression).\n+                append(jobDelegate, other.jobDelegate).\n+                append(name, other.name).\n+                append(description, other.description).\n+                append(lastExec, other.lastExec).\n+                append(nextExec, other.nextExec).\n+                append(active, other.active).\n+                build();\n+    }\n }"},{"sha":"2d5f752d7fa02b1cab1a81ef5afae2a4584a3113","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/SchemaTO.java","status":"modified","additions":33,"deletions":2,"changes":35,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSchemaTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -32,7 +32,8 @@\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n \n @XmlRootElement(name = \"schema\")\n@@ -41,7 +42,7 @@\n @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = \"@class\")\n @JsonPropertyOrder(value = { \"@class\", \"key\" })\n @Schema(subTypes = { PlainSchemaTO.class, DerSchemaTO.class, VirSchemaTO.class }, discriminatorProperty = \"@class\")\n-public abstract class SchemaTO extends AbstractBaseBean implements EntityTO {\n+public abstract class SchemaTO implements EntityTO {\n \n     private static final long serialVersionUID = 4088388951694301759L;\n \n@@ -91,4 +92,34 @@ public String getLabel(final Locale locale) {\n     public Map<Locale, String> getLabels() {\n         return labels;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(discriminator).\n+                append(key).\n+                append(anyTypeClass).\n+                append(labels).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final SchemaTO other = (SchemaTO) obj;\n+        return new EqualsBuilder().\n+                append(discriminator, other.discriminator).\n+                append(key, other.key).\n+                append(anyTypeClass, other.anyTypeClass).\n+                append(labels, other.labels).\n+                build();\n+    }\n }"},{"sha":"9a6cf8bf6d9e54dad3729f8a383583e6705ee9c8","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/SecurityQuestionTO.java","status":"modified","additions":28,"deletions":2,"changes":30,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSecurityQuestionTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSecurityQuestionTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSecurityQuestionTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -21,11 +21,12 @@\n import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlRootElement(name = \"securityQuestion\")\n @XmlType\n-public class SecurityQuestionTO extends AbstractBaseBean implements EntityTO {\n+public class SecurityQuestionTO implements EntityTO {\n \n     private static final long serialVersionUID = 5969810939993556530L;\n \n@@ -52,4 +53,29 @@ public void setContent(final String content) {\n         this.content = content;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(key).\n+                append(content).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final SecurityQuestionTO other = (SecurityQuestionTO) obj;\n+        return new EqualsBuilder().\n+                append(key, other.key).\n+                append(content, other.content).\n+                build();\n+    }\n }"},{"sha":"51c7a6be32bda0c6104c53a104e909847f379d69","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/TaskTO.java","status":"modified","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTaskTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTaskTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTaskTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -31,6 +31,8 @@\n import javax.xml.bind.annotation.XmlSeeAlso;\n import javax.xml.bind.annotation.XmlTransient;\n import javax.xml.bind.annotation.XmlType;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlRootElement(name = \"task\")\n @XmlType\n@@ -89,4 +91,36 @@ public void setLatestExecStatus(final String latestExecStatus) {\n     public List<ExecTO> getExecutions() {\n         return executions;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(key).\n+                append(discriminator).\n+                append(executions).\n+                append(latestExecStatus).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final TaskTO other = (TaskTO) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(key, other.key).\n+                append(discriminator, other.discriminator).\n+                append(executions, other.executions).\n+                append(latestExecStatus, other.latestExecStatus).\n+                build();\n+    }\n }"},{"sha":"370722191449f9b818824624eed8a8d10987e49d","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/TypeExtensionTO.java","status":"modified","additions":29,"deletions":2,"changes":31,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTypeExtensionTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTypeExtensionTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FTypeExtensionTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -19,17 +19,19 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlRootElement(name = \"typeExtension\")\n @XmlType\n-public class TypeExtensionTO extends AbstractBaseBean {\n+public class TypeExtensionTO implements Serializable {\n \n     private static final long serialVersionUID = -5422809645030924811L;\n \n@@ -52,4 +54,29 @@ public List<String> getAuxClasses() {\n         return auxClasses;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(anyType).\n+                append(auxClasses).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final TypeExtensionTO other = (TypeExtensionTO) obj;\n+        return new EqualsBuilder().\n+                append(anyType, other.anyType).\n+                append(auxClasses, other.auxClasses).\n+                build();\n+    }\n }"},{"sha":"4d1da53020fd89a323b40e4ce2a494e2cd16b82e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/UserTO.java","status":"modified","additions":58,"deletions":2,"changes":60,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -31,7 +31,8 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.commons.lang3.builder.ToStringExclude;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n \n @XmlRootElement(name = \"user\")\n@@ -41,7 +42,6 @@ public class UserTO extends AnyTO implements GroupableRelatableTO {\n \n     private static final long serialVersionUID = 7791304495192615740L;\n \n-    @ToStringExclude\n     private String password;\n \n     private final List<String> roles = new ArrayList<>();\n@@ -271,4 +271,60 @@ public List<MembershipTO> getMemberships() {\n     public List<MembershipTO> getDynMemberships() {\n         return dynMemberships;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(username).\n+                append(roles).\n+                append(dynRoles).\n+                append(privileges).\n+                append(token).\n+                append(tokenExpireTime).\n+                append(lastLoginDate).\n+                append(changePwdDate).\n+                append(failedLogins).\n+                append(securityQuestion).\n+                append(securityAnswer).\n+                append(suspended).\n+                append(mustChangePassword).\n+                append(relationships).\n+                append(memberships).\n+                append(dynMemberships).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final UserTO other = (UserTO) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(username, other.username).\n+                append(roles, other.roles).\n+                append(dynRoles, other.dynRoles).\n+                append(privileges, other.privileges).\n+                append(token, other.token).\n+                append(tokenExpireTime, other.tokenExpireTime).\n+                append(lastLoginDate, other.lastLoginDate).\n+                append(changePwdDate, other.changePwdDate).\n+                append(failedLogins, other.failedLogins).\n+                append(securityQuestion, other.securityQuestion).\n+                append(securityAnswer, other.securityAnswer).\n+                append(suspended, other.suspended).\n+                append(mustChangePassword, other.mustChangePassword).\n+                append(relationships, other.relationships).\n+                append(memberships, other.memberships).\n+                append(dynMemberships, other.dynMemberships).\n+                build();\n+    }\n }"},{"sha":"7f6dac6bfdad774242aa9be3d08ded480c6dd0db","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/to/VirSchemaTO.java","status":"modified","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FVirSchemaTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FVirSchemaTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FVirSchemaTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -22,6 +22,8 @@\n import io.swagger.v3.oas.annotations.media.Schema;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlTransient;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlRootElement(name = \"virSchema\")\n @Schema(allOf = { SchemaTO.class })\n@@ -77,4 +79,35 @@ public void setExtAttrName(final String extAttrName) {\n         this.extAttrName = extAttrName;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                appendSuper(super.hashCode()).\n+                append(readonly).\n+                append(resource).\n+                append(anyType).\n+                append(extAttrName).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final VirSchemaTO other = (VirSchemaTO) obj;\n+        return new EqualsBuilder().\n+                appendSuper(super.equals(obj)).\n+                append(readonly, other.readonly).\n+                append(resource, other.resource).\n+                append(anyType, other.anyType).\n+                append(extAttrName, other.extAttrName).\n+                build();\n+    }\n }"},{"sha":"da30563a4375b62e8c84535b6079becd797c2a77","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/AuditLoggerName.java","status":"modified","additions":36,"deletions":2,"changes":38,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FAuditLoggerName.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -20,16 +20,18 @@\n \n import com.fasterxml.jackson.annotation.JsonCreator;\n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.text.ParseException;\n import java.util.Map;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.log.EventCategory;\n import org.apache.syncope.common.lib.types.AuditElements.EventCategoryType;\n import org.apache.syncope.common.lib.types.AuditElements.Result;\n \n-public class AuditLoggerName extends AbstractBaseBean {\n+public class AuditLoggerName implements Serializable {\n \n     private static final long serialVersionUID = -647989486671786839L;\n \n@@ -93,6 +95,38 @@ public String toLoggerName() {\n                 append(buildEvent(type, category, subcategory, event, result)).toString();\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(type).\n+                append(category).\n+                append(subcategory).\n+                append(event).\n+                append(result).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final AuditLoggerName other = (AuditLoggerName) obj;\n+        return new EqualsBuilder().\n+                append(type, other.type).\n+                append(category, other.category).\n+                append(subcategory, other.subcategory).\n+                append(event, other.event).\n+                append(result, other.result).\n+                build();\n+    }\n+\n     public static AuditLoggerName fromLoggerName(final String loggerName)\n             throws ParseException {\n "},{"sha":"7bdcbbddafef98ecfdaeff71813b1dc91d0df12e","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/ConnConfPropSchema.java","status":"modified","additions":18,"deletions":24,"changes":42,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfPropSchema.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfPropSchema.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfPropSchema.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -19,18 +19,19 @@\n package org.apache.syncope.common.lib.types;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n-import java.util.Objects;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlRootElement\n @XmlType\n-public class ConnConfPropSchema extends AbstractBaseBean implements Comparable<ConnConfPropSchema> {\n+public class ConnConfPropSchema implements Serializable, Comparable<ConnConfPropSchema> {\n \n     private static final long serialVersionUID = -1976365781005801296L;\n \n@@ -124,13 +125,13 @@ public int compareTo(final ConnConfPropSchema other) {\n \n     @Override\n     public int hashCode() {\n-        int hash = 5;\n-        hash = 53 * hash + Objects.hashCode(this.name);\n-        hash = 53 * hash + Objects.hashCode(this.type);\n-        hash = 53 * hash + (this.required ? 1 : 0);\n-        hash = 53 * hash + this.order;\n-        hash = 53 * hash + (this.confidential ? 1 : 0);\n-        return hash;\n+        return new HashCodeBuilder().\n+                append(name).\n+                append(type).\n+                append(required).\n+                append(order).\n+                append(confidential).\n+                build();\n     }\n \n     @Override\n@@ -145,19 +146,12 @@ public boolean equals(final Object obj) {\n             return false;\n         }\n         final ConnConfPropSchema other = (ConnConfPropSchema) obj;\n-        if (this.required != other.required) {\n-            return false;\n-        }\n-        if (this.order != other.order) {\n-            return false;\n-        }\n-        if (this.confidential != other.confidential) {\n-            return false;\n-        }\n-        if (!Objects.equals(this.name, other.name)) {\n-            return false;\n-        }\n-        return Objects.equals(this.type, other.type);\n+        return new EqualsBuilder().\n+                append(name, other.name).\n+                append(type, other.type).\n+                append(required, other.required).\n+                append(order, other.order).\n+                append(confidential, other.confidential).\n+                build();\n     }\n-\n }"},{"sha":"111d4a1a6e164a5952bdad876df2decab21a5a65","filename":"common/lib/src/main/java/org/apache/syncope/common/lib/types/ConnConfProperty.java","status":"modified","additions":32,"deletions":2,"changes":34,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Ftypes%2FConnConfProperty.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -19,18 +19,20 @@\n package org.apache.syncope.common.lib.types;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.ObjectUtils;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.commons.lang3.builder.EqualsBuilder;\n+import org.apache.commons.lang3.builder.HashCodeBuilder;\n \n @XmlRootElement\n @XmlType\n-public class ConnConfProperty extends AbstractBaseBean implements Comparable<ConnConfProperty> {\n+public class ConnConfProperty implements Serializable, Comparable<ConnConfProperty> {\n \n     private static final long serialVersionUID = -8391413960221862238L;\n \n@@ -67,4 +69,32 @@ public void setOverridable(final boolean overridable) {\n     public int compareTo(final ConnConfProperty connConfProperty) {\n         return ObjectUtils.compare(this.getSchema(), connConfProperty.getSchema());\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(schema).\n+                append(values).\n+                append(overridable).\n+                build();\n+    }\n+\n+    @Override\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final ConnConfProperty other = (ConnConfProperty) obj;\n+        return new EqualsBuilder().\n+                append(schema, other.schema).\n+                append(values, other.values).\n+                append(overridable, other.overridable).\n+                build();\n+    }\n }"},{"sha":"3c4e87c3cb7e75fcb68af405b33135bcb3aac2ef","filename":"common/lib/src/test/java/org/apache/syncope/common/lib/JAXBTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJAXBTest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJAXBTest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Flib%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2FJAXBTest.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -49,7 +49,7 @@ public void marshal() {\n             Marshaller marshaller = context.createMarshaller();\n             marshaller.marshal(new UserTO(), new StringWriter());\n             marshaller.marshal(new UserPatch(), new StringWriter());\n-        } catch (Exception e) {\n+        } catch (JAXBException e) {\n             fail(ExceptionUtils.getStackTrace(e));\n         }\n     }"},{"sha":"b48fbb51dc3a816f1479259e8b3bae7ffb0ec7a9","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/LoggerWrapper.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FLoggerWrapper.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FLoggerWrapper.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2FLoggerWrapper.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -21,6 +21,7 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n+import java.util.stream.Collectors;\n import org.apache.syncope.common.lib.log.LoggerTO;\n import org.apache.syncope.common.lib.types.AuditLoggerName;\n import org.apache.syncope.common.lib.types.LoggerLevel;\n@@ -33,24 +34,22 @@ private LoggerWrapper() {\n \n     public static List<AuditLoggerName> wrap(final Collection<LoggerTO> logger) {\n         List<AuditLoggerName> result = new ArrayList<>();\n-        for (LoggerTO loggerTO : logger) {\n+        logger.forEach(loggerTO -> {\n             try {\n                 result.add(AuditLoggerName.fromLoggerName(loggerTO.getKey()));\n             } catch (Exception ignore) {\n                 // ignore\n             }\n-        }\n+        });\n         return result;\n     }\n \n     public static List<LoggerTO> unwrap(final Collection<AuditLoggerName> auditNames) {\n-        List<LoggerTO> result = new ArrayList<>();\n-        for (AuditLoggerName name : auditNames) {\n+        return auditNames.stream().map(name -> {\n             LoggerTO loggerTO = new LoggerTO();\n             loggerTO.setKey(name.toLoggerName());\n             loggerTO.setLevel(LoggerLevel.DEBUG);\n-            result.add(loggerTO);\n-        }\n-        return result;\n+            return loggerTO;\n+        }).collect(Collectors.toList());\n     }\n }"},{"sha":"3aa0503ae4e7023d5e6196e402257f756104afa7","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/batch/BatchPayloadLine.java","status":"modified","additions":20,"deletions":4,"changes":24,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbatch%2FBatchPayloadLine.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbatch%2FBatchPayloadLine.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbatch%2FBatchPayloadLine.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -42,12 +42,28 @@ public String toString() {\n     }\n \n     @Override\n-    public boolean equals(final Object obj) {\n-        return EqualsBuilder.reflectionEquals(this, obj);\n+    public int hashCode() {\n+        return new HashCodeBuilder().\n+                append(lineNumber).\n+                append(content).\n+                build();\n     }\n \n     @Override\n-    public int hashCode() {\n-        return HashCodeBuilder.reflectionHashCode(this);\n+    public boolean equals(final Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        final BatchPayloadLine other = (BatchPayloadLine) obj;\n+        return new EqualsBuilder().\n+                append(lineNumber, other.lineNumber).\n+                append(content, other.content).\n+                build();\n     }\n }"},{"sha":"771e5600419f9baa8320b0b9cda77f275507f40c","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/AbstractQuery.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAbstractQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAbstractQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FAbstractQuery.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,13 +18,13 @@\n  */\n package org.apache.syncope.common.rest.api.beans;\n \n+import java.io.Serializable;\n import javax.validation.constraints.Min;\n import javax.ws.rs.DefaultValue;\n import javax.ws.rs.QueryParam;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.rest.api.service.JAXRSService;\n \n-public abstract class AbstractQuery extends AbstractBaseBean {\n+public abstract class AbstractQuery implements Serializable {\n \n     private static final long serialVersionUID = -371488230250055359L;\n "},{"sha":"17322ca40b579c5a22e4ae74e71bc545bb8ae576","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/ConnObjectTOListQuery.java","status":"modified","additions":0,"deletions":19,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FConnObjectTOListQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FConnObjectTOListQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FConnObjectTOListQuery.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -23,10 +23,6 @@\n import javax.validation.constraints.Min;\n import javax.ws.rs.DefaultValue;\n import javax.ws.rs.QueryParam;\n-import org.apache.commons.lang3.builder.EqualsBuilder;\n-import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n-import org.apache.commons.lang3.builder.ToStringStyle;\n import org.apache.syncope.common.rest.api.service.JAXRSService;\n \n public class ConnObjectTOListQuery implements Serializable {\n@@ -99,19 +95,4 @@ public String getOrderBy() {\n     public void setOrderBy(final String orderBy) {\n         this.orderBy = orderBy;\n     }\n-\n-    @Override\n-    public boolean equals(final Object obj) {\n-        return EqualsBuilder.reflectionEquals(this, obj);\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return HashCodeBuilder.reflectionHashCode(this);\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return ReflectionToStringBuilder.toString(this, ToStringStyle.JSON_STYLE);\n-    }\n }"},{"sha":"664a705b95e8953f5598d28171195c5b42f024be","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/ExecDeleteQuery.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FExecDeleteQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FExecDeleteQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FExecDeleteQuery.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,13 +18,13 @@\n  */\n package org.apache.syncope.common.rest.api.beans;\n \n+import java.io.Serializable;\n import java.util.Date;\n import javax.validation.constraints.NotNull;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.QueryParam;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n-public class ExecDeleteQuery extends AbstractBaseBean {\n+public class ExecDeleteQuery implements Serializable {\n \n     private static final long serialVersionUID = 3846547401120638351L;\n "},{"sha":"0a8504f4be37b08e80339f87262dc0c9f926659e","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/ExecuteQuery.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FExecuteQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FExecuteQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FExecuteQuery.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,14 +18,14 @@\n  */\n package org.apache.syncope.common.rest.api.beans;\n \n+import java.io.Serializable;\n import java.util.Date;\n import javax.validation.constraints.NotNull;\n import javax.ws.rs.DefaultValue;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.QueryParam;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n-public class ExecuteQuery extends AbstractBaseBean {\n+public class ExecuteQuery implements Serializable {\n \n     private static final long serialVersionUID = 3846547401120638351L;\n "},{"sha":"b7fd623e6def82c94b4af45fba07ddb8f4003d5b","filename":"common/rest-api/src/main/java/org/apache/syncope/common/rest/api/beans/SchemaQuery.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FSchemaQuery.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FSchemaQuery.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Frest-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Frest%2Fapi%2Fbeans%2FSchemaQuery.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,17 +18,17 @@\n  */\n package org.apache.syncope.common.rest.api.beans;\n \n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.List;\n import javax.validation.constraints.NotNull;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.QueryParam;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.SchemaType;\n \n-public class SchemaQuery extends AbstractBaseBean {\n+public class SchemaQuery implements Serializable {\n \n     private static final long serialVersionUID = -1863334226169614417L;\n "},{"sha":"aa69180f7701853bdfd6049a666221961089e8b5","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AbstractExecutableLogic.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractExecutableLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractExecutableLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractExecutableLogic.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -21,14 +21,14 @@\n import java.util.Date;\n import java.util.List;\n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.ExecTO;\n import org.apache.syncope.common.lib.to.JobTO;\n import org.apache.syncope.common.lib.types.JobAction;\n import org.apache.syncope.common.rest.api.batch.BatchResponseItem;\n import org.apache.syncope.core.persistence.api.dao.search.OrderByClause;\n \n-public abstract class AbstractExecutableLogic<T extends AbstractBaseBean> extends AbstractJobLogic<T> {\n+public abstract class AbstractExecutableLogic<T extends EntityTO> extends AbstractJobLogic<T> {\n \n     public abstract ExecTO execute(String key, Date startAt, boolean dryRun);\n "},{"sha":"416d6c1bde5e56356ee6b6755b123b8cec856b09","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AbstractJobLogic.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractJobLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractJobLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractJobLogic.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -21,7 +21,7 @@\n import java.util.ArrayList;\n import java.util.List;\n import org.apache.commons.lang3.tuple.Triple;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.JobTO;\n import org.apache.syncope.common.lib.types.JobAction;\n import org.apache.syncope.common.lib.types.JobType;\n@@ -42,7 +42,7 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.scheduling.quartz.SchedulerFactoryBean;\n \n-abstract class AbstractJobLogic<T extends AbstractBaseBean> extends AbstractTransactionalLogic<T> {\n+abstract class AbstractJobLogic<T extends EntityTO> extends AbstractTransactionalLogic<T> {\n \n     @Autowired\n     protected JobManager jobManager;"},{"sha":"ccd34edd0957b32fb49d3ba2343b4e384890ff3d","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AbstractLogic.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractLogic.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -19,7 +19,7 @@\n package org.apache.syncope.core.logic;\n \n import java.lang.reflect.Method;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.transaction.annotation.Transactional;\n@@ -29,7 +29,7 @@\n  *\n  * @param <T> transfer object used for input / output\n  */\n-abstract class AbstractLogic<T extends AbstractBaseBean> {\n+abstract class AbstractLogic<T extends EntityTO> {\n \n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractLogic.class);\n "},{"sha":"287312f2c78dc38cbc0c7f1743737f05c0145b8a","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/AbstractTransactionalLogic.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractTransactionalLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractTransactionalLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractTransactionalLogic.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,7 +18,7 @@\n  */\n package org.apache.syncope.core.logic;\n \n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.springframework.transaction.annotation.Transactional;\n \n /**\n@@ -27,5 +27,5 @@\n  * @param <T> transfer object used for input / output\n  */\n @Transactional(rollbackFor = { Throwable.class })\n-abstract class AbstractTransactionalLogic<T extends AbstractBaseBean> extends AbstractLogic<T> {\n+abstract class AbstractTransactionalLogic<T extends EntityTO> extends AbstractLogic<T> {\n }"},{"sha":"e0cf3d86943a9507e05f85316d8f0ce24788f84e","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ConfigurationLogic.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfigurationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfigurationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FConfigurationLogic.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -23,6 +23,7 @@\n import java.util.List;\n import java.util.Optional;\n import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.types.StandardEntitlement;\n import org.apache.syncope.core.spring.security.AuthContextUtils;\n import org.apache.syncope.core.persistence.api.content.ContentExporter;\n@@ -41,7 +42,7 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Component\n-public class ConfigurationLogic extends AbstractTransactionalLogic<AttrTO> {\n+public class ConfigurationLogic extends AbstractTransactionalLogic<EntityTO> {\n \n     @Autowired\n     private ConfDAO confDAO;\n@@ -125,7 +126,7 @@ public void export(final OutputStream os) {\n     }\n \n     @Override\n-    protected AttrTO resolveReference(final Method method, final Object... args)\n+    protected EntityTO resolveReference(final Method method, final Object... args)\n             throws UnresolvedReferenceException {\n \n         throw new UnresolvedReferenceException();"},{"sha":"c0f144a928051a9a06918760f43bc0e677976516","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/LoggerLogic.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLoggerLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLoggerLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FLoggerLogic.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -36,6 +36,7 @@\n import org.apache.syncope.common.lib.log.LogAppender;\n import org.apache.syncope.common.lib.log.LogStatement;\n import org.apache.syncope.common.lib.log.LoggerTO;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.types.AuditElements.EventCategoryType;\n import org.apache.syncope.common.lib.types.AuditLoggerName;\n import org.apache.syncope.common.lib.types.ClientExceptionType;\n@@ -72,7 +73,7 @@\n import org.springframework.util.SystemPropertyUtils;\n \n @Component\n-public class LoggerLogic extends AbstractTransactionalLogic<LoggerTO> {\n+public class LoggerLogic extends AbstractTransactionalLogic<EntityTO> {\n \n     @Autowired\n     private LoggerLoader loggerLoader;\n@@ -404,7 +405,7 @@ public List<EventCategory> listAuditEvents() {\n     }\n \n     @Override\n-    protected LoggerTO resolveReference(final Method method, final Object... args)\n+    protected EntityTO resolveReference(final Method method, final Object... args)\n             throws UnresolvedReferenceException {\n \n         throw new UnresolvedReferenceException();"},{"sha":"36c594b2a5f13d80136c4281a328ce1a1e01f227","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/ReconciliationLogic.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FReconciliationLogic.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -24,11 +24,11 @@\n import java.util.Set;\n import java.util.stream.Collectors;\n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.collections.IteratorChain;\n import org.apache.syncope.common.lib.to.AttrTO;\n import org.apache.syncope.common.lib.to.ConnObjectTO;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.PullTaskTO;\n import org.apache.syncope.common.lib.to.PushTaskTO;\n import org.apache.syncope.common.lib.to.ReconStatus;\n@@ -64,7 +64,7 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class ReconciliationLogic extends AbstractTransactionalLogic<AbstractBaseBean> {\n+public class ReconciliationLogic extends AbstractTransactionalLogic<EntityTO> {\n \n     @Autowired\n     private AnyUtilsFactory anyUtilsFactory;\n@@ -237,7 +237,7 @@ public void pull(\n     }\n \n     @Override\n-    protected AbstractBaseBean resolveReference(final Method method, final Object... os)\n+    protected EntityTO resolveReference(final Method method, final Object... os)\n             throws UnresolvedReferenceException {\n \n         throw new UnresolvedReferenceException();"},{"sha":"1c1a07f123453214e0d8925ff02fb9b9351f3532","filename":"core/logic/src/main/java/org/apache/syncope/core/logic/SyncopeLogic.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSyncopeLogic.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -35,12 +35,12 @@\n import javax.annotation.Resource;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.tuple.Pair;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.info.JavaImplInfo;\n import org.apache.syncope.common.lib.info.NumbersInfo;\n import org.apache.syncope.common.lib.info.SystemInfo;\n import org.apache.syncope.common.lib.info.PlatformInfo;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.GroupTO;\n import org.apache.syncope.common.lib.to.TypeExtensionTO;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n@@ -96,7 +96,7 @@\n \n @Transactional(readOnly = true)\n @Component\n-public class SyncopeLogic extends AbstractLogic<AbstractBaseBean> {\n+public class SyncopeLogic extends AbstractLogic<EntityTO> {\n \n     private static final Object MONITOR = new Object();\n \n@@ -424,10 +424,9 @@ public TypeExtensionTO readTypeExtension(final String groupName) {\n     }\n \n     @Override\n-    protected AbstractBaseBean resolveReference(final Method method, final Object... args)\n+    protected EntityTO resolveReference(final Method method, final Object... args)\n             throws UnresolvedReferenceException {\n \n         throw new UnresolvedReferenceException();\n     }\n-\n }"},{"sha":"988ef58acf29cab2a7baffdf0e23520cf91aa9bf","filename":"core/persistence-jpa/src/main/java/org/apache/syncope/core/persistence/jpa/entity/AbstractPlainAttrValue.java","status":"modified","additions":10,"deletions":3,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttrValue.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttrValue.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpersistence-jpa%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fjpa%2Fentity%2FAbstractPlainAttrValue.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -26,8 +26,7 @@\n import javax.persistence.TemporalType;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n-import org.apache.commons.lang3.builder.ToStringStyle;\n+import org.apache.commons.lang3.builder.ToStringBuilder;\n import org.apache.syncope.common.lib.types.AttrSchemaType;\n import org.apache.syncope.core.provisioning.api.utils.FormatUtils;\n import org.apache.syncope.core.persistence.api.attrvalue.validation.ParsingValidationException;\n@@ -276,6 +275,14 @@ public String getValueAsString(final PlainSchema schema) {\n \n     @Override\n     public String toString() {\n-        return ReflectionToStringBuilder.toString(this, ToStringStyle.JSON_STYLE);\n+        return new ToStringBuilder(this).\n+                append(getKey()).\n+                append(stringValue).\n+                append(dateValue).\n+                append(booleanValue).\n+                append(longValue).\n+                append(doubleValue).\n+                append(binaryValue).\n+                build();\n     }\n }"},{"sha":"4f47eda089c2317a5d0b728cdd7c0139b8c71cf7","filename":"core/provisioning-api/src/main/java/org/apache/syncope/core/provisioning/api/pushpull/ProvisioningReport.java","status":"modified","additions":10,"deletions":3,"changes":13,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningReport.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningReport.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fapi%2Fpushpull%2FProvisioningReport.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -20,8 +20,7 @@\n \n import java.util.Collection;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.commons.lang3.builder.ReflectionToStringBuilder;\n-import org.apache.commons.lang3.builder.ToStringStyle;\n+import org.apache.commons.lang3.builder.ToStringBuilder;\n import org.apache.syncope.common.lib.types.ResourceOperation;\n import org.apache.syncope.common.lib.types.TraceLevel;\n \n@@ -107,7 +106,15 @@ public void setUidValue(final String uidValue) {\n \n     @Override\n     public String toString() {\n-        return new ReflectionToStringBuilder(this, ToStringStyle.SHORT_PREFIX_STYLE).toString();\n+        return new ToStringBuilder(this).\n+                append(message).\n+                append(status).\n+                append(anyType).\n+                append(operation).\n+                append(key).\n+                append(name).\n+                append(uidValue).\n+                build();\n     }\n \n     /**"},{"sha":"a46210709ec31dad8015848e3e97d05cb7bf7b61","filename":"core/provisioning-java/src/main/java/org/apache/syncope/core/provisioning/java/AuditEntry.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAuditEntry.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAuditEntry.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fprovisioning-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fprovisioning%2Fjava%2FAuditEntry.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -20,13 +20,13 @@\n \n import com.fasterxml.jackson.annotation.JsonCreator;\n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.SerializationUtils;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.to.UserTO;\n import org.apache.syncope.common.lib.types.AuditLoggerName;\n \n-public class AuditEntry extends AbstractBaseBean {\n+public class AuditEntry implements Serializable {\n \n     private static final long serialVersionUID = -2299082316063743582L;\n "},{"sha":"6f83b110be24586383ac706b1944ac21324c6730","filename":"core/rest-cxf/src/main/java/org/apache/syncope/core/rest/cxf/service/AbstractServiceImpl.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractServiceImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractServiceImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Frest-cxf%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fcxf%2Fservice%2FAbstractServiceImpl.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,10 +18,10 @@\n  */\n package org.apache.syncope.core.rest.cxf.service;\n \n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Map;\n import javax.ws.rs.core.Context;\n import javax.ws.rs.core.EntityTag;\n import javax.ws.rs.core.MultivaluedMap;\n@@ -35,7 +35,6 @@\n import org.apache.cxf.jaxrs.ext.search.SearchBean;\n import org.apache.cxf.jaxrs.ext.search.SearchCondition;\n import org.apache.cxf.jaxrs.ext.search.SearchContext;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.SyncopeConstants;\n import org.apache.syncope.common.lib.to.PagedResult;\n@@ -217,7 +216,7 @@ protected List<OrderByClause> getOrderByClauses(final String orderBy) {\n      * @param totalCount total result size (not considering pagination)\n      * @return paged result\n      */\n-    protected <T extends AbstractBaseBean> PagedResult<T> buildPagedResult(\n+    protected <T extends Serializable> PagedResult<T> buildPagedResult(\n             final List<T> list, final int page, final int size, final int totalCount) {\n \n         PagedResult<T> result = new PagedResult<>();\n@@ -229,9 +228,9 @@ protected <T extends AbstractBaseBean> PagedResult<T> buildPagedResult(\n \n         UriBuilder builder = uriInfo.getAbsolutePathBuilder();\n         MultivaluedMap<String, String> queryParams = uriInfo.getQueryParameters();\n-        for (Map.Entry<String, List<String>> queryParam : queryParams.entrySet()) {\n-            builder.queryParam(queryParam.getKey(), queryParam.getValue().toArray());\n-        }\n+        queryParams.forEach((key, value) -> {\n+            builder.queryParam(key, value.toArray());\n+        });\n \n         if (result.getPage() > 1) {\n             result.setPrev(builder."},{"sha":"6e11884465a0a20688f6bebd8193ffff22a23dd7","filename":"ext/camel/common-lib/src/main/java/org/apache/syncope/common/lib/to/CamelMetrics.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fcamel%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FCamelMetrics.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fcamel%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FCamelMetrics.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FCamelMetrics.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -19,23 +19,23 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"camelMetrics\")\n @XmlType\n-public class CamelMetrics extends AbstractBaseBean {\n+public class CamelMetrics implements Serializable {\n \n     private static final long serialVersionUID = -391404198406614231L;\n \n     @XmlRootElement(name = \"meanRate\")\n     @XmlType\n-    public static class MeanRate extends AbstractBaseBean {\n+    public static class MeanRate implements Serializable {\n \n         private static final long serialVersionUID = -233921226510124154L;\n "},{"sha":"086db7f0524387411f28c817272d33843579e5b2","filename":"ext/camel/common-lib/src/main/java/org/apache/syncope/common/lib/to/CamelRouteTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fcamel%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FCamelRouteTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fcamel%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FCamelRouteTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fcamel%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FCamelRouteTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -21,12 +21,11 @@\n import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.AnyTypeKind;\n \n @XmlRootElement(name = \"camelRoute\")\n @XmlType\n-public class CamelRouteTO extends AbstractBaseBean implements EntityTO {\n+public class CamelRouteTO implements EntityTO {\n \n     private static final long serialVersionUID = 6431992877435181674L;\n "},{"sha":"d1e150d5d44601a918ddb83f799fe422dc112e07","filename":"ext/flowable/common-lib/src/main/java/org/apache/syncope/common/lib/to/BpmnProcess.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FBpmnProcess.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FBpmnProcess.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FBpmnProcess.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -20,11 +20,10 @@\n \n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"bpmnProcess\")\n @XmlType\n-public class BpmnProcess extends AbstractBaseBean implements EntityTO {\n+public class BpmnProcess implements EntityTO {\n \n     private static final long serialVersionUID = -7044543391316529128L;\n "},{"sha":"b3fbe233ecc5a8e59b6d0584c30e8869b2e27227","filename":"ext/flowable/common-lib/src/main/java/org/apache/syncope/common/lib/to/UserRequest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequest.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequest.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequest.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,14 +18,14 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n+import java.io.Serializable;\n import java.util.Date;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"userRequest\")\n @XmlType\n-public class UserRequest extends AbstractBaseBean {\n+public class UserRequest implements Serializable {\n \n     private static final long serialVersionUID = -8430826310789942133L;\n "},{"sha":"6e17e79f37de5114e8346dce247f73246eb74029","filename":"ext/flowable/common-lib/src/main/java/org/apache/syncope/common/lib/to/UserRequestForm.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequestForm.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequestForm.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequestForm.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -20,6 +20,7 @@\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Date;\n import java.util.List;\n@@ -28,12 +29,11 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.patch.UserPatch;\n \n @XmlRootElement(name = \"userRequestForm\")\n @XmlType\n-public class UserRequestForm extends AbstractBaseBean {\n+public class UserRequestForm implements Serializable {\n \n     private static final long serialVersionUID = -7044543391316529128L;\n "},{"sha":"eca017f86938f71c26df3ed82419d8635b8fec62","filename":"ext/flowable/common-lib/src/main/java/org/apache/syncope/common/lib/to/UserRequestFormProperty.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequestFormProperty.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequestFormProperty.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FUserRequestFormProperty.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -19,18 +19,18 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.HashMap;\n import java.util.Map;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n import org.apache.syncope.common.lib.types.UserRequestFormPropertyType;\n \n @XmlRootElement(name = \"userRequestFormProperty\")\n @XmlType\n-public class UserRequestFormProperty extends AbstractBaseBean {\n+public class UserRequestFormProperty implements Serializable {\n \n     private static final long serialVersionUID = 9139969592634304261L;\n "},{"sha":"8437bdf4a576d1d52485f3c48b31f1753a8d9753","filename":"ext/flowable/common-lib/src/main/java/org/apache/syncope/common/lib/to/WorkflowTask.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowTask.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowTask.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowTask.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,13 +18,13 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n+import java.io.Serializable;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"workflowTask\")\n @XmlType\n-public class WorkflowTask extends AbstractBaseBean {\n+public class WorkflowTask implements Serializable {\n \n     private static final long serialVersionUID = -3095016727396210808L;\n "},{"sha":"4018d244ca196e246379ae08e871e103aba7652c","filename":"ext/flowable/common-lib/src/main/java/org/apache/syncope/common/lib/to/WorkflowTaskExecInput.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowTaskExecInput.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowTaskExecInput.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FWorkflowTaskExecInput.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -19,18 +19,18 @@\n package org.apache.syncope.common.lib.to;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.HashMap;\n import java.util.Map;\n import javax.ws.rs.PathParam;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.jaxb.XmlGenericMapAdapter;\n \n @XmlRootElement(name = \"workflowTaskExecInput\")\n @XmlType\n-public class WorkflowTaskExecInput extends AbstractBaseBean {\n+public class WorkflowTaskExecInput implements Serializable {\n \n     private static final long serialVersionUID = 8060283119070901756L;\n "},{"sha":"edff18851b65d5792d6146a0c22cddfd67cb7872","filename":"ext/flowable/logic/src/main/java/org/apache/syncope/core/logic/UserRequestLogic.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fflowable%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserRequestLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fflowable%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserRequestLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserRequestLogic.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -24,6 +24,7 @@\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.patch.UserPatch;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n import org.apache.syncope.common.lib.to.UserRequest;\n import org.apache.syncope.common.lib.to.UserTO;\n@@ -49,7 +50,7 @@\n import org.springframework.transaction.annotation.Transactional;\n \n @Component\n-public class UserRequestLogic extends AbstractTransactionalLogic<UserRequestForm> {\n+public class UserRequestLogic extends AbstractTransactionalLogic<EntityTO> {\n \n     @Autowired\n     protected BpmnProcessManager bpmnProcessManager;\n@@ -205,7 +206,7 @@ public UserTO submitForm(final UserRequestForm form) {\n     }\n \n     @Override\n-    protected UserRequestForm resolveReference(final Method method, final Object... args)\n+    protected EntityTO resolveReference(final Method method, final Object... args)\n             throws UnresolvedReferenceException {\n \n         throw new UnresolvedReferenceException();"},{"sha":"76d4ad9cfd6cc053ba7bc4d13cca91a10e4cc8f9","filename":"ext/flowable/logic/src/main/java/org/apache/syncope/core/logic/UserWorkflowTaskLogic.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fflowable%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserWorkflowTaskLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fflowable%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserWorkflowTaskLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fflowable%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FUserWorkflowTaskLogic.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -22,9 +22,9 @@\n import java.util.List;\n import org.apache.commons.lang3.tuple.Pair;\n import org.apache.syncope.common.lib.patch.UserPatch;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.PropagationTaskTO;\n import org.apache.syncope.common.lib.to.UserTO;\n-import org.apache.syncope.common.lib.to.UserRequestForm;\n import org.apache.syncope.common.lib.to.WorkflowTask;\n import org.apache.syncope.common.lib.to.WorkflowTaskExecInput;\n import org.apache.syncope.common.lib.types.FlowableEntitlement;\n@@ -41,7 +41,7 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class UserWorkflowTaskLogic extends AbstractTransactionalLogic<UserRequestForm> {\n+public class UserWorkflowTaskLogic extends AbstractTransactionalLogic<EntityTO> {\n \n     @Autowired\n     private WorkflowTaskManager wfTaskManager;\n@@ -83,7 +83,7 @@ public UserTO executeNextTask(final WorkflowTaskExecInput workflowTaskExecInput)\n     }\n \n     @Override\n-    protected UserRequestForm resolveReference(final Method method, final Object... args)\n+    protected EntityTO resolveReference(final Method method, final Object... args)\n             throws UnresolvedReferenceException {\n \n         throw new UnresolvedReferenceException();"},{"sha":"8186d760dae2b04723a6ede85c6ce75f425d8af7","filename":"ext/oidcclient/common-lib/src/main/java/org/apache/syncope/common/lib/to/OIDCLoginRequestTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLoginRequestTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLoginRequestTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLoginRequestTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,13 +18,13 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n+import java.io.Serializable;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"oidcLoginRequest\")\n @XmlType\n-public class OIDCLoginRequestTO extends AbstractBaseBean {\n+public class OIDCLoginRequestTO implements Serializable {\n \n     private static final long serialVersionUID = -3509031322459942441L;\n "},{"sha":"c7672922e171909ec1d7a5ff875268dc3670ad2a","filename":"ext/oidcclient/common-lib/src/main/java/org/apache/syncope/common/lib/to/OIDCLoginResponseTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLoginResponseTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLoginResponseTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLoginResponseTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -20,6 +20,7 @@\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.Date;\n import java.util.HashSet;\n import java.util.Optional;\n@@ -28,11 +29,10 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"oidcLoginResponse\")\n @XmlType\n-public class OIDCLoginResponseTO extends AbstractBaseBean {\n+public class OIDCLoginResponseTO implements Serializable {\n \n     private static final long serialVersionUID = -5971442076182154492L;\n "},{"sha":"611cdca0a6f862c51beaa029a547fc9c56b2f58f","filename":"ext/oidcclient/common-lib/src/main/java/org/apache/syncope/common/lib/to/OIDCLogoutRequestTO.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLogoutRequestTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLogoutRequestTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCLogoutRequestTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,13 +18,13 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n+import java.io.Serializable;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"oidcLogoutRequest\")\n @XmlType\n-public class OIDCLogoutRequestTO extends AbstractBaseBean {\n+public class OIDCLogoutRequestTO implements Serializable {\n \n     private static final long serialVersionUID = -4708360216757961537L;\n \n@@ -37,5 +37,4 @@ public String getEndSessionEndpoint() {\n     public void setEndSessionEndpoint(final String endSessionEndpoint) {\n         this.endSessionEndpoint = endSessionEndpoint;\n     }\n-\n }"},{"sha":"60ecf410c6cfa0524effa9dbe49361be50f1bb9b","filename":"ext/oidcclient/common-lib/src/main/java/org/apache/syncope/common/lib/to/OIDCProviderTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCProviderTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCProviderTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FOIDCProviderTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -28,11 +28,10 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"oidcprovider\")\n @XmlType\n-public class OIDCProviderTO extends AbstractBaseBean implements EntityTO, ItemContainerTO {\n+public class OIDCProviderTO implements EntityTO, ItemContainerTO {\n \n     private static final long serialVersionUID = -1229802774546135794L;\n "},{"sha":"9c9acbfb35063973da1c190834cd28479cc53fee","filename":"ext/oidcclient/logic/src/main/java/org/apache/syncope/core/logic/OIDCClientLogic.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCClientLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCClientLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Foidcclient%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FOIDCClientLogic.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -44,9 +44,9 @@\n import org.apache.cxf.rs.security.oidc.common.UserInfo;\n import org.apache.cxf.rs.security.oidc.rp.IdTokenReader;\n import org.apache.cxf.rs.security.oidc.rp.UserInfoClient;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.OIDCLoginRequestTO;\n import org.apache.syncope.common.lib.to.OIDCLoginResponseTO;\n import org.apache.syncope.common.lib.to.OIDCLogoutRequestTO;\n@@ -71,7 +71,7 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class OIDCClientLogic extends AbstractTransactionalLogic<AbstractBaseBean> {\n+public class OIDCClientLogic extends AbstractTransactionalLogic<EntityTO> {\n \n     private static final String JWT_CLAIM_OP_ENTITYID = \"OP_ENTITYID\";\n \n@@ -437,7 +437,7 @@ public OIDCLogoutRequestTO createLogoutRequest(final String op) {\n     }\n \n     @Override\n-    protected AbstractBaseBean resolveReference(\n+    protected EntityTO resolveReference(\n             final Method method, final Object... args) throws UnresolvedReferenceException {\n \n         throw new UnresolvedReferenceException();"},{"sha":"76b325901e82786dda920e4bab826087c66d2c6a","filename":"ext/saml2sp/common-lib/src/main/java/org/apache/syncope/common/lib/to/SAML2IdPTO.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2IdPTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -26,12 +26,11 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.SAML2BindingType;\n \n @XmlRootElement(name = \"saml2idp\")\n @XmlType\n-public class SAML2IdPTO extends AbstractBaseBean implements EntityTO, ItemContainerTO {\n+public class SAML2IdPTO implements EntityTO, ItemContainerTO {\n \n     private static final long serialVersionUID = 4426527052873779881L;\n "},{"sha":"b676257d753b256867f36bb2ed9ac80031174d7e","filename":"ext/saml2sp/common-lib/src/main/java/org/apache/syncope/common/lib/to/SAML2LoginResponseTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2LoginResponseTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2LoginResponseTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2LoginResponseTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -20,6 +20,7 @@\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.io.Serializable;\n import java.util.Date;\n import java.util.HashSet;\n import java.util.Optional;\n@@ -28,11 +29,10 @@\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"saml2LoginResponse\")\n @XmlType\n-public class SAML2LoginResponseTO extends AbstractBaseBean {\n+public class SAML2LoginResponseTO implements Serializable {\n \n     private static final long serialVersionUID = 794772343787258010L;\n "},{"sha":"466ac8b92b8bb3b206e7e2f195cc9e56b0900c79","filename":"ext/saml2sp/common-lib/src/main/java/org/apache/syncope/common/lib/to/SAML2ReceivedResponseTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2ReceivedResponseTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2ReceivedResponseTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2ReceivedResponseTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,14 +18,14 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n+import java.io.Serializable;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n import org.apache.commons.lang3.StringUtils;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n \n @XmlRootElement(name = \"saml2ReceivedResponse\")\n @XmlType\n-public class SAML2ReceivedResponseTO extends AbstractBaseBean {\n+public class SAML2ReceivedResponseTO implements Serializable {\n \n     private static final long serialVersionUID = 6102419133516694822L;\n "},{"sha":"a3601811a6d14cdc3e25563d258cc199a23605a3","filename":"ext/saml2sp/common-lib/src/main/java/org/apache/syncope/common/lib/to/SAML2RequestTO.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2RequestTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2RequestTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Fcommon-lib%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Flib%2Fto%2FSAML2RequestTO.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,14 +18,14 @@\n  */\n package org.apache.syncope.common.lib.to;\n \n+import java.io.Serializable;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.types.SAML2BindingType;\n \n @XmlRootElement(name = \"saml2request\")\n @XmlType\n-public class SAML2RequestTO extends AbstractBaseBean {\n+public class SAML2RequestTO implements Serializable {\n \n     private static final long serialVersionUID = -2454209295007372086L;\n "},{"sha":"221cc44aa9ca62fb7c07f3e7267433e3e90a4dca","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/AbstractSAML2Logic.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractSAML2Logic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractSAML2Logic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FAbstractSAML2Logic.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -18,11 +18,11 @@\n  */\n package org.apache.syncope.core.logic;\n \n-import org.apache.syncope.common.lib.AbstractBaseBean;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.core.logic.init.SAML2SPLoader;\n import org.springframework.beans.factory.annotation.Autowired;\n \n-public abstract class AbstractSAML2Logic<T extends AbstractBaseBean> extends AbstractTransactionalLogic<T> {\n+public abstract class AbstractSAML2Logic<T extends EntityTO> extends AbstractTransactionalLogic<T> {\n \n     @Autowired\n     protected SAML2SPLoader loader;"},{"sha":"f5e6ce10d26d3246eb84ef0e0d81c08fcbdd4a61","filename":"ext/saml2sp/logic/src/main/java/org/apache/syncope/core/logic/SAML2SPLogic.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fsaml2sp%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSAML2SPLogic.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -34,9 +34,9 @@\n import org.apache.cxf.rs.security.jose.jws.JwsJwtCompactConsumer;\n import org.apache.cxf.rs.security.jose.jws.JwsSignatureVerifier;\n import org.apache.cxf.rs.security.saml.sso.SSOValidatorResponse;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.SyncopeClientException;\n import org.apache.syncope.common.lib.to.AttrTO;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.common.lib.to.SAML2RequestTO;\n import org.apache.syncope.common.lib.to.SAML2LoginResponseTO;\n import org.apache.syncope.common.lib.to.SAML2ReceivedResponseTO;\n@@ -108,7 +108,7 @@\n import org.springframework.util.ResourceUtils;\n \n @Component\n-public class SAML2SPLogic extends AbstractSAML2Logic<AbstractBaseBean> {\n+public class SAML2SPLogic extends AbstractSAML2Logic<EntityTO> {\n \n     private static final String IDP_INITIATED_RELAY_STATE = \"idpInitiated\";\n \n@@ -700,7 +700,7 @@ public void validateLogoutResponse(final String accessToken, final SAML2Received\n     }\n \n     @Override\n-    protected AbstractBaseBean resolveReference(\n+    protected EntityTO resolveReference(\n             final Method method, final Object... args) throws UnresolvedReferenceException {\n \n         throw new UnresolvedReferenceException();"},{"sha":"8ddfcf77a4532188b31006b28868fed649f99378","filename":"ext/scimv2/logic/src/main/java/org/apache/syncope/core/logic/SCIMLogic.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMLogic.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/1fd1ffdfc1ada531ed190e404c7d883099169b71/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMLogic.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/ext%2Fscimv2%2Flogic%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Flogic%2FSCIMLogic.java?ref=1fd1ffdfc1ada531ed190e404c7d883099169b71","patch":"@@ -29,8 +29,8 @@\n import java.util.List;\n import java.util.Map;\n import javax.ws.rs.core.UriBuilder;\n-import org.apache.syncope.common.lib.AbstractBaseBean;\n import org.apache.syncope.common.lib.scim.SCIMConf;\n+import org.apache.syncope.common.lib.to.EntityTO;\n import org.apache.syncope.core.logic.scim.SCIMConfManager;\n import org.apache.syncope.core.persistence.api.dao.NotFoundException;\n import org.apache.syncope.ext.scimv2.api.data.AuthenticationScheme;\n@@ -47,7 +47,7 @@\n import org.springframework.stereotype.Component;\n \n @Component\n-public class SCIMLogic extends AbstractLogic<AbstractBaseBean> {\n+public class SCIMLogic extends AbstractLogic<EntityTO> {\n \n     private static final String SCHEMAS_JSON = \"schemas.json\";\n \n@@ -191,10 +191,9 @@ public String schema(final String schema) {\n     }\n \n     @Override\n-    protected AbstractBaseBean resolveReference(final Method method, final Object... args)\n+    protected EntityTO resolveReference(final Method method, final Object... args)\n             throws UnresolvedReferenceException {\n \n         throw new UnresolvedReferenceException();\n     }\n-\n }"}]}