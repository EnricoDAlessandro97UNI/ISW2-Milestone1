{"sha":"ca5b676d6614ce8b408ae841919ece5d85f742d2","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOmNhNWI2NzZkNjYxNGNlOGI0MDhhZTg0MTkxOWVjZTVkODVmNzQyZDI=","commit":{"author":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-11-05T11:39:30Z"},"committer":{"name":"Fabio Martelli","email":"fmartelli@apache.org","date":"2013-11-05T11:39:30Z"},"message":"Fix jaxrs failures\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/branches/1_1_X@1538950 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4d1a70ec4a25290d8dd082e2615e8d62fa82d3d5","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/4d1a70ec4a25290d8dd082e2615e8d62fa82d3d5"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/ca5b676d6614ce8b408ae841919ece5d85f742d2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ca5b676d6614ce8b408ae841919ece5d85f742d2","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/ca5b676d6614ce8b408ae841919ece5d85f742d2","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/ca5b676d6614ce8b408ae841919ece5d85f742d2/comments","author":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"committer":{"login":"fmartelli","id":1791932,"node_id":"MDQ6VXNlcjE3OTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1791932?v=4","gravatar_id":"","url":"https://api.github.com/users/fmartelli","html_url":"https://github.com/fmartelli","followers_url":"https://api.github.com/users/fmartelli/followers","following_url":"https://api.github.com/users/fmartelli/following{/other_user}","gists_url":"https://api.github.com/users/fmartelli/gists{/gist_id}","starred_url":"https://api.github.com/users/fmartelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fmartelli/subscriptions","organizations_url":"https://api.github.com/users/fmartelli/orgs","repos_url":"https://api.github.com/users/fmartelli/repos","events_url":"https://api.github.com/users/fmartelli/events{/privacy}","received_events_url":"https://api.github.com/users/fmartelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"0ead583e574e126e4363b46a3ce391f9d9fa9ca1","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/0ead583e574e126e4363b46a3ce391f9d9fa9ca1","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/0ead583e574e126e4363b46a3ce391f9d9fa9ca1"}],"stats":{"total":27,"additions":17,"deletions":10},"files":[{"sha":"f39e09286119cd25d002d98c94bb01d2dd8171d7","filename":"common/src/main/java/org/apache/syncope/common/services/LoggerService.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca5b676d6614ce8b408ae841919ece5d85f742d2/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FLoggerService.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca5b676d6614ce8b408ae841919ece5d85f742d2/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FLoggerService.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fservices%2FLoggerService.java?ref=ca5b676d6614ce8b408ae841919ece5d85f742d2","patch":"@@ -30,22 +30,23 @@\n import org.apache.syncope.common.to.LoggerTO;\r\n import org.apache.syncope.common.types.LoggerType;\r\n \r\n-@Path(\"logger/{type}\")\r\n+@Path(\"logger\")\r\n public interface LoggerService {\r\n \r\n     /**\r\n      * @param type LoggerType to be selected.\r\n      * @param name Logger name to be deleted.\r\n      */\r\n     @DELETE\r\n-    @Path(\"{name}\")\r\n+    @Path(\"{type}/{name}\")\r\n     void delete(@PathParam(\"type\") LoggerType type, @PathParam(\"name\") String name);\r\n \r\n     /**\r\n      * @param type LoggerType to be selected.\r\n      * @return List of logger with matching type.\r\n      */\r\n     @GET\r\n+    @Path(\"{type}\")\r\n     List<LoggerTO> list(@PathParam(\"type\") LoggerType type);\r\n \r\n     /**\r\n@@ -54,7 +55,7 @@ public interface LoggerService {\n      * @return Returns logger with matching type and name.\r\n      */\r\n     @GET\r\n-    @Path(\"{name}\")\r\n+    @Path(\"{type}/{name}\")\r\n     LoggerTO read(@PathParam(\"type\") LoggerType type, @PathParam(\"name\") final String name);\r\n \r\n     /**\r\n@@ -63,9 +64,10 @@ public interface LoggerService {\n      * @param logger Logger to be created or updated.\r\n      */\r\n     @PUT\r\n-    @Path(\"{name}/level\")\r\n+    @Path(\"{type}/{name}/level\")\r\n     void update(@PathParam(\"type\") LoggerType type, @PathParam(\"name\") String name, LoggerTO logger);\r\n \r\n     @GET\r\n+    @Path(\"events\")\r\n     List<EventCategoryTO> events();\r\n }\r"},{"sha":"252b9bce9431f6804814d668dd47cdfb50c0ff03","filename":"core/src/main/java/org/apache/syncope/core/notification/NotificationManager.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca5b676d6614ce8b408ae841919ece5d85f742d2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca5b676d6614ce8b408ae841919ece5d85f742d2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fnotification%2FNotificationManager.java?ref=ca5b676d6614ce8b408ae841919ece5d85f742d2","patch":"@@ -238,10 +238,10 @@ public void createTasks(\n             }\n         }\n \n-        LOG.info(\"Search notification for [{}]{}\", attributableType, attributable);\n+        LOG.debug(\"Search notification for [{}]{}\", attributableType, attributable);\n \n         for (Notification notification : notificationDAO.findAll()) {\n-            LOG.info(\"Notification available about {}\", notification.getAbout());\n+            LOG.debug(\"Notification available about {}\", notification.getAbout());\n \n             final Set<String> events = new HashSet<String>(notification.getEvents());\n             events.retainAll(Collections.<String>singleton(LoggerEventUtils.buildEvent(\n@@ -250,8 +250,8 @@ public void createTasks(\n             if (events.isEmpty()) {\n                 LOG.debug(\"No events found about {}\", attributable);\n             } else {\n-                if (attributableType == null || attributable == null || notification.getAbout() == null || searchDAO.\n-                        matches(\n+                if (attributableType == null || attributable == null || notification.getAbout() == null\n+                        || searchDAO.matches(\n                         attributable, notification.getAbout(), AttributableUtil.getInstance(attributableType))) {\n \n                     LOG.debug(\"Creating notification task for events {} about {}\", events, attributable);"},{"sha":"f5049ebbed31c2ce1585cf87ad1b0d351f5063dc","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/PriorityPropagationTaskExecutor.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca5b676d6614ce8b408ae841919ece5d85f742d2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPriorityPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca5b676d6614ce8b408ae841919ece5d85f742d2/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPriorityPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FPriorityPropagationTaskExecutor.java?ref=ca5b676d6614ce8b408ae841919ece5d85f742d2","patch":"@@ -25,6 +25,7 @@\n import java.util.Comparator;\n import java.util.List;\n import org.apache.syncope.common.types.AuditElements;\n+import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.PropagationTaskExecStatus;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n import org.apache.syncope.core.persistence.beans.TaskExec;\n@@ -42,6 +43,8 @@ public void execute(final Collection<PropagationTask> tasks, final PropagationRe\n         final List<PropagationTask> prioritizedTasks = new ArrayList<PropagationTask>(tasks);\n         Collections.sort(prioritizedTasks, new PriorityComparator());\n \n+        Result result = Result.SUCCESS;\n+\n         try {\n             for (PropagationTask task : prioritizedTasks) {\n                 LOG.debug(\"Execution started for {}\", task);\n@@ -60,6 +63,7 @@ public void execute(final Collection<PropagationTask> tasks, final PropagationRe\n                     execStatus = PropagationTaskExecStatus.FAILURE;\n                 }\n                 if (task.getResource().isPropagationPrimary() && !execStatus.isSuccessful()) {\n+                    result = Result.FAILURE;\n                     throw new PropagationException(task.getResource().getName(), execution.getMessage());\n                 }\n             }\n@@ -69,7 +73,7 @@ public void execute(final Collection<PropagationTask> tasks, final PropagationRe\n                     null,\n                     null,\n                     null,\n-                    null,\n+                    result,\n                     reporter instanceof DefaultPropagationReporter\n                     ? ((DefaultPropagationReporter) reporter).getStatuses() : null,\n                     tasks);\n@@ -79,7 +83,7 @@ public void execute(final Collection<PropagationTask> tasks, final PropagationRe\n                     null,\n                     null,\n                     null,\n-                    null,\n+                    result,\n                     reporter instanceof DefaultPropagationReporter\n                     ? ((DefaultPropagationReporter) reporter).getStatuses() : null,\n                     tasks);"},{"sha":"50a763ccb7952dd242636020176504fc30fb580a","filename":"core/src/test/java/org/apache/syncope/core/rest/TaskTestITCase.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/ca5b676d6614ce8b408ae841919ece5d85f742d2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/ca5b676d6614ce8b408ae841919ece5d85f742d2/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FTaskTestITCase.java?ref=ca5b676d6614ce8b408ae841919ece5d85f742d2","patch":"@@ -530,6 +530,7 @@ private String createNotificationTask() {\n         NotificationTO notification = new NotificationTO();\n         notification.setTraceLevel(TraceLevel.FAILURES);\n         notification.addEvent(\"[REST]:[UserController]:[]:[create]:[SUCCESS]\");\n+        notification.addEvent(\"[REST]:[UserController]:[]:[createInternal]:[SUCCESS]\");\n \n         MembershipCond membCond = new MembershipCond();\n         membCond.setRoleId(7L);"}]}