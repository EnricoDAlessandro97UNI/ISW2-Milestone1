{"sha":"7d705ad556778dedee9d05df5aec07cdf0328716","node_id":"MDY6Q29tbWl0NjM2ODc5MDYyOjdkNzA1YWQ1NTY3NzhkZWRlZTlkMDVkZjVhZWMwN2NkZjAzMjg3MTY=","commit":{"author":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-06-30T10:15:19Z"},"committer":{"name":"Francesco Chicchiriccò","email":"ilgrosso@apache.org","date":"2014-06-30T10:15:19Z"},"message":"[SYNCOPE-164] implementation provided for core and console\n\ngit-svn-id: https://svn.apache.org/repos/asf/syncope/trunk@1606667 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"752da53b9d5d15762a71b0b4732c1a8f1f81ff6b","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/trees/752da53b9d5d15762a71b0b4732c1a8f1f81ff6b"},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/git/commits/7d705ad556778dedee9d05df5aec07cdf0328716","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7d705ad556778dedee9d05df5aec07cdf0328716","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/7d705ad556778dedee9d05df5aec07cdf0328716","comments_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/7d705ad556778dedee9d05df5aec07cdf0328716/comments","author":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"committer":{"login":"ilgrosso","id":1064664,"node_id":"MDQ6VXNlcjEwNjQ2NjQ=","avatar_url":"https://avatars.githubusercontent.com/u/1064664?v=4","gravatar_id":"","url":"https://api.github.com/users/ilgrosso","html_url":"https://github.com/ilgrosso","followers_url":"https://api.github.com/users/ilgrosso/followers","following_url":"https://api.github.com/users/ilgrosso/following{/other_user}","gists_url":"https://api.github.com/users/ilgrosso/gists{/gist_id}","starred_url":"https://api.github.com/users/ilgrosso/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ilgrosso/subscriptions","organizations_url":"https://api.github.com/users/ilgrosso/orgs","repos_url":"https://api.github.com/users/ilgrosso/repos","events_url":"https://api.github.com/users/ilgrosso/events{/privacy}","received_events_url":"https://api.github.com/users/ilgrosso/received_events","type":"User","site_admin":false},"parents":[{"sha":"6998ea18506d33bf40bbb54398af6efec215ddf3","url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/commits/6998ea18506d33bf40bbb54398af6efec215ddf3","html_url":"https://github.com/EnricoDAlessandro97UNI/syncope/commit/6998ea18506d33bf40bbb54398af6efec215ddf3"}],"stats":{"total":690,"additions":507,"deletions":183},"files":[{"sha":"15ffd3085d752f7ec4f80d920d43c9c585897f2a","filename":"common/src/main/java/org/apache/syncope/common/to/AccountPolicyTO.java","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAccountPolicyTO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAccountPolicyTO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Fto%2FAccountPolicyTO.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -18,6 +18,11 @@\n  */\r\n package org.apache.syncope.common.to;\r\n \r\n+import com.fasterxml.jackson.annotation.JsonProperty;\r\n+import java.util.ArrayList;\r\n+import java.util.List;\r\n+import javax.xml.bind.annotation.XmlElement;\r\n+import javax.xml.bind.annotation.XmlElementWrapper;\r\n import javax.xml.bind.annotation.XmlRootElement;\r\n import javax.xml.bind.annotation.XmlType;\r\n \r\n@@ -32,6 +37,8 @@ public class AccountPolicyTO extends AbstractPolicyTO {\n \r\n     private AccountPolicySpec specification;\r\n \r\n+    private final List<String> resources = new ArrayList<String>();\r\n+\r\n     public AccountPolicyTO() {\r\n         this(false);\r\n     }\r\n@@ -52,4 +59,11 @@ public void setSpecification(final AccountPolicySpec specification) {\n     public AccountPolicySpec getSpecification() {\r\n         return specification;\r\n     }\r\n+\r\n+    @XmlElementWrapper(name = \"resources\")\r\n+    @XmlElement(name = \"resource\")\r\n+    @JsonProperty(\"resources\")\r\n+    public List<String> getResources() {\r\n+        return resources;\r\n+    }\r\n }\r"},{"sha":"92c278730416122f4d1efffaa0cef837c4576414","filename":"common/src/main/java/org/apache/syncope/common/types/AccountPolicySpec.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAccountPolicySpec.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAccountPolicySpec.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FAccountPolicySpec.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -80,8 +80,7 @@ public class AccountPolicySpec extends AbstractPolicySpec {\n     private boolean allLowerCase;\r\n \r\n     /**\r\n-     * Specify if it must be propagate suspension in case of maximum subsequent\r\n-     * failed logins reached.\r\n+     * Specify if, when reached the maximum allowed number of subsequent login failures, user shall be suspended.\r\n      */\r\n     private boolean propagateSuspension;\r\n \r"},{"sha":"355350c3c07ab89e733a40898f5e42e2cde31859","filename":"common/src/main/java/org/apache/syncope/common/types/ConnectorCapability.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnectorCapability.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnectorCapability.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/common%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcommon%2Ftypes%2FConnectorCapability.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -26,6 +26,7 @@\n @XmlEnum\r\n public enum ConnectorCapability {\r\n \r\n+    AUTHENTICATE,\r\n     ONE_PHASE_CREATE,\r\n     TWO_PHASES_CREATE,\r\n     ONE_PHASE_UPDATE,\r"},{"sha":"a667e14c825025ec81a57c8d58e98141606d6fc5","filename":"console/src/main/java/org/apache/syncope/console/pages/AbstractSyncTaskModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractSyncTaskModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractSyncTaskModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FAbstractSyncTaskModalPage.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -70,7 +70,7 @@ public AbstractSyncTaskModalPage(final ModalWindow window, final AbstractSyncTas\n             protected List<String> load() {\n                 final List<String> resourceNames = new ArrayList<String>();\n \n-                for (ResourceTO resourceTO : resourceRestClient.getAllResources()) {\n+                for (ResourceTO resourceTO : resourceRestClient.getAll()) {\n \n                     resourceNames.add(resourceTO.getName());\n                 }"},{"sha":"cf30af372d2ef1cb1b5978b0bef977c8de1c394f","filename":"console/src/main/java/org/apache/syncope/console/pages/PolicyModalPage.java","status":"modified","additions":34,"deletions":22,"changes":56,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -23,9 +23,10 @@\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n+import org.apache.syncope.common.to.AbstractPolicyTO;\n import org.apache.syncope.common.to.AccountPolicyTO;\n import org.apache.syncope.common.to.PasswordPolicyTO;\n-import org.apache.syncope.common.to.AbstractPolicyTO;\n+import org.apache.syncope.common.to.ResourceTO;\n import org.apache.syncope.common.to.RoleTO;\n import org.apache.syncope.common.to.SyncPolicyTO;\n import org.apache.syncope.common.types.AbstractPolicySpec;\n@@ -37,13 +38,13 @@\n import org.apache.syncope.console.pages.panels.NotificationPanel;\n import org.apache.syncope.console.pages.panels.PolicyBeanPanel;\n import org.apache.syncope.console.rest.PolicyRestClient;\n-import org.apache.syncope.console.rest.ResourceRestClient;\n-import org.apache.syncope.console.rest.RoleRestClient;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLink;\n import org.apache.syncope.console.wicket.markup.html.form.ActionLinksPanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxDropDownChoicePanel;\n+import org.apache.syncope.console.wicket.markup.html.form.AjaxPalettePanel;\n import org.apache.syncope.console.wicket.markup.html.form.AjaxTextFieldPanel;\n import org.apache.wicket.Page;\n+import org.apache.wicket.PageReference;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.form.AjaxButton;\n import org.apache.wicket.extensions.ajax.markup.html.IndicatingAjaxButton;\n@@ -58,12 +59,14 @@\n import org.apache.wicket.markup.html.basic.Label;\n import org.apache.wicket.markup.html.form.ChoiceRenderer;\n import org.apache.wicket.markup.html.form.Form;\n+import org.apache.wicket.markup.html.panel.Fragment;\n import org.apache.wicket.markup.repeater.Item;\n import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.model.ResourceModel;\n import org.apache.wicket.model.StringResourceModel;\n+import org.apache.wicket.model.util.ListModel;\n import org.apache.wicket.spring.injection.annot.SpringBean;\n \n /**\n@@ -80,16 +83,10 @@\n     @SpringBean\n     private PolicyRestClient policyRestClient;\n \n-    @SpringBean\n-    private ResourceRestClient resourceRestClient;\n-\n-    @SpringBean\n-    private RoleRestClient roleRestClient;\n-\n-    public PolicyModalPage(final ModalWindow window, final T policyTO) {\n+    public PolicyModalPage(final PageReference pageRef, final ModalWindow window, final T policyTO) {\n         super();\n \n-        final Form form = new Form(FORM);\n+        final Form<?> form = new Form<Void>(FORM);\n         form.setOutputMarkupId(true);\n         add(form);\n \n@@ -107,7 +104,6 @@ public PolicyModalPage(final ModalWindow window, final T policyTO) {\n \n         final AjaxDropDownChoicePanel<PolicyType> type = new AjaxDropDownChoicePanel<PolicyType>(\"type\", \"type\",\n                 new PropertyModel<PolicyType>(policyTO, \"type\"));\n-\n         switch (policyTO.getType()) {\n             case GLOBAL_ACCOUNT:\n             case ACCOUNT:\n@@ -125,12 +121,28 @@ public PolicyModalPage(final ModalWindow window, final T policyTO) {\n \n             default:\n         }\n-\n         type.setChoiceRenderer(new PolicyTypeRenderer());\n-\n         type.addRequiredLabel();\n         form.add(type);\n \n+        // Authentication resources - only for AccountPolicyTO\n+        Fragment fragment;\n+        if (policyTO instanceof AccountPolicyTO) {\n+            fragment = new Fragment(\"forAccountOnly\", \"authResourcesFragment\", form);\n+\n+            final List<String> resourceNames = new ArrayList<String>();\n+            for (ResourceTO resource : resourceRestClient.getAll()) {\n+                resourceNames.add(resource.getName());\n+            }\n+            fragment.add(new AjaxPalettePanel<String>(\"authResources\",\n+                    new PropertyModel<List<String>>(policyTO, \"resources\"),\n+                    new ListModel<String>(resourceNames)));\n+        } else {\n+            fragment = new Fragment(\"forAccountOnly\", \"emptyFragment\", form);\n+        }\n+        form.add(fragment);\n+        //\n+\n         final AbstractPolicySpec policy = getPolicySpecification(policyTO);\n \n         form.add(new PolicyBeanPanel(\"panel\", policy));\n@@ -220,7 +232,7 @@ public IModel<String> model(final String object) {\n             }\n         };\n         final AjaxFallbackDefaultDataTable<String, String> resources =\n-                 new AjaxFallbackDefaultDataTable<String, String>(\"resources\", resColumns, resDataProvider, 10);\n+                new AjaxFallbackDefaultDataTable<String, String>(\"resources\", resColumns, resDataProvider, 10);\n         form.add(resources);\n \n         List<IColumn<RoleTO, String>> roleColumns = new ArrayList<IColumn<RoleTO, String>>();\n@@ -298,8 +310,9 @@ public IModel<RoleTO> model(final RoleTO object) {\n             }\n         };\n         final AjaxFallbackDefaultDataTable<RoleTO, String> roles =\n-                 new AjaxFallbackDefaultDataTable<RoleTO, String>(\"roles\", roleColumns, roleDataProvider, 10);\n+                new AjaxFallbackDefaultDataTable<RoleTO, String>(\"roles\", roleColumns, roleDataProvider, 10);\n         form.add(roles);\n+\n         mwindow.setWindowClosedCallback(new ModalWindow.WindowClosedCallback() {\n \n             private static final long serialVersionUID = 8804221891699487139L;\n@@ -330,6 +343,7 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n                     } else {\n                         policyRestClient.createPolicy(policyTO);\n                     }\n+                    ((BasePage) pageRef.getPage()).setModalResult(true);\n \n                     window.close(target);\n                 } catch (Exception e) {\n@@ -345,7 +359,6 @@ protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n                 ((NotificationPanel) getPage().get(Constants.FEEDBACK)).refresh(target);\n             }\n         };\n-\n         form.add(submit);\n \n         final IndicatingAjaxButton cancel = new IndicatingAjaxButton(CANCEL, new ResourceModel(CANCEL)) {\n@@ -361,7 +374,6 @@ protected void onSubmit(final AjaxRequestTarget target, final Form<?> form) {\n             protected void onError(final AjaxRequestTarget target, final Form<?> form) {\n             }\n         };\n-\n         cancel.setDefaultFormProcessing(false);\n         form.add(cancel);\n     }\n@@ -400,8 +412,8 @@ private void setPolicySpecification(final AbstractPolicyTO policyTO, final Abstr\n             case GLOBAL_ACCOUNT:\n             case ACCOUNT:\n                 if (!(specification instanceof AccountPolicySpec)) {\n-                    throw new ClassCastException(\"policy is type Account, but spec is not: \" + specification.getClass().\n-                            getName());\n+                    throw new ClassCastException(\"policy is type Account, but spec is not: \"\n+                            + specification.getClass().getName());\n                 }\n                 ((AccountPolicyTO) policyTO).setSpecification((AccountPolicySpec) specification);\n                 break;\n@@ -418,8 +430,8 @@ private void setPolicySpecification(final AbstractPolicyTO policyTO, final Abstr\n             case GLOBAL_SYNC:\n             case SYNC:\n                 if (!(specification instanceof SyncPolicySpec)) {\n-                    throw new ClassCastException(\"policy is type Sync, but spec is not: \" + specification.getClass().\n-                            getName());\n+                    throw new ClassCastException(\"policy is type Sync, but spec is not: \"\n+                            + specification.getClass().getName());\n                 }\n                 ((SyncPolicyTO) policyTO).setSpecification((SyncPolicySpec) specification);\n "},{"sha":"3756d7dae51a8d84f551b7b03b6f768aef3d34e9","filename":"console/src/main/java/org/apache/syncope/console/pages/Resources.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FResources.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -625,7 +625,7 @@ public ResourceTO getObject() {\n         }\n \n         public List<ResourceTO> getResourcesListDB() {\n-            return resourceRestClient.getAllResources();\n+            return resourceRestClient.getAll();\n         }\n     }\n "},{"sha":"f213eed5412300f30bea091bafa11151a3da82c5","filename":"console/src/main/java/org/apache/syncope/console/pages/StatusModalPage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FStatusModalPage.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -490,7 +490,7 @@ public AttributableStatusProvider() {\n         @Override\n         public List<StatusBean> getStatusBeans() {\n             final List<String> resources = new ArrayList<String>();\n-            for (ResourceTO resourceTO : resourceRestClient.getAllResources()) {\n+            for (ResourceTO resourceTO : resourceRestClient.getAll()) {\n                 resources.add(resourceTO.getName());\n             }\n "},{"sha":"d873419450ea615a2f269a537798f6c2b1e53a29","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/AbstractSearchPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FAbstractSearchPanel.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -179,7 +179,7 @@ protected List<String> load() {\n \n             @Override\n             protected List<String> load() {\n-                List<ResourceTO> resourceTOs = resourceRestClient.getAllResources();\n+                List<ResourceTO> resourceTOs = resourceRestClient.getAll();\n \n                 List<String> result = new ArrayList<String>(resourceTOs.size());\n "},{"sha":"553e5347afd65257a7dce1c3649de6fb98940b48","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/PoliciesPanel.java","status":"modified","additions":12,"deletions":3,"changes":15,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FPoliciesPanel.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -32,6 +32,7 @@\n import org.apache.syncope.console.commons.PreferenceManager;\n import org.apache.syncope.console.commons.SortableDataProviderComparator;\n import org.apache.syncope.console.commons.XMLRolesReader;\n+import org.apache.syncope.console.pages.BasePage;\n import org.apache.syncope.console.pages.PolicyModalPage;\n import org.apache.syncope.console.rest.PolicyRestClient;\n import org.apache.syncope.console.wicket.ajax.markup.html.ClearIndicatingAjaxLink;\n@@ -88,6 +89,8 @@ public class PoliciesPanel extends Panel {\n     @SpringBean\n     private PreferenceManager prefMan;\n \n+    private final PageReference pageRef;\n+\n     private final int paginatorRows = prefMan.getPaginatorRows(getWebRequest(), Constants.PREF_POLICY_PAGINATOR_ROWS);\n \n     protected boolean modalResult = false;\n@@ -96,7 +99,7 @@ public class PoliciesPanel extends Panel {\n \n     public PoliciesPanel(final String id, final PageReference pageRef, final PolicyType policyType) {\n         super(id);\n-\n+        this.pageRef = pageRef;\n         this.policyType = policyType;\n \n         // Modal window for editing user attributes\n@@ -164,7 +167,7 @@ public void onClick(final AjaxRequestTarget target) {\n                             @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n                             @Override\n                             public Page createPage() {\n-                                return new PolicyModalPage(mwindow, policyTO);\n+                                return new PolicyModalPage(pageRef, mwindow, policyTO);\n                             }\n                         });\n \n@@ -216,7 +219,7 @@ protected void onClickInternal(final AjaxRequestTarget target) {\n                     @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n                     @Override\n                     public Page createPage() {\n-                        return new PolicyModalPage(mwindow, getPolicyTOInstance(policyType));\n+                        return new PolicyModalPage(pageRef, mwindow, getPolicyTOInstance(policyType));\n                     }\n                 });\n \n@@ -262,6 +265,12 @@ private void setWindowClosedCallback(final ModalWindow window, final WebMarkupCo\n             @Override\n             public void onClose(final AjaxRequestTarget target) {\n                 target.add(container);\n+                BasePage configuration = ((BasePage) pageRef.getPage());\n+                if (configuration.isModalResult()) {\n+                    info(getString(Constants.OPERATION_SUCCEEDED));\n+                    configuration.getFeedbackPanel().refresh(target);\n+                    configuration.setModalResult(false);\n+                }\n             }\n         });\n     }"},{"sha":"bf29a5bf3bbd525073827d295112d05d3873403a","filename":"console/src/main/java/org/apache/syncope/console/pages/panels/ResourcesPanel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2Fpanels%2FResourcesPanel.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -98,7 +98,7 @@ private ResourcesPanel(final Builder builder) {\n         subjectTO = (AbstractSubjectTO) builder.to;\n         previousResources = new HashSet<String>(subjectTO.getResources());\n         allResources = new ArrayList<String>();\n-        for (ResourceTO resourceTO : resourceRestClient.getAllResources()) {\n+        for (ResourceTO resourceTO : resourceRestClient.getAll()) {\n             allResources.add(resourceTO.getName());\n         }\n         Collections.sort(allResources);"},{"sha":"380e7c67cd75cb9248eba83cb5f45ebeaca58c15","filename":"console/src/main/java/org/apache/syncope/console/rest/ResourceRestClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fconsole%2Frest%2FResourceRestClient.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -51,7 +51,7 @@ public List<String> getPropagationActionsClasses() {\n         return actions;\n     }\n \n-    public List<ResourceTO> getAllResources() {\n+    public List<ResourceTO> getAll() {\n         List<ResourceTO> resources = null;\n \n         try {"},{"sha":"ab87956a6d55afd5811d801de9aa9518e4a39a65","filename":"console/src/main/resources/org/apache/syncope/console/pages/Configuration.html","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FConfiguration.html?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -52,17 +52,17 @@\n       <div id=\"policies\">\n         <ul>\n           <li class=\"tabs-selected\">\n-            <a href=\"#password\"><span><wicket:message key=\"password\"/></span></a>\n+            <a href=\"#account\"><span><wicket:message key=\"account\"/></span></a>\n           </li>\n-          <li><a href=\"#account\"><span><wicket:message key=\"account\"/></span></a></li>\n+          <li><a href=\"#password\"><span><wicket:message key=\"password\"/></span></a></li>\n           <li><a href=\"#sync\"><span><wicket:message key=\"sync\"/></span></a></li>\n         </ul>\n-        <div id=\"password\" style=\"border-width: 1px;border-top-width: 0px;\">\n-          <span wicket:id=\"passwordPoliciesPanel\">[password policies]</span>\n-        </div>\n         <div id=\"account\" style=\"border-width: 1px;border-top-width: 0px;\">\n           <span wicket:id=\"accountPoliciesPanel\">[account policies]</span>\n         </div>\n+        <div id=\"password\" style=\"border-width: 1px;border-top-width: 0px;\">\n+          <span wicket:id=\"passwordPoliciesPanel\">[password policies]</span>\n+        </div>\n         <div id=\"sync\" style=\"border-width: 1px;border-top-width: 0px;\">\n           <span wicket:id=\"syncPoliciesPanel\">[sync policies]</span>\n         </div>"},{"sha":"9d9d233cc05aac8ab87734ea1f03d64c390877f0","filename":"console/src/main/resources/org/apache/syncope/console/pages/DisplayAttributesModalPage.html","status":"modified","additions":110,"deletions":108,"changes":218,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FDisplayAttributesModalPage.html?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -16,115 +16,117 @@\n specific language governing permissions and limitations\n under the License.\n -->\n-<wicket:head>\n+<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:wicket=\"http://wicket.apache.org\">\n+  <wicket:head>\n     <style>\n-        div.group{\n-            width:450px;\n-        }\n-\n-        div.group div{\n-            width:150;\n-            height: 25px;\n-            float:left;\n-        }\n-\n-        div.group div input {\n-            width: 30px;\n-        }\n-\n-        div#attributes-view {\n-            display:  block;\n-            clear:  both;\n-            float: none;\n-            overflow: auto;\n-            margin-top: 0px;\n-            margin-bottom: 20px;\n-            margin-left: 10px;\n-            margin-right: 10px;\n-        }\n-\n-        .submit{\n-            display:  block;\n-            clear:  both;\n-            float: none;\n-            margin-left: 10px;\n-        }\n-\n-        span.grouplabel{\n-            display:block;\n-            clear: both;\n-            margin-left: 10px;\n-            margin-bottom: 10px;\n-            font-weight: bold;\n-        }\n+      div.group{\n+        width:450px;\n+      }\n+\n+      div.group div{\n+        width:150;\n+        height: 25px;\n+        float:left;\n+      }\n+\n+      div.group div input {\n+        width: 30px;\n+      }\n+\n+      div#attributes-view {\n+        display:  block;\n+        clear:  both;\n+        float: none;\n+        overflow: auto;\n+        margin-top: 0px;\n+        margin-bottom: 20px;\n+        margin-left: 10px;\n+        margin-right: 10px;\n+      }\n+\n+      .submit{\n+        display:  block;\n+        clear:  both;\n+        float: none;\n+        margin-left: 10px;\n+      }\n+\n+      span.grouplabel{\n+        display:block;\n+        clear: both;\n+        margin-left: 10px;\n+        margin-bottom: 10px;\n+        font-weight: bold;\n+      }\n     </style>\n-</wicket:head>\n-<wicket:extend>\n+  </wicket:head>\n+  <wicket:extend>\n     <form wicket:id=\"form\">\n-        <div id=\"attributes-view\">\n-            <p class=\"ui-widget ui-corner-all ui-widget-header\">\n-            <wicket:message key=\"title\"/>\n-            </p>\n-\n-            <span class=\"grouplabel\"><wicket:message key=\"schemas\"/></span>\n-            <span wicket:id=\"dCheckGroup\">\n-                <div class=\"group\">\n-                    <div wicket:id=\"details\">\n-                        <input type=\"checkbox\" wicket:id=\"dcheck\"/>\n-                        <span wicket:id=\"dname\">[schema name]</span>\n-                    </div>\n-                </div>\n-            </span>\n-\n-            <span wicket:id=\"schemas\">[schemas]</span>\n-\n-            <span wicket:id=\"dschemas\">[derived schemas]</span>\n-\n-            <span wicket:id=\"vschemas\">[virtual schemas]</span>\n-\n-        </div>\n-\n-        <wicket:fragment wicket:id=\"sfragment\">\n-            <span wicket:id=\"sCheckGroup\">\n-                <div class=\"group\">\n-                    <div wicket:id=\"schemas\">\n-                        <input type=\"checkbox\" wicket:id=\"scheck\"/>\n-                        <span wicket:id=\"sname\">[schema name]</span>\n-                    </div>\n-                </div>\n-            </span>\n-        </wicket:fragment>\n-\n-        <wicket:fragment wicket:id=\"dsfragment\">\n-            <span class=\"grouplabel\"><wicket:message key=\"derSchemas\"/></span>\n-            <span wicket:id=\"dsCheckGroup\">\n-                <div class=\"group\">\n-                    <div wicket:id=\"derSchemas\">\n-                        <input type=\"checkbox\" wicket:id=\"dscheck\"/>\n-                        <span wicket:id=\"dsname\">[schema name]</span>\n-                    </div>\n-                </div>\n-            </span>\n-        </wicket:fragment>\n-\n-        <wicket:fragment wicket:id=\"vsfragment\">\n-            <span class=\"grouplabel\"><wicket:message key=\"virSchemas\"/></span>\n-            <span wicket:id=\"vsCheckGroup\">\n-                <div class=\"group\">\n-                    <div wicket:id=\"virSchemas\">\n-                        <input type=\"checkbox\" wicket:id=\"vscheck\"/>\n-                        <span wicket:id=\"vsname\">[schema name]</span>\n-                    </div>\n-                </div>\n-            </span>\n-        </wicket:fragment>\n-\n-        <wicket:fragment wicket:id=\"emptyFragment\">\n-        </wicket:fragment>\n-\n-        <div class=\"submit\">\n-            <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"submit\"/>\n-            <input type=\"button\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"cancel\"/>\n-        </div>\n+      <div id=\"attributes-view\">\n+        <p class=\"ui-widget ui-corner-all ui-widget-header\">\n+          <wicket:message key=\"title\"/>\n+        </p>\n+\n+        <span class=\"grouplabel\"><wicket:message key=\"schemas\"/></span>\n+        <span wicket:id=\"dCheckGroup\">\n+          <div class=\"group\">\n+            <div wicket:id=\"details\">\n+              <input type=\"checkbox\" wicket:id=\"dcheck\"/>\n+              <span wicket:id=\"dname\">[schema name]</span>\n+            </div>\n+          </div>\n+        </span>\n+\n+        <span wicket:id=\"schemas\">[schemas]</span>\n+\n+        <span wicket:id=\"dschemas\">[derived schemas]</span>\n+\n+        <span wicket:id=\"vschemas\">[virtual schemas]</span>\n+\n+      </div>\n+\n+      <wicket:fragment wicket:id=\"sfragment\">\n+        <span wicket:id=\"sCheckGroup\">\n+          <div class=\"group\">\n+            <div wicket:id=\"schemas\">\n+              <input type=\"checkbox\" wicket:id=\"scheck\"/>\n+              <span wicket:id=\"sname\">[schema name]</span>\n+            </div>\n+          </div>\n+        </span>\n+      </wicket:fragment>\n+\n+      <wicket:fragment wicket:id=\"dsfragment\">\n+        <span class=\"grouplabel\"><wicket:message key=\"derSchemas\"/></span>\n+        <span wicket:id=\"dsCheckGroup\">\n+          <div class=\"group\">\n+            <div wicket:id=\"derSchemas\">\n+              <input type=\"checkbox\" wicket:id=\"dscheck\"/>\n+              <span wicket:id=\"dsname\">[schema name]</span>\n+            </div>\n+          </div>\n+        </span>\n+      </wicket:fragment>\n+\n+      <wicket:fragment wicket:id=\"vsfragment\">\n+        <span class=\"grouplabel\"><wicket:message key=\"virSchemas\"/></span>\n+        <span wicket:id=\"vsCheckGroup\">\n+          <div class=\"group\">\n+            <div wicket:id=\"virSchemas\">\n+              <input type=\"checkbox\" wicket:id=\"vscheck\"/>\n+              <span wicket:id=\"vsname\">[schema name]</span>\n+            </div>\n+          </div>\n+        </span>\n+      </wicket:fragment>\n+\n+      <wicket:fragment wicket:id=\"emptyFragment\">\n+      </wicket:fragment>\n+\n+      <div class=\"submit\">\n+        <input type=\"submit\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"submit\"/>\n+        <input type=\"button\" class=\"ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\" wicket:id=\"cancel\"/>\n+      </div>\n     </form>\n-</wicket:extend>\n+  </wicket:extend>\n+</html>\n\\ No newline at end of file"},{"sha":"a05658f505e48fa975a4a3b070e19db1ef2c80c5","filename":"console/src/main/resources/org/apache/syncope/console/pages/PolicyModalPage.html","status":"modified","additions":17,"deletions":2,"changes":19,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.html","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.html","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.html?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -24,13 +24,13 @@\n       <form wicket:id=\"form\">\n         <div id=\"tabs\">\n           <ul>\n-            <li class=\"tabs-selected\"><a href=\"#description\"><span><wicket:message key=\"policyDescription\"/></span></a></li>\n+            <li class=\"tabs-selected\"><a href=\"#info\"><span><wicket:message key=\"policyInfo\"/></span></a></li>\n             <li><a href=\"#specification\"><span><wicket:message key=\"policySpecification\"/></span></a></li>\n             <li><a href=\"#resources\"><span><wicket:message key=\"resources\"/></span></a></li>\n             <li><a href=\"#roles\"><span><wicket:message key=\"roles\"/></span></a></li>\n           </ul>\n \n-          <div id=\"description\">\n+          <div id=\"info\">\n             <div id=\"formtable\">\n               <div class=\"tablerow alt\">\n                 <div class=\"tablecolumn_label short_fixedsize\">\n@@ -58,9 +58,24 @@\n                   <span wicket:id=\"description\">[description]</span>\n                 </div>\n               </div>\n+\n+              <span wicket:id=\"forAccountOnly\"/>\n             </div>\n           </div>\n \n+          <wicket:fragment wicket:id=\"authResourcesFragment\">\n+            <div class=\"tablerow\">\n+              <div class=\"tablecolumn_label short_fixedsize\">\n+                <label for=\"authResources\"><wicket:message key=\"authResources\"/></label>\n+              </div>\n+              <div class=\"tablecolumn_field medium_dynamicsize\">\n+                <span wicket:id=\"authResources\">[resources]</span>\n+              </div>\n+            </div>\n+          </wicket:fragment>\n+          <wicket:fragment wicket:id=\"emptyFragment\">\n+          </wicket:fragment>                        \n+\n           <div id=\"specification\">\n             <span wicket:id=\"panel\">[password policy panel]</span>\n           </div>"},{"sha":"3b23435ec31ebfe56bb7c2be61c45bb968f5c302","filename":"console/src/main/resources/org/apache/syncope/console/pages/PolicyModalPage.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage.properties?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -20,7 +20,7 @@ description=Description\n type=Type\n apply=Save\n \n-policyDescription = Info\n+policyInfo=Info\n policySpecification = Specification\n \n #-----------------------------\n@@ -84,3 +84,4 @@ GLOBAL_SYNC=Global Synchronization Policy\n #-----------------------------\n resources=Resources\n roles=Roles\n+authResources=Authentication resources"},{"sha":"c473556342b6229dd77c0e4a56d539c3606cb60a","filename":"console/src/main/resources/org/apache/syncope/console/pages/PolicyModalPage_it.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage_it.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage_it.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage_it.properties?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -20,7 +20,7 @@ description=Descrizione\n type=Tipo\n apply=Salva\n \n-policyDescription = Info\n+policyInfo=Info\n policySpecification = Specifica\n \n #-----------------------------\n@@ -84,3 +84,4 @@ userJavaRule=Regola di correlazione (utenti)\n roleJavaRule=Regola di correlazione (ruoli)\n resources=Risorse\n roles=Ruoli\n+authResources=Risorse di autenticazione"},{"sha":"f3d6a839e1db40a508394f675af43b79aa974b53","filename":"console/src/main/resources/org/apache/syncope/console/pages/PolicyModalPage_pt_BR.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage_pt_BR.properties","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage_pt_BR.properties","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/console%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Fsyncope%2Fconsole%2Fpages%2FPolicyModalPage_pt_BR.properties?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -20,7 +20,7 @@ description=Descri\\u00e7\\u00e3o\n type=Tipo\n apply=Salvar\n \n-policyDescription = Info\n+policyInfo=Info\n policySpecification = Especifica\\u00e7\\u00e3o\n \n #-----------------------------\n@@ -83,3 +83,4 @@ SYNC=Pol\\u00edtica de Sincroniza\\u00e7\\u00e3o\n GLOBAL_SYNC=Pol\\u00edtica Global de sincroniza\\u00e7\\u00e3o\n resources=Recursos\n roles=Fun\\u00e7\\u00f5es\n+authResources=Recursos de autentica\\u00e7\\u00e3o"},{"sha":"6863f84d187ad32bf725ea9c0e95fef63a7eb072","filename":"core/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fpom.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fpom.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fpom.xml?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -776,7 +776,7 @@ under the License.\n                   <dependency>org.apache.geronimo.specs:geronimo-jpa_2.0_spec</dependency>\n                   <dependency>org.apache.geronimo.specs:geronimo-jms_1.1_spec</dependency>\n                   <dependency>org.apache.geronimo.specs:geronimo-jta_1.1_spec</dependency>\n-                  <dependency>org.apache.geronimo.specs:geronimo-validation_1.0_spec</dependency>\n+                  <dependency>javax.validation:validation-api</dependency>\n                   <dependency>net.sourceforge.serp:serp</dependency>\n                   <dependency>commons-pool:commons-pool</dependency>\n                   <dependency>commons-dbcp:commons-dbcp</dependency>"},{"sha":"9a9376379e7f01fe7cae49b6dedb5a7443a5e82d","filename":"core/src/main/java/org/apache/syncope/core/persistence/beans/AccountPolicy.java","status":"modified","additions":49,"deletions":1,"changes":50,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAccountPolicy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAccountPolicy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fbeans%2FAccountPolicy.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -18,7 +18,15 @@\n  */\n package org.apache.syncope.core.persistence.beans;\n \n+import java.util.Collection;\n+import java.util.HashSet;\n+import java.util.Set;\n import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.JoinTable;\n+import javax.persistence.ManyToMany;\n+import javax.validation.Valid;\n \n import org.apache.syncope.common.types.PolicyType;\n \n@@ -27,15 +35,55 @@ public class AccountPolicy extends Policy {\n \n     private static final long serialVersionUID = -2767606675667839060L;\n \n+    /**\n+     * Resources for alternative user authentication: if empty, only internal storage will be used.\n+     */\n+    @ManyToMany(fetch = FetchType.EAGER)\n+    @JoinTable(joinColumns =\n+            @JoinColumn(name = \"account_policy_id\"),\n+            inverseJoinColumns =\n+            @JoinColumn(name = \"resource_name\"))\n+    @Valid\n+    private Set<ExternalResource> resources;\n+\n     public AccountPolicy() {\n         this(false);\n+        this.resources = new HashSet<ExternalResource>();\n     }\n \n-    public AccountPolicy(boolean global) {\n+    public AccountPolicy(final boolean global) {\n         super();\n \n         this.type = global\n                 ? PolicyType.GLOBAL_ACCOUNT\n                 : PolicyType.ACCOUNT;\n     }\n+\n+    public boolean addResource(final ExternalResource resource) {\n+        return resources.add(resource);\n+    }\n+\n+    public boolean removeResource(final ExternalResource resource) {\n+        return resources.remove(resource);\n+    }\n+\n+    public Set<ExternalResource> getResources() {\n+        return resources;\n+    }\n+\n+    public Set<String> getResourceNames() {\n+        Set<String> result = new HashSet<String>(resources.size());\n+        for (ExternalResource resource : resources) {\n+            result.add(resource.getName());\n+        }\n+\n+        return result;\n+    }\n+\n+    public void setResources(final Collection<ExternalResource> resources) {\n+        this.resources.clear();\n+        if (resources != null) {\n+            resources.addAll(resources);\n+        }\n+    }\n }"},{"sha":"e00b277ac64f7889a81c7d83c3ee3af21d763da6","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/PolicyDAO.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FPolicyDAO.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FPolicyDAO.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2FPolicyDAO.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -22,6 +22,7 @@\n \n import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.core.persistence.beans.AccountPolicy;\n+import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.PasswordPolicy;\n import org.apache.syncope.core.persistence.beans.Policy;\n import org.apache.syncope.core.persistence.beans.PushPolicy;\n@@ -33,6 +34,8 @@ public interface PolicyDAO extends DAO {\n \n     List<? extends Policy> find(PolicyType type);\n \n+    List<AccountPolicy> findByResource(ExternalResource resource);\n+\n     PasswordPolicy getGlobalPasswordPolicy();\n \n     AccountPolicy getGlobalAccountPolicy();"},{"sha":"e6fa29f88184748b2b33f9b41e6c3ebfc1dac618","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/PolicyDAOImpl.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FPolicyDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FPolicyDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FPolicyDAOImpl.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -23,6 +23,7 @@\n import org.apache.syncope.common.types.EntityViolationType;\n import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.core.persistence.beans.AccountPolicy;\n+import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.PasswordPolicy;\n import org.apache.syncope.core.persistence.beans.Policy;\n import org.apache.syncope.core.persistence.beans.PushPolicy;\n@@ -48,6 +49,16 @@ public List<? extends Policy> find(final PolicyType type) {\n         return query.getResultList();\n     }\n \n+    @Override\n+    public List<AccountPolicy> findByResource(final ExternalResource resource) {\n+        TypedQuery<AccountPolicy> query = entityManager.createQuery(\"SELECT e FROM \"\n+                + AccountPolicy.class.getSimpleName() + \" e \"\n+                + \"WHERE :resource MEMBER OF e.resources\", AccountPolicy.class);\n+        query.setParameter(\"resource\", resource);\n+\n+        return query.getResultList();\n+    }\n+\n     @Override\n     public PasswordPolicy getGlobalPasswordPolicy() {\n         List<? extends Policy> policies = find(PolicyType.GLOBAL_PASSWORD);"},{"sha":"1cca2bf1a90475b39f6de1fa9d7b393db726aee7","filename":"core/src/main/java/org/apache/syncope/core/persistence/dao/impl/ResourceDAOImpl.java","status":"modified","additions":11,"deletions":1,"changes":12,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fdao%2Fimpl%2FResourceDAOImpl.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -27,14 +27,17 @@\n import org.apache.syncope.common.types.PolicyType;\n import org.apache.syncope.core.persistence.beans.AbstractMapping;\n import org.apache.syncope.core.persistence.beans.AbstractMappingItem;\n+import org.apache.syncope.core.persistence.beans.AccountPolicy;\n import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.Policy;\n import org.apache.syncope.core.persistence.beans.PropagationTask;\n+import org.apache.syncope.core.persistence.beans.PushTask;\n import org.apache.syncope.core.persistence.beans.SyncTask;\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.ConnectorRegistry;\n import org.apache.syncope.core.persistence.dao.NotFoundException;\n+import org.apache.syncope.core.persistence.dao.PolicyDAO;\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n import org.apache.syncope.core.persistence.dao.TaskDAO;\n@@ -55,13 +58,16 @@ public class ResourceDAOImpl extends AbstractDAOImpl implements ResourceDAO {\n     @Autowired\n     private RoleDAO roleDAO;\n \n+    @Autowired\n+    private PolicyDAO policyDAO;\n+\n     @Autowired\n     private ConnectorRegistry connRegistry;\n \n     @Override\n     public ExternalResource find(final String name) {\n         TypedQuery<ExternalResource> query = entityManager.createQuery(\"SELECT e FROM \"\n-                + ExternalResource.class.getSimpleName() + \" e \" + \"WHERE e.name = :name\", ExternalResource.class);\n+                + ExternalResource.class.getSimpleName() + \" e WHERE e.name = :name\", ExternalResource.class);\n         query.setParameter(\"name\", name);\n \n         ExternalResource result = null;\n@@ -195,13 +201,17 @@ public void delete(final String name) {\n \n         taskDAO.deleteAll(resource, PropagationTask.class);\n         taskDAO.deleteAll(resource, SyncTask.class);\n+        taskDAO.deleteAll(resource, PushTask.class);\n \n         for (SyncopeUser user : userDAO.findByResource(resource)) {\n             user.removeResource(resource);\n         }\n         for (SyncopeRole role : roleDAO.findByResource(resource)) {\n             role.removeResource(resource);\n         }\n+        for (AccountPolicy policy : policyDAO.findByResource(resource)) {\n+            policy.removeResource(resource);\n+        }\n \n         if (resource.getConnector() != null && resource.getConnector().getResources() != null\n                 && !resource.getConnector().getResources().isEmpty()) {"},{"sha":"4555e985f6619722d2d6278ee4ef618dc1f8c404","filename":"core/src/main/java/org/apache/syncope/core/persistence/validation/entity/SyncopeUserValidator.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserValidator.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserValidator.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpersistence%2Fvalidation%2Fentity%2FSyncopeUserValidator.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -169,7 +169,7 @@ private List<PasswordPolicy> getPasswordPolicies(final SyncopeUser user) {\n     private List<AccountPolicy> getAccountPolicies(final SyncopeUser user) {\n         final List<AccountPolicy> policies = new ArrayList<AccountPolicy>();\n \n-        // Add global policy\n+        // add global policy\n         AccountPolicy policy = policyDAO.getGlobalAccountPolicy();\n         if (policy != null) {\n             policies.add(policy);"},{"sha":"66196b87c4efee96e5b57184017d367a00542029","filename":"core/src/main/java/org/apache/syncope/core/propagation/Connector.java","status":"modified","additions":19,"deletions":8,"changes":27,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnector.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnector.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2FConnector.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -40,36 +40,46 @@\n public interface Connector {\n \n     /**\n-     * Create user on a connector instance.\n+     * Authenticate user on a connector instance.\n+     *\n+     * @param username the name based credential for authentication\n+     * @param password the password based credential for authentication\n+     * @param options ConnId's OperationOptions\n+     * @return Uid of the account that was used to authenticate\n+     */\n+    Uid authenticate(String username, String password, OperationOptions options);\n+\n+    /**\n+     * Create user / role on a connector instance.\n      *\n      * @param propagationMode propagation mode\n      * @param objectClass ConnId's object class\n      * @param attrs attributes for creation\n      * @param options ConnId's OperationOptions\n      * @param propagationAttempted if creation is actually performed (based on connector instance's capabilities)\n-     * @return Uid for created user\n+     * @return Uid for created object\n      */\n     Uid create(PropagationMode propagationMode, ObjectClass objectClass,\n             Set<Attribute> attrs, OperationOptions options,\n             Set<String> propagationAttempted);\n \n     /**\n-     * Update user on a connector instance.\n+     * Update user / role on a connector instance.\n      *\n      * @param propagationMode propagation mode\n      * @param objectClass ConnId's object class\n      * @param uid user to be updated\n      * @param attrs attributes for update\n      * @param options ConnId's OperationOptions\n      * @param propagationAttempted if update is actually performed (based on connector instance's capabilities)\n-     * @return Uid for created user\n+     * @return Uid for updated object\n      */\n     Uid update(PropagationMode propagationMode, ObjectClass objectClass,\n             Uid uid, Set<Attribute> attrs, OperationOptions options,\n             Set<String> propagationAttempted);\n \n     /**\n-     * Delete user on a connector instance.\n+     * Delete user / role on a connector instance.\n      *\n      * @param propagationMode propagation mode\n      * @param objectClass ConnId's object class\n@@ -81,7 +91,7 @@ void delete(PropagationMode propagationMode, ObjectClass objectClass,\n             Uid uid, OperationOptions options, Set<String> propagationAttempted);\n \n     /**\n-     * Sync users from a connector instance.\n+     * Sync users / roles from a connector instance.\n      *\n      * @param objectClass ConnId's object class\n      * @param token to be passed to the underlying connector\n@@ -155,6 +165,7 @@ ConnectorObject getObject(PropagationMode propagationMode,\n     Attribute getObjectAttribute(ObjectClass objectClass, Uid uid, OperationOptions options, String attributeName);\n \n     /**\n+     * Read attributes for a given connector object.\n      *\n      * @param objectClass ConnId's object class\n      * @param uid ConnId's Uid\n@@ -173,11 +184,11 @@ ConnectorObject getObject(PropagationMode propagationMode,\n \n     /**\n      * Return ConnId's object classes supported by this connector.\n-     * \n+     *\n      * @return supported object classes\n      */\n     Set<ObjectClass> getSupportedObjectClasses();\n-    \n+\n     /**\n      * Validate a connector instance.\n      */"},{"sha":"9b7189f7d004c91d5d7113ec233bb79738f0f7ba","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/AbstractPropagationTaskExecutor.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAbstractPropagationTaskExecutor.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -75,10 +75,10 @@ public abstract class AbstractPropagationTaskExecutor implements PropagationTask\n     protected static final Logger LOG = LoggerFactory.getLogger(AbstractPropagationTaskExecutor.class);\n \n     /**\n-     * Connector instance loader.\n+     * Connector factory.\n      */\n     @Autowired\n-    protected ConnectorFactory connLoader;\n+    protected ConnectorFactory connFactory;\n \n     /**\n      * ConnObjectUtil.\n@@ -342,7 +342,7 @@ public TaskExec execute(final PropagationTask task, final PropagationReporter re\n         Connector connector = null;\n         Result result;\n         try {\n-            connector = connLoader.getConnector(task.getResource());\n+            connector = connFactory.getConnector(task.getResource());\n \n             // Try to read remote object (user / group) BEFORE any actual operation\n             beforeObj = getRemoteObject(task, connector, false);"},{"sha":"a91a364fab4f4f078c42bea8c7a8681d7e593c0c","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/AsyncConnectorFacade.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAsyncConnectorFacade.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAsyncConnectorFacade.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FAsyncConnectorFacade.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -21,6 +21,7 @@\n import java.util.HashSet;\n import java.util.Set;\n import java.util.concurrent.Future;\n+import org.identityconnectors.common.security.GuardedString;\n import org.identityconnectors.framework.api.ConnectorFacade;\n import org.identityconnectors.framework.common.objects.Attribute;\n import org.identityconnectors.framework.common.objects.AttributeInfo;\n@@ -48,6 +49,16 @@ public class AsyncConnectorFacade {\n      */\n     private static final Logger LOG = LoggerFactory.getLogger(AsyncConnectorFacade.class);\n \n+    @Async\n+    public Future<Uid> authenticate(\n+            final ConnectorFacade connector,\n+            final String username,\n+            final GuardedString password,\n+            final OperationOptions options) {\n+\n+        return new AsyncResult<Uid>(connector.authenticate(ObjectClass.ACCOUNT, username, password, options));\n+    }\n+\n     @Async\n     public Future<Uid> create(\n             final ConnectorFacade connector,"},{"sha":"e244199ade83db5412efcee31c09bb844397a355","filename":"core/src/main/java/org/apache/syncope/core/propagation/impl/ConnectorFacadeProxy.java","status":"modified","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FConnectorFacadeProxy.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FConnectorFacadeProxy.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fpropagation%2Fimpl%2FConnectorFacadeProxy.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -131,6 +131,34 @@ public ConnectorFacadeProxy(final ConnInstance connInstance) {\n         connector.validate();\n     }\n \n+    @Override\n+    public Uid authenticate(final String username, final String password, final OperationOptions options) {\n+        Uid result = null;\n+\n+        if (activeConnInstance.getCapabilities().contains(ConnectorCapability.AUTHENTICATE)) {\n+            final Future<Uid> future = asyncFacade.authenticate(\n+                    connector, username, new GuardedString(password.toCharArray()), options);\n+            try {\n+                result = future.get(activeConnInstance.getConnRequestTimeout(), TimeUnit.SECONDS);\n+            } catch (java.util.concurrent.TimeoutException e) {\n+                future.cancel(true);\n+                throw new TimeoutException(\"Request timeout\");\n+            } catch (Exception e) {\n+                LOG.error(\"Connector request execution failure\", e);\n+                if (e.getCause() instanceof RuntimeException) {\n+                    throw (RuntimeException) e.getCause();\n+                } else {\n+                    throw new IllegalArgumentException(e.getCause());\n+                }\n+            }\n+        } else {\n+            LOG.info(\"Authenticate was attempted, although the connector only has these capabilities: {}. No action.\",\n+                    activeConnInstance.getCapabilities());\n+        }\n+\n+        return result;\n+    }\n+\n     @Override\n     public Uid create(final PropagationMode propagationMode, final ObjectClass objectClass, final Set<Attribute> attrs,\n             final OperationOptions options, final Set<String> propagationAttempted) {"},{"sha":"9b8f45f1d40c1211f82f15ef4432dec9204ca6b0","filename":"core/src/main/java/org/apache/syncope/core/rest/data/PolicyDataBinder.java","status":"modified","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FPolicyDataBinder.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FPolicyDataBinder.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2Fdata%2FPolicyDataBinder.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -36,12 +36,19 @@\n import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.dao.ResourceDAO;\n import org.apache.syncope.core.persistence.dao.RoleDAO;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n @Component\n public class PolicyDataBinder {\n \n+    /**\n+     * Logger.\n+     */\n+    protected static final Logger LOG = LoggerFactory.getLogger(PolicyDataBinder.class);\n+\n     @Autowired\n     private ResourceDAO resourceDAO;\n \n@@ -95,6 +102,7 @@ public <T extends AbstractPolicyTO> T getPolicyTO(final Policy policy) {\n                 }\n                 policyTO = (T) new AccountPolicyTO(isGlobal);\n                 ((AccountPolicyTO) policyTO).setSpecification((AccountPolicySpec) policy.getSpecification());\n+                ((AccountPolicyTO) policyTO).getResources().addAll(((AccountPolicy) policy).getResourceNames());\n                 break;\n \n             case GLOBAL_SYNC:\n@@ -132,6 +140,15 @@ public <T extends AbstractPolicyTO> T getPolicyTO(final Policy policy) {\n         return policyTO;\n     }\n \n+    private ExternalResource getResource(final String resourceName) {\n+        ExternalResource resource = resourceDAO.find(resourceName);\n+        if (resource == null) {\n+            LOG.debug(\"Ignoring invalid resource {} \", resourceName);\n+        }\n+\n+        return resource;\n+    }\n+\n     @SuppressWarnings(\"unchecked\")\n     public <T extends Policy> T getPolicy(T policy, final AbstractPolicyTO policyTO) {\n         if (policy != null && policy.getType() != policyTO.getType()) {\n@@ -165,6 +182,15 @@ public <T extends Policy> T getPolicy(T policy, final AbstractPolicyTO policyTO)\n                     policy = (T) new AccountPolicy(isGlobal);\n                 }\n                 policy.setSpecification(((AccountPolicyTO) policyTO).getSpecification());\n+\n+                ((AccountPolicy) policy).getResources().clear();\n+                for (String resourceName : ((AccountPolicyTO) policyTO).getResources()) {\n+                    ExternalResource resource = getResource(resourceName);\n+\n+                    if (resource != null) {\n+                        ((AccountPolicy) policy).addResource(resource);\n+                    }\n+                }\n                 break;\n \n             case GLOBAL_SYNC:"},{"sha":"041ce56143db9633644f415ef13bc55a44a2959b","filename":"core/src/main/java/org/apache/syncope/core/security/SyncopeAuthenticationProvider.java","status":"modified","additions":80,"deletions":8,"changes":88,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsecurity%2FSyncopeAuthenticationProvider.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -19,16 +19,27 @@\n package org.apache.syncope.core.security;\n \n import java.util.Date;\n+import java.util.Iterator;\n+import java.util.Set;\n import javax.annotation.Resource;\n+import org.apache.syncope.common.types.AttributableType;\n import org.apache.syncope.common.types.AuditElements;\n import org.apache.syncope.common.types.AuditElements.Result;\n import org.apache.syncope.common.types.CipherAlgorithm;\n import org.apache.syncope.core.audit.AuditManager;\n+import org.apache.syncope.core.persistence.beans.AccountPolicy;\n+import org.apache.syncope.core.persistence.beans.ExternalResource;\n import org.apache.syncope.core.persistence.beans.conf.CAttr;\n+import org.apache.syncope.core.persistence.beans.role.SyncopeRole;\n import org.apache.syncope.core.persistence.beans.user.SyncopeUser;\n import org.apache.syncope.core.persistence.dao.ConfDAO;\n+import org.apache.syncope.core.persistence.dao.PolicyDAO;\n import org.apache.syncope.core.persistence.dao.UserDAO;\n+import org.apache.syncope.core.propagation.ConnectorFactory;\n+import org.apache.syncope.core.util.AttributableUtil;\n import org.apache.syncope.core.util.Encryptor;\n+import org.apache.syncope.core.util.MappingUtil;\n+import org.identityconnectors.framework.common.objects.Uid;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -58,6 +69,12 @@ public class SyncopeAuthenticationProvider implements AuthenticationProvider {\n     @Autowired\n     private UserDAO userDAO;\n \n+    @Autowired\n+    private PolicyDAO policyDAO;\n+\n+    @Autowired\n+    private ConnectorFactory connFactory;\n+\n     @Resource(name = \"adminUser\")\n     private String adminUser;\n \n@@ -111,7 +128,7 @@ public Authentication authenticate(final Authentication authentication)\n         if (anonymousUser.equals(username)) {\n             authenticated = authentication.getCredentials().toString().equals(anonymousKey);\n         } else if (adminUser.equals(username)) {\n-            authenticated = authenticate(\n+            authenticated = encryptor.verify(\n                     authentication.getCredentials().toString(),\n                     CipherAlgorithm.valueOf(adminPasswordAlgorithm),\n                     adminPassword);\n@@ -130,10 +147,7 @@ public Authentication authenticate(final Authentication authentication)\n                     }\n                 }\n \n-                authenticated = authenticate(\n-                        authentication.getCredentials().toString(),\n-                        user.getCipherAlgorithm(),\n-                        user.getPassword());\n+                authenticated = authenticate(user, authentication.getCredentials().toString());\n             }\n         }\n \n@@ -193,10 +207,68 @@ public Authentication authenticate(final Authentication authentication)\n         return token;\n     }\n \n-    protected boolean authenticate(final String password, final CipherAlgorithm cipherAlgorithm,\n-            final String digestedPassword) {\n+    protected Set<ExternalResource> getPassthroughResources(final SyncopeUser user) {\n+        Set<ExternalResource> result = null;\n+\n+        // 1. look for directly assigned resources, pick the ones whose account policy has authentication resources\n+        for (ExternalResource resource : user.getOwnResources()) {\n+            if (resource.getAccountPolicy() != null && !resource.getAccountPolicy().getResources().isEmpty()) {\n+                if (result == null) {\n+                    result = resource.getAccountPolicy().getResources();\n+                } else {\n+                    result.retainAll(resource.getAccountPolicy().getResources());\n+                }\n+            }\n+        }\n+\n+        // 2. look for owned roles, pick the ones whose account policy has authentication resources\n+        for (SyncopeRole role : user.getRoles()) {\n+            if (role.getAccountPolicy() != null && !role.getAccountPolicy().getResources().isEmpty()) {\n+                if (result == null) {\n+                    result = role.getAccountPolicy().getResources();\n+                } else {\n+                    result.retainAll(role.getAccountPolicy().getResources());\n+                }\n+            }\n+        }\n+\n+        // 3. look for global account policy (if defined)\n+        AccountPolicy global = policyDAO.getGlobalAccountPolicy();\n+        if (global != null && !global.getResources().isEmpty()) {\n+            if (result == null) {\n+                result = global.getResources();\n+            } else {\n+                result.retainAll(global.getResources());\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n+    protected boolean authenticate(final SyncopeUser user, final String password) {\n+        boolean authenticated = encryptor.verify(password, user.getCipherAlgorithm(), user.getPassword());\n+        LOG.debug(\"{} authenticated on internal storage: {}\", user.getUsername(), authenticated);\n+\n+        final AttributableUtil attrUtil = AttributableUtil.getInstance(AttributableType.USER);\n+        for (Iterator<ExternalResource> itor = getPassthroughResources(user).iterator();\n+                itor.hasNext() && !authenticated;) {\n+            \n+            ExternalResource resource = itor.next();\n+            String accountId = null;\n+            try {\n+                accountId = MappingUtil.getAccountIdValue(user, resource, attrUtil.getAccountIdItem(resource));\n+                Uid uid = connFactory.getConnector(resource).authenticate(accountId, password, null);\n+                if (uid != null) {\n+                    authenticated = true;\n+                }\n+            } catch (Exception e) {\n+                LOG.debug(\"Could not authenticate {} on {}\", user.getUsername(), resource.getName(), e);\n+            }\n+            LOG.debug(\"{} authenticated on {} as {}: {}\",\n+                    user.getUsername(), resource.getName(), accountId, authenticated);\n+        }\n \n-        return encryptor.verify(password, cipherAlgorithm, digestedPassword);\n+        return authenticated;\n     }\n \n     @Override"},{"sha":"e144a27846be0c0000903118e2bb93333eaad900","filename":"core/src/main/java/org/apache/syncope/core/sync/impl/DBPasswordSyncActions.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FDBPasswordSyncActions.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FDBPasswordSyncActions.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Fsync%2Fimpl%2FDBPasswordSyncActions.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -73,24 +73,24 @@ public <T extends AbstractAttributableTO> SyncDelta beforeCreate(\n \n         return delta;\n     }\n-    \n+\n     @Transactional(readOnly = true)\n     @Override\n     public <T extends AbstractAttributableTO, K extends AbstractAttributableMod> SyncDelta beforeUpdate(\n             final SyncProfile<?, ?> profile,\n             final SyncDelta delta,\n             final T subject,\n             final K subjectMod) throws JobExecutionException {\n-        \n+\n         if (subjectMod instanceof UserMod) {\n-            String modPassword = ((UserMod)subjectMod).getPassword();\n+            String modPassword = ((UserMod) subjectMod).getPassword();\n             parseEncodedPassword(modPassword, profile.getConnector());\n         }\n-        \n+\n         return delta;\n     }\n-    \n-    private void parseEncodedPassword(String password, Connector connector) {\n+\n+    private void parseEncodedPassword(final String password, final Connector connector) {\n         if (password != null) {\n             ConnInstance connInstance = connector.getActiveConnInstance();\n \n@@ -107,7 +107,7 @@ private void parseEncodedPassword(String password, Connector connector) {\n         }\n     }\n \n-    private String getCipherAlgorithm(ConnInstance connInstance) {\n+    private String getCipherAlgorithm(final ConnInstance connInstance) {\n         String cipherAlgorithm = CLEARTEXT;\n         for (Iterator<ConnConfProperty> propertyIterator = connInstance.getConfiguration().iterator();\n                 propertyIterator.hasNext();) {"},{"sha":"cca97f58d2f31f39271e7a8c2e7d5f71b80d966f","filename":"core/src/test/java/org/apache/syncope/core/rest/AuthenticationTestITCase.java","status":"modified","additions":46,"deletions":1,"changes":47,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fjava%2Forg%2Fapache%2Fsyncope%2Fcore%2Frest%2FAuthenticationTestITCase.java?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.syncope.core.rest;\n \n+import static org.apache.syncope.core.rest.AbstractTest.userService;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n@@ -52,11 +53,19 @@\n import org.apache.syncope.common.types.ClientExceptionType;\n import org.apache.syncope.common.util.CollectionWrapper;\n import org.apache.syncope.common.SyncopeClientException;\n+import org.apache.syncope.common.mod.UserMod;\n+import org.apache.syncope.common.reqres.BulkActionResult;\n+import org.apache.syncope.common.services.UserSelfService;\n+import org.apache.syncope.common.types.CipherAlgorithm;\n+import org.apache.syncope.common.types.ResourceDeassociationActionType;\n+import org.apache.syncope.common.wrap.ResourceName;\n+import org.apache.syncope.core.util.Encryptor;\n import org.apache.syncope.core.workflow.ActivitiDetector;\n import org.junit.Assume;\n import org.junit.FixMethodOrder;\n import org.junit.Test;\n import org.junit.runners.MethodSorters;\n+import org.springframework.jdbc.core.JdbcTemplate;\n \n @FixMethodOrder(MethodSorters.JVM)\n public class AuthenticationTestITCase extends AbstractTest {\n@@ -250,7 +259,8 @@ public void checkFailedLogins() {\n         assertEquals(0, getFailedLogins(userService2, userId));\n \n         // authentications failed ...\n-        UserService userService3 = clientFactory.create(userTO.getUsername(), \"wrongpwd1\").getService(UserService.class);\n+        UserService userService3 = clientFactory.create(userTO.getUsername(), \"wrongpwd1\").getService(\n+                UserService.class);\n         assertReadFails(userService3, userId);\n         assertReadFails(userService3, userId);\n \n@@ -394,4 +404,39 @@ public void issueSYNCOPE434() {\n         // 4. try to authenticate again: success\n         assertNotNull(myEntitlementService.getOwnEntitlements());\n     }\n+\n+    @Test\n+    public void issueSYNCOPE164() throws Exception {\n+        // 1. create user with db resource\n+        UserTO user = UserTestITCase.getUniqueSampleTO(\"syncope164@syncope.apache.org\");\n+        user.setPassword(\"password1\");\n+        user.getResources().add(RESOURCE_NAME_TESTDB);\n+        user = createUser(user);\n+        assertNotNull(user);\n+\n+        // 2. unlink the resource from the created user\n+        assertNotNull(userService.bulkDeassociation(user.getId(),\n+                ResourceDeassociationActionType.UNLINK,\n+                CollectionWrapper.wrap(RESOURCE_NAME_TESTDB, ResourceName.class)).\n+                readEntity(BulkActionResult.class));\n+\n+        // 3. change password on Syncope\n+        UserMod userMod = new UserMod();\n+        userMod.setId(user.getId());\n+        userMod.setPassword(\"password2\");\n+        user = updateUser(userMod);\n+        assertNotNull(user);\n+\n+        // 4. check that the db resource has still the initial password value\n+        final JdbcTemplate jdbcTemplate = new JdbcTemplate(testDataSource);\n+        String value = jdbcTemplate.queryForObject(\n+                \"SELECT PASSWORD FROM test WHERE ID=?\", String.class, user.getUsername());\n+        assertEquals(Encryptor.getInstance().encode(\"password1\", CipherAlgorithm.SHA1), value.toUpperCase());\n+\n+        // 5. successfully authenticate with old (on db resource) and new (on internal storage) password values\n+        user = clientFactory.create(user.getUsername(), \"password1\").getService(UserSelfService.class).read();\n+        assertNotNull(user);\n+        user = clientFactory.create(user.getUsername(), \"password2\").getService(UserSelfService.class).read();\n+        assertNotNull(user);\n+    }\n }"},{"sha":"af1503ac3de615b7c41c60ba36bb8f4986e66c5a","filename":"core/src/test/resources/content.xml","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/EnricoDAlessandro97UNI/syncope/blob/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","raw_url":"https://github.com/EnricoDAlessandro97UNI/syncope/raw/7d705ad556778dedee9d05df5aec07cdf0328716/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml","contents_url":"https://api.github.com/repos/EnricoDAlessandro97UNI/syncope/contents/core%2Fsrc%2Ftest%2Fresources%2Fcontent.xml?ref=7d705ad556778dedee9d05df5aec07cdf0328716","patch":"@@ -429,6 +429,7 @@ under the License.\n                 connectorName=\"org.connid.bundles.db.table.DatabaseTableConnector\"\n                 version=\"${connid.db.table.version}\"\n                 xmlConfiguration=\"%3Cset%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3Euser%3C%2Fname%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Esa%3C%2Fjava.lang.String%3E%0A%3C%2Fvalues%3E%0A%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EenabledStatusValue%3C%2Fname%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Etrue%3C%2Fjava.lang.String%3E%0A%3C%2Fvalues%3E%0A%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EstatusColumn%3C%2Fname%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Estatus%3C%2Fjava.lang.String%3E%0A%3C%2Fvalues%3E%0A%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EdisabledStatusValue%3C%2Fname%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Efalse%3C%2Fjava.lang.String%3E%0A%3C%2Fvalues%3E%0A%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EkeyColumn%3C%2Fname%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Etrue%3C%2Frequired%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Eid%3C%2Fjava.lang.String%3E%0A%3C%2Fvalues%3E%0A%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EjdbcUrlTemplate%3C%2Fname%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3E${testdb.url}%3C%2Fjava.lang.String%3E%0A%3C%2Fvalues%3E%0A%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EpasswordColumn%3C%2Fname%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Epassword%3C%2Fjava.lang.String%3E%0A%3C%2Fvalues%3E%0A%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EdefaultStatusValue%3C%2Fname%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Etrue%3C%2Fjava.lang.String%3E%0A%3C%2Fvalues%3E%0A%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3Etable%3C%2Fname%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Etrue%3C%2Frequired%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Etest%3C%2Fjava.lang.String%3E%0A%3C%2Fvalues%3E%0A%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3Epassword%3C%2Fname%3E%0A%20%20%20%20%20%20%3Ctype%3Eorg.identityconnectors.common.security.GuardedString%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Esa%3C%2Fjava.lang.String%3E%0A%3C%2Fvalues%3E%0A%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EjdbcDriver%3C%2Fname%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3Eorg.h2.Driver%3C%2Fjava.lang.String%3E%0A%3C%2Fvalues%3E%0A%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EcipherAlgorithm%3C%2Fname%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Etrue%3C%2Frequired%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3ESHA1%3C%2Fjava.lang.String%3E%0A%3C%2Fvalues%3E%0A%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EcipherAlgorithm%3C%2Fname%3E%0A%20%20%20%20%20%20%3Ctype%3Ejava.lang.String%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Etrue%3C%2Frequired%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%0A%3Cvalues%3E%0A%3Cjava.lang.String%3ESHA1%3C%2Fjava.lang.String%3E%0A%3C%2Fvalues%3E%0A%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%3Corg.apache.syncope.common.types.ConnConfProperty%3E%0A%20%20%20%20%3Cschema%3E%0A%20%20%20%20%20%20%3Cname%3EretrievePassword%3C%2Fname%3E%0A%20%20%20%20%20%20%3Ctype%3Eboolean%3C%2Ftype%3E%0A%20%20%20%20%20%20%3Crequired%3Efalse%3C%2Frequired%3E%0A%20%20%20%20%3C%2Fschema%3E%0A%0A%3Cvalues%3E%0A%3Cstring%3Etrue%3C%2Fstring%3E%0A%3C%2Fvalues%3E%0A%0A%20%20%20%20%3Coverridable%3Efalse%3C%2Foverridable%3E%0A%20%20%3C%2Forg.apache.syncope.common.types.ConnConfProperty%3E%0A%3C%2Fset%3E\"/>\n+  <ConnInstance_capabilities ConnInstance_id=\"101\" capabilities=\"AUTHENTICATE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"101\" capabilities=\"ONE_PHASE_CREATE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"101\" capabilities=\"ONE_PHASE_UPDATE\"/>\n   <ConnInstance_capabilities ConnInstance_id=\"101\" capabilities=\"ONE_PHASE_DELETE\"/>\n@@ -613,7 +614,10 @@ under the License.\n                     propagationMode=\"TWO_PHASES\" propagationPrimary=\"0\" propagationPriority=\"0\"\n                     creator=\"admin\" lastModifier=\"admin\" \n                     creationDate=\"2010-10-20 11:00:00\" lastChangeDate=\"2010-10-20 11:00:00\"/>\n-  \n+\n+  <!-- Use resource-testdb for passthrough authentication (SYNCOPE-164) in the global account policy -->\n+  <Policy_ExternalResource account_policy_id=\"5\" resource_name=\"resource-testdb\"/>\n+    \n   <SyncopeUser_ExternalResource user_id=\"3\" resource_name=\"ws-target-resource-delete\"/>\n   <SyncopeUser_ExternalResource user_id=\"3\" resource_name=\"ws-target-resource-2\"/>\n   <SyncopeUser_ExternalResource user_id=\"3\" resource_name=\"ws-target-resource-1\"/>"}]}